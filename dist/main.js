/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./node_modules/sass/sass.dart.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/sass/sass.dart.js":
/*!****************************************!*\
  !*** ./node_modules/sass/sass.dart.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process, __dirname, __filename) {// make sure to keep this as 'var'\n// we don't want block scoping\n\nvar dartNodePreambleSelf = typeof global !== \"undefined\" ? global : window;\n\nvar self = Object.create(dartNodePreambleSelf);\n\nself.scheduleImmediate = self.setImmediate\n    ? function (cb) {\n        dartNodePreambleSelf.setImmediate(cb);\n      }\n    : function(cb) {\n        setTimeout(cb, 0);\n      };\n\n// CommonJS globals.\nself.exports = exports;\n\n// Node.js specific exports, check to see if they exist & or polyfilled\n\nif (typeof process !== \"undefined\") {\n  self.process = process;\n}\n\nif (true) {\n  self.__dirname = __dirname;\n}\n\nif (true) {\n  self.__filename = __filename;\n}\n\n// if we're running in a browser, Dart supports most of this out of box\n// make sure we only run these in Node.js environment\n\nvar dartNodeIsActuallyNode = !dartNodePreambleSelf.window\n\ntry {\n  // Check if we're in a Web Worker instead.\n  if (\"undefined\" !== typeof WorkerGlobalScope && dartNodePreambleSelf instanceof WorkerGlobalScope) {\n    dartNodeIsActuallyNode = false;\n  }\n\n  // Check if we're in Electron, with Node.js integration, and override if true.\n  if (dartNodePreambleSelf.process && dartNodePreambleSelf.process.versions && dartNodePreambleSelf.process.versions.hasOwnProperty('electron') && dartNodePreambleSelf.process.versions.hasOwnProperty('node')) {\n    dartNodeIsActuallyNode = true;\n  }\n} catch(e) {}\n\nif (dartNodeIsActuallyNode) {\n  // This line is to:\n  // 1) Prevent Webpack from bundling.\n  // 2) In Webpack on Node.js, make sure we're using the native Node.js require, which is available via __non_webpack_require__\n  // https://github.com/mbullington/node_preamble.dart/issues/18#issuecomment-527305561\n  var url = ( true ? require : undefined)(\"url\");\n\n  self.location = {\n    get href() {\n      if (url.pathToFileURL) {\n        return url.pathToFileURL(process.cwd()).href + \"/\";\n      } else {\n        // This isn't really a correct transformation, but it's the best we have\n        // for versions of Node <10.12.0 which introduced `url.pathToFileURL()`.\n        // For example, it will fail for paths that contain characters that need\n        // to be escaped in URLs.\n        return \"file://\" + (function() {\n          var cwd = process.cwd();\n          if (process.platform != \"win32\") return cwd;\n          return \"/\" + cwd.replace(/\\\\/g, \"/\");\n        })() + \"/\"\n      }\n    }\n  };\n\n  (function() {\n    function computeCurrentScript() {\n      try {\n        throw new Error();\n      } catch(e) {\n        var stack = e.stack;\n        var re = new RegExp(\"^ *at [^(]*\\\\((.*):[0-9]*:[0-9]*\\\\)$\", \"mg\");\n        var lastMatch = null;\n        do {\n          var match = re.exec(stack);\n          if (match != null) lastMatch = match;\n        } while (match != null);\n        return lastMatch[1];\n      }\n    }\n\n    var cachedCurrentScript = null;\n    self.document = {\n      get currentScript() {\n        if (cachedCurrentScript == null) {\n          cachedCurrentScript = {src: computeCurrentScript()};\n        }\n        return cachedCurrentScript;\n      }\n    };\n  })();\n\n  self.dartDeferredLibraryLoader = function(uri, successCallback, errorCallback) {\n    try {\n     load(uri);\n      successCallback();\n    } catch (error) {\n      errorCallback(error);\n    }\n  };\n}\n\nself.chokidar = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'chokidar'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nself.readline = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'readline'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nself.fs = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'fs'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n// Generated by dart2js (fast startup emitter, strong, trust primitives, omit checks, lax runtime type), the Dart to JavaScript compiler version: 2.10.4.\n// The code supports the following hooks:\n// dartPrint(message):\n//    if this function is defined it is called instead of the Dart [print]\n//    method.\n//\n// dartMainRunner(main, args):\n//    if this function is defined, the Dart [main] method will not be invoked\n//    directly. Instead, a closure that will invoke [main], and its arguments\n//    [args] is passed to [dartMainRunner].\n//\n// dartDeferredLibraryLoader(uri, successCallback, errorCallback):\n//    if this function is defined, it will be called when a deferred library\n//    is loaded. It should load and eval the javascript of `uri`, and call\n//    successCallback. If it fails to do so, it should call errorCallback with\n//    an error.\n//\n// dartCallInstrumentation(id, qualifiedName):\n//    if this function is defined, it will be called at each entry of a\n//    method or constructor. Used only when compiling programs with\n//    --experiment-call-instrumentation.\n(function dartProgram() {\n  function copyProperties(from, to) {\n    var keys = Object.keys(from);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      to[key] = from[key];\n    }\n  }\n  var supportsDirectProtoAccess = function() {\n    var cls = function() {\n    };\n    cls.prototype = {p: {}};\n    var object = new cls();\n    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))\n      return false;\n    try {\n      if (typeof navigator != \"undefined\" && typeof navigator.userAgent == \"string\" && navigator.userAgent.indexOf(\"Chrome/\") >= 0)\n        return true;\n      if (typeof version == \"function\" && version.length == 0) {\n        var v = version();\n        if (/^\\d+\\.\\d+\\.\\d+\\.\\d+$/.test(v))\n          return true;\n      }\n    } catch (_) {\n    }\n    return false;\n  }();\n  function setFunctionNamesIfNecessary(holders) {\n    function t() {\n    }\n    ;\n    if (typeof t.name == \"string\")\n      return;\n    for (var i = 0; i < holders.length; i++) {\n      var holder = holders[i];\n      var keys = Object.keys(holder);\n      for (var j = 0; j < keys.length; j++) {\n        var key = keys[j];\n        var f = holder[key];\n        if (typeof f == 'function')\n          f.name = key;\n      }\n    }\n  }\n  function inherit(cls, sup) {\n    cls.prototype.constructor = cls;\n    cls.prototype[\"$is\" + cls.name] = cls;\n    if (sup != null) {\n      if (supportsDirectProtoAccess) {\n        cls.prototype.__proto__ = sup.prototype;\n        return;\n      }\n      var clsPrototype = Object.create(sup.prototype);\n      copyProperties(cls.prototype, clsPrototype);\n      cls.prototype = clsPrototype;\n    }\n  }\n  function inheritMany(sup, classes) {\n    for (var i = 0; i < classes.length; i++)\n      inherit(classes[i], sup);\n  }\n  function mixin(cls, mixin) {\n    copyProperties(mixin.prototype, cls.prototype);\n    cls.prototype.constructor = cls;\n  }\n  function lazyOld(holder, name, getterName, initializer) {\n    var uninitializedSentinel = holder;\n    holder[name] = uninitializedSentinel;\n    holder[getterName] = function() {\n      holder[getterName] = function() {\n        H.throwCyclicInit(name);\n      };\n      var result;\n      var sentinelInProgress = initializer;\n      try {\n        if (holder[name] === uninitializedSentinel) {\n          result = holder[name] = sentinelInProgress;\n          result = holder[name] = initializer();\n        } else\n          result = holder[name];\n      } finally {\n        if (result === sentinelInProgress)\n          holder[name] = null;\n        holder[getterName] = function() {\n          return this[name];\n        };\n      }\n      return result;\n    };\n  }\n  function lazy(holder, name, getterName, initializer) {\n    var uninitializedSentinel = holder;\n    holder[name] = uninitializedSentinel;\n    holder[getterName] = function() {\n      if (holder[name] === uninitializedSentinel)\n        holder[name] = initializer();\n      holder[getterName] = function() {\n        return this[name];\n      };\n      return holder[name];\n    };\n  }\n  function makeConstList(list) {\n    list.immutable$list = Array;\n    list.fixed$length = Array;\n    return list;\n  }\n  function convertToFastObject(properties) {\n    function t() {\n    }\n    t.prototype = properties;\n    new t();\n    return properties;\n  }\n  function convertAllToFastObject(arrayOfObjects) {\n    for (var i = 0; i < arrayOfObjects.length; ++i)\n      convertToFastObject(arrayOfObjects[i]);\n  }\n  var functionCounter = 0;\n  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {\n    return isIntercepted ? new Function(\"funcs\", \"applyTrampolineIndex\", \"reflectionInfo\", \"name\", \"H\", \"c\", \"return function tearOff_\" + name + functionCounter++ + \"(receiver) {\" + \"if (c === null) c = \" + \"H.closureFromTearOff\" + \"(\" + \"this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);\" + \"return new c(this, funcs[0], receiver, name);\" + \"}\")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function(\"funcs\", \"applyTrampolineIndex\", \"reflectionInfo\", \"name\", \"H\", \"c\", \"return function tearOff_\" + name + functionCounter++ + \"() {\" + \"if (c === null) c = \" + \"H.closureFromTearOff\" + \"(\" + \"this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);\" + \"return new c(this, funcs[0], null, name);\" + \"}\")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);\n  }\n  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {\n    var cache = null;\n    return isStatic ? function() {\n      if (cache === null)\n        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;\n      return cache;\n    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);\n  }\n  var typesOffset = 0;\n  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {\n    var funs = [];\n    for (var i = 0; i < funsOrNames.length; i++) {\n      var fun = funsOrNames[i];\n      if (typeof fun == 'string')\n        fun = container[fun];\n      fun.$callName = callNames[i];\n      funs.push(fun);\n    }\n    var fun = funs[0];\n    fun.$requiredArgCount = requiredParameterCount;\n    fun.$defaultValues = optionalParameterDefaultValues;\n    var reflectionInfo = funType;\n    if (typeof reflectionInfo == \"number\")\n      reflectionInfo += typesOffset;\n    var name = funsOrNames[0];\n    fun.$stubName = name;\n    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);\n    container[getterName] = getterFunction;\n    if (isStatic)\n      fun.$tearOff = getterFunction;\n  }\n  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {\n    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);\n  }\n  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {\n    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);\n  }\n  function setOrUpdateInterceptorsByTag(newTags) {\n    var tags = init.interceptorsByTag;\n    if (!tags) {\n      init.interceptorsByTag = newTags;\n      return;\n    }\n    copyProperties(newTags, tags);\n  }\n  function setOrUpdateLeafTags(newTags) {\n    var tags = init.leafTags;\n    if (!tags) {\n      init.leafTags = newTags;\n      return;\n    }\n    copyProperties(newTags, tags);\n  }\n  function updateTypes(newTypes) {\n    var types = init.types;\n    var length = types.length;\n    types.push.apply(types, newTypes);\n    return length;\n  }\n  function updateHolder(holder, newHolder) {\n    copyProperties(newHolder, holder);\n    return holder;\n  }\n  var hunkHelpers = function() {\n    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {\n        return function(container, getterName, name, funType) {\n          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);\n        };\n      },\n      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {\n        return function(container, getterName, name, funType) {\n          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);\n        };\n      };\n    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, [\"call$0\"], 0), _instance_1u: mkInstance(0, 1, null, [\"call$1\"], 0), _instance_2u: mkInstance(0, 2, null, [\"call$2\"], 0), _instance_0i: mkInstance(1, 0, null, [\"call$0\"], 0), _instance_1i: mkInstance(1, 1, null, [\"call$1\"], 0), _instance_2i: mkInstance(1, 2, null, [\"call$2\"], 0), _static_0: mkStatic(0, null, [\"call$0\"], 0), _static_1: mkStatic(1, null, [\"call$1\"], 0), _static_2: mkStatic(2, null, [\"call$2\"], 0), makeConstList: makeConstList, lazy: lazy, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};\n  }();\n  function initializeDeferredHunk(hunk) {\n    typesOffset = init.types.length;\n    hunk(hunkHelpers, init, holders, $);\n  }\n  function getGlobalFromName(name) {\n    for (var i = 0; i < holders.length; i++) {\n      if (holders[i] == C)\n        continue;\n      if (holders[i][name])\n        return holders[i][name];\n    }\n  }\n  var C = {},\n  H = {JS_CONST: function JS_CONST() {\n    },\n    CastIterable_CastIterable: function(source, $S, $T) {\n      if ($S._eval$1(\"EfficientLengthIterable<0>\")._is(source))\n        return new H._EfficientLengthCastIterable(source, $S._eval$1(\"@<0>\")._bind$1($T)._eval$1(\"_EfficientLengthCastIterable<1,2>\"));\n      return new H.CastIterable(source, $S._eval$1(\"@<0>\")._bind$1($T)._eval$1(\"CastIterable<1,2>\"));\n    },\n    LateInitializationErrorImpl$: function(_message) {\n      return new H.LateInitializationErrorImpl(_message);\n    },\n    hexDigitValue: function(char) {\n      var letter,\n        digit = char ^ 48;\n      if (digit <= 9)\n        return digit;\n      letter = char | 32;\n      if (97 <= letter && letter <= 102)\n        return letter - 87;\n      return -1;\n    },\n    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {\n      P.RangeError_checkNotNegative(_start, \"start\");\n      if (_endOrLength != null) {\n        P.RangeError_checkNotNegative(_endOrLength, \"end\");\n        if (_start > _endOrLength)\n          H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, \"start\", null));\n      }\n      return new H.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1(\"SubListIterable<0>\"));\n    },\n    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {\n      if (type$.EfficientLengthIterable_dynamic._is(iterable))\n        return new H.EfficientLengthMappedIterable(iterable, $function, $S._eval$1(\"@<0>\")._bind$1($T)._eval$1(\"EfficientLengthMappedIterable<1,2>\"));\n      return new H.MappedIterable(iterable, $function, $S._eval$1(\"@<0>\")._bind$1($T)._eval$1(\"MappedIterable<1,2>\"));\n    },\n    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {\n      var _s9_ = \"takeCount\";\n      P.ArgumentError_checkNotNull(takeCount, _s9_);\n      P.RangeError_checkNotNegative(takeCount, _s9_);\n      if (type$.EfficientLengthIterable_dynamic._is(iterable))\n        return new H.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1(\"EfficientLengthTakeIterable<0>\"));\n      return new H.TakeIterable(iterable, takeCount, $E._eval$1(\"TakeIterable<0>\"));\n    },\n    SkipIterable_SkipIterable: function(iterable, count, $E) {\n      var _s5_ = \"count\";\n      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {\n        P.ArgumentError_checkNotNull(count, _s5_);\n        P.RangeError_checkNotNegative(count, _s5_);\n        return new H.EfficientLengthSkipIterable(iterable, count, $E._eval$1(\"EfficientLengthSkipIterable<0>\"));\n      }\n      P.ArgumentError_checkNotNull(count, _s5_);\n      P.RangeError_checkNotNegative(count, _s5_);\n      return new H.SkipIterable(iterable, count, $E._eval$1(\"SkipIterable<0>\"));\n    },\n    FollowedByIterable_FollowedByIterable$firstEfficient: function(first, second, $E) {\n      if ($E._eval$1(\"EfficientLengthIterable<0>\")._is(second))\n        return new H.EfficientLengthFollowedByIterable(first, second, $E._eval$1(\"EfficientLengthFollowedByIterable<0>\"));\n      return new H.FollowedByIterable(first, second, $E._eval$1(\"FollowedByIterable<0>\"));\n    },\n    IterableElementError_noElement: function() {\n      return new P.StateError(\"No element\");\n    },\n    IterableElementError_tooMany: function() {\n      return new P.StateError(\"Too many elements\");\n    },\n    IterableElementError_tooFew: function() {\n      return new P.StateError(\"Too few elements\");\n    },\n    Sort_sort: function(a, compare) {\n      H.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare);\n    },\n    Sort__doSort: function(a, left, right, compare) {\n      if (right - left <= 32)\n        H.Sort__insertionSort(a, left, right, compare);\n      else\n        H.Sort__dualPivotQuicksort(a, left, right, compare);\n    },\n    Sort__insertionSort: function(a, left, right, compare) {\n      var i, t1, el, j, j0;\n      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {\n        el = t1.$index(a, i);\n        j = i;\n        while (true) {\n          if (!(j > left && compare.call$2(t1.$index(a, j - 1), el) > 0))\n            break;\n          j0 = j - 1;\n          t1.$indexSet(a, j, t1.$index(a, j0));\n          j = j0;\n        }\n        t1.$indexSet(a, j, el);\n      }\n    },\n    Sort__dualPivotQuicksort: function(a, left, right, compare) {\n      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal, t2,\n        sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6),\n        index1 = left + sixth,\n        index5 = right - sixth,\n        index3 = C.JSInt_methods._tdivFast$1(left + right, 2),\n        index2 = index3 - sixth,\n        index4 = index3 + sixth,\n        t1 = J.getInterceptor$asx(a),\n        el1 = t1.$index(a, index1),\n        el2 = t1.$index(a, index2),\n        el3 = t1.$index(a, index3),\n        el4 = t1.$index(a, index4),\n        el5 = t1.$index(a, index5);\n      if (compare.call$2(el1, el2) > 0) {\n        t0 = el2;\n        el2 = el1;\n        el1 = t0;\n      }\n      if (compare.call$2(el4, el5) > 0) {\n        t0 = el5;\n        el5 = el4;\n        el4 = t0;\n      }\n      if (compare.call$2(el1, el3) > 0) {\n        t0 = el3;\n        el3 = el1;\n        el1 = t0;\n      }\n      if (compare.call$2(el2, el3) > 0) {\n        t0 = el3;\n        el3 = el2;\n        el2 = t0;\n      }\n      if (compare.call$2(el1, el4) > 0) {\n        t0 = el4;\n        el4 = el1;\n        el1 = t0;\n      }\n      if (compare.call$2(el3, el4) > 0) {\n        t0 = el4;\n        el4 = el3;\n        el3 = t0;\n      }\n      if (compare.call$2(el2, el5) > 0) {\n        t0 = el5;\n        el5 = el2;\n        el2 = t0;\n      }\n      if (compare.call$2(el2, el3) > 0) {\n        t0 = el3;\n        el3 = el2;\n        el2 = t0;\n      }\n      if (compare.call$2(el4, el5) > 0) {\n        t0 = el5;\n        el5 = el4;\n        el4 = t0;\n      }\n      t1.$indexSet(a, index1, el1);\n      t1.$indexSet(a, index3, el3);\n      t1.$indexSet(a, index5, el5);\n      t1.$indexSet(a, index2, t1.$index(a, left));\n      t1.$indexSet(a, index4, t1.$index(a, right));\n      less = left + 1;\n      great = right - 1;\n      if (J.$eq$(compare.call$2(el2, el4), 0)) {\n        for (k = less; k <= great; ++k) {\n          ak = t1.$index(a, k);\n          comp = compare.call$2(ak, el2);\n          if (comp === 0)\n            continue;\n          if (comp < 0) {\n            if (k !== less) {\n              t1.$indexSet(a, k, t1.$index(a, less));\n              t1.$indexSet(a, less, ak);\n            }\n            ++less;\n          } else\n            for (; true;) {\n              comp = compare.call$2(t1.$index(a, great), el2);\n              if (comp > 0) {\n                --great;\n                continue;\n              } else {\n                great0 = great - 1;\n                if (comp < 0) {\n                  t1.$indexSet(a, k, t1.$index(a, less));\n                  less0 = less + 1;\n                  t1.$indexSet(a, less, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                  great = great0;\n                  less = less0;\n                  break;\n                } else {\n                  t1.$indexSet(a, k, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                  great = great0;\n                  break;\n                }\n              }\n            }\n        }\n        pivots_are_equal = true;\n      } else {\n        for (k = less; k <= great; ++k) {\n          ak = t1.$index(a, k);\n          if (compare.call$2(ak, el2) < 0) {\n            if (k !== less) {\n              t1.$indexSet(a, k, t1.$index(a, less));\n              t1.$indexSet(a, less, ak);\n            }\n            ++less;\n          } else if (compare.call$2(ak, el4) > 0)\n            for (; true;)\n              if (compare.call$2(t1.$index(a, great), el4) > 0) {\n                --great;\n                if (great < k)\n                  break;\n                continue;\n              } else {\n                great0 = great - 1;\n                if (compare.call$2(t1.$index(a, great), el2) < 0) {\n                  t1.$indexSet(a, k, t1.$index(a, less));\n                  less0 = less + 1;\n                  t1.$indexSet(a, less, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                  less = less0;\n                } else {\n                  t1.$indexSet(a, k, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                }\n                great = great0;\n                break;\n              }\n        }\n        pivots_are_equal = false;\n      }\n      t2 = less - 1;\n      t1.$indexSet(a, left, t1.$index(a, t2));\n      t1.$indexSet(a, t2, el2);\n      t2 = great + 1;\n      t1.$indexSet(a, right, t1.$index(a, t2));\n      t1.$indexSet(a, t2, el4);\n      H.Sort__doSort(a, left, less - 2, compare);\n      H.Sort__doSort(a, great + 2, right, compare);\n      if (pivots_are_equal)\n        return;\n      if (less < index1 && great > index5) {\n        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)\n          ++less;\n        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)\n          --great;\n        for (k = less; k <= great; ++k) {\n          ak = t1.$index(a, k);\n          if (compare.call$2(ak, el2) === 0) {\n            if (k !== less) {\n              t1.$indexSet(a, k, t1.$index(a, less));\n              t1.$indexSet(a, less, ak);\n            }\n            ++less;\n          } else if (compare.call$2(ak, el4) === 0)\n            for (; true;)\n              if (compare.call$2(t1.$index(a, great), el4) === 0) {\n                --great;\n                if (great < k)\n                  break;\n                continue;\n              } else {\n                great0 = great - 1;\n                if (compare.call$2(t1.$index(a, great), el2) < 0) {\n                  t1.$indexSet(a, k, t1.$index(a, less));\n                  less0 = less + 1;\n                  t1.$indexSet(a, less, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                  less = less0;\n                } else {\n                  t1.$indexSet(a, k, t1.$index(a, great));\n                  t1.$indexSet(a, great, ak);\n                }\n                great = great0;\n                break;\n              }\n        }\n        H.Sort__doSort(a, less, great, compare);\n      } else\n        H.Sort__doSort(a, less, great, compare);\n    },\n    _CastIterableBase: function _CastIterableBase() {\n    },\n    CastIterator: function CastIterator(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    CastIterable: function CastIterable(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    _CastListBase: function _CastListBase() {\n    },\n    _CastListBase_sort_closure: function _CastListBase_sort_closure(t0, t1) {\n      this.$this = t0;\n      this.compare = t1;\n    },\n    CastList: function CastList(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    CastSet: function CastSet(t0, t1, t2) {\n      this._source = t0;\n      this._emptySet = t1;\n      this.$ti = t2;\n    },\n    CastQueue: function CastQueue(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    LateInitializationErrorImpl: function LateInitializationErrorImpl(t0) {\n      this.__internal$_message = t0;\n    },\n    CodeUnits: function CodeUnits(t0) {\n      this._string = t0;\n    },\n    EfficientLengthIterable: function EfficientLengthIterable() {\n    },\n    ListIterable: function ListIterable() {\n    },\n    SubListIterable: function SubListIterable(t0, t1, t2, t3) {\n      var _ = this;\n      _.__internal$_iterable = t0;\n      _._start = t1;\n      _._endOrLength = t2;\n      _.$ti = t3;\n    },\n    ListIterator: function ListIterator(t0, t1) {\n      var _ = this;\n      _.__internal$_iterable = t0;\n      _.__internal$_length = t1;\n      _.__internal$_index = 0;\n      _.__internal$_current = null;\n    },\n    MappedIterable: function MappedIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    MappedIterator: function MappedIterator(t0, t1) {\n      this.__internal$_current = null;\n      this._iterator = t0;\n      this._f = t1;\n    },\n    MappedListIterable: function MappedListIterable(t0, t1, t2) {\n      this._source = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    WhereIterable: function WhereIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    WhereIterator: function WhereIterator(t0, t1) {\n      this._iterator = t0;\n      this._f = t1;\n    },\n    ExpandIterable: function ExpandIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    ExpandIterator: function ExpandIterator(t0, t1, t2) {\n      var _ = this;\n      _._iterator = t0;\n      _._f = t1;\n      _._currentExpansion = t2;\n      _.__internal$_current = null;\n    },\n    TakeIterable: function TakeIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._takeCount = t1;\n      this.$ti = t2;\n    },\n    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._takeCount = t1;\n      this.$ti = t2;\n    },\n    TakeIterator: function TakeIterator(t0, t1) {\n      this._iterator = t0;\n      this._remaining = t1;\n    },\n    SkipIterable: function SkipIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._skipCount = t1;\n      this.$ti = t2;\n    },\n    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._skipCount = t1;\n      this.$ti = t2;\n    },\n    SkipIterator: function SkipIterator(t0, t1) {\n      this._iterator = t0;\n      this._skipCount = t1;\n    },\n    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {\n      this.__internal$_iterable = t0;\n      this._f = t1;\n      this.$ti = t2;\n    },\n    SkipWhileIterator: function SkipWhileIterator(t0, t1) {\n      this._iterator = t0;\n      this._f = t1;\n      this._hasSkipped = false;\n    },\n    EmptyIterable: function EmptyIterable(t0) {\n      this.$ti = t0;\n    },\n    EmptyIterator: function EmptyIterator() {\n    },\n    FollowedByIterable: function FollowedByIterable(t0, t1, t2) {\n      this.__internal$_first = t0;\n      this._second = t1;\n      this.$ti = t2;\n    },\n    EfficientLengthFollowedByIterable: function EfficientLengthFollowedByIterable(t0, t1, t2) {\n      this.__internal$_first = t0;\n      this._second = t1;\n      this.$ti = t2;\n    },\n    FollowedByIterator: function FollowedByIterator(t0, t1) {\n      this._currentIterator = t0;\n      this._nextIterable = t1;\n    },\n    WhereTypeIterable: function WhereTypeIterable(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    WhereTypeIterator: function WhereTypeIterator(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    FixedLengthListMixin: function FixedLengthListMixin() {\n    },\n    UnmodifiableListMixin: function UnmodifiableListMixin() {\n    },\n    UnmodifiableListBase: function UnmodifiableListBase() {\n    },\n    ReversedListIterable: function ReversedListIterable(t0, t1) {\n      this._source = t0;\n      this.$ti = t1;\n    },\n    Symbol: function Symbol(t0) {\n      this.__internal$_name = t0;\n    },\n    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {\n    },\n    ConstantMap_ConstantMap$from: function(other, $K, $V) {\n      var allStrings, object, containsProto, protoValue, $length, k, v,\n        keys = P.List_List$from(other.get$keys(other), true, $K),\n        t1 = keys.length,\n        _i = 0;\n      while (true) {\n        if (!(_i < t1)) {\n          allStrings = true;\n          break;\n        }\n        if (typeof keys[_i] != \"string\") {\n          allStrings = false;\n          break;\n        }\n        ++_i;\n      }\n      if (allStrings) {\n        object = {};\n        for (containsProto = false, protoValue = null, $length = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {\n          k = keys[_i];\n          v = other.$index(0, k);\n          if (!J.$eq$(k, \"__proto__\")) {\n            H._asStringS(k);\n            if (!object.hasOwnProperty(k))\n              ++$length;\n            object[k] = v;\n          } else {\n            protoValue = v;\n            containsProto = true;\n          }\n        }\n        if (containsProto)\n          return new H.ConstantProtoMap(protoValue, $length + 1, object, keys, $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"ConstantProtoMap<1,2>\"));\n        return new H.ConstantStringMap($length, object, keys, $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"ConstantStringMap<1,2>\"));\n      }\n      return new H.ConstantMapView(P.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"ConstantMapView<1,2>\"));\n    },\n    ConstantMap__throwUnmodifiable: function() {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify unmodifiable Map\"));\n    },\n    instantiate1: function(f, T1) {\n      var t1 = new H.Instantiation1(f, T1._eval$1(\"Instantiation1<0>\"));\n      t1.Instantiation$1(f);\n      return t1;\n    },\n    unminifyOrTag: function(rawClassName) {\n      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);\n      if (preserved != null)\n        return preserved;\n      return rawClassName;\n    },\n    isJsIndexable: function(object, record) {\n      var result;\n      if (record != null) {\n        result = record.x;\n        if (result != null)\n          return result;\n      }\n      return type$.JavaScriptIndexingBehavior_dynamic._is(object);\n    },\n    S: function(value) {\n      var res;\n      if (typeof value == \"string\")\n        return value;\n      if (typeof value == \"number\") {\n        if (value !== 0)\n          return \"\" + value;\n      } else if (true === value)\n        return \"true\";\n      else if (false === value)\n        return \"false\";\n      else if (value == null)\n        return \"null\";\n      res = J.toString$0$(value);\n      if (typeof res != \"string\")\n        throw H.wrapException(H.argumentErrorValue(value));\n      return res;\n    },\n    Primitives_objectHashCode: function(object) {\n      var hash = object.$identityHash;\n      if (hash == null) {\n        hash = Math.random() * 0x3fffffff | 0;\n        object.$identityHash = hash;\n      }\n      return hash;\n    },\n    Primitives_parseInt: function(source, radix) {\n      var match, decimalMatch, maxCharCode, digitsPart, t1, i, _null = null;\n      if (typeof source != \"string\")\n        H.throwExpression(H.argumentErrorValue(source));\n      match = /^\\s*[+-]?((0x[a-f0-9]+)|(\\d+)|([a-z0-9]+))\\s*$/i.exec(source);\n      if (match == null)\n        return _null;\n      decimalMatch = match[3];\n      if (radix == null) {\n        if (decimalMatch != null)\n          return parseInt(source, 10);\n        if (match[2] != null)\n          return parseInt(source, 16);\n        return _null;\n      }\n      if (radix < 2 || radix > 36)\n        throw H.wrapException(P.RangeError$range(radix, 2, 36, \"radix\", _null));\n      if (radix === 10 && decimalMatch != null)\n        return parseInt(source, 10);\n      if (radix < 10 || decimalMatch == null) {\n        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;\n        digitsPart = match[1];\n        for (t1 = digitsPart.length, i = 0; i < t1; ++i)\n          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)\n            return _null;\n      }\n      return parseInt(source, radix);\n    },\n    Primitives_parseDouble: function(source) {\n      var result, trimmed;\n      if (!/^\\s*[+-]?(?:Infinity|NaN|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[eE][+-]?\\d+)?)\\s*$/.test(source))\n        return null;\n      result = parseFloat(source);\n      if (isNaN(result)) {\n        trimmed = C.JSString_methods.trim$0(source);\n        if (trimmed === \"NaN\" || trimmed === \"+NaN\" || trimmed === \"-NaN\")\n          return result;\n        return null;\n      }\n      return result;\n    },\n    Primitives_objectTypeName: function(object) {\n      return H.Primitives__objectTypeNameNewRti(object);\n    },\n    Primitives__objectTypeNameNewRti: function(object) {\n      var dispatchName, $constructor, constructorName;\n      if (object instanceof P.Object)\n        return H._rtiToString(H.instanceType(object), null);\n      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {\n        dispatchName = C.C_JS_CONST(object);\n        if (H.Primitives__saneNativeClassName(dispatchName))\n          return dispatchName;\n        $constructor = object.constructor;\n        if (typeof $constructor == \"function\") {\n          constructorName = $constructor.name;\n          if (typeof constructorName == \"string\" && H.Primitives__saneNativeClassName(constructorName))\n            return constructorName;\n        }\n      }\n      return H._rtiToString(H.instanceType(object), null);\n    },\n    Primitives__saneNativeClassName: function($name) {\n      var t1 = $name !== \"Object\" && $name !== \"\";\n      return t1;\n    },\n    Primitives_currentUri: function() {\n      if (!!self.location)\n        return self.location.href;\n      return null;\n    },\n    Primitives__fromCharCodeApply: function(array) {\n      var result, i, i0, chunkEnd,\n        end = array.length;\n      if (end <= 500)\n        return String.fromCharCode.apply(null, array);\n      for (result = \"\", i = 0; i < end; i = i0) {\n        i0 = i + 500;\n        chunkEnd = i0 < end ? i0 : end;\n        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));\n      }\n      return result;\n    },\n    Primitives_stringFromCodePoints: function(codePoints) {\n      var t1, _i, i,\n        a = H.setRuntimeTypeInfo([], type$.JSArray_int);\n      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {\n        i = codePoints[_i];\n        if (!H._isInt(i))\n          throw H.wrapException(H.argumentErrorValue(i));\n        if (i <= 65535)\n          a.push(i);\n        else if (i <= 1114111) {\n          a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));\n          a.push(56320 + (i & 1023));\n        } else\n          throw H.wrapException(H.argumentErrorValue(i));\n      }\n      return H.Primitives__fromCharCodeApply(a);\n    },\n    Primitives_stringFromCharCodes: function(charCodes) {\n      var t1, _i, i;\n      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {\n        i = charCodes[_i];\n        if (!H._isInt(i))\n          throw H.wrapException(H.argumentErrorValue(i));\n        if (i < 0)\n          throw H.wrapException(H.argumentErrorValue(i));\n        if (i > 65535)\n          return H.Primitives_stringFromCodePoints(charCodes);\n      }\n      return H.Primitives__fromCharCodeApply(charCodes);\n    },\n    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {\n      var i, result, i0, chunkEnd;\n      if (end <= 500 && start === 0 && end === charCodes.length)\n        return String.fromCharCode.apply(null, charCodes);\n      for (i = start, result = \"\"; i < end; i = i0) {\n        i0 = i + 500;\n        chunkEnd = i0 < end ? i0 : end;\n        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));\n      }\n      return result;\n    },\n    Primitives_stringFromCharCode: function(charCode) {\n      var bits;\n      if (0 <= charCode) {\n        if (charCode <= 65535)\n          return String.fromCharCode(charCode);\n        if (charCode <= 1114111) {\n          bits = charCode - 65536;\n          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);\n        }\n      }\n      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));\n    },\n    Primitives_lazyAsJsDate: function(receiver) {\n      if (receiver.date === void 0)\n        receiver.date = new Date(receiver._value);\n      return receiver.date;\n    },\n    Primitives_getYear: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;\n      return t1;\n    },\n    Primitives_getMonth: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;\n      return t1;\n    },\n    Primitives_getDay: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getDate() + 0;\n      return t1;\n    },\n    Primitives_getHours: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getHours() + 0;\n      return t1;\n    },\n    Primitives_getMinutes: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;\n      return t1;\n    },\n    Primitives_getSeconds: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;\n      return t1;\n    },\n    Primitives_getMilliseconds: function(receiver) {\n      var t1 = H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;\n      return t1;\n    },\n    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {\n      var $arguments, namedArgumentList, t1 = {};\n      t1.argumentCount = 0;\n      $arguments = [];\n      namedArgumentList = [];\n      t1.argumentCount = positionalArguments.length;\n      C.JSArray_methods.addAll$1($arguments, positionalArguments);\n      t1.names = \"\";\n      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))\n        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));\n      \"\" + t1.argumentCount;\n      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));\n    },\n    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {\n      var t1, $arguments, argumentCount, jsStub;\n      if (positionalArguments instanceof Array)\n        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);\n      else\n        t1 = false;\n      if (t1) {\n        $arguments = positionalArguments;\n        argumentCount = $arguments.length;\n        if (argumentCount === 0) {\n          if (!!$function.call$0)\n            return $function.call$0();\n        } else if (argumentCount === 1) {\n          if (!!$function.call$1)\n            return $function.call$1($arguments[0]);\n        } else if (argumentCount === 2) {\n          if (!!$function.call$2)\n            return $function.call$2($arguments[0], $arguments[1]);\n        } else if (argumentCount === 3) {\n          if (!!$function.call$3)\n            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);\n        } else if (argumentCount === 4) {\n          if (!!$function.call$4)\n            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);\n        } else if (argumentCount === 5)\n          if (!!$function.call$5)\n            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);\n        jsStub = $function[\"call\" + \"$\" + argumentCount];\n        if (jsStub != null)\n          return jsStub.apply($function, $arguments);\n      }\n      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);\n    },\n    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {\n      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, defaultValue, used, t2;\n      if (positionalArguments != null)\n        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, type$.dynamic);\n      else\n        $arguments = [];\n      argumentCount = $arguments.length;\n      requiredParameterCount = $function.$requiredArgCount;\n      if (argumentCount < requiredParameterCount)\n        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n      defaultValuesClosure = $function.$defaultValues;\n      t1 = defaultValuesClosure == null;\n      defaultValues = !t1 ? defaultValuesClosure() : null;\n      interceptor = J.getInterceptor$($function);\n      jsFunction = interceptor[\"call*\"];\n      if (typeof jsFunction == \"string\")\n        jsFunction = interceptor[jsFunction];\n      if (t1) {\n        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))\n          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n        if (argumentCount === requiredParameterCount)\n          return jsFunction.apply($function, $arguments);\n        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n      }\n      if (defaultValues instanceof Array) {\n        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))\n          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n        if (argumentCount > requiredParameterCount + defaultValues.length)\n          return H.Primitives_functionNoSuchMethod($function, $arguments, null);\n        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));\n        return jsFunction.apply($function, $arguments);\n      } else {\n        if (argumentCount > requiredParameterCount)\n          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n        keys = Object.keys(defaultValues);\n        if (namedArguments == null)\n          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {\n            defaultValue = defaultValues[keys[_i]];\n            if (C.C__Required === defaultValue)\n              return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n            C.JSArray_methods.add$1($arguments, defaultValue);\n          }\n        else {\n          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {\n            t2 = keys[_i];\n            if (namedArguments.containsKey$1(t2)) {\n              ++used;\n              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, t2));\n            } else {\n              defaultValue = defaultValues[t2];\n              if (C.C__Required === defaultValue)\n                return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n              C.JSArray_methods.add$1($arguments, defaultValue);\n            }\n          }\n          if (used !== namedArguments.get$length(namedArguments))\n            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);\n        }\n        return jsFunction.apply($function, $arguments);\n      }\n    },\n    diagnoseIndexError: function(indexable, index) {\n      var $length, _s5_ = \"index\";\n      if (!H._isInt(index))\n        return new P.ArgumentError(true, index, _s5_, null);\n      $length = J.get$length$asx(indexable);\n      if (index < 0 || index >= $length)\n        return P.IndexError$(index, indexable, _s5_, null, $length);\n      return P.RangeError$value(index, _s5_, null);\n    },\n    diagnoseRangeError: function(start, end, $length) {\n      if (start < 0 || start > $length)\n        return P.RangeError$range(start, 0, $length, \"start\", null);\n      if (end != null)\n        if (end < start || end > $length)\n          return P.RangeError$range(end, start, $length, \"end\", null);\n      return new P.ArgumentError(true, end, \"end\", null);\n    },\n    argumentErrorValue: function(object) {\n      return new P.ArgumentError(true, object, null, null);\n    },\n    checkNum: function(value) {\n      if (typeof value != \"number\")\n        throw H.wrapException(H.argumentErrorValue(value));\n      return value;\n    },\n    wrapException: function(ex) {\n      var wrapper, t1;\n      if (ex == null)\n        ex = new P.NullThrownError();\n      wrapper = new Error();\n      wrapper.dartException = ex;\n      t1 = H.toStringWrapper;\n      if (\"defineProperty\" in Object) {\n        Object.defineProperty(wrapper, \"message\", {get: t1});\n        wrapper.name = \"\";\n      } else\n        wrapper.toString = t1;\n      return wrapper;\n    },\n    toStringWrapper: function() {\n      return J.toString$0$(this.dartException);\n    },\n    throwExpression: function(ex) {\n      throw H.wrapException(ex);\n    },\n    throwConcurrentModificationError: function(collection) {\n      throw H.wrapException(P.ConcurrentModificationError$(collection));\n    },\n    TypeErrorDecoder_extractPattern: function(message) {\n      var match, $arguments, argumentsExpr, expr, method, receiver;\n      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));\n      match = message.match(/\\\\\\$[a-zA-Z]+\\\\\\$/g);\n      if (match == null)\n        match = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      $arguments = match.indexOf(\"\\\\$arguments\\\\$\");\n      argumentsExpr = match.indexOf(\"\\\\$argumentsExpr\\\\$\");\n      expr = match.indexOf(\"\\\\$expr\\\\$\");\n      method = match.indexOf(\"\\\\$method\\\\$\");\n      receiver = match.indexOf(\"\\\\$receiver\\\\$\");\n      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\\\\\\\$arguments\\\\\\\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\\\\\\\$argumentsExpr\\\\\\\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\\\\\\\$expr\\\\\\\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\\\\\\\$method\\\\\\\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\\\\\\\$receiver\\\\\\\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);\n    },\n    TypeErrorDecoder_provokeCallErrorOn: function(expression) {\n      return function($expr$) {\n        var $argumentsExpr$ = '$arguments$';\n        try {\n          $expr$.$method$($argumentsExpr$);\n        } catch (e) {\n          return e.message;\n        }\n      }(expression);\n    },\n    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {\n      return function($expr$) {\n        try {\n          $expr$.$method$;\n        } catch (e) {\n          return e.message;\n        }\n      }(expression);\n    },\n    NullError$: function(_message, match) {\n      return new H.NullError(_message, match == null ? null : match.method);\n    },\n    JsNoSuchMethodError$: function(_message, match) {\n      var t1 = match == null,\n        t2 = t1 ? null : match.method;\n      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);\n    },\n    unwrapException: function(ex) {\n      if (ex == null)\n        return new H.NullThrownFromJavaScriptException(ex);\n      if (ex instanceof H.ExceptionAndStackTrace)\n        return H.saveStackTrace(ex, ex.dartException);\n      if (typeof ex !== \"object\")\n        return ex;\n      if (\"dartException\" in ex)\n        return H.saveStackTrace(ex, ex.dartException);\n      return H._unwrapNonDartException(ex);\n    },\n    saveStackTrace: function(ex, error) {\n      if (type$.Error._is(error))\n        if (error.$thrownJsError == null)\n          error.$thrownJsError = ex;\n      return error;\n    },\n    _unwrapNonDartException: function(ex) {\n      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t1, _null = null;\n      if (!(\"message\" in ex))\n        return ex;\n      message = ex.message;\n      if (\"number\" in ex && typeof ex.number == \"number\") {\n        number = ex.number;\n        ieErrorCode = number & 65535;\n        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)\n          switch (ieErrorCode) {\n            case 438:\n              return H.saveStackTrace(ex, H.JsNoSuchMethodError$(H.S(message) + \" (Error \" + ieErrorCode + \")\", _null));\n            case 445:\n            case 5007:\n              return H.saveStackTrace(ex, H.NullError$(H.S(message) + \" (Error \" + ieErrorCode + \")\", _null));\n          }\n      }\n      if (ex instanceof TypeError) {\n        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();\n        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();\n        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();\n        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();\n        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();\n        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();\n        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();\n        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();\n        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();\n        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();\n        match = nsme.matchTypeError$1(message);\n        if (match != null)\n          return H.saveStackTrace(ex, H.JsNoSuchMethodError$(message, match));\n        else {\n          match = notClosure.matchTypeError$1(message);\n          if (match != null) {\n            match.method = \"call\";\n            return H.saveStackTrace(ex, H.JsNoSuchMethodError$(message, match));\n          } else {\n            match = nullCall.matchTypeError$1(message);\n            if (match == null) {\n              match = nullLiteralCall.matchTypeError$1(message);\n              if (match == null) {\n                match = undefCall.matchTypeError$1(message);\n                if (match == null) {\n                  match = undefLiteralCall.matchTypeError$1(message);\n                  if (match == null) {\n                    match = nullProperty.matchTypeError$1(message);\n                    if (match == null) {\n                      match = nullLiteralCall.matchTypeError$1(message);\n                      if (match == null) {\n                        match = undefProperty.matchTypeError$1(message);\n                        if (match == null) {\n                          match = undefLiteralProperty.matchTypeError$1(message);\n                          t1 = match != null;\n                        } else\n                          t1 = true;\n                      } else\n                        t1 = true;\n                    } else\n                      t1 = true;\n                  } else\n                    t1 = true;\n                } else\n                  t1 = true;\n              } else\n                t1 = true;\n            } else\n              t1 = true;\n            if (t1)\n              return H.saveStackTrace(ex, H.NullError$(message, match));\n          }\n        }\n        return H.saveStackTrace(ex, new H.UnknownJsTypeError(typeof message == \"string\" ? message : \"\"));\n      }\n      if (ex instanceof RangeError) {\n        if (typeof message == \"string\" && message.indexOf(\"call stack\") !== -1)\n          return new P.StackOverflowError();\n        message = function(ex) {\n          try {\n            return String(ex);\n          } catch (e) {\n          }\n          return null;\n        }(ex);\n        return H.saveStackTrace(ex, new P.ArgumentError(false, _null, _null, typeof message == \"string\" ? message.replace(/^RangeError:\\s*/, \"\") : message));\n      }\n      if (typeof InternalError == \"function\" && ex instanceof InternalError)\n        if (typeof message == \"string\" && message === \"too much recursion\")\n          return new P.StackOverflowError();\n      return ex;\n    },\n    getTraceFromException: function(exception) {\n      var trace;\n      if (exception instanceof H.ExceptionAndStackTrace)\n        return exception.stackTrace;\n      if (exception == null)\n        return new H._StackTrace(exception);\n      trace = exception.$cachedTrace;\n      if (trace != null)\n        return trace;\n      return exception.$cachedTrace = new H._StackTrace(exception);\n    },\n    objectHashCode: function(object) {\n      if (object == null || typeof object != 'object')\n        return J.get$hashCode$(object);\n      else\n        return H.Primitives_objectHashCode(object);\n    },\n    fillLiteralMap: function(keyValuePairs, result) {\n      var index, index0, index1,\n        $length = keyValuePairs.length;\n      for (index = 0; index < $length; index = index1) {\n        index0 = index + 1;\n        index1 = index0 + 1;\n        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);\n      }\n      return result;\n    },\n    fillLiteralSet: function(values, result) {\n      var index,\n        $length = values.length;\n      for (index = 0; index < $length; ++index)\n        result.add$1(0, values[index]);\n      return result;\n    },\n    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {\n      switch (numberOfArguments) {\n        case 0:\n          return closure.call$0();\n        case 1:\n          return closure.call$1(arg1);\n        case 2:\n          return closure.call$2(arg1, arg2);\n        case 3:\n          return closure.call$3(arg1, arg2, arg3);\n        case 4:\n          return closure.call$4(arg1, arg2, arg3, arg4);\n      }\n      throw H.wrapException(new P._Exception(\"Unsupported number of arguments for wrapped closure\"));\n    },\n    convertDartClosureToJS: function(closure, arity) {\n      var $function;\n      if (closure == null)\n        return null;\n      $function = closure.$identity;\n      if (!!$function)\n        return $function;\n      $function = function(closure, arity, invoke) {\n        return function(a1, a2, a3, a4) {\n          return invoke(closure, arity, a1, a2, a3, a4);\n        };\n      }(closure, arity, H.invokeClosure);\n      closure.$identity = $function;\n      return $function;\n    },\n    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {\n      var $constructor, t1, trampoline, applyTrampoline, i, stub, stubCallName,\n        $function = functions[0],\n        callName = $function.$callName,\n        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, \"\").constructor.prototype);\n      $prototype.$initialize = $prototype.constructor;\n      if (isStatic)\n        $constructor = function static_tear_off() {\n          this.$initialize();\n        };\n      else {\n        t1 = $.Closure_functionCounter;\n        $.Closure_functionCounter = t1 + 1;\n        t1 = new Function(\"a,b,c,d\" + t1, \"this.$initialize(a,b,c,d\" + t1 + \")\");\n        $constructor = t1;\n      }\n      $prototype.constructor = $constructor;\n      $constructor.prototype = $prototype;\n      if (!isStatic) {\n        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);\n        trampoline.$reflectionInfo = reflectionInfo;\n      } else {\n        $prototype.$static_name = propertyName;\n        trampoline = $function;\n      }\n      $prototype.$signature = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);\n      $prototype[callName] = trampoline;\n      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {\n        stub = functions[i];\n        stubCallName = stub.$callName;\n        if (stubCallName != null) {\n          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);\n          $prototype[stubCallName] = stub;\n        }\n        if (i === applyTrampolineIndex) {\n          stub.$reflectionInfo = reflectionInfo;\n          applyTrampoline = stub;\n        }\n      }\n      $prototype[\"call*\"] = applyTrampoline;\n      $prototype.$requiredArgCount = $function.$requiredArgCount;\n      $prototype.$defaultValues = $function.$defaultValues;\n      return $constructor;\n    },\n    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {\n      var typeEvalMethod;\n      if (typeof functionType == \"number\")\n        return function(getType, t) {\n          return function() {\n            return getType(t);\n          };\n        }(H.getTypeFromTypesTable, functionType);\n      if (typeof functionType == \"string\") {\n        if (isStatic)\n          throw H.wrapException(\"Cannot compute signature for static tearoff.\");\n        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;\n        return function(recipe, evalOnReceiver) {\n          return function() {\n            return evalOnReceiver(this, recipe);\n          };\n        }(functionType, typeEvalMethod);\n      }\n      throw H.wrapException(\"Error in functionType of tearoff\");\n    },\n    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {\n      var getSelf = H.BoundClosure_selfOf;\n      switch (isSuperCall ? -1 : arity) {\n        case 0:\n          return function(n, S) {\n            return function() {\n              return S(this)[n]();\n            };\n          }(stubName, getSelf);\n        case 1:\n          return function(n, S) {\n            return function(a) {\n              return S(this)[n](a);\n            };\n          }(stubName, getSelf);\n        case 2:\n          return function(n, S) {\n            return function(a, b) {\n              return S(this)[n](a, b);\n            };\n          }(stubName, getSelf);\n        case 3:\n          return function(n, S) {\n            return function(a, b, c) {\n              return S(this)[n](a, b, c);\n            };\n          }(stubName, getSelf);\n        case 4:\n          return function(n, S) {\n            return function(a, b, c, d) {\n              return S(this)[n](a, b, c, d);\n            };\n          }(stubName, getSelf);\n        case 5:\n          return function(n, S) {\n            return function(a, b, c, d, e) {\n              return S(this)[n](a, b, c, d, e);\n            };\n          }(stubName, getSelf);\n        default:\n          return function(f, s) {\n            return function() {\n              return f.apply(s(this), arguments);\n            };\n          }($function, getSelf);\n      }\n    },\n    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {\n      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;\n      if (isIntercepted)\n        return H.Closure_forwardInterceptedCallTo(receiver, $function);\n      stubName = $function.$stubName;\n      arity = $function.length;\n      lookedUpFunction = receiver[stubName];\n      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;\n      t2 = !t1 || arity >= 27;\n      if (t2)\n        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);\n      if (arity === 0) {\n        t1 = $.Closure_functionCounter;\n        $.Closure_functionCounter = t1 + 1;\n        selfName = \"self\" + H.S(t1);\n        return new Function(\"return function(){var \" + selfName + \" = this.\" + H.S(H.BoundClosure_selfFieldName()) + \";return \" + selfName + \".\" + H.S(stubName) + \"();}\")();\n      }\n      $arguments = \"abcdefghijklmnopqrstuvwxyz\".split(\"\").splice(0, arity).join(\",\");\n      t1 = $.Closure_functionCounter;\n      $.Closure_functionCounter = t1 + 1;\n      $arguments += H.S(t1);\n      return new Function(\"return function(\" + $arguments + \"){return this.\" + H.S(H.BoundClosure_selfFieldName()) + \".\" + H.S(stubName) + \"(\" + $arguments + \");}\")();\n    },\n    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {\n      var getSelf = H.BoundClosure_selfOf,\n        getReceiver = H.BoundClosure_receiverOf;\n      switch (isSuperCall ? -1 : arity) {\n        case 0:\n          throw H.wrapException(new H.RuntimeError(\"Intercepted function with no arguments.\"));\n        case 1:\n          return function(n, s, r) {\n            return function() {\n              return s(this)[n](r(this));\n            };\n          }($name, getSelf, getReceiver);\n        case 2:\n          return function(n, s, r) {\n            return function(a) {\n              return s(this)[n](r(this), a);\n            };\n          }($name, getSelf, getReceiver);\n        case 3:\n          return function(n, s, r) {\n            return function(a, b) {\n              return s(this)[n](r(this), a, b);\n            };\n          }($name, getSelf, getReceiver);\n        case 4:\n          return function(n, s, r) {\n            return function(a, b, c) {\n              return s(this)[n](r(this), a, b, c);\n            };\n          }($name, getSelf, getReceiver);\n        case 5:\n          return function(n, s, r) {\n            return function(a, b, c, d) {\n              return s(this)[n](r(this), a, b, c, d);\n            };\n          }($name, getSelf, getReceiver);\n        case 6:\n          return function(n, s, r) {\n            return function(a, b, c, d, e) {\n              return s(this)[n](r(this), a, b, c, d, e);\n            };\n          }($name, getSelf, getReceiver);\n        default:\n          return function(f, s, r, a) {\n            return function() {\n              a = [r(this)];\n              Array.prototype.push.apply(a, arguments);\n              return f.apply(s(this), a);\n            };\n          }($function, getSelf, getReceiver);\n      }\n    },\n    Closure_forwardInterceptedCallTo: function(receiver, $function) {\n      var stubName, arity, lookedUpFunction, t1, t2, $arguments,\n        selfField = H.BoundClosure_selfFieldName(),\n        receiverField = $.BoundClosure_receiverFieldNameCache;\n      if (receiverField == null)\n        receiverField = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed(\"receiver\");\n      stubName = $function.$stubName;\n      arity = $function.length;\n      lookedUpFunction = receiver[stubName];\n      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;\n      t2 = !t1 || arity >= 28;\n      if (t2)\n        return H.Closure_cspForwardInterceptedCall(arity, !t1, stubName, $function);\n      if (arity === 1) {\n        t1 = \"return function(){return this.\" + H.S(selfField) + \".\" + H.S(stubName) + \"(this.\" + receiverField + \");\";\n        t2 = $.Closure_functionCounter;\n        $.Closure_functionCounter = t2 + 1;\n        return new Function(t1 + H.S(t2) + \"}\")();\n      }\n      $arguments = \"abcdefghijklmnopqrstuvwxyz\".split(\"\").splice(0, arity - 1).join(\",\");\n      t1 = \"return function(\" + $arguments + \"){return this.\" + H.S(selfField) + \".\" + H.S(stubName) + \"(this.\" + receiverField + \", \" + $arguments + \");\";\n      t2 = $.Closure_functionCounter;\n      $.Closure_functionCounter = t2 + 1;\n      return new Function(t1 + H.S(t2) + \"}\")();\n    },\n    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {\n      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);\n    },\n    BoundClosure_evalRecipe: function(closure, recipe) {\n      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);\n    },\n    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {\n      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);\n    },\n    BoundClosure_selfOf: function(closure) {\n      return closure._self;\n    },\n    BoundClosure_receiverOf: function(closure) {\n      return closure._receiver;\n    },\n    BoundClosure_selfFieldName: function() {\n      var t1 = $.BoundClosure_selfFieldNameCache;\n      return t1 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed(\"self\") : t1;\n    },\n    BoundClosure_computeFieldNamed: function(fieldName) {\n      var t1, i, $name,\n        template = new H.BoundClosure(\"self\", \"target\", \"receiver\", \"name\"),\n        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));\n      for (t1 = names.length, i = 0; i < t1; ++i) {\n        $name = names[i];\n        if (template[$name] === fieldName)\n          return $name;\n      }\n      throw H.wrapException(P.ArgumentError$(\"Field name \" + fieldName + \" not found.\"));\n    },\n    throwCyclicInit: function(staticName) {\n      throw H.wrapException(new P.CyclicInitializationError(staticName));\n    },\n    getIsolateAffinityTag: function($name) {\n      return init.getIsolateTag($name);\n    },\n    defineProperty: function(obj, property, value) {\n      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});\n    },\n    lookupAndCacheInterceptor: function(obj) {\n      var interceptor, interceptorClass, altTag, mark, t1,\n        tag = $.getTagFunction.call$1(obj),\n        record = $.dispatchRecordsForInstanceTags[tag];\n      if (record != null) {\n        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});\n        return record.i;\n      }\n      interceptor = $.interceptorsForUncacheableTags[tag];\n      if (interceptor != null)\n        return interceptor;\n      interceptorClass = init.interceptorsByTag[tag];\n      if (interceptorClass == null) {\n        altTag = $.alternateTagFunction.call$2(obj, tag);\n        if (altTag != null) {\n          record = $.dispatchRecordsForInstanceTags[altTag];\n          if (record != null) {\n            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});\n            return record.i;\n          }\n          interceptor = $.interceptorsForUncacheableTags[altTag];\n          if (interceptor != null)\n            return interceptor;\n          interceptorClass = init.interceptorsByTag[altTag];\n          tag = altTag;\n        }\n      }\n      if (interceptorClass == null)\n        return null;\n      interceptor = interceptorClass.prototype;\n      mark = tag[0];\n      if (mark === \"!\") {\n        record = H.makeLeafDispatchRecord(interceptor);\n        $.dispatchRecordsForInstanceTags[tag] = record;\n        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});\n        return record.i;\n      }\n      if (mark === \"~\") {\n        $.interceptorsForUncacheableTags[tag] = interceptor;\n        return interceptor;\n      }\n      if (mark === \"-\") {\n        t1 = H.makeLeafDispatchRecord(interceptor);\n        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});\n        return t1.i;\n      }\n      if (mark === \"+\")\n        return H.patchInteriorProto(obj, interceptor);\n      if (mark === \"*\")\n        throw H.wrapException(P.UnimplementedError$(tag));\n      if (init.leafTags[tag] === true) {\n        t1 = H.makeLeafDispatchRecord(interceptor);\n        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});\n        return t1.i;\n      } else\n        return H.patchInteriorProto(obj, interceptor);\n    },\n    patchInteriorProto: function(obj, interceptor) {\n      var proto = Object.getPrototypeOf(obj);\n      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});\n      return interceptor;\n    },\n    makeLeafDispatchRecord: function(interceptor) {\n      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);\n    },\n    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {\n      var interceptor = interceptorClass.prototype;\n      if (init.leafTags[tag] === true)\n        return H.makeLeafDispatchRecord(interceptor);\n      else\n        return J.makeDispatchRecord(interceptor, proto, null, null);\n    },\n    initNativeDispatch: function() {\n      if (true === $.initNativeDispatchFlag)\n        return;\n      $.initNativeDispatchFlag = true;\n      H.initNativeDispatchContinue();\n    },\n    initNativeDispatchContinue: function() {\n      var map, tags, fun, i, tag, proto, record, interceptorClass;\n      $.dispatchRecordsForInstanceTags = Object.create(null);\n      $.interceptorsForUncacheableTags = Object.create(null);\n      H.initHooks();\n      map = init.interceptorsByTag;\n      tags = Object.getOwnPropertyNames(map);\n      if (typeof window != \"undefined\") {\n        window;\n        fun = function() {\n        };\n        for (i = 0; i < tags.length; ++i) {\n          tag = tags[i];\n          proto = $.prototypeForTagFunction.call$1(tag);\n          if (proto != null) {\n            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);\n            if (record != null) {\n              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});\n              fun.prototype = proto;\n            }\n          }\n        }\n      }\n      for (i = 0; i < tags.length; ++i) {\n        tag = tags[i];\n        if (/^[A-Za-z_]/.test(tag)) {\n          interceptorClass = map[tag];\n          map[\"!\" + tag] = interceptorClass;\n          map[\"~\" + tag] = interceptorClass;\n          map[\"-\" + tag] = interceptorClass;\n          map[\"+\" + tag] = interceptorClass;\n          map[\"*\" + tag] = interceptorClass;\n        }\n      }\n    },\n    initHooks: function() {\n      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,\n        hooks = C.C_JS_CONST0();\n      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));\n      if (typeof dartNativeDispatchHooksTransformer != \"undefined\") {\n        transformers = dartNativeDispatchHooksTransformer;\n        if (typeof transformers == \"function\")\n          transformers = [transformers];\n        if (transformers.constructor == Array)\n          for (i = 0; i < transformers.length; ++i) {\n            transformer = transformers[i];\n            if (typeof transformer == \"function\")\n              hooks = transformer(hooks) || hooks;\n          }\n      }\n      getTag = hooks.getTag;\n      getUnknownTag = hooks.getUnknownTag;\n      prototypeForTag = hooks.prototypeForTag;\n      $.getTagFunction = new H.initHooks_closure(getTag);\n      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);\n      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);\n    },\n    applyHooksTransformer: function(transformer, hooks) {\n      return transformer(hooks) || hooks;\n    },\n    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, unicode, dotAll, global) {\n      var m = multiLine ? \"m\" : \"\",\n        i = caseSensitive ? \"\" : \"i\",\n        u = unicode ? \"u\" : \"\",\n        s = dotAll ? \"s\" : \"\",\n        g = global ? \"g\" : \"\",\n        regexp = function(source, modifiers) {\n          try {\n            return new RegExp(source, modifiers);\n          } catch (e) {\n            return e;\n          }\n        }(source, m + i + u + s + g);\n      if (regexp instanceof RegExp)\n        return regexp;\n      throw H.wrapException(P.FormatException$(\"Illegal RegExp pattern (\" + String(regexp) + \")\", source, null));\n    },\n    stringContainsUnchecked: function(receiver, other, startIndex) {\n      var t1, t2;\n      if (typeof other == \"string\")\n        return receiver.indexOf(other, startIndex) >= 0;\n      else if (other instanceof H.JSSyntaxRegExp) {\n        t1 = C.JSString_methods.substring$1(receiver, startIndex);\n        t2 = other._nativeRegExp;\n        return t2.test(t1);\n      } else {\n        t1 = J.allMatches$1$s(other, C.JSString_methods.substring$1(receiver, startIndex));\n        return !t1.get$isEmpty(t1);\n      }\n    },\n    escapeReplacement: function(replacement) {\n      if (replacement.indexOf(\"$\", 0) >= 0)\n        return replacement.replace(/\\$/g, \"$$$$\");\n      return replacement;\n    },\n    stringReplaceFirstRE: function(receiver, regexp, replacement, startIndex) {\n      var match = regexp._execGlobal$2(receiver, startIndex);\n      if (match == null)\n        return receiver;\n      return H.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(match), replacement);\n    },\n    quoteStringForRegExp: function(string) {\n      if (/[[\\]{}()*+?.\\\\^$|]/.test(string))\n        return string.replace(/[[\\]{}()*+?.\\\\^$|]/g, \"\\\\$&\");\n      return string;\n    },\n    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {\n      var nativeRegexp;\n      if (typeof pattern == \"string\")\n        return H.stringReplaceAllUncheckedString(receiver, pattern, replacement);\n      if (pattern instanceof H.JSSyntaxRegExp) {\n        nativeRegexp = pattern.get$_nativeGlobalVersion();\n        nativeRegexp.lastIndex = 0;\n        return receiver.replace(nativeRegexp, H.escapeReplacement(replacement));\n      }\n      if (pattern == null)\n        H.throwExpression(H.argumentErrorValue(pattern));\n      throw H.wrapException(\"String.replaceAll(Pattern) UNIMPLEMENTED\");\n    },\n    stringReplaceAllUncheckedString: function(receiver, pattern, replacement) {\n      var $length, t1, i, index;\n      if (pattern === \"\") {\n        if (receiver === \"\")\n          return replacement;\n        $length = receiver.length;\n        for (t1 = replacement, i = 0; i < $length; ++i)\n          t1 = t1 + receiver[i] + replacement;\n        return t1.charCodeAt(0) == 0 ? t1 : t1;\n      }\n      index = receiver.indexOf(pattern, 0);\n      if (index < 0)\n        return receiver;\n      if (receiver.length < 500 || replacement.indexOf(\"$\", 0) >= 0)\n        return receiver.split(pattern).join(replacement);\n      return receiver.replace(new RegExp(H.quoteStringForRegExp(pattern), 'g'), H.escapeReplacement(replacement));\n    },\n    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {\n      var index, t1, matches, match;\n      if (typeof pattern == \"string\") {\n        index = receiver.indexOf(pattern, startIndex);\n        if (index < 0)\n          return receiver;\n        return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);\n      }\n      if (pattern instanceof H.JSSyntaxRegExp)\n        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, H.escapeReplacement(replacement)) : H.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);\n      if (pattern == null)\n        H.throwExpression(H.argumentErrorValue(pattern));\n      t1 = J.allMatches$2$s(pattern, receiver, startIndex);\n      matches = t1.get$iterator(t1);\n      if (!matches.moveNext$0())\n        return receiver;\n      match = matches.get$current(matches);\n      return C.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);\n    },\n    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {\n      var prefix = receiver.substring(0, start),\n        suffix = receiver.substring(end);\n      return prefix + H.S(replacement) + suffix;\n    },\n    ConstantMapView: function ConstantMapView(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    ConstantMap: function ConstantMap() {\n    },\n    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {\n      var _ = this;\n      _.__js_helper$_length = t0;\n      _._jsObject = t1;\n      _.__js_helper$_keys = t2;\n      _.$ti = t3;\n    },\n    ConstantStringMap_values_closure: function ConstantStringMap_values_closure(t0) {\n      this.$this = t0;\n    },\n    ConstantProtoMap: function ConstantProtoMap(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._protoValue = t0;\n      _.__js_helper$_length = t1;\n      _._jsObject = t2;\n      _.__js_helper$_keys = t3;\n      _.$ti = t4;\n    },\n    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {\n      this._map = t0;\n      this.$ti = t1;\n    },\n    Instantiation: function Instantiation() {\n    },\n    Instantiation1: function Instantiation1(t0, t1) {\n      this._genericClosure = t0;\n      this.$ti = t1;\n    },\n    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.__js_helper$_memberName = t0;\n      _.__js_helper$_kind = t1;\n      _._arguments = t2;\n      _._namedArgumentNames = t3;\n      _._typeArgumentCount = t4;\n    },\n    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.namedArgumentList = t1;\n      this.$arguments = t2;\n    },\n    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._pattern = t0;\n      _._arguments = t1;\n      _._argumentsExpr = t2;\n      _._expr = t3;\n      _._method = t4;\n      _._receiver = t5;\n    },\n    NullError: function NullError(t0, t1) {\n      this.__js_helper$_message = t0;\n      this._method = t1;\n    },\n    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {\n      this.__js_helper$_message = t0;\n      this._method = t1;\n      this._receiver = t2;\n    },\n    UnknownJsTypeError: function UnknownJsTypeError(t0) {\n      this.__js_helper$_message = t0;\n    },\n    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {\n      this._irritant = t0;\n    },\n    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {\n      this.dartException = t0;\n      this.stackTrace = t1;\n    },\n    _StackTrace: function _StackTrace(t0) {\n      this._exception = t0;\n      this._trace = null;\n    },\n    Closure: function Closure() {\n    },\n    TearOffClosure: function TearOffClosure() {\n    },\n    StaticClosure: function StaticClosure() {\n    },\n    BoundClosure: function BoundClosure(t0, t1, t2, t3) {\n      var _ = this;\n      _._self = t0;\n      _._target = t1;\n      _._receiver = t2;\n      _.__js_helper$_name = t3;\n    },\n    RuntimeError: function RuntimeError(t0) {\n      this.message = t0;\n    },\n    _Required: function _Required() {\n    },\n    JsLinkedHashMap: function JsLinkedHashMap(t0) {\n      var _ = this;\n      _.__js_helper$_length = 0;\n      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;\n      _._modifications = 0;\n      _.$ti = t0;\n    },\n    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {\n      this.$this = t0;\n    },\n    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {\n      this.$this = t0;\n    },\n    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {\n      var _ = this;\n      _.hashMapCellKey = t0;\n      _.hashMapCellValue = t1;\n      _._previous = _._next = null;\n    },\n    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {\n      this._map = t0;\n      this.$ti = t1;\n    },\n    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1) {\n      var _ = this;\n      _._map = t0;\n      _._modifications = t1;\n      _.__js_helper$_current = _._cell = null;\n    },\n    initHooks_closure: function initHooks_closure(t0) {\n      this.getTag = t0;\n    },\n    initHooks_closure0: function initHooks_closure0(t0) {\n      this.getUnknownTag = t0;\n    },\n    initHooks_closure1: function initHooks_closure1(t0) {\n      this.prototypeForTag = t0;\n    },\n    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {\n      var _ = this;\n      _.pattern = t0;\n      _._nativeRegExp = t1;\n      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;\n    },\n    _MatchImplementation: function _MatchImplementation(t0) {\n      this._match = t0;\n    },\n    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {\n      this._re = t0;\n      this.__js_helper$_string = t1;\n      this.__js_helper$_start = t2;\n    },\n    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {\n      var _ = this;\n      _._regExp = t0;\n      _.__js_helper$_string = t1;\n      _._nextIndex = t2;\n      _.__js_helper$_current = null;\n    },\n    StringMatch: function StringMatch(t0, t1) {\n      this.start = t0;\n      this.pattern = t1;\n    },\n    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {\n      this._input = t0;\n      this._pattern = t1;\n      this.__js_helper$_index = t2;\n    },\n    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {\n      var _ = this;\n      _._input = t0;\n      _._pattern = t1;\n      _.__js_helper$_index = t2;\n      _.__js_helper$_current = null;\n    },\n    _ensureNativeList: function(list) {\n      return list;\n    },\n    NativeInt8List__create1: function(arg) {\n      return new Int8Array(arg);\n    },\n    NativeUint8List_NativeUint8List$view: function(buffer, offsetInBytes, $length) {\n      var t1;\n      if (!H._isInt(offsetInBytes))\n        H.throwExpression(P.ArgumentError$(\"Invalid view offsetInBytes \" + H.S(offsetInBytes)));\n      t1 = new Uint8Array(buffer, offsetInBytes, $length);\n      return t1;\n    },\n    _checkValidIndex: function(index, list, $length) {\n      if (index >>> 0 !== index || index >= $length)\n        throw H.wrapException(H.diagnoseIndexError(list, index));\n    },\n    _checkValidRange: function(start, end, $length) {\n      var t1;\n      if (!(start >>> 0 !== start))\n        if (end == null)\n          t1 = start > $length;\n        else\n          t1 = end >>> 0 !== end || start > end || end > $length;\n      else\n        t1 = true;\n      if (t1)\n        throw H.wrapException(H.diagnoseRangeError(start, end, $length));\n      if (end == null)\n        return $length;\n      return end;\n    },\n    NativeTypedData: function NativeTypedData() {\n    },\n    NativeTypedArray: function NativeTypedArray() {\n    },\n    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {\n    },\n    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {\n    },\n    NativeFloat32List: function NativeFloat32List() {\n    },\n    NativeFloat64List: function NativeFloat64List() {\n    },\n    NativeInt16List: function NativeInt16List() {\n    },\n    NativeInt32List: function NativeInt32List() {\n    },\n    NativeInt8List: function NativeInt8List() {\n    },\n    NativeUint16List: function NativeUint16List() {\n    },\n    NativeUint32List: function NativeUint32List() {\n    },\n    NativeUint8ClampedList: function NativeUint8ClampedList() {\n    },\n    NativeUint8List: function NativeUint8List() {\n    },\n    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {\n    },\n    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {\n    },\n    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {\n    },\n    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {\n    },\n    Rti__getQuestionFromStar: function(universe, rti) {\n      var question = rti._precomputed1;\n      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;\n    },\n    Rti__getFutureFromFutureOr: function(universe, rti) {\n      var future = rti._precomputed1;\n      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, \"Future\", [rti._primary]) : future;\n    },\n    Rti__isUnionOfFunctionType: function(rti) {\n      var kind = rti._kind;\n      if (kind === 6 || kind === 7 || kind === 8)\n        return H.Rti__isUnionOfFunctionType(rti._primary);\n      return kind === 11 || kind === 12;\n    },\n    Rti__getCanonicalRecipe: function(rti) {\n      return rti._canonicalRecipe;\n    },\n    findType: function(recipe) {\n      return H._Universe_eval(init.typeUniverse, recipe, false);\n    },\n    instantiatedGenericFunctionType: function(genericFunctionRti, instantiationRti) {\n      var t1, cache, key, probe, rti;\n      if (genericFunctionRti == null)\n        return null;\n      t1 = instantiationRti._rest;\n      cache = genericFunctionRti._bindCache;\n      if (cache == null)\n        cache = genericFunctionRti._bindCache = new Map();\n      key = instantiationRti._canonicalRecipe;\n      probe = cache.get(key);\n      if (probe != null)\n        return probe;\n      rti = H._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);\n      cache.set(key, rti);\n      return rti;\n    },\n    _substitute: function(universe, rti, typeArguments, depth) {\n      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,\n        kind = rti._kind;\n      switch (kind) {\n        case 5:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n          return rti;\n        case 6:\n          baseType = rti._primary;\n          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);\n          if (substitutedBaseType === baseType)\n            return rti;\n          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);\n        case 7:\n          baseType = rti._primary;\n          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);\n          if (substitutedBaseType === baseType)\n            return rti;\n          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);\n        case 8:\n          baseType = rti._primary;\n          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);\n          if (substitutedBaseType === baseType)\n            return rti;\n          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);\n        case 9:\n          interfaceTypeArguments = rti._rest;\n          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);\n          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)\n            return rti;\n          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);\n        case 10:\n          base = rti._primary;\n          substitutedBase = H._substitute(universe, base, typeArguments, depth);\n          $arguments = rti._rest;\n          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);\n          if (substitutedBase === base && substitutedArguments === $arguments)\n            return rti;\n          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);\n        case 11:\n          returnType = rti._primary;\n          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);\n          functionParameters = rti._rest;\n          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);\n          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)\n            return rti;\n          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);\n        case 12:\n          bounds = rti._rest;\n          depth += bounds.length;\n          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);\n          base = rti._primary;\n          substitutedBase = H._substitute(universe, base, typeArguments, depth);\n          if (substitutedBounds === bounds && substitutedBase === base)\n            return rti;\n          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);\n        case 13:\n          index = rti._primary;\n          if (index < depth)\n            return rti;\n          argument = typeArguments[index - depth];\n          if (argument == null)\n            return rti;\n          return argument;\n        default:\n          throw H.wrapException(P.AssertionError$(\"Attempted to substitute unexpected RTI kind \" + kind));\n      }\n    },\n    _substituteArray: function(universe, rtiArray, typeArguments, depth) {\n      var changed, i, rti, substitutedRti,\n        $length = rtiArray.length,\n        result = [];\n      for (changed = false, i = 0; i < $length; ++i) {\n        rti = rtiArray[i];\n        substitutedRti = H._substitute(universe, rti, typeArguments, depth);\n        if (substitutedRti !== rti)\n          changed = true;\n        result.push(substitutedRti);\n      }\n      return changed ? result : rtiArray;\n    },\n    _substituteNamed: function(universe, namedArray, typeArguments, depth) {\n      var changed, i, t1, t2, rti, substitutedRti,\n        $length = namedArray.length,\n        result = [];\n      for (changed = false, i = 0; i < $length; i += 3) {\n        t1 = namedArray[i];\n        t2 = namedArray[i + 1];\n        rti = namedArray[i + 2];\n        substitutedRti = H._substitute(universe, rti, typeArguments, depth);\n        if (substitutedRti !== rti)\n          changed = true;\n        result.push(t1);\n        result.push(t2);\n        result.push(substitutedRti);\n      }\n      return changed ? result : namedArray;\n    },\n    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {\n      var result,\n        requiredPositional = functionParameters._requiredPositional,\n        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),\n        optionalPositional = functionParameters._optionalPositional,\n        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),\n        named = functionParameters._named,\n        substitutedNamed = H._substituteNamed(universe, named, typeArguments, depth);\n      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)\n        return functionParameters;\n      result = new H._FunctionParameters();\n      result._requiredPositional = substitutedRequiredPositional;\n      result._optionalPositional = substitutedOptionalPositional;\n      result._named = substitutedNamed;\n      return result;\n    },\n    setRuntimeTypeInfo: function(target, rti) {\n      target[init.arrayRti] = rti;\n      return target;\n    },\n    closureFunctionType: function(closure) {\n      var signature = closure.$signature;\n      if (signature != null) {\n        if (typeof signature == \"number\")\n          return H.getTypeFromTypesTable(signature);\n        return closure.$signature();\n      }\n      return null;\n    },\n    instanceOrFunctionType: function(object, testRti) {\n      var rti;\n      if (H.Rti__isUnionOfFunctionType(testRti))\n        if (object instanceof H.Closure) {\n          rti = H.closureFunctionType(object);\n          if (rti != null)\n            return rti;\n        }\n      return H.instanceType(object);\n    },\n    instanceType: function(object) {\n      var rti;\n      if (object instanceof P.Object) {\n        rti = object.$ti;\n        return rti != null ? rti : H._instanceTypeFromConstructor(object);\n      }\n      if (Array.isArray(object))\n        return H._arrayInstanceType(object);\n      return H._instanceTypeFromConstructor(J.getInterceptor$(object));\n    },\n    _arrayInstanceType: function(object) {\n      var rti = object[init.arrayRti],\n        defaultRti = type$.JSArray_dynamic;\n      if (rti == null)\n        return defaultRti;\n      if (rti.constructor !== defaultRti.constructor)\n        return defaultRti;\n      return rti;\n    },\n    _instanceType: function(object) {\n      var rti = object.$ti;\n      return rti != null ? rti : H._instanceTypeFromConstructor(object);\n    },\n    _instanceTypeFromConstructor: function(instance) {\n      var $constructor = instance.constructor,\n        probe = $constructor.$ccache;\n      if (probe != null)\n        return probe;\n      return H._instanceTypeFromConstructorMiss(instance, $constructor);\n    },\n    _instanceTypeFromConstructorMiss: function(instance, $constructor) {\n      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,\n        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);\n      $constructor.$ccache = rti;\n      return rti;\n    },\n    getTypeFromTypesTable: function(index) {\n      var rti,\n        table = init.types,\n        type = table[index];\n      if (typeof type == \"string\") {\n        rti = H._Universe_eval(init.typeUniverse, type, false);\n        table[index] = rti;\n        return rti;\n      }\n      return type;\n    },\n    getRuntimeType: function(object) {\n      var rti = object instanceof H.Closure ? H.closureFunctionType(object) : null;\n      return H.createRuntimeType(rti == null ? H.instanceType(object) : rti);\n    },\n    createRuntimeType: function(rti) {\n      var recipe, starErasedRecipe, starErasedRti,\n        type = rti._cachedRuntimeType;\n      if (type != null)\n        return type;\n      recipe = rti._canonicalRecipe;\n      starErasedRecipe = recipe.replace(/\\*/g, \"\");\n      if (starErasedRecipe === recipe)\n        return rti._cachedRuntimeType = new H._Type(rti);\n      starErasedRti = H._Universe_eval(init.typeUniverse, starErasedRecipe, true);\n      type = starErasedRti._cachedRuntimeType;\n      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new H._Type(starErasedRti) : type;\n    },\n    typeLiteral: function(recipe) {\n      return H.createRuntimeType(H._Universe_eval(init.typeUniverse, recipe, false));\n    },\n    _installSpecializedIsTest: function(object) {\n      var unstarred, isFn, testRti = this,\n        t1 = type$.Object;\n      if (testRti === t1)\n        return H._finishIsFn(testRti, object, H._isObject);\n      if (!H.isStrongTopType(testRti))\n        if (!(testRti === type$.legacy_Object))\n          t1 = testRti === t1;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      if (t1)\n        return H._finishIsFn(testRti, object, H._isTop);\n      t1 = testRti._kind;\n      unstarred = t1 === 6 ? testRti._primary : testRti;\n      if (unstarred === type$.int)\n        isFn = H._isInt;\n      else if (unstarred === type$.double || unstarred === type$.num)\n        isFn = H._isNum;\n      else if (unstarred === type$.String)\n        isFn = H._isString;\n      else\n        isFn = unstarred === type$.bool ? H._isBool : null;\n      if (isFn != null)\n        return H._finishIsFn(testRti, object, isFn);\n      if (unstarred._kind === 9) {\n        t1 = unstarred._primary;\n        if (unstarred._rest.every(H.isTopType)) {\n          testRti._specializedTestResource = \"$is\" + t1;\n          return H._finishIsFn(testRti, object, H._isTestViaProperty);\n        }\n      } else if (t1 === 7)\n        return H._finishIsFn(testRti, object, H._generalNullableIsTestImplementation);\n      return H._finishIsFn(testRti, object, H._generalIsTestImplementation);\n    },\n    _finishIsFn: function(testRti, object, isFn) {\n      testRti._is = isFn;\n      return testRti._is(object);\n    },\n    _installSpecializedAsCheck: function(object) {\n      var t1, asFn, testRti = this;\n      if (!H.isStrongTopType(testRti))\n        if (!(testRti === type$.legacy_Object))\n          t1 = testRti === type$.Object;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      if (t1)\n        asFn = H._asTop;\n      else if (testRti === type$.Object)\n        asFn = H._asObject;\n      else\n        asFn = H._generalNullableAsCheckImplementation;\n      testRti._as = asFn;\n      return testRti._as(object);\n    },\n    _nullIs: function(testRti) {\n      var t2,\n        t1 = testRti._kind;\n      if (!H.isStrongTopType(testRti))\n        if (!(testRti === type$.legacy_Object))\n          t2 = testRti === type$.Object;\n        else\n          t2 = true;\n      else\n        t2 = true;\n      return t2 || testRti === type$.legacy_Never || t1 === 7 || testRti === type$.Null || testRti === type$.JSNull;\n    },\n    _generalIsTestImplementation: function(object) {\n      var testRti = this;\n      if (object == null)\n        return H._nullIs(testRti);\n      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);\n    },\n    _generalNullableIsTestImplementation: function(object) {\n      if (object == null)\n        return true;\n      return this._primary._is(object);\n    },\n    _isTestViaProperty: function(object) {\n      var t1 = this,\n        tag = t1._specializedTestResource;\n      if (object instanceof P.Object)\n        return !!object[tag];\n      return !!J.getInterceptor$(object)[tag];\n    },\n    _generalAsCheckImplementation: function(object) {\n      var testRti = this;\n      if (object == null)\n        return object;\n      else if (testRti._is(object))\n        return object;\n      H._failedAsCheck(object, testRti);\n    },\n    _generalNullableAsCheckImplementation: function(object) {\n      var testRti = this;\n      if (object == null)\n        return object;\n      else if (testRti._is(object))\n        return object;\n      H._failedAsCheck(object, testRti);\n    },\n    _failedAsCheck: function(object, testRti) {\n      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));\n    },\n    _Error_compose: function(object, objectRti, checkedTypeDescription) {\n      var objectDescription = P.Error_safeToString(object),\n        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);\n      return objectDescription + \": type '\" + H.S(objectTypeDescription) + \"' is not a subtype of type '\" + H.S(checkedTypeDescription) + \"'\";\n    },\n    _TypeError$fromMessage: function(message) {\n      return new H._TypeError(\"TypeError: \" + message);\n    },\n    _TypeError__TypeError$forType: function(object, type) {\n      return new H._TypeError(\"TypeError: \" + H._Error_compose(object, null, type));\n    },\n    _isObject: function(object) {\n      return object != null;\n    },\n    _asObject: function(object) {\n      return object;\n    },\n    _isTop: function(object) {\n      return true;\n    },\n    _asTop: function(object) {\n      return object;\n    },\n    _isBool: function(object) {\n      return true === object || false === object;\n    },\n    _asBool: function(object) {\n      if (true === object)\n        return true;\n      if (false === object)\n        return false;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"bool\"));\n    },\n    _asBoolS: function(object) {\n      if (true === object)\n        return true;\n      if (false === object)\n        return false;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"bool\"));\n    },\n    _asBoolQ: function(object) {\n      if (true === object)\n        return true;\n      if (false === object)\n        return false;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"bool?\"));\n    },\n    _asDouble: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"double\"));\n    },\n    _asDoubleS: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"double\"));\n    },\n    _asDoubleQ: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"double?\"));\n    },\n    _isInt: function(object) {\n      return typeof object == \"number\" && Math.floor(object) === object;\n    },\n    _asInt: function(object) {\n      if (typeof object == \"number\" && Math.floor(object) === object)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"int\"));\n    },\n    _asIntS: function(object) {\n      if (typeof object == \"number\" && Math.floor(object) === object)\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"int\"));\n    },\n    _asIntQ: function(object) {\n      if (typeof object == \"number\" && Math.floor(object) === object)\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"int?\"));\n    },\n    _isNum: function(object) {\n      return typeof object == \"number\";\n    },\n    _asNum: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"num\"));\n    },\n    _asNumS: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"num\"));\n    },\n    _asNumQ: function(object) {\n      if (typeof object == \"number\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"num?\"));\n    },\n    _isString: function(object) {\n      return typeof object == \"string\";\n    },\n    _asString: function(object) {\n      if (typeof object == \"string\")\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"String\"));\n    },\n    _asStringS: function(object) {\n      if (typeof object == \"string\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"String\"));\n    },\n    _asStringQ: function(object) {\n      if (typeof object == \"string\")\n        return object;\n      if (object == null)\n        return object;\n      throw H.wrapException(H._TypeError__TypeError$forType(object, \"String?\"));\n    },\n    _rtiArrayToString: function(array, genericContext) {\n      var s, sep, i;\n      for (s = \"\", sep = \"\", i = 0; i < array.length; ++i, sep = \", \")\n        s += C.JSString_methods.$add(sep, H._rtiToString(array[i], genericContext));\n      return s;\n    },\n    _functionRtiToString: function(functionType, genericContext, bounds) {\n      var boundsLength, outerContextLength, offset, i, t1, t2, t3, typeParametersText, typeSep, boundRti, kind, t4, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = \", \";\n      if (bounds != null) {\n        boundsLength = bounds.length;\n        if (genericContext == null) {\n          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);\n          outerContextLength = null;\n        } else\n          outerContextLength = genericContext.length;\n        offset = genericContext.length;\n        for (i = boundsLength; i > 0; --i)\n          genericContext.push(\"T\" + (offset + i));\n        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, t3 = type$.Object, typeParametersText = \"<\", typeSep = \"\", i = 0; i < boundsLength; ++i, typeSep = _s2_) {\n          typeParametersText = C.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);\n          boundRti = bounds[i];\n          kind = boundRti._kind;\n          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))\n            if (!(boundRti === t2))\n              t4 = boundRti === t3;\n            else\n              t4 = true;\n          else\n            t4 = true;\n          if (!t4)\n            typeParametersText += C.JSString_methods.$add(\" extends \", H._rtiToString(boundRti, genericContext));\n        }\n        typeParametersText += \">\";\n      } else {\n        typeParametersText = \"\";\n        outerContextLength = null;\n      }\n      t1 = functionType._primary;\n      parameters = functionType._rest;\n      requiredPositional = parameters._requiredPositional;\n      requiredPositionalLength = requiredPositional.length;\n      optionalPositional = parameters._optionalPositional;\n      optionalPositionalLength = optionalPositional.length;\n      named = parameters._named;\n      namedLength = named.length;\n      returnTypeText = H._rtiToString(t1, genericContext);\n      for (argumentsText = \"\", sep = \"\", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)\n        argumentsText += C.JSString_methods.$add(sep, H._rtiToString(requiredPositional[i], genericContext));\n      if (optionalPositionalLength > 0) {\n        argumentsText += sep + \"[\";\n        for (sep = \"\", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)\n          argumentsText += C.JSString_methods.$add(sep, H._rtiToString(optionalPositional[i], genericContext));\n        argumentsText += \"]\";\n      }\n      if (namedLength > 0) {\n        argumentsText += sep + \"{\";\n        for (sep = \"\", i = 0; i < namedLength; i += 3, sep = _s2_) {\n          argumentsText += sep;\n          if (named[i + 1])\n            argumentsText += \"required \";\n          argumentsText += J.$add$ansx(H._rtiToString(named[i + 2], genericContext), \" \") + named[i];\n        }\n        argumentsText += \"}\";\n      }\n      if (outerContextLength != null) {\n        genericContext.toString;\n        genericContext.length = outerContextLength;\n      }\n      return typeParametersText + \"(\" + argumentsText + \") => \" + H.S(returnTypeText);\n    },\n    _rtiToString: function(rti, genericContext) {\n      var s, questionArgument, argumentKind, $name, $arguments, t1,\n        kind = rti._kind;\n      if (kind === 5)\n        return \"erased\";\n      if (kind === 2)\n        return \"dynamic\";\n      if (kind === 3)\n        return \"void\";\n      if (kind === 1)\n        return \"Never\";\n      if (kind === 4)\n        return \"any\";\n      if (kind === 6) {\n        s = H._rtiToString(rti._primary, genericContext);\n        return s;\n      }\n      if (kind === 7) {\n        questionArgument = rti._primary;\n        s = H._rtiToString(questionArgument, genericContext);\n        argumentKind = questionArgument._kind;\n        return J.$add$ansx(argumentKind === 11 || argumentKind === 12 ? C.JSString_methods.$add(\"(\", s) + \")\" : s, \"?\");\n      }\n      if (kind === 8)\n        return \"FutureOr<\" + H.S(H._rtiToString(rti._primary, genericContext)) + \">\";\n      if (kind === 9) {\n        $name = H._unminifyOrTag(rti._primary);\n        $arguments = rti._rest;\n        return $arguments.length !== 0 ? $name + (\"<\" + H._rtiArrayToString($arguments, genericContext) + \">\") : $name;\n      }\n      if (kind === 11)\n        return H._functionRtiToString(rti, genericContext, null);\n      if (kind === 12)\n        return H._functionRtiToString(rti._primary, genericContext, rti._rest);\n      if (kind === 13) {\n        genericContext.toString;\n        t1 = rti._primary;\n        return genericContext[genericContext.length - 1 - t1];\n      }\n      return \"?\";\n    },\n    _unminifyOrTag: function(rawClassName) {\n      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);\n      if (preserved != null)\n        return preserved;\n      return rawClassName;\n    },\n    _Universe_findRule: function(universe, targetType) {\n      var rule = universe.tR[targetType];\n      for (; typeof rule == \"string\";)\n        rule = universe.tR[rule];\n      return rule;\n    },\n    _Universe_findErasedType: function(universe, cls) {\n      var $length, erased, $arguments, i, $interface,\n        metadata = universe.eT,\n        probe = metadata[cls];\n      if (probe == null)\n        return H._Universe_eval(universe, cls, false);\n      else if (typeof probe == \"number\") {\n        $length = probe;\n        erased = H._Universe__lookupTerminalRti(universe, 5, \"#\");\n        $arguments = [];\n        for (i = 0; i < $length; ++i)\n          $arguments.push(erased);\n        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);\n        metadata[cls] = $interface;\n        return $interface;\n      } else\n        return probe;\n    },\n    _Universe_addRules: function(universe, rules) {\n      return H._Utils_objectAssign(universe.tR, rules);\n    },\n    _Universe_addErasedTypes: function(universe, types) {\n      return H._Utils_objectAssign(universe.eT, types);\n    },\n    _Universe_eval: function(universe, recipe, normalize) {\n      var rti,\n        cache = universe.eC,\n        probe = cache.get(recipe);\n      if (probe != null)\n        return probe;\n      rti = H._Parser_parse(H._Parser_create(universe, null, recipe, normalize));\n      cache.set(recipe, rti);\n      return rti;\n    },\n    _Universe_evalInEnvironment: function(universe, environment, recipe) {\n      var probe, rti,\n        cache = environment._evalCache;\n      if (cache == null)\n        cache = environment._evalCache = new Map();\n      probe = cache.get(recipe);\n      if (probe != null)\n        return probe;\n      rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, true));\n      cache.set(recipe, rti);\n      return rti;\n    },\n    _Universe_bind: function(universe, environment, argumentsRti) {\n      var argumentsRecipe, probe, rti,\n        cache = environment._bindCache;\n      if (cache == null)\n        cache = environment._bindCache = new Map();\n      argumentsRecipe = argumentsRti._canonicalRecipe;\n      probe = cache.get(argumentsRecipe);\n      if (probe != null)\n        return probe;\n      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);\n      cache.set(argumentsRecipe, rti);\n      return rti;\n    },\n    _Universe__installTypeTests: function(universe, rti) {\n      rti._as = H._installSpecializedAsCheck;\n      rti._is = H._installSpecializedIsTest;\n      return rti;\n    },\n    _Universe__lookupTerminalRti: function(universe, kind, key) {\n      var rti, t1,\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      rti = new H.Rti(null, null);\n      rti._kind = kind;\n      rti._canonicalRecipe = key;\n      t1 = H._Universe__installTypeTests(universe, rti);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__lookupStarRti: function(universe, baseType, normalize) {\n      var t1,\n        key = baseType._canonicalRecipe + \"*\",\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__createStarRti: function(universe, baseType, key, normalize) {\n      var baseKind, t1, rti;\n      if (normalize) {\n        baseKind = baseType._kind;\n        if (!H.isStrongTopType(baseType))\n          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;\n        else\n          t1 = true;\n        if (t1)\n          return baseType;\n      }\n      rti = new H.Rti(null, null);\n      rti._kind = 6;\n      rti._primary = baseType;\n      rti._canonicalRecipe = key;\n      return H._Universe__installTypeTests(universe, rti);\n    },\n    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {\n      var t1,\n        key = baseType._canonicalRecipe + \"?\",\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {\n      var baseKind, t1, starArgument, rti;\n      if (normalize) {\n        baseKind = baseType._kind;\n        if (!H.isStrongTopType(baseType))\n          if (!(baseType === type$.Null || baseType === type$.JSNull))\n            if (baseKind !== 7)\n              t1 = baseKind === 8 && H.isNullable(baseType._primary);\n            else\n              t1 = true;\n          else\n            t1 = true;\n        else\n          t1 = true;\n        if (t1)\n          return baseType;\n        else if (baseKind === 1 || baseType === type$.legacy_Never)\n          return type$.Null;\n        else if (baseKind === 6) {\n          starArgument = baseType._primary;\n          if (starArgument._kind === 8 && H.isNullable(starArgument._primary))\n            return starArgument;\n          else\n            return H.Rti__getQuestionFromStar(universe, baseType);\n        }\n      }\n      rti = new H.Rti(null, null);\n      rti._kind = 7;\n      rti._primary = baseType;\n      rti._canonicalRecipe = key;\n      return H._Universe__installTypeTests(universe, rti);\n    },\n    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {\n      var t1,\n        key = baseType._canonicalRecipe + \"/\",\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {\n      var t1, t2, rti;\n      if (normalize) {\n        t1 = baseType._kind;\n        if (!H.isStrongTopType(baseType))\n          if (!(baseType === type$.legacy_Object))\n            t2 = baseType === type$.Object;\n          else\n            t2 = true;\n        else\n          t2 = true;\n        if (t2 || baseType === type$.Object)\n          return baseType;\n        else if (t1 === 1)\n          return H._Universe__lookupInterfaceRti(universe, \"Future\", [baseType]);\n        else if (baseType === type$.Null || baseType === type$.JSNull)\n          return type$.nullable_Future_Null;\n      }\n      rti = new H.Rti(null, null);\n      rti._kind = 8;\n      rti._primary = baseType;\n      rti._canonicalRecipe = key;\n      return H._Universe__installTypeTests(universe, rti);\n    },\n    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {\n      var rti, t1,\n        key = \"\" + index + \"^\",\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      rti = new H.Rti(null, null);\n      rti._kind = 13;\n      rti._primary = index;\n      rti._canonicalRecipe = key;\n      t1 = H._Universe__installTypeTests(universe, rti);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__canonicalRecipeJoin: function($arguments) {\n      var s, sep, i,\n        $length = $arguments.length;\n      for (s = \"\", sep = \"\", i = 0; i < $length; ++i, sep = \",\")\n        s += sep + $arguments[i]._canonicalRecipe;\n      return s;\n    },\n    _Universe__canonicalRecipeJoinNamed: function($arguments) {\n      var s, sep, i, t1, nameSep, s0,\n        $length = $arguments.length;\n      for (s = \"\", sep = \"\", i = 0; i < $length; i += 3, sep = \",\") {\n        t1 = $arguments[i];\n        nameSep = $arguments[i + 1] ? \"!\" : \":\";\n        s0 = $arguments[i + 2]._canonicalRecipe;\n        s += sep + t1 + nameSep + s0;\n      }\n      return s;\n    },\n    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {\n      var probe, rti, t1,\n        s = $name;\n      if ($arguments.length !== 0)\n        s += \"<\" + H._Universe__canonicalRecipeJoin($arguments) + \">\";\n      probe = universe.eC.get(s);\n      if (probe != null)\n        return probe;\n      rti = new H.Rti(null, null);\n      rti._kind = 9;\n      rti._primary = $name;\n      rti._rest = $arguments;\n      if ($arguments.length > 0)\n        rti._precomputed1 = $arguments[0];\n      rti._canonicalRecipe = s;\n      t1 = H._Universe__installTypeTests(universe, rti);\n      universe.eC.set(s, t1);\n      return t1;\n    },\n    _Universe__lookupBindingRti: function(universe, base, $arguments) {\n      var newBase, newArguments, key, probe, rti, t1;\n      if (base._kind === 10) {\n        newBase = base._primary;\n        newArguments = base._rest.concat($arguments);\n      } else {\n        newArguments = $arguments;\n        newBase = base;\n      }\n      key = newBase._canonicalRecipe + (\";<\" + H._Universe__canonicalRecipeJoin(newArguments) + \">\");\n      probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      rti = new H.Rti(null, null);\n      rti._kind = 10;\n      rti._primary = newBase;\n      rti._rest = newArguments;\n      rti._canonicalRecipe = key;\n      t1 = H._Universe__installTypeTests(universe, rti);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {\n      var sep, t1, key, probe, rti,\n        s = returnType._canonicalRecipe,\n        requiredPositional = parameters._requiredPositional,\n        requiredPositionalLength = requiredPositional.length,\n        optionalPositional = parameters._optionalPositional,\n        optionalPositionalLength = optionalPositional.length,\n        named = parameters._named,\n        namedLength = named.length,\n        recipe = \"(\" + H._Universe__canonicalRecipeJoin(requiredPositional);\n      if (optionalPositionalLength > 0) {\n        sep = requiredPositionalLength > 0 ? \",\" : \"\";\n        t1 = H._Universe__canonicalRecipeJoin(optionalPositional);\n        recipe += sep + \"[\" + t1 + \"]\";\n      }\n      if (namedLength > 0) {\n        sep = requiredPositionalLength > 0 ? \",\" : \"\";\n        t1 = H._Universe__canonicalRecipeJoinNamed(named);\n        recipe += sep + \"{\" + t1 + \"}\";\n      }\n      key = s + (recipe + \")\");\n      probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      rti = new H.Rti(null, null);\n      rti._kind = 11;\n      rti._primary = returnType;\n      rti._rest = parameters;\n      rti._canonicalRecipe = key;\n      t1 = H._Universe__installTypeTests(universe, rti);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {\n      var t1,\n        key = baseFunctionType._canonicalRecipe + (\"<\" + H._Universe__canonicalRecipeJoin(bounds) + \">\"),\n        probe = universe.eC.get(key);\n      if (probe != null)\n        return probe;\n      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);\n      universe.eC.set(key, t1);\n      return t1;\n    },\n    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {\n      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;\n      if (normalize) {\n        $length = bounds.length;\n        typeArguments = new Array($length);\n        for (count = 0, i = 0; i < $length; ++i) {\n          bound = bounds[i];\n          if (bound._kind === 1) {\n            typeArguments[i] = bound;\n            ++count;\n          }\n        }\n        if (count > 0) {\n          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);\n          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);\n          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);\n        }\n      }\n      rti = new H.Rti(null, null);\n      rti._kind = 12;\n      rti._primary = baseFunctionType;\n      rti._rest = bounds;\n      rti._canonicalRecipe = key;\n      return H._Universe__installTypeTests(universe, rti);\n    },\n    _Parser_create: function(universe, environment, recipe, normalize) {\n      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};\n    },\n    _Parser_parse: function(parser) {\n      var t1, i, ch, universe, array, head, base, u, parameters, optionalPositional, named, item,\n        source = parser.r,\n        stack = parser.s;\n      for (t1 = source.length, i = 0; i < t1;) {\n        ch = source.charCodeAt(i);\n        if (ch >= 48 && ch <= 57)\n          i = H._Parser_handleDigit(i + 1, ch, source, stack);\n        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)\n          i = H._Parser_handleIdentifier(parser, i, source, stack, false);\n        else if (ch === 46)\n          i = H._Parser_handleIdentifier(parser, i, source, stack, true);\n        else {\n          ++i;\n          switch (ch) {\n            case 44:\n              break;\n            case 58:\n              stack.push(false);\n              break;\n            case 33:\n              stack.push(true);\n              break;\n            case 59:\n              stack.push(H._Parser_toType(parser.u, parser.e, stack.pop()));\n              break;\n            case 94:\n              stack.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, stack.pop()));\n              break;\n            case 35:\n              stack.push(H._Universe__lookupTerminalRti(parser.u, 5, \"#\"));\n              break;\n            case 64:\n              stack.push(H._Universe__lookupTerminalRti(parser.u, 2, \"@\"));\n              break;\n            case 126:\n              stack.push(H._Universe__lookupTerminalRti(parser.u, 3, \"~\"));\n              break;\n            case 60:\n              stack.push(parser.p);\n              parser.p = stack.length;\n              break;\n            case 62:\n              universe = parser.u;\n              array = stack.splice(parser.p);\n              H._Parser_toTypes(parser.u, parser.e, array);\n              parser.p = stack.pop();\n              head = stack.pop();\n              if (typeof head == \"string\")\n                stack.push(H._Universe__lookupInterfaceRti(universe, head, array));\n              else {\n                base = H._Parser_toType(universe, parser.e, head);\n                switch (base._kind) {\n                  case 11:\n                    stack.push(H._Universe__lookupGenericFunctionRti(universe, base, array, parser.n));\n                    break;\n                  default:\n                    stack.push(H._Universe__lookupBindingRti(universe, base, array));\n                    break;\n                }\n              }\n              break;\n            case 38:\n              H._Parser_handleExtendedOperations(parser, stack);\n              break;\n            case 42:\n              u = parser.u;\n              stack.push(H._Universe__lookupStarRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));\n              break;\n            case 63:\n              u = parser.u;\n              stack.push(H._Universe__lookupQuestionRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));\n              break;\n            case 47:\n              u = parser.u;\n              stack.push(H._Universe__lookupFutureOrRti(u, H._Parser_toType(u, parser.e, stack.pop()), parser.n));\n              break;\n            case 40:\n              stack.push(parser.p);\n              parser.p = stack.length;\n              break;\n            case 41:\n              universe = parser.u;\n              parameters = new H._FunctionParameters();\n              optionalPositional = universe.sEA;\n              named = universe.sEA;\n              head = stack.pop();\n              if (typeof head == \"number\")\n                switch (head) {\n                  case -1:\n                    optionalPositional = stack.pop();\n                    break;\n                  case -2:\n                    named = stack.pop();\n                    break;\n                  default:\n                    stack.push(head);\n                    break;\n                }\n              else\n                stack.push(head);\n              array = stack.splice(parser.p);\n              H._Parser_toTypes(parser.u, parser.e, array);\n              parser.p = stack.pop();\n              parameters._requiredPositional = array;\n              parameters._optionalPositional = optionalPositional;\n              parameters._named = named;\n              stack.push(H._Universe__lookupFunctionRti(universe, H._Parser_toType(universe, parser.e, stack.pop()), parameters));\n              break;\n            case 91:\n              stack.push(parser.p);\n              parser.p = stack.length;\n              break;\n            case 93:\n              array = stack.splice(parser.p);\n              H._Parser_toTypes(parser.u, parser.e, array);\n              parser.p = stack.pop();\n              stack.push(array);\n              stack.push(-1);\n              break;\n            case 123:\n              stack.push(parser.p);\n              parser.p = stack.length;\n              break;\n            case 125:\n              array = stack.splice(parser.p);\n              H._Parser_toTypesNamed(parser.u, parser.e, array);\n              parser.p = stack.pop();\n              stack.push(array);\n              stack.push(-2);\n              break;\n            default:\n              throw \"Bad character \" + ch;\n          }\n        }\n      }\n      item = stack.pop();\n      return H._Parser_toType(parser.u, parser.e, item);\n    },\n    _Parser_handleDigit: function(i, digit, source, stack) {\n      var t1, ch,\n        value = digit - 48;\n      for (t1 = source.length; i < t1; ++i) {\n        ch = source.charCodeAt(i);\n        if (!(ch >= 48 && ch <= 57))\n          break;\n        value = value * 10 + (ch - 48);\n      }\n      stack.push(value);\n      return i;\n    },\n    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {\n      var t1, ch, t2, string, environment, recipe,\n        i = start + 1;\n      for (t1 = source.length; i < t1; ++i) {\n        ch = source.charCodeAt(i);\n        if (ch === 46) {\n          if (hasPeriod)\n            break;\n          hasPeriod = true;\n        } else {\n          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))\n            t2 = ch >= 48 && ch <= 57;\n          else\n            t2 = true;\n          if (!t2)\n            break;\n        }\n      }\n      string = source.substring(start, i);\n      if (hasPeriod) {\n        t1 = parser.u;\n        environment = parser.e;\n        if (environment._kind === 10)\n          environment = environment._primary;\n        recipe = H._Universe_findRule(t1, environment._primary)[string];\n        if (recipe == null)\n          H.throwExpression('No \"' + string + '\" in \"' + H.Rti__getCanonicalRecipe(environment) + '\"');\n        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));\n      } else\n        stack.push(string);\n      return i;\n    },\n    _Parser_handleExtendedOperations: function(parser, stack) {\n      var $top = stack.pop();\n      if (0 === $top) {\n        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, \"0&\"));\n        return;\n      }\n      if (1 === $top) {\n        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, \"1&\"));\n        return;\n      }\n      throw H.wrapException(P.AssertionError$(\"Unexpected extended operation \" + H.S($top)));\n    },\n    _Parser_toType: function(universe, environment, item) {\n      if (typeof item == \"string\")\n        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);\n      else if (typeof item == \"number\")\n        return H._Parser_indexToType(universe, environment, item);\n      else\n        return item;\n    },\n    _Parser_toTypes: function(universe, environment, items) {\n      var i,\n        $length = items.length;\n      for (i = 0; i < $length; ++i)\n        items[i] = H._Parser_toType(universe, environment, items[i]);\n    },\n    _Parser_toTypesNamed: function(universe, environment, items) {\n      var i,\n        $length = items.length;\n      for (i = 2; i < $length; i += 3)\n        items[i] = H._Parser_toType(universe, environment, items[i]);\n    },\n    _Parser_indexToType: function(universe, environment, index) {\n      var typeArguments, len,\n        kind = environment._kind;\n      if (kind === 10) {\n        if (index === 0)\n          return environment._primary;\n        typeArguments = environment._rest;\n        len = typeArguments.length;\n        if (index <= len)\n          return typeArguments[index - 1];\n        index -= len;\n        environment = environment._primary;\n        kind = environment._kind;\n      } else if (index === 0)\n        return environment;\n      if (kind !== 9)\n        throw H.wrapException(P.AssertionError$(\"Indexed base must be an interface type\"));\n      typeArguments = environment._rest;\n      if (index <= typeArguments.length)\n        return typeArguments[index - 1];\n      throw H.wrapException(P.AssertionError$(\"Bad index \" + index + \" for \" + environment.toString$0(0)));\n    },\n    _isSubtype: function(universe, s, sEnv, t, tEnv) {\n      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;\n      if (s === t)\n        return true;\n      if (!H.isStrongTopType(t))\n        if (!(t === type$.legacy_Object))\n          t1 = t === type$.Object;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      if (t1)\n        return true;\n      sKind = s._kind;\n      if (sKind === 4)\n        return true;\n      if (H.isStrongTopType(s))\n        return false;\n      if (s._kind !== 1)\n        t1 = s === type$.Null || s === type$.JSNull;\n      else\n        t1 = true;\n      if (t1)\n        return true;\n      leftTypeVariable = sKind === 13;\n      if (leftTypeVariable)\n        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))\n          return true;\n      tKind = t._kind;\n      if (sKind === 6)\n        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);\n      if (tKind === 6) {\n        t1 = t._primary;\n        return H._isSubtype(universe, s, sEnv, t1, tEnv);\n      }\n      if (sKind === 8) {\n        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))\n          return false;\n        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);\n      }\n      if (sKind === 7) {\n        t1 = H._isSubtype(universe, s._primary, sEnv, t, tEnv);\n        return t1;\n      }\n      if (tKind === 8) {\n        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))\n          return true;\n        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);\n      }\n      if (tKind === 7) {\n        t1 = H._isSubtype(universe, s, sEnv, t._primary, tEnv);\n        return t1;\n      }\n      if (leftTypeVariable)\n        return false;\n      t1 = sKind !== 11;\n      if ((!t1 || sKind === 12) && t === type$.Function)\n        return true;\n      if (tKind === 12) {\n        if (s === type$.JavaScriptFunction)\n          return true;\n        if (sKind !== 12)\n          return false;\n        sBounds = s._rest;\n        tBounds = t._rest;\n        sLength = sBounds.length;\n        if (sLength !== tBounds.length)\n          return false;\n        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);\n        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);\n        for (i = 0; i < sLength; ++i) {\n          sBound = sBounds[i];\n          tBound = tBounds[i];\n          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))\n            return false;\n        }\n        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);\n      }\n      if (tKind === 11) {\n        if (s === type$.JavaScriptFunction)\n          return true;\n        if (t1)\n          return false;\n        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);\n      }\n      if (sKind === 9) {\n        if (tKind !== 9)\n          return false;\n        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);\n      }\n      return false;\n    },\n    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {\n      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName;\n      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))\n        return false;\n      sParameters = s._rest;\n      tParameters = t._rest;\n      sRequiredPositional = sParameters._requiredPositional;\n      tRequiredPositional = tParameters._requiredPositional;\n      sRequiredPositionalLength = sRequiredPositional.length;\n      tRequiredPositionalLength = tRequiredPositional.length;\n      if (sRequiredPositionalLength > tRequiredPositionalLength)\n        return false;\n      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;\n      sOptionalPositional = sParameters._optionalPositional;\n      tOptionalPositional = tParameters._optionalPositional;\n      sOptionalPositionalLength = sOptionalPositional.length;\n      tOptionalPositionalLength = tOptionalPositional.length;\n      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)\n        return false;\n      for (i = 0; i < sRequiredPositionalLength; ++i) {\n        t1 = sRequiredPositional[i];\n        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))\n          return false;\n      }\n      for (i = 0; i < requiredPositionalDelta; ++i) {\n        t1 = sOptionalPositional[i];\n        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))\n          return false;\n      }\n      for (i = 0; i < tOptionalPositionalLength; ++i) {\n        t1 = sOptionalPositional[requiredPositionalDelta + i];\n        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))\n          return false;\n      }\n      sNamed = sParameters._named;\n      tNamed = tParameters._named;\n      sNamedLength = sNamed.length;\n      tNamedLength = tNamed.length;\n      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {\n        tName = tNamed[tIndex];\n        for (; true;) {\n          if (sIndex >= sNamedLength)\n            return false;\n          sName = sNamed[sIndex];\n          sIndex += 3;\n          if (tName < sName)\n            return false;\n          if (sName < tName)\n            continue;\n          t1 = sNamed[sIndex - 1];\n          if (!H._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))\n            return false;\n          break;\n        }\n      }\n      return true;\n    },\n    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {\n      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,\n        sName = s._primary,\n        tName = t._primary;\n      if (sName === tName) {\n        sArgs = s._rest;\n        tArgs = t._rest;\n        $length = sArgs.length;\n        for (i = 0; i < $length; ++i) {\n          t1 = sArgs[i];\n          t2 = tArgs[i];\n          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))\n            return false;\n        }\n        return true;\n      }\n      if (t === type$.Object)\n        return true;\n      rule = H._Universe_findRule(universe, sName);\n      if (rule == null)\n        return false;\n      supertypeArgs = rule[tName];\n      if (supertypeArgs == null)\n        return false;\n      $length = supertypeArgs.length;\n      tArgs = t._rest;\n      for (i = 0; i < $length; ++i)\n        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))\n          return false;\n      return true;\n    },\n    isNullable: function(t) {\n      var t1,\n        kind = t._kind;\n      if (!(t === type$.Null || t === type$.JSNull))\n        if (!H.isStrongTopType(t))\n          if (kind !== 7)\n            if (!(kind === 6 && H.isNullable(t._primary)))\n              t1 = kind === 8 && H.isNullable(t._primary);\n            else\n              t1 = true;\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    isTopType: function(t) {\n      var t1;\n      if (!H.isStrongTopType(t))\n        if (!(t === type$.legacy_Object))\n          t1 = t === type$.Object;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    isStrongTopType: function(t) {\n      var kind = t._kind;\n      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;\n    },\n    _Utils_objectAssign: function(o, other) {\n      var i, key,\n        keys = Object.keys(other),\n        $length = keys.length;\n      for (i = 0; i < $length; ++i) {\n        key = keys[i];\n        o[key] = other[key];\n      }\n    },\n    Rti: function Rti(t0, t1) {\n      var _ = this;\n      _._as = t0;\n      _._is = t1;\n      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;\n      _._kind = 0;\n      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;\n    },\n    _FunctionParameters: function _FunctionParameters() {\n      this._named = this._optionalPositional = this._requiredPositional = null;\n    },\n    _Type: function _Type(t0) {\n      this._rti = t0;\n    },\n    _Error: function _Error() {\n    },\n    _TypeError: function _TypeError(t0) {\n      this._message = t0;\n    },\n    unmangleGlobalNameIfPreservedAnyways: function($name) {\n      return init.mangledGlobalNames[$name];\n    },\n    printString: function(string) {\n      if (typeof dartPrint == \"function\") {\n        dartPrint(string);\n        return;\n      }\n      if (typeof console == \"object\" && typeof console.log != \"undefined\") {\n        console.log(string);\n        return;\n      }\n      if (typeof window == \"object\")\n        return;\n      if (typeof print == \"function\") {\n        print(string);\n        return;\n      }\n      throw \"Unable to print message: \" + String(string);\n    }\n  },\n  J = {\n    makeDispatchRecord: function(interceptor, proto, extension, indexability) {\n      return {i: interceptor, p: proto, e: extension, x: indexability};\n    },\n    getNativeInterceptor: function(object) {\n      var proto, objectProto, $constructor, interceptor,\n        record = object[init.dispatchPropertyName];\n      if (record == null)\n        if ($.initNativeDispatchFlag == null) {\n          H.initNativeDispatch();\n          record = object[init.dispatchPropertyName];\n        }\n      if (record != null) {\n        proto = record.p;\n        if (false === proto)\n          return record.i;\n        if (true === proto)\n          return object;\n        objectProto = Object.getPrototypeOf(object);\n        if (proto === objectProto)\n          return record.i;\n        if (record.e === objectProto)\n          throw H.wrapException(P.UnimplementedError$(\"Return interceptor for \" + H.S(proto(object, record))));\n      }\n      $constructor = object.constructor;\n      interceptor = $constructor == null ? null : $constructor[J.JS_INTEROP_INTERCEPTOR_TAG()];\n      if (interceptor != null)\n        return interceptor;\n      interceptor = H.lookupAndCacheInterceptor(object);\n      if (interceptor != null)\n        return interceptor;\n      if (typeof object == \"function\")\n        return C.JavaScriptFunction_methods;\n      proto = Object.getPrototypeOf(object);\n      if (proto == null)\n        return C.PlainJavaScriptObject_methods;\n      if (proto === Object.prototype)\n        return C.PlainJavaScriptObject_methods;\n      if (typeof $constructor == \"function\") {\n        Object.defineProperty($constructor, J.JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});\n        return C.UnknownJavaScriptObject_methods;\n      }\n      return C.UnknownJavaScriptObject_methods;\n    },\n    JS_INTEROP_INTERCEPTOR_TAG: function() {\n      var t1 = $._JS_INTEROP_INTERCEPTOR_TAG;\n      return t1 == null ? $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag(\"_$dart_js\") : t1;\n    },\n    JSArray_JSArray$fixed: function($length, $E) {\n      if (!H._isInt($length))\n        throw H.wrapException(P.ArgumentError$value($length, \"length\", \"is not an integer\"));\n      if ($length < 0 || $length > 4294967295)\n        throw H.wrapException(P.RangeError$range($length, 0, 4294967295, \"length\", null));\n      return J.JSArray_JSArray$markFixed(new Array($length), $E);\n    },\n    JSArray_JSArray$growable: function($length, $E) {\n      if (!H._isInt($length) || $length < 0)\n        throw H.wrapException(P.ArgumentError$(\"Length must be a non-negative integer: \" + H.S($length)));\n      return H.setRuntimeTypeInfo(new Array($length), $E._eval$1(\"JSArray<0>\"));\n    },\n    JSArray_JSArray$markFixed: function(allocation, $E) {\n      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, $E._eval$1(\"JSArray<0>\")));\n    },\n    JSArray_markFixedList: function(list) {\n      list.fixed$length = Array;\n      return list;\n    },\n    JSArray_markUnmodifiableList: function(list) {\n      list.fixed$length = Array;\n      list.immutable$list = Array;\n      return list;\n    },\n    JSArray__compareAny: function(a, b) {\n      return J.compareTo$1$ns(a, b);\n    },\n    JSString__isWhitespace: function(codeUnit) {\n      if (codeUnit < 256)\n        switch (codeUnit) {\n          case 9:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 32:\n          case 133:\n          case 160:\n            return true;\n          default:\n            return false;\n        }\n      switch (codeUnit) {\n        case 5760:\n        case 8192:\n        case 8193:\n        case 8194:\n        case 8195:\n        case 8196:\n        case 8197:\n        case 8198:\n        case 8199:\n        case 8200:\n        case 8201:\n        case 8202:\n        case 8232:\n        case 8233:\n        case 8239:\n        case 8287:\n        case 12288:\n        case 65279:\n          return true;\n        default:\n          return false;\n      }\n    },\n    JSString__skipLeadingWhitespace: function(string, index) {\n      var t1, codeUnit;\n      for (t1 = string.length; index < t1;) {\n        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);\n        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))\n          break;\n        ++index;\n      }\n      return index;\n    },\n    JSString__skipTrailingWhitespace: function(string, index) {\n      var index0, codeUnit;\n      for (; index > 0; index = index0) {\n        index0 = index - 1;\n        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);\n        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))\n          break;\n      }\n      return index;\n    },\n    getInterceptor$: function(receiver) {\n      if (typeof receiver == \"number\") {\n        if (Math.floor(receiver) == receiver)\n          return J.JSInt.prototype;\n        return J.JSDouble.prototype;\n      }\n      if (typeof receiver == \"string\")\n        return J.JSString.prototype;\n      if (receiver == null)\n        return J.JSNull.prototype;\n      if (typeof receiver == \"boolean\")\n        return J.JSBool.prototype;\n      if (receiver.constructor == Array)\n        return J.JSArray.prototype;\n      if (typeof receiver != \"object\") {\n        if (typeof receiver == \"function\")\n          return J.JavaScriptFunction.prototype;\n        return receiver;\n      }\n      if (receiver instanceof P.Object)\n        return receiver;\n      return J.getNativeInterceptor(receiver);\n    },\n    getInterceptor$ansx: function(receiver) {\n      if (typeof receiver == \"number\")\n        return J.JSNumber.prototype;\n      if (typeof receiver == \"string\")\n        return J.JSString.prototype;\n      if (receiver == null)\n        return receiver;\n      if (receiver.constructor == Array)\n        return J.JSArray.prototype;\n      if (typeof receiver != \"object\") {\n        if (typeof receiver == \"function\")\n          return J.JavaScriptFunction.prototype;\n        return receiver;\n      }\n      if (receiver instanceof P.Object)\n        return receiver;\n      return J.getNativeInterceptor(receiver);\n    },\n    getInterceptor$asx: function(receiver) {\n      if (typeof receiver == \"string\")\n        return J.JSString.prototype;\n      if (receiver == null)\n        return receiver;\n      if (receiver.constructor == Array)\n        return J.JSArray.prototype;\n      if (typeof receiver != \"object\") {\n        if (typeof receiver == \"function\")\n          return J.JavaScriptFunction.prototype;\n        return receiver;\n      }\n      if (receiver instanceof P.Object)\n        return receiver;\n      return J.getNativeInterceptor(receiver);\n    },\n    getInterceptor$ax: function(receiver) {\n      if (receiver == null)\n        return receiver;\n      if (receiver.constructor == Array)\n        return J.JSArray.prototype;\n      if (typeof receiver != \"object\") {\n        if (typeof receiver == \"function\")\n          return J.JavaScriptFunction.prototype;\n        return receiver;\n      }\n      if (receiver instanceof P.Object)\n        return receiver;\n      return J.getNativeInterceptor(receiver);\n    },\n    getInterceptor$n: function(receiver) {\n      if (typeof receiver == \"number\")\n        return J.JSNumber.prototype;\n      if (receiver == null)\n        return receiver;\n      if (!(receiver instanceof P.Object))\n        return J.UnknownJavaScriptObject.prototype;\n      return receiver;\n    },\n    getInterceptor$ns: function(receiver) {\n      if (typeof receiver == \"number\")\n        return J.JSNumber.prototype;\n      if (typeof receiver == \"string\")\n        return J.JSString.prototype;\n      if (receiver == null)\n        return receiver;\n      if (!(receiver instanceof P.Object))\n        return J.UnknownJavaScriptObject.prototype;\n      return receiver;\n    },\n    getInterceptor$s: function(receiver) {\n      if (typeof receiver == \"string\")\n        return J.JSString.prototype;\n      if (receiver == null)\n        return receiver;\n      if (!(receiver instanceof P.Object))\n        return J.UnknownJavaScriptObject.prototype;\n      return receiver;\n    },\n    getInterceptor$u: function(receiver) {\n      if (receiver == null)\n        return J.JSNull.prototype;\n      if (!(receiver instanceof P.Object))\n        return J.UnknownJavaScriptObject.prototype;\n      return receiver;\n    },\n    getInterceptor$x: function(receiver) {\n      if (receiver == null)\n        return receiver;\n      if (typeof receiver != \"object\") {\n        if (typeof receiver == \"function\")\n          return J.JavaScriptFunction.prototype;\n        return receiver;\n      }\n      if (receiver instanceof P.Object)\n        return receiver;\n      return J.getNativeInterceptor(receiver);\n    },\n    getInterceptor$z: function(receiver) {\n      if (receiver == null)\n        return receiver;\n      if (!(receiver instanceof P.Object))\n        return J.UnknownJavaScriptObject.prototype;\n      return receiver;\n    },\n    set$FALSE$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$FALSE(receiver, value);\n    },\n    set$NULL$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$NULL(receiver, value);\n    },\n    set$TRUE$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$TRUE(receiver, value);\n    },\n    set$cli_pkg_main_0_$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$cli_pkg_main_0_(receiver, value);\n    },\n    set$context$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$context(receiver, value);\n    },\n    set$dartValue$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$dartValue(receiver, value);\n    },\n    set$exitCode$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$exitCode(receiver, value);\n    },\n    set$info$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$info(receiver, value);\n    },\n    set$length$asx: function(receiver, value) {\n      return J.getInterceptor$asx(receiver).set$length(receiver, value);\n    },\n    set$render$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$render(receiver, value);\n    },\n    set$renderSync$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$renderSync(receiver, value);\n    },\n    set$types$x: function(receiver, value) {\n      return J.getInterceptor$x(receiver).set$types(receiver, value);\n    },\n    get$code$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$code(receiver);\n    },\n    get$current$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$current(receiver);\n    },\n    get$dartValue$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$dartValue(receiver);\n    },\n    get$end$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$end(receiver);\n    },\n    get$env$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$env(receiver);\n    },\n    get$exitCode$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$exitCode(receiver);\n    },\n    get$fiber$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$fiber(receiver);\n    },\n    get$file$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$file(receiver);\n    },\n    get$first$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).get$first(receiver);\n    },\n    get$hashCode$: function(receiver) {\n      return J.getInterceptor$(receiver).get$hashCode(receiver);\n    },\n    get$isEmpty$asx: function(receiver) {\n      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);\n    },\n    get$isNotEmpty$asx: function(receiver) {\n      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);\n    },\n    get$isTTY$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$isTTY(receiver);\n    },\n    get$iterator$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).get$iterator(receiver);\n    },\n    get$keys$z: function(receiver) {\n      return J.getInterceptor$z(receiver).get$keys(receiver);\n    },\n    get$last$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).get$last(receiver);\n    },\n    get$length$asx: function(receiver) {\n      return J.getInterceptor$asx(receiver).get$length(receiver);\n    },\n    get$message$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$message(receiver);\n    },\n    get$mtime$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$mtime(receiver);\n    },\n    get$options$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$options(receiver);\n    },\n    get$path$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$path(receiver);\n    },\n    get$platform$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$platform(receiver);\n    },\n    get$reversed$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).get$reversed(receiver);\n    },\n    get$runtimeType$u: function(receiver) {\n      return J.getInterceptor$u(receiver).get$runtimeType(receiver);\n    },\n    get$single$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).get$single(receiver);\n    },\n    get$sourceUrl$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$sourceUrl(receiver);\n    },\n    get$stderr$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$stderr(receiver);\n    },\n    get$stdin$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$stdin(receiver);\n    },\n    get$stdout$x: function(receiver) {\n      return J.getInterceptor$x(receiver).get$stdout(receiver);\n    },\n    get$values$z: function(receiver) {\n      return J.getInterceptor$z(receiver).get$values(receiver);\n    },\n    $add$ansx: function(receiver, a0) {\n      if (typeof receiver == \"number\" && typeof a0 == \"number\")\n        return receiver + a0;\n      return J.getInterceptor$ansx(receiver).$add(receiver, a0);\n    },\n    $eq$: function(receiver, a0) {\n      if (receiver == null)\n        return a0 == null;\n      if (typeof receiver != \"object\")\n        return a0 != null && receiver === a0;\n      return J.getInterceptor$(receiver).$eq(receiver, a0);\n    },\n    $index$asx: function(receiver, a0) {\n      if (typeof a0 === \"number\")\n        if (receiver.constructor == Array || typeof receiver == \"string\" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))\n          if (a0 >>> 0 === a0 && a0 < receiver.length)\n            return receiver[a0];\n      return J.getInterceptor$asx(receiver).$index(receiver, a0);\n    },\n    $indexSet$ax: function(receiver, a0, a1) {\n      if (typeof a0 === \"number\")\n        if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)\n          return receiver[a0] = a1;\n      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);\n    },\n    _codeUnitAt$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver)._codeUnitAt$1(receiver, a0);\n    },\n    add$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).add$1(receiver, a0);\n    },\n    addAll$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);\n    },\n    allMatches$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);\n    },\n    allMatches$2$s: function(receiver, a0, a1) {\n      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);\n    },\n    any$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).any$1(receiver, a0);\n    },\n    apply$2$x: function(receiver, a0, a1) {\n      return J.getInterceptor$x(receiver).apply$2(receiver, a0, a1);\n    },\n    cast$1$0$ax: function(receiver, $T1) {\n      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);\n    },\n    ceil$0$n: function(receiver) {\n      return J.getInterceptor$n(receiver).ceil$0(receiver);\n    },\n    clamp$2$n: function(receiver, a0, a1) {\n      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);\n    },\n    close$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).close$0(receiver);\n    },\n    codeUnitAt$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);\n    },\n    compareTo$1$ns: function(receiver, a0) {\n      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);\n    },\n    contains$1$asx: function(receiver, a0) {\n      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);\n    },\n    createInterface$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).createInterface$1(receiver, a0);\n    },\n    elementAt$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);\n    },\n    endsWith$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);\n    },\n    every$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).every$1(receiver, a0);\n    },\n    existsSync$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).existsSync$1(receiver, a0);\n    },\n    expand$1$1$ax: function(receiver, a0, $T1) {\n      return J.getInterceptor$ax(receiver).expand$1$1(receiver, a0, $T1);\n    },\n    fillRange$3$ax: function(receiver, a0, a1, a2) {\n      return J.getInterceptor$ax(receiver).fillRange$3(receiver, a0, a1, a2);\n    },\n    floor$0$n: function(receiver) {\n      return J.getInterceptor$n(receiver).floor$0(receiver);\n    },\n    fold$2$ax: function(receiver, a0, a1) {\n      return J.getInterceptor$ax(receiver).fold$2(receiver, a0, a1);\n    },\n    getRange$2$ax: function(receiver, a0, a1) {\n      return J.getInterceptor$ax(receiver).getRange$2(receiver, a0, a1);\n    },\n    getTime$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).getTime$0(receiver);\n    },\n    indexOf$1$asx: function(receiver, a0) {\n      return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);\n    },\n    isDirectory$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).isDirectory$0(receiver);\n    },\n    isFile$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).isFile$0(receiver);\n    },\n    join$0$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).join$0(receiver);\n    },\n    join$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).join$1(receiver, a0);\n    },\n    map$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).map$1(receiver, a0);\n    },\n    map$1$1$ax: function(receiver, a0, $T1) {\n      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);\n    },\n    matchAsPrefix$2$s: function(receiver, a0, a1) {\n      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);\n    },\n    mkdirSync$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).mkdirSync$1(receiver, a0);\n    },\n    noSuchMethod$1$: function(receiver, a0) {\n      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);\n    },\n    on$2$x: function(receiver, a0, a1) {\n      return J.getInterceptor$x(receiver).on$2(receiver, a0, a1);\n    },\n    padRight$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).padRight$1(receiver, a0);\n    },\n    readFileSync$2$x: function(receiver, a0, a1) {\n      return J.getInterceptor$x(receiver).readFileSync$2(receiver, a0, a1);\n    },\n    readdirSync$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).readdirSync$1(receiver, a0);\n    },\n    remove$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);\n    },\n    replaceRange$3$asx: function(receiver, a0, a1, a2) {\n      return J.getInterceptor$asx(receiver).replaceRange$3(receiver, a0, a1, a2);\n    },\n    round$0$n: function(receiver) {\n      return J.getInterceptor$n(receiver).round$0(receiver);\n    },\n    run$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).run$0(receiver);\n    },\n    run$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).run$1(receiver, a0);\n    },\n    setPrompt$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).setPrompt$1(receiver, a0);\n    },\n    setRange$4$ax: function(receiver, a0, a1, a2, a3) {\n      return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);\n    },\n    skip$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);\n    },\n    sort$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);\n    },\n    startsWith$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);\n    },\n    startsWith$2$s: function(receiver, a0, a1) {\n      return J.getInterceptor$s(receiver).startsWith$2(receiver, a0, a1);\n    },\n    statSync$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).statSync$1(receiver, a0);\n    },\n    substring$1$s: function(receiver, a0) {\n      return J.getInterceptor$s(receiver).substring$1(receiver, a0);\n    },\n    substring$2$s: function(receiver, a0, a1) {\n      return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);\n    },\n    take$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).take$1(receiver, a0);\n    },\n    then$1$1$x: function(receiver, a0, $T1) {\n      return J.getInterceptor$x(receiver).then$1$1(receiver, a0, $T1);\n    },\n    then$1$2$onError$x: function(receiver, a0, a1, $T1) {\n      return J.getInterceptor$x(receiver).then$1$2$onError(receiver, a0, a1, $T1);\n    },\n    toList$0$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).toList$0(receiver);\n    },\n    toList$1$growable$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).toList$1$growable(receiver, a0);\n    },\n    toRadixString$1$n: function(receiver, a0) {\n      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);\n    },\n    toSet$0$ax: function(receiver) {\n      return J.getInterceptor$ax(receiver).toSet$0(receiver);\n    },\n    toString$0$: function(receiver) {\n      return J.getInterceptor$(receiver).toString$0(receiver);\n    },\n    toString$1$color$: function(receiver, a0) {\n      return J.getInterceptor$(receiver).toString$1$color(receiver, a0);\n    },\n    trim$0$s: function(receiver) {\n      return J.getInterceptor$s(receiver).trim$0(receiver);\n    },\n    unlinkSync$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).unlinkSync$1(receiver, a0);\n    },\n    watch$2$x: function(receiver, a0, a1) {\n      return J.getInterceptor$x(receiver).watch$2(receiver, a0, a1);\n    },\n    where$1$ax: function(receiver, a0) {\n      return J.getInterceptor$ax(receiver).where$1(receiver, a0);\n    },\n    write$1$x: function(receiver, a0) {\n      return J.getInterceptor$x(receiver).write$1(receiver, a0);\n    },\n    writeFileSync$2$x: function(receiver, a0, a1) {\n      return J.getInterceptor$x(receiver).writeFileSync$2(receiver, a0, a1);\n    },\n    yield$0$x: function(receiver) {\n      return J.getInterceptor$x(receiver).yield$0(receiver);\n    },\n    Interceptor: function Interceptor() {\n    },\n    JSBool: function JSBool() {\n    },\n    JSNull: function JSNull() {\n    },\n    JavaScriptObject: function JavaScriptObject() {\n    },\n    PlainJavaScriptObject: function PlainJavaScriptObject() {\n    },\n    UnknownJavaScriptObject: function UnknownJavaScriptObject() {\n    },\n    JavaScriptFunction: function JavaScriptFunction() {\n    },\n    JSArray: function JSArray(t0) {\n      this.$ti = t0;\n    },\n    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {\n      this.$ti = t0;\n    },\n    ArrayIterator: function ArrayIterator(t0, t1) {\n      var _ = this;\n      _._iterable = t0;\n      _._length = t1;\n      _._index = 0;\n      _._current = null;\n    },\n    JSNumber: function JSNumber() {\n    },\n    JSInt: function JSInt() {\n    },\n    JSDouble: function JSDouble() {\n    },\n    JSString: function JSString() {\n    }\n  },\n  P = {\n    _AsyncRun__initializeScheduleImmediate: function() {\n      var div, span, t1 = {};\n      if (self.scheduleImmediate != null)\n        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();\n      if (self.MutationObserver != null && self.document != null) {\n        div = self.document.createElement(\"div\");\n        span = self.document.createElement(\"span\");\n        t1.storedCallback = null;\n        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});\n        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);\n      } else if (self.setImmediate != null)\n        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();\n      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();\n    },\n    _AsyncRun__scheduleImmediateJsOverride: function(callback) {\n      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));\n    },\n    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {\n      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));\n    },\n    _AsyncRun__scheduleImmediateWithTimer: function(callback) {\n      P.Timer__createTimer(C.Duration_0, callback);\n    },\n    Timer__createTimer: function(duration, callback) {\n      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);\n      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);\n    },\n    _TimerImpl$: function(milliseconds, callback) {\n      var t1 = new P._TimerImpl(true);\n      t1._TimerImpl$2(milliseconds, callback);\n      return t1;\n    },\n    _TimerImpl$periodic: function(milliseconds, callback) {\n      var t1 = new P._TimerImpl(false);\n      t1._TimerImpl$periodic$2(milliseconds, callback);\n      return t1;\n    },\n    _makeAsyncAwaitCompleter: function($T) {\n      return new P._AsyncAwaitCompleter(new P._Future($.Zone__current, $T._eval$1(\"_Future<0>\")), $T._eval$1(\"_AsyncAwaitCompleter<0>\"));\n    },\n    _asyncStartSync: function(bodyFunction, completer) {\n      bodyFunction.call$2(0, null);\n      completer.isSync = true;\n      return completer._future;\n    },\n    _asyncAwait: function(object, bodyFunction) {\n      P._awaitOnObject(object, bodyFunction);\n    },\n    _asyncReturn: function(object, completer) {\n      completer.complete$1(object);\n    },\n    _asyncRethrow: function(object, completer) {\n      completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));\n    },\n    _awaitOnObject: function(object, bodyFunction) {\n      var t1, future,\n        thenCallback = new P._awaitOnObject_closure(bodyFunction),\n        errorCallback = new P._awaitOnObject_closure0(bodyFunction);\n      if (object instanceof P._Future)\n        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);\n      else {\n        t1 = type$.dynamic;\n        if (type$.Future_dynamic._is(object))\n          object.then$1$2$onError(0, thenCallback, errorCallback, t1);\n        else {\n          future = new P._Future($.Zone__current, type$._Future_dynamic);\n          future._state = 4;\n          future._resultOrListeners = object;\n          future._thenAwait$1$2(thenCallback, errorCallback, t1);\n        }\n      }\n    },\n    _wrapJsFunctionForAsync: function($function) {\n      var $protected = function(fn, ERROR) {\n        return function(errorCode, result) {\n          while (true)\n            try {\n              fn(errorCode, result);\n              break;\n            } catch (error) {\n              result = error;\n              errorCode = ERROR;\n            }\n        };\n      }($function, 1);\n      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);\n    },\n    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {\n      var t1, t2, stream;\n      if (bodyFunctionOrErrorCode === 0) {\n        t1 = controller.cancelationFuture;\n        if (t1 != null)\n          t1._completeWithValue$1(null);\n        else\n          controller.get$controller().close$0(0);\n        return;\n      } else if (bodyFunctionOrErrorCode === 1) {\n        t1 = controller.cancelationFuture;\n        if (t1 != null)\n          t1._completeError$2(H.unwrapException(object), H.getTraceFromException(object));\n        else {\n          t1 = H.unwrapException(object);\n          t2 = H.getTraceFromException(object);\n          controller.get$controller().addError$2(t1, t2);\n          controller.get$controller().close$0(0);\n        }\n        return;\n      }\n      if (object instanceof P._IterationMarker) {\n        if (controller.cancelationFuture != null) {\n          bodyFunctionOrErrorCode.call$2(2, null);\n          return;\n        }\n        t1 = object.state;\n        if (t1 === 0) {\n          t1 = object.value;\n          controller.get$controller().add$1(0, t1);\n          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));\n          return;\n        } else if (t1 === 1) {\n          stream = object.value;\n          controller.get$controller().addStream$2$cancelOnError(stream, false).then$1(0, new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));\n          return;\n        }\n      }\n      P._awaitOnObject(object, bodyFunctionOrErrorCode);\n    },\n    _streamOfController: function(controller) {\n      var t1 = controller.get$controller();\n      return new P._ControllerStream(t1, H._instanceType(t1)._eval$1(\"_ControllerStream<1>\"));\n    },\n    _AsyncStarStreamController$: function(body, $T) {\n      var t1 = new P._AsyncStarStreamController($T._eval$1(\"_AsyncStarStreamController<0>\"));\n      t1._AsyncStarStreamController$1(body, $T);\n      return t1;\n    },\n    _makeAsyncStarStreamController: function(body, $T) {\n      return P._AsyncStarStreamController$(body, $T);\n    },\n    _IterationMarker_yieldStar: function(values) {\n      return new P._IterationMarker(values, 1);\n    },\n    _IterationMarker_endOfIteration: function() {\n      return C._IterationMarker_null_2;\n    },\n    _IterationMarker_yieldSingle: function(value) {\n      return new P._IterationMarker(value, 0);\n    },\n    _IterationMarker_uncaughtError: function(error) {\n      return new P._IterationMarker(error, 3);\n    },\n    _makeSyncStarIterable: function(body, $T) {\n      return new P._SyncStarIterable(body, $T._eval$1(\"_SyncStarIterable<0>\"));\n    },\n    Future_Future$value: function(value, $T) {\n      var t1 = new P._Future($.Zone__current, $T._eval$1(\"_Future<0>\"));\n      t1._asyncComplete$1(value);\n      return t1;\n    },\n    Future_Future$error: function(error, stackTrace, $T) {\n      var t1, replacement;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      t1 = $.Zone__current;\n      if (t1 !== C.C__RootZone) {\n        replacement = t1.errorCallback$2(error, stackTrace);\n        if (replacement != null) {\n          error = replacement.error;\n          stackTrace = replacement.stackTrace;\n        }\n      }\n      if (stackTrace == null)\n        stackTrace = P.AsyncError_defaultStackTrace(error);\n      t1 = new P._Future($.Zone__current, $T._eval$1(\"_Future<0>\"));\n      t1._asyncCompleteError$2(error, stackTrace);\n      return t1;\n    },\n    Future_wait: function(futures, $T) {\n      var _error_get, _error_set, _stackTrace_get, _stackTrace_set, handleError, future, pos, e, st, t1, t2, exception, _box_0 = {}, cleanUp = null,\n        eagerError = false,\n        _future = new P._Future($.Zone__current, $T._eval$1(\"_Future<List<0>>\"));\n      _box_0.values = null;\n      _box_0.remaining = 0;\n      _box_0.error = null;\n      _error_get = new P.Future_wait__error_get(_box_0);\n      _error_set = new P.Future_wait__error_set(_box_0);\n      _box_0.stackTrace = null;\n      _stackTrace_get = new P.Future_wait__stackTrace_get(_box_0);\n      _stackTrace_set = new P.Future_wait__stackTrace_set(_box_0);\n      handleError = new P.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, _error_set, _stackTrace_set, _error_get, _stackTrace_get);\n      try {\n        for (t1 = J.get$iterator$ax(futures), t2 = type$.Null; t1.moveNext$0();) {\n          future = t1.get$current(t1);\n          pos = _box_0.remaining;\n          J.then$1$2$onError$x(future, new P.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, _error_get, _stackTrace_get, $T), handleError, t2);\n          ++_box_0.remaining;\n        }\n        t1 = _box_0.remaining;\n        if (t1 === 0) {\n          t1 = P.Future_Future$value(C.List_empty9, $T._eval$1(\"List<0>\"));\n          return t1;\n        }\n        _box_0.values = P.List_List$filled(t1, null, false, $T._eval$1(\"0?\"));\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        st = H.getTraceFromException(exception);\n        if (_box_0.remaining === 0 || eagerError)\n          return P.Future_Future$error(e, st, $T._eval$1(\"List<0>\"));\n        else {\n          _error_set.call$1(e);\n          _stackTrace_set.call$1(st);\n        }\n      }\n      return _future;\n    },\n    _Future$zoneValue: function(value, _zone, $T) {\n      var t1 = new P._Future(_zone, $T._eval$1(\"_Future<0>\"));\n      t1._state = 4;\n      t1._resultOrListeners = value;\n      return t1;\n    },\n    _Future__chainForeignFuture: function(source, target) {\n      var e, s, exception;\n      target._state = 1;\n      try {\n        source.then$1$2$onError(0, new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), type$.Null);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));\n      }\n    },\n    _Future__chainCoreFuture: function(source, target) {\n      var t1, listeners;\n      for (; t1 = source._state, t1 === 2;)\n        source = source._resultOrListeners;\n      if (t1 >= 4) {\n        listeners = target._removeListeners$0();\n        target._state = source._state;\n        target._resultOrListeners = source._resultOrListeners;\n        P._Future__propagateToListeners(target, listeners);\n      } else {\n        listeners = target._resultOrListeners;\n        target._state = 2;\n        target._resultOrListeners = source;\n        source._prependListeners$1(listeners);\n      }\n    },\n    _Future__propagateToListeners: function(source, listeners) {\n      var t2, _box_0, hasError, nextListener, nextListener0, t3, sourceResult, t4, t5, zone, oldZone, result, current, _box_1 = {},\n        t1 = _box_1.source = source;\n      for (t2 = type$.Future_dynamic; true;) {\n        _box_0 = {};\n        hasError = t1._state === 8;\n        if (listeners == null) {\n          if (hasError) {\n            t2 = t1._resultOrListeners;\n            t1._zone.handleUncaughtError$2(t2.error, t2.stackTrace);\n          }\n          return;\n        }\n        _box_0.listener = listeners;\n        nextListener = listeners._nextListener;\n        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {\n          t1._nextListener = null;\n          P._Future__propagateToListeners(_box_1.source, t1);\n          _box_0.listener = nextListener;\n          nextListener0 = nextListener._nextListener;\n        }\n        t3 = _box_1.source;\n        sourceResult = t3._resultOrListeners;\n        _box_0.listenerHasError = hasError;\n        _box_0.listenerValueOrError = sourceResult;\n        t4 = !hasError;\n        if (t4) {\n          t5 = t1.state;\n          t5 = (t5 & 1) !== 0 || (t5 & 15) === 8;\n        } else\n          t5 = true;\n        if (t5) {\n          zone = t1.result._zone;\n          if (hasError) {\n            t1 = t3._zone;\n            t1 = !(t1 === zone || t1.get$errorZone() === zone.get$errorZone());\n          } else\n            t1 = false;\n          if (t1) {\n            t1 = _box_1.source;\n            t2 = t1._resultOrListeners;\n            t1._zone.handleUncaughtError$2(t2.error, t2.stackTrace);\n            return;\n          }\n          oldZone = $.Zone__current;\n          if (oldZone !== zone)\n            $.Zone__current = zone;\n          else\n            oldZone = null;\n          t1 = _box_0.listener.state;\n          if ((t1 & 15) === 8)\n            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();\n          else if (t4) {\n            if ((t1 & 1) !== 0)\n              new P._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();\n          } else if ((t1 & 2) !== 0)\n            new P._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();\n          if (oldZone != null)\n            $.Zone__current = oldZone;\n          t1 = _box_0.listenerValueOrError;\n          if (t2._is(t1)) {\n            result = _box_0.listener.result;\n            if (t1._state >= 4) {\n              current = result._resultOrListeners;\n              result._resultOrListeners = null;\n              listeners = result._reverseListeners$1(current);\n              result._state = t1._state;\n              result._resultOrListeners = t1._resultOrListeners;\n              _box_1.source = t1;\n              continue;\n            } else\n              P._Future__chainCoreFuture(t1, result);\n            return;\n          }\n        }\n        result = _box_0.listener.result;\n        current = result._resultOrListeners;\n        result._resultOrListeners = null;\n        listeners = result._reverseListeners$1(current);\n        t1 = _box_0.listenerHasError;\n        t3 = _box_0.listenerValueOrError;\n        if (!t1) {\n          result._state = 4;\n          result._resultOrListeners = t3;\n        } else {\n          result._state = 8;\n          result._resultOrListeners = t3;\n        }\n        _box_1.source = result;\n        t1 = result;\n      }\n    },\n    _registerErrorHandler: function(errorHandler, zone) {\n      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))\n        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);\n      if (type$.dynamic_Function_Object._is(errorHandler))\n        return zone.registerUnaryCallback$2$1(errorHandler, type$.dynamic, type$.Object);\n      throw H.wrapException(P.ArgumentError$value(errorHandler, \"onError\", \"Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result\"));\n    },\n    _microtaskLoop: function() {\n      var entry, next;\n      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {\n        $._lastPriorityCallback = null;\n        next = entry.next;\n        $._nextCallback = next;\n        if (next == null)\n          $._lastCallback = null;\n        entry.callback.call$0();\n      }\n    },\n    _startMicrotaskLoop: function() {\n      $._isInCallbackLoop = true;\n      try {\n        P._microtaskLoop();\n      } finally {\n        $._lastPriorityCallback = null;\n        $._isInCallbackLoop = false;\n        if ($._nextCallback != null)\n          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());\n      }\n    },\n    _scheduleAsyncCallback: function(callback) {\n      var newEntry = new P._AsyncCallbackEntry(callback),\n        lastCallback = $._lastCallback;\n      if (lastCallback == null) {\n        $._nextCallback = $._lastCallback = newEntry;\n        if (!$._isInCallbackLoop)\n          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());\n      } else\n        $._lastCallback = lastCallback.next = newEntry;\n    },\n    _schedulePriorityAsyncCallback: function(callback) {\n      var entry, lastPriorityCallback, next,\n        t1 = $._nextCallback;\n      if (t1 == null) {\n        P._scheduleAsyncCallback(callback);\n        $._lastPriorityCallback = $._lastCallback;\n        return;\n      }\n      entry = new P._AsyncCallbackEntry(callback);\n      lastPriorityCallback = $._lastPriorityCallback;\n      if (lastPriorityCallback == null) {\n        entry.next = t1;\n        $._nextCallback = $._lastPriorityCallback = entry;\n      } else {\n        next = lastPriorityCallback.next;\n        entry.next = next;\n        $._lastPriorityCallback = lastPriorityCallback.next = entry;\n        if (next == null)\n          $._lastCallback = entry;\n      }\n    },\n    scheduleMicrotask: function(callback) {\n      var t1, _null = null,\n        currentZone = $.Zone__current;\n      if (C.C__RootZone === currentZone) {\n        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);\n        return;\n      }\n      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone)\n        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();\n      else\n        t1 = false;\n      if (t1) {\n        P._rootScheduleMicrotask(_null, _null, currentZone, currentZone.registerCallback$1$1(callback, type$.void));\n        return;\n      }\n      t1 = $.Zone__current;\n      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));\n    },\n    Stream_Stream$fromFuture: function(future, $T) {\n      var _null = null,\n        t1 = $T._eval$1(\"_SyncStreamController<0>\"),\n        controller = new P._SyncStreamController(_null, _null, _null, _null, t1);\n      future.then$1$2$onError(0, new P.Stream_Stream$fromFuture_closure(controller, $T), new P.Stream_Stream$fromFuture_closure0(controller), type$.Null);\n      return new P._ControllerStream(controller, t1._eval$1(\"_ControllerStream<1>\"));\n    },\n    StreamIterator_StreamIterator: function(stream) {\n      P.ArgumentError_checkNotNull(stream, \"stream\");\n      return new P._StreamIterator(stream);\n    },\n    StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {\n      return sync ? new P._SyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1(\"_SyncStreamController<0>\")) : new P._AsyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1(\"_AsyncStreamController<0>\"));\n    },\n    _runGuarded: function(notificationHandler) {\n      var e, s, exception;\n      if (notificationHandler == null)\n        return;\n      try {\n        notificationHandler.call$0();\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        $.Zone__current.handleUncaughtError$2(e, s);\n      }\n    },\n    _ControllerSubscription$: function(_controller, onData, onError, onDone, cancelOnError, $T) {\n      var t1 = $.Zone__current,\n        t2 = cancelOnError ? 1 : 0,\n        t3 = P._BufferingStreamSubscription__registerDataHandler(t1, onData, $T),\n        t4 = P._BufferingStreamSubscription__registerErrorHandler(t1, onError),\n        t5 = onDone == null ? P.async___nullDoneHandler$closure() : onDone;\n      return new P._ControllerSubscription(_controller, t3, t4, t1.registerCallback$1$1(t5, type$.void), t1, t2, $T._eval$1(\"_ControllerSubscription<0>\"));\n    },\n    _BufferingStreamSubscription__registerDataHandler: function(zone, handleData, $T) {\n      var t1 = handleData == null ? P.async___nullDataHandler$closure() : handleData;\n      return zone.registerUnaryCallback$2$1(t1, type$.void, $T);\n    },\n    _BufferingStreamSubscription__registerErrorHandler: function(zone, handleError) {\n      if (handleError == null)\n        handleError = P.async___nullErrorHandler$closure();\n      if (type$.void_Function_Object_StackTrace._is(handleError))\n        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);\n      if (type$.void_Function_Object._is(handleError))\n        return zone.registerUnaryCallback$2$1(handleError, type$.dynamic, type$.Object);\n      throw H.wrapException(P.ArgumentError$(\"handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.\"));\n    },\n    _nullDataHandler: function(value) {\n    },\n    _nullErrorHandler: function(error, stackTrace) {\n      $.Zone__current.handleUncaughtError$2(error, stackTrace);\n    },\n    _nullDoneHandler: function() {\n    },\n    _addErrorWithReplacement: function(sink, error, stackTrace) {\n      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);\n      if (replacement != null) {\n        error = replacement.error;\n        stackTrace = replacement.stackTrace;\n      }\n      sink._addError$2(error, stackTrace);\n    },\n    Timer_Timer: function(duration, callback) {\n      var t1 = $.Zone__current;\n      if (t1 === C.C__RootZone)\n        return t1.createTimer$2(duration, callback);\n      return t1.createTimer$2(duration, t1.bindCallbackGuarded$1(callback));\n    },\n    AsyncError$: function(error, stackTrace) {\n      var t1 = stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      return new P.AsyncError(error, t1);\n    },\n    AsyncError_defaultStackTrace: function(error) {\n      var stackTrace;\n      if (type$.Error._is(error)) {\n        stackTrace = error.get$stackTrace();\n        if (stackTrace != null)\n          return stackTrace;\n      }\n      return C._StringStackTrace_3uE;\n    },\n    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {\n      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(error, stackTrace));\n    },\n    _rootRun: function($self, $parent, zone, f) {\n      var old,\n        t1 = $.Zone__current;\n      if (t1 === zone)\n        return f.call$0();\n      if (!(zone instanceof P._Zone))\n        throw H.wrapException(P.ArgumentError$value(zone, \"zone\", \"Can only run in platform zones\"));\n      $.Zone__current = zone;\n      old = t1;\n      try {\n        t1 = f.call$0();\n        return t1;\n      } finally {\n        $.Zone__current = old;\n      }\n    },\n    _rootRunUnary: function($self, $parent, zone, f, arg) {\n      var old,\n        t1 = $.Zone__current;\n      if (t1 === zone)\n        return f.call$1(arg);\n      if (!(zone instanceof P._Zone))\n        throw H.wrapException(P.ArgumentError$value(zone, \"zone\", \"Can only run in platform zones\"));\n      $.Zone__current = zone;\n      old = t1;\n      try {\n        t1 = f.call$1(arg);\n        return t1;\n      } finally {\n        $.Zone__current = old;\n      }\n    },\n    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {\n      var old,\n        t1 = $.Zone__current;\n      if (t1 === zone)\n        return f.call$2(arg1, arg2);\n      if (!(zone instanceof P._Zone))\n        throw H.wrapException(P.ArgumentError$value(zone, \"zone\", \"Can only run in platform zones\"));\n      $.Zone__current = zone;\n      old = t1;\n      try {\n        t1 = f.call$2(arg1, arg2);\n        return t1;\n      } finally {\n        $.Zone__current = old;\n      }\n    },\n    _rootRegisterCallback: function($self, $parent, zone, f) {\n      return f;\n    },\n    _rootRegisterUnaryCallback: function($self, $parent, zone, f) {\n      return f;\n    },\n    _rootRegisterBinaryCallback: function($self, $parent, zone, f) {\n      return f;\n    },\n    _rootErrorCallback: function($self, $parent, zone, error, stackTrace) {\n      return null;\n    },\n    _rootScheduleMicrotask: function($self, $parent, zone, f) {\n      var t1 = C.C__RootZone !== zone;\n      if (t1)\n        f = !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);\n      P._scheduleAsyncCallback(f);\n    },\n    _rootCreateTimer: function($self, $parent, zone, duration, callback) {\n      callback = zone.bindCallback$1$1(callback, type$.void);\n      return P.Timer__createTimer(duration, callback);\n    },\n    _rootCreatePeriodicTimer: function($self, $parent, zone, duration, callback) {\n      var milliseconds;\n      callback = zone.bindUnaryCallback$2$1(callback, type$.void, type$.Timer);\n      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);\n      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);\n    },\n    _rootPrint: function($self, $parent, zone, line) {\n      H.printString(H.S(line));\n    },\n    _printToZone: function(line) {\n      $.Zone__current.print$1(line);\n    },\n    _rootFork: function($self, $parent, zone, specification, zoneValues) {\n      var valueMap, t1, handleUncaughtError;\n      $.printToZone = P.async___printToZone$closure();\n      if (specification == null)\n        specification = C._ZoneSpecification_ALf;\n      if (zoneValues == null)\n        valueMap = zone.get$_async$_map();\n      else {\n        t1 = type$.nullable_Object;\n        valueMap = P.HashMap_HashMap$from(zoneValues, t1, t1);\n      }\n      t1 = new P._CustomZone(zone.get$_run(), zone.get$_runUnary(), zone.get$_runBinary(), zone.get$_registerCallback(), zone.get$_registerUnaryCallback(), zone.get$_registerBinaryCallback(), zone.get$_errorCallback(), zone.get$_scheduleMicrotask(), zone.get$_createTimer(), zone.get$_createPeriodicTimer(), zone.get$_print(), zone.get$_fork(), zone.get$_handleUncaughtError(), zone, valueMap);\n      handleUncaughtError = specification.handleUncaughtError;\n      if (handleUncaughtError != null)\n        t1._handleUncaughtError = new P._ZoneFunction(t1, handleUncaughtError);\n      return t1;\n    },\n    runZoned: function(body, zoneValues, $R) {\n      P.ArgumentError_checkNotNull(body, \"body\");\n      return P._runZoned(body, zoneValues, null, $R);\n    },\n    _runZoned: function(body, zoneValues, specification, $R) {\n      return $.Zone__current.fork$2$specification$zoneValues(specification, zoneValues).run$1$1(0, body, $R);\n    },\n    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {\n      this._box_0 = t0;\n    },\n    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.div = t1;\n      this.span = t2;\n    },\n    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {\n      this.callback = t0;\n    },\n    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {\n      this.callback = t0;\n    },\n    _TimerImpl: function _TimerImpl(t0) {\n      this._once = t0;\n      this._handle = null;\n      this._tick = 0;\n    },\n    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {\n      this.$this = t0;\n      this.callback = t1;\n    },\n    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.milliseconds = t1;\n      _.start = t2;\n      _.callback = t3;\n    },\n    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {\n      this._future = t0;\n      this.isSync = false;\n      this.$ti = t1;\n    },\n    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {\n      this.bodyFunction = t0;\n    },\n    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {\n      this.bodyFunction = t0;\n    },\n    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {\n      this.$protected = t0;\n    },\n    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {\n      this.controller = t0;\n      this.bodyFunction = t1;\n    },\n    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {\n      this.controller = t0;\n      this.bodyFunction = t1;\n    },\n    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {\n      var _ = this;\n      _.___AsyncStarStreamController_controller = null;\n      _.isSuspended = false;\n      _.cancelationFuture = null;\n      _.$ti = t0;\n    },\n    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {\n      this.body = t0;\n    },\n    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {\n      this.body = t0;\n    },\n    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {\n      this._resumeBody = t0;\n    },\n    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {\n      this.$this = t0;\n      this._resumeBody = t1;\n    },\n    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {\n      this.$this = t0;\n      this.body = t1;\n    },\n    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {\n      this.body = t0;\n    },\n    _IterationMarker: function _IterationMarker(t0, t1) {\n      this.value = t0;\n      this.state = t1;\n    },\n    _SyncStarIterator: function _SyncStarIterator(t0) {\n      var _ = this;\n      _._body = t0;\n      _._suspendedBodies = _._nestedIterator = _._async$_current = null;\n    },\n    _SyncStarIterable: function _SyncStarIterable(t0, t1) {\n      this._outerHelper = t0;\n      this.$ti = t1;\n    },\n    _BroadcastStream: function _BroadcastStream(t0, t1) {\n      this._async$_controller = t0;\n      this.$ti = t1;\n    },\n    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._eventState = 0;\n      _._async$_previous = _._async$_next = null;\n      _._async$_controller = t0;\n      _._onData = t1;\n      _._onError = t2;\n      _._onDone = t3;\n      _._zone = t4;\n      _._state = t5;\n      _._pending = _._cancelFuture = null;\n      _.$ti = t6;\n    },\n    _BroadcastStreamController: function _BroadcastStreamController() {\n    },\n    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {\n      var _ = this;\n      _.onListen = t0;\n      _.onCancel = t1;\n      _._state = 0;\n      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;\n      _.$ti = t2;\n    },\n    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {\n      this.$this = t0;\n      this.data = t1;\n    },\n    _SyncBroadcastStreamController__sendError_closure: function _SyncBroadcastStreamController__sendError_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.error = t1;\n      this.stackTrace = t2;\n    },\n    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {\n      this.$this = t0;\n    },\n    Future_wait__error_set: function Future_wait__error_set(t0) {\n      this._box_0 = t0;\n    },\n    Future_wait__stackTrace_set: function Future_wait__stackTrace_set(t0) {\n      this._box_0 = t0;\n    },\n    Future_wait__error_get: function Future_wait__error_get(t0) {\n      this._box_0 = t0;\n    },\n    Future_wait__stackTrace_get: function Future_wait__stackTrace_get(t0) {\n      this._box_0 = t0;\n    },\n    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _._box_0 = t0;\n      _.cleanUp = t1;\n      _.eagerError = t2;\n      _._future = t3;\n      _._error_set = t4;\n      _._stackTrace_set = t5;\n      _._error_get = t6;\n      _._stackTrace_get = t7;\n    },\n    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _._box_0 = t0;\n      _.pos = t1;\n      _._future = t2;\n      _.cleanUp = t3;\n      _.eagerError = t4;\n      _._error_get = t5;\n      _._stackTrace_get = t6;\n      _.T = t7;\n    },\n    _Completer: function _Completer() {\n    },\n    _AsyncCompleter: function _AsyncCompleter(t0, t1) {\n      this.future = t0;\n      this.$ti = t1;\n    },\n    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._nextListener = null;\n      _.result = t0;\n      _.state = t1;\n      _.callback = t2;\n      _.errorCallback = t3;\n      _.$ti = t4;\n    },\n    _Future: function _Future(t0, t1) {\n      var _ = this;\n      _._state = 0;\n      _._zone = t0;\n      _._resultOrListeners = null;\n      _.$ti = t1;\n    },\n    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {\n      this.$this = t0;\n      this.listener = t1;\n    },\n    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {\n      this.target = t0;\n    },\n    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {\n      this.target = t0;\n    },\n    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {\n      this.target = t0;\n      this.e = t1;\n      this.s = t2;\n    },\n    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.error = t1;\n      this.stackTrace = t2;\n    },\n    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {\n      this._box_0 = t0;\n      this._box_1 = t1;\n      this.hasError = t2;\n    },\n    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {\n      this.originalSource = t0;\n    },\n    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {\n      this._box_0 = t0;\n      this.sourceResult = t1;\n    },\n    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {\n      this._box_1 = t0;\n      this._box_0 = t1;\n    },\n    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {\n      this.callback = t0;\n      this.next = null;\n    },\n    Stream: function Stream() {\n    },\n    Stream_Stream$fromFuture_closure: function Stream_Stream$fromFuture_closure(t0, t1) {\n      this.controller = t0;\n      this.T = t1;\n    },\n    Stream_Stream$fromFuture_closure0: function Stream_Stream$fromFuture_closure0(t0) {\n      this.controller = t0;\n    },\n    Stream_length_closure: function Stream_length_closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    Stream_length_closure0: function Stream_length_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.future = t1;\n    },\n    StreamTransformerBase: function StreamTransformerBase() {\n    },\n    _StreamController: function _StreamController() {\n    },\n    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {\n      this.$this = t0;\n    },\n    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {\n      this.$this = t0;\n    },\n    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {\n    },\n    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {\n    },\n    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._varData = null;\n      _._state = 0;\n      _._doneFuture = null;\n      _.onListen = t0;\n      _.onPause = t1;\n      _.onResume = t2;\n      _.onCancel = t3;\n      _.$ti = t4;\n    },\n    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._varData = null;\n      _._state = 0;\n      _._doneFuture = null;\n      _.onListen = t0;\n      _.onPause = t1;\n      _.onResume = t2;\n      _.onCancel = t3;\n      _.$ti = t4;\n    },\n    _ControllerStream: function _ControllerStream(t0, t1) {\n      this._async$_controller = t0;\n      this.$ti = t1;\n    },\n    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._async$_controller = t0;\n      _._onData = t1;\n      _._onError = t2;\n      _._onDone = t3;\n      _._zone = t4;\n      _._state = t5;\n      _._pending = _._cancelFuture = null;\n      _.$ti = t6;\n    },\n    _AddStreamState: function _AddStreamState() {\n    },\n    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {\n      this.$this = t0;\n    },\n    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2) {\n      this.varData = t0;\n      this.addStreamFuture = t1;\n      this.addSubscription = t2;\n    },\n    _BufferingStreamSubscription: function _BufferingStreamSubscription() {\n    },\n    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {\n      this.$this = t0;\n      this.error = t1;\n      this.stackTrace = t2;\n    },\n    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {\n      this.$this = t0;\n    },\n    _StreamImpl: function _StreamImpl() {\n    },\n    _DelayedEvent: function _DelayedEvent() {\n    },\n    _DelayedData: function _DelayedData(t0) {\n      this.value = t0;\n      this.next = null;\n    },\n    _DelayedError: function _DelayedError(t0, t1) {\n      this.error = t0;\n      this.stackTrace = t1;\n      this.next = null;\n    },\n    _DelayedDone: function _DelayedDone() {\n    },\n    _PendingEvents: function _PendingEvents() {\n    },\n    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {\n      this.$this = t0;\n      this.dispatch = t1;\n    },\n    _StreamImplEvents: function _StreamImplEvents() {\n      this.lastPendingEvent = this.firstPendingEvent = null;\n      this._state = 0;\n    },\n    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {\n      var _ = this;\n      _._zone = t0;\n      _._state = 0;\n      _._onDone = t1;\n      _.$ti = t2;\n    },\n    _StreamIterator: function _StreamIterator(t0) {\n      this._subscription = null;\n      this._stateData = t0;\n      this._isPaused = false;\n    },\n    _ForwardingStream: function _ForwardingStream() {\n    },\n    _ForwardingStreamSubscription: function _ForwardingStreamSubscription(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._stream = t0;\n      _._subscription = null;\n      _._onData = t1;\n      _._onError = t2;\n      _._onDone = t3;\n      _._zone = t4;\n      _._state = t5;\n      _._pending = _._cancelFuture = null;\n      _.$ti = t6;\n    },\n    _ExpandStream: function _ExpandStream(t0, t1, t2) {\n      this._expand = t0;\n      this._async$_source = t1;\n      this.$ti = t2;\n    },\n    AsyncError: function AsyncError(t0, t1) {\n      this.error = t0;\n      this.stackTrace = t1;\n    },\n    _ZoneFunction: function _ZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RunNullaryZoneFunction: function _RunNullaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RunUnaryZoneFunction: function _RunUnaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RunBinaryZoneFunction: function _RunBinaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RegisterNullaryZoneFunction: function _RegisterNullaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RegisterUnaryZoneFunction: function _RegisterUnaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _RegisterBinaryZoneFunction: function _RegisterBinaryZoneFunction(t0, t1) {\n      this.zone = t0;\n      this.$function = t1;\n    },\n    _ZoneSpecification: function _ZoneSpecification(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {\n      var _ = this;\n      _.handleUncaughtError = t0;\n      _.run = t1;\n      _.runUnary = t2;\n      _.runBinary = t3;\n      _.registerCallback = t4;\n      _.registerUnaryCallback = t5;\n      _.registerBinaryCallback = t6;\n      _.errorCallback = t7;\n      _.scheduleMicrotask = t8;\n      _.createTimer = t9;\n      _.createPeriodicTimer = t10;\n      _.print = t11;\n      _.fork = t12;\n    },\n    _ZoneDelegate: function _ZoneDelegate(t0) {\n      this._delegationTarget = t0;\n    },\n    _Zone: function _Zone() {\n    },\n    _CustomZone: function _CustomZone(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {\n      var _ = this;\n      _._run = t0;\n      _._runUnary = t1;\n      _._runBinary = t2;\n      _._registerCallback = t3;\n      _._registerUnaryCallback = t4;\n      _._registerBinaryCallback = t5;\n      _._errorCallback = t6;\n      _._scheduleMicrotask = t7;\n      _._createTimer = t8;\n      _._createPeriodicTimer = t9;\n      _._print = t10;\n      _._fork = t11;\n      _._handleUncaughtError = t12;\n      _._delegateCache = null;\n      _.parent = t13;\n      _._async$_map = t14;\n    },\n    _CustomZone_bindCallback_closure: function _CustomZone_bindCallback_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.registered = t1;\n      this.R = t2;\n    },\n    _CustomZone_bindUnaryCallback_closure: function _CustomZone_bindUnaryCallback_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.registered = t1;\n      _.T = t2;\n      _.R = t3;\n    },\n    _CustomZone_bindCallbackGuarded_closure: function _CustomZone_bindCallbackGuarded_closure(t0, t1) {\n      this.$this = t0;\n      this.registered = t1;\n    },\n    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0, t1) {\n      this.error = t0;\n      this.stackTrace = t1;\n    },\n    _RootZone: function _RootZone() {\n    },\n    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.f = t1;\n      this.R = t2;\n    },\n    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {\n      this.$this = t0;\n      this.f = t1;\n    },\n    HashMap_HashMap: function($K, $V) {\n      return new P._HashMap($K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"_HashMap<1,2>\"));\n    },\n    _HashMap__getTableEntry: function(table, key) {\n      var entry = table[key];\n      return entry === table ? null : entry;\n    },\n    _HashMap__setTableEntry: function(table, key, value) {\n      if (value == null)\n        table[key] = table;\n      else\n        table[key] = value;\n    },\n    _HashMap__newHashTable: function() {\n      var table = Object.create(null);\n      P._HashMap__setTableEntry(table, \"<non-identifier-key>\", table);\n      delete table[\"<non-identifier-key>\"];\n      return table;\n    },\n    LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {\n      if (isValidKey == null)\n        if (hashCode == null) {\n          if (equals == null)\n            return new H.JsLinkedHashMap($K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"JsLinkedHashMap<1,2>\"));\n          hashCode = P.collection___defaultHashCode$closure();\n        } else {\n          if (P.core__identityHashCode$closure() === hashCode && P.core__identical$closure() === equals)\n            return P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6($K, $V);\n          if (equals == null)\n            equals = P.collection___defaultEquals$closure();\n        }\n      else {\n        if (hashCode == null)\n          hashCode = P.collection___defaultHashCode$closure();\n        if (equals == null)\n          equals = P.collection___defaultEquals$closure();\n      }\n      return P._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);\n    },\n    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {\n      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap($K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"JsLinkedHashMap<1,2>\")));\n    },\n    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {\n      return new H.JsLinkedHashMap($K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"JsLinkedHashMap<1,2>\"));\n    },\n    _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {\n      return new P._LinkedIdentityHashMap($K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"_LinkedIdentityHashMap<1,2>\"));\n    },\n    _LinkedCustomHashMap$: function(_equals, _hashCode, validKey, $K, $V) {\n      var t1 = validKey != null ? validKey : new P._LinkedCustomHashMap_closure($K);\n      return new P._LinkedCustomHashMap(_equals, _hashCode, t1, $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"_LinkedCustomHashMap<1,2>\"));\n    },\n    LinkedHashSet_LinkedHashSet: function($E) {\n      return new P._LinkedHashSet($E._eval$1(\"_LinkedHashSet<0>\"));\n    },\n    LinkedHashSet_LinkedHashSet$_empty: function($E) {\n      return new P._LinkedHashSet($E._eval$1(\"_LinkedHashSet<0>\"));\n    },\n    LinkedHashSet_LinkedHashSet$_literal: function(values, $E) {\n      return H.fillLiteralSet(values, new P._LinkedHashSet($E._eval$1(\"_LinkedHashSet<0>\")));\n    },\n    _LinkedHashSet__newHashTable: function() {\n      var table = Object.create(null);\n      table[\"<non-identifier-key>\"] = table;\n      delete table[\"<non-identifier-key>\"];\n      return table;\n    },\n    _LinkedHashSetIterator$: function(_set, _modifications) {\n      var t1 = new P._LinkedHashSetIterator(_set, _modifications);\n      t1._collection$_cell = _set._collection$_first;\n      return t1;\n    },\n    UnmodifiableListView$: function(source, $E) {\n      return new P.UnmodifiableListView(source, $E._eval$1(\"UnmodifiableListView<0>\"));\n    },\n    _defaultEquals: function(a, b) {\n      return J.$eq$(a, b);\n    },\n    _defaultHashCode: function(a) {\n      return J.get$hashCode$(a);\n    },\n    HashMap_HashMap$from: function(other, $K, $V) {\n      var result = P.HashMap_HashMap($K, $V);\n      other.forEach$1(0, new P.HashMap_HashMap$from_closure(result, $K, $V));\n      return result;\n    },\n    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {\n      var parts, t1;\n      if (P._isToStringVisiting(iterable)) {\n        if (leftDelimiter === \"(\" && rightDelimiter === \")\")\n          return \"(...)\";\n        return leftDelimiter + \"...\" + rightDelimiter;\n      }\n      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      $._toStringVisiting.push(iterable);\n      try {\n        P._iterablePartsToStrings(iterable, parts);\n      } finally {\n        $._toStringVisiting.pop();\n      }\n      t1 = P.StringBuffer__writeAll(leftDelimiter, parts, \", \") + rightDelimiter;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {\n      var buffer, t1;\n      if (P._isToStringVisiting(iterable))\n        return leftDelimiter + \"...\" + rightDelimiter;\n      buffer = new P.StringBuffer(leftDelimiter);\n      $._toStringVisiting.push(iterable);\n      try {\n        t1 = buffer;\n        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, \", \");\n      } finally {\n        $._toStringVisiting.pop();\n      }\n      buffer._contents += rightDelimiter;\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _isToStringVisiting: function(o) {\n      var t1, i;\n      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)\n        if (o === $._toStringVisiting[i])\n          return true;\n      return false;\n    },\n    _iterablePartsToStrings: function(iterable, parts) {\n      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,\n        it = iterable.get$iterator(iterable),\n        $length = 0, count = 0;\n      while (true) {\n        if (!($length < 80 || count < 3))\n          break;\n        if (!it.moveNext$0())\n          return;\n        next = H.S(it.get$current(it));\n        parts.push(next);\n        $length += next.length + 2;\n        ++count;\n      }\n      if (!it.moveNext$0()) {\n        if (count <= 5)\n          return;\n        ultimateString = parts.pop();\n        penultimateString = parts.pop();\n      } else {\n        penultimate = it.get$current(it);\n        ++count;\n        if (!it.moveNext$0()) {\n          if (count <= 4) {\n            parts.push(H.S(penultimate));\n            return;\n          }\n          ultimateString = H.S(penultimate);\n          penultimateString = parts.pop();\n          $length += ultimateString.length + 2;\n        } else {\n          ultimate = it.get$current(it);\n          ++count;\n          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {\n            ultimate0 = it.get$current(it);\n            ++count;\n            if (count > 100) {\n              while (true) {\n                if (!($length > 75 && count > 3))\n                  break;\n                $length -= parts.pop().length + 2;\n                --count;\n              }\n              parts.push(\"...\");\n              return;\n            }\n          }\n          penultimateString = H.S(penultimate);\n          ultimateString = H.S(ultimate);\n          $length += ultimateString.length + penultimateString.length + 4;\n        }\n      }\n      if (count > parts.length + 2) {\n        $length += 5;\n        elision = \"...\";\n      } else\n        elision = null;\n      while (true) {\n        if (!($length > 80 && parts.length > 3))\n          break;\n        $length -= parts.pop().length + 2;\n        if (elision == null) {\n          $length += 5;\n          elision = \"...\";\n        }\n      }\n      if (elision != null)\n        parts.push(elision);\n      parts.push(penultimateString);\n      parts.push(ultimateString);\n    },\n    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {\n      var result = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);\n      other.forEach$1(0, new P.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));\n      return result;\n    },\n    LinkedHashMap_LinkedHashMap$of: function(other, $K, $V) {\n      var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);\n      t1.addAll$1(0, other);\n      return t1;\n    },\n    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {\n      var t1, _i,\n        result = P.LinkedHashSet_LinkedHashSet($E);\n      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)\n        result.add$1(0, $E._as(elements[_i]));\n      return result;\n    },\n    LinkedHashSet_LinkedHashSet$of: function(elements, $E) {\n      var t1 = P.LinkedHashSet_LinkedHashSet($E);\n      t1.addAll$1(0, elements);\n      return t1;\n    },\n    ListMixin__compareAny: function(a, b) {\n      var t1 = type$.Comparable_dynamic;\n      return J.compareTo$1$ns(t1._as(a), t1._as(b));\n    },\n    MapBase_mapToString: function(m) {\n      var result, t1 = {};\n      if (P._isToStringVisiting(m))\n        return \"{...}\";\n      result = new P.StringBuffer(\"\");\n      try {\n        $._toStringVisiting.push(m);\n        result._contents += \"{\";\n        t1.first = true;\n        m.forEach$1(0, new P.MapBase_mapToString_closure(t1, result));\n        result._contents += \"}\";\n      } finally {\n        $._toStringVisiting.pop();\n      }\n      t1 = result._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    MapBase__fillMapWithIterables: function(map, keys, values) {\n      var keyIterator = keys.get$iterator(keys),\n        valueIterator = values.get$iterator(values),\n        hasNextKey = keyIterator.moveNext$0(),\n        hasNextValue = valueIterator.moveNext$0();\n      while (true) {\n        if (!(hasNextKey && hasNextValue))\n          break;\n        map.$indexSet(0, keyIterator.get$current(keyIterator), valueIterator.get$current(valueIterator));\n        hasNextKey = keyIterator.moveNext$0();\n        hasNextValue = valueIterator.moveNext$0();\n      }\n      if (hasNextKey || hasNextValue)\n        throw H.wrapException(P.ArgumentError$(\"Iterables do not have same length.\"));\n    },\n    ListQueue$: function($E) {\n      return new P.ListQueue(P.List_List$filled(P.ListQueue__calculateCapacity(null), null, false, $E._eval$1(\"0?\")), $E._eval$1(\"ListQueue<0>\"));\n    },\n    ListQueue__calculateCapacity: function(initialCapacity) {\n      return 8;\n    },\n    ListQueue_ListQueue$of: function(elements, $E) {\n      var t1 = P.ListQueue$($E);\n      t1.addAll$1(0, elements);\n      return t1;\n    },\n    ListQueue__nextPowerOf2: function(number) {\n      var nextNumber;\n      number = (number << 1 >>> 0) - 1;\n      for (; true; number = nextNumber) {\n        nextNumber = (number & number - 1) >>> 0;\n        if (nextNumber === 0)\n          return number;\n      }\n    },\n    _ListQueueIterator$: function(queue) {\n      return new P._ListQueueIterator(queue, queue._collection$_tail, queue._modificationCount, queue._collection$_head);\n    },\n    _HashMap: function _HashMap(t0) {\n      var _ = this;\n      _._collection$_length = 0;\n      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;\n      _.$ti = t0;\n    },\n    _HashMap_values_closure: function _HashMap_values_closure(t0) {\n      this.$this = t0;\n    },\n    _HashMap_addAll_closure: function _HashMap_addAll_closure(t0) {\n      this.$this = t0;\n    },\n    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1) {\n      var _ = this;\n      _._collection$_map = t0;\n      _._keys = t1;\n      _._offset = 0;\n      _._collection$_current = null;\n    },\n    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {\n      var _ = this;\n      _.__js_helper$_length = 0;\n      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;\n      _._modifications = 0;\n      _.$ti = t0;\n    },\n    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {\n      var _ = this;\n      _._equals = t0;\n      _._hashCode = t1;\n      _._validKey = t2;\n      _.__js_helper$_length = 0;\n      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;\n      _._modifications = 0;\n      _.$ti = t3;\n    },\n    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {\n      this.K = t0;\n    },\n    _LinkedHashSet: function _LinkedHashSet(t0) {\n      var _ = this;\n      _._collection$_length = 0;\n      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;\n      _._collection$_modifications = 0;\n      _.$ti = t0;\n    },\n    _LinkedIdentityHashSet: function _LinkedIdentityHashSet(t0) {\n      var _ = this;\n      _._collection$_length = 0;\n      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;\n      _._collection$_modifications = 0;\n      _.$ti = t0;\n    },\n    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {\n      this._element = t0;\n      this._collection$_previous = this._collection$_next = null;\n    },\n    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1) {\n      var _ = this;\n      _._set = t0;\n      _._collection$_modifications = t1;\n      _._collection$_current = _._collection$_cell = null;\n    },\n    UnmodifiableListView: function UnmodifiableListView(t0, t1) {\n      this._collection$_source = t0;\n      this.$ti = t1;\n    },\n    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {\n      this.result = t0;\n      this.K = t1;\n      this.V = t2;\n    },\n    IterableBase: function IterableBase() {\n    },\n    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {\n      this.result = t0;\n      this.K = t1;\n      this.V = t2;\n    },\n    ListBase: function ListBase() {\n    },\n    ListMixin: function ListMixin() {\n    },\n    MapBase: function MapBase() {\n    },\n    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {\n      this._box_0 = t0;\n      this.result = t1;\n    },\n    MapMixin: function MapMixin() {\n    },\n    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {\n      this.$this = t0;\n    },\n    UnmodifiableMapBase: function UnmodifiableMapBase() {\n    },\n    _MapBaseValueIterable: function _MapBaseValueIterable(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    _MapBaseValueIterator: function _MapBaseValueIterator(t0, t1) {\n      this._keys = t0;\n      this._collection$_map = t1;\n      this._collection$_current = null;\n    },\n    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {\n    },\n    MapView: function MapView() {\n    },\n    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    ListQueue: function ListQueue(t0, t1) {\n      var _ = this;\n      _._collection$_table = t0;\n      _._modificationCount = _._collection$_tail = _._collection$_head = 0;\n      _.$ti = t1;\n    },\n    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3) {\n      var _ = this;\n      _._queue = t0;\n      _._collection$_end = t1;\n      _._modificationCount = t2;\n      _._collection$_position = t3;\n      _._collection$_current = null;\n    },\n    _SetBase: function _SetBase() {\n    },\n    _UnmodifiableSet: function _UnmodifiableSet(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {\n    },\n    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {\n    },\n    Utf8Decoder__convertIntercepted: function(allowMalformed, codeUnits, start, end) {\n      var casted, result;\n      if (codeUnits instanceof Uint8Array) {\n        casted = codeUnits;\n        end = casted.length;\n        if (end - start < 15)\n          return null;\n        result = P.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);\n        if (result != null && allowMalformed)\n          if (result.indexOf(\"\\ufffd\") >= 0)\n            return null;\n        return result;\n      }\n      return null;\n    },\n    Utf8Decoder__convertInterceptedUint8List: function(allowMalformed, codeUnits, start, end) {\n      var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();\n      if (decoder == null)\n        return null;\n      if (0 === start && end === codeUnits.length)\n        return P.Utf8Decoder__useTextDecoder(decoder, codeUnits);\n      return P.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, P.RangeError_checkValidRange(start, end, codeUnits.length)));\n    },\n    Utf8Decoder__useTextDecoder: function(decoder, codeUnits) {\n      var t1, exception;\n      try {\n        t1 = decoder.decode(codeUnits);\n        return t1;\n      } catch (exception) {\n        H.unwrapException(exception);\n      }\n      return null;\n    },\n    Base64Codec__checkPadding: function(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {\n      if (C.JSInt_methods.$mod($length, 4) !== 0)\n        throw H.wrapException(P.FormatException$(\"Invalid base64 padding, padded length must be multiple of four, is \" + $length, source, sourceEnd));\n      if (firstPadding + paddingCount !== $length)\n        throw H.wrapException(P.FormatException$(\"Invalid base64 padding, '=' not at the end\", source, sourceIndex));\n      if (paddingCount > 2)\n        throw H.wrapException(P.FormatException$(\"Invalid base64 padding, more than two '=' characters\", source, sourceIndex));\n    },\n    _Base64Encoder_encodeChunk: function(alphabet, bytes, start, end, isLast, output, outputIndex, state) {\n      var t1, i, byteOr, byte, outputIndex0, outputIndex1,\n        bits = state >>> 2,\n        expectedChars = 3 - (state & 3);\n      for (t1 = J.getInterceptor$asx(bytes), i = start, byteOr = 0; i < end; ++i) {\n        byte = t1.$index(bytes, i);\n        byteOr = (byteOr | byte) >>> 0;\n        bits = (bits << 8 | byte) & 16777215;\n        --expectedChars;\n        if (expectedChars === 0) {\n          outputIndex0 = outputIndex + 1;\n          output[outputIndex] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);\n          outputIndex = outputIndex0 + 1;\n          output[outputIndex0] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);\n          outputIndex0 = outputIndex + 1;\n          output[outputIndex] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);\n          outputIndex = outputIndex0 + 1;\n          output[outputIndex0] = C.JSString_methods._codeUnitAt$1(alphabet, bits & 63);\n          bits = 0;\n          expectedChars = 3;\n        }\n      }\n      if (byteOr >= 0 && byteOr <= 255) {\n        if (isLast && expectedChars < 3) {\n          outputIndex0 = outputIndex + 1;\n          outputIndex1 = outputIndex0 + 1;\n          if (3 - expectedChars === 1) {\n            output[outputIndex] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);\n            output[outputIndex0] = C.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);\n            output[outputIndex1] = 61;\n            output[outputIndex1 + 1] = 61;\n          } else {\n            output[outputIndex] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);\n            output[outputIndex0] = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);\n            output[outputIndex1] = C.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);\n            output[outputIndex1 + 1] = 61;\n          }\n          return 0;\n        }\n        return (bits << 2 | 3 - expectedChars) >>> 0;\n      }\n      for (i = start; i < end;) {\n        byte = t1.$index(bytes, i);\n        if (byte < 0 || byte > 255)\n          break;\n        ++i;\n      }\n      throw H.wrapException(P.ArgumentError$value(bytes, \"Not a byte value at index \" + i + \": 0x\" + J.toRadixString$1$n(t1.$index(bytes, i), 16), null));\n    },\n    JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {\n      return new P.JsonUnsupportedObjectError(unsupportedObject, cause);\n    },\n    _defaultToEncodable: function(object) {\n      return object.toJson$0();\n    },\n    _JsonStringStringifier$: function(_sink, _toEncodable) {\n      return new P._JsonStringStringifier(_sink, [], P.convert___defaultToEncodable$closure());\n    },\n    _JsonStringStringifier_stringify: function(object, toEncodable, indent) {\n      var t1,\n        output = new P.StringBuffer(\"\");\n      P._JsonStringStringifier_printOn(object, output, toEncodable, indent);\n      t1 = output._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _JsonStringStringifier_printOn: function(object, output, toEncodable, indent) {\n      var stringifier = P._JsonStringStringifier$(output, toEncodable);\n      stringifier.writeObject$1(object);\n    },\n    _Utf8Decoder_errorDescription: function(state) {\n      switch (state) {\n        case 65:\n          return \"Missing extension byte\";\n        case 67:\n          return \"Unexpected extension byte\";\n        case 69:\n          return \"Invalid UTF-8 byte\";\n        case 71:\n          return \"Overlong encoding\";\n        case 73:\n          return \"Out of unicode range\";\n        case 75:\n          return \"Encoded surrogate\";\n        case 77:\n          return \"Unfinished UTF-8 octet sequence\";\n        default:\n          return \"\";\n      }\n    },\n    _Utf8Decoder__makeUint8List: function(codeUnits, start, end) {\n      var t1, i, b,\n        $length = end - start,\n        bytes = new Uint8Array($length);\n      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {\n        b = t1.$index(codeUnits, start + i);\n        bytes[i] = (b & 4294967040) >>> 0 !== 0 ? 255 : b;\n      }\n      return bytes;\n    },\n    Utf8Decoder_closure: function Utf8Decoder_closure() {\n    },\n    Utf8Decoder_closure0: function Utf8Decoder_closure0() {\n    },\n    AsciiCodec: function AsciiCodec() {\n    },\n    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {\n    },\n    AsciiEncoder: function AsciiEncoder(t0) {\n      this._subsetMask = t0;\n    },\n    Base64Codec: function Base64Codec() {\n    },\n    Base64Encoder: function Base64Encoder() {\n    },\n    _Base64Encoder: function _Base64Encoder(t0) {\n      this._convert$_state = 0;\n      this._alphabet = t0;\n    },\n    _BufferCachingBase64Encoder: function _BufferCachingBase64Encoder(t0) {\n      this.bufferCache = null;\n      this._convert$_state = 0;\n      this._alphabet = t0;\n    },\n    _Base64EncoderSink: function _Base64EncoderSink() {\n    },\n    _AsciiBase64EncoderSink: function _AsciiBase64EncoderSink(t0, t1) {\n      this._sink = t0;\n      this._encoder = t1;\n    },\n    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {\n      this._sink = t0;\n      this._encoder = t1;\n    },\n    ByteConversionSink: function ByteConversionSink() {\n    },\n    ByteConversionSinkBase: function ByteConversionSinkBase() {\n    },\n    ChunkedConversionSink: function ChunkedConversionSink() {\n    },\n    Codec: function Codec() {\n    },\n    Converter: function Converter() {\n    },\n    Encoding: function Encoding() {\n    },\n    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {\n      this.unsupportedObject = t0;\n      this.cause = t1;\n    },\n    JsonCyclicError: function JsonCyclicError(t0, t1) {\n      this.unsupportedObject = t0;\n      this.cause = t1;\n    },\n    JsonCodec: function JsonCodec() {\n    },\n    JsonEncoder: function JsonEncoder(t0) {\n      this._toEncodable = t0;\n    },\n    _JsonStringifier: function _JsonStringifier() {\n    },\n    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {\n      this._box_0 = t0;\n      this.keyValueList = t1;\n    },\n    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {\n      this._sink = t0;\n      this._seen = t1;\n      this._toEncodable = t2;\n    },\n    StringConversionSinkBase: function StringConversionSinkBase() {\n    },\n    StringConversionSinkMixin: function StringConversionSinkMixin() {\n    },\n    _StringSinkConversionSink: function _StringSinkConversionSink(t0) {\n      this._stringSink = t0;\n    },\n    _StringCallbackSink: function _StringCallbackSink(t0, t1) {\n      this._convert$_callback = t0;\n      this._stringSink = t1;\n    },\n    _StringAdapterSink: function _StringAdapterSink(t0) {\n      this._sink = t0;\n    },\n    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter(t0, t1, t2) {\n      this._decoder = t0;\n      this._sink = t1;\n      this._stringSink = t2;\n    },\n    _Utf8ConversionSink: function _Utf8ConversionSink(t0, t1, t2) {\n      this._decoder = t0;\n      this._chunkedSink = t1;\n      this._convert$_buffer = t2;\n    },\n    Utf8Codec: function Utf8Codec() {\n    },\n    Utf8Encoder: function Utf8Encoder() {\n    },\n    _Utf8Encoder: function _Utf8Encoder(t0) {\n      this._bufferIndex = this._carry = 0;\n      this._convert$_buffer = t0;\n    },\n    Utf8Decoder: function Utf8Decoder(t0) {\n      this._allowMalformed = t0;\n    },\n    _Utf8Decoder: function _Utf8Decoder(t0) {\n      this.allowMalformed = t0;\n      this._convert$_state = 16;\n      this._charOrIndex = 0;\n    },\n    identityHashCode: function(object) {\n      return H.objectHashCode(object);\n    },\n    Function_apply: function($function, positionalArguments) {\n      return H.Primitives_applyFunction($function, positionalArguments, null);\n    },\n    int_parse: function(source, radix) {\n      var value = H.Primitives_parseInt(source, radix);\n      if (value != null)\n        return value;\n      throw H.wrapException(P.FormatException$(source, null, null));\n    },\n    double_parse: function(source) {\n      var value = H.Primitives_parseDouble(source);\n      if (value != null)\n        return value;\n      throw H.wrapException(P.FormatException$(\"Invalid double\", source, null));\n    },\n    Error__objectToString: function(object) {\n      if (object instanceof H.Closure)\n        return object.toString$0(0);\n      return \"Instance of '\" + H.S(H.Primitives_objectTypeName(object)) + \"'\";\n    },\n    List_List$filled: function($length, fill, growable, $E) {\n      var i,\n        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);\n      if ($length !== 0 && fill != null)\n        for (i = 0; i < result.length; ++i)\n          result[i] = fill;\n      return result;\n    },\n    List_List$from: function(elements, growable, $E) {\n      var t1,\n        list = H.setRuntimeTypeInfo([], $E._eval$1(\"JSArray<0>\"));\n      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)\n        list.push(t1.get$current(t1));\n      if (growable)\n        return list;\n      return J.JSArray_markFixedList(list);\n    },\n    List_List$generate: function($length, generator, growable, $E) {\n      var i,\n        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);\n      for (i = 0; i < $length; ++i)\n        result[i] = generator.call$1(i);\n      return result;\n    },\n    List_List$unmodifiable: function(elements, $E) {\n      return J.JSArray_markUnmodifiableList(P.List_List$from(elements, false, $E));\n    },\n    String_String$fromCharCodes: function(charCodes, start, end) {\n      var array, len;\n      if (Array.isArray(charCodes)) {\n        array = charCodes;\n        len = array.length;\n        end = P.RangeError_checkValidRange(start, end, len);\n        return H.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);\n      }\n      if (type$.NativeUint8List._is(charCodes))\n        return H.Primitives_stringFromNativeUint8List(charCodes, start, P.RangeError_checkValidRange(start, end, charCodes.length));\n      return P.String__stringFromIterable(charCodes, start, end);\n    },\n    String_String$fromCharCode: function(charCode) {\n      return H.Primitives_stringFromCharCode(charCode);\n    },\n    String__stringFromIterable: function(charCodes, start, end) {\n      var t1, it, i, list, _null = null;\n      if (start < 0)\n        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$asx(charCodes), _null, _null));\n      t1 = end == null;\n      if (!t1 && end < start)\n        throw H.wrapException(P.RangeError$range(end, start, J.get$length$asx(charCodes), _null, _null));\n      it = J.get$iterator$ax(charCodes);\n      for (i = 0; i < start; ++i)\n        if (!it.moveNext$0())\n          throw H.wrapException(P.RangeError$range(start, 0, i, _null, _null));\n      list = [];\n      if (t1)\n        for (; it.moveNext$0();)\n          list.push(it.get$current(it));\n      else\n        for (i = start; i < end; ++i) {\n          if (!it.moveNext$0())\n            throw H.wrapException(P.RangeError$range(end, start, i, _null, _null));\n          list.push(it.get$current(it));\n        }\n      return H.Primitives_stringFromCharCodes(list);\n    },\n    RegExp_RegExp: function(source, multiLine) {\n      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, multiLine, true, false, false, false));\n    },\n    identical: function(a, b) {\n      return a == null ? b == null : a === b;\n    },\n    StringBuffer__writeAll: function(string, objects, separator) {\n      var iterator = J.get$iterator$ax(objects);\n      if (!iterator.moveNext$0())\n        return string;\n      if (separator.length === 0) {\n        do\n          string += H.S(iterator.get$current(iterator));\n        while (iterator.moveNext$0());\n      } else {\n        string += H.S(iterator.get$current(iterator));\n        for (; iterator.moveNext$0();)\n          string = string + separator + H.S(iterator.get$current(iterator));\n      }\n      return string;\n    },\n    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {\n      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);\n    },\n    Uri_base: function() {\n      var uri = H.Primitives_currentUri();\n      if (uri != null)\n        return P.Uri_parse(uri);\n      throw H.wrapException(P.UnsupportedError$(\"'Uri.base' is not supported\"));\n    },\n    _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {\n      var t1, bytes, i, t2, byte,\n        _s16_ = \"0123456789ABCDEF\";\n      if (encoding === C.C_Utf8Codec) {\n        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;\n        if (typeof text != \"string\")\n          H.throwExpression(H.argumentErrorValue(text));\n        t1 = t1.test(text);\n      } else\n        t1 = false;\n      if (t1)\n        return text;\n      bytes = encoding.get$encoder().convert$1(text);\n      for (t1 = bytes.length, i = 0, t2 = \"\"; i < t1; ++i) {\n        byte = bytes[i];\n        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)\n          t2 += H.Primitives_stringFromCharCode(byte);\n        else\n          t2 = spaceToPlus && byte === 32 ? t2 + \"+\" : t2 + \"%\" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];\n      }\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    },\n    StackTrace_current: function() {\n      var stackTrace, exception;\n      if ($.$get$_hasErrorStackProperty())\n        return H.getTraceFromException(new Error());\n      try {\n        throw H.wrapException(\"\");\n      } catch (exception) {\n        H.unwrapException(exception);\n        stackTrace = H.getTraceFromException(exception);\n        return stackTrace;\n      }\n    },\n    DateTime$_withValue: function(_value, isUtc) {\n      var t1;\n      if (Math.abs(_value) <= 864e13)\n        t1 = false;\n      else\n        t1 = true;\n      if (t1)\n        H.throwExpression(P.ArgumentError$(\"DateTime is outside valid range: \" + _value));\n      P.ArgumentError_checkNotNull(false, \"isUtc\");\n      return new P.DateTime(_value, false);\n    },\n    DateTime__fourDigits: function(n) {\n      var absN = Math.abs(n),\n        sign = n < 0 ? \"-\" : \"\";\n      if (absN >= 1000)\n        return \"\" + n;\n      if (absN >= 100)\n        return sign + \"0\" + absN;\n      if (absN >= 10)\n        return sign + \"00\" + absN;\n      return sign + \"000\" + absN;\n    },\n    DateTime__threeDigits: function(n) {\n      if (n >= 100)\n        return \"\" + n;\n      if (n >= 10)\n        return \"0\" + n;\n      return \"00\" + n;\n    },\n    DateTime__twoDigits: function(n) {\n      if (n >= 10)\n        return \"\" + n;\n      return \"0\" + n;\n    },\n    Duration$: function(milliseconds) {\n      return new P.Duration(1000 * milliseconds);\n    },\n    Error_safeToString: function(object) {\n      if (typeof object == \"number\" || H._isBool(object) || null == object)\n        return J.toString$0$(object);\n      if (typeof object == \"string\")\n        return JSON.stringify(object);\n      return P.Error__objectToString(object);\n    },\n    AssertionError$: function(message) {\n      return new P.AssertionError(message);\n    },\n    ArgumentError$: function(message) {\n      return new P.ArgumentError(false, null, null, message);\n    },\n    ArgumentError$value: function(value, $name, message) {\n      return new P.ArgumentError(true, value, $name, message);\n    },\n    ArgumentError$notNull: function($name) {\n      return new P.ArgumentError(false, null, $name, \"Must not be null\");\n    },\n    ArgumentError_checkNotNull: function(argument, $name) {\n      if (argument == null)\n        throw H.wrapException(P.ArgumentError$notNull($name));\n      return argument;\n    },\n    RangeError$: function(message) {\n      var _null = null;\n      return new P.RangeError(_null, _null, false, _null, _null, message);\n    },\n    RangeError$value: function(value, $name, message) {\n      return new P.RangeError(null, null, true, value, $name, message == null ? \"Value not in range\" : message);\n    },\n    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {\n      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, \"Invalid value\");\n    },\n    RangeError_checkValueInInterval: function(value, minValue, maxValue, $name) {\n      if (value < minValue || value > maxValue)\n        throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, null));\n      return value;\n    },\n    RangeError_checkValidIndex: function(index, indexable, $name) {\n      var $length = indexable.get$length(indexable);\n      if (0 > index || index >= $length)\n        throw H.wrapException(P.IndexError$(index, indexable, $name == null ? \"index\" : $name, null, $length));\n      return index;\n    },\n    RangeError_checkValidRange: function(start, end, $length) {\n      if (0 > start || start > $length)\n        throw H.wrapException(P.RangeError$range(start, 0, $length, \"start\", null));\n      if (end != null) {\n        if (start > end || end > $length)\n          throw H.wrapException(P.RangeError$range(end, start, $length, \"end\", null));\n        return end;\n      }\n      return $length;\n    },\n    RangeError_checkNotNegative: function(value, $name) {\n      if (value < 0)\n        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));\n      return value;\n    },\n    IndexError$: function(invalidValue, indexable, $name, message, $length) {\n      var t1 = $length == null ? J.get$length$asx(indexable) : $length;\n      return new P.IndexError(t1, true, invalidValue, $name, \"Index out of range\");\n    },\n    UnsupportedError$: function(message) {\n      return new P.UnsupportedError(message);\n    },\n    UnimplementedError$: function(message) {\n      return new P.UnimplementedError(message);\n    },\n    StateError$: function(message) {\n      return new P.StateError(message);\n    },\n    ConcurrentModificationError$: function(modifiedObject) {\n      return new P.ConcurrentModificationError(modifiedObject);\n    },\n    FormatException$: function(message, source, offset) {\n      return new P.FormatException(message, source, offset);\n    },\n    Iterable_Iterable$generate: function(count, generator, $E) {\n      if (count <= 0)\n        return new H.EmptyIterable($E._eval$1(\"EmptyIterable<0>\"));\n      return new P._GeneratorIterable(count, generator, $E._eval$1(\"_GeneratorIterable<0>\"));\n    },\n    print: function(object) {\n      var line = J.toString$0$(object),\n        toZone = $.printToZone;\n      if (toZone == null)\n        H.printString(H.S(line));\n      else\n        toZone.call$1(line);\n    },\n    Set_castFrom: function(source, newSet, $S, $T) {\n      return new H.CastSet(source, newSet, $S._eval$1(\"@<0>\")._bind$1($T)._eval$1(\"CastSet<1,2>\"));\n    },\n    _combineSurrogatePair: function(start, end) {\n      return 65536 + ((start & 1023) << 10) + (end & 1023);\n    },\n    RuneIterator$: function(string) {\n      return new P.RuneIterator(string);\n    },\n    Uri_Uri$dataFromString: function($content, encoding, mimeType) {\n      var encodingName, t1,\n        buffer = new P.StringBuffer(\"\"),\n        indices = H.setRuntimeTypeInfo([-1], type$.JSArray_int);\n      if (encoding == null)\n        encodingName = null;\n      else\n        encodingName = \"utf-8\";\n      if (encoding == null)\n        encoding = C.C_AsciiCodec;\n      P.UriData__writeUri(mimeType, encodingName, null, buffer, indices);\n      indices.push(buffer._contents.length);\n      buffer._contents += \",\";\n      P.UriData__uriEncodeBytes(C.List_CVk, encoding.encode$1($content), buffer);\n      t1 = buffer._contents;\n      return new P.UriData(t1.charCodeAt(0) == 0 ? t1 : t1, indices, null).get$uri();\n    },\n    Uri_parse: function(uri) {\n      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,\n        end = uri.length;\n      if (end >= 5) {\n        delta = ((J._codeUnitAt$1$s(uri, 4) ^ 58) * 3 | C.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | C.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | C.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | C.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;\n        if (delta === 0)\n          return P.UriData__parse(end < end ? C.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();\n        else if (delta === 32)\n          return P.UriData__parse(C.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();\n      }\n      indices = P.List_List$filled(8, 0, false, type$.int);\n      indices[0] = 0;\n      indices[1] = -1;\n      indices[2] = -1;\n      indices[7] = -1;\n      indices[3] = 0;\n      indices[4] = 0;\n      indices[5] = end;\n      indices[6] = end;\n      if (P._scan(uri, 0, end, 0, indices) >= 14)\n        indices[7] = end;\n      schemeEnd = indices[1];\n      if (schemeEnd >= 0)\n        if (P._scan(uri, 0, schemeEnd, 20, indices) === 20)\n          indices[7] = schemeEnd;\n      hostStart = indices[2] + 1;\n      portStart = indices[3];\n      pathStart = indices[4];\n      queryStart = indices[5];\n      fragmentStart = indices[6];\n      if (fragmentStart < queryStart)\n        queryStart = fragmentStart;\n      if (pathStart < hostStart)\n        pathStart = queryStart;\n      else if (pathStart <= schemeEnd)\n        pathStart = schemeEnd + 1;\n      if (portStart < hostStart)\n        portStart = pathStart;\n      isSimple = indices[7] < 0;\n      if (isSimple)\n        if (hostStart > schemeEnd + 3) {\n          scheme = _null;\n          isSimple = false;\n        } else {\n          t1 = portStart > 0;\n          if (t1 && portStart + 1 === pathStart) {\n            scheme = _null;\n            isSimple = false;\n          } else {\n            if (!(queryStart < end && queryStart === pathStart + 2 && J.startsWith$2$s(uri, \"..\", pathStart)))\n              t2 = queryStart > pathStart + 2 && J.startsWith$2$s(uri, \"/..\", queryStart - 3);\n            else\n              t2 = true;\n            if (t2) {\n              scheme = _null;\n              isSimple = false;\n            } else {\n              if (schemeEnd === 4)\n                if (J.startsWith$2$s(uri, \"file\", 0)) {\n                  if (hostStart <= 0) {\n                    if (!C.JSString_methods.startsWith$2(uri, \"/\", pathStart)) {\n                      schemeAuth = \"file:///\";\n                      delta = 3;\n                    } else {\n                      schemeAuth = \"file://\";\n                      delta = 2;\n                    }\n                    uri = schemeAuth + C.JSString_methods.substring$2(uri, pathStart, end);\n                    schemeEnd -= 0;\n                    t1 = delta - 0;\n                    queryStart += t1;\n                    fragmentStart += t1;\n                    end = uri.length;\n                    hostStart = 7;\n                    portStart = 7;\n                    pathStart = 7;\n                  } else if (pathStart === queryStart) {\n                    ++fragmentStart;\n                    queryStart0 = queryStart + 1;\n                    uri = C.JSString_methods.replaceRange$3(uri, pathStart, queryStart, \"/\");\n                    ++end;\n                    queryStart = queryStart0;\n                  }\n                  scheme = \"file\";\n                } else if (C.JSString_methods.startsWith$2(uri, \"http\", 0)) {\n                  if (t1 && portStart + 3 === pathStart && C.JSString_methods.startsWith$2(uri, \"80\", portStart + 1)) {\n                    fragmentStart -= 3;\n                    pathStart0 = pathStart - 3;\n                    queryStart -= 3;\n                    uri = C.JSString_methods.replaceRange$3(uri, portStart, pathStart, \"\");\n                    end -= 3;\n                    pathStart = pathStart0;\n                  }\n                  scheme = \"http\";\n                } else\n                  scheme = _null;\n              else if (schemeEnd === 5 && J.startsWith$2$s(uri, \"https\", 0)) {\n                if (t1 && portStart + 4 === pathStart && J.startsWith$2$s(uri, \"443\", portStart + 1)) {\n                  fragmentStart -= 4;\n                  pathStart0 = pathStart - 4;\n                  queryStart -= 4;\n                  uri = J.replaceRange$3$asx(uri, portStart, pathStart, \"\");\n                  end -= 3;\n                  pathStart = pathStart0;\n                }\n                scheme = \"https\";\n              } else\n                scheme = _null;\n              isSimple = true;\n            }\n          }\n        }\n      else\n        scheme = _null;\n      if (isSimple) {\n        t1 = uri.length;\n        if (end < t1) {\n          uri = J.substring$2$s(uri, 0, end);\n          schemeEnd -= 0;\n          hostStart -= 0;\n          portStart -= 0;\n          pathStart -= 0;\n          queryStart -= 0;\n          fragmentStart -= 0;\n        }\n        return new P._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);\n      }\n      if (scheme == null)\n        if (schemeEnd > 0)\n          scheme = P._Uri__makeScheme(uri, 0, schemeEnd);\n        else {\n          if (schemeEnd === 0)\n            P._Uri__fail(uri, 0, \"Invalid empty scheme\");\n          scheme = \"\";\n        }\n      if (hostStart > 0) {\n        userInfoStart = schemeEnd + 3;\n        userInfo = userInfoStart < hostStart ? P._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : \"\";\n        host = P._Uri__makeHost(uri, hostStart, portStart, false);\n        t1 = portStart + 1;\n        if (t1 < pathStart) {\n          portNumber = H.Primitives_parseInt(J.substring$2$s(uri, t1, pathStart), _null);\n          port = P._Uri__makePort(portNumber == null ? H.throwExpression(P.FormatException$(\"Invalid port\", uri, t1)) : portNumber, scheme);\n        } else\n          port = _null;\n      } else {\n        port = _null;\n        host = port;\n        userInfo = \"\";\n      }\n      path = P._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);\n      query = queryStart < fragmentStart ? P._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;\n      return new P._Uri(scheme, userInfo, host, port, path, query, fragmentStart < end ? P._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);\n    },\n    Uri_decodeComponent: function(encodedComponent) {\n      return P._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, C.C_Utf8Codec, false);\n    },\n    Uri__parseIPv4Address: function(host, start, end) {\n      var i, partStart, partIndex, char, part, partIndex0,\n        _s43_ = \"IPv4 address should contain exactly 4 parts\",\n        _s37_ = \"each part must be in the range 0..255\",\n        error = new P.Uri__parseIPv4Address_error(host),\n        result = new Uint8Array(4);\n      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {\n        char = C.JSString_methods.codeUnitAt$1(host, i);\n        if (char !== 46) {\n          if ((char ^ 48) > 9)\n            error.call$2(\"invalid character\", i);\n        } else {\n          if (partIndex === 3)\n            error.call$2(_s43_, i);\n          part = P.int_parse(C.JSString_methods.substring$2(host, partStart, i), null);\n          if (part > 255)\n            error.call$2(_s37_, partStart);\n          partIndex0 = partIndex + 1;\n          result[partIndex] = part;\n          partStart = i + 1;\n          partIndex = partIndex0;\n        }\n      }\n      if (partIndex !== 3)\n        error.call$2(_s43_, end);\n      part = P.int_parse(C.JSString_methods.substring$2(host, partStart, end), null);\n      if (part > 255)\n        error.call$2(_s37_, partStart);\n      result[partIndex] = part;\n      return result;\n    },\n    Uri_parseIPv6Address: function(host, start, end) {\n      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j,\n        error = new P.Uri_parseIPv6Address_error(host),\n        parseHex = new P.Uri_parseIPv6Address_parseHex(error, host);\n      if (host.length < 2)\n        error.call$1(\"address is too short\");\n      parts = H.setRuntimeTypeInfo([], type$.JSArray_int);\n      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {\n        char = C.JSString_methods.codeUnitAt$1(host, i);\n        if (char === 58) {\n          if (i === start) {\n            ++i;\n            if (C.JSString_methods.codeUnitAt$1(host, i) !== 58)\n              error.call$2(\"invalid start colon.\", i);\n            partStart = i;\n          }\n          if (i === partStart) {\n            if (wildcardSeen)\n              error.call$2(\"only one wildcard `::` is allowed\", i);\n            parts.push(-1);\n            wildcardSeen = true;\n          } else\n            parts.push(parseHex.call$2(partStart, i));\n          partStart = i + 1;\n        } else if (char === 46)\n          seenDot = true;\n      }\n      if (parts.length === 0)\n        error.call$1(\"too few parts\");\n      atEnd = partStart === end;\n      t1 = C.JSArray_methods.get$last(parts);\n      if (atEnd && t1 !== -1)\n        error.call$2(\"expected a part after last `:`\", end);\n      if (!atEnd)\n        if (!seenDot)\n          parts.push(parseHex.call$2(partStart, end));\n        else {\n          last = P.Uri__parseIPv4Address(host, partStart, end);\n          parts.push((last[0] << 8 | last[1]) >>> 0);\n          parts.push((last[2] << 8 | last[3]) >>> 0);\n        }\n      if (wildcardSeen) {\n        if (parts.length > 7)\n          error.call$1(\"an address with a wildcard must have less than 7 parts\");\n      } else if (parts.length !== 8)\n        error.call$1(\"an address without a wildcard must contain exactly 8 parts\");\n      bytes = new Uint8Array(16);\n      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {\n        value = parts[i];\n        if (value === -1)\n          for (j = 0; j < wildCardLength; ++j) {\n            bytes[index] = 0;\n            bytes[index + 1] = 0;\n            index += 2;\n          }\n        else {\n          bytes[index] = C.JSInt_methods._shrOtherPositive$1(value, 8);\n          bytes[index + 1] = value & 255;\n          index += 2;\n        }\n      }\n      return bytes;\n    },\n    _Uri__Uri: function(host, path, pathSegments, scheme) {\n      var userInfo, query, fragment, port, isFile, t1, hasAuthority, t2, _null = null;\n      scheme = scheme == null ? \"\" : P._Uri__makeScheme(scheme, 0, scheme.length);\n      userInfo = P._Uri__makeUserInfo(_null, 0, 0);\n      host = P._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);\n      query = P._Uri__makeQuery(_null, 0, 0, _null);\n      fragment = P._Uri__makeFragment(_null, 0, 0);\n      port = P._Uri__makePort(_null, scheme);\n      isFile = scheme === \"file\";\n      if (host == null)\n        t1 = userInfo.length !== 0 || port != null || isFile;\n      else\n        t1 = false;\n      if (t1)\n        host = \"\";\n      t1 = host == null;\n      hasAuthority = !t1;\n      path = P._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);\n      t2 = scheme.length === 0;\n      if (t2 && t1 && !C.JSString_methods.startsWith$1(path, \"/\"))\n        path = P._Uri__normalizeRelativePath(path, !t2 || hasAuthority);\n      else\n        path = P._Uri__removeDotSegments(path);\n      return new P._Uri(scheme, userInfo, t1 && C.JSString_methods.startsWith$1(path, \"//\") ? \"\" : host, port, path, query, fragment);\n    },\n    _Uri__defaultPort: function(scheme) {\n      if (scheme === \"http\")\n        return 80;\n      if (scheme === \"https\")\n        return 443;\n      return 0;\n    },\n    _Uri__fail: function(uri, index, message) {\n      throw H.wrapException(P.FormatException$(message, uri, index));\n    },\n    _Uri__Uri$file: function(path, windows) {\n      return windows ? P._Uri__makeWindowsFileUrl(path, false) : P._Uri__makeFileUri(path, false);\n    },\n    _Uri__checkNonWindowsPathReservedCharacters: function(segments, argumentError) {\n      var t1, _i, segment, t2, t3;\n      for (t1 = segments.length, _i = 0; _i < t1; ++_i) {\n        segment = segments[_i];\n        segment.toString;\n        t2 = J.getInterceptor$asx(segment);\n        t3 = t2.get$length(segment);\n        if (0 > t3)\n          H.throwExpression(P.RangeError$range(0, 0, t2.get$length(segment), null, null));\n        if (H.stringContainsUnchecked(segment, \"/\", 0)) {\n          t1 = P.UnsupportedError$(\"Illegal path character \" + H.S(segment));\n          throw H.wrapException(t1);\n        }\n      }\n    },\n    _Uri__checkWindowsPathReservedCharacters: function(segments, argumentError, firstSegment) {\n      var t1, cur, t2;\n      for (t1 = H.SubListIterable$(segments, firstSegment, null, H._arrayInstanceType(segments)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2 = P.RegExp_RegExp('[\"*/:<>?\\\\\\\\|]', false);\n        cur.toString;\n        if (H.stringContainsUnchecked(cur, t2, 0))\n          if (argumentError)\n            throw H.wrapException(P.ArgumentError$(\"Illegal character in path\"));\n          else\n            throw H.wrapException(P.UnsupportedError$(\"Illegal character in path: \" + cur));\n      }\n    },\n    _Uri__checkWindowsDriveLetter: function(charCode, argumentError) {\n      var t1,\n        _s21_ = \"Illegal drive letter \";\n      if (!(65 <= charCode && charCode <= 90))\n        t1 = 97 <= charCode && charCode <= 122;\n      else\n        t1 = true;\n      if (t1)\n        return;\n      if (argumentError)\n        throw H.wrapException(P.ArgumentError$(_s21_ + P.String_String$fromCharCode(charCode)));\n      else\n        throw H.wrapException(P.UnsupportedError$(_s21_ + P.String_String$fromCharCode(charCode)));\n    },\n    _Uri__makeFileUri: function(path, slashTerminated) {\n      var _null = null,\n        segments = H.setRuntimeTypeInfo(path.split(\"/\"), type$.JSArray_String);\n      if (C.JSString_methods.startsWith$1(path, \"/\"))\n        return P._Uri__Uri(_null, _null, segments, \"file\");\n      else\n        return P._Uri__Uri(_null, _null, segments, _null);\n    },\n    _Uri__makeWindowsFileUrl: function(path, slashTerminated) {\n      var t1, pathSegments, pathStart, hostPart, _s1_ = \"\\\\\", _null = null, _s4_ = \"file\";\n      if (C.JSString_methods.startsWith$1(path, \"\\\\\\\\?\\\\\"))\n        if (C.JSString_methods.startsWith$2(path, \"UNC\\\\\", 4))\n          path = C.JSString_methods.replaceRange$3(path, 0, 7, _s1_);\n        else {\n          path = C.JSString_methods.substring$1(path, 4);\n          if (path.length < 3 || C.JSString_methods._codeUnitAt$1(path, 1) !== 58 || C.JSString_methods._codeUnitAt$1(path, 2) !== 92)\n            throw H.wrapException(P.ArgumentError$(\"Windows paths with \\\\\\\\?\\\\ prefix must be absolute\"));\n        }\n      else\n        path = H.stringReplaceAllUnchecked(path, \"/\", _s1_);\n      t1 = path.length;\n      if (t1 > 1 && C.JSString_methods._codeUnitAt$1(path, 1) === 58) {\n        P._Uri__checkWindowsDriveLetter(C.JSString_methods._codeUnitAt$1(path, 0), true);\n        if (t1 === 2 || C.JSString_methods._codeUnitAt$1(path, 2) !== 92)\n          throw H.wrapException(P.ArgumentError$(\"Windows paths with drive letter must be absolute\"));\n        pathSegments = H.setRuntimeTypeInfo(path.split(_s1_), type$.JSArray_String);\n        P._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);\n        return P._Uri__Uri(_null, _null, pathSegments, _s4_);\n      }\n      if (C.JSString_methods.startsWith$1(path, _s1_))\n        if (C.JSString_methods.startsWith$2(path, _s1_, 1)) {\n          pathStart = C.JSString_methods.indexOf$2(path, _s1_, 2);\n          t1 = pathStart < 0;\n          hostPart = t1 ? C.JSString_methods.substring$1(path, 2) : C.JSString_methods.substring$2(path, 2, pathStart);\n          pathSegments = H.setRuntimeTypeInfo((t1 ? \"\" : C.JSString_methods.substring$1(path, pathStart + 1)).split(_s1_), type$.JSArray_String);\n          P._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);\n          return P._Uri__Uri(hostPart, _null, pathSegments, _s4_);\n        } else {\n          pathSegments = H.setRuntimeTypeInfo(path.split(_s1_), type$.JSArray_String);\n          P._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);\n          return P._Uri__Uri(_null, _null, pathSegments, _s4_);\n        }\n      else {\n        pathSegments = H.setRuntimeTypeInfo(path.split(_s1_), type$.JSArray_String);\n        P._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);\n        return P._Uri__Uri(_null, _null, pathSegments, _null);\n      }\n    },\n    _Uri__makePort: function(port, scheme) {\n      if (port != null && port === P._Uri__defaultPort(scheme))\n        return null;\n      return port;\n    },\n    _Uri__makeHost: function(host, start, end, strictIPv6) {\n      var t1, t2, index, zoneIDstart, zoneID, i;\n      if (host == null)\n        return null;\n      if (start === end)\n        return \"\";\n      if (C.JSString_methods.codeUnitAt$1(host, start) === 91) {\n        t1 = end - 1;\n        if (C.JSString_methods.codeUnitAt$1(host, t1) !== 93)\n          P._Uri__fail(host, start, \"Missing end `]` to match `[` in host\");\n        t2 = start + 1;\n        index = P._Uri__checkZoneID(host, t2, t1);\n        if (index < t1) {\n          zoneIDstart = index + 1;\n          zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, \"25\", zoneIDstart) ? index + 3 : zoneIDstart, t1, \"%25\");\n        } else\n          zoneID = \"\";\n        P.Uri_parseIPv6Address(host, t2, index);\n        return C.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + \"]\";\n      }\n      for (i = start; i < end; ++i)\n        if (C.JSString_methods.codeUnitAt$1(host, i) === 58) {\n          index = C.JSString_methods.indexOf$2(host, \"%\", start);\n          index = index >= start && index < end ? index : end;\n          if (index < end) {\n            zoneIDstart = index + 1;\n            zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, \"25\", zoneIDstart) ? index + 3 : zoneIDstart, end, \"%25\");\n          } else\n            zoneID = \"\";\n          P.Uri_parseIPv6Address(host, start, index);\n          return \"[\" + C.JSString_methods.substring$2(host, start, index) + zoneID + \"]\";\n        }\n      return P._Uri__normalizeRegName(host, start, end);\n    },\n    _Uri__checkZoneID: function(host, start, end) {\n      var index = C.JSString_methods.indexOf$2(host, \"%\", start);\n      return index >= start && index < end ? index : end;\n    },\n    _Uri__normalizeZoneID: function(host, start, end, prefix) {\n      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,\n        buffer = prefix !== \"\" ? new P.StringBuffer(prefix) : null;\n      for (index = start, sectionStart = index, isNormalized = true; index < end;) {\n        char = C.JSString_methods.codeUnitAt$1(host, index);\n        if (char === 37) {\n          replacement = P._Uri__normalizeEscape(host, index, true);\n          t1 = replacement == null;\n          if (t1 && isNormalized) {\n            index += 3;\n            continue;\n          }\n          if (buffer == null)\n            buffer = new P.StringBuffer(\"\");\n          t2 = buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);\n          if (t1)\n            replacement = C.JSString_methods.substring$2(host, index, index + 3);\n          else if (replacement === \"%\")\n            P._Uri__fail(host, index, \"ZoneID should not contain % anymore\");\n          buffer._contents = t2 + replacement;\n          index += 3;\n          sectionStart = index;\n          isNormalized = true;\n        } else if (char < 127 && (C.List_nxB[char >>> 4] & 1 << (char & 15)) !== 0) {\n          if (isNormalized && 65 <= char && 90 >= char) {\n            if (buffer == null)\n              buffer = new P.StringBuffer(\"\");\n            if (sectionStart < index) {\n              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);\n              sectionStart = index;\n            }\n            isNormalized = false;\n          }\n          ++index;\n        } else {\n          if ((char & 64512) === 55296 && index + 1 < end) {\n            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);\n            if ((tail & 64512) === 56320) {\n              char = 65536 | (char & 1023) << 10 | tail & 1023;\n              sourceLength = 2;\n            } else\n              sourceLength = 1;\n          } else\n            sourceLength = 1;\n          slice = C.JSString_methods.substring$2(host, sectionStart, index);\n          if (buffer == null) {\n            buffer = new P.StringBuffer(\"\");\n            t1 = buffer;\n          } else\n            t1 = buffer;\n          t1._contents += slice;\n          t1._contents += P._Uri__escapeChar(char);\n          index += sourceLength;\n          sectionStart = index;\n        }\n      }\n      if (buffer == null)\n        return C.JSString_methods.substring$2(host, start, end);\n      if (sectionStart < end)\n        buffer._contents += C.JSString_methods.substring$2(host, sectionStart, end);\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _Uri__normalizeRegName: function(host, start, end) {\n      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;\n      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {\n        char = C.JSString_methods.codeUnitAt$1(host, index);\n        if (char === 37) {\n          replacement = P._Uri__normalizeEscape(host, index, true);\n          t1 = replacement == null;\n          if (t1 && isNormalized) {\n            index += 3;\n            continue;\n          }\n          if (buffer == null)\n            buffer = new P.StringBuffer(\"\");\n          slice = C.JSString_methods.substring$2(host, sectionStart, index);\n          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;\n          if (t1) {\n            replacement = C.JSString_methods.substring$2(host, index, index + 3);\n            sourceLength = 3;\n          } else if (replacement === \"%\") {\n            replacement = \"%25\";\n            sourceLength = 1;\n          } else\n            sourceLength = 3;\n          buffer._contents = t2 + replacement;\n          index += sourceLength;\n          sectionStart = index;\n          isNormalized = true;\n        } else if (char < 127 && (C.List_qNA[char >>> 4] & 1 << (char & 15)) !== 0) {\n          if (isNormalized && 65 <= char && 90 >= char) {\n            if (buffer == null)\n              buffer = new P.StringBuffer(\"\");\n            if (sectionStart < index) {\n              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);\n              sectionStart = index;\n            }\n            isNormalized = false;\n          }\n          ++index;\n        } else if (char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0)\n          P._Uri__fail(host, index, \"Invalid character\");\n        else {\n          if ((char & 64512) === 55296 && index + 1 < end) {\n            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);\n            if ((tail & 64512) === 56320) {\n              char = 65536 | (char & 1023) << 10 | tail & 1023;\n              sourceLength = 2;\n            } else\n              sourceLength = 1;\n          } else\n            sourceLength = 1;\n          slice = C.JSString_methods.substring$2(host, sectionStart, index);\n          if (!isNormalized)\n            slice = slice.toLowerCase();\n          if (buffer == null) {\n            buffer = new P.StringBuffer(\"\");\n            t1 = buffer;\n          } else\n            t1 = buffer;\n          t1._contents += slice;\n          t1._contents += P._Uri__escapeChar(char);\n          index += sourceLength;\n          sectionStart = index;\n        }\n      }\n      if (buffer == null)\n        return C.JSString_methods.substring$2(host, start, end);\n      if (sectionStart < end) {\n        slice = C.JSString_methods.substring$2(host, sectionStart, end);\n        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _Uri__makeScheme: function(scheme, start, end) {\n      var i, containsUpperCase, codeUnit;\n      if (start === end)\n        return \"\";\n      if (!P._Uri__isAlphabeticCharacter(J.getInterceptor$s(scheme)._codeUnitAt$1(scheme, start)))\n        P._Uri__fail(scheme, start, \"Scheme not starting with alphabetic character\");\n      for (i = start, containsUpperCase = false; i < end; ++i) {\n        codeUnit = C.JSString_methods._codeUnitAt$1(scheme, i);\n        if (!(codeUnit < 128 && (C.List_JYB[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))\n          P._Uri__fail(scheme, i, \"Illegal scheme character\");\n        if (65 <= codeUnit && codeUnit <= 90)\n          containsUpperCase = true;\n      }\n      scheme = C.JSString_methods.substring$2(scheme, start, end);\n      return P._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);\n    },\n    _Uri__canonicalizeScheme: function(scheme) {\n      if (scheme === \"http\")\n        return \"http\";\n      if (scheme === \"file\")\n        return \"file\";\n      if (scheme === \"https\")\n        return \"https\";\n      if (scheme === \"package\")\n        return \"package\";\n      return scheme;\n    },\n    _Uri__makeUserInfo: function(userInfo, start, end) {\n      if (userInfo == null)\n        return \"\";\n      return P._Uri__normalizeOrSubstring(userInfo, start, end, C.List_gRj, false);\n    },\n    _Uri__makePath: function(path, start, end, pathSegments, scheme, hasAuthority) {\n      var result,\n        isFile = scheme === \"file\",\n        ensureLeadingSlash = isFile || hasAuthority;\n      if (path == null) {\n        if (pathSegments == null)\n          return isFile ? \"/\" : \"\";\n        result = new H.MappedListIterable(pathSegments, new P._Uri__makePath_closure(), H._arrayInstanceType(pathSegments)._eval$1(\"MappedListIterable<1,String>\")).join$1(0, \"/\");\n      } else if (pathSegments != null)\n        throw H.wrapException(P.ArgumentError$(\"Both path and pathSegments specified\"));\n      else\n        result = P._Uri__normalizeOrSubstring(path, start, end, C.List_qg4, true);\n      if (result.length === 0) {\n        if (isFile)\n          return \"/\";\n      } else if (ensureLeadingSlash && !C.JSString_methods.startsWith$1(result, \"/\"))\n        result = \"/\" + result;\n      return P._Uri__normalizePath(result, scheme, hasAuthority);\n    },\n    _Uri__normalizePath: function(path, scheme, hasAuthority) {\n      var t1 = scheme.length === 0;\n      if (t1 && !hasAuthority && !C.JSString_methods.startsWith$1(path, \"/\"))\n        return P._Uri__normalizeRelativePath(path, !t1 || hasAuthority);\n      return P._Uri__removeDotSegments(path);\n    },\n    _Uri__makeQuery: function(query, start, end, queryParameters) {\n      if (query != null)\n        return P._Uri__normalizeOrSubstring(query, start, end, C.List_CVk, true);\n      return null;\n    },\n    _Uri__makeFragment: function(fragment, start, end) {\n      if (fragment == null)\n        return null;\n      return P._Uri__normalizeOrSubstring(fragment, start, end, C.List_CVk, true);\n    },\n    _Uri__normalizeEscape: function(source, index, lowerCase) {\n      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,\n        t1 = index + 2;\n      if (t1 >= source.length)\n        return \"%\";\n      firstDigit = C.JSString_methods.codeUnitAt$1(source, index + 1);\n      secondDigit = C.JSString_methods.codeUnitAt$1(source, t1);\n      firstDigitValue = H.hexDigitValue(firstDigit);\n      secondDigitValue = H.hexDigitValue(secondDigit);\n      if (firstDigitValue < 0 || secondDigitValue < 0)\n        return \"%\";\n      value = firstDigitValue * 16 + secondDigitValue;\n      if (value < 127 && (C.List_nxB[C.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)\n        return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);\n      if (firstDigit >= 97 || secondDigit >= 97)\n        return C.JSString_methods.substring$2(source, index, index + 3).toUpperCase();\n      return null;\n    },\n    _Uri__escapeChar: function(char) {\n      var codeUnits, flag, encodedBytes, index, byte,\n        _s16_ = \"0123456789ABCDEF\";\n      if (char < 128) {\n        codeUnits = new Uint8Array(3);\n        codeUnits[0] = 37;\n        codeUnits[1] = C.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);\n        codeUnits[2] = C.JSString_methods._codeUnitAt$1(_s16_, char & 15);\n      } else {\n        if (char > 2047)\n          if (char > 65535) {\n            flag = 240;\n            encodedBytes = 4;\n          } else {\n            flag = 224;\n            encodedBytes = 3;\n          }\n        else {\n          flag = 192;\n          encodedBytes = 2;\n        }\n        codeUnits = new Uint8Array(3 * encodedBytes);\n        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {\n          byte = C.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;\n          codeUnits[index] = 37;\n          codeUnits[index + 1] = C.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);\n          codeUnits[index + 2] = C.JSString_methods._codeUnitAt$1(_s16_, byte & 15);\n          index += 3;\n        }\n      }\n      return P.String_String$fromCharCodes(codeUnits, 0, null);\n    },\n    _Uri__normalizeOrSubstring: function(component, start, end, charTable, escapeDelimiters) {\n      var t1 = P._Uri__normalize(component, start, end, charTable, escapeDelimiters);\n      return t1 == null ? C.JSString_methods.substring$2(component, start, end) : t1;\n    },\n    _Uri__normalize: function(component, start, end, charTable, escapeDelimiters) {\n      var t1, index, sectionStart, buffer, char, replacement, sourceLength, t2, tail, _null = null;\n      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {\n        char = C.JSString_methods.codeUnitAt$1(component, index);\n        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)\n          ++index;\n        else {\n          if (char === 37) {\n            replacement = P._Uri__normalizeEscape(component, index, false);\n            if (replacement == null) {\n              index += 3;\n              continue;\n            }\n            if (\"%\" === replacement) {\n              replacement = \"%25\";\n              sourceLength = 1;\n            } else\n              sourceLength = 3;\n          } else if (t1 && char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0) {\n            P._Uri__fail(component, index, \"Invalid character\");\n            sourceLength = _null;\n            replacement = sourceLength;\n          } else {\n            if ((char & 64512) === 55296) {\n              t2 = index + 1;\n              if (t2 < end) {\n                tail = C.JSString_methods.codeUnitAt$1(component, t2);\n                if ((tail & 64512) === 56320) {\n                  char = 65536 | (char & 1023) << 10 | tail & 1023;\n                  sourceLength = 2;\n                } else\n                  sourceLength = 1;\n              } else\n                sourceLength = 1;\n            } else\n              sourceLength = 1;\n            replacement = P._Uri__escapeChar(char);\n          }\n          if (buffer == null) {\n            buffer = new P.StringBuffer(\"\");\n            t2 = buffer;\n          } else\n            t2 = buffer;\n          t2._contents += C.JSString_methods.substring$2(component, sectionStart, index);\n          t2._contents += H.S(replacement);\n          index += sourceLength;\n          sectionStart = index;\n        }\n      }\n      if (buffer == null)\n        return _null;\n      if (sectionStart < end)\n        buffer._contents += C.JSString_methods.substring$2(component, sectionStart, end);\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _Uri__mayContainDotSegments: function(path) {\n      if (C.JSString_methods.startsWith$1(path, \".\"))\n        return true;\n      return C.JSString_methods.indexOf$1(path, \"/.\") !== -1;\n    },\n    _Uri__removeDotSegments: function(path) {\n      var output, t1, t2, appendSlash, _i, segment;\n      if (!P._Uri__mayContainDotSegments(path))\n        return path;\n      output = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      for (t1 = path.split(\"/\"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {\n        segment = t1[_i];\n        if (J.$eq$(segment, \"..\")) {\n          if (output.length !== 0) {\n            output.pop();\n            if (output.length === 0)\n              output.push(\"\");\n          }\n          appendSlash = true;\n        } else if (\".\" === segment)\n          appendSlash = true;\n        else {\n          output.push(segment);\n          appendSlash = false;\n        }\n      }\n      if (appendSlash)\n        output.push(\"\");\n      return C.JSArray_methods.join$1(output, \"/\");\n    },\n    _Uri__normalizeRelativePath: function(path, allowScheme) {\n      var output, t1, t2, appendSlash, _i, segment;\n      if (!P._Uri__mayContainDotSegments(path))\n        return !allowScheme ? P._Uri__escapeScheme(path) : path;\n      output = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      for (t1 = path.split(\"/\"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {\n        segment = t1[_i];\n        if (\"..\" === segment)\n          if (output.length !== 0 && C.JSArray_methods.get$last(output) !== \"..\") {\n            output.pop();\n            appendSlash = true;\n          } else {\n            output.push(\"..\");\n            appendSlash = false;\n          }\n        else if (\".\" === segment)\n          appendSlash = true;\n        else {\n          output.push(segment);\n          appendSlash = false;\n        }\n      }\n      t1 = output.length;\n      if (t1 !== 0)\n        t1 = t1 === 1 && output[0].length === 0;\n      else\n        t1 = true;\n      if (t1)\n        return \"./\";\n      if (appendSlash || C.JSArray_methods.get$last(output) === \"..\")\n        output.push(\"\");\n      if (!allowScheme)\n        output[0] = P._Uri__escapeScheme(output[0]);\n      return C.JSArray_methods.join$1(output, \"/\");\n    },\n    _Uri__escapeScheme: function(path) {\n      var i, char,\n        t1 = path.length;\n      if (t1 >= 2 && P._Uri__isAlphabeticCharacter(J._codeUnitAt$1$s(path, 0)))\n        for (i = 1; i < t1; ++i) {\n          char = C.JSString_methods._codeUnitAt$1(path, i);\n          if (char === 58)\n            return C.JSString_methods.substring$2(path, 0, i) + \"%3A\" + C.JSString_methods.substring$1(path, i + 1);\n          if (char > 127 || (C.List_JYB[char >>> 4] & 1 << (char & 15)) === 0)\n            break;\n        }\n      return path;\n    },\n    _Uri__toWindowsFilePath: function(uri) {\n      var hasDriveLetter, t2, host,\n        segments = uri.get$pathSegments(),\n        t1 = segments.length;\n      if (t1 > 0 && J.get$length$asx(segments[0]) === 2 && J.codeUnitAt$1$s(segments[0], 1) === 58) {\n        P._Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(segments[0], 0), false);\n        P._Uri__checkWindowsPathReservedCharacters(segments, false, 1);\n        hasDriveLetter = true;\n      } else {\n        P._Uri__checkWindowsPathReservedCharacters(segments, false, 0);\n        hasDriveLetter = false;\n      }\n      t2 = uri.get$hasAbsolutePath() && !hasDriveLetter ? \"\\\\\" : \"\";\n      if (uri.get$hasAuthority()) {\n        host = uri.get$host();\n        if (host.length !== 0)\n          t2 = t2 + \"\\\\\" + host + \"\\\\\";\n      }\n      t2 = P.StringBuffer__writeAll(t2, segments, \"\\\\\");\n      t1 = hasDriveLetter && t1 === 1 ? t2 + \"\\\\\" : t2;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _Uri__hexCharPairToByte: function(s, pos) {\n      var byte, i, charCode;\n      for (byte = 0, i = 0; i < 2; ++i) {\n        charCode = C.JSString_methods._codeUnitAt$1(s, pos + i);\n        if (48 <= charCode && charCode <= 57)\n          byte = byte * 16 + charCode - 48;\n        else {\n          charCode |= 32;\n          if (97 <= charCode && charCode <= 102)\n            byte = byte * 16 + charCode - 87;\n          else\n            throw H.wrapException(P.ArgumentError$(\"Invalid URL encoding\"));\n        }\n      }\n      return byte;\n    },\n    _Uri__uriDecode: function(text, start, end, encoding, plusToSpace) {\n      var simple, codeUnit, t2, bytes,\n        t1 = J.getInterceptor$s(text),\n        i = start;\n      while (true) {\n        if (!(i < end)) {\n          simple = true;\n          break;\n        }\n        codeUnit = t1._codeUnitAt$1(text, i);\n        if (codeUnit <= 127)\n          if (codeUnit !== 37)\n            t2 = false;\n          else\n            t2 = true;\n        else\n          t2 = true;\n        if (t2) {\n          simple = false;\n          break;\n        }\n        ++i;\n      }\n      if (simple) {\n        if (C.C_Utf8Codec !== encoding)\n          t2 = false;\n        else\n          t2 = true;\n        if (t2)\n          return t1.substring$2(text, start, end);\n        else\n          bytes = new H.CodeUnits(t1.substring$2(text, start, end));\n      } else {\n        bytes = H.setRuntimeTypeInfo([], type$.JSArray_int);\n        for (i = start; i < end; ++i) {\n          codeUnit = t1._codeUnitAt$1(text, i);\n          if (codeUnit > 127)\n            throw H.wrapException(P.ArgumentError$(\"Illegal percent encoding in URI\"));\n          if (codeUnit === 37) {\n            if (i + 3 > text.length)\n              throw H.wrapException(P.ArgumentError$(\"Truncated URI\"));\n            bytes.push(P._Uri__hexCharPairToByte(text, i + 1));\n            i += 2;\n          } else\n            bytes.push(codeUnit);\n        }\n      }\n      return C.Utf8Decoder_false.convert$1(bytes);\n    },\n    _Uri__isAlphabeticCharacter: function(codeUnit) {\n      var lowerCase = codeUnit | 32;\n      return 97 <= lowerCase && lowerCase <= 122;\n    },\n    UriData__writeUri: function(mimeType, charsetName, parameters, buffer, indices) {\n      var t1, slashIndex;\n      if (mimeType == null || mimeType === \"text/plain\")\n        mimeType = \"\";\n      if (mimeType.length === 0 || mimeType === \"application/octet-stream\")\n        t1 = buffer._contents += mimeType;\n      else {\n        slashIndex = P.UriData__validateMimeType(mimeType);\n        if (slashIndex < 0)\n          throw H.wrapException(P.ArgumentError$value(mimeType, \"mimeType\", \"Invalid MIME type\"));\n        t1 = buffer._contents += H.S(P._Uri__uriEncode(C.List_qFt, C.JSString_methods.substring$2(mimeType, 0, slashIndex), C.C_Utf8Codec, false));\n        buffer._contents = t1 + \"/\";\n        t1 = buffer._contents += H.S(P._Uri__uriEncode(C.List_qFt, C.JSString_methods.substring$1(mimeType, slashIndex + 1), C.C_Utf8Codec, false));\n      }\n      if (charsetName != null) {\n        indices.push(t1.length);\n        indices.push(buffer._contents.length + 8);\n        buffer._contents += \";charset=\";\n        buffer._contents += H.S(P._Uri__uriEncode(C.List_qFt, charsetName, C.C_Utf8Codec, false));\n      }\n    },\n    UriData__validateMimeType: function(mimeType) {\n      var t1, slashIndex, i;\n      for (t1 = mimeType.length, slashIndex = -1, i = 0; i < t1; ++i) {\n        if (C.JSString_methods._codeUnitAt$1(mimeType, i) !== 47)\n          continue;\n        if (slashIndex < 0) {\n          slashIndex = i;\n          continue;\n        }\n        return -1;\n      }\n      return slashIndex;\n    },\n    UriData__parse: function(text, start, sourceUri) {\n      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,\n        _s17_ = \"Invalid MIME type\",\n        indices = H.setRuntimeTypeInfo([start - 1], type$.JSArray_int);\n      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {\n        char = C.JSString_methods._codeUnitAt$1(text, i);\n        if (char === 44 || char === 59)\n          break;\n        if (char === 47) {\n          if (slashIndex < 0) {\n            slashIndex = i;\n            continue;\n          }\n          throw H.wrapException(P.FormatException$(_s17_, text, i));\n        }\n      }\n      if (slashIndex < 0 && i > start)\n        throw H.wrapException(P.FormatException$(_s17_, text, i));\n      for (; char !== 44;) {\n        indices.push(i);\n        ++i;\n        for (equalsIndex = -1; i < t1; ++i) {\n          char = C.JSString_methods._codeUnitAt$1(text, i);\n          if (char === 61) {\n            if (equalsIndex < 0)\n              equalsIndex = i;\n          } else if (char === 59 || char === 44)\n            break;\n        }\n        if (equalsIndex >= 0)\n          indices.push(equalsIndex);\n        else {\n          lastSeparator = C.JSArray_methods.get$last(indices);\n          if (char !== 44 || i !== lastSeparator + 7 || !C.JSString_methods.startsWith$2(text, \"base64\", lastSeparator + 1))\n            throw H.wrapException(P.FormatException$(\"Expecting '='\", text, i));\n          break;\n        }\n      }\n      indices.push(i);\n      t2 = i + 1;\n      if ((indices.length & 1) === 1)\n        text = C.C_Base64Codec.normalize$3(text, t2, t1);\n      else {\n        data = P._Uri__normalize(text, t2, t1, C.List_CVk, true);\n        if (data != null)\n          text = C.JSString_methods.replaceRange$3(text, t2, t1, data);\n      }\n      return new P.UriData(text, indices, sourceUri);\n    },\n    UriData__uriEncodeBytes: function(canonicalTable, bytes, buffer) {\n      var t1, byteOr, i, byte,\n        _s16_ = \"0123456789ABCDEF\";\n      for (t1 = J.getInterceptor$asx(bytes), byteOr = 0, i = 0; i < t1.get$length(bytes); ++i) {\n        byte = t1.$index(bytes, i);\n        byteOr |= byte;\n        if (byte < 128 && (canonicalTable[C.JSInt_methods._shrOtherPositive$1(byte, 4)] & 1 << (byte & 15)) !== 0)\n          buffer._contents += H.Primitives_stringFromCharCode(byte);\n        else {\n          buffer._contents += H.Primitives_stringFromCharCode(37);\n          buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(_s16_, C.JSInt_methods._shrOtherPositive$1(byte, 4)));\n          buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(_s16_, byte & 15));\n        }\n      }\n      if ((byteOr & 4294967040) >>> 0 !== 0)\n        for (i = 0; i < t1.get$length(bytes); ++i) {\n          byte = t1.$index(bytes, i);\n          if (byte < 0 || byte > 255)\n            throw H.wrapException(P.ArgumentError$value(byte, \"non-byte value\", null));\n        }\n    },\n    _createTables: function() {\n      var _s77_ = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=\",\n        _s1_ = \".\", _s1_0 = \":\", _s1_1 = \"/\", _s1_2 = \"?\", _s1_3 = \"#\",\n        tables = P.List_List$generate(22, new P._createTables_closure(), true, type$.Uint8List),\n        t1 = new P._createTables_build(tables),\n        t2 = new P._createTables_setChars(),\n        t3 = new P._createTables_setRange(),\n        b = t1.call$2(0, 225);\n      t2.call$3(b, _s77_, 1);\n      t2.call$3(b, _s1_, 14);\n      t2.call$3(b, _s1_0, 34);\n      t2.call$3(b, _s1_1, 3);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(14, 225);\n      t2.call$3(b, _s77_, 1);\n      t2.call$3(b, _s1_, 15);\n      t2.call$3(b, _s1_0, 34);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(15, 225);\n      t2.call$3(b, _s77_, 1);\n      t2.call$3(b, \"%\", 225);\n      t2.call$3(b, _s1_0, 34);\n      t2.call$3(b, _s1_1, 9);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(1, 225);\n      t2.call$3(b, _s77_, 1);\n      t2.call$3(b, _s1_0, 34);\n      t2.call$3(b, _s1_1, 10);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(2, 235);\n      t2.call$3(b, _s77_, 139);\n      t2.call$3(b, _s1_1, 131);\n      t2.call$3(b, _s1_, 146);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(3, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_1, 68);\n      t2.call$3(b, _s1_, 18);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(4, 229);\n      t2.call$3(b, _s77_, 5);\n      t3.call$3(b, \"AZ\", 229);\n      t2.call$3(b, _s1_0, 102);\n      t2.call$3(b, \"@\", 68);\n      t2.call$3(b, \"[\", 232);\n      t2.call$3(b, _s1_1, 138);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(5, 229);\n      t2.call$3(b, _s77_, 5);\n      t3.call$3(b, \"AZ\", 229);\n      t2.call$3(b, _s1_0, 102);\n      t2.call$3(b, \"@\", 68);\n      t2.call$3(b, _s1_1, 138);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(6, 231);\n      t3.call$3(b, \"19\", 7);\n      t2.call$3(b, \"@\", 68);\n      t2.call$3(b, _s1_1, 138);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(7, 231);\n      t3.call$3(b, \"09\", 7);\n      t2.call$3(b, \"@\", 68);\n      t2.call$3(b, _s1_1, 138);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      t2.call$3(t1.call$2(8, 8), \"]\", 5);\n      b = t1.call$2(9, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_, 16);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(16, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_, 17);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(17, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_1, 9);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(10, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_, 18);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(18, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_, 19);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(19, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_1, 234);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(11, 235);\n      t2.call$3(b, _s77_, 11);\n      t2.call$3(b, _s1_1, 10);\n      t2.call$3(b, _s1_2, 172);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(12, 236);\n      t2.call$3(b, _s77_, 12);\n      t2.call$3(b, _s1_2, 12);\n      t2.call$3(b, _s1_3, 205);\n      b = t1.call$2(13, 237);\n      t2.call$3(b, _s77_, 13);\n      t2.call$3(b, _s1_2, 13);\n      t3.call$3(t1.call$2(20, 245), \"az\", 21);\n      b = t1.call$2(21, 245);\n      t3.call$3(b, \"az\", 21);\n      t3.call$3(b, \"09\", 21);\n      t2.call$3(b, \"+-.\", 21);\n      return tables;\n    },\n    _scan: function(uri, start, end, state, indices) {\n      var t1, i, table, char, transition,\n        tables = $.$get$_scannerTables();\n      for (t1 = J.getInterceptor$s(uri), i = start; i < end; ++i) {\n        table = tables[state];\n        char = t1._codeUnitAt$1(uri, i) ^ 96;\n        transition = table[char > 95 ? 31 : char];\n        state = transition & 31;\n        indices[transition >>> 5] = i;\n      }\n      return state;\n    },\n    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {\n      this._box_0 = t0;\n      this.sb = t1;\n    },\n    DateTime: function DateTime(t0, t1) {\n      this._value = t0;\n      this.isUtc = t1;\n    },\n    Duration: function Duration(t0) {\n      this._duration = t0;\n    },\n    Duration_toString_sixDigits: function Duration_toString_sixDigits() {\n    },\n    Duration_toString_twoDigits: function Duration_toString_twoDigits() {\n    },\n    Error: function Error() {\n    },\n    AssertionError: function AssertionError(t0) {\n      this.message = t0;\n    },\n    TypeError: function TypeError() {\n    },\n    NullThrownError: function NullThrownError() {\n    },\n    ArgumentError: function ArgumentError(t0, t1, t2, t3) {\n      var _ = this;\n      _._hasValue = t0;\n      _.invalidValue = t1;\n      _.name = t2;\n      _.message = t3;\n    },\n    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.start = t0;\n      _.end = t1;\n      _._hasValue = t2;\n      _.invalidValue = t3;\n      _.name = t4;\n      _.message = t5;\n    },\n    IndexError: function IndexError(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.length = t0;\n      _._hasValue = t1;\n      _.invalidValue = t2;\n      _.name = t3;\n      _.message = t4;\n    },\n    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {\n      var _ = this;\n      _._core$_receiver = t0;\n      _._memberName = t1;\n      _._core$_arguments = t2;\n      _._namedArguments = t3;\n    },\n    UnsupportedError: function UnsupportedError(t0) {\n      this.message = t0;\n    },\n    UnimplementedError: function UnimplementedError(t0) {\n      this.message = t0;\n    },\n    StateError: function StateError(t0) {\n      this.message = t0;\n    },\n    ConcurrentModificationError: function ConcurrentModificationError(t0) {\n      this.modifiedObject = t0;\n    },\n    OutOfMemoryError: function OutOfMemoryError() {\n    },\n    StackOverflowError: function StackOverflowError() {\n    },\n    CyclicInitializationError: function CyclicInitializationError(t0) {\n      this.variableName = t0;\n    },\n    _Exception: function _Exception(t0) {\n      this.message = t0;\n    },\n    FormatException: function FormatException(t0, t1, t2) {\n      this.message = t0;\n      this.source = t1;\n      this.offset = t2;\n    },\n    Iterable: function Iterable() {\n    },\n    _GeneratorIterable: function _GeneratorIterable(t0, t1, t2) {\n      this.length = t0;\n      this._generator = t1;\n      this.$ti = t2;\n    },\n    Iterator: function Iterator() {\n    },\n    MapEntry: function MapEntry(t0, t1, t2) {\n      this.key = t0;\n      this.value = t1;\n      this.$ti = t2;\n    },\n    Null: function Null() {\n    },\n    Object: function Object() {\n    },\n    _StringStackTrace: function _StringStackTrace(t0) {\n      this._stackTrace = t0;\n    },\n    Runes: function Runes(t0) {\n      this.string = t0;\n    },\n    RuneIterator: function RuneIterator(t0) {\n      var _ = this;\n      _.string = t0;\n      _._nextPosition = _._position = 0;\n      _._currentCodePoint = -1;\n    },\n    StringBuffer: function StringBuffer(t0) {\n      this._contents = t0;\n    },\n    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {\n      this.host = t0;\n    },\n    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {\n      this.host = t0;\n    },\n    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {\n      this.error = t0;\n      this.host = t1;\n    },\n    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.scheme = t0;\n      _._userInfo = t1;\n      _._host = t2;\n      _._port = t3;\n      _.path = t4;\n      _._query = t5;\n      _._fragment = t6;\n      _.___Uri_hashCode = _.___Uri_pathSegments = _.___Uri__text = null;\n    },\n    _Uri__makePath_closure: function _Uri__makePath_closure() {\n    },\n    UriData: function UriData(t0, t1, t2) {\n      this._text = t0;\n      this._separatorIndices = t1;\n      this._uriCache = t2;\n    },\n    _createTables_closure: function _createTables_closure() {\n    },\n    _createTables_build: function _createTables_build(t0) {\n      this.tables = t0;\n    },\n    _createTables_setChars: function _createTables_setChars() {\n    },\n    _createTables_setRange: function _createTables_setRange() {\n    },\n    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _._uri = t0;\n      _._schemeEnd = t1;\n      _._hostStart = t2;\n      _._portStart = t3;\n      _._pathStart = t4;\n      _._queryStart = t5;\n      _._fragmentStart = t6;\n      _._schemeCache = t7;\n      _._hashCodeCache = null;\n    },\n    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.scheme = t0;\n      _._userInfo = t1;\n      _._host = t2;\n      _._port = t3;\n      _.path = t4;\n      _._query = t5;\n      _._fragment = t6;\n      _.___Uri_hashCode = _.___Uri_pathSegments = _.___Uri__text = null;\n    },\n    max: function(a, b) {\n      return Math.max(H.checkNum(a), H.checkNum(b));\n    },\n    pow: function(x, exponent) {\n      H.checkNum(x);\n      H.checkNum(exponent);\n      return Math.pow(x, exponent);\n    },\n    Random_Random: function() {\n      return C.C__JSRandom;\n    },\n    _JSRandom: function _JSRandom() {\n    },\n    _convertDartFunctionFast: function(f) {\n      var ret,\n        existing = f.$dart_jsFunction;\n      if (existing != null)\n        return existing;\n      ret = function(_call, f) {\n        return function() {\n          return _call(f, Array.prototype.slice.apply(arguments));\n        };\n      }(P._callDartFunctionFast, f);\n      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;\n      f.$dart_jsFunction = ret;\n      return ret;\n    },\n    _convertDartFunctionFastCaptureThis: function(f) {\n      var ret,\n        existing = f._$dart_jsFunctionCaptureThis;\n      if (existing != null)\n        return existing;\n      ret = function(_call, f) {\n        return function() {\n          return _call(f, this, Array.prototype.slice.apply(arguments));\n        };\n      }(P._callDartFunctionFastCaptureThis, f);\n      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;\n      f._$dart_jsFunctionCaptureThis = ret;\n      return ret;\n    },\n    _callDartFunctionFast: function(callback, $arguments) {\n      return P.Function_apply(callback, $arguments);\n    },\n    _callDartFunctionFastCaptureThis: function(callback, $self, $arguments) {\n      var t1 = [$self];\n      C.JSArray_methods.addAll$1(t1, $arguments);\n      return P.Function_apply(callback, t1);\n    },\n    allowInterop: function(f) {\n      if (typeof f == \"function\")\n        return f;\n      else\n        return P._convertDartFunctionFast(f);\n    },\n    allowInteropCaptureThis: function(f) {\n      if (typeof f == \"function\")\n        throw H.wrapException(P.ArgumentError$(\"Function is already a JS function so cannot capture this.\"));\n      else\n        return P._convertDartFunctionFastCaptureThis(f);\n    },\n    callConstructor: function(constr, $arguments) {\n      var args, factoryFunction;\n      if ($arguments instanceof Array)\n        switch ($arguments.length) {\n          case 0:\n            return new constr();\n          case 1:\n            return new constr($arguments[0]);\n          case 2:\n            return new constr($arguments[0], $arguments[1]);\n          case 3:\n            return new constr($arguments[0], $arguments[1], $arguments[2]);\n          case 4:\n            return new constr($arguments[0], $arguments[1], $arguments[2], $arguments[3]);\n        }\n      args = [null];\n      C.JSArray_methods.addAll$1(args, $arguments);\n      factoryFunction = constr.bind.apply(constr, args);\n      String(factoryFunction);\n      return new factoryFunction();\n    }\n  },\n  N = {ArgParser: function ArgParser(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._arg_parser$_options = t0;\n      _.options = t1;\n      _.commands = t2;\n      _._optionsAndSeparators = t3;\n      _.allowTrailingOptions = t4;\n      _.usageLineLength = t5;\n    }, ArgParser_findByAbbreviation_closure: function ArgParser_findByAbbreviation_closure(t0) {\n      this.abbr = t0;\n    }, ArgParser_findByAbbreviation_closure0: function ArgParser_findByAbbreviation_closure0() {\n    }, TTY: function TTY() {\n    }, TTYReadStream: function TTYReadStream() {\n    }, TTYWriteStream: function TTYWriteStream() {\n    }, AttributeSelector: function AttributeSelector(t0, t1, t2, t3) {\n      var _ = this;\n      _.name = t0;\n      _.op = t1;\n      _.value = t2;\n      _.modifier = t3;\n    }, AttributeOperator: function AttributeOperator(t0) {\n      this._attribute$_text = t0;\n    }, IDSelector: function IDSelector(t0) {\n      this.name = t0;\n    }, IDSelector_unify_closure: function IDSelector_unify_closure(t0) {\n      this.$this = t0;\n    }, PlaceholderSelector: function PlaceholderSelector(t0) {\n      this.name = t0;\n    }, UniversalSelector: function UniversalSelector(t0) {\n      this.namespace = t0;\n    }, NoSourceMapBuffer0: function NoSourceMapBuffer0(t0) {\n      this._no_source_map_buffer0$_buffer = t0;\n    },\n    serialize: function(node, charset, indentWidth, inspect, lineFeed, sourceMap, style, useSpaces) {\n      var t1, css, t2, prefix, t3,\n        visitor = N._SerializeVisitor$0(2, inspect, lineFeed, true, sourceMap, style, true);\n      node.accept$1(visitor);\n      t1 = visitor._serialize$_buffer;\n      css = t1.toString$0(0);\n      if (charset) {\n        t2 = new H.CodeUnits(css);\n        t2 = t2.any$1(t2, new N.serialize_closure());\n      } else\n        t2 = false;\n      if (t2)\n        prefix = style === C.OutputStyle_compressed ? \"\\ufeff\" : '@charset \"UTF-8\";\\n';\n      else\n        prefix = \"\";\n      t2 = prefix + css;\n      t3 = sourceMap ? t1.buildSourceMap$1$prefix(prefix) : null;\n      if (sourceMap)\n        t1.get$sourceFiles();\n      return new N.SerializeResult(t2, t3);\n    },\n    serializeValue0: function(value, inspect, quote) {\n      var visitor = N._SerializeVisitor$0(null, inspect, null, quote, false, null, true);\n      value.accept$1(visitor);\n      return visitor._serialize$_buffer.toString$0(0);\n    },\n    _SerializeVisitor$0: function(indentWidth, inspect, lineFeed, quote, sourceMap, style, useSpaces) {\n      var t1 = sourceMap ? new D.SourceMapBuffer0(new P.StringBuffer(\"\"), H.setRuntimeTypeInfo([], type$.JSArray_legacy_Entry), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_SourceFile)) : new N.NoSourceMapBuffer0(new P.StringBuffer(\"\")),\n        t2 = style == null ? C.OutputStyle_expanded0 : style,\n        t3 = indentWidth == null ? 2 : indentWidth;\n      P.RangeError_checkValueInInterval(t3, 0, 10, \"indentWidth\");\n      return new N._SerializeVisitor0(t1, t2, inspect, quote, 32, t3, C.C_LineFeed);\n    },\n    serialize_closure: function serialize_closure() {\n    },\n    _SerializeVisitor0: function _SerializeVisitor0(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._serialize$_buffer = t0;\n      _._indentation = 0;\n      _._style = t1;\n      _._serialize$_inspect = t2;\n      _._quote = t3;\n      _._indentCharacter = t4;\n      _._indentWidth = t5;\n      _._serialize$_lineFeed = t6;\n    },\n    _SerializeVisitor_visitCssComment_closure: function _SerializeVisitor_visitCssComment_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssAtRule_closure: function _SerializeVisitor_visitCssAtRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssMediaRule_closure: function _SerializeVisitor_visitCssMediaRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssImport_closure: function _SerializeVisitor_visitCssImport_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssImport__closure: function _SerializeVisitor_visitCssImport__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssKeyframeBlock_closure: function _SerializeVisitor_visitCssKeyframeBlock_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssStyleRule_closure: function _SerializeVisitor_visitCssStyleRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssSupportsRule_closure: function _SerializeVisitor_visitCssSupportsRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssDeclaration_closure: function _SerializeVisitor_visitCssDeclaration_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssDeclaration_closure0: function _SerializeVisitor_visitCssDeclaration_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitList_closure: function _SerializeVisitor_visitList_closure() {\n    },\n    _SerializeVisitor_visitList_closure0: function _SerializeVisitor_visitList_closure0(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _SerializeVisitor_visitList_closure1: function _SerializeVisitor_visitList_closure1(t0) {\n      this.$this = t0;\n    },\n    _SerializeVisitor_visitMap_closure: function _SerializeVisitor_visitMap_closure(t0, t1) {\n      this.$this = t0;\n      this.map = t1;\n    },\n    _SerializeVisitor_visitSelectorList_closure: function _SerializeVisitor_visitSelectorList_closure() {\n    },\n    _SerializeVisitor__write_closure: function _SerializeVisitor__write_closure(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _SerializeVisitor__visitChildren_closure: function _SerializeVisitor__visitChildren_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.children = t2;\n    },\n    OutputStyle: function OutputStyle(t0) {\n      this._serialize$_name = t0;\n    },\n    LineFeed: function LineFeed() {\n    },\n    SerializeResult: function SerializeResult(t0, t1) {\n      this.css = t0;\n      this.sourceMap = t1;\n    },\n    warn: function(message, deprecation) {\n      var warnDefinition = $.Zone__current.$index(0, C.Symbol__warn);\n      if (warnDefinition == null)\n        throw H.wrapException(P.ArgumentError$(string$.warn__));\n      warnDefinition.call$2(message, deprecation);\n    },\n    withWarnCallback: function(warn, callback, $T) {\n      var t1 = type$.legacy_Object;\n      return P.runZoned(new N.withWarnCallback_closure(callback, $T), P.LinkedHashMap_LinkedHashMap$_literal([C.Symbol__warn, warn], t1, t1), $T._eval$1(\"0*\"));\n    },\n    withWarnCallback_closure: function withWarnCallback_closure(t0, t1) {\n      this.callback = t0;\n      this.T = t1;\n    },\n    UnparsedFrame: function UnparsedFrame(t0, t1) {\n      this.uri = t0;\n      this.member = t1;\n    },\n    AttributeSelector0: function AttributeSelector0(t0, t1, t2, t3) {\n      var _ = this;\n      _.name = t0;\n      _.op = t1;\n      _.value = t2;\n      _.modifier = t3;\n    },\n    AttributeOperator0: function AttributeOperator0(t0) {\n      this._attribute0$_text = t0;\n    },\n    IDSelector0: function IDSelector0(t0) {\n      this.name = t0;\n    },\n    IDSelector_unify_closure0: function IDSelector_unify_closure0(t0) {\n      this.$this = t0;\n    },\n    NoSourceMapBuffer: function NoSourceMapBuffer(t0) {\n      this._no_source_map_buffer$_buffer = t0;\n    },\n    PlaceholderSelector0: function PlaceholderSelector0(t0) {\n      this.name = t0;\n    },\n    serialize0: function(node, charset, indentWidth, inspect, lineFeed, sourceMap, style, useSpaces) {\n      var t1, css, t2, prefix, t3,\n        visitor = N._SerializeVisitor$(indentWidth == null ? 2 : indentWidth, inspect, lineFeed, true, sourceMap, style, useSpaces);\n      node.accept$1(visitor);\n      t1 = visitor._buffer;\n      css = t1.toString$0(0);\n      t2 = new H.CodeUnits(css);\n      t2 = t2.any$1(t2, new N.serialize_closure0());\n      if (t2)\n        prefix = style === C.OutputStyle_compressed0 ? \"\\ufeff\" : '@charset \"UTF-8\";\\n';\n      else\n        prefix = \"\";\n      t2 = prefix + css;\n      t3 = sourceMap ? t1.buildSourceMap$1$prefix(prefix) : null;\n      if (sourceMap)\n        t1.get$sourceFiles();\n      return new N.SerializeResult0(t2, t3);\n    },\n    serializeValue: function(value, inspect, quote) {\n      var visitor = N._SerializeVisitor$(null, inspect, null, quote, false, null, true);\n      value.accept$1(visitor);\n      return visitor._buffer.toString$0(0);\n    },\n    _SerializeVisitor$: function(indentWidth, inspect, lineFeed, quote, sourceMap, style, useSpaces) {\n      var t1 = sourceMap ? new D.SourceMapBuffer(new P.StringBuffer(\"\"), H.setRuntimeTypeInfo([], type$.JSArray_legacy_Entry), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_SourceFile)) : new N.NoSourceMapBuffer(new P.StringBuffer(\"\")),\n        t2 = style == null ? C.OutputStyle_expanded : style,\n        t3 = useSpaces ? 32 : 9,\n        t4 = indentWidth == null ? 2 : indentWidth,\n        t5 = lineFeed == null ? C.LineFeed_D6m : lineFeed;\n      P.RangeError_checkValueInInterval(t4, 0, 10, \"indentWidth\");\n      return new N._SerializeVisitor(t1, t2, inspect, quote, t3, t4, t5);\n    },\n    serialize_closure0: function serialize_closure0() {\n    },\n    _SerializeVisitor: function _SerializeVisitor(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._buffer = t0;\n      _._serialize0$_indentation = 0;\n      _._serialize0$_style = t1;\n      _._inspect = t2;\n      _._serialize0$_quote = t3;\n      _._serialize0$_indentCharacter = t4;\n      _._serialize0$_indentWidth = t5;\n      _._lineFeed = t6;\n    },\n    _SerializeVisitor_visitCssComment_closure0: function _SerializeVisitor_visitCssComment_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssAtRule_closure0: function _SerializeVisitor_visitCssAtRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssMediaRule_closure0: function _SerializeVisitor_visitCssMediaRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssImport_closure0: function _SerializeVisitor_visitCssImport_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssImport__closure0: function _SerializeVisitor_visitCssImport__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssKeyframeBlock_closure0: function _SerializeVisitor_visitCssKeyframeBlock_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssStyleRule_closure0: function _SerializeVisitor_visitCssStyleRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssSupportsRule_closure0: function _SerializeVisitor_visitCssSupportsRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssDeclaration_closure1: function _SerializeVisitor_visitCssDeclaration_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitCssDeclaration_closure2: function _SerializeVisitor_visitCssDeclaration_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _SerializeVisitor_visitList_closure2: function _SerializeVisitor_visitList_closure2() {\n    },\n    _SerializeVisitor_visitList_closure3: function _SerializeVisitor_visitList_closure3(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _SerializeVisitor_visitList_closure4: function _SerializeVisitor_visitList_closure4(t0) {\n      this.$this = t0;\n    },\n    _SerializeVisitor_visitMap_closure0: function _SerializeVisitor_visitMap_closure0(t0, t1) {\n      this.$this = t0;\n      this.map = t1;\n    },\n    _SerializeVisitor_visitSelectorList_closure0: function _SerializeVisitor_visitSelectorList_closure0() {\n    },\n    _SerializeVisitor__write_closure0: function _SerializeVisitor__write_closure0(t0, t1) {\n      this.$this = t0;\n      this.value = t1;\n    },\n    _SerializeVisitor__visitChildren_closure0: function _SerializeVisitor__visitChildren_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.children = t2;\n    },\n    OutputStyle0: function OutputStyle0(t0) {\n      this._name = t0;\n    },\n    LineFeed0: function LineFeed0(t0, t1) {\n      this.name = t0;\n      this.text = t1;\n    },\n    SerializeResult0: function SerializeResult0(t0, t1) {\n      this.css = t0;\n      this.sourceMap = t1;\n    },\n    UniversalSelector0: function UniversalSelector0(t0) {\n      this.namespace = t0;\n    },\n    warn0: function(message, deprecation) {\n      var warnDefinition = $.Zone__current.$index(0, C.Symbol__warn);\n      if (warnDefinition == null)\n        throw H.wrapException(P.ArgumentError$(string$.warn__));\n      warnDefinition.call$2(message, deprecation);\n    },\n    withWarnCallback0: function(warn, callback, $T) {\n      var t1 = type$.legacy_Object;\n      return P.runZoned(new N.withWarnCallback_closure0(callback, $T), P.LinkedHashMap_LinkedHashMap$_literal([C.Symbol__warn, warn], t1, t1), $T._eval$1(\"0*\"));\n    },\n    withWarnCallback_closure0: function withWarnCallback_closure0(t0, t1) {\n      this.callback = t0;\n      this.T = t1;\n    }\n  },\n  Z = {\n    ArgParserException$: function(message, commands) {\n      return new Z.ArgParserException(commands == null ? C.List_empty : P.List_List$unmodifiable(commands, type$.legacy_String), message, null, null);\n    },\n    ArgParserException: function ArgParserException(t0, t1, t2, t3) {\n      var _ = this;\n      _.commands = t0;\n      _.message = t1;\n      _.source = t2;\n      _.offset = t3;\n    },\n    Argument: function Argument(t0, t1, t2) {\n      this.name = t0;\n      this.defaultValue = t1;\n      this.span = t2;\n    },\n    ConfiguredVariable: function ConfiguredVariable(t0, t1, t2, t3) {\n      var _ = this;\n      _.name = t0;\n      _.expression = t1;\n      _.isGuarded = t2;\n      _.span = t3;\n    },\n    BooleanExpression: function BooleanExpression(t0, t1) {\n      this.value = t0;\n      this.span = t1;\n    },\n    VariableDeclaration$: function($name, expression, span, comment, global, guarded, namespace) {\n      if (namespace != null && global)\n        H.throwExpression(P.ArgumentError$(string$.Other_));\n      return new Z.VariableDeclaration(namespace, $name, expression, guarded, global, span);\n    },\n    VariableDeclaration: function VariableDeclaration(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.expression = t2;\n      _.isGuarded = t3;\n      _.isGlobal = t4;\n      _.span = t5;\n    },\n    ConfiguredValue: function ConfiguredValue(t0, t1, t2) {\n      this.value = t0;\n      this.configurationSpan = t1;\n      this.assignmentNode = t2;\n    },\n    InterpolationBuffer: function InterpolationBuffer(t0, t1) {\n      this._interpolation_buffer$_text = t0;\n      this._interpolation_buffer$_contents = t1;\n    },\n    MergedMapView$: function(maps, $K, $V) {\n      var t1 = $K._eval$1(\"@<0>\")._bind$1($V);\n      t1 = new Z.MergedMapView(P.LinkedHashMap_LinkedHashMap$_empty($K._eval$1(\"0*\"), t1._eval$1(\"Map<1*,2*>*\")), t1._eval$1(\"MergedMapView<1,2>\"));\n      t1.MergedMapView$1(maps, $K, $V);\n      return t1;\n    },\n    MergedMapView: function MergedMapView(t0, t1) {\n      this._mapsByKey = t0;\n      this.$ti = t1;\n    },\n    SassBoolean: function SassBoolean(t0) {\n      this.value = t0;\n    },\n    LineScanner$: function(string) {\n      return new Z.LineScanner(null, string);\n    },\n    LineScanner: function LineScanner(t0, t1) {\n      var _ = this;\n      _._line_scanner$_column = _._line_scanner$_line = 0;\n      _.sourceUrl = t0;\n      _.string = t1;\n      _._string_scanner$_position = 0;\n      _._lastMatchPosition = _._lastMatch = null;\n    },\n    Argument0: function Argument0(t0, t1, t2) {\n      this.name = t0;\n      this.defaultValue = t1;\n      this.span = t2;\n    },\n    BooleanExpression0: function BooleanExpression0(t0, t1) {\n      this.value = t0;\n      this.span = t1;\n    },\n    closure263: function closure263() {\n    },\n    _closure34: function _closure34() {\n    },\n    _closure35: function _closure35() {\n    },\n    SassBoolean0: function SassBoolean0(t0) {\n      this.value = t0;\n    },\n    ConfiguredValue0: function ConfiguredValue0(t0, t1, t2) {\n      this.value = t0;\n      this.configurationSpan = t1;\n      this.assignmentNode = t2;\n    },\n    ConfiguredVariable0: function ConfiguredVariable0(t0, t1, t2, t3) {\n      var _ = this;\n      _.name = t0;\n      _.expression = t1;\n      _.isGuarded = t2;\n      _.span = t3;\n    },\n    InterpolationBuffer0: function InterpolationBuffer0(t0, t1) {\n      this._interpolation_buffer0$_text = t0;\n      this._interpolation_buffer0$_contents = t1;\n    },\n    MergedMapView$0: function(maps, $K, $V) {\n      var t1 = $K._eval$1(\"@<0>\")._bind$1($V);\n      t1 = new Z.MergedMapView0(P.LinkedHashMap_LinkedHashMap$_empty($K._eval$1(\"0*\"), t1._eval$1(\"Map<1*,2*>*\")), t1._eval$1(\"MergedMapView0<1,2>\"));\n      t1.MergedMapView$10(maps, $K, $V);\n      return t1;\n    },\n    MergedMapView0: function MergedMapView0(t0, t1) {\n      this._merged_map_view$_mapsByKey = t0;\n      this.$ti = t1;\n    },\n    RenderContext: function RenderContext() {\n    },\n    VariableDeclaration$0: function($name, expression, span, comment, global, guarded, namespace) {\n      if (namespace != null && global)\n        H.throwExpression(P.ArgumentError$(string$.Other_));\n      return new Z.VariableDeclaration0(namespace, $name, expression, guarded, global, span);\n    },\n    VariableDeclaration0: function VariableDeclaration0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.expression = t2;\n      _.isGuarded = t3;\n      _.isGlobal = t4;\n      _.span = t5;\n    }\n  },\n  V = {ArgResults: function ArgResults(t0, t1, t2, t3) {\n      var _ = this;\n      _._parser = t0;\n      _._parsed = t1;\n      _.name = t2;\n      _.rest = t3;\n    }, ErrorResult: function ErrorResult(t0, t1) {\n      this.error = t0;\n      this.stackTrace = t1;\n    }, BufferModule: function BufferModule() {\n    }, BufferConstants: function BufferConstants() {\n    }, Buffer: function Buffer() {\n    },\n    ModifiableCssStylesheet$: function(span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      return new V.ModifiableCssStylesheet(span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode), t1);\n    },\n    ModifiableCssStylesheet: function ModifiableCssStylesheet(t0, t1, t2) {\n      var _ = this;\n      _.span = t0;\n      _.children = t1;\n      _._children = t2;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    CssStylesheet: function CssStylesheet(t0, t1) {\n      this.children = t0;\n      this.span = t1;\n    },\n    AtRootQuery: function AtRootQuery(t0, t1, t2, t3) {\n      var _ = this;\n      _.include = t0;\n      _.names = t1;\n      _._all = t2;\n      _._at_root_query$_rule = t3;\n    },\n    BinaryOperationExpression: function BinaryOperationExpression(t0, t1, t2, t3) {\n      var _ = this;\n      _.operator = t0;\n      _.left = t1;\n      _.right = t2;\n      _.allowsSlash = t3;\n    },\n    BinaryOperator: function BinaryOperator(t0, t1, t2) {\n      this.name = t0;\n      this.operator = t1;\n      this.precedence = t2;\n    },\n    AtRootRule$: function(children, span, query) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new V.AtRootRule(query, span, t1, t2);\n    },\n    AtRootRule: function AtRootRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.query = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    EachRule$: function(variables, list, children, span) {\n      var t1 = P.List_List$unmodifiable(variables, type$.legacy_String),\n        t2 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t3 = C.JSArray_methods.any$1(t2, new M.ParentStatement_closure());\n      return new V.EachRule(t1, list, span, t2, t3);\n    },\n    EachRule: function EachRule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.variables = t0;\n      _.list = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    EachRule_toString_closure: function EachRule_toString_closure() {\n    },\n    IfClause$: function(expression, children) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement);\n      return new V.IfClause(expression, t1, C.JSArray_methods.any$1(t1, new V.IfClause$__closure()));\n    },\n    IfClause$last: function(children) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement);\n      return new V.IfClause(null, t1, C.JSArray_methods.any$1(t1, new V.IfClause$__closure()));\n    },\n    IfRule: function IfRule(t0, t1, t2) {\n      this.clauses = t0;\n      this.lastClause = t1;\n      this.span = t2;\n    },\n    IfRule_toString_closure: function IfRule_toString_closure(t0) {\n      this._box_0 = t0;\n    },\n    IfClause: function IfClause(t0, t1, t2) {\n      this.expression = t0;\n      this.children = t1;\n      this.hasDeclarations = t2;\n    },\n    IfClause$__closure: function IfClause$__closure() {\n    },\n    IfClause$___closure: function IfClause$___closure() {\n    },\n    Stylesheet$: function(children, span, plainCss) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_UseRule),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ForwardRule),\n        t3 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t4 = C.JSArray_methods.any$1(t3, new M.ParentStatement_closure());\n      t1 = new V.Stylesheet(span, plainCss, t1, t2, t3, t4);\n      t1.Stylesheet$3$plainCss(children, span, plainCss);\n      return t1;\n    },\n    Stylesheet_Stylesheet$parse: function(contents, syntax, logger, url) {\n      var t1, t2;\n      switch (syntax) {\n        case C.Syntax_Sass:\n          t1 = S.SpanScanner$(contents, url);\n          t2 = logger == null ? C.StderrLogger_false : logger;\n          return new U.SassParser(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration), t1, t2).parse$0();\n        case C.Syntax_SCSS:\n          return L.ScssParser$(contents, logger, url).parse$0();\n        case C.Syntax_CSS:\n          t1 = S.SpanScanner$(contents, url);\n          t2 = logger == null ? C.StderrLogger_false : logger;\n          return new Q.CssParser(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration), t1, t2).parse$0();\n        default:\n          throw H.wrapException(P.ArgumentError$(\"Unknown syntax \" + syntax.toString$0(0) + \".\"));\n      }\n    },\n    Stylesheet: function Stylesheet(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.span = t0;\n      _.plainCss = t1;\n      _._uses = t2;\n      _._forwards = t3;\n      _.children = t4;\n      _.hasDeclarations = t5;\n    },\n    AtRootQueryParser$: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new V.AtRootQueryParser(t1, logger);\n    },\n    AtRootQueryParser: function AtRootQueryParser(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    AtRootQueryParser_parse_closure: function AtRootQueryParser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser: function StylesheetParser() {\n    },\n    StylesheetParser_parse_closure: function StylesheetParser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parse__closure: function StylesheetParser_parse__closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parse__closure0: function StylesheetParser_parse__closure0() {\n    },\n    StylesheetParser_parseArgumentDeclaration_closure: function StylesheetParser_parseArgumentDeclaration_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parseVariableDeclaration_closure: function StylesheetParser_parseVariableDeclaration_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parseUseRule_closure: function StylesheetParser_parseUseRule_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__parseSingleProduction_closure: function StylesheetParser__parseSingleProduction_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.production = t1;\n      this.T = t2;\n    },\n    StylesheetParser__statement_closure: function StylesheetParser__statement_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_variableDeclarationWithoutNamespace_closure: function StylesheetParser_variableDeclarationWithoutNamespace_closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser_variableDeclarationWithoutNamespace_closure0: function StylesheetParser_variableDeclarationWithoutNamespace_closure0(t0) {\n      this.declaration = t0;\n    },\n    StylesheetParser__declarationOrBuffer_closure: function StylesheetParser__declarationOrBuffer_closure(t0) {\n      this.name = t0;\n    },\n    StylesheetParser__declarationOrBuffer_closure0: function StylesheetParser__declarationOrBuffer_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.name = t1;\n    },\n    StylesheetParser__styleRule_closure: function StylesheetParser__styleRule_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.wasInStyleRule = t2;\n    },\n    StylesheetParser__propertyOrVariableDeclaration_closure: function StylesheetParser__propertyOrVariableDeclaration_closure(t0) {\n      this._box_0 = t0;\n    },\n    StylesheetParser__propertyOrVariableDeclaration_closure0: function StylesheetParser__propertyOrVariableDeclaration_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.value = t1;\n    },\n    StylesheetParser__atRootRule_closure: function StylesheetParser__atRootRule_closure(t0) {\n      this.query = t0;\n    },\n    StylesheetParser__atRootRule_closure0: function StylesheetParser__atRootRule_closure0() {\n    },\n    StylesheetParser__eachRule_closure: function StylesheetParser__eachRule_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.wasInControlDirective = t1;\n      _.variables = t2;\n      _.list = t3;\n    },\n    StylesheetParser__functionRule_closure: function StylesheetParser__functionRule_closure(t0, t1, t2) {\n      this.name = t0;\n      this.$arguments = t1;\n      this.precedingComment = t2;\n    },\n    StylesheetParser__forRule_closure: function StylesheetParser__forRule_closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser__forRule_closure0: function StylesheetParser__forRule_closure0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.wasInControlDirective = t2;\n      _.variable = t3;\n      _.from = t4;\n      _.to = t5;\n    },\n    StylesheetParser__memberList_closure: function StylesheetParser__memberList_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.variables = t1;\n      this.identifiers = t2;\n    },\n    StylesheetParser__includeRule_closure: function StylesheetParser__includeRule_closure(t0) {\n      this._box_0 = t0;\n    },\n    StylesheetParser_mediaRule_closure: function StylesheetParser_mediaRule_closure(t0) {\n      this.query = t0;\n    },\n    StylesheetParser__mixinRule_closure: function StylesheetParser__mixinRule_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.precedingComment = t3;\n    },\n    StylesheetParser_mozDocumentRule_closure: function StylesheetParser_mozDocumentRule_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.name = t2;\n      _.value = t3;\n    },\n    StylesheetParser_supportsRule_closure: function StylesheetParser_supportsRule_closure(t0) {\n      this.condition = t0;\n    },\n    StylesheetParser__whileRule_closure: function StylesheetParser__whileRule_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.wasInControlDirective = t1;\n      this.condition = t2;\n    },\n    StylesheetParser_unknownAtRule_closure: function StylesheetParser_unknownAtRule_closure(t0, t1) {\n      this._box_0 = t0;\n      this.name = t1;\n    },\n    StylesheetParser_expression_resetState: function StylesheetParser_expression_resetState(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.start = t2;\n    },\n    StylesheetParser_expression_resolveOneOperation: function StylesheetParser_expression_resolveOneOperation(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser_expression_resolveOperations: function StylesheetParser_expression_resolveOperations(t0, t1) {\n      this._box_0 = t0;\n      this.resolveOneOperation = t1;\n    },\n    StylesheetParser_expression_addSingleExpression: function StylesheetParser_expression_addSingleExpression(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.resetState = t2;\n      _.resolveOperations = t3;\n    },\n    StylesheetParser_expression_addOperator: function StylesheetParser_expression_addOperator(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.resolveOneOperation = t2;\n    },\n    StylesheetParser_expression_resolveSpaceExpressions: function StylesheetParser_expression_resolveSpaceExpressions(t0, t1) {\n      this._box_0 = t0;\n      this.resolveOperations = t1;\n    },\n    StylesheetParser__expressionUntilComma_closure: function StylesheetParser__expressionUntilComma_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__unicodeRange_closure: function StylesheetParser__unicodeRange_closure() {\n    },\n    StylesheetParser__unicodeRange_closure0: function StylesheetParser__unicodeRange_closure0() {\n    },\n    StylesheetParser_identifierLike_closure: function StylesheetParser_identifierLike_closure(t0, t1) {\n      this.$this = t0;\n      this.start = t1;\n    },\n    StylesheetParser__expressionUntilComparison_closure: function StylesheetParser__expressionUntilComparison_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__publicIdentifier_closure: function StylesheetParser__publicIdentifier_closure(t0, t1) {\n      this.$this = t0;\n      this.start = t1;\n    },\n    cloneCssStylesheet: function(stylesheet, extender) {\n      var result = extender.clone$0();\n      return new S.Tuple2(new V._CloneCssVisitor(result.item2)._visitChildren$2(V.ModifiableCssStylesheet$(stylesheet.get$span()), stylesheet), result.item1, type$.Tuple2_of_legacy_ModifiableCssStylesheet_and_legacy_Extender);\n    },\n    _CloneCssVisitor: function _CloneCssVisitor(t0) {\n      this._oldToNewSelectors = t0;\n    },\n    SourceLocation$: function(offset, column, line, sourceUrl) {\n      var t1 = line == null,\n        t2 = t1 ? 0 : line;\n      if (offset < 0)\n        H.throwExpression(P.RangeError$(\"Offset may not be negative, was \" + offset + \".\"));\n      else if (!t1 && line < 0)\n        H.throwExpression(P.RangeError$(\"Line may not be negative, was \" + H.S(line) + \".\"));\n      else if (column < 0)\n        H.throwExpression(P.RangeError$(\"Column may not be negative, was \" + column + \".\"));\n      return new V.SourceLocation(sourceUrl, offset, t2, column);\n    },\n    SourceLocation: function SourceLocation(t0, t1, t2, t3) {\n      var _ = this;\n      _.sourceUrl = t0;\n      _.offset = t1;\n      _.line = t2;\n      _.column = t3;\n    },\n    SourceSpanBase: function SourceSpanBase() {\n    },\n    AtRootQueryParser$0: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new V.AtRootQueryParser0(t1, logger);\n    },\n    AtRootQueryParser0: function AtRootQueryParser0(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    AtRootQueryParser_parse_closure0: function AtRootQueryParser_parse_closure0(t0) {\n      this.$this = t0;\n    },\n    AtRootQuery0: function AtRootQuery0(t0, t1, t2, t3) {\n      var _ = this;\n      _.include = t0;\n      _.names = t1;\n      _._at_root_query0$_all = t2;\n      _._at_root_query0$_rule = t3;\n    },\n    AtRootRule$0: function(children, span, query) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new V.AtRootRule0(query, span, t1, t2);\n    },\n    AtRootRule0: function AtRootRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.query = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    BinaryOperationExpression0: function BinaryOperationExpression0(t0, t1, t2, t3) {\n      var _ = this;\n      _.operator = t0;\n      _.left = t1;\n      _.right = t2;\n      _.allowsSlash = t3;\n    },\n    BinaryOperator0: function BinaryOperator0(t0, t1, t2) {\n      this.name = t0;\n      this.operator = t1;\n      this.precedence = t2;\n    },\n    cloneCssStylesheet0: function(stylesheet, extender) {\n      var result = extender.clone$0();\n      return new S.Tuple2(new V._CloneCssVisitor0(result.item2)._clone_css$_visitChildren$2(V.ModifiableCssStylesheet$0(stylesheet.get$span()), stylesheet), result.item1, type$.Tuple2_of_legacy_ModifiableCssStylesheet_and_legacy_Extender_2);\n    },\n    _CloneCssVisitor0: function _CloneCssVisitor0(t0) {\n      this._clone_css$_oldToNewSelectors = t0;\n    },\n    EachRule$0: function(variables, list, children, span) {\n      var t1 = P.List_List$unmodifiable(variables, type$.legacy_String),\n        t2 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t3 = C.JSArray_methods.any$1(t2, new M.ParentStatement_closure0());\n      return new V.EachRule0(t1, list, span, t2, t3);\n    },\n    EachRule0: function EachRule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.variables = t0;\n      _.list = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    EachRule_toString_closure0: function EachRule_toString_closure0() {\n    },\n    IfClause$0: function(expression, children) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2);\n      return new V.IfClause0(expression, t1, C.JSArray_methods.any$1(t1, new V.IfClause$__closure0()));\n    },\n    IfClause$last0: function(children) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2);\n      return new V.IfClause0(null, t1, C.JSArray_methods.any$1(t1, new V.IfClause$__closure0()));\n    },\n    IfRule0: function IfRule0(t0, t1, t2) {\n      this.clauses = t0;\n      this.lastClause = t1;\n      this.span = t2;\n    },\n    IfRule_toString_closure0: function IfRule_toString_closure0(t0) {\n      this._box_0 = t0;\n    },\n    IfClause0: function IfClause0(t0, t1, t2) {\n      this.expression = t0;\n      this.children = t1;\n      this.hasDeclarations = t2;\n    },\n    IfClause$__closure0: function IfClause$__closure0() {\n    },\n    IfClause$___closure0: function IfClause$___closure0() {\n    },\n    CssStylesheet0: function CssStylesheet0(t0, t1) {\n      this.children = t0;\n      this.span = t1;\n    },\n    ModifiableCssStylesheet$0: function(span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      return new V.ModifiableCssStylesheet0(span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t1);\n    },\n    ModifiableCssStylesheet0: function ModifiableCssStylesheet0(t0, t1, t2) {\n      var _ = this;\n      _.span = t0;\n      _.children = t1;\n      _._node2$_children = t2;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    StylesheetParser0: function StylesheetParser0() {\n    },\n    StylesheetParser_parse_closure0: function StylesheetParser_parse_closure0(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parse__closure1: function StylesheetParser_parse__closure1(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_parse__closure2: function StylesheetParser_parse__closure2() {\n    },\n    StylesheetParser_parseArgumentDeclaration_closure0: function StylesheetParser_parseArgumentDeclaration_closure0(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__parseSingleProduction_closure0: function StylesheetParser__parseSingleProduction_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.production = t1;\n      this.T = t2;\n    },\n    StylesheetParser_parseSignature_closure: function StylesheetParser_parseSignature_closure(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__statement_closure0: function StylesheetParser__statement_closure0(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser_variableDeclarationWithoutNamespace_closure1: function StylesheetParser_variableDeclarationWithoutNamespace_closure1(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser_variableDeclarationWithoutNamespace_closure2: function StylesheetParser_variableDeclarationWithoutNamespace_closure2(t0) {\n      this.declaration = t0;\n    },\n    StylesheetParser__declarationOrBuffer_closure1: function StylesheetParser__declarationOrBuffer_closure1(t0) {\n      this.name = t0;\n    },\n    StylesheetParser__declarationOrBuffer_closure2: function StylesheetParser__declarationOrBuffer_closure2(t0, t1) {\n      this._box_0 = t0;\n      this.name = t1;\n    },\n    StylesheetParser__styleRule_closure0: function StylesheetParser__styleRule_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.wasInStyleRule = t2;\n    },\n    StylesheetParser__propertyOrVariableDeclaration_closure1: function StylesheetParser__propertyOrVariableDeclaration_closure1(t0) {\n      this._box_0 = t0;\n    },\n    StylesheetParser__propertyOrVariableDeclaration_closure2: function StylesheetParser__propertyOrVariableDeclaration_closure2(t0, t1) {\n      this._box_0 = t0;\n      this.value = t1;\n    },\n    StylesheetParser__atRootRule_closure1: function StylesheetParser__atRootRule_closure1(t0) {\n      this.query = t0;\n    },\n    StylesheetParser__atRootRule_closure2: function StylesheetParser__atRootRule_closure2() {\n    },\n    StylesheetParser__eachRule_closure0: function StylesheetParser__eachRule_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.wasInControlDirective = t1;\n      _.variables = t2;\n      _.list = t3;\n    },\n    StylesheetParser__functionRule_closure0: function StylesheetParser__functionRule_closure0(t0, t1, t2) {\n      this.name = t0;\n      this.$arguments = t1;\n      this.precedingComment = t2;\n    },\n    StylesheetParser__forRule_closure1: function StylesheetParser__forRule_closure1(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser__forRule_closure2: function StylesheetParser__forRule_closure2(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.wasInControlDirective = t2;\n      _.variable = t3;\n      _.from = t4;\n      _.to = t5;\n    },\n    StylesheetParser__memberList_closure0: function StylesheetParser__memberList_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.variables = t1;\n      this.identifiers = t2;\n    },\n    StylesheetParser__includeRule_closure0: function StylesheetParser__includeRule_closure0(t0) {\n      this._box_0 = t0;\n    },\n    StylesheetParser_mediaRule_closure0: function StylesheetParser_mediaRule_closure0(t0) {\n      this.query = t0;\n    },\n    StylesheetParser__mixinRule_closure0: function StylesheetParser__mixinRule_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.precedingComment = t3;\n    },\n    StylesheetParser_mozDocumentRule_closure0: function StylesheetParser_mozDocumentRule_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.name = t2;\n      _.value = t3;\n    },\n    StylesheetParser_supportsRule_closure0: function StylesheetParser_supportsRule_closure0(t0) {\n      this.condition = t0;\n    },\n    StylesheetParser__whileRule_closure0: function StylesheetParser__whileRule_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.wasInControlDirective = t1;\n      this.condition = t2;\n    },\n    StylesheetParser_unknownAtRule_closure0: function StylesheetParser_unknownAtRule_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.name = t1;\n    },\n    StylesheetParser_expression_resetState0: function StylesheetParser_expression_resetState0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.start = t2;\n    },\n    StylesheetParser_expression_resolveOneOperation0: function StylesheetParser_expression_resolveOneOperation0(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    StylesheetParser_expression_resolveOperations0: function StylesheetParser_expression_resolveOperations0(t0, t1) {\n      this._box_0 = t0;\n      this.resolveOneOperation = t1;\n    },\n    StylesheetParser_expression_addSingleExpression0: function StylesheetParser_expression_addSingleExpression0(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.resetState = t2;\n      _.resolveOperations = t3;\n    },\n    StylesheetParser_expression_addOperator0: function StylesheetParser_expression_addOperator0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.resolveOneOperation = t2;\n    },\n    StylesheetParser_expression_resolveSpaceExpressions0: function StylesheetParser_expression_resolveSpaceExpressions0(t0, t1) {\n      this._box_0 = t0;\n      this.resolveOperations = t1;\n    },\n    StylesheetParser__expressionUntilComma_closure0: function StylesheetParser__expressionUntilComma_closure0(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__unicodeRange_closure1: function StylesheetParser__unicodeRange_closure1() {\n    },\n    StylesheetParser__unicodeRange_closure2: function StylesheetParser__unicodeRange_closure2() {\n    },\n    StylesheetParser_identifierLike_closure0: function StylesheetParser_identifierLike_closure0(t0, t1) {\n      this.$this = t0;\n      this.start = t1;\n    },\n    StylesheetParser__expressionUntilComparison_closure0: function StylesheetParser__expressionUntilComparison_closure0(t0) {\n      this.$this = t0;\n    },\n    StylesheetParser__publicIdentifier_closure0: function StylesheetParser__publicIdentifier_closure0(t0, t1) {\n      this.$this = t0;\n      this.start = t1;\n    },\n    Stylesheet$0: function(children, span, plainCss) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_UseRule_2),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ForwardRule_2),\n        t3 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t4 = C.JSArray_methods.any$1(t3, new M.ParentStatement_closure0());\n      t1 = new V.Stylesheet0(span, plainCss, t1, t2, t3, t4);\n      t1.Stylesheet$3$plainCss0(children, span, plainCss);\n      return t1;\n    },\n    Stylesheet_Stylesheet$parse0: function(contents, syntax, logger, url) {\n      var t1, t2;\n      switch (syntax) {\n        case C.Syntax_Sass0:\n          t1 = S.SpanScanner$(contents, url);\n          t2 = logger == null ? C.C_StderrLogger : logger;\n          return new U.SassParser0(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration_2), t1, t2).parse$0();\n        case C.Syntax_SCSS0:\n          return L.ScssParser$0(contents, logger, url).parse$0();\n        case C.Syntax_CSS0:\n          t1 = S.SpanScanner$(contents, url);\n          t2 = logger == null ? C.C_StderrLogger : logger;\n          return new Q.CssParser0(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration_2), t1, t2).parse$0();\n        default:\n          throw H.wrapException(P.ArgumentError$(\"Unknown syntax \" + syntax.toString$0(0) + \".\"));\n      }\n    },\n    Stylesheet0: function Stylesheet0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.span = t0;\n      _.plainCss = t1;\n      _._stylesheet1$_uses = t2;\n      _._stylesheet1$_forwards = t3;\n      _.children = t4;\n      _.hasDeclarations = t5;\n    }\n  },\n  G = {Option: function Option(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {\n      var _ = this;\n      _.name = t0;\n      _.abbr = t1;\n      _.help = t2;\n      _.valueHelp = t3;\n      _.allowed = t4;\n      _.allowedHelp = t5;\n      _.defaultsTo = t6;\n      _.negatable = t7;\n      _.callback = t8;\n      _.type = t9;\n      _.splitCommas = t10;\n      _.hide = t11;\n    }, OptionType: function OptionType(t0) {\n      this.name = t0;\n    },\n    Parser$: function(commandName, grammar, args, $parent, rest) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      if (rest != null)\n        C.JSArray_methods.addAll$1(t1, rest);\n      return new G.Parser0(commandName, $parent, grammar, args, t1, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.dynamic));\n    },\n    _isLetterOrDigit: function(codeUnit) {\n      var t1;\n      if (!(codeUnit >= 65 && codeUnit <= 90))\n        if (!(codeUnit >= 97 && codeUnit <= 122))\n          t1 = codeUnit >= 48 && codeUnit <= 57;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    Parser0: function Parser0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.commandName = t0;\n      _.parent = t1;\n      _.grammar = t2;\n      _.args = t3;\n      _.rest = t4;\n      _.results = t5;\n    },\n    Parser_parse_closure: function Parser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    Parser_setOption_closure: function Parser_setOption_closure() {\n    },\n    Usage: function Usage(t0, t1) {\n      var _ = this;\n      _.optionsAndSeparators = t0;\n      _.buffer = null;\n      _.currentColumn = 0;\n      _.columnWidths = null;\n      _.newlinesNeeded = _.numHelpLines = 0;\n      _.lineLength = t1;\n    },\n    Usage_generate_closure: function Usage_generate_closure() {\n    },\n    Usage_buildAllowedList_closure: function Usage_buildAllowedList_closure(t0) {\n      this.option = t0;\n    },\n    StreamQueue: function StreamQueue(t0, t1, t2, t3) {\n      var _ = this;\n      _._stream_queue$_source = t0;\n      _._stream_queue$_subscription = null;\n      _._isDone = false;\n      _._eventsReceived = 0;\n      _._eventQueue = t1;\n      _._requestQueue = t2;\n      _.$ti = t3;\n    },\n    StreamQueue__ensureListening_closure: function StreamQueue__ensureListening_closure(t0) {\n      this.$this = t0;\n    },\n    StreamQueue__ensureListening_closure1: function StreamQueue__ensureListening_closure1(t0) {\n      this.$this = t0;\n    },\n    StreamQueue__ensureListening_closure0: function StreamQueue__ensureListening_closure0(t0) {\n      this.$this = t0;\n    },\n    _NextRequest: function _NextRequest(t0, t1) {\n      this._completer = t0;\n      this.$ti = t1;\n    },\n    ModifiableCssMediaRule$: function(queries, span) {\n      var t1 = P.List_List$unmodifiable(queries, type$.legacy_CssMediaQuery),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      if (J.get$isEmpty$asx(queries))\n        H.throwExpression(P.ArgumentError$value(queries, \"queries\", \"may not be empty.\"));\n      return new G.ModifiableCssMediaRule(t1, span, new P.UnmodifiableListView(t2, type$.UnmodifiableListView_legacy_ModifiableCssNode), t2);\n    },\n    ModifiableCssMediaRule: function ModifiableCssMediaRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.queries = t0;\n      _.span = t1;\n      _.children = t2;\n      _._children = t3;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    MediaRule$: function(query, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new G.MediaRule(query, span, t1, t2);\n    },\n    MediaRule: function MediaRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.query = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    WhileRule$: function(condition, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new G.WhileRule(condition, span, t1, t2);\n    },\n    WhileRule: function WhileRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    Parser_isIdentifier: function(text) {\n      var t1, t2, exception, logger = null;\n      try {\n        t1 = logger;\n        t2 = S.SpanScanner$(text, null);\n        new G.Parser(t2, t1 == null ? C.StderrLogger_false : t1)._parseIdentifier$0();\n        return true;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassFormatException)\n          return false;\n        else\n          throw exception;\n      }\n    },\n    Parser: function Parser(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    Parser__parseIdentifier_closure: function Parser__parseIdentifier_closure(t0) {\n      this.$this = t0;\n    },\n    Parser_scanIdentChar_matches: function Parser_scanIdentChar_matches(t0, t1) {\n      this.caseSensitive = t0;\n      this.char = t1;\n    },\n    FixedLengthListBuilder: function FixedLengthListBuilder(t0, t1) {\n      this._list = t0;\n      this._fixed_length_list_builder$_index = 0;\n      this.$ti = t1;\n    },\n    SourceSpanFormatException$: function(message, span, source) {\n      return new G.SourceSpanFormatException(source, message, span);\n    },\n    SourceSpanException: function SourceSpanException() {\n    },\n    SourceSpanFormatException: function SourceSpanFormatException(t0, t1, t2) {\n      this.source = t0;\n      this._span_exception$_message = t1;\n      this._span = t2;\n    },\n    FixedLengthListBuilder0: function FixedLengthListBuilder0(t0, t1) {\n      this._fixed_length_list_builder0$_list = t0;\n      this._fixed_length_list_builder0$_index = 0;\n      this.$ti = t1;\n    },\n    ModifiableCssMediaRule$0: function(queries, span) {\n      var t1 = P.List_List$unmodifiable(queries, type$.legacy_CssMediaQuery_2),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      if (J.get$isEmpty$asx(queries))\n        H.throwExpression(P.ArgumentError$value(queries, \"queries\", \"may not be empty.\"));\n      return new G.ModifiableCssMediaRule0(t1, span, new P.UnmodifiableListView(t2, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t2);\n    },\n    ModifiableCssMediaRule0: function ModifiableCssMediaRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.queries = t0;\n      _.span = t1;\n      _.children = t2;\n      _._node2$_children = t3;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    MediaRule$0: function(query, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new G.MediaRule0(query, span, t1, t2);\n    },\n    MediaRule0: function MediaRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.query = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    Parser_isIdentifier0: function(text) {\n      var t1, t2, exception, logger = null;\n      try {\n        t1 = logger;\n        t2 = S.SpanScanner$(text, null);\n        new G.Parser1(t2, t1 == null ? C.C_StderrLogger : t1)._parser$_parseIdentifier$0();\n        return true;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassFormatException0)\n          return false;\n        else\n          throw exception;\n      }\n    },\n    Parser1: function Parser1(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    Parser__parseIdentifier_closure0: function Parser__parseIdentifier_closure0(t0) {\n      this.$this = t0;\n    },\n    Parser_scanIdentChar_matches0: function Parser_scanIdentChar_matches0(t0, t1) {\n      this.caseSensitive = t0;\n      this.char = t1;\n    },\n    Types: function Types() {\n    },\n    WhileRule$0: function(condition, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new G.WhileRule0(condition, span, t1, t2);\n    },\n    WhileRule0: function WhileRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    }\n  },\n  F = {ValueResult: function ValueResult(t0, t1) {\n      this.value = t0;\n      this.$ti = t1;\n    }, ConsoleModule: function ConsoleModule() {\n    }, Console: function Console() {\n    }, EventEmitter: function EventEmitter() {\n    }, UrlStyle: function UrlStyle(t0, t1, t2, t3) {\n      var _ = this;\n      _.separatorPattern = t0;\n      _.needsSeparatorPattern = t1;\n      _.rootPattern = t2;\n      _.relativeRootPattern = t3;\n    }, CssMediaQuery: function CssMediaQuery(t0, t1, t2) {\n      this.modifier = t0;\n      this.type = t1;\n      this.features = t2;\n    }, _SingletonCssMediaQueryMergeResult: function _SingletonCssMediaQueryMergeResult(t0) {\n      this._media_query$_name = t0;\n    }, MediaQuerySuccessfulMergeResult: function MediaQuerySuccessfulMergeResult(t0) {\n      this.query = t0;\n    },\n    ModifiableCssImport$: function(url, span, media, supports) {\n      return new F.ModifiableCssImport(url, supports, media == null ? null : P.List_List$unmodifiable(media, type$.legacy_CssMediaQuery), span);\n    },\n    ModifiableCssImport: function ModifiableCssImport(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.supports = t1;\n      _.media = t2;\n      _.span = t3;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    ModifiableCssValue: function ModifiableCssValue(t0, t1, t2) {\n      this.value = t0;\n      this.span = t1;\n      this.$ti = t2;\n    },\n    CssValue: function CssValue(t0, t1, t2) {\n      this.value = t0;\n      this.span = t1;\n      this.$ti = t2;\n    },\n    FunctionExpression: function FunctionExpression(t0, t1, t2, t3) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.span = t3;\n    },\n    ValueExpression: function ValueExpression(t0, t1) {\n      this.value = t0;\n      this.span = t1;\n    },\n    SupportsFunction: function SupportsFunction(t0, t1, t2) {\n      this.name = t0;\n      this.$arguments = t1;\n      this.span = t2;\n    },\n    TypeSelector: function TypeSelector(t0) {\n      this.name = t0;\n    },\n    Extender__extendOrReplace: function(selector, source, targets, mode) {\n      var t2, t3, _i, complex, t4, t5, t6, _i0, extender, _null = null,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);\n      for (t2 = source.components, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        complex = t2[_i];\n        if (complex._maxSpecificity == null)\n          complex._computeSpecificity$0();\n        t4 = complex._maxSpecificity;\n        t1.$indexSet(0, complex, new S.Extension(complex, _null, t4, true, false, _null, _null, _null));\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CompoundSelector);\n      for (t3 = targets.components, t4 = t3.length, t5 = type$.legacy_CompoundSelector, _i = 0; _i < t4; ++_i) {\n        complex = t3[_i];\n        t6 = complex.components;\n        if (t6.length !== 1)\n          t2.push(H.throwExpression(E.SassScriptException$(\"Can't extend complex selector \" + H.S(complex) + \".\")));\n        else\n          t2.push(t5._as(C.JSArray_methods.get$first(t6)));\n      }\n      t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension);\n      for (t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        for (t5 = t2[_i].components, t6 = t5.length, _i0 = 0; _i0 < t6; ++_i0)\n          t3.$indexSet(0, t5[_i0], t1);\n      extender = F.Extender$_mode(mode);\n      if (!selector.get$isInvisible())\n        extender._originals.addAll$1(0, selector.components);\n      return extender._extendList$3(selector, t3, _null);\n    },\n    Extender$: function() {\n      var t1 = type$.legacy_SimpleSelector;\n      return new F.Extender(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_List_legacy_Extension), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList, type$.legacy_List_legacy_CssMediaQuery), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int), new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector), C.ExtendMode_normal);\n    },\n    Extender$_mode: function(_mode) {\n      var t1 = type$.legacy_SimpleSelector;\n      return new F.Extender(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_List_legacy_Extension), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList, type$.legacy_List_legacy_CssMediaQuery), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int), new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector), _mode);\n    },\n    Extender: function Extender(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._selectors = t0;\n      _._extensions = t1;\n      _._extensionsByExtender = t2;\n      _._mediaContexts = t3;\n      _._sourceSpecificity = t4;\n      _._originals = t5;\n      _._mode = t6;\n    },\n    Extender_extensionsWhereTarget_closure: function Extender_extensionsWhereTarget_closure() {\n    },\n    Extender__registerSelector_closure: function Extender__registerSelector_closure() {\n    },\n    Extender_addExtension_closure: function Extender_addExtension_closure() {\n    },\n    Extender_addExtension_closure0: function Extender_addExtension_closure0() {\n    },\n    Extender_addExtension_closure1: function Extender_addExtension_closure1(t0) {\n      this.complex = t0;\n    },\n    Extender__extendExistingExtensions_closure: function Extender__extendExistingExtensions_closure() {\n    },\n    Extender__extendExistingExtensions_closure0: function Extender__extendExistingExtensions_closure0() {\n    },\n    Extender_addExtensions_closure: function Extender_addExtensions_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.extender = t2;\n    },\n    Extender_addExtensions__closure: function Extender_addExtensions__closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.existingSources = t1;\n      _.extensionsForTarget = t2;\n      _.selectorsForTarget = t3;\n      _.target = t4;\n    },\n    Extender_addExtensions___closure: function Extender_addExtensions___closure() {\n    },\n    Extender_addExtensions___closure0: function Extender_addExtensions___closure0(t0) {\n      this.extension = t0;\n    },\n    Extender__extendList_closure: function Extender__extendList_closure() {\n    },\n    Extender__extendComplex_closure: function Extender__extendComplex_closure(t0) {\n      this.complex = t0;\n    },\n    Extender__extendComplex_closure0: function Extender__extendComplex_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.complex = t2;\n    },\n    Extender__extendComplex__closure: function Extender__extendComplex__closure() {\n    },\n    Extender__extendComplex__closure0: function Extender__extendComplex__closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.complex = t2;\n      _.path = t3;\n    },\n    Extender__extendComplex___closure: function Extender__extendComplex___closure() {\n    },\n    Extender__extendCompound_closure: function Extender__extendCompound_closure(t0) {\n      this.mediaQueryContext = t0;\n    },\n    Extender__extendCompound_closure0: function Extender__extendCompound_closure0(t0, t1) {\n      this._box_1 = t0;\n      this.mediaQueryContext = t1;\n    },\n    Extender__extendCompound__closure: function Extender__extendCompound__closure() {\n    },\n    Extender__extendCompound__closure0: function Extender__extendCompound__closure0(t0) {\n      this._box_0 = t0;\n    },\n    Extender__extendCompound_closure1: function Extender__extendCompound_closure1() {\n    },\n    Extender__extendCompound_closure2: function Extender__extendCompound_closure2(t0) {\n      this.original = t0;\n    },\n    Extender__extendCompound_closure3: function Extender__extendCompound_closure3() {\n    },\n    Extender__extendCompound_closure4: function Extender__extendCompound_closure4() {\n    },\n    Extender__extendSimple_withoutPseudo: function Extender__extendSimple_withoutPseudo(t0, t1, t2) {\n      this.$this = t0;\n      this.extensions = t1;\n      this.targetsUsed = t2;\n    },\n    Extender__extendSimple_closure: function Extender__extendSimple_closure(t0, t1) {\n      this.$this = t0;\n      this.withoutPseudo = t1;\n    },\n    Extender__extendPseudo_closure: function Extender__extendPseudo_closure() {\n    },\n    Extender__extendPseudo_closure0: function Extender__extendPseudo_closure0() {\n    },\n    Extender__extendPseudo_closure1: function Extender__extendPseudo_closure1() {\n    },\n    Extender__extendPseudo_closure2: function Extender__extendPseudo_closure2(t0) {\n      this.pseudo = t0;\n    },\n    Extender__extendPseudo_closure3: function Extender__extendPseudo_closure3(t0) {\n      this.pseudo = t0;\n    },\n    Extender__trim_closure: function Extender__trim_closure(t0, t1) {\n      this._box_0 = t0;\n      this.complex1 = t1;\n    },\n    Extender__trim_closure0: function Extender__trim_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.complex1 = t1;\n    },\n    Extender_clone_closure: function Extender_clone_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.newSelectors = t1;\n      _.oldToNewSelectors = t2;\n      _.newMediaContexts = t3;\n    },\n    FilesystemImporter: function FilesystemImporter(t0) {\n      this._loadPath = t0;\n    },\n    realCasePath: function(path) {\n      var t1, basename, matches;\n      if (!(J.$eq$(J.get$platform$x(self.process), \"win32\") || J.$eq$(J.get$platform$x(self.process), \"darwin\")))\n        return path;\n      t1 = $.$get$context();\n      basename = X.ParsedPath_ParsedPath$parse(path, t1.style).get$basename();\n      matches = J.where$1$ax(B.listDir(t1.dirname$1(path), false), new F.realCasePath_closure(basename)).toList$0(0);\n      if (matches.length !== 1)\n        return path;\n      return C.JSArray_methods.get$first(matches);\n    },\n    realCasePath_closure: function realCasePath_closure(t0) {\n      this.basename = t0;\n    },\n    _QuietLogger: function _QuietLogger() {\n    },\n    JSFunction: function JSFunction() {\n    },\n    NodeImporterResult: function NodeImporterResult() {\n    },\n    MediaQueryParser$: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new F.MediaQueryParser(t1, logger);\n    },\n    MediaQueryParser: function MediaQueryParser(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    MediaQueryParser_parse_closure: function MediaQueryParser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    PrefixedMapView: function PrefixedMapView(t0, t1, t2) {\n      this._prefixed_map_view$_map = t0;\n      this._prefix = t1;\n      this.$ti = t2;\n    },\n    _PrefixedKeys: function _PrefixedKeys(t0) {\n      this._view = t0;\n    },\n    _PrefixedKeys_iterator_closure: function _PrefixedKeys_iterator_closure(t0) {\n      this.$this = t0;\n    },\n    Value: function Value() {\n    },\n    SassFunction: function SassFunction(t0) {\n      this.callable = t0;\n    },\n    _FindDependenciesVisitor: function _FindDependenciesVisitor(t0, t1) {\n      this._usesAndForwards = t0;\n      this._imports = t1;\n    },\n    Extender__extendOrReplace0: function(selector, source, targets, mode) {\n      var t2, t3, _i, complex, t4, t5, t6, _i0, extender, _null = null,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);\n      for (t2 = source.components, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        complex = t2[_i];\n        if (complex._complex0$_maxSpecificity == null)\n          complex._complex0$_computeSpecificity$0();\n        t4 = complex._complex0$_maxSpecificity;\n        t1.$indexSet(0, complex, new S.Extension0(complex, _null, t4, true, false, _null, _null, _null));\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CompoundSelector_2);\n      for (t3 = targets.components, t4 = t3.length, t5 = type$.legacy_CompoundSelector_2, _i = 0; _i < t4; ++_i) {\n        complex = t3[_i];\n        t6 = complex.components;\n        if (t6.length !== 1)\n          t2.push(H.throwExpression(E.SassScriptException$0(\"Can't extend complex selector \" + H.S(complex) + \".\")));\n        else\n          t2.push(t5._as(C.JSArray_methods.get$first(t6)));\n      }\n      t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector_2, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2);\n      for (t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        for (t5 = t2[_i].components, t6 = t5.length, _i0 = 0; _i0 < t6; ++_i0)\n          t3.$indexSet(0, t5[_i0], t1);\n      extender = F.Extender$_mode0(mode);\n      if (!selector.get$isInvisible())\n        extender._extender$_originals.addAll$1(0, selector.components);\n      return extender._extender$_extendList$3(selector, t3, _null);\n    },\n    Extender$0: function() {\n      var t1 = type$.legacy_SimpleSelector_2;\n      return new F.Extender0(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList_2), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_List_legacy_Extension_2), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2, type$.legacy_List_legacy_CssMediaQuery_2), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int), new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector_2), C.ExtendMode_normal0);\n    },\n    Extender$_mode0: function(_mode) {\n      var t1 = type$.legacy_SimpleSelector_2;\n      return new F.Extender0(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList_2), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_List_legacy_Extension_2), P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2, type$.legacy_List_legacy_CssMediaQuery_2), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int), new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector_2), _mode);\n    },\n    Extender0: function Extender0(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._extender$_selectors = t0;\n      _._extender$_extensions = t1;\n      _._extender$_extensionsByExtender = t2;\n      _._extender$_mediaContexts = t3;\n      _._extender$_sourceSpecificity = t4;\n      _._extender$_originals = t5;\n      _._extender$_mode = t6;\n    },\n    Extender_extensionsWhereTarget_closure0: function Extender_extensionsWhereTarget_closure0() {\n    },\n    Extender__registerSelector_closure0: function Extender__registerSelector_closure0() {\n    },\n    Extender_addExtension_closure2: function Extender_addExtension_closure2() {\n    },\n    Extender_addExtension_closure3: function Extender_addExtension_closure3() {\n    },\n    Extender_addExtension_closure4: function Extender_addExtension_closure4(t0) {\n      this.complex = t0;\n    },\n    Extender__extendExistingExtensions_closure1: function Extender__extendExistingExtensions_closure1() {\n    },\n    Extender__extendExistingExtensions_closure2: function Extender__extendExistingExtensions_closure2() {\n    },\n    Extender_addExtensions_closure0: function Extender_addExtensions_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.extender = t2;\n    },\n    Extender_addExtensions__closure0: function Extender_addExtensions__closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.existingSources = t1;\n      _.extensionsForTarget = t2;\n      _.selectorsForTarget = t3;\n      _.target = t4;\n    },\n    Extender_addExtensions___closure1: function Extender_addExtensions___closure1() {\n    },\n    Extender_addExtensions___closure2: function Extender_addExtensions___closure2(t0) {\n      this.extension = t0;\n    },\n    Extender__extendList_closure0: function Extender__extendList_closure0() {\n    },\n    Extender__extendComplex_closure1: function Extender__extendComplex_closure1(t0) {\n      this.complex = t0;\n    },\n    Extender__extendComplex_closure2: function Extender__extendComplex_closure2(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.complex = t2;\n    },\n    Extender__extendComplex__closure1: function Extender__extendComplex__closure1() {\n    },\n    Extender__extendComplex__closure2: function Extender__extendComplex__closure2(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.complex = t2;\n      _.path = t3;\n    },\n    Extender__extendComplex___closure0: function Extender__extendComplex___closure0() {\n    },\n    Extender__extendCompound_closure5: function Extender__extendCompound_closure5(t0) {\n      this.mediaQueryContext = t0;\n    },\n    Extender__extendCompound_closure6: function Extender__extendCompound_closure6(t0, t1) {\n      this._box_1 = t0;\n      this.mediaQueryContext = t1;\n    },\n    Extender__extendCompound__closure1: function Extender__extendCompound__closure1() {\n    },\n    Extender__extendCompound__closure2: function Extender__extendCompound__closure2(t0) {\n      this._box_0 = t0;\n    },\n    Extender__extendCompound_closure7: function Extender__extendCompound_closure7() {\n    },\n    Extender__extendCompound_closure8: function Extender__extendCompound_closure8(t0) {\n      this.original = t0;\n    },\n    Extender__extendCompound_closure9: function Extender__extendCompound_closure9() {\n    },\n    Extender__extendCompound_closure10: function Extender__extendCompound_closure10() {\n    },\n    Extender__extendSimple_withoutPseudo0: function Extender__extendSimple_withoutPseudo0(t0, t1, t2) {\n      this.$this = t0;\n      this.extensions = t1;\n      this.targetsUsed = t2;\n    },\n    Extender__extendSimple_closure0: function Extender__extendSimple_closure0(t0, t1) {\n      this.$this = t0;\n      this.withoutPseudo = t1;\n    },\n    Extender__extendPseudo_closure4: function Extender__extendPseudo_closure4() {\n    },\n    Extender__extendPseudo_closure5: function Extender__extendPseudo_closure5() {\n    },\n    Extender__extendPseudo_closure6: function Extender__extendPseudo_closure6() {\n    },\n    Extender__extendPseudo_closure7: function Extender__extendPseudo_closure7(t0) {\n      this.pseudo = t0;\n    },\n    Extender__extendPseudo_closure8: function Extender__extendPseudo_closure8(t0) {\n      this.pseudo = t0;\n    },\n    Extender__trim_closure1: function Extender__trim_closure1(t0, t1) {\n      this._box_0 = t0;\n      this.complex1 = t1;\n    },\n    Extender__trim_closure2: function Extender__trim_closure2(t0, t1) {\n      this._box_0 = t0;\n      this.complex1 = t1;\n    },\n    Extender_clone_closure0: function Extender_clone_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.newSelectors = t1;\n      _.oldToNewSelectors = t2;\n      _.newMediaContexts = t3;\n    },\n    FilesystemImporter0: function FilesystemImporter0(t0) {\n      this._filesystem$_loadPath = t0;\n    },\n    FunctionExpression0: function FunctionExpression0(t0, t1, t2, t3) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.span = t3;\n    },\n    JSFunction0: function JSFunction0() {\n    },\n    SupportsFunction0: function SupportsFunction0(t0, t1, t2) {\n      this.name = t0;\n      this.$arguments = t1;\n      this.span = t2;\n    },\n    SassFunction0: function SassFunction0(t0) {\n      this.callable = t0;\n    },\n    NodeImporter__addSassPath: function($async$includePaths) {\n      return P._makeSyncStarIterable(function() {\n        var includePaths = $async$includePaths;\n        var $async$goto = 0, $async$handler = 2, $async$currentError, sassPath;\n        return function $async$NodeImporter__addSassPath($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                $async$goto = 3;\n                return P._IterationMarker_yieldStar(includePaths);\n              case 3:\n                // after yield\n                sassPath = H._asStringS(J.get$env$x(self.process).SASS_PATH);\n                if (sassPath == null) {\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n                $async$goto = 4;\n                return P._IterationMarker_yieldStar(H.setRuntimeTypeInfo(sassPath.split(J.$eq$(J.get$platform$x(self.process), \"win32\") ? \";\" : \":\"), type$.JSArray_String));\n              case 4:\n                // after yield\n              case 1:\n                // return\n                return P._IterationMarker_endOfIteration();\n              case 2:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, type$.legacy_String);\n    },\n    NodeImporter: function NodeImporter(t0, t1, t2) {\n      this._implementation$_context = t0;\n      this._includePaths = t1;\n      this._implementation$_importers = t2;\n    },\n    NodeImporter__tryPath_closure: function NodeImporter__tryPath_closure(t0) {\n      this.path = t0;\n    },\n    ModifiableCssImport$0: function(url, span, media, supports) {\n      return new F.ModifiableCssImport0(url, supports, media == null ? null : P.List_List$unmodifiable(media, type$.legacy_CssMediaQuery_2), span);\n    },\n    ModifiableCssImport0: function ModifiableCssImport0(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.supports = t1;\n      _.media = t2;\n      _.span = t3;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    NodeImporterResult0: function NodeImporterResult0() {\n    },\n    realCasePath0: function(path) {\n      var t1, basename, matches;\n      if (!(J.$eq$(J.get$platform$x(self.process), \"win32\") || J.$eq$(J.get$platform$x(self.process), \"darwin\")))\n        return path;\n      t1 = $.$get$context();\n      basename = X.ParsedPath_ParsedPath$parse(path, t1.style).get$basename();\n      matches = J.where$1$ax(B.listDir0(t1.dirname$1(path)), new F.realCasePath_closure0(basename)).toList$0(0);\n      if (matches.length !== 1)\n        return path;\n      return C.JSArray_methods.get$first(matches);\n    },\n    realCasePath_closure0: function realCasePath_closure0(t0) {\n      this.basename = t0;\n    },\n    CssMediaQuery0: function CssMediaQuery0(t0, t1, t2) {\n      this.modifier = t0;\n      this.type = t1;\n      this.features = t2;\n    },\n    _SingletonCssMediaQueryMergeResult0: function _SingletonCssMediaQueryMergeResult0(t0) {\n      this._media_query1$_name = t0;\n    },\n    MediaQuerySuccessfulMergeResult0: function MediaQuerySuccessfulMergeResult0(t0) {\n      this.query = t0;\n    },\n    MediaQueryParser$0: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new F.MediaQueryParser0(t1, logger);\n    },\n    MediaQueryParser0: function MediaQueryParser0(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    MediaQueryParser_parse_closure0: function MediaQueryParser_parse_closure0(t0) {\n      this.$this = t0;\n    },\n    PrefixedMapView0: function PrefixedMapView0(t0, t1, t2) {\n      this._prefixed_map_view0$_map = t0;\n      this._prefixed_map_view0$_prefix = t1;\n      this.$ti = t2;\n    },\n    _PrefixedKeys0: function _PrefixedKeys0(t0) {\n      this._prefixed_map_view0$_view = t0;\n    },\n    _PrefixedKeys_iterator_closure0: function _PrefixedKeys_iterator_closure0(t0) {\n      this.$this = t0;\n    },\n    TypeSelector0: function TypeSelector0(t0) {\n      this.name = t0;\n    },\n    CssValue0: function CssValue0(t0, t1, t2) {\n      this.value = t0;\n      this.span = t1;\n      this.$ti = t2;\n    },\n    ValueExpression0: function ValueExpression0(t0, t1) {\n      this.value = t0;\n      this.span = t1;\n    },\n    ModifiableCssValue0: function ModifiableCssValue0(t0, t1, t2) {\n      this.value = t0;\n      this.span = t1;\n      this.$ti = t2;\n    },\n    Value0: function Value0() {\n    },\n    unwrapValue: function(object) {\n      var value, t1;\n      if (object != null) {\n        if (object instanceof F.Value0)\n          return object;\n        value = object.dartValue;\n        if (value != null && value instanceof F.Value0)\n          return value;\n        t1 = self.Error;\n        if (H._asBoolS($.$get$_jsInstanceOf().call$2(object, t1)))\n          throw H.wrapException(object);\n      }\n      throw H.wrapException(H.S(object) + \" must be a Sass value type.\");\n    },\n    wrapValue: function(value) {\n      if (value instanceof K.SassColor0)\n        return P.callConstructor($.$get$colorConstructor(), H.setRuntimeTypeInfo([null, null, null, null, value], type$.JSArray_legacy_Object));\n      if (value instanceof D.SassList0)\n        return P.callConstructor($.$get$listConstructor(), H.setRuntimeTypeInfo([null, null, value], type$.JSArray_legacy_Object));\n      if (value instanceof A.SassMap0)\n        return P.callConstructor($.$get$mapConstructor(), H.setRuntimeTypeInfo([null, value], type$.JSArray_legacy_Object));\n      if (value instanceof T.SassNumber0)\n        return P.callConstructor($.$get$numberConstructor(), H.setRuntimeTypeInfo([null, null, value], type$.JSArray_legacy_Object));\n      if (value instanceof D.SassString0)\n        return P.callConstructor($.$get$stringConstructor(), H.setRuntimeTypeInfo([null, value], type$.JSArray_legacy_Object));\n      return value;\n    }\n  },\n  Y = {StreamCompleter: function StreamCompleter(t0, t1) {\n      this._stream_completer$_stream = t0;\n      this.$ti = t1;\n    }, _CompleterStream: function _CompleterStream(t0) {\n      this._sourceStream = this._stream_completer$_controller = null;\n      this.$ti = t0;\n    }, Modules: function Modules() {\n    }, Module1: function Module1() {\n    }, Net: function Net() {\n    }, Socket: function Socket() {\n    }, NetAddress: function NetAddress() {\n    }, NetServer: function NetServer() {\n    },\n    ContentBlock$: function($arguments, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new Y.ContentBlock(null, $arguments, span, t1, t2);\n    },\n    ContentBlock: function ContentBlock(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.$arguments = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    WarnRule: function WarnRule(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    SupportsAnything: function SupportsAnything(t0, t1) {\n      this.contents = t0;\n      this.span = t1;\n    },\n    unifyComplex: function(complexes) {\n      var t2, unifiedBase, base, t3, t4, _i, complexesWithoutBases,\n        t1 = J.getInterceptor$asx(complexes);\n      if (t1.get$length(complexes) === 1)\n        return complexes;\n      for (t2 = t1.get$iterator(complexes), unifiedBase = null; t2.moveNext$0();) {\n        base = J.get$last$ax(t2.get$current(t2));\n        if (base instanceof X.CompoundSelector)\n          if (unifiedBase == null)\n            unifiedBase = base.components;\n          else\n            for (t3 = base.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {\n              unifiedBase = t3[_i].unify$1(unifiedBase);\n              if (unifiedBase == null)\n                return null;\n            }\n        else\n          return null;\n      }\n      t1 = t1.map$1$1(complexes, new Y.unifyComplex_closure(), type$.legacy_List_legacy_ComplexSelectorComponent);\n      complexesWithoutBases = P.List_List$from(t1, true, t1.$ti._eval$1(\"ListIterable.E\"));\n      J.add$1$ax(C.JSArray_methods.get$last(complexesWithoutBases), X.CompoundSelector$(unifiedBase));\n      return Y.weave(complexesWithoutBases);\n    },\n    unifyCompound: function(compound1, compound2) {\n      var t1, result, _i;\n      for (t1 = compound1.length, result = compound2, _i = 0; _i < t1; ++_i) {\n        result = compound1[_i].unify$1(result);\n        if (result == null)\n          return null;\n      }\n      return X.CompoundSelector$(result);\n    },\n    unifyUniversalAndElement: function(selector1, selector2) {\n      var namespace1, name1, t1, namespace2, name2, namespace, $name, _null = null,\n        _s45_ = string$.must_b;\n      if (selector1 instanceof N.UniversalSelector) {\n        namespace1 = selector1.namespace;\n        name1 = _null;\n      } else if (selector1 instanceof F.TypeSelector) {\n        t1 = selector1.name;\n        namespace1 = t1.namespace;\n        name1 = t1.name;\n      } else\n        throw H.wrapException(P.ArgumentError$value(selector1, \"selector1\", _s45_));\n      if (selector2 instanceof N.UniversalSelector) {\n        namespace2 = selector2.namespace;\n        name2 = _null;\n      } else if (selector2 instanceof F.TypeSelector) {\n        t1 = selector2.name;\n        namespace2 = t1.namespace;\n        name2 = t1.name;\n      } else\n        throw H.wrapException(P.ArgumentError$value(selector2, \"selector2\", _s45_));\n      if (namespace1 == namespace2 || namespace2 === \"*\")\n        namespace = namespace1;\n      else {\n        if (namespace1 !== \"*\")\n          return _null;\n        namespace = namespace2;\n      }\n      if (name1 == name2 || name2 == null)\n        $name = name1;\n      else {\n        if (!(name1 == null || name1 === \"*\"))\n          return _null;\n        $name = name2;\n      }\n      return $name == null ? new N.UniversalSelector(namespace) : new F.TypeSelector(new D.QualifiedName($name, namespace));\n    },\n    weave: function(complexes) {\n      var t2, cur, t3, target, _i, parents, newPrefixes, parentPrefixes, t4, t5,\n        t1 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent,\n        prefixes = H.setRuntimeTypeInfo([J.toList$0$ax(C.JSArray_methods.get$first(complexes))], t1);\n      for (t2 = H.SubListIterable$(complexes, 1, null, H._arrayInstanceType(complexes)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t3 = J.getInterceptor$asx(cur);\n        if (t3.get$isEmpty(cur))\n          continue;\n        target = t3.get$last(cur);\n        if (t3.get$length(cur) === 1) {\n          for (t3 = prefixes.length, _i = 0; _i < prefixes.length; prefixes.length === t3 || (0, H.throwConcurrentModificationError)(prefixes), ++_i)\n            J.add$1$ax(prefixes[_i], target);\n          continue;\n        }\n        parents = t3.take$1(cur, t3.get$length(cur) - 1).toList$0(0);\n        newPrefixes = H.setRuntimeTypeInfo([], t1);\n        for (t3 = prefixes.length, _i = 0; _i < prefixes.length; prefixes.length === t3 || (0, H.throwConcurrentModificationError)(prefixes), ++_i) {\n          parentPrefixes = Y._weaveParents(prefixes[_i], parents);\n          if (parentPrefixes == null)\n            continue;\n          for (t4 = parentPrefixes.get$iterator(parentPrefixes); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            J.add$1$ax(t5, target);\n            newPrefixes.push(t5);\n          }\n        }\n        prefixes = newPrefixes;\n      }\n      return prefixes;\n    },\n    _weaveParents: function(parents1, parents2) {\n      var finalCombinators, root1, root2, root, groups1, groups2, lcs, t2, choices, t3, _i, group, t4, t5, _null = null,\n        t1 = type$.legacy_ComplexSelectorComponent,\n        queue1 = P.ListQueue_ListQueue$of(parents1, t1),\n        queue2 = P.ListQueue_ListQueue$of(parents2, t1),\n        initialCombinators = Y._mergeInitialCombinators(queue1, queue2);\n      if (initialCombinators == null)\n        return _null;\n      finalCombinators = Y._mergeFinalCombinators(queue1, queue2, _null);\n      if (finalCombinators == null)\n        return _null;\n      root1 = Y._firstIfRoot(queue1);\n      root2 = Y._firstIfRoot(queue2);\n      t1 = root1 != null;\n      if (t1 && root2 != null) {\n        root = Y.unifyCompound(root1.components, root2.components);\n        if (root == null)\n          return _null;\n        queue1.addFirst$1(root);\n        queue2.addFirst$1(root);\n      } else if (t1)\n        queue2.addFirst$1(root1);\n      else if (root2 != null)\n        queue1.addFirst$1(root2);\n      groups1 = Y._groupSelectors(queue1);\n      groups2 = Y._groupSelectors(queue2);\n      t1 = type$.legacy_List_legacy_ComplexSelectorComponent;\n      lcs = B.longestCommonSubsequence(groups2, groups1, new Y._weaveParents_closure(), t1);\n      t2 = type$.JSArray_legacy_Iterable_legacy_ComplexSelectorComponent;\n      choices = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([initialCombinators], t2)], type$.JSArray_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent);\n      for (t3 = lcs.length, _i = 0; _i < lcs.length; lcs.length === t3 || (0, H.throwConcurrentModificationError)(lcs), ++_i) {\n        group = lcs[_i];\n        t4 = Y._chunks(groups1, groups2, new Y._weaveParents_closure0(group), t1);\n        t5 = H._arrayInstanceType(t4)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelectorComponent*>*>\");\n        choices.push(P.List_List$from(new H.MappedListIterable(t4, new Y._weaveParents_closure1(), t5), true, t5._eval$1(\"ListIterable.E\")));\n        choices.push(H.setRuntimeTypeInfo([group], t2));\n        groups1.removeFirst$0();\n        groups2.removeFirst$0();\n      }\n      t2 = Y._chunks(groups1, groups2, new Y._weaveParents_closure2(), t1);\n      t3 = H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelectorComponent*>*>\");\n      choices.push(P.List_List$from(new H.MappedListIterable(t2, new Y._weaveParents_closure3(), t3), true, t3._eval$1(\"ListIterable.E\")));\n      C.JSArray_methods.addAll$1(choices, finalCombinators);\n      return J.map$1$1$ax(Y.paths(new H.WhereIterable(choices, new Y._weaveParents_closure4(), type$.WhereIterable_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent), type$.legacy_Iterable_legacy_ComplexSelectorComponent), new Y._weaveParents_closure5(), t1);\n    },\n    _firstIfRoot: function(queue) {\n      var first;\n      if (queue._collection$_head === queue._collection$_tail)\n        return null;\n      first = queue.get$first(queue);\n      if (first instanceof X.CompoundSelector) {\n        if (!Y._hasRoot(first))\n          return null;\n        queue.removeFirst$0();\n        return first;\n      } else\n        return null;\n    },\n    _mergeInitialCombinators: function(components1, components2) {\n      var t3, combinators2, lcs,\n        t1 = type$.JSArray_legacy_Combinator,\n        combinators1 = H.setRuntimeTypeInfo([], t1),\n        t2 = type$.legacy_Combinator;\n      while (true) {\n        if (!components1.get$isEmpty(components1)) {\n          t3 = components1._collection$_head;\n          if (t3 === components1._collection$_tail)\n            H.throwExpression(H.IterableElementError_noElement());\n          t3 = components1._collection$_table[t3] instanceof S.Combinator;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        combinators1.push(t2._as(components1.removeFirst$0()));\n      }\n      combinators2 = H.setRuntimeTypeInfo([], t1);\n      while (true) {\n        if (!components2.get$isEmpty(components2)) {\n          t1 = components2._collection$_head;\n          if (t1 === components2._collection$_tail)\n            H.throwExpression(H.IterableElementError_noElement());\n          t1 = components2._collection$_table[t1] instanceof S.Combinator;\n        } else\n          t1 = false;\n        if (!t1)\n          break;\n        combinators2.push(t2._as(components2.removeFirst$0()));\n      }\n      lcs = B.longestCommonSubsequence(combinators1, combinators2, null, t2);\n      if (C.C_ListEquality.equals$2(0, lcs, combinators1))\n        return combinators2;\n      if (C.C_ListEquality.equals$2(0, lcs, combinators2))\n        return combinators1;\n      return null;\n    },\n    _mergeFinalCombinators: function(components1, components2, result) {\n      var t1, combinators1, t2, combinators2, lcs, combinator1, combinator2, compound1, compound2, choices, unified, followingSiblingSelector, nextSiblingSelector, _null = null;\n      if (result == null)\n        result = Q.QueueList$(_null, type$.legacy_List_legacy_List_legacy_ComplexSelectorComponent);\n      if (components1._collection$_head === components1._collection$_tail || !(components1.get$last(components1) instanceof S.Combinator))\n        t1 = components2._collection$_head === components2._collection$_tail || !(components2.get$last(components2) instanceof S.Combinator);\n      else\n        t1 = false;\n      if (t1)\n        return result;\n      t1 = type$.JSArray_legacy_Combinator;\n      combinators1 = H.setRuntimeTypeInfo([], t1);\n      t2 = type$.legacy_Combinator;\n      while (true) {\n        if (!(!components1.get$isEmpty(components1) && components1.get$last(components1) instanceof S.Combinator))\n          break;\n        combinators1.push(t2._as(components1.removeLast$0(0)));\n      }\n      combinators2 = H.setRuntimeTypeInfo([], t1);\n      while (true) {\n        if (!(!components2.get$isEmpty(components2) && components2.get$last(components2) instanceof S.Combinator))\n          break;\n        combinators2.push(t2._as(components2.removeLast$0(0)));\n      }\n      t1 = combinators1.length;\n      if (t1 > 1 || combinators2.length > 1) {\n        lcs = B.longestCommonSubsequence(combinators1, combinators2, _null, t2);\n        if (C.C_ListEquality.equals$2(0, lcs, combinators1))\n          result.addFirst$1(H.setRuntimeTypeInfo([P.List_List$from(new H.ReversedListIterable(combinators2, type$.ReversedListIterable_legacy_Combinator), true, type$.legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n        else if (C.C_ListEquality.equals$2(0, lcs, combinators2))\n          result.addFirst$1(H.setRuntimeTypeInfo([P.List_List$from(new H.ReversedListIterable(combinators1, type$.ReversedListIterable_legacy_Combinator), true, type$.legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n        else\n          return _null;\n        return result;\n      }\n      combinator1 = t1 === 0 ? _null : C.JSArray_methods.get$first(combinators1);\n      combinator2 = combinators2.length === 0 ? _null : C.JSArray_methods.get$first(combinators2);\n      t1 = combinator1 != null;\n      if (t1 && combinator2 != null) {\n        t1 = type$.legacy_CompoundSelector;\n        compound1 = t1._as(components1.removeLast$0(0));\n        compound2 = t1._as(components2.removeLast$0(0));\n        t1 = combinator1 === C.Combinator_CzM;\n        if (t1 && combinator2 === C.Combinator_CzM) {\n          compound1.toString;\n          if (Y.compoundIsSuperselector(compound1, compound2, _null))\n            result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound2, C.Combinator_CzM], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n          else {\n            compound2.toString;\n            t1 = type$.JSArray_legacy_ComplexSelectorComponent;\n            t2 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent;\n            if (Y.compoundIsSuperselector(compound2, compound1, _null))\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, C.Combinator_CzM], t1)], t2));\n            else {\n              choices = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, C.Combinator_CzM, compound2, C.Combinator_CzM], t1), H.setRuntimeTypeInfo([compound2, C.Combinator_CzM, compound1, C.Combinator_CzM], t1)], t2);\n              unified = Y.unifyCompound(compound1.components, compound2.components);\n              if (unified != null)\n                choices.push(H.setRuntimeTypeInfo([unified, C.Combinator_CzM], t1));\n              result.addFirst$1(choices);\n            }\n          }\n        } else {\n          if (!(t1 && combinator2 === C.Combinator_uzg))\n            t2 = combinator1 === C.Combinator_uzg && combinator2 === C.Combinator_CzM;\n          else\n            t2 = true;\n          if (t2) {\n            followingSiblingSelector = t1 ? compound1 : compound2;\n            nextSiblingSelector = t1 ? compound2 : compound1;\n            followingSiblingSelector.toString;\n            t1 = type$.JSArray_legacy_ComplexSelectorComponent;\n            t2 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent;\n            if (Y.compoundIsSuperselector(followingSiblingSelector, nextSiblingSelector, _null))\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([nextSiblingSelector, C.Combinator_uzg], t1)], t2));\n            else {\n              unified = Y.unifyCompound(compound1.components, compound2.components);\n              t2 = H.setRuntimeTypeInfo([], t2);\n              t2.push(H.setRuntimeTypeInfo([followingSiblingSelector, C.Combinator_CzM, nextSiblingSelector, C.Combinator_uzg], t1));\n              if (unified != null)\n                t2.push(H.setRuntimeTypeInfo([unified, C.Combinator_uzg], t1));\n              result.addFirst$1(t2);\n            }\n          } else {\n            if (combinator1 === C.Combinator_sgq)\n              t2 = combinator2 === C.Combinator_uzg || combinator2 === C.Combinator_CzM;\n            else\n              t2 = false;\n            if (t2) {\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound2, combinator2], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n              components1._add$1(compound1);\n              components1._add$1(C.Combinator_sgq);\n            } else {\n              if (combinator2 === C.Combinator_sgq)\n                t1 = combinator1 === C.Combinator_uzg || t1;\n              else\n                t1 = false;\n              if (t1) {\n                result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, combinator1], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n                components2._add$1(compound2);\n                components2._add$1(C.Combinator_sgq);\n              } else if (combinator1 === combinator2) {\n                unified = Y.unifyCompound(compound1.components, compound2.components);\n                if (unified == null)\n                  return _null;\n                result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([unified, combinator1], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n              } else\n                return _null;\n            }\n          }\n        }\n        return Y._mergeFinalCombinators(components1, components2, result);\n      } else if (t1) {\n        if (combinator1 === C.Combinator_sgq)\n          if (!components2.get$isEmpty(components2)) {\n            t1 = type$.legacy_CompoundSelector;\n            t2 = t1._as(components2.get$last(components2));\n            t1 = t1._as(components1.get$last(components1));\n            t2.toString;\n            t1 = Y.compoundIsSuperselector(t2, t1, _null);\n          } else\n            t1 = false;\n        else\n          t1 = false;\n        if (t1)\n          components2.removeLast$0(0);\n        result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([components1.removeLast$0(0), combinator1], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n        return Y._mergeFinalCombinators(components1, components2, result);\n      } else {\n        if (combinator2 === C.Combinator_sgq)\n          if (!components1.get$isEmpty(components1)) {\n            t1 = type$.legacy_CompoundSelector;\n            t2 = t1._as(components1.get$last(components1));\n            t1 = t1._as(components2.get$last(components2));\n            t2.toString;\n            t1 = Y.compoundIsSuperselector(t2, t1, _null);\n          } else\n            t1 = false;\n        else\n          t1 = false;\n        if (t1)\n          components1.removeLast$0(0);\n        result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([components2.removeLast$0(0), combinator2], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n        return Y._mergeFinalCombinators(components1, components2, result);\n      }\n    },\n    _mustUnify: function(complex1, complex2) {\n      var t2, t3, t4,\n        t1 = P.LinkedHashSet_LinkedHashSet(type$.legacy_SimpleSelector);\n      for (t2 = J.get$iterator$ax(complex1); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        if (t3 instanceof X.CompoundSelector)\n          for (t3 = C.JSArray_methods.get$iterator(t3.components), t4 = new H.WhereIterator(t3, Y.functions___isUnique$closure()); t4.moveNext$0();)\n            t1.add$1(0, t3.get$current(t3));\n      }\n      if (t1._collection$_length === 0)\n        return false;\n      return J.any$1$ax(complex2, new Y._mustUnify_closure(t1));\n    },\n    _isUnique: function(simple) {\n      var t1;\n      if (!(simple instanceof N.IDSelector))\n        t1 = simple instanceof D.PseudoSelector && !simple.isClass;\n      else\n        t1 = true;\n      return t1;\n    },\n    _chunks: function(queue1, queue2, done, $T) {\n      var chunk2, t2, t3, _i,\n        t1 = $T._eval$1(\"JSArray<0*>\"),\n        chunk1 = H.setRuntimeTypeInfo([], t1);\n      for (; !done.call$1(queue1);)\n        chunk1.push(queue1.removeFirst$0());\n      chunk2 = H.setRuntimeTypeInfo([], t1);\n      for (; !done.call$1(queue2);)\n        chunk2.push(queue2.removeFirst$0());\n      t2 = chunk1.length === 0;\n      if (t2 && chunk2.length === 0)\n        return H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<List<0*>*>\"));\n      if (t2)\n        return H.setRuntimeTypeInfo([chunk2], $T._eval$1(\"JSArray<List<0*>*>\"));\n      if (chunk2.length === 0)\n        return H.setRuntimeTypeInfo([chunk1], $T._eval$1(\"JSArray<List<0*>*>\"));\n      t2 = H.setRuntimeTypeInfo([], t1);\n      for (t3 = chunk1.length, _i = 0; _i < chunk1.length; chunk1.length === t3 || (0, H.throwConcurrentModificationError)(chunk1), ++_i)\n        t2.push(chunk1[_i]);\n      for (t3 = chunk2.length, _i = 0; _i < chunk2.length; chunk2.length === t3 || (0, H.throwConcurrentModificationError)(chunk2), ++_i)\n        t2.push(chunk2[_i]);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t3 = chunk2.length, _i = 0; _i < chunk2.length; chunk2.length === t3 || (0, H.throwConcurrentModificationError)(chunk2), ++_i)\n        t1.push(chunk2[_i]);\n      for (t3 = chunk1.length, _i = 0; _i < chunk1.length; chunk1.length === t3 || (0, H.throwConcurrentModificationError)(chunk1), ++_i)\n        t1.push(chunk1[_i]);\n      return H.setRuntimeTypeInfo([t2, t1], $T._eval$1(\"JSArray<List<0*>*>\"));\n    },\n    paths: function(choices, $T) {\n      return J.fold$2$ax(choices, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<0*>\"))], $T._eval$1(\"JSArray<List<0*>*>\")), new Y.paths_closure($T));\n    },\n    _groupSelectors: function(complex) {\n      var t1, group, cur, t2,\n        groups = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent),\n        iterator = P._ListQueueIterator$(complex);\n      if (!iterator.moveNext$0())\n        return groups;\n      t1 = type$.JSArray_legacy_ComplexSelectorComponent;\n      group = H.setRuntimeTypeInfo([iterator.get$current(iterator)], t1);\n      groups._queue_list$_add$1(group);\n      for (; iterator.moveNext$0();) {\n        if (!(C.JSArray_methods.get$last(group) instanceof S.Combinator)) {\n          cur = iterator._collection$_current;\n          t2 = cur instanceof S.Combinator;\n        } else\n          t2 = true;\n        cur = iterator._collection$_current;\n        if (t2)\n          group.push(cur);\n        else {\n          group = H.setRuntimeTypeInfo([cur], t1);\n          groups._queue_list$_add$1(group);\n        }\n      }\n      return groups;\n    },\n    _hasRoot: function(compound) {\n      return C.JSArray_methods.any$1(compound.components, new Y._hasRoot_closure());\n    },\n    listIsSuperselector: function(list1, list2) {\n      return C.JSArray_methods.every$1(list2, new Y.listIsSuperselector_closure(list1));\n    },\n    complexIsParentSuperselector: function(complex1, complex2) {\n      var t2, base, t3, t4,\n        t1 = J.getInterceptor$ax(complex1);\n      if (t1.get$first(complex1) instanceof S.Combinator)\n        return false;\n      t2 = J.getInterceptor$ax(complex2);\n      if (t2.get$first(complex2) instanceof S.Combinator)\n        return false;\n      if (t1.get$length(complex1) > t2.get$length(complex2))\n        return false;\n      base = X.CompoundSelector$(H.setRuntimeTypeInfo([new N.PlaceholderSelector(\"<temp>\")], type$.JSArray_legacy_SimpleSelector));\n      t3 = type$.JSArray_legacy_ComplexSelectorComponent;\n      t4 = H.setRuntimeTypeInfo([], t3);\n      for (t1 = t1.get$iterator(complex1); t1.moveNext$0();)\n        t4.push(t1.get$current(t1));\n      t4.push(base);\n      t1 = H.setRuntimeTypeInfo([], t3);\n      for (t2 = t2.get$iterator(complex2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(base);\n      return Y.complexIsSuperselector(t4, t1);\n    },\n    complexIsSuperselector: function(complex1, complex2) {\n      var t1, t2, t3, i1, i2, remaining1, remaining2, t4, t5, t6, t7, afterSuperselector, afterSuperselector0, compound2, i10, combinator1, combinator2;\n      if (C.JSArray_methods.get$last(complex1) instanceof S.Combinator)\n        return false;\n      if (C.JSArray_methods.get$last(complex2) instanceof S.Combinator)\n        return false;\n      for (t1 = H._arrayInstanceType(complex2), t2 = t1._precomputed1, t1 = t1._eval$1(\"SubListIterable<1>\"), t3 = type$.legacy_CompoundSelector, i1 = 0, i2 = 0; true;) {\n        remaining1 = complex1.length - i1;\n        remaining2 = complex2.length - i2;\n        if (remaining1 === 0 || remaining2 === 0)\n          return false;\n        if (remaining1 > remaining2)\n          return false;\n        t4 = complex1[i1];\n        if (t4 instanceof S.Combinator)\n          return false;\n        if (complex2[i2] instanceof S.Combinator)\n          return false;\n        t3._as(t4);\n        if (remaining1 === 1) {\n          t5 = t3._as(C.JSArray_methods.get$last(complex2));\n          t6 = complex2.length - 1;\n          t7 = new H.SubListIterable(complex2, 0, t6, t1);\n          t7.SubListIterable$3(complex2, 0, t6, t2);\n          return Y.compoundIsSuperselector(t4, t5, t7.skip$1(0, i2));\n        }\n        afterSuperselector = i2 + 1;\n        for (afterSuperselector0 = afterSuperselector; afterSuperselector0 < complex2.length; ++afterSuperselector0) {\n          t5 = afterSuperselector0 - 1;\n          compound2 = complex2[t5];\n          if (compound2 instanceof X.CompoundSelector) {\n            t6 = new H.SubListIterable(complex2, 0, t5, t1);\n            t6.SubListIterable$3(complex2, 0, t5, t2);\n            if (Y.compoundIsSuperselector(t4, compound2, t6.skip$1(0, afterSuperselector)))\n              break;\n          }\n        }\n        if (afterSuperselector0 === complex2.length)\n          return false;\n        i10 = i1 + 1;\n        combinator1 = complex1[i10];\n        combinator2 = complex2[afterSuperselector0];\n        if (combinator1 instanceof S.Combinator) {\n          if (!(combinator2 instanceof S.Combinator))\n            return false;\n          if (combinator1 === C.Combinator_CzM) {\n            if (combinator2 === C.Combinator_sgq)\n              return false;\n          } else if (combinator2 !== combinator1)\n            return false;\n          if (remaining1 === 3 && remaining2 > 3)\n            return false;\n          i1 += 2;\n          i2 = afterSuperselector0 + 1;\n        } else {\n          if (combinator2 instanceof S.Combinator) {\n            if (combinator2 !== C.Combinator_sgq)\n              return false;\n            i2 = afterSuperselector0 + 1;\n          } else\n            i2 = afterSuperselector0;\n          i1 = i10;\n        }\n      }\n    },\n    compoundIsSuperselector: function(compound1, compound2, parents) {\n      var t1, t2, _i, simple1, simple2;\n      for (t1 = compound1.components, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        simple1 = t1[_i];\n        if (simple1 instanceof D.PseudoSelector && simple1.selector != null) {\n          if (!Y._selectorPseudoIsSuperselector(simple1, compound2, parents))\n            return false;\n        } else if (!Y._simpleIsSuperselectorOfCompound(simple1, compound2))\n          return false;\n      }\n      for (t1 = compound2.components, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        simple2 = t1[_i];\n        if (simple2 instanceof D.PseudoSelector && !simple2.isClass && simple2.selector == null && !Y._simpleIsSuperselectorOfCompound(simple2, compound1))\n          return false;\n      }\n      return true;\n    },\n    _simpleIsSuperselectorOfCompound: function(simple, compound) {\n      return C.JSArray_methods.any$1(compound.components, new Y._simpleIsSuperselectorOfCompound_closure(simple));\n    },\n    _selectorPseudoIsSuperselector: function(pseudo1, compound2, parents) {\n      switch (pseudo1.normalizedName) {\n        case \"matches\":\n        case \"any\":\n          return Y._selectorPseudosNamed(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure(pseudo1)) || C.JSArray_methods.any$1(pseudo1.selector.components, new Y._selectorPseudoIsSuperselector_closure0(parents, compound2));\n        case \"has\":\n        case \"host\":\n        case \"host-context\":\n          return Y._selectorPseudosNamed(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure1(pseudo1));\n        case \"slotted\":\n          return Y._selectorPseudosNamed(compound2, pseudo1.name, false).any$1(0, new Y._selectorPseudoIsSuperselector_closure2(pseudo1));\n        case \"not\":\n          return C.JSArray_methods.every$1(pseudo1.selector.components, new Y._selectorPseudoIsSuperselector_closure3(compound2, pseudo1));\n        case \"current\":\n          return Y._selectorPseudosNamed(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure4(pseudo1));\n        case \"nth-child\":\n        case \"nth-last-child\":\n          return C.JSArray_methods.any$1(compound2.components, new Y._selectorPseudoIsSuperselector_closure5(pseudo1));\n        default:\n          throw H.wrapException(\"unreachable\");\n      }\n    },\n    _selectorPseudosNamed: function(compound, $name, isClass) {\n      var t1 = type$.WhereTypeIterable_legacy_PseudoSelector;\n      return new H.WhereIterable(new H.WhereTypeIterable(compound.components, t1), new Y._selectorPseudosNamed_closure(isClass, $name), t1._eval$1(\"WhereIterable<Iterable.E>\"));\n    },\n    unifyComplex_closure: function unifyComplex_closure() {\n    },\n    _weaveParents_closure: function _weaveParents_closure() {\n    },\n    _weaveParents_closure0: function _weaveParents_closure0(t0) {\n      this.group = t0;\n    },\n    _weaveParents_closure1: function _weaveParents_closure1() {\n    },\n    _weaveParents__closure1: function _weaveParents__closure1() {\n    },\n    _weaveParents_closure2: function _weaveParents_closure2() {\n    },\n    _weaveParents_closure3: function _weaveParents_closure3() {\n    },\n    _weaveParents__closure0: function _weaveParents__closure0() {\n    },\n    _weaveParents_closure4: function _weaveParents_closure4() {\n    },\n    _weaveParents_closure5: function _weaveParents_closure5() {\n    },\n    _weaveParents__closure: function _weaveParents__closure() {\n    },\n    _mustUnify_closure: function _mustUnify_closure(t0) {\n      this.uniqueSelectors = t0;\n    },\n    _mustUnify__closure: function _mustUnify__closure(t0) {\n      this.uniqueSelectors = t0;\n    },\n    paths_closure: function paths_closure(t0) {\n      this.T = t0;\n    },\n    paths__closure: function paths__closure(t0, t1) {\n      this.paths = t0;\n      this.T = t1;\n    },\n    paths___closure: function paths___closure(t0, t1) {\n      this.option = t0;\n      this.T = t1;\n    },\n    _hasRoot_closure: function _hasRoot_closure() {\n    },\n    listIsSuperselector_closure: function listIsSuperselector_closure(t0) {\n      this.list1 = t0;\n    },\n    listIsSuperselector__closure: function listIsSuperselector__closure(t0) {\n      this.complex1 = t0;\n    },\n    _simpleIsSuperselectorOfCompound_closure: function _simpleIsSuperselectorOfCompound_closure(t0) {\n      this.simple = t0;\n    },\n    _simpleIsSuperselectorOfCompound__closure: function _simpleIsSuperselectorOfCompound__closure(t0) {\n      this.simple = t0;\n    },\n    _selectorPseudoIsSuperselector_closure: function _selectorPseudoIsSuperselector_closure(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure0: function _selectorPseudoIsSuperselector_closure0(t0, t1) {\n      this.parents = t0;\n      this.compound2 = t1;\n    },\n    _selectorPseudoIsSuperselector_closure1: function _selectorPseudoIsSuperselector_closure1(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure2: function _selectorPseudoIsSuperselector_closure2(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure3: function _selectorPseudoIsSuperselector_closure3(t0, t1) {\n      this.compound2 = t0;\n      this.pseudo1 = t1;\n    },\n    _selectorPseudoIsSuperselector__closure: function _selectorPseudoIsSuperselector__closure(t0, t1) {\n      this.complex = t0;\n      this.pseudo1 = t1;\n    },\n    _selectorPseudoIsSuperselector___closure: function _selectorPseudoIsSuperselector___closure(t0) {\n      this.simple2 = t0;\n    },\n    _selectorPseudoIsSuperselector___closure0: function _selectorPseudoIsSuperselector___closure0(t0) {\n      this.simple2 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure4: function _selectorPseudoIsSuperselector_closure4(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure5: function _selectorPseudoIsSuperselector_closure5(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudosNamed_closure: function _selectorPseudosNamed_closure(t0, t1) {\n      this.isClass = t0;\n      this.name = t1;\n    },\n    closure: function closure() {\n    },\n    Chokidar: function Chokidar() {\n    },\n    ChokidarOptions: function ChokidarOptions() {\n    },\n    ChokidarWatcher: function ChokidarWatcher() {\n    },\n    SourceFile$fromString: function(text, url) {\n      var t1, t2, t3;\n      text.toString;\n      t1 = new H.CodeUnits(text);\n      t2 = H.setRuntimeTypeInfo([0], type$.JSArray_legacy_int);\n      t3 = typeof url == \"string\" ? P.Uri_parse(url) : type$.legacy_Uri._as(url);\n      t2 = new Y.SourceFile(t3, t2, new Uint32Array(H._ensureNativeList(t1.toList$0(t1))));\n      t2.SourceFile$decoded$2$url(t1, url);\n      return t2;\n    },\n    SourceFile$decoded: function(decodedChars, url) {\n      var t1 = H.setRuntimeTypeInfo([0], type$.JSArray_legacy_int),\n        t2 = typeof url == \"string\" ? P.Uri_parse(url) : type$.legacy_Uri._as(url);\n      t1 = new Y.SourceFile(t2, t1, new Uint32Array(H._ensureNativeList(J.toList$0$ax(decodedChars))));\n      t1.SourceFile$decoded$2$url(decodedChars, url);\n      return t1;\n    },\n    FileLocation$_: function(file, offset) {\n      if (offset < 0)\n        H.throwExpression(P.RangeError$(\"Offset may not be negative, was \" + offset + \".\"));\n      else if (offset > file._decodedChars.length)\n        H.throwExpression(P.RangeError$(\"Offset \" + offset + string$.x20must_ + file.get$length(file) + \".\"));\n      return new Y.FileLocation(file, offset);\n    },\n    _FileSpan$: function(file, _start, _end) {\n      if (_end < _start)\n        H.throwExpression(P.ArgumentError$(\"End \" + _end + \" must come after start \" + _start + \".\"));\n      else if (_end > file._decodedChars.length)\n        H.throwExpression(P.RangeError$(\"End \" + _end + string$.x20must_ + file.get$length(file) + \".\"));\n      else if (_start < 0)\n        H.throwExpression(P.RangeError$(\"Start may not be negative, was \" + _start + \".\"));\n      return new Y._FileSpan(file, _start, _end);\n    },\n    SourceFile: function SourceFile(t0, t1, t2) {\n      var _ = this;\n      _.url = t0;\n      _._lineStarts = t1;\n      _._decodedChars = t2;\n      _._cachedLine = null;\n    },\n    FileLocation: function FileLocation(t0, t1) {\n      this.file = t0;\n      this.offset = t1;\n    },\n    _FileSpan: function _FileSpan(t0, t1, t2) {\n      this.file = t0;\n      this._file$_start = t1;\n      this._end = t2;\n    },\n    SourceSpanMixin: function SourceSpanMixin() {\n    },\n    Trace_Trace$from: function(trace) {\n      if (trace == null)\n        throw H.wrapException(P.ArgumentError$(\"Cannot create a Trace from null.\"));\n      if (type$.legacy_Trace._is(trace))\n        return trace;\n      if (trace instanceof U.Chain)\n        return trace.toTrace$0();\n      return new T.LazyTrace(new Y.Trace_Trace$from_closure(trace));\n    },\n    Trace_Trace$parse: function(trace) {\n      var error, t1, exception;\n      try {\n        if (trace.length === 0) {\n          t1 = P.List_List$unmodifiable(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame), type$.legacy_Frame);\n          return new Y.Trace(t1, new P._StringStackTrace(null));\n        }\n        if (C.JSString_methods.contains$1(trace, $.$get$_v8Trace())) {\n          t1 = Y.Trace$parseV8(trace);\n          return t1;\n        }\n        if (C.JSString_methods.contains$1(trace, \"\\tat \")) {\n          t1 = Y.Trace$parseJSCore(trace);\n          return t1;\n        }\n        if (C.JSString_methods.contains$1(trace, $.$get$_firefoxSafariTrace()) || C.JSString_methods.contains$1(trace, $.$get$_firefoxEvalTrace())) {\n          t1 = Y.Trace$parseFirefox(trace);\n          return t1;\n        }\n        if (C.JSString_methods.contains$1(trace, string$.x3d_____)) {\n          t1 = U.Chain_Chain$parse(trace).toTrace$0();\n          return t1;\n        }\n        if (C.JSString_methods.contains$1(trace, $.$get$_friendlyTrace())) {\n          t1 = Y.Trace$parseFriendly(trace);\n          return t1;\n        }\n        t1 = P.List_List$unmodifiable(Y.Trace__parseVM(trace), type$.legacy_Frame);\n        return new Y.Trace(t1, new P._StringStackTrace(trace));\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_FormatException._is(t1)) {\n          error = t1;\n          throw H.wrapException(P.FormatException$(H.S(J.get$message$x(error)) + \"\\nStack trace:\\n\" + H.S(trace), null, null));\n        } else\n          throw exception;\n      }\n    },\n    Trace__parseVM: function(trace) {\n      var $frames,\n        t1 = J.trim$0$s(trace),\n        t2 = $.$get$vmChainGap(),\n        t3 = type$.WhereIterable_String,\n        lines = new H.WhereIterable(H.setRuntimeTypeInfo(H.stringReplaceAllUnchecked(t1, t2, \"\").split(\"\\n\"), type$.JSArray_String), new Y.Trace__parseVM_closure(), t3);\n      if (!lines.get$iterator(lines).moveNext$0())\n        return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      t1 = H.TakeIterable_TakeIterable(lines, lines.get$length(lines) - 1, t3._eval$1(\"Iterable.E\"));\n      t1 = H.MappedIterable_MappedIterable(t1, new Y.Trace__parseVM_closure0(), H._instanceType(t1)._eval$1(\"Iterable.E\"), type$.legacy_Frame);\n      $frames = P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n      if (!J.endsWith$1$s(lines.get$last(lines), \".da\"))\n        C.JSArray_methods.add$1($frames, A.Frame_Frame$parseVM(lines.get$last(lines)));\n      return $frames;\n    },\n    Trace$parseV8: function(trace) {\n      var t1 = H.SubListIterable$(H.setRuntimeTypeInfo(trace.split(\"\\n\"), type$.JSArray_String), 1, null, type$.String).super$Iterable$skipWhile(0, new Y.Trace$parseV8_closure()),\n        t2 = type$.legacy_Frame;\n      return new Y.Trace(P.List_List$unmodifiable(H.MappedIterable_MappedIterable(t1, new Y.Trace$parseV8_closure0(), t1.$ti._eval$1(\"Iterable.E\"), t2), t2), new P._StringStackTrace(trace));\n    },\n    Trace$parseJSCore: function(trace) {\n      return new Y.Trace(P.List_List$unmodifiable(new H.MappedIterable(new H.WhereIterable(H.setRuntimeTypeInfo(trace.split(\"\\n\"), type$.JSArray_String), new Y.Trace$parseJSCore_closure(), type$.WhereIterable_String), new Y.Trace$parseJSCore_closure0(), type$.MappedIterable_of_String_and_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(trace));\n    },\n    Trace$parseFirefox: function(trace) {\n      return new Y.Trace(P.List_List$unmodifiable(new H.MappedIterable(new H.WhereIterable(H.setRuntimeTypeInfo(C.JSString_methods.trim$0(trace).split(\"\\n\"), type$.JSArray_String), new Y.Trace$parseFirefox_closure(), type$.WhereIterable_String), new Y.Trace$parseFirefox_closure0(), type$.MappedIterable_of_String_and_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(trace));\n    },\n    Trace$parseFriendly: function(trace) {\n      var t1 = trace.length === 0 ? H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame) : new H.MappedIterable(new H.WhereIterable(H.setRuntimeTypeInfo(C.JSString_methods.trim$0(trace).split(\"\\n\"), type$.JSArray_String), new Y.Trace$parseFriendly_closure(), type$.WhereIterable_String), new Y.Trace$parseFriendly_closure0(), type$.MappedIterable_of_String_and_legacy_Frame);\n      return new Y.Trace(P.List_List$unmodifiable(t1, type$.legacy_Frame), new P._StringStackTrace(trace));\n    },\n    Trace: function Trace(t0, t1) {\n      this.frames = t0;\n      this.original = t1;\n    },\n    Trace_Trace$from_closure: function Trace_Trace$from_closure(t0) {\n      this.trace = t0;\n    },\n    Trace__parseVM_closure: function Trace__parseVM_closure() {\n    },\n    Trace__parseVM_closure0: function Trace__parseVM_closure0() {\n    },\n    Trace$parseV8_closure: function Trace$parseV8_closure() {\n    },\n    Trace$parseV8_closure0: function Trace$parseV8_closure0() {\n    },\n    Trace$parseJSCore_closure: function Trace$parseJSCore_closure() {\n    },\n    Trace$parseJSCore_closure0: function Trace$parseJSCore_closure0() {\n    },\n    Trace$parseFirefox_closure: function Trace$parseFirefox_closure() {\n    },\n    Trace$parseFirefox_closure0: function Trace$parseFirefox_closure0() {\n    },\n    Trace$parseFriendly_closure: function Trace$parseFriendly_closure() {\n    },\n    Trace$parseFriendly_closure0: function Trace$parseFriendly_closure0() {\n    },\n    Trace_terse_closure: function Trace_terse_closure() {\n    },\n    Trace_foldFrames_closure: function Trace_foldFrames_closure(t0) {\n      this.oldPredicate = t0;\n    },\n    Trace_foldFrames_closure0: function Trace_foldFrames_closure0(t0) {\n      this._box_0 = t0;\n    },\n    Trace_toString_closure0: function Trace_toString_closure0() {\n    },\n    Trace_toString_closure: function Trace_toString_closure(t0) {\n      this.longest = t0;\n    },\n    SupportsAnything0: function SupportsAnything0(t0, t1) {\n      this.contents = t0;\n      this.span = t1;\n    },\n    Chokidar0: function Chokidar0() {\n    },\n    ChokidarOptions0: function ChokidarOptions0() {\n    },\n    ChokidarWatcher0: function ChokidarWatcher0() {\n    },\n    ContentBlock$0: function($arguments, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new Y.ContentBlock0(null, $arguments, span, t1, t2);\n    },\n    ContentBlock0: function ContentBlock0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.$arguments = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    unifyComplex0: function(complexes) {\n      var t2, unifiedBase, base, t3, t4, _i, complexesWithoutBases,\n        t1 = J.getInterceptor$asx(complexes);\n      if (t1.get$length(complexes) === 1)\n        return complexes;\n      for (t2 = t1.get$iterator(complexes), unifiedBase = null; t2.moveNext$0();) {\n        base = J.get$last$ax(t2.get$current(t2));\n        if (base instanceof X.CompoundSelector0)\n          if (unifiedBase == null)\n            unifiedBase = base.components;\n          else\n            for (t3 = base.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {\n              unifiedBase = t3[_i].unify$1(unifiedBase);\n              if (unifiedBase == null)\n                return null;\n            }\n        else\n          return null;\n      }\n      t1 = t1.map$1$1(complexes, new Y.unifyComplex_closure0(), type$.legacy_List_legacy_ComplexSelectorComponent_2);\n      complexesWithoutBases = P.List_List$from(t1, true, t1.$ti._eval$1(\"ListIterable.E\"));\n      J.add$1$ax(C.JSArray_methods.get$last(complexesWithoutBases), X.CompoundSelector$0(unifiedBase));\n      return Y.weave0(complexesWithoutBases);\n    },\n    unifyCompound0: function(compound1, compound2) {\n      var t1, result, _i;\n      for (t1 = compound1.length, result = compound2, _i = 0; _i < t1; ++_i) {\n        result = compound1[_i].unify$1(result);\n        if (result == null)\n          return null;\n      }\n      return X.CompoundSelector$0(result);\n    },\n    unifyUniversalAndElement0: function(selector1, selector2) {\n      var namespace1, name1, t1, namespace2, name2, namespace, $name, _null = null,\n        _s45_ = string$.must_b;\n      if (selector1 instanceof N.UniversalSelector0) {\n        namespace1 = selector1.namespace;\n        name1 = _null;\n      } else if (selector1 instanceof F.TypeSelector0) {\n        t1 = selector1.name;\n        namespace1 = t1.namespace;\n        name1 = t1.name;\n      } else\n        throw H.wrapException(P.ArgumentError$value(selector1, \"selector1\", _s45_));\n      if (selector2 instanceof N.UniversalSelector0) {\n        namespace2 = selector2.namespace;\n        name2 = _null;\n      } else if (selector2 instanceof F.TypeSelector0) {\n        t1 = selector2.name;\n        namespace2 = t1.namespace;\n        name2 = t1.name;\n      } else\n        throw H.wrapException(P.ArgumentError$value(selector2, \"selector2\", _s45_));\n      if (namespace1 == namespace2 || namespace2 === \"*\")\n        namespace = namespace1;\n      else {\n        if (namespace1 !== \"*\")\n          return _null;\n        namespace = namespace2;\n      }\n      if (name1 == name2 || name2 == null)\n        $name = name1;\n      else {\n        if (!(name1 == null || name1 === \"*\"))\n          return _null;\n        $name = name2;\n      }\n      return $name == null ? new N.UniversalSelector0(namespace) : new F.TypeSelector0(new D.QualifiedName0($name, namespace));\n    },\n    weave0: function(complexes) {\n      var t2, cur, t3, target, _i, parents, newPrefixes, parentPrefixes, t4, t5,\n        t1 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2,\n        prefixes = H.setRuntimeTypeInfo([J.toList$0$ax(C.JSArray_methods.get$first(complexes))], t1);\n      for (t2 = H.SubListIterable$(complexes, 1, null, H._arrayInstanceType(complexes)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t3 = J.getInterceptor$asx(cur);\n        if (t3.get$isEmpty(cur))\n          continue;\n        target = t3.get$last(cur);\n        if (t3.get$length(cur) === 1) {\n          for (t3 = prefixes.length, _i = 0; _i < prefixes.length; prefixes.length === t3 || (0, H.throwConcurrentModificationError)(prefixes), ++_i)\n            J.add$1$ax(prefixes[_i], target);\n          continue;\n        }\n        parents = t3.take$1(cur, t3.get$length(cur) - 1).toList$0(0);\n        newPrefixes = H.setRuntimeTypeInfo([], t1);\n        for (t3 = prefixes.length, _i = 0; _i < prefixes.length; prefixes.length === t3 || (0, H.throwConcurrentModificationError)(prefixes), ++_i) {\n          parentPrefixes = Y._weaveParents0(prefixes[_i], parents);\n          if (parentPrefixes == null)\n            continue;\n          for (t4 = parentPrefixes.get$iterator(parentPrefixes); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            J.add$1$ax(t5, target);\n            newPrefixes.push(t5);\n          }\n        }\n        prefixes = newPrefixes;\n      }\n      return prefixes;\n    },\n    _weaveParents0: function(parents1, parents2) {\n      var finalCombinators, root1, root2, root, groups1, groups2, lcs, t2, choices, t3, _i, group, t4, t5, _null = null,\n        t1 = type$.legacy_ComplexSelectorComponent_2,\n        queue1 = P.ListQueue_ListQueue$of(parents1, t1),\n        queue2 = P.ListQueue_ListQueue$of(parents2, t1),\n        initialCombinators = Y._mergeInitialCombinators0(queue1, queue2);\n      if (initialCombinators == null)\n        return _null;\n      finalCombinators = Y._mergeFinalCombinators0(queue1, queue2, _null);\n      if (finalCombinators == null)\n        return _null;\n      root1 = Y._firstIfRoot0(queue1);\n      root2 = Y._firstIfRoot0(queue2);\n      t1 = root1 != null;\n      if (t1 && root2 != null) {\n        root = Y.unifyCompound0(root1.components, root2.components);\n        if (root == null)\n          return _null;\n        queue1.addFirst$1(root);\n        queue2.addFirst$1(root);\n      } else if (t1)\n        queue2.addFirst$1(root1);\n      else if (root2 != null)\n        queue1.addFirst$1(root2);\n      groups1 = Y._groupSelectors0(queue1);\n      groups2 = Y._groupSelectors0(queue2);\n      t1 = type$.legacy_List_legacy_ComplexSelectorComponent_2;\n      lcs = B.longestCommonSubsequence0(groups2, groups1, new Y._weaveParents_closure6(), t1);\n      t2 = type$.JSArray_legacy_Iterable_legacy_ComplexSelectorComponent_2;\n      choices = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([initialCombinators], t2)], type$.JSArray_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent_2);\n      for (t3 = lcs.length, _i = 0; _i < lcs.length; lcs.length === t3 || (0, H.throwConcurrentModificationError)(lcs), ++_i) {\n        group = lcs[_i];\n        t4 = Y._chunks0(groups1, groups2, new Y._weaveParents_closure7(group), t1);\n        t5 = H._arrayInstanceType(t4)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelectorComponent0*>*>\");\n        choices.push(P.List_List$from(new H.MappedListIterable(t4, new Y._weaveParents_closure8(), t5), true, t5._eval$1(\"ListIterable.E\")));\n        choices.push(H.setRuntimeTypeInfo([group], t2));\n        groups1.removeFirst$0();\n        groups2.removeFirst$0();\n      }\n      t2 = Y._chunks0(groups1, groups2, new Y._weaveParents_closure9(), t1);\n      t3 = H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelectorComponent0*>*>\");\n      choices.push(P.List_List$from(new H.MappedListIterable(t2, new Y._weaveParents_closure10(), t3), true, t3._eval$1(\"ListIterable.E\")));\n      C.JSArray_methods.addAll$1(choices, finalCombinators);\n      return J.map$1$1$ax(Y.paths0(new H.WhereIterable(choices, new Y._weaveParents_closure11(), type$.WhereIterable_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent_2), type$.legacy_Iterable_legacy_ComplexSelectorComponent_2), new Y._weaveParents_closure12(), t1);\n    },\n    _firstIfRoot0: function(queue) {\n      var first;\n      if (queue._collection$_head === queue._collection$_tail)\n        return null;\n      first = queue.get$first(queue);\n      if (first instanceof X.CompoundSelector0) {\n        if (!Y._hasRoot0(first))\n          return null;\n        queue.removeFirst$0();\n        return first;\n      } else\n        return null;\n    },\n    _mergeInitialCombinators0: function(components1, components2) {\n      var t3, combinators2, lcs,\n        t1 = type$.JSArray_legacy_Combinator_2,\n        combinators1 = H.setRuntimeTypeInfo([], t1),\n        t2 = type$.legacy_Combinator_2;\n      while (true) {\n        if (!components1.get$isEmpty(components1)) {\n          t3 = components1._collection$_head;\n          if (t3 === components1._collection$_tail)\n            H.throwExpression(H.IterableElementError_noElement());\n          t3 = components1._collection$_table[t3] instanceof S.Combinator0;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        combinators1.push(t2._as(components1.removeFirst$0()));\n      }\n      combinators2 = H.setRuntimeTypeInfo([], t1);\n      while (true) {\n        if (!components2.get$isEmpty(components2)) {\n          t1 = components2._collection$_head;\n          if (t1 === components2._collection$_tail)\n            H.throwExpression(H.IterableElementError_noElement());\n          t1 = components2._collection$_table[t1] instanceof S.Combinator0;\n        } else\n          t1 = false;\n        if (!t1)\n          break;\n        combinators2.push(t2._as(components2.removeFirst$0()));\n      }\n      lcs = B.longestCommonSubsequence0(combinators1, combinators2, null, t2);\n      if (C.C_ListEquality.equals$2(0, lcs, combinators1))\n        return combinators2;\n      if (C.C_ListEquality.equals$2(0, lcs, combinators2))\n        return combinators1;\n      return null;\n    },\n    _mergeFinalCombinators0: function(components1, components2, result) {\n      var t1, combinators1, t2, combinators2, lcs, combinator1, combinator2, compound1, compound2, choices, unified, followingSiblingSelector, nextSiblingSelector, _null = null;\n      if (result == null)\n        result = Q.QueueList$(_null, type$.legacy_List_legacy_List_legacy_ComplexSelectorComponent_2);\n      if (components1._collection$_head === components1._collection$_tail || !(components1.get$last(components1) instanceof S.Combinator0))\n        t1 = components2._collection$_head === components2._collection$_tail || !(components2.get$last(components2) instanceof S.Combinator0);\n      else\n        t1 = false;\n      if (t1)\n        return result;\n      t1 = type$.JSArray_legacy_Combinator_2;\n      combinators1 = H.setRuntimeTypeInfo([], t1);\n      t2 = type$.legacy_Combinator_2;\n      while (true) {\n        if (!(!components1.get$isEmpty(components1) && components1.get$last(components1) instanceof S.Combinator0))\n          break;\n        combinators1.push(t2._as(components1.removeLast$0(0)));\n      }\n      combinators2 = H.setRuntimeTypeInfo([], t1);\n      while (true) {\n        if (!(!components2.get$isEmpty(components2) && components2.get$last(components2) instanceof S.Combinator0))\n          break;\n        combinators2.push(t2._as(components2.removeLast$0(0)));\n      }\n      t1 = combinators1.length;\n      if (t1 > 1 || combinators2.length > 1) {\n        lcs = B.longestCommonSubsequence0(combinators1, combinators2, _null, t2);\n        if (C.C_ListEquality.equals$2(0, lcs, combinators1))\n          result.addFirst$1(H.setRuntimeTypeInfo([P.List_List$from(new H.ReversedListIterable(combinators2, type$.ReversedListIterable_legacy_Combinator_2), true, type$.legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n        else if (C.C_ListEquality.equals$2(0, lcs, combinators2))\n          result.addFirst$1(H.setRuntimeTypeInfo([P.List_List$from(new H.ReversedListIterable(combinators1, type$.ReversedListIterable_legacy_Combinator_2), true, type$.legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n        else\n          return _null;\n        return result;\n      }\n      combinator1 = t1 === 0 ? _null : C.JSArray_methods.get$first(combinators1);\n      combinator2 = combinators2.length === 0 ? _null : C.JSArray_methods.get$first(combinators2);\n      t1 = combinator1 != null;\n      if (t1 && combinator2 != null) {\n        t1 = type$.legacy_CompoundSelector_2;\n        compound1 = t1._as(components1.removeLast$0(0));\n        compound2 = t1._as(components2.removeLast$0(0));\n        t1 = combinator1 === C.Combinator_CzM0;\n        if (t1 && combinator2 === C.Combinator_CzM0) {\n          compound1.toString;\n          if (Y.compoundIsSuperselector0(compound1, compound2, _null))\n            result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound2, C.Combinator_CzM0], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n          else {\n            compound2.toString;\n            t1 = type$.JSArray_legacy_ComplexSelectorComponent_2;\n            t2 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2;\n            if (Y.compoundIsSuperselector0(compound2, compound1, _null))\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, C.Combinator_CzM0], t1)], t2));\n            else {\n              choices = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, C.Combinator_CzM0, compound2, C.Combinator_CzM0], t1), H.setRuntimeTypeInfo([compound2, C.Combinator_CzM0, compound1, C.Combinator_CzM0], t1)], t2);\n              unified = Y.unifyCompound0(compound1.components, compound2.components);\n              if (unified != null)\n                choices.push(H.setRuntimeTypeInfo([unified, C.Combinator_CzM0], t1));\n              result.addFirst$1(choices);\n            }\n          }\n        } else {\n          if (!(t1 && combinator2 === C.Combinator_uzg0))\n            t2 = combinator1 === C.Combinator_uzg0 && combinator2 === C.Combinator_CzM0;\n          else\n            t2 = true;\n          if (t2) {\n            followingSiblingSelector = t1 ? compound1 : compound2;\n            nextSiblingSelector = t1 ? compound2 : compound1;\n            followingSiblingSelector.toString;\n            t1 = type$.JSArray_legacy_ComplexSelectorComponent_2;\n            t2 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2;\n            if (Y.compoundIsSuperselector0(followingSiblingSelector, nextSiblingSelector, _null))\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([nextSiblingSelector, C.Combinator_uzg0], t1)], t2));\n            else {\n              unified = Y.unifyCompound0(compound1.components, compound2.components);\n              t2 = H.setRuntimeTypeInfo([], t2);\n              t2.push(H.setRuntimeTypeInfo([followingSiblingSelector, C.Combinator_CzM0, nextSiblingSelector, C.Combinator_uzg0], t1));\n              if (unified != null)\n                t2.push(H.setRuntimeTypeInfo([unified, C.Combinator_uzg0], t1));\n              result.addFirst$1(t2);\n            }\n          } else {\n            if (combinator1 === C.Combinator_sgq0)\n              t2 = combinator2 === C.Combinator_uzg0 || combinator2 === C.Combinator_CzM0;\n            else\n              t2 = false;\n            if (t2) {\n              result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound2, combinator2], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n              components1._add$1(compound1);\n              components1._add$1(C.Combinator_sgq0);\n            } else {\n              if (combinator2 === C.Combinator_sgq0)\n                t1 = combinator1 === C.Combinator_uzg0 || t1;\n              else\n                t1 = false;\n              if (t1) {\n                result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([compound1, combinator1], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n                components2._add$1(compound2);\n                components2._add$1(C.Combinator_sgq0);\n              } else if (combinator1 === combinator2) {\n                unified = Y.unifyCompound0(compound1.components, compound2.components);\n                if (unified == null)\n                  return _null;\n                result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([unified, combinator1], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n              } else\n                return _null;\n            }\n          }\n        }\n        return Y._mergeFinalCombinators0(components1, components2, result);\n      } else if (t1) {\n        if (combinator1 === C.Combinator_sgq0)\n          if (!components2.get$isEmpty(components2)) {\n            t1 = type$.legacy_CompoundSelector_2;\n            t2 = t1._as(components2.get$last(components2));\n            t1 = t1._as(components1.get$last(components1));\n            t2.toString;\n            t1 = Y.compoundIsSuperselector0(t2, t1, _null);\n          } else\n            t1 = false;\n        else\n          t1 = false;\n        if (t1)\n          components2.removeLast$0(0);\n        result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([components1.removeLast$0(0), combinator1], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n        return Y._mergeFinalCombinators0(components1, components2, result);\n      } else {\n        if (combinator2 === C.Combinator_sgq0)\n          if (!components1.get$isEmpty(components1)) {\n            t1 = type$.legacy_CompoundSelector_2;\n            t2 = t1._as(components1.get$last(components1));\n            t1 = t1._as(components2.get$last(components2));\n            t2.toString;\n            t1 = Y.compoundIsSuperselector0(t2, t1, _null);\n          } else\n            t1 = false;\n        else\n          t1 = false;\n        if (t1)\n          components1.removeLast$0(0);\n        result.addFirst$1(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([components2.removeLast$0(0), combinator2], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n        return Y._mergeFinalCombinators0(components1, components2, result);\n      }\n    },\n    _mustUnify0: function(complex1, complex2) {\n      var t2, t3, t4,\n        t1 = P.LinkedHashSet_LinkedHashSet(type$.legacy_SimpleSelector_2);\n      for (t2 = J.get$iterator$ax(complex1); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        if (t3 instanceof X.CompoundSelector0)\n          for (t3 = C.JSArray_methods.get$iterator(t3.components), t4 = new H.WhereIterator(t3, Y.functions0___isUnique$closure()); t4.moveNext$0();)\n            t1.add$1(0, t3.get$current(t3));\n      }\n      if (t1._collection$_length === 0)\n        return false;\n      return J.any$1$ax(complex2, new Y._mustUnify_closure0(t1));\n    },\n    _isUnique0: function(simple) {\n      var t1;\n      if (!(simple instanceof N.IDSelector0))\n        t1 = simple instanceof D.PseudoSelector0 && !simple.isClass;\n      else\n        t1 = true;\n      return t1;\n    },\n    _chunks0: function(queue1, queue2, done, $T) {\n      var chunk2, t2, t3, _i,\n        t1 = $T._eval$1(\"JSArray<0*>\"),\n        chunk1 = H.setRuntimeTypeInfo([], t1);\n      for (; !done.call$1(queue1);)\n        chunk1.push(queue1.removeFirst$0());\n      chunk2 = H.setRuntimeTypeInfo([], t1);\n      for (; !done.call$1(queue2);)\n        chunk2.push(queue2.removeFirst$0());\n      t2 = chunk1.length === 0;\n      if (t2 && chunk2.length === 0)\n        return H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<List<0*>*>\"));\n      if (t2)\n        return H.setRuntimeTypeInfo([chunk2], $T._eval$1(\"JSArray<List<0*>*>\"));\n      if (chunk2.length === 0)\n        return H.setRuntimeTypeInfo([chunk1], $T._eval$1(\"JSArray<List<0*>*>\"));\n      t2 = H.setRuntimeTypeInfo([], t1);\n      for (t3 = chunk1.length, _i = 0; _i < chunk1.length; chunk1.length === t3 || (0, H.throwConcurrentModificationError)(chunk1), ++_i)\n        t2.push(chunk1[_i]);\n      for (t3 = chunk2.length, _i = 0; _i < chunk2.length; chunk2.length === t3 || (0, H.throwConcurrentModificationError)(chunk2), ++_i)\n        t2.push(chunk2[_i]);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t3 = chunk2.length, _i = 0; _i < chunk2.length; chunk2.length === t3 || (0, H.throwConcurrentModificationError)(chunk2), ++_i)\n        t1.push(chunk2[_i]);\n      for (t3 = chunk1.length, _i = 0; _i < chunk1.length; chunk1.length === t3 || (0, H.throwConcurrentModificationError)(chunk1), ++_i)\n        t1.push(chunk1[_i]);\n      return H.setRuntimeTypeInfo([t2, t1], $T._eval$1(\"JSArray<List<0*>*>\"));\n    },\n    paths0: function(choices, $T) {\n      return J.fold$2$ax(choices, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<0*>\"))], $T._eval$1(\"JSArray<List<0*>*>\")), new Y.paths_closure0($T));\n    },\n    _groupSelectors0: function(complex) {\n      var t1, group, cur, t2,\n        groups = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent_2),\n        iterator = P._ListQueueIterator$(complex);\n      if (!iterator.moveNext$0())\n        return groups;\n      t1 = type$.JSArray_legacy_ComplexSelectorComponent_2;\n      group = H.setRuntimeTypeInfo([iterator.get$current(iterator)], t1);\n      groups._queue_list$_add$1(group);\n      for (; iterator.moveNext$0();) {\n        if (!(C.JSArray_methods.get$last(group) instanceof S.Combinator0)) {\n          cur = iterator._collection$_current;\n          t2 = cur instanceof S.Combinator0;\n        } else\n          t2 = true;\n        cur = iterator._collection$_current;\n        if (t2)\n          group.push(cur);\n        else {\n          group = H.setRuntimeTypeInfo([cur], t1);\n          groups._queue_list$_add$1(group);\n        }\n      }\n      return groups;\n    },\n    _hasRoot0: function(compound) {\n      return C.JSArray_methods.any$1(compound.components, new Y._hasRoot_closure0());\n    },\n    listIsSuperselector0: function(list1, list2) {\n      return C.JSArray_methods.every$1(list2, new Y.listIsSuperselector_closure0(list1));\n    },\n    complexIsParentSuperselector0: function(complex1, complex2) {\n      var t2, base, t3, t4,\n        t1 = J.getInterceptor$ax(complex1);\n      if (t1.get$first(complex1) instanceof S.Combinator0)\n        return false;\n      t2 = J.getInterceptor$ax(complex2);\n      if (t2.get$first(complex2) instanceof S.Combinator0)\n        return false;\n      if (t1.get$length(complex1) > t2.get$length(complex2))\n        return false;\n      base = X.CompoundSelector$0(H.setRuntimeTypeInfo([new N.PlaceholderSelector0(\"<temp>\")], type$.JSArray_legacy_SimpleSelector_2));\n      t3 = type$.JSArray_legacy_ComplexSelectorComponent_2;\n      t4 = H.setRuntimeTypeInfo([], t3);\n      for (t1 = t1.get$iterator(complex1); t1.moveNext$0();)\n        t4.push(t1.get$current(t1));\n      t4.push(base);\n      t1 = H.setRuntimeTypeInfo([], t3);\n      for (t2 = t2.get$iterator(complex2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(base);\n      return Y.complexIsSuperselector0(t4, t1);\n    },\n    complexIsSuperselector0: function(complex1, complex2) {\n      var t1, t2, t3, i1, i2, remaining1, remaining2, t4, t5, t6, t7, afterSuperselector, afterSuperselector0, compound2, i10, combinator1, combinator2;\n      if (C.JSArray_methods.get$last(complex1) instanceof S.Combinator0)\n        return false;\n      if (C.JSArray_methods.get$last(complex2) instanceof S.Combinator0)\n        return false;\n      for (t1 = H._arrayInstanceType(complex2), t2 = t1._precomputed1, t1 = t1._eval$1(\"SubListIterable<1>\"), t3 = type$.legacy_CompoundSelector_2, i1 = 0, i2 = 0; true;) {\n        remaining1 = complex1.length - i1;\n        remaining2 = complex2.length - i2;\n        if (remaining1 === 0 || remaining2 === 0)\n          return false;\n        if (remaining1 > remaining2)\n          return false;\n        t4 = complex1[i1];\n        if (t4 instanceof S.Combinator0)\n          return false;\n        if (complex2[i2] instanceof S.Combinator0)\n          return false;\n        t3._as(t4);\n        if (remaining1 === 1) {\n          t5 = t3._as(C.JSArray_methods.get$last(complex2));\n          t6 = complex2.length - 1;\n          t7 = new H.SubListIterable(complex2, 0, t6, t1);\n          t7.SubListIterable$3(complex2, 0, t6, t2);\n          return Y.compoundIsSuperselector0(t4, t5, t7.skip$1(0, i2));\n        }\n        afterSuperselector = i2 + 1;\n        for (afterSuperselector0 = afterSuperselector; afterSuperselector0 < complex2.length; ++afterSuperselector0) {\n          t5 = afterSuperselector0 - 1;\n          compound2 = complex2[t5];\n          if (compound2 instanceof X.CompoundSelector0) {\n            t6 = new H.SubListIterable(complex2, 0, t5, t1);\n            t6.SubListIterable$3(complex2, 0, t5, t2);\n            if (Y.compoundIsSuperselector0(t4, compound2, t6.skip$1(0, afterSuperselector)))\n              break;\n          }\n        }\n        if (afterSuperselector0 === complex2.length)\n          return false;\n        i10 = i1 + 1;\n        combinator1 = complex1[i10];\n        combinator2 = complex2[afterSuperselector0];\n        if (combinator1 instanceof S.Combinator0) {\n          if (!(combinator2 instanceof S.Combinator0))\n            return false;\n          if (combinator1 === C.Combinator_CzM0) {\n            if (combinator2 === C.Combinator_sgq0)\n              return false;\n          } else if (combinator2 !== combinator1)\n            return false;\n          if (remaining1 === 3 && remaining2 > 3)\n            return false;\n          i1 += 2;\n          i2 = afterSuperselector0 + 1;\n        } else {\n          if (combinator2 instanceof S.Combinator0) {\n            if (combinator2 !== C.Combinator_sgq0)\n              return false;\n            i2 = afterSuperselector0 + 1;\n          } else\n            i2 = afterSuperselector0;\n          i1 = i10;\n        }\n      }\n    },\n    compoundIsSuperselector0: function(compound1, compound2, parents) {\n      var t1, t2, _i, simple1, simple2;\n      for (t1 = compound1.components, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        simple1 = t1[_i];\n        if (simple1 instanceof D.PseudoSelector0 && simple1.selector != null) {\n          if (!Y._selectorPseudoIsSuperselector0(simple1, compound2, parents))\n            return false;\n        } else if (!Y._simpleIsSuperselectorOfCompound0(simple1, compound2))\n          return false;\n      }\n      for (t1 = compound2.components, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        simple2 = t1[_i];\n        if (simple2 instanceof D.PseudoSelector0 && !simple2.isClass && simple2.selector == null && !Y._simpleIsSuperselectorOfCompound0(simple2, compound1))\n          return false;\n      }\n      return true;\n    },\n    _simpleIsSuperselectorOfCompound0: function(simple, compound) {\n      return C.JSArray_methods.any$1(compound.components, new Y._simpleIsSuperselectorOfCompound_closure0(simple));\n    },\n    _selectorPseudoIsSuperselector0: function(pseudo1, compound2, parents) {\n      switch (pseudo1.normalizedName) {\n        case \"matches\":\n        case \"any\":\n          return Y._selectorPseudosNamed0(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure6(pseudo1)) || C.JSArray_methods.any$1(pseudo1.selector.components, new Y._selectorPseudoIsSuperselector_closure7(parents, compound2));\n        case \"has\":\n        case \"host\":\n        case \"host-context\":\n          return Y._selectorPseudosNamed0(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure8(pseudo1));\n        case \"slotted\":\n          return Y._selectorPseudosNamed0(compound2, pseudo1.name, false).any$1(0, new Y._selectorPseudoIsSuperselector_closure9(pseudo1));\n        case \"not\":\n          return C.JSArray_methods.every$1(pseudo1.selector.components, new Y._selectorPseudoIsSuperselector_closure10(compound2, pseudo1));\n        case \"current\":\n          return Y._selectorPseudosNamed0(compound2, pseudo1.name, true).any$1(0, new Y._selectorPseudoIsSuperselector_closure11(pseudo1));\n        case \"nth-child\":\n        case \"nth-last-child\":\n          return C.JSArray_methods.any$1(compound2.components, new Y._selectorPseudoIsSuperselector_closure12(pseudo1));\n        default:\n          throw H.wrapException(\"unreachable\");\n      }\n    },\n    _selectorPseudosNamed0: function(compound, $name, isClass) {\n      var t1 = type$.WhereTypeIterable_legacy_PseudoSelector_2;\n      return new H.WhereIterable(new H.WhereTypeIterable(compound.components, t1), new Y._selectorPseudosNamed_closure0(isClass, $name), t1._eval$1(\"WhereIterable<Iterable.E>\"));\n    },\n    unifyComplex_closure0: function unifyComplex_closure0() {\n    },\n    _weaveParents_closure6: function _weaveParents_closure6() {\n    },\n    _weaveParents_closure7: function _weaveParents_closure7(t0) {\n      this.group = t0;\n    },\n    _weaveParents_closure8: function _weaveParents_closure8() {\n    },\n    _weaveParents__closure4: function _weaveParents__closure4() {\n    },\n    _weaveParents_closure9: function _weaveParents_closure9() {\n    },\n    _weaveParents_closure10: function _weaveParents_closure10() {\n    },\n    _weaveParents__closure3: function _weaveParents__closure3() {\n    },\n    _weaveParents_closure11: function _weaveParents_closure11() {\n    },\n    _weaveParents_closure12: function _weaveParents_closure12() {\n    },\n    _weaveParents__closure2: function _weaveParents__closure2() {\n    },\n    _mustUnify_closure0: function _mustUnify_closure0(t0) {\n      this.uniqueSelectors = t0;\n    },\n    _mustUnify__closure0: function _mustUnify__closure0(t0) {\n      this.uniqueSelectors = t0;\n    },\n    paths_closure0: function paths_closure0(t0) {\n      this.T = t0;\n    },\n    paths__closure0: function paths__closure0(t0, t1) {\n      this.paths = t0;\n      this.T = t1;\n    },\n    paths___closure0: function paths___closure0(t0, t1) {\n      this.option = t0;\n      this.T = t1;\n    },\n    _hasRoot_closure0: function _hasRoot_closure0() {\n    },\n    listIsSuperselector_closure0: function listIsSuperselector_closure0(t0) {\n      this.list1 = t0;\n    },\n    listIsSuperselector__closure0: function listIsSuperselector__closure0(t0) {\n      this.complex1 = t0;\n    },\n    _simpleIsSuperselectorOfCompound_closure0: function _simpleIsSuperselectorOfCompound_closure0(t0) {\n      this.simple = t0;\n    },\n    _simpleIsSuperselectorOfCompound__closure0: function _simpleIsSuperselectorOfCompound__closure0(t0) {\n      this.simple = t0;\n    },\n    _selectorPseudoIsSuperselector_closure6: function _selectorPseudoIsSuperselector_closure6(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure7: function _selectorPseudoIsSuperselector_closure7(t0, t1) {\n      this.parents = t0;\n      this.compound2 = t1;\n    },\n    _selectorPseudoIsSuperselector_closure8: function _selectorPseudoIsSuperselector_closure8(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure9: function _selectorPseudoIsSuperselector_closure9(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure10: function _selectorPseudoIsSuperselector_closure10(t0, t1) {\n      this.compound2 = t0;\n      this.pseudo1 = t1;\n    },\n    _selectorPseudoIsSuperselector__closure0: function _selectorPseudoIsSuperselector__closure0(t0, t1) {\n      this.complex = t0;\n      this.pseudo1 = t1;\n    },\n    _selectorPseudoIsSuperselector___closure1: function _selectorPseudoIsSuperselector___closure1(t0) {\n      this.simple2 = t0;\n    },\n    _selectorPseudoIsSuperselector___closure2: function _selectorPseudoIsSuperselector___closure2(t0) {\n      this.simple2 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure11: function _selectorPseudoIsSuperselector_closure11(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudoIsSuperselector_closure12: function _selectorPseudoIsSuperselector_closure12(t0) {\n      this.pseudo1 = t0;\n    },\n    _selectorPseudosNamed_closure0: function _selectorPseudosNamed_closure0(t0, t1) {\n      this.isClass = t0;\n      this.name = t1;\n    },\n    closure114: function closure114() {\n    },\n    WarnRule0: function WarnRule0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    mergeMaps: function(map1, map2, $K, $V) {\n      var result = P.LinkedHashMap_LinkedHashMap$from(map1, $K._eval$1(\"0*\"), $V._eval$1(\"0*\"));\n      result.addAll$1(0, map2);\n      return result;\n    },\n    groupBy: function(values, key, $S, $T) {\n      var t1, t2, _i, element, t3, t4,\n        map = P.LinkedHashMap_LinkedHashMap$_empty($T._eval$1(\"0*\"), $S._eval$1(\"List<0*>*\"));\n      for (t1 = values.length, t2 = $S._eval$1(\"JSArray<0*>\"), _i = 0; _i < values.length; values.length === t1 || (0, H.throwConcurrentModificationError)(values), ++_i) {\n        element = values[_i];\n        t3 = key.call$1(element);\n        t4 = map.$index(0, t3);\n        if (t4 == null) {\n          t4 = H.setRuntimeTypeInfo([], t2);\n          map.$indexSet(0, t3, t4);\n          t3 = t4;\n        } else\n          t3 = t4;\n        t3.push(element);\n      }\n      return map;\n    },\n    minBy: function(values, orderBy, $S, $T) {\n      var t1, minValue, minOrderBy, cur, elementOrderBy,\n        compare = B.defaultCompare($T._eval$1(\"0*\"));\n      for (t1 = new H.MappedIterator(J.get$iterator$ax(values.__internal$_iterable), values._f), minValue = null, minOrderBy = null; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        elementOrderBy = orderBy.call$1(cur);\n        if (minOrderBy == null || compare.call$2(elementOrderBy, minOrderBy) < 0) {\n          minOrderBy = elementOrderBy;\n          minValue = cur;\n        }\n      }\n      return minValue;\n    },\n    repl: function(options) {\n      return Y.repl$body(options);\n    },\n    repl$body: function(options) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$handler = 1, $async$currentError, $async$next = [], repl, logger, evaluator, line, declaration, error, stackTrace, t4, t5, t6, t7, t8, line0, toZone, exception, t1, t2, t3, repl0;\n      var $async$repl = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n              t2 = C.JSString_methods.$mul(\" \", 3);\n              t3 = $.$get$alwaysValid();\n              repl0 = new Q.Repl(\">> \", t2, t3, t1);\n              repl0._adapter = new B.ReplAdapter(repl0);\n              repl = repl0;\n              t1 = options._options;\n              logger = new T.TrackingLogger(H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color()));\n              t2 = D.absolute(\".\");\n              evaluator = new R.Evaluator(R._EvaluateVisitor$(null, R.ImportCache$(C.List_empty10, type$.legacy_List_legacy_String._as(t1.$index(0, \"load-path\")), logger), logger, null, false), new F.FilesystemImporter(t2));\n              t2 = repl._adapter.runAsync$0();\n              t1 = new P._StreamIterator(t2);\n              P.ArgumentError_checkNotNull(t2, \"stream\");\n              $async$handler = 2;\n              t2 = type$.legacy_Expression, t3 = type$.legacy_String, t4 = type$.legacy_VariableDeclaration;\n            case 5:\n              // for condition\n              $async$goto = 7;\n              return P._asyncAwait(t1.moveNext$0(), $async$repl);\n            case 7:\n              // returning from await.\n              if (!$async$result) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              line = t1.get$current(t1);\n              if (J.trim$0$s(line).length === 0) {\n                // goto for condition\n                $async$goto = 5;\n                break;\n              }\n              try {\n                if (J.startsWith$1$s(line, \"@\")) {\n                  t5 = evaluator;\n                  t6 = logger;\n                  t7 = S.SpanScanner$(line, null);\n                  if (t6 == null)\n                    t6 = C.StderrLogger_false;\n                  t6 = new L.ScssParser(P.LinkedHashMap_LinkedHashMap$_empty(t3, t4), t7, t6).parseUseRule$0();\n                  t5._visitor.runStatement$2(t5._importer, t6);\n                  // goto for condition\n                  $async$goto = 5;\n                  break;\n                }\n                t5 = S.SpanScanner$(line, null);\n                if (new G.Parser(t5, C.StderrLogger_false)._isVariableDeclarationLike$0()) {\n                  t5 = logger;\n                  t6 = S.SpanScanner$(line, null);\n                  if (t5 == null)\n                    t5 = C.StderrLogger_false;\n                  declaration = new L.ScssParser(P.LinkedHashMap_LinkedHashMap$_empty(t3, t4), t6, t5).parseVariableDeclaration$0();\n                  t5 = evaluator;\n                  t5._visitor.runStatement$2(t5._importer, declaration);\n                  t5 = evaluator;\n                  t6 = declaration.name;\n                  t7 = declaration.span;\n                  t8 = declaration.namespace;\n                  line0 = J.toString$0$(t5._visitor.runExpression$2(t5._importer, new S.VariableExpression(t8, t6, t7)));\n                  toZone = $.printToZone;\n                  if (toZone == null)\n                    H.printString(line0);\n                  else\n                    toZone.call$1(line0);\n                } else {\n                  t5 = evaluator;\n                  t6 = logger;\n                  t7 = S.SpanScanner$(line, null);\n                  if (t6 == null)\n                    t6 = C.StderrLogger_false;\n                  t6 = new L.ScssParser(P.LinkedHashMap_LinkedHashMap$_empty(t3, t4), t7, t6);\n                  t6 = t6._parseSingleProduction$1$1(t6.get$expression(), t2);\n                  line0 = J.toString$0$(t5._visitor.runExpression$2(t5._importer, t6));\n                  toZone = $.printToZone;\n                  if (toZone == null)\n                    H.printString(line0);\n                  else\n                    toZone.call$1(line0);\n                }\n              } catch (exception) {\n                t5 = H.unwrapException(exception);\n                if (t5 instanceof E.SassException) {\n                  error = t5;\n                  stackTrace = H.getTraceFromException(exception);\n                  Y._logError(error, stackTrace, line, repl, options, logger);\n                } else\n                  throw exception;\n              }\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 6:\n              // after for\n              $async$next.push(4);\n              // goto finally\n              $async$goto = 3;\n              break;\n            case 2:\n              // uncaught\n              $async$next = [1];\n            case 3:\n              // finally\n              $async$handler = 1;\n              $async$goto = 8;\n              return P._asyncAwait(t1.cancel$0(), $async$repl);\n            case 8:\n              // returning from await.\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 4:\n              // after finally\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n            case 1:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$repl, $async$completer);\n    },\n    _logError: function(error, stackTrace, line, repl, options, logger) {\n      var t1, t2, spacesBeforeError;\n      if (G.SourceSpanException.prototype.get$span.call(error).file.url == null)\n        if (!H._asBoolS(options._options.$index(0, \"quiet\")))\n          t1 = logger._emittedDebug || logger._emittedWarning;\n        else\n          t1 = false;\n      else\n        t1 = true;\n      if (t1) {\n        P.print(error.toString$1$color(0, options.get$color()));\n        return;\n      }\n      t1 = options.get$color() ? \"\\x1b[31m\" : \"\";\n      t2 = G.SourceSpanException.prototype.get$span.call(error);\n      t2 = Y.FileLocation$_(t2.file, t2._file$_start);\n      spacesBeforeError = repl.prompt.length + t2.file.getColumn$1(t2.offset);\n      if (options.get$color()) {\n        t2 = G.SourceSpanException.prototype.get$span.call(error);\n        t2 = Y.FileLocation$_(t2.file, t2._file$_start);\n        t2 = t2.file.getColumn$1(t2.offset) < line.length;\n      } else\n        t2 = false;\n      if (t2) {\n        t1 += \"\\x1b[1F\\x1b[\" + spacesBeforeError + \"C\";\n        t2 = G.SourceSpanException.prototype.get$span.call(error);\n        t2 = t1 + (P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, null) + \"\\n\");\n        t1 = t2;\n      }\n      t1 += C.JSString_methods.$mul(\" \", spacesBeforeError);\n      t2 = G.SourceSpanException.prototype.get$span.call(error);\n      t2 = t1 + (C.JSString_methods.$mul(\"^\", Math.max(1, t2._end - t2._file$_start)) + \"\\n\");\n      t1 = options.get$color() ? t2 + \"\\x1b[0m\" : t2;\n      t1 += \"Error: \" + H.S(error._span_exception$_message) + \"\\n\";\n      if (H._asBoolS(options._options.$index(0, \"trace\")))\n        t1 += Y.Trace_Trace$from(stackTrace).get$terse().toString$0(0);\n      P.print(C.JSString_methods.trimRight$0(t1.charCodeAt(0) == 0 ? t1 : t1));\n    }\n  },\n  L = {StreamGroup: function StreamGroup(t0, t1, t2) {\n      var _ = this;\n      _._controller = null;\n      _._closed = false;\n      _._stream_group$_state = t0;\n      _._subscriptions = t1;\n      _.$ti = t2;\n    }, StreamGroup_add_closure: function StreamGroup_add_closure() {\n    }, StreamGroup_add_closure0: function StreamGroup_add_closure0(t0, t1) {\n      this.$this = t0;\n      this.stream = t1;\n    }, StreamGroup__onListen_closure: function StreamGroup__onListen_closure(t0) {\n      this.$this = t0;\n    }, StreamGroup__onCancel_closure: function StreamGroup__onCancel_closure(t0) {\n      this.$this = t0;\n    }, StreamGroup__onCancel_closure0: function StreamGroup__onCancel_closure0() {\n    }, StreamGroup__listenToStream_closure: function StreamGroup__listenToStream_closure(t0, t1) {\n      this.$this = t0;\n      this.stream = t1;\n    }, _StreamGroupState: function _StreamGroupState(t0) {\n      this.name = t0;\n    },\n    UnmodifiableSetMixin__throw: function() {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable Set\"));\n    },\n    UnmodifiableSetView: function UnmodifiableSetView(t0, t1) {\n      this._base = t0;\n      this.$ti = t1;\n    },\n    UnmodifiableSetMixin: function UnmodifiableSetMixin() {\n    },\n    _UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin: function _UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin() {\n    },\n    Immediate: function Immediate() {\n    },\n    Timeout: function Timeout() {\n    },\n    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {\n      var _ = this;\n      _.separatorPattern = t0;\n      _.needsSeparatorPattern = t1;\n      _.rootPattern = t2;\n      _.relativeRootPattern = t3;\n    },\n    WindowsStyle_absolutePathToUri_closure: function WindowsStyle_absolutePathToUri_closure() {\n    },\n    ModifiableCssDeclaration$: function($name, value, span, parsedAsCustomProperty, valueSpanForMap) {\n      var t2,\n        t1 = valueSpanForMap == null ? span : valueSpanForMap;\n      if (parsedAsCustomProperty)\n        if (!J.startsWith$1$s($name.get$value($name), \"--\"))\n          H.throwExpression(P.ArgumentError$(string$.parsed));\n        else {\n          t2 = value.value;\n          if (!(t2 instanceof D.SassString))\n            H.throwExpression(P.ArgumentError$(string$.If_par + value.toString$0(0) + \"` of type \" + J.get$runtimeType$u(t2).toString$0(0) + \").\"));\n        }\n      return new L.ModifiableCssDeclaration($name, value, parsedAsCustomProperty, t1, span);\n    },\n    ModifiableCssDeclaration: function ModifiableCssDeclaration(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.parsedAsCustomProperty = t2;\n      _.valueSpanForMap = t3;\n      _.span = t4;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    IfExpression: function IfExpression(t0, t1) {\n      this.$arguments = t0;\n      this.span = t1;\n    },\n    Declaration$: function($name, span, children, value) {\n      var t1;\n      children = children == null ? null : P.List_List$unmodifiable(children, type$.legacy_Statement);\n      t1 = children == null ? null : C.JSArray_methods.any$1(children, new M.ParentStatement_closure());\n      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), \"--\") && !(value instanceof D.StringExpression))\n        H.throwExpression(P.ArgumentError$(string$.Declarw + H.S(value) + \"` of type \" + J.get$runtimeType$u(value).toString$0(0) + \").\"));\n      return new L.Declaration($name, value, span, children, t1 === true);\n    },\n    Declaration: function Declaration(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    ForwardRule: function ForwardRule(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _.url = t0;\n      _.shownMixinsAndFunctions = t1;\n      _.shownVariables = t2;\n      _.hiddenMixinsAndFunctions = t3;\n      _.hiddenVariables = t4;\n      _.prefix = t5;\n      _.configuration = t6;\n      _.span = t7;\n    },\n    LoudComment: function LoudComment(t0) {\n      this.text = t0;\n    },\n    SupportsDeclaration: function SupportsDeclaration(t0, t1, t2) {\n      this.name = t0;\n      this.value = t1;\n      this.span = t2;\n    },\n    PlainCssCallable: function PlainCssCallable(t0) {\n      this.name = t0;\n    },\n    ExtendMode: function ExtendMode(t0) {\n      this.name = t0;\n    },\n    ScssParser$: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url),\n        t2 = logger == null ? C.StderrLogger_false : logger;\n      return new L.ScssParser(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration), t1, t2);\n    },\n    ScssParser: function ScssParser(t0, t1, t2) {\n      var _ = this;\n      _._isUseAllowed = true;\n      _._stylesheet$_inMixin = false;\n      _._mixinHasContent = null;\n      _._inParentheses = _._inStyleRule = _._stylesheet$_inUnknownAtRule = _._inControlDirective = _._inContentBlock = false;\n      _._globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    Entry: function Entry(t0, t1, t2) {\n      this.source = t0;\n      this.target = t1;\n      this.identifierName = t2;\n    },\n    _StreamTransformer__defaultHandleError: function(error, stackTrace, sink) {\n      sink.addError$2(error, stackTrace);\n    },\n    _StreamTransformer: function _StreamTransformer(t0, t1, t2, t3) {\n      var _ = this;\n      _._from_handlers$_handleData = t0;\n      _._from_handlers$_handleDone = t1;\n      _._from_handlers$_handleError = t2;\n      _.$ti = t3;\n    },\n    _StreamTransformer_bind_closure: function _StreamTransformer_bind_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _._box_1 = t0;\n      _.$this = t1;\n      _.values = t2;\n      _.controller = t3;\n    },\n    _StreamTransformer_bind__closure: function _StreamTransformer_bind__closure(t0, t1) {\n      this.$this = t0;\n      this.controller = t1;\n    },\n    _StreamTransformer_bind__closure1: function _StreamTransformer_bind__closure1(t0, t1) {\n      this.$this = t0;\n      this.controller = t1;\n    },\n    _StreamTransformer_bind__closure0: function _StreamTransformer_bind__closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.controller = t2;\n    },\n    _StreamTransformer_bind__closure2: function _StreamTransformer_bind__closure2(t0, t1) {\n      this._box_1 = t0;\n      this._box_0 = t1;\n    },\n    ModifiableCssDeclaration$0: function($name, value, span, parsedAsCustomProperty, valueSpanForMap) {\n      var t2,\n        t1 = valueSpanForMap == null ? span : valueSpanForMap;\n      if (parsedAsCustomProperty)\n        if (!J.startsWith$1$s($name.get$value($name), \"--\"))\n          H.throwExpression(P.ArgumentError$(string$.parsed));\n        else {\n          t2 = value.value;\n          if (!(t2 instanceof D.SassString0))\n            H.throwExpression(P.ArgumentError$(string$.If_par + value.toString$0(0) + \"` of type \" + J.get$runtimeType$u(t2).toString$0(0) + \").\"));\n        }\n      return new L.ModifiableCssDeclaration0($name, value, parsedAsCustomProperty, t1, span);\n    },\n    ModifiableCssDeclaration0: function ModifiableCssDeclaration0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.parsedAsCustomProperty = t2;\n      _.valueSpanForMap = t3;\n      _.span = t4;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    Declaration$0: function($name, span, children, value) {\n      var t1;\n      children = children == null ? null : P.List_List$unmodifiable(children, type$.legacy_Statement_2);\n      t1 = children == null ? null : C.JSArray_methods.any$1(children, new M.ParentStatement_closure0());\n      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), \"--\") && !(value instanceof D.StringExpression0))\n        H.throwExpression(P.ArgumentError$(string$.Declarw + H.S(value) + \"` of type \" + J.get$runtimeType$u(value).toString$0(0) + \").\"));\n      return new L.Declaration0($name, value, span, children, t1 === true);\n    },\n    Declaration0: function Declaration0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    SupportsDeclaration0: function SupportsDeclaration0(t0, t1, t2) {\n      this.name = t0;\n      this.value = t1;\n      this.span = t2;\n    },\n    ForwardRule0: function ForwardRule0(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _.url = t0;\n      _.shownMixinsAndFunctions = t1;\n      _.shownVariables = t2;\n      _.hiddenMixinsAndFunctions = t3;\n      _.hiddenVariables = t4;\n      _.prefix = t5;\n      _.configuration = t6;\n      _.span = t7;\n    },\n    IfExpression0: function IfExpression0(t0, t1) {\n      this.$arguments = t0;\n      this.span = t1;\n    },\n    LoudComment0: function LoudComment0(t0) {\n      this.text = t0;\n    },\n    ExtendMode0: function ExtendMode0(t0) {\n      this.name = t0;\n    },\n    PlainCssCallable0: function PlainCssCallable0(t0) {\n      this.name = t0;\n    },\n    RenderContextOptions: function RenderContextOptions() {\n    },\n    ScssParser$0: function(contents, logger, url) {\n      var t1 = S.SpanScanner$(contents, url),\n        t2 = logger == null ? C.C_StderrLogger : logger;\n      return new L.ScssParser0(P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_VariableDeclaration_2), t1, t2);\n    },\n    ScssParser0: function ScssParser0(t0, t1, t2) {\n      var _ = this;\n      _._stylesheet0$_isUseAllowed = true;\n      _._stylesheet0$_inMixin = false;\n      _._stylesheet0$_mixinHasContent = null;\n      _._stylesheet0$_inParentheses = _._stylesheet0$_inStyleRule = _._stylesheet0$_inUnknownAtRule = _._stylesheet0$_inControlDirective = _._stylesheet0$_inContentBlock = false;\n      _._stylesheet0$_globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    encodeVlq: function(value) {\n      var res, signBit, digit, t1;\n      if (value < $.$get$MIN_INT32() || value > $.$get$MAX_INT32())\n        throw H.wrapException(P.ArgumentError$(\"expected 32 bit int, got: \" + value));\n      res = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      if (value < 0) {\n        value = -value;\n        signBit = 1;\n      } else\n        signBit = 0;\n      value = value << 1 | signBit;\n      do {\n        digit = value & 31;\n        value = value >>> 5;\n        t1 = value > 0;\n        res.push(string$.ABCDEF[t1 ? digit | 32 : digit]);\n      } while (t1);\n      return res;\n    }\n  },\n  Q = {Repl: function Repl(t0, t1, t2, t3) {\n      var _ = this;\n      _.prompt = t0;\n      _.continuation = t1;\n      _.validator = t2;\n      _._adapter = null;\n      _.history = t3;\n    }, closure113: function closure113() {\n    },\n    QueueList$: function(initialCapacity, $E) {\n      var t1 = new Q.QueueList(0, 0, $E._eval$1(\"QueueList<0>\"));\n      t1.QueueList$1(initialCapacity, $E);\n      return t1;\n    },\n    QueueList_QueueList$from: function(source, $E) {\n      var $length, queue,\n        t1 = $E._eval$1(\"0*\");\n      if (type$.legacy_List_dynamic._is(source)) {\n        $length = J.get$length$asx(source);\n        queue = Q.QueueList$($length + 1, t1);\n        J.setRange$4$ax(queue._table, 0, $length, source, 0);\n        queue._tail = $length;\n        return queue;\n      } else {\n        t1 = Q.QueueList$(null, t1);\n        t1.addAll$1(0, source);\n        return t1;\n      }\n    },\n    QueueList__nextPowerOf2: function(number) {\n      var nextNumber;\n      number = (number << 1 >>> 0) - 1;\n      for (; true; number = nextNumber) {\n        nextNumber = (number & number - 1) >>> 0;\n        if (nextNumber === 0)\n          return number;\n      }\n    },\n    QueueList: function QueueList(t0, t1, t2) {\n      var _ = this;\n      _._table = null;\n      _._head = t0;\n      _._tail = t1;\n      _.$ti = t2;\n    },\n    _CastQueueList: function _CastQueueList(t0, t1, t2, t3) {\n      var _ = this;\n      _._queue_list$_delegate = t0;\n      _._table = null;\n      _._head = t1;\n      _._tail = t2;\n      _.$ti = t3;\n    },\n    _QueueList_Object_ListMixin: function _QueueList_Object_ListMixin() {\n    },\n    StaticImport: function StaticImport(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.supports = t1;\n      _.media = t2;\n      _.span = t3;\n    },\n    ContentRule: function ContentRule(t0, t1) {\n      this.span = t0;\n      this.$arguments = t1;\n    },\n    DebugRule: function DebugRule(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    AsyncEnvironment$: function(sourceMap) {\n      var _null = null,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Module_legacy_AsyncCallable,\n        t3 = type$.legacy_AstNode,\n        t4 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable),\n        t5 = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Value)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Value),\n        t6 = sourceMap ? H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t3)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode) : _null,\n        t7 = type$.legacy_int,\n        t8 = type$.legacy_AsyncCallable,\n        t9 = type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AsyncCallable;\n      return new Q.AsyncEnvironment(P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), P.LinkedHashMap_LinkedHashMap$_empty(t1, t3), P.LinkedHashSet_LinkedHashSet$_empty(t2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), _null, _null, _null, t4, t5, t6, P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), _null);\n    },\n    AsyncEnvironment$_: function(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, _functions, _mixins, _content) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_int;\n      return new Q.AsyncEnvironment(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _functions, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _mixins, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _content);\n    },\n    _EnvironmentModule__EnvironmentModule0: function(environment, css, extender, forwarded) {\n      var t1, t2, t3, t4, t5, t6;\n      if (forwarded == null)\n        forwarded = C.Set_empty0;\n      t1 = Q._EnvironmentModule__makeModulesByVariable0(forwarded);\n      t2 = H._instanceType(forwarded);\n      t3 = Q._EnvironmentModule__memberMap0(C.JSArray_methods.get$first(environment._async_environment$_variables), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure5(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Value*>*>\")), type$.legacy_Value);\n      t4 = environment._async_environment$_variableNodes;\n      t4 = t4 == null ? null : Q._EnvironmentModule__memberMap0(C.JSArray_methods.get$first(t4), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure6(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AstNode*>*>\")), type$.legacy_AstNode);\n      t2 = t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AsyncCallable*>*>\");\n      t5 = type$.legacy_AsyncCallable;\n      t6 = Q._EnvironmentModule__memberMap0(C.JSArray_methods.get$first(environment._async_environment$_functions), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure7(), t2), t5);\n      t5 = Q._EnvironmentModule__memberMap0(C.JSArray_methods.get$first(environment._async_environment$_mixins), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure8(), t2), t5);\n      t2 = J.get$isNotEmpty$asx(css.get$children(css)) || C.JSArray_methods.any$1(environment._async_environment$_allModules, new Q._EnvironmentModule__EnvironmentModule_closure9());\n      return Q._EnvironmentModule$_0(environment, css, extender, t1, t3, t4, t6, t5, t2, !extender.get$isEmpty(extender) || C.JSArray_methods.any$1(environment._async_environment$_allModules, new Q._EnvironmentModule__EnvironmentModule_closure10()));\n    },\n    _EnvironmentModule__makeModulesByVariable0: function(forwarded) {\n      var modulesByVariable, t1, t2, t3, t4, t5;\n      if (forwarded.get$isEmpty(forwarded))\n        return C.Map_empty4;\n      modulesByVariable = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_Module_legacy_AsyncCallable);\n      for (t1 = forwarded.get$iterator(forwarded); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        if (t2 instanceof Q._EnvironmentModule0) {\n          for (t3 = t2._async_environment$_modulesByVariable, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n            t4 = t3.get$current(t3);\n            t5 = t4.get$variables();\n            B.setAll(modulesByVariable, t5.get$keys(t5), t4);\n          }\n          B.setAll(modulesByVariable, J.get$keys$z(C.JSArray_methods.get$first(t2._async_environment$_environment._async_environment$_variables)), t2);\n        } else {\n          t3 = t2.get$variables();\n          B.setAll(modulesByVariable, t3.get$keys(t3), t2);\n        }\n      }\n      return modulesByVariable;\n    },\n    _EnvironmentModule__memberMap0: function(localMap, otherMaps, $V) {\n      var t1, t2, t3, cur;\n      localMap = new U.PublicMemberMapView(localMap, $V._eval$1(\"PublicMemberMapView<0*>\"));\n      t1 = otherMaps.__internal$_iterable;\n      t2 = J.getInterceptor$asx(t1);\n      if (t2.get$isEmpty(t1))\n        return localMap;\n      t3 = H.setRuntimeTypeInfo([], $V._eval$1(\"JSArray<Map<String*,0*>*>\"));\n      for (t1 = new H.MappedIterator(t2.get$iterator(t1), otherMaps._f); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur.get$isNotEmpty(cur))\n          t3.push(cur);\n      }\n      t3.push(localMap);\n      if (t3.length === 1)\n        return localMap;\n      return Z.MergedMapView$(t3, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    _EnvironmentModule$_0: function(_environment, css, extender, _modulesByVariable, variables, variableNodes, functions, mixins, transitivelyContainsCss, transitivelyContainsExtensions) {\n      return new Q._EnvironmentModule0(_environment._async_environment$_allModules, variables, variableNodes, functions, mixins, extender, css, transitivelyContainsCss, transitivelyContainsExtensions, _environment, _modulesByVariable);\n    },\n    AsyncEnvironment: function AsyncEnvironment(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {\n      var _ = this;\n      _._async_environment$_modules = t0;\n      _._async_environment$_namespaceNodes = t1;\n      _._async_environment$_globalModules = t2;\n      _._async_environment$_globalModuleNodes = t3;\n      _._async_environment$_forwardedModules = t4;\n      _._async_environment$_forwardedModuleNodes = t5;\n      _._async_environment$_nestedForwardedModules = t6;\n      _._async_environment$_allModules = t7;\n      _._async_environment$_variables = t8;\n      _._async_environment$_variableNodes = t9;\n      _._async_environment$_variableIndices = t10;\n      _._async_environment$_functions = t11;\n      _._async_environment$_functionIndices = t12;\n      _._async_environment$_mixins = t13;\n      _._async_environment$_mixinIndices = t14;\n      _._async_environment$_content = t15;\n      _._async_environment$_inMixin = false;\n      _._async_environment$_inSemiGlobalScope = true;\n      _._async_environment$_lastVariableIndex = _._async_environment$_lastVariableName = null;\n    },\n    AsyncEnvironment_importForwards_closure: function AsyncEnvironment_importForwards_closure() {\n    },\n    AsyncEnvironment_importForwards_closure0: function AsyncEnvironment_importForwards_closure0() {\n    },\n    AsyncEnvironment_importForwards_closure1: function AsyncEnvironment_importForwards_closure1() {\n    },\n    AsyncEnvironment_importForwards_closure2: function AsyncEnvironment_importForwards_closure2() {\n    },\n    AsyncEnvironment__getVariableFromGlobalModule_closure: function AsyncEnvironment__getVariableFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment_setVariable_closure: function AsyncEnvironment_setVariable_closure(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    AsyncEnvironment_setVariable_closure0: function AsyncEnvironment_setVariable_closure0(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment_setVariable_closure1: function AsyncEnvironment_setVariable_closure1(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    AsyncEnvironment__getFunctionFromGlobalModule_closure: function AsyncEnvironment__getFunctionFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment__getMixinFromGlobalModule_closure: function AsyncEnvironment__getMixinFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    _EnvironmentModule0: function _EnvironmentModule0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {\n      var _ = this;\n      _.upstream = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.extender = t5;\n      _.css = t6;\n      _.transitivelyContainsCss = t7;\n      _.transitivelyContainsExtensions = t8;\n      _._async_environment$_environment = t9;\n      _._async_environment$_modulesByVariable = t10;\n    },\n    _EnvironmentModule__EnvironmentModule_closure5: function _EnvironmentModule__EnvironmentModule_closure5() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure6: function _EnvironmentModule__EnvironmentModule_closure6() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure7: function _EnvironmentModule__EnvironmentModule_closure7() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure8: function _EnvironmentModule__EnvironmentModule_closure8() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure9: function _EnvironmentModule__EnvironmentModule_closure9() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure10: function _EnvironmentModule__EnvironmentModule_closure10() {\n    },\n    BuiltInCallable$function: function($name, $arguments, callback, url) {\n      return new Q.BuiltInCallable($name, H.setRuntimeTypeInfo([new S.Tuple2(L.ScssParser$(\"@function \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value)], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value));\n    },\n    BuiltInCallable$mixin: function($name, $arguments, callback, url) {\n      return new Q.BuiltInCallable($name, H.setRuntimeTypeInfo([new S.Tuple2(L.ScssParser$(\"@mixin \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), new Q.BuiltInCallable$mixin_closure(callback), type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value)], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value));\n    },\n    BuiltInCallable$overloadedFunction: function($name, overloads) {\n      var t2, t3, t4, t5, t6, t7,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value);\n      for (t2 = overloads.get$entries(overloads), t2 = t2.get$iterator(t2), t3 = type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value, t4 = type$.legacy_String, t5 = type$.legacy_VariableDeclaration; t2.moveNext$0();) {\n        t6 = t2.get$current(t2);\n        t7 = S.SpanScanner$(\"@function \" + $name + \"(\" + H.S(t6.key) + \") {\", null);\n        t1.push(new S.Tuple2(new L.ScssParser(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), t7, C.StderrLogger_false).parseArgumentDeclaration$0(), t6.value, t3));\n      }\n      return new Q.BuiltInCallable($name, t1);\n    },\n    BuiltInCallable: function BuiltInCallable(t0, t1) {\n      this.name = t0;\n      this._overloads = t1;\n    },\n    BuiltInCallable$mixin_closure: function BuiltInCallable$mixin_closure(t0) {\n      this.callback = t0;\n    },\n    _function5: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:meta\");\n    },\n    closure108: function closure108() {\n    },\n    closure109: function closure109() {\n    },\n    closure110: function closure110() {\n    },\n    closure111: function closure111() {\n    },\n    BuiltInModule$: function($name, functions, mixins, variables, $T) {\n      var t4,\n        t1 = P._Uri__Uri(null, $name, null, \"sass\"),\n        t2 = $T._eval$1(\"0*\"),\n        t3 = Q.BuiltInModule__callableMap(functions, t2);\n      t2 = Q.BuiltInModule__callableMap(mixins, t2);\n      t4 = variables == null ? C.Map_empty2 : new P.UnmodifiableMapView(variables, type$.UnmodifiableMapView_of_legacy_String_and_legacy_Value);\n      return new Q.BuiltInModule(t1, t3, t2, t4, $T._eval$1(\"BuiltInModule<0>\"));\n    },\n    BuiltInModule__callableMap: function(callables, $T) {\n      var t3, _i, callable,\n        t1 = type$.legacy_String,\n        t2 = $T._eval$1(\"0*\");\n      if (callables == null)\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);\n      else {\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);\n        for (t3 = callables.length, _i = 0; _i < callables.length; callables.length === t3 || (0, H.throwConcurrentModificationError)(callables), ++_i) {\n          callable = callables[_i];\n          t1.$indexSet(0, callable.get$name(callable), callable);\n        }\n        t1 = new P.UnmodifiableMapView(t1, type$.$env_1_1_legacy_String._bind$1(t2)._eval$1(\"UnmodifiableMapView<1,2>\"));\n      }\n      return new P.UnmodifiableMapView(t1, type$.$env_1_1_legacy_String._bind$1(t2)._eval$1(\"UnmodifiableMapView<1,2>\"));\n    },\n    BuiltInModule: function BuiltInModule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.url = t0;\n      _.functions = t1;\n      _.mixins = t2;\n      _.variables = t3;\n      _.$ti = t4;\n    },\n    closure112: function closure112() {\n    },\n    CssParser: function CssParser(t0, t1, t2) {\n      var _ = this;\n      _._isUseAllowed = true;\n      _._stylesheet$_inMixin = false;\n      _._mixinHasContent = null;\n      _._inParentheses = _._inStyleRule = _._stylesheet$_inUnknownAtRule = _._inControlDirective = _._inContentBlock = false;\n      _._globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    AsyncEnvironment$0: function(sourceMap) {\n      var _null = null,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Module_legacy_AsyncCallable_2,\n        t3 = type$.legacy_AstNode_2,\n        t4 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2),\n        t5 = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Value_2)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Value_2),\n        t6 = sourceMap ? H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t3)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode_2) : _null,\n        t7 = type$.legacy_int,\n        t8 = type$.legacy_AsyncCallable_2,\n        t9 = type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AsyncCallable_2;\n      return new Q.AsyncEnvironment0(P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), P.LinkedHashMap_LinkedHashMap$_empty(t1, t3), P.LinkedHashSet_LinkedHashSet$_empty(t2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), _null, _null, _null, t4, t5, t6, P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), _null);\n    },\n    AsyncEnvironment$_0: function(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, _functions, _mixins, _content) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_int;\n      return new Q.AsyncEnvironment0(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _functions, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _mixins, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _content);\n    },\n    _EnvironmentModule__EnvironmentModule2: function(environment, css, extender, forwarded) {\n      var t1, t2, t3, t4, t5, t6;\n      if (forwarded == null)\n        forwarded = C.Set_empty3;\n      t1 = Q._EnvironmentModule__makeModulesByVariable2(forwarded);\n      t2 = H._instanceType(forwarded);\n      t3 = Q._EnvironmentModule__memberMap2(C.JSArray_methods.get$first(environment._async_environment0$_variables), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure17(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Value0*>*>\")), type$.legacy_Value_2);\n      t4 = environment._async_environment0$_variableNodes;\n      t4 = t4 == null ? null : Q._EnvironmentModule__memberMap2(C.JSArray_methods.get$first(t4), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure18(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AstNode0*>*>\")), type$.legacy_AstNode_2);\n      t2 = t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AsyncCallable0*>*>\");\n      t5 = type$.legacy_AsyncCallable_2;\n      t6 = Q._EnvironmentModule__memberMap2(C.JSArray_methods.get$first(environment._async_environment0$_functions), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure19(), t2), t5);\n      t5 = Q._EnvironmentModule__memberMap2(C.JSArray_methods.get$first(environment._async_environment0$_mixins), new H.EfficientLengthMappedIterable(forwarded, new Q._EnvironmentModule__EnvironmentModule_closure20(), t2), t5);\n      t2 = J.get$isNotEmpty$asx(css.get$children(css)) || C.JSArray_methods.any$1(environment._async_environment0$_allModules, new Q._EnvironmentModule__EnvironmentModule_closure21());\n      return Q._EnvironmentModule$_2(environment, css, extender, t1, t3, t4, t6, t5, t2, !extender.get$isEmpty(extender) || C.JSArray_methods.any$1(environment._async_environment0$_allModules, new Q._EnvironmentModule__EnvironmentModule_closure22()));\n    },\n    _EnvironmentModule__makeModulesByVariable2: function(forwarded) {\n      var modulesByVariable, t1, t2, t3, t4, t5;\n      if (forwarded.get$isEmpty(forwarded))\n        return C.Map_empty11;\n      modulesByVariable = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_Module_legacy_AsyncCallable_2);\n      for (t1 = forwarded.get$iterator(forwarded); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        if (t2 instanceof Q._EnvironmentModule2) {\n          for (t3 = t2._async_environment0$_modulesByVariable, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n            t4 = t3.get$current(t3);\n            t5 = t4.get$variables();\n            B.setAll0(modulesByVariable, t5.get$keys(t5), t4);\n          }\n          B.setAll0(modulesByVariable, J.get$keys$z(C.JSArray_methods.get$first(t2._async_environment0$_environment._async_environment0$_variables)), t2);\n        } else {\n          t3 = t2.get$variables();\n          B.setAll0(modulesByVariable, t3.get$keys(t3), t2);\n        }\n      }\n      return modulesByVariable;\n    },\n    _EnvironmentModule__memberMap2: function(localMap, otherMaps, $V) {\n      var t1, t2, t3, cur;\n      localMap = new U.PublicMemberMapView0(localMap, $V._eval$1(\"PublicMemberMapView0<0*>\"));\n      t1 = otherMaps.__internal$_iterable;\n      t2 = J.getInterceptor$asx(t1);\n      if (t2.get$isEmpty(t1))\n        return localMap;\n      t3 = H.setRuntimeTypeInfo([], $V._eval$1(\"JSArray<Map<String*,0*>*>\"));\n      for (t1 = new H.MappedIterator(t2.get$iterator(t1), otherMaps._f); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur.get$isNotEmpty(cur))\n          t3.push(cur);\n      }\n      t3.push(localMap);\n      if (t3.length === 1)\n        return localMap;\n      return Z.MergedMapView$0(t3, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    _EnvironmentModule$_2: function(_environment, css, extender, _modulesByVariable, variables, variableNodes, functions, mixins, transitivelyContainsCss, transitivelyContainsExtensions) {\n      return new Q._EnvironmentModule2(_environment._async_environment0$_allModules, variables, variableNodes, functions, mixins, extender, css, transitivelyContainsCss, transitivelyContainsExtensions, _environment, _modulesByVariable);\n    },\n    AsyncEnvironment0: function AsyncEnvironment0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {\n      var _ = this;\n      _._async_environment0$_modules = t0;\n      _._async_environment0$_namespaceNodes = t1;\n      _._async_environment0$_globalModules = t2;\n      _._async_environment0$_globalModuleNodes = t3;\n      _._async_environment0$_forwardedModules = t4;\n      _._async_environment0$_forwardedModuleNodes = t5;\n      _._async_environment0$_nestedForwardedModules = t6;\n      _._async_environment0$_allModules = t7;\n      _._async_environment0$_variables = t8;\n      _._async_environment0$_variableNodes = t9;\n      _._async_environment0$_variableIndices = t10;\n      _._async_environment0$_functions = t11;\n      _._async_environment0$_functionIndices = t12;\n      _._async_environment0$_mixins = t13;\n      _._async_environment0$_mixinIndices = t14;\n      _._async_environment0$_content = t15;\n      _._async_environment0$_inMixin = false;\n      _._async_environment0$_inSemiGlobalScope = true;\n      _._async_environment0$_lastVariableIndex = _._async_environment0$_lastVariableName = null;\n    },\n    AsyncEnvironment_importForwards_closure3: function AsyncEnvironment_importForwards_closure3() {\n    },\n    AsyncEnvironment_importForwards_closure4: function AsyncEnvironment_importForwards_closure4() {\n    },\n    AsyncEnvironment_importForwards_closure5: function AsyncEnvironment_importForwards_closure5() {\n    },\n    AsyncEnvironment_importForwards_closure6: function AsyncEnvironment_importForwards_closure6() {\n    },\n    AsyncEnvironment__getVariableFromGlobalModule_closure0: function AsyncEnvironment__getVariableFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment_setVariable_closure2: function AsyncEnvironment_setVariable_closure2(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    AsyncEnvironment_setVariable_closure3: function AsyncEnvironment_setVariable_closure3(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment_setVariable_closure4: function AsyncEnvironment_setVariable_closure4(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    AsyncEnvironment__getFunctionFromGlobalModule_closure0: function AsyncEnvironment__getFunctionFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    AsyncEnvironment__getMixinFromGlobalModule_closure0: function AsyncEnvironment__getMixinFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    _EnvironmentModule2: function _EnvironmentModule2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {\n      var _ = this;\n      _.upstream = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.extender = t5;\n      _.css = t6;\n      _.transitivelyContainsCss = t7;\n      _.transitivelyContainsExtensions = t8;\n      _._async_environment0$_environment = t9;\n      _._async_environment0$_modulesByVariable = t10;\n    },\n    _EnvironmentModule__EnvironmentModule_closure17: function _EnvironmentModule__EnvironmentModule_closure17() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure18: function _EnvironmentModule__EnvironmentModule_closure18() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure19: function _EnvironmentModule__EnvironmentModule_closure19() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure20: function _EnvironmentModule__EnvironmentModule_closure20() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure21: function _EnvironmentModule__EnvironmentModule_closure21() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure22: function _EnvironmentModule__EnvironmentModule_closure22() {\n    },\n    BuiltInCallable$function0: function($name, $arguments, callback, url) {\n      return new Q.BuiltInCallable0($name, H.setRuntimeTypeInfo([new S.Tuple2(L.ScssParser$0(\"@function \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2)], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    },\n    BuiltInCallable$mixin0: function($name, $arguments, callback, url) {\n      return new Q.BuiltInCallable0($name, H.setRuntimeTypeInfo([new S.Tuple2(L.ScssParser$0(\"@mixin \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), new Q.BuiltInCallable$mixin_closure0(callback), type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2)], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    },\n    BuiltInCallable$parsed: function($name, $arguments, callback) {\n      return new Q.BuiltInCallable0($name, H.setRuntimeTypeInfo([new S.Tuple2($arguments, callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2)], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    },\n    BuiltInCallable$overloadedFunction0: function($name, overloads) {\n      var t2, t3, t4, t5, t6, t7,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2);\n      for (t2 = overloads.get$entries(overloads), t2 = t2.get$iterator(t2), t3 = type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2, t4 = type$.legacy_String, t5 = type$.legacy_VariableDeclaration_2; t2.moveNext$0();) {\n        t6 = t2.get$current(t2);\n        t7 = S.SpanScanner$(\"@function \" + $name + \"(\" + H.S(t6.key) + \") {\", null);\n        t1.push(new S.Tuple2(new L.ScssParser0(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), t7, C.C_StderrLogger).parseArgumentDeclaration$0(), t6.value, t3));\n      }\n      return new Q.BuiltInCallable0($name, t1);\n    },\n    BuiltInCallable0: function BuiltInCallable0(t0, t1) {\n      this.name = t0;\n      this._built_in$_overloads = t1;\n    },\n    BuiltInCallable$mixin_closure0: function BuiltInCallable$mixin_closure0(t0) {\n      this.callback = t0;\n    },\n    BuiltInModule$0: function($name, functions, mixins, variables, $T) {\n      var t4,\n        t1 = P._Uri__Uri(null, $name, null, \"sass\"),\n        t2 = $T._eval$1(\"0*\"),\n        t3 = Q.BuiltInModule__callableMap0(functions, t2);\n      t2 = Q.BuiltInModule__callableMap0(mixins, t2);\n      t4 = variables == null ? C.Map_empty8 : new P.UnmodifiableMapView(variables, type$.UnmodifiableMapView_of_legacy_String_and_legacy_Value_2);\n      return new Q.BuiltInModule0(t1, t3, t2, t4, $T._eval$1(\"BuiltInModule0<0>\"));\n    },\n    BuiltInModule__callableMap0: function(callables, $T) {\n      var t3, _i, callable,\n        t1 = type$.legacy_String,\n        t2 = $T._eval$1(\"0*\");\n      if (callables == null)\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);\n      else {\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);\n        for (t3 = callables.length, _i = 0; _i < callables.length; callables.length === t3 || (0, H.throwConcurrentModificationError)(callables), ++_i) {\n          callable = callables[_i];\n          t1.$indexSet(0, callable.get$name(callable), callable);\n        }\n        t1 = new P.UnmodifiableMapView(t1, type$.$env_1_1_legacy_String._bind$1(t2)._eval$1(\"UnmodifiableMapView<1,2>\"));\n      }\n      return new P.UnmodifiableMapView(t1, type$.$env_1_1_legacy_String._bind$1(t2)._eval$1(\"UnmodifiableMapView<1,2>\"));\n    },\n    BuiltInModule0: function BuiltInModule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.url = t0;\n      _.functions = t1;\n      _.mixins = t2;\n      _.variables = t3;\n      _.$ti = t4;\n    },\n    ContentRule0: function ContentRule0(t0, t1) {\n      this.span = t0;\n      this.$arguments = t1;\n    },\n    closure227: function closure227() {\n    },\n    CssParser0: function CssParser0(t0, t1, t2) {\n      var _ = this;\n      _._stylesheet0$_isUseAllowed = true;\n      _._stylesheet0$_inMixin = false;\n      _._stylesheet0$_mixinHasContent = null;\n      _._stylesheet0$_inParentheses = _._stylesheet0$_inStyleRule = _._stylesheet0$_inUnknownAtRule = _._stylesheet0$_inControlDirective = _._stylesheet0$_inContentBlock = false;\n      _._stylesheet0$_globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    DebugRule0: function DebugRule0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    _function12: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:meta\");\n    },\n    closure223: function closure223() {\n    },\n    closure224: function closure224() {\n    },\n    closure225: function closure225() {\n    },\n    closure226: function closure226() {\n    },\n    StaticImport0: function StaticImport0(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.supports = t1;\n      _.media = t2;\n      _.span = t3;\n    }\n  },\n  B = {ReplAdapter: function ReplAdapter(t0) {\n      this.repl = t0;\n      this.rl = null;\n    }, ReplAdapter_runAsync_closure: function ReplAdapter_runAsync_closure(t0) {\n      this.controller = t0;\n    }, Stdin: function Stdin() {\n    }, Stdout: function Stdout() {\n    }, ReadlineModule: function ReadlineModule() {\n    }, ReadlineOptions: function ReadlineOptions() {\n    }, ReadlineInterface: function ReadlineInterface() {\n    },\n    defaultCompare: function($T) {\n      return new B.defaultCompare_closure($T);\n    },\n    defaultCompare_closure: function defaultCompare_closure(t0) {\n      this.T = t0;\n    },\n    InternalStyle: function InternalStyle() {\n    },\n    ModifiableCssNode: function ModifiableCssNode() {\n    },\n    ModifiableCssParentNode: function ModifiableCssParentNode() {\n    },\n    ModifiableCssSupportsRule$: function(condition, span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      return new B.ModifiableCssSupportsRule(condition, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode), t1);\n    },\n    ModifiableCssSupportsRule: function ModifiableCssSupportsRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _._children = t3;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    CssNode: function CssNode() {\n    },\n    CssParentNode: function CssParentNode() {\n    },\n    AstNode: function AstNode() {\n    },\n    _FakeAstNode: function _FakeAstNode(t0) {\n      this._callback = t0;\n    },\n    ArgumentDeclaration_ArgumentDeclaration$parse: function(contents, url) {\n      return L.ScssParser$(contents, null, url).parseArgumentDeclaration$0();\n    },\n    ArgumentDeclaration: function ArgumentDeclaration(t0, t1, t2) {\n      this.$arguments = t0;\n      this.restArgument = t1;\n      this.span = t2;\n    },\n    ArgumentDeclaration_verify_closure: function ArgumentDeclaration_verify_closure() {\n    },\n    ArgumentDeclaration_verify_closure0: function ArgumentDeclaration_verify_closure0() {\n    },\n    DynamicImport: function DynamicImport(t0, t1) {\n      this.url = t0;\n      this.span = t1;\n    },\n    ForRule$: function(variable, from, to, children, span, exclusive) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new B.ForRule(variable, from, to, exclusive, span, t1, t2);\n    },\n    ForRule: function ForRule(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.variable = t0;\n      _.from = t1;\n      _.to = t2;\n      _.isExclusive = t3;\n      _.span = t4;\n      _.children = t5;\n      _.hasDeclarations = t6;\n    },\n    ImportRule: function ImportRule(t0, t1) {\n      this.imports = t0;\n      this.span = t1;\n    },\n    ReturnRule: function ReturnRule(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    SilentComment: function SilentComment(t0, t1) {\n      this.text = t0;\n      this.span = t1;\n    },\n    SupportsRule$: function(condition, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new B.SupportsRule(condition, span, t1, t2);\n    },\n    SupportsRule: function SupportsRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    ExecutableOptions__separator: function(text) {\n      var t1 = $.$get$ExecutableOptions__separatorBar(),\n        t2 = C.JSString_methods.$mul(t1, 3) + \" \";\n      t2 = t2 + (B.hasTerminal() ? \"\\x1b[1m\" : \"\") + text;\n      return t2 + (B.hasTerminal() ? \"\\x1b[0m\" : \"\") + \" \" + C.JSString_methods.$mul(t1, 35 - text.length);\n    },\n    ExecutableOptions__fail: function(message) {\n      return H.throwExpression(B.UsageException$(message));\n    },\n    ExecutableOptions_ExecutableOptions$parse: function(args) {\n      var options, error, t1, exception;\n      try {\n        t1 = $.$get$ExecutableOptions__parser();\n        t1.toString;\n        t1 = G.Parser$(null, t1, P.ListQueue_ListQueue$of(args, type$.legacy_String), null, null).parse$0();\n        if (t1.wasParsed$1(\"poll\") && !H._asBoolS(t1.$index(0, \"watch\")))\n          B.ExecutableOptions__fail(\"--poll may not be passed without --watch.\");\n        options = new B.ExecutableOptions(t1);\n        if (H._asBoolS(options._options.$index(0, \"help\")))\n          B.ExecutableOptions__fail(\"Compile Sass to CSS.\");\n        return options;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_FormatException._is(t1)) {\n          error = t1;\n          B.ExecutableOptions__fail(J.get$message$x(error));\n        } else\n          throw exception;\n      }\n    },\n    UsageException$: function(message) {\n      return new B.UsageException(message);\n    },\n    ExecutableOptions: function ExecutableOptions(t0) {\n      var _ = this;\n      _._options = t0;\n      _._sourceDirectoriesToDestinations = _._sourcesToDestinations = _._interactive = null;\n    },\n    ExecutableOptions_closure: function ExecutableOptions_closure() {\n    },\n    ExecutableOptions_emitErrorCss_closure: function ExecutableOptions_emitErrorCss_closure() {\n    },\n    UsageException: function UsageException(t0) {\n      this.message = t0;\n    },\n    AsyncImporter: function AsyncImporter() {\n    },\n    inImportRule: function(callback) {\n      var t1,\n        wasInImportRule = $._inImportRule;\n      $._inImportRule = true;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } finally {\n        $._inImportRule = wasInImportRule;\n      }\n    },\n    resolveImportPath: function(path) {\n      var t1,\n        extension = X.ParsedPath_ParsedPath$parse(path, $.$get$context().style)._splitExtension$1(1)[1];\n      if (extension === \".sass\" || extension === \".scss\" || extension === \".css\") {\n        t1 = $._inImportRule ? new B.resolveImportPath_closure(path, extension).call$0() : null;\n        return t1 == null ? B._exactlyOne(B._tryPath(path)) : t1;\n      }\n      t1 = $._inImportRule ? new B.resolveImportPath_closure0(path).call$0() : null;\n      if (t1 == null)\n        t1 = B._exactlyOne(B._tryPathWithExtensions(path));\n      return t1 == null ? B._tryPathAsDirectory(path) : t1;\n    },\n    _tryPathWithExtensions: function(path) {\n      var result = B._tryPath(path + \".sass\");\n      C.JSArray_methods.addAll$1(result, B._tryPath(path + \".scss\"));\n      return result.length !== 0 ? result : B._tryPath(path + \".css\");\n    },\n    _tryPath: function(path) {\n      var t1 = $.$get$context(),\n        partial = D.join(t1.dirname$1(path), \"_\" + H.S(X.ParsedPath_ParsedPath$parse(path, t1.style).get$basename()), null);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      if (B.fileExists(partial))\n        t1.push(partial);\n      if (B.fileExists(path))\n        t1.push(path);\n      return t1;\n    },\n    _tryPathAsDirectory: function(path) {\n      var t1;\n      if (!B.dirExists(path))\n        return null;\n      t1 = $._inImportRule ? new B._tryPathAsDirectory_closure(path).call$0() : null;\n      return t1 == null ? B._exactlyOne(B._tryPathWithExtensions(D.join(path, \"index\", null))) : t1;\n    },\n    _exactlyOne: function(paths) {\n      var t1 = paths.length;\n      if (t1 === 0)\n        return null;\n      if (t1 === 1)\n        return C.JSArray_methods.get$first(paths);\n      throw H.wrapException(string$.It_s_n + C.JSArray_methods.map$1$1(paths, new B._exactlyOne_closure(), type$.legacy_String).join$1(0, \"\\n\"));\n    },\n    resolveImportPath_closure: function resolveImportPath_closure(t0, t1) {\n      this.path = t0;\n      this.extension = t1;\n    },\n    resolveImportPath_closure0: function resolveImportPath_closure0(t0) {\n      this.path = t0;\n    },\n    _tryPathAsDirectory_closure: function _tryPathAsDirectory_closure(t0) {\n      this.path = t0;\n    },\n    _exactlyOne_closure: function _exactlyOne_closure() {\n    },\n    readFile: function(path) {\n      var sourceFile, t1, i,\n        contents = H._asStringS(B._readFile(path, \"utf8\"));\n      if (!J.getInterceptor$asx(contents).contains$1(contents, \"\\ufffd\"))\n        return contents;\n      sourceFile = Y.SourceFile$fromString(contents, $.$get$context().toUri$1(path));\n      for (t1 = contents.length, i = 0; i < t1; ++i) {\n        if (C.JSString_methods._codeUnitAt$1(contents, i) !== 65533)\n          continue;\n        throw H.wrapException(E.SassException$(\"Invalid UTF-8.\", Y.FileLocation$_(sourceFile, i).pointSpan$0()));\n      }\n      return contents;\n    },\n    _readFile: function(path, encoding) {\n      return B._systemErrorToFileSystemException(new B._readFile_closure(path, encoding));\n    },\n    writeFile: function(path, contents) {\n      return B._systemErrorToFileSystemException(new B.writeFile_closure(path, contents));\n    },\n    deleteFile: function(path) {\n      return B._systemErrorToFileSystemException(new B.deleteFile_closure(path));\n    },\n    readStdin: function() {\n      return B.readStdin$body();\n    },\n    readStdin$body: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, sink, t1, t2, completer;\n      var $async$readStdin = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              t2 = new P._Future($.Zone__current, type$._Future_legacy_String);\n              completer = new P._AsyncCompleter(t2, type$._AsyncCompleter_legacy_String);\n              t1.contents = null;\n              sink = C.Utf8Decoder_false.startChunkedConversion$1(new P._StringCallbackSink(new B.readStdin_closure(t1, completer), new P.StringBuffer(\"\")));\n              J.on$2$x(J.get$stdin$x(self.process), \"data\", P.allowInterop(new B.readStdin_closure0(sink)));\n              J.on$2$x(J.get$stdin$x(self.process), \"end\", P.allowInterop(new B.readStdin_closure1(sink)));\n              J.on$2$x(J.get$stdin$x(self.process), \"error\", P.allowInterop(new B.readStdin_closure2(completer)));\n              $async$returnValue = t2;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$readStdin, $async$completer);\n    },\n    fileExists: function(path) {\n      return B._systemErrorToFileSystemException(new B.fileExists_closure(path));\n    },\n    dirExists: function(path) {\n      return B._systemErrorToFileSystemException(new B.dirExists_closure(path));\n    },\n    ensureDir: function(path) {\n      return B._systemErrorToFileSystemException(new B.ensureDir_closure(path));\n    },\n    listDir: function(path, recursive) {\n      return B._systemErrorToFileSystemException(new B.listDir_closure(recursive, path));\n    },\n    modificationTime: function(path) {\n      return B._systemErrorToFileSystemException(new B.modificationTime_closure(path));\n    },\n    _systemErrorToFileSystemException: function(callback) {\n      var error, systemError, t1, exception, t2;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        t1 = systemError;\n        t2 = J.getInterceptor$x(t1);\n        throw H.wrapException(new B.FileSystemException(J.substring$2$s(t2.get$message(t1), (H.S(t2.get$code(t1)) + \": \").length, J.get$length$asx(t2.get$message(t1)) - (\", \" + H.S(t2.get$syscall(t1)) + \" '\" + H.S(t2.get$path(t1)) + \"'\").length), J.get$path$x(systemError)));\n      }\n    },\n    hasTerminal: function() {\n      var t1 = J.get$isTTY$x(J.get$stdout$x(self.process));\n      return t1 == null ? false : t1;\n    },\n    isWindows: function() {\n      return J.$eq$(J.get$platform$x(self.process), \"win32\");\n    },\n    watchDir: function(path, poll) {\n      var t2, t3, t1 = {},\n        watcher = J.watch$2$x(self.chokidar, path, {disableGlobbing: true, usePolling: poll});\n      t1.controller = null;\n      t2 = J.getInterceptor$x(watcher);\n      t2.on$2(watcher, \"add\", P.allowInterop(new B.watchDir_closure(t1)));\n      t2.on$2(watcher, \"change\", P.allowInterop(new B.watchDir_closure0(t1)));\n      t2.on$2(watcher, \"unlink\", P.allowInterop(new B.watchDir_closure1(t1)));\n      t2.on$2(watcher, \"error\", P.allowInterop(new B.watchDir_closure2(t1)));\n      t3 = new P._Future($.Zone__current, type$._Future_legacy_Stream_legacy_WatchEvent);\n      t2.on$2(watcher, \"ready\", P.allowInterop(new B.watchDir_closure3(t1, watcher, new P._AsyncCompleter(t3, type$._AsyncCompleter_legacy_Stream_legacy_WatchEvent))));\n      return t3;\n    },\n    FileSystemException: function FileSystemException(t0, t1) {\n      this.message = t0;\n      this.path = t1;\n    },\n    Stderr: function Stderr(t0) {\n      this._stderr = t0;\n    },\n    _readFile_closure: function _readFile_closure(t0, t1) {\n      this.path = t0;\n      this.encoding = t1;\n    },\n    writeFile_closure: function writeFile_closure(t0, t1) {\n      this.path = t0;\n      this.contents = t1;\n    },\n    deleteFile_closure: function deleteFile_closure(t0) {\n      this.path = t0;\n    },\n    readStdin_closure: function readStdin_closure(t0, t1) {\n      this._box_0 = t0;\n      this.completer = t1;\n    },\n    readStdin_closure0: function readStdin_closure0(t0) {\n      this.sink = t0;\n    },\n    readStdin_closure1: function readStdin_closure1(t0) {\n      this.sink = t0;\n    },\n    readStdin_closure2: function readStdin_closure2(t0) {\n      this.completer = t0;\n    },\n    fileExists_closure: function fileExists_closure(t0) {\n      this.path = t0;\n    },\n    dirExists_closure: function dirExists_closure(t0) {\n      this.path = t0;\n    },\n    ensureDir_closure: function ensureDir_closure(t0) {\n      this.path = t0;\n    },\n    listDir_closure: function listDir_closure(t0, t1) {\n      this.recursive = t0;\n      this.path = t1;\n    },\n    listDir__closure: function listDir__closure(t0) {\n      this.path = t0;\n    },\n    listDir__closure0: function listDir__closure0() {\n    },\n    listDir_closure_list: function listDir_closure_list() {\n    },\n    listDir__list_closure: function listDir__list_closure(t0, t1) {\n      this.parent = t0;\n      this.list = t1;\n    },\n    modificationTime_closure: function modificationTime_closure(t0) {\n      this.path = t0;\n    },\n    watchDir_closure: function watchDir_closure(t0) {\n      this._box_0 = t0;\n    },\n    watchDir_closure0: function watchDir_closure0(t0) {\n      this._box_0 = t0;\n    },\n    watchDir_closure1: function watchDir_closure1(t0) {\n      this._box_0 = t0;\n    },\n    watchDir_closure2: function watchDir_closure2(t0) {\n      this._box_0 = t0;\n    },\n    watchDir_closure3: function watchDir_closure3(t0, t1, t2) {\n      this._box_0 = t0;\n      this.watcher = t1;\n      this.completer = t2;\n    },\n    watchDir__closure: function watchDir__closure(t0) {\n      this.watcher = t0;\n    },\n    ShadowedModuleView_ifNecessary: function(inner, functions, mixins, variables, $T) {\n      var t1;\n      if (B.ShadowedModuleView__needsBlacklist(inner.get$variables(), variables) || B.ShadowedModuleView__needsBlacklist(inner.get$functions(inner), functions) || B.ShadowedModuleView__needsBlacklist(inner.get$mixins(), mixins)) {\n        t1 = $T._eval$1(\"0*\");\n        t1 = new B.ShadowedModuleView(inner, B.ShadowedModuleView__shadowedMap(inner.get$variables(), variables, type$.legacy_Value), B.ShadowedModuleView__shadowedMap(inner.get$variableNodes(), variables, type$.legacy_AstNode), B.ShadowedModuleView__shadowedMap(inner.get$functions(inner), functions, t1), B.ShadowedModuleView__shadowedMap(inner.get$mixins(), mixins, t1), $T._eval$1(\"ShadowedModuleView<0*>\"));\n      } else\n        t1 = null;\n      return t1;\n    },\n    ShadowedModuleView__shadowedMap: function(map, blocklist, $V) {\n      if (map == null || !B.ShadowedModuleView__needsBlacklist(map, blocklist))\n        return map;\n      return K.LimitedMapView$blocklist(map, blocklist, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    ShadowedModuleView__needsBlacklist: function(map, blocklist) {\n      var t1 = map.get$isNotEmpty(map) && blocklist.any$1(0, map.get$containsKey());\n      return t1;\n    },\n    ShadowedModuleView: function ShadowedModuleView(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._shadowed_view$_inner = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.$ti = t5;\n    },\n    _PropertyDescriptor: function _PropertyDescriptor() {\n    },\n    toSentence: function(iter, conjunction) {\n      var t1 = iter.__internal$_iterable,\n        t2 = J.getInterceptor$asx(t1);\n      if (t2.get$length(t1) === 1)\n        return J.toString$0$(iter._f.call$1(t2.get$first(t1)));\n      return H.TakeIterable_TakeIterable(iter, t2.get$length(t1) - 1, H._instanceType(iter)._eval$1(\"Iterable.E\")).join$1(0, \", \") + (\" \" + conjunction + \" \" + H.S(iter._f.call$1(t2.get$last(t1))));\n    },\n    indent: function(string, indentation) {\n      return new H.MappedListIterable(H.setRuntimeTypeInfo(string.split(\"\\n\"), type$.JSArray_String), new B.indent_closure(indentation), type$.MappedListIterable_of_String_and_legacy_String).join$1(0, \"\\n\");\n    },\n    pluralize: function($name, number, plural) {\n      if (number === 1)\n        return $name;\n      if (plural != null)\n        return plural;\n      return $name + \"s\";\n    },\n    trimAscii: function(string, excludeEscape) {\n      var start = B._firstNonWhitespace(string);\n      return start == null ? \"\" : J.substring$2$s(string, start, B._lastNonWhitespace(string, true) + 1);\n    },\n    trimAsciiRight: function(string, excludeEscape) {\n      var end = B._lastNonWhitespace(string, excludeEscape);\n      return end == null ? \"\" : J.substring$2$s(string, 0, end + 1);\n    },\n    _firstNonWhitespace: function(string) {\n      var t1, i, t2;\n      for (t1 = string.length, i = 0; i < t1; ++i) {\n        t2 = C.JSString_methods._codeUnitAt$1(string, i);\n        if (!(t2 === 32 || t2 === 9 || t2 === 10 || t2 === 13 || t2 === 12))\n          return i;\n      }\n      return null;\n    },\n    _lastNonWhitespace: function(string, excludeEscape) {\n      var t1, i, t2, codeUnit;\n      for (t1 = string.length, i = t1 - 1, t2 = J.getInterceptor$s(string); i >= 0; --i) {\n        codeUnit = t2.codeUnitAt$1(string, i);\n        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))\n          if (excludeEscape && i !== 0 && i !== t1 && codeUnit === 92)\n            return i + 1;\n          else\n            return i;\n      }\n      return null;\n    },\n    isPublic: function(member) {\n      var start = J._codeUnitAt$1$s(member, 0);\n      return start !== 45 && start !== 95;\n    },\n    flattenVertically: function(iterable, $T) {\n      var result,\n        t1 = iterable.$ti._eval$1(\"@<ListIterable.E>\")._bind$1($T._eval$1(\"QueueList<0*>*\"))._eval$1(\"MappedListIterable<1,2>\"),\n        queues = P.List_List$from(new H.MappedListIterable(iterable, new B.flattenVertically_closure($T), t1), true, t1._eval$1(\"ListIterable.E\"));\n      if (queues.length === 1)\n        return C.JSArray_methods.get$first(queues);\n      result = H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<0*>\"));\n      for (; queues.length !== 0;) {\n        if (!!queues.fixed$length)\n          H.throwExpression(P.UnsupportedError$(\"removeWhere\"));\n        C.JSArray_methods._removeWhere$2(queues, new B.flattenVertically_closure0(result, $T), true);\n      }\n      return result;\n    },\n    firstOrNull: function(iterable) {\n      var iterator = J.get$iterator$ax(iterable);\n      return iterator.moveNext$0() ? iterator.get$current(iterator) : null;\n    },\n    codepointIndexToCodeUnitIndex: function(string, codepointIndex) {\n      var t1, codeUnitIndex, i, codeUnitIndex0, t2;\n      for (t1 = J.getInterceptor$s(string), codeUnitIndex = 0, i = 0; i < codepointIndex; ++i) {\n        codeUnitIndex0 = codeUnitIndex + 1;\n        t2 = t1._codeUnitAt$1(string, codeUnitIndex);\n        codeUnitIndex = t2 >= 55296 && t2 <= 56319 ? codeUnitIndex0 + 1 : codeUnitIndex0;\n      }\n      return codeUnitIndex;\n    },\n    codeUnitIndexToCodepointIndex: function(string, codeUnitIndex) {\n      var t1, codepointIndex, i, t2;\n      for (t1 = J.getInterceptor$s(string), codepointIndex = 0, i = 0; i < codeUnitIndex; i = (t2 >= 55296 && t2 <= 56319 ? i + 1 : i) + 1) {\n        ++codepointIndex;\n        t2 = t1._codeUnitAt$1(string, i);\n      }\n      return codepointIndex;\n    },\n    frameForSpan: function(span, member, url) {\n      var t2, t3, t4,\n        t1 = url == null ? span.file.url : url;\n      if (t1 == null)\n        t1 = $.$get$_noSourceUrl();\n      t2 = span.file;\n      t3 = span._file$_start;\n      t4 = Y.FileLocation$_(t2, t3);\n      t4 = t4.file.getLine$1(t4.offset);\n      t3 = Y.FileLocation$_(t2, t3);\n      return new A.Frame(t1, t4 + 1, t3.file.getColumn$1(t3.offset) + 1, member);\n    },\n    spanForList: function(nodes) {\n      var t1, left, right, _null = null;\n      if (nodes.length === 0)\n        return _null;\n      t1 = C.JSArray_methods.get$first(nodes);\n      left = t1 == null ? _null : t1.get$span();\n      if (left == null)\n        return _null;\n      t1 = C.JSArray_methods.get$last(nodes);\n      right = t1 == null ? _null : t1.get$span();\n      if (right == null)\n        return _null;\n      return left.expand$1(0, right);\n    },\n    declarationName: function(span) {\n      var text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, span._file$_start, span._end), 0, null);\n      return B.trimAsciiRight(C.JSString_methods.substring$2(text, 0, C.JSString_methods.indexOf$1(text, \":\")), false);\n    },\n    unvendor: function($name) {\n      var i,\n        t1 = $name.length;\n      if (t1 < 2)\n        return $name;\n      if (J.getInterceptor$s($name)._codeUnitAt$1($name, 0) !== 45)\n        return $name;\n      if (C.JSString_methods._codeUnitAt$1($name, 1) === 45)\n        return $name;\n      for (i = 2; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1($name, i) === 45)\n          return C.JSString_methods.substring$1($name, i + 1);\n      return $name;\n    },\n    equalsIgnoreCase: function(string1, string2) {\n      var t1, i;\n      if (string1 == string2)\n        return true;\n      if (string1 == null || string2 == null)\n        return false;\n      t1 = string1.length;\n      if (t1 !== string2.length)\n        return false;\n      for (i = 0; i < t1; ++i)\n        if (!T.characterEqualsIgnoreCase(C.JSString_methods._codeUnitAt$1(string1, i), C.JSString_methods._codeUnitAt$1(string2, i)))\n          return false;\n      return true;\n    },\n    startsWithIgnoreCase: function(string, prefix) {\n      var t2, i,\n        t1 = prefix.length;\n      if (string.length < t1)\n        return false;\n      for (t2 = J.getInterceptor$s(string), i = 0; i < t1; ++i)\n        if (!T.characterEqualsIgnoreCase(t2._codeUnitAt$1(string, i), C.JSString_methods._codeUnitAt$1(prefix, i)))\n          return false;\n      return true;\n    },\n    mapInPlace: function(list, $function) {\n      var i;\n      for (i = 0; i < list.length; ++i)\n        list[i] = $function.call$1(list[i]);\n    },\n    longestCommonSubsequence: function(list1, list2, select, $T) {\n      var t1, lengths, selections, t2, i, i0, j, selection, t3, j0, t4, t5;\n      if (select == null)\n        select = new B.longestCommonSubsequence_closure($T);\n      t1 = J.getInterceptor$asx(list1);\n      lengths = P.List_List$generate(t1.get$length(list1) + 1, new B.longestCommonSubsequence_closure0(list2), false, type$.legacy_List_legacy_int);\n      selections = P.List_List$generate(t1.get$length(list1), new B.longestCommonSubsequence_closure1(list2, $T), false, $T._eval$1(\"List<0*>*\"));\n      for (t2 = J.getInterceptor$asx(list2), i = 0; i < t1.get$length(list1); i = i0)\n        for (i0 = i + 1, j = 0; j < t2.get$length(list2); j = j0) {\n          selection = select.call$2(t1.$index(list1, i), t2.$index(list2, j));\n          J.$indexSet$ax(selections[i], j, selection);\n          t3 = lengths[i0];\n          j0 = j + 1;\n          if (selection == null) {\n            t4 = J.$index$asx(t3, j);\n            t5 = J.$index$asx(lengths[i], j0);\n            t5 = Math.max(H.checkNum(t4), H.checkNum(t5));\n            t4 = t5;\n          } else\n            t4 = J.$index$asx(lengths[i], j) + 1;\n          J.$indexSet$ax(t3, j0, t4);\n        }\n      return new B.longestCommonSubsequence_backtrack(selections, lengths, $T).call$2(t1.get$length(list1) - 1, t2.get$length(list2) - 1);\n    },\n    removeFirstWhere: function(list, test, orElse) {\n      var toRemove, element,\n        t1 = list.length,\n        _i = 0;\n      while (true) {\n        if (!(_i < list.length)) {\n          toRemove = null;\n          break;\n        }\n        c$0: {\n          element = list[_i];\n          if (!test.call$1(element))\n            break c$0;\n          toRemove = element;\n          break;\n        }\n        list.length === t1 || (0, H.throwConcurrentModificationError)(list);\n        ++_i;\n      }\n      if (toRemove == null)\n        return orElse.call$0();\n      else {\n        C.JSArray_methods.remove$1(list, toRemove);\n        return toRemove;\n      }\n    },\n    mapAddAll2: function(destination, source, K1, K2, $V) {\n      source.forEach$1(0, new B.mapAddAll2_closure(destination, K1, K2, $V));\n    },\n    setAll: function(map, keys, value) {\n      var t1;\n      for (t1 = J.get$iterator$ax(keys); t1.moveNext$0();)\n        map.$indexSet(0, t1.get$current(t1), value);\n    },\n    rotateSlice: function(list, start, end) {\n      var i, next,\n        element = list.$index(0, end - 1);\n      for (i = start; i < end; ++i, element = next) {\n        next = list.$index(0, i);\n        list.$indexSet(0, i, element);\n      }\n    },\n    mapAsync: function(iterable, callback, $E, $F) {\n      return B.mapAsync$body(iterable, callback, $E, $F, $F._eval$1(\"Iterable<0*>*\"));\n    },\n    mapAsync$body: function(iterable, callback, $E, $F, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, t2, _i, t1, $async$temp1;\n      var $async$mapAsync = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = H.setRuntimeTypeInfo([], $F._eval$1(\"JSArray<0*>\"));\n              t2 = iterable.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$temp1 = t1;\n              $async$goto = 6;\n              return P._asyncAwait(callback.call$1(iterable[_i]), $async$mapAsync);\n            case 6:\n              // returning from await.\n              $async$temp1.push($async$result);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$mapAsync, $async$completer);\n    },\n    putIfAbsentAsync: function(map, key, ifAbsent, $K, $V) {\n      return B.putIfAbsentAsync$body(map, key, ifAbsent, $K, $V, $V._eval$1(\"0*\"));\n    },\n    putIfAbsentAsync$body: function(map, key, ifAbsent, $K, $V, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, value;\n      var $async$putIfAbsentAsync = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (map.containsKey$1(key)) {\n                $async$returnValue = map.$index(0, key);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait(ifAbsent.call$0(), $async$putIfAbsentAsync);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              map.$indexSet(0, key, value);\n              $async$returnValue = value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$putIfAbsentAsync, $async$completer);\n    },\n    copyMapOfMap: function(map, K1, K2, $V) {\n      var t2, t3, t4, t5, t6, t7,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(K1._eval$1(\"0*\"), K2._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"Map<1*,2*>*\"));\n      for (t2 = map.get$entries(map), t2 = t2.get$iterator(t2), t3 = K2._eval$1(\"0*\"), t4 = $V._eval$1(\"0*\"); t2.moveNext$0();) {\n        t5 = t2.get$current(t2);\n        t6 = t5.key;\n        t5 = t5.value;\n        t7 = P.LinkedHashMap_LinkedHashMap(null, null, null, t3, t4);\n        t7.addAll$1(0, t5);\n        t1.$indexSet(0, t6, t7);\n      }\n      return t1;\n    },\n    copyMapOfList: function(map, $K, $E) {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty($K._eval$1(\"0*\"), $E._eval$1(\"List<0*>*\"));\n      for (t2 = map.get$entries(map), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, t3.key, J.toList$0$ax(t3.value));\n      }\n      return t1;\n    },\n    SpanExtensions_trim: function(_this) {\n      var t3, end, end0,\n        t1 = _this.file,\n        t2 = _this._file$_start,\n        text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t2, _this._end), 0, null),\n        start = 0;\n      while (true) {\n        t3 = C.JSString_methods._codeUnitAt$1(text, start);\n        if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n          break;\n        ++start;\n      }\n      end = text.length - 1;\n      end0 = end;\n      while (true) {\n        t3 = C.JSString_methods.codeUnitAt$1(text, end0);\n        if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n          break;\n        --end0;\n      }\n      return start === 0 && end0 === end ? _this : t1.span$2(Y.FileLocation$_(t1, t2).offset + start, Y.FileLocation$_(t1, t2).offset + end0 + 1);\n    },\n    indent_closure: function indent_closure(t0) {\n      this.indentation = t0;\n    },\n    flattenVertically_closure: function flattenVertically_closure(t0) {\n      this.T = t0;\n    },\n    flattenVertically_closure0: function flattenVertically_closure0(t0, t1) {\n      this.result = t0;\n      this.T = t1;\n    },\n    longestCommonSubsequence_closure: function longestCommonSubsequence_closure(t0) {\n      this.T = t0;\n    },\n    longestCommonSubsequence_closure0: function longestCommonSubsequence_closure0(t0) {\n      this.list2 = t0;\n    },\n    longestCommonSubsequence_closure1: function longestCommonSubsequence_closure1(t0, t1) {\n      this.list2 = t0;\n      this.T = t1;\n    },\n    longestCommonSubsequence_backtrack: function longestCommonSubsequence_backtrack(t0, t1, t2) {\n      this.selections = t0;\n      this.lengths = t1;\n      this.T = t2;\n    },\n    mapAddAll2_closure: function mapAddAll2_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.destination = t0;\n      _.K1 = t1;\n      _.K2 = t2;\n      _.V = t3;\n    },\n    ArgumentDeclaration_ArgumentDeclaration$parse0: function(contents, url) {\n      return L.ScssParser$0(contents, null, url).parseArgumentDeclaration$0();\n    },\n    ArgumentDeclaration0: function ArgumentDeclaration0(t0, t1, t2) {\n      this.$arguments = t0;\n      this.restArgument = t1;\n      this.span = t2;\n    },\n    ArgumentDeclaration_verify_closure1: function ArgumentDeclaration_verify_closure1() {\n    },\n    ArgumentDeclaration_verify_closure2: function ArgumentDeclaration_verify_closure2() {\n    },\n    AsyncImporter0: function AsyncImporter0() {\n    },\n    DynamicImport0: function DynamicImport0(t0, t1) {\n      this.url = t0;\n      this.span = t1;\n    },\n    ForRule$0: function(variable, from, to, children, span, exclusive) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new B.ForRule0(variable, from, to, exclusive, span, t1, t2);\n    },\n    ForRule0: function ForRule0(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.variable = t0;\n      _.from = t1;\n      _.to = t2;\n      _.isExclusive = t3;\n      _.span = t4;\n      _.children = t5;\n      _.hasDeclarations = t6;\n    },\n    ImportRule0: function ImportRule0(t0, t1) {\n      this.imports = t0;\n      this.span = t1;\n    },\n    AstNode0: function AstNode0() {\n    },\n    _FakeAstNode0: function _FakeAstNode0(t0) {\n      this._node3$_callback = t0;\n    },\n    CssNode0: function CssNode0() {\n    },\n    CssParentNode0: function CssParentNode0() {\n    },\n    readFile0: function(path) {\n      var sourceFile, t1, i,\n        contents = H._asStringS(B._readFile0(path, \"utf8\"));\n      if (!J.getInterceptor$asx(contents).contains$1(contents, \"\\ufffd\"))\n        return contents;\n      sourceFile = Y.SourceFile$fromString(contents, $.$get$context().toUri$1(path));\n      for (t1 = contents.length, i = 0; i < t1; ++i) {\n        if (C.JSString_methods._codeUnitAt$1(contents, i) !== 65533)\n          continue;\n        throw H.wrapException(E.SassException$0(\"Invalid UTF-8.\", Y.FileLocation$_(sourceFile, i).pointSpan$0()));\n      }\n      return contents;\n    },\n    _readFile0: function(path, encoding) {\n      return B._systemErrorToFileSystemException0(new B._readFile_closure0(path, encoding));\n    },\n    fileExists0: function(path) {\n      return B._systemErrorToFileSystemException0(new B.fileExists_closure0(path));\n    },\n    dirExists0: function(path) {\n      return B._systemErrorToFileSystemException0(new B.dirExists_closure0(path));\n    },\n    listDir0: function(path) {\n      return B._systemErrorToFileSystemException0(new B.listDir_closure0(false, path));\n    },\n    _systemErrorToFileSystemException0: function(callback) {\n      var error, systemError, t1, exception, t2;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        t1 = systemError;\n        t2 = J.getInterceptor$x(t1);\n        throw H.wrapException(new B.FileSystemException0(J.substring$2$s(t2.get$message(t1), (H.S(t2.get$code(t1)) + \": \").length, J.get$length$asx(t2.get$message(t1)) - (\", \" + H.S(t2.get$syscall(t1)) + \" '\" + H.S(t2.get$path(t1)) + \"'\").length), J.get$path$x(systemError)));\n      }\n    },\n    FileSystemException0: function FileSystemException0(t0, t1) {\n      this.message = t0;\n      this.path = t1;\n    },\n    Stderr0: function Stderr0(t0) {\n      this._node1$_stderr = t0;\n    },\n    _readFile_closure0: function _readFile_closure0(t0, t1) {\n      this.path = t0;\n      this.encoding = t1;\n    },\n    fileExists_closure0: function fileExists_closure0(t0) {\n      this.path = t0;\n    },\n    dirExists_closure0: function dirExists_closure0(t0) {\n      this.path = t0;\n    },\n    listDir_closure0: function listDir_closure0(t0, t1) {\n      this.recursive = t0;\n      this.path = t1;\n    },\n    listDir__closure1: function listDir__closure1(t0) {\n      this.path = t0;\n    },\n    listDir__closure2: function listDir__closure2() {\n    },\n    listDir_closure_list0: function listDir_closure_list0() {\n    },\n    listDir__list_closure0: function listDir__list_closure0(t0, t1) {\n      this.parent = t0;\n      this.list = t1;\n    },\n    ModifiableCssNode0: function ModifiableCssNode0() {\n    },\n    ModifiableCssParentNode0: function ModifiableCssParentNode0() {\n    },\n    _render: function(options, callback) {\n      var t1 = J.getInterceptor$x(options);\n      if (t1.get$fiber(options) != null)\n        J.run$0$x(t1.get$fiber(options).call$1(P.allowInterop(new B._render_closure(callback, options))));\n      else\n        B._renderAsync(options).then$1$2$onError(0, new B._render_closure0(callback), new B._render_closure1(callback), type$.Null);\n    },\n    _renderAsync: function(options) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_RenderResult),\n        $async$returnValue, t2, t3, t4, t5, t6, t7, t8, t9, result, start, t1, file;\n      var $async$_renderAsync = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              start = new P.DateTime(Date.now(), false);\n              t1 = J.getInterceptor$x(options);\n              file = t1.get$file(options) == null ? null : D.absolute(t1.get$file(options));\n              $async$goto = t1.get$data(options) != null ? 3 : 5;\n              break;\n            case 3:\n              // then\n              t2 = t1.get$data(options);\n              t3 = B._parseImporter(options, start);\n              t4 = B._parseFunctions(options, true);\n              t5 = t1.get$indentedSyntax(options);\n              t5 = !J.$eq$(t5, false) && t5 != null ? C.Syntax_Sass0 : null;\n              t6 = B._parseOutputStyle(t1.get$outputStyle(options));\n              t7 = J.$eq$(t1.get$indentType(options), \"tab\");\n              t8 = B._parseIndentWidth(t1.get$indentWidth(options));\n              t9 = B._parseLineFeed(t1.get$linefeed(options));\n              t1 = t1.get$file(options) == null ? \"stdin\" : $.$get$context().toUri$1(file).toString$0(0);\n              $async$goto = 6;\n              return P._asyncAwait(X.compileStringAsync0(t2, t4, t8, t9, t3, B._enableSourceMaps(options), t6, t5, t1, !t7), $async$_renderAsync);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = t1.get$file(options) != null ? 7 : 9;\n              break;\n            case 7:\n              // then\n              t2 = B._parseImporter(options, start);\n              t3 = B._parseFunctions(options, true);\n              t4 = t1.get$indentedSyntax(options);\n              t4 = !J.$eq$(t4, false) && t4 != null ? C.Syntax_Sass0 : null;\n              t5 = B._parseOutputStyle(t1.get$outputStyle(options));\n              t6 = J.$eq$(t1.get$indentType(options), \"tab\");\n              $async$goto = 10;\n              return P._asyncAwait(X.compileAsync0(file, t3, B._parseIndentWidth(t1.get$indentWidth(options)), B._parseLineFeed(t1.get$linefeed(options)), t2, B._enableSourceMaps(options), t5, t4, !t6), $async$_renderAsync);\n            case 10:\n              // returning from await.\n              result = $async$result;\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              throw H.wrapException(P.ArgumentError$(string$.Either));\n            case 8:\n              // join\n            case 4:\n              // join\n              $async$returnValue = B._newRenderResult(options, result, start);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_renderAsync, $async$completer);\n    },\n    _renderSync: function(options) {\n      var start, file, result, error, error0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, stylesheet, exception, _null = null;\n      try {\n        start = new P.DateTime(Date.now(), false);\n        t1 = J.getInterceptor$x(options);\n        file = t1.get$file(options) == null ? _null : D.absolute(t1.get$file(options));\n        result = null;\n        if (t1.get$data(options) != null) {\n          t2 = t1.get$data(options);\n          t3 = B._parseImporter(options, start);\n          t4 = B._parseFunctions(options, false);\n          t5 = t1.get$indentedSyntax(options);\n          t5 = !J.$eq$(t5, false) && t5 != null ? C.Syntax_Sass0 : _null;\n          t6 = B._parseOutputStyle(t1.get$outputStyle(options));\n          t7 = J.$eq$(t1.get$indentType(options), \"tab\");\n          t8 = B._parseIndentWidth(t1.get$indentWidth(options));\n          t9 = B._parseLineFeed(t1.get$linefeed(options));\n          t1 = t1.get$file(options) == null ? \"stdin\" : $.$get$context().toUri$1(file).toString$0(0);\n          t10 = B._enableSourceMaps(options);\n          stylesheet = V.Stylesheet_Stylesheet$parse0(t2, t5 == null ? C.Syntax_SCSS0 : t5, _null, t1);\n          t1 = D.absolute(\".\");\n          result = U._compileStylesheet1(stylesheet, _null, _null, t3, new F.FilesystemImporter0(t1), new H.CastList(t4, H._arrayInstanceType(t4)._eval$1(\"CastList<1,Callable0*>\")), t6, !t7, t8, t9, t10, true);\n        } else if (t1.get$file(options) != null) {\n          t2 = file;\n          t3 = B._parseImporter(options, start);\n          t4 = B._parseFunctions(options, false);\n          t5 = t1.get$indentedSyntax(options);\n          t5 = !J.$eq$(t5, false) && t5 != null ? C.Syntax_Sass0 : _null;\n          t6 = B._parseOutputStyle(t1.get$outputStyle(options));\n          t7 = J.$eq$(t1.get$indentType(options), \"tab\");\n          t8 = B._parseIndentWidth(t1.get$indentWidth(options));\n          t1 = B._parseLineFeed(t1.get$linefeed(options));\n          t9 = B._enableSourceMaps(options);\n          t10 = B.readFile0(t2);\n          if (t5 == null)\n            t5 = M.Syntax_forPath0(t2);\n          stylesheet = V.Stylesheet_Stylesheet$parse0(t10, t5, _null, $.$get$context().toUri$1(t2));\n          result = U._compileStylesheet1(stylesheet, _null, _null, t3, new F.FilesystemImporter0(D.absolute(\".\")), new H.CastList(t4, H._arrayInstanceType(t4)._eval$1(\"CastList<1,Callable0*>\")), t6, !t7, t8, t1, t9, true);\n        } else {\n          t1 = P.ArgumentError$(string$.Either);\n          throw H.wrapException(t1);\n        }\n        t1 = B._newRenderResult(options, result, start);\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassException0) {\n          error = t1;\n          t1 = B._wrapException(error);\n          $.$get$_jsThrow().call$1(t1);\n        } else {\n          error0 = t1;\n          t1 = B._newRenderError(J.toString$0$(error0), _null, _null, _null, 3);\n          $.$get$_jsThrow().call$1(t1);\n        }\n      }\n      throw H.wrapException(\"unreachable\");\n    },\n    _wrapException: function(exception) {\n      var t3, t4,\n        t1 = C.JSString_methods.replaceFirst$2(exception.toString$0(0), \"Error: \", \"\"),\n        t2 = G.SourceSpanException.prototype.get$span.call(exception);\n      t2 = Y.FileLocation$_(t2.file, t2._file$_start);\n      t2 = t2.file.getLine$1(t2.offset);\n      t3 = G.SourceSpanException.prototype.get$span.call(exception);\n      t3 = Y.FileLocation$_(t3.file, t3._file$_start);\n      t3 = t3.file.getColumn$1(t3.offset);\n      if (G.SourceSpanException.prototype.get$span.call(exception).file.url == null)\n        t4 = \"stdin\";\n      else {\n        t4 = G.SourceSpanException.prototype.get$span.call(exception).file;\n        t4 = $.$get$context().style.pathFromUri$1(M._parseUri(t4.url));\n      }\n      return B._newRenderError(t1, t3 + 1, t4, t2 + 1, 1);\n    },\n    _parseFunctions: function(options, asynch) {\n      var result,\n        t1 = J.getInterceptor$x(options);\n      if (t1.get$functions(options) == null)\n        return C.List_empty21;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncCallable);\n      B.jsForEach(t1.get$functions(options), new B._parseFunctions_closure(options, result, asynch));\n      return result;\n    },\n    _parseImporter: function(options, start) {\n      var importers, t2, t3, includePaths, t4, t5, t6, t7, _i, t8, t9, t10, context,\n        t1 = J.getInterceptor$x(options);\n      if (t1.get$importer(options) == null)\n        importers = H.setRuntimeTypeInfo([], type$.JSArray_legacy_JSFunction);\n      else {\n        t2 = type$.legacy_List_legacy_Object;\n        t3 = type$.legacy_JSFunction;\n        importers = t2._is(t1.get$importer(options)) ? J.cast$1$0$ax(t2._as(t1.get$importer(options)), t3) : H.setRuntimeTypeInfo([t3._as(t1.get$importer(options))], type$.JSArray_legacy_JSFunction);\n      }\n      t2 = t1.get$includePaths(options);\n      if (t2 == null)\n        t2 = [];\n      t3 = type$.legacy_String;\n      includePaths = P.List_List$from(t2, true, t3);\n      t2 = J.getInterceptor$asx(importers);\n      if (t2.get$isNotEmpty(importers)) {\n        t4 = t1.get$file(options);\n        t5 = t1.get$data(options);\n        t6 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n        t6.push(D.current());\n        for (t7 = includePaths.length, _i = 0; _i < includePaths.length; includePaths.length === t7 || (0, H.throwConcurrentModificationError)(includePaths), ++_i)\n          t6.push(includePaths[_i]);\n        t6 = C.JSArray_methods.join$1(t6, J.$eq$(J.get$platform$x(self.process), \"win32\") ? \";\" : \":\");\n        t7 = J.$eq$(t1.get$indentType(options), \"tab\") ? 1 : 0;\n        t8 = B._parseIndentWidth(t1.get$indentWidth(options));\n        if (t8 == null)\n          t8 = 2;\n        t9 = B._parseLineFeed(t1.get$linefeed(options));\n        t10 = t1.get$file(options);\n        if (t10 == null)\n          t10 = \"data\";\n        context = {options: {file: t4, data: t5, includePaths: t6, precision: 10, style: 1, indentType: t7, indentWidth: t8, linefeed: t9.text, result: {stats: {entry: t10, start: start._value}}}};\n        J.set$context$x(J.get$options$x(context), context);\n      } else\n        context = null;\n      if (t1.get$fiber(options) != null) {\n        t1 = t2.map$1$1(importers, new B._parseImporter_closure(options), type$.legacy_JSFunction);\n        importers = P.List_List$from(t1, true, t1.$ti._eval$1(\"ListIterable.E\"));\n      }\n      return new F.NodeImporter(context, P.List_List$unmodifiable(F.NodeImporter__addSassPath(includePaths), t3), P.List_List$unmodifiable(J.cast$1$0$ax(importers, type$.dynamic), type$.legacy_JSFunction));\n    },\n    _parseOutputStyle: function(style) {\n      if (style == null || style === \"expanded\")\n        return C.OutputStyle_expanded;\n      if (style === \"compressed\")\n        return C.OutputStyle_compressed0;\n      throw H.wrapException(P.ArgumentError$('Unsupported output style \"' + H.S(style) + '\".'));\n    },\n    _parseIndentWidth: function(width) {\n      if (width == null)\n        return null;\n      return H._isInt(width) ? width : P.int_parse(J.toString$0$(width), null);\n    },\n    _parseLineFeed: function(str) {\n      switch (str) {\n        case \"cr\":\n          return C.LineFeed_kMT;\n        case \"crlf\":\n          return C.LineFeed_Mss;\n        case \"lfcr\":\n          return C.LineFeed_a1Y;\n        default:\n          return C.LineFeed_D6m;\n      }\n    },\n    _newRenderResult: function(options, result, start) {\n      var t3, sourceMapPath, t4, sourceMapDir, sourceMapDirUrl, i, source, t5, t6, sourceMapBytes, buffer, indices, url, _null = null,\n        t1 = Date.now(),\n        t2 = result._async_compile$_serialize,\n        css = t2.css;\n      if (B._enableSourceMaps(options)) {\n        t3 = J.getInterceptor$x(options);\n        sourceMapPath = typeof t3.get$sourceMap(options) == \"string\" ? H._asStringS(t3.get$sourceMap(options)) : J.$add$ansx(t3.get$outFile(options), \".map\");\n        t4 = $.$get$context();\n        sourceMapDir = t4.dirname$1(sourceMapPath);\n        t2 = t2.sourceMap;\n        t2.sourceRoot = t3.get$sourceMapRoot(options);\n        if (t3.get$outFile(options) == null)\n          if (t3.get$file(options) == null)\n            t2.targetUrl = \"stdin.css\";\n          else\n            t2.targetUrl = t4.toUri$1(t4.withoutExtension$1(t3.get$file(options)) + \".css\").toString$0(0);\n        else\n          t2.targetUrl = t4.toUri$1(t4.relative$2$from(t3.get$outFile(options), sourceMapDir)).toString$0(0);\n        sourceMapDirUrl = t4.toUri$1(sourceMapDir).toString$0(0);\n        for (t4 = t2.urls, i = 0; i < t4.length; ++i) {\n          source = t4[i];\n          if (source === \"stdin\")\n            continue;\n          t5 = $.$get$url();\n          t6 = t5.style;\n          if (t6.rootLength$1(source) <= 0 || t6.isRootRelative$1(source))\n            continue;\n          t4[i] = t5.relative$2$from(source, sourceMapDirUrl);\n        }\n        t4 = t3.get$sourceMapContents(options);\n        sourceMapBytes = self.Buffer.from(C.C_JsonCodec.encode$2$toEncodable(t2.toJson$1$includeSourceContents(!J.$eq$(t4, false) && t4 != null), _null), \"utf8\");\n        t2 = t3.get$omitSourceMapUrl(options);\n        if (!(!J.$eq$(t2, false) && t2 != null)) {\n          t2 = t3.get$sourceMapEmbed(options);\n          if (!J.$eq$(t2, false) && t2 != null) {\n            buffer = new P.StringBuffer(\"\");\n            indices = H.setRuntimeTypeInfo([-1], type$.JSArray_int);\n            P.UriData__writeUri(\"application/json\", _null, _null, buffer, indices);\n            indices.push(buffer._contents.length);\n            t2 = buffer._contents += \";base64,\";\n            indices.push(t2.length - 1);\n            C.C_Base64Encoder.startChunkedConversion$1(new P._StringSinkConversionSink(buffer)).addSlice$4(sourceMapBytes, 0, sourceMapBytes.length, true);\n            t2 = buffer._contents;\n            url = new P.UriData(t2.charCodeAt(0) == 0 ? t2 : t2, indices, _null).get$uri();\n          } else {\n            if (t3.get$outFile(options) == null)\n              t2 = sourceMapPath;\n            else {\n              t2 = t3.get$outFile(options);\n              t3 = $.$get$context();\n              t2 = t3.relative$2$from(sourceMapPath, t3.dirname$1(t2));\n            }\n            url = $.$get$context().toUri$1(t2);\n          }\n          css += \"\\n\\n/*# sourceMappingURL=\" + url.toString$0(0) + \" */\";\n        }\n      } else\n        sourceMapBytes = _null;\n      t2 = self.Buffer.from(css, \"utf8\");\n      t3 = J.get$file$x(options);\n      if (t3 == null)\n        t3 = \"data\";\n      t4 = start._value;\n      t1 = new P.DateTime(t1, false)._value;\n      t5 = C.JSInt_methods._tdivFast$1(P.Duration$(t1 - t4)._duration, 1000);\n      t6 = result._evaluate.includedFiles;\n      return {css: t2, map: sourceMapBytes, stats: {entry: t3, start: t4, end: t1, duration: t5, includedFiles: P.List_List$from(t6, true, H._instanceType(t6)._precomputed1)}};\n    },\n    _enableSourceMaps: function(options) {\n      var t2,\n        t1 = J.getInterceptor$x(options);\n      if (typeof t1.get$sourceMap(options) != \"string\") {\n        t2 = t1.get$sourceMap(options);\n        t1 = !J.$eq$(t2, false) && t2 != null && t1.get$outFile(options) != null;\n      } else\n        t1 = true;\n      return t1;\n    },\n    _newRenderError: function(message, column, file, line, $status) {\n      var error = new self.Error(message);\n      error.formatted = \"Error: \" + H.S(message);\n      if (line != null)\n        error.line = line;\n      if (column != null)\n        error.column = column;\n      if (file != null)\n        error.file = file;\n      error.status = $status;\n      return error;\n    },\n    _render_closure: function _render_closure(t0, t1) {\n      this.callback = t0;\n      this.options = t1;\n    },\n    _render_closure0: function _render_closure0(t0) {\n      this.callback = t0;\n    },\n    _render_closure1: function _render_closure1(t0) {\n      this.callback = t0;\n    },\n    _parseFunctions_closure: function _parseFunctions_closure(t0, t1, t2) {\n      this.options = t0;\n      this.result = t1;\n      this.asynch = t2;\n    },\n    _parseFunctions__closure: function _parseFunctions__closure(t0, t1) {\n      this.options = t0;\n      this.callback = t1;\n    },\n    _parseFunctions___closure0: function _parseFunctions___closure0(t0) {\n      this.fiber = t0;\n    },\n    _parseFunctions____closure: function _parseFunctions____closure(t0, t1) {\n      this.fiber = t0;\n      this.result = t1;\n    },\n    _parseFunctions__closure0: function _parseFunctions__closure0(t0) {\n      this.callback = t0;\n    },\n    _parseFunctions__closure1: function _parseFunctions__closure1(t0) {\n      this.callback = t0;\n    },\n    _parseFunctions___closure: function _parseFunctions___closure(t0) {\n      this.completer = t0;\n    },\n    _parseImporter_closure: function _parseImporter_closure(t0) {\n      this.options = t0;\n    },\n    _parseImporter__closure: function _parseImporter__closure(t0, t1) {\n      this.options = t0;\n      this.importer = t1;\n    },\n    _parseImporter___closure: function _parseImporter___closure(t0) {\n      this.fiber = t0;\n    },\n    _parseImporter____closure: function _parseImporter____closure(t0, t1) {\n      this.fiber = t0;\n      this.result = t1;\n    },\n    ReturnRule0: function ReturnRule0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    ShadowedModuleView_ifNecessary0: function(inner, functions, mixins, variables, $T) {\n      var t1;\n      if (B.ShadowedModuleView__needsBlacklist0(inner.get$variables(), variables) || B.ShadowedModuleView__needsBlacklist0(inner.get$functions(inner), functions) || B.ShadowedModuleView__needsBlacklist0(inner.get$mixins(), mixins)) {\n        t1 = $T._eval$1(\"0*\");\n        t1 = new B.ShadowedModuleView0(inner, B.ShadowedModuleView__shadowedMap0(inner.get$variables(), variables, type$.legacy_Value_2), B.ShadowedModuleView__shadowedMap0(inner.get$variableNodes(), variables, type$.legacy_AstNode_2), B.ShadowedModuleView__shadowedMap0(inner.get$functions(inner), functions, t1), B.ShadowedModuleView__shadowedMap0(inner.get$mixins(), mixins, t1), $T._eval$1(\"ShadowedModuleView0<0*>\"));\n      } else\n        t1 = null;\n      return t1;\n    },\n    ShadowedModuleView__shadowedMap0: function(map, blocklist, $V) {\n      if (map == null || !B.ShadowedModuleView__needsBlacklist0(map, blocklist))\n        return map;\n      return K.LimitedMapView$blocklist0(map, blocklist, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    ShadowedModuleView__needsBlacklist0: function(map, blocklist) {\n      var t1 = map.get$isNotEmpty(map) && blocklist.any$1(0, map.get$containsKey());\n      return t1;\n    },\n    ShadowedModuleView0: function ShadowedModuleView0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._shadowed_view0$_inner = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.$ti = t5;\n    },\n    SilentComment0: function SilentComment0(t0, t1) {\n      this.text = t0;\n      this.span = t1;\n    },\n    ModifiableCssSupportsRule$0: function(condition, span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      return new B.ModifiableCssSupportsRule0(condition, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t1);\n    },\n    ModifiableCssSupportsRule0: function ModifiableCssSupportsRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _._node2$_children = t3;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    SupportsRule$0: function(condition, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new B.SupportsRule0(condition, span, t1, t2);\n    },\n    SupportsRule0: function SupportsRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.condition = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    inImportRule0: function(callback) {\n      var t1,\n        wasInImportRule = $._inImportRule0;\n      $._inImportRule0 = true;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } finally {\n        $._inImportRule0 = wasInImportRule;\n      }\n    },\n    resolveImportPath0: function(path) {\n      var t1,\n        extension = X.ParsedPath_ParsedPath$parse(path, $.$get$context().style)._splitExtension$1(1)[1];\n      if (extension === \".sass\" || extension === \".scss\" || extension === \".css\") {\n        t1 = $._inImportRule0 ? new B.resolveImportPath_closure1(path, extension).call$0() : null;\n        return t1 == null ? B._exactlyOne0(B._tryPath0(path)) : t1;\n      }\n      t1 = $._inImportRule0 ? new B.resolveImportPath_closure2(path).call$0() : null;\n      if (t1 == null)\n        t1 = B._exactlyOne0(B._tryPathWithExtensions0(path));\n      return t1 == null ? B._tryPathAsDirectory0(path) : t1;\n    },\n    _tryPathWithExtensions0: function(path) {\n      var result = B._tryPath0(J.$add$ansx(path, \".sass\"));\n      C.JSArray_methods.addAll$1(result, B._tryPath0(path + \".scss\"));\n      return result.length !== 0 ? result : B._tryPath0(path + \".css\");\n    },\n    _tryPath0: function(path) {\n      var t1 = $.$get$context(),\n        partial = D.join(t1.dirname$1(path), \"_\" + H.S(X.ParsedPath_ParsedPath$parse(path, t1.style).get$basename()), null);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      if (B.fileExists0(partial))\n        t1.push(partial);\n      if (B.fileExists0(path))\n        t1.push(path);\n      return t1;\n    },\n    _tryPathAsDirectory0: function(path) {\n      var t1;\n      if (!B.dirExists0(path))\n        return null;\n      t1 = $._inImportRule0 ? new B._tryPathAsDirectory_closure0(path).call$0() : null;\n      return t1 == null ? B._exactlyOne0(B._tryPathWithExtensions0(D.join(path, \"index\", null))) : t1;\n    },\n    _exactlyOne0: function(paths) {\n      var t1 = paths.length;\n      if (t1 === 0)\n        return null;\n      if (t1 === 1)\n        return C.JSArray_methods.get$first(paths);\n      throw H.wrapException(string$.It_s_n + C.JSArray_methods.map$1$1(paths, new B._exactlyOne_closure0(), type$.legacy_String).join$1(0, \"\\n\"));\n    },\n    resolveImportPath_closure1: function resolveImportPath_closure1(t0, t1) {\n      this.path = t0;\n      this.extension = t1;\n    },\n    resolveImportPath_closure2: function resolveImportPath_closure2(t0) {\n      this.path = t0;\n    },\n    _tryPathAsDirectory_closure0: function _tryPathAsDirectory_closure0(t0) {\n      this.path = t0;\n    },\n    _exactlyOne_closure0: function _exactlyOne_closure0() {\n    },\n    forwardToString: function(klass) {\n      klass.prototype.toString = P.allowInteropCaptureThis(new B.forwardToString_closure());\n    },\n    jsForEach: function(object, callback) {\n      var t1, t2;\n      for (t1 = J.get$iterator$ax(self.Object.keys(object)); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        callback.call$2(t2, object[t2]);\n      }\n    },\n    createClass: function($name, $constructor, methods) {\n      var klass = P.allowInteropCaptureThis($constructor);\n      self.Object.defineProperty(klass, \"name\", {value: $name});\n      methods.forEach$1(0, new B.createClass_closure(klass.prototype));\n      return klass;\n    },\n    injectSuperclass: function(object, $constructor) {\n      var $prototype = self.Object.getPrototypeOf(object),\n        $parent = self.Object.getPrototypeOf($prototype);\n      if ($parent != null)\n        self.Object.setPrototypeOf($constructor.prototype, $parent);\n      self.Object.setPrototypeOf($prototype, self.Object.create($constructor.prototype));\n    },\n    forwardToString_closure: function forwardToString_closure() {\n    },\n    createClass_closure: function createClass_closure(t0) {\n      this.$prototype = t0;\n    },\n    _PropertyDescriptor0: function _PropertyDescriptor0() {\n    },\n    toSentence0: function(iter, conjunction) {\n      var t1 = iter.__internal$_iterable,\n        t2 = J.getInterceptor$asx(t1);\n      if (t2.get$length(t1) === 1)\n        return J.toString$0$(iter._f.call$1(t2.get$first(t1)));\n      return H.TakeIterable_TakeIterable(iter, t2.get$length(t1) - 1, H._instanceType(iter)._eval$1(\"Iterable.E\")).join$1(0, \", \") + (\" \" + conjunction + \" \" + H.S(iter._f.call$1(t2.get$last(t1))));\n    },\n    indent0: function(string, indentation) {\n      return new H.MappedListIterable(H.setRuntimeTypeInfo(string.split(\"\\n\"), type$.JSArray_String), new B.indent_closure0(indentation), type$.MappedListIterable_of_String_and_legacy_String).join$1(0, \"\\n\");\n    },\n    pluralize0: function($name, number, plural) {\n      if (number === 1)\n        return $name;\n      if (plural != null)\n        return plural;\n      return $name + \"s\";\n    },\n    trimAscii0: function(string, excludeEscape) {\n      var start = B._firstNonWhitespace0(string);\n      return start == null ? \"\" : J.substring$2$s(string, start, B._lastNonWhitespace0(string, true) + 1);\n    },\n    trimAsciiRight0: function(string, excludeEscape) {\n      var end = B._lastNonWhitespace0(string, excludeEscape);\n      return end == null ? \"\" : J.substring$2$s(string, 0, end + 1);\n    },\n    _firstNonWhitespace0: function(string) {\n      var t1, i, t2;\n      for (t1 = string.length, i = 0; i < t1; ++i) {\n        t2 = C.JSString_methods._codeUnitAt$1(string, i);\n        if (!(t2 === 32 || t2 === 9 || t2 === 10 || t2 === 13 || t2 === 12))\n          return i;\n      }\n      return null;\n    },\n    _lastNonWhitespace0: function(string, excludeEscape) {\n      var t1, i, t2, codeUnit;\n      for (t1 = string.length, i = t1 - 1, t2 = J.getInterceptor$s(string); i >= 0; --i) {\n        codeUnit = t2.codeUnitAt$1(string, i);\n        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))\n          if (excludeEscape && i !== 0 && i !== t1 && codeUnit === 92)\n            return i + 1;\n          else\n            return i;\n      }\n      return null;\n    },\n    isPublic0: function(member) {\n      var start = J._codeUnitAt$1$s(member, 0);\n      return start !== 45 && start !== 95;\n    },\n    flattenVertically0: function(iterable, $T) {\n      var result,\n        t1 = iterable.$ti._eval$1(\"@<ListIterable.E>\")._bind$1($T._eval$1(\"QueueList<0*>*\"))._eval$1(\"MappedListIterable<1,2>\"),\n        queues = P.List_List$from(new H.MappedListIterable(iterable, new B.flattenVertically_closure1($T), t1), true, t1._eval$1(\"ListIterable.E\"));\n      if (queues.length === 1)\n        return C.JSArray_methods.get$first(queues);\n      result = H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<0*>\"));\n      for (; queues.length !== 0;) {\n        if (!!queues.fixed$length)\n          H.throwExpression(P.UnsupportedError$(\"removeWhere\"));\n        C.JSArray_methods._removeWhere$2(queues, new B.flattenVertically_closure2(result, $T), true);\n      }\n      return result;\n    },\n    firstOrNull0: function(iterable) {\n      var iterator = J.get$iterator$ax(iterable);\n      return iterator.moveNext$0() ? iterator.get$current(iterator) : null;\n    },\n    codepointIndexToCodeUnitIndex0: function(string, codepointIndex) {\n      var t1, codeUnitIndex, i, codeUnitIndex0, t2;\n      for (t1 = J.getInterceptor$s(string), codeUnitIndex = 0, i = 0; i < codepointIndex; ++i) {\n        codeUnitIndex0 = codeUnitIndex + 1;\n        t2 = t1._codeUnitAt$1(string, codeUnitIndex);\n        codeUnitIndex = t2 >= 55296 && t2 <= 56319 ? codeUnitIndex0 + 1 : codeUnitIndex0;\n      }\n      return codeUnitIndex;\n    },\n    codeUnitIndexToCodepointIndex0: function(string, codeUnitIndex) {\n      var t1, codepointIndex, i, t2;\n      for (t1 = J.getInterceptor$s(string), codepointIndex = 0, i = 0; i < codeUnitIndex; i = (t2 >= 55296 && t2 <= 56319 ? i + 1 : i) + 1) {\n        ++codepointIndex;\n        t2 = t1._codeUnitAt$1(string, i);\n      }\n      return codepointIndex;\n    },\n    frameForSpan0: function(span, member, url) {\n      var t2, t3, t4,\n        t1 = url == null ? span.file.url : url;\n      if (t1 == null)\n        t1 = $.$get$_noSourceUrl0();\n      t2 = span.file;\n      t3 = span._file$_start;\n      t4 = Y.FileLocation$_(t2, t3);\n      t4 = t4.file.getLine$1(t4.offset);\n      t3 = Y.FileLocation$_(t2, t3);\n      return new A.Frame(t1, t4 + 1, t3.file.getColumn$1(t3.offset) + 1, member);\n    },\n    spanForList0: function(nodes) {\n      var t1, left, right, _null = null;\n      if (nodes.length === 0)\n        return _null;\n      t1 = C.JSArray_methods.get$first(nodes);\n      left = t1 == null ? _null : t1.get$span();\n      if (left == null)\n        return _null;\n      t1 = C.JSArray_methods.get$last(nodes);\n      right = t1 == null ? _null : t1.get$span();\n      if (right == null)\n        return _null;\n      return left.expand$1(0, right);\n    },\n    declarationName0: function(span) {\n      var text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, span._file$_start, span._end), 0, null);\n      return B.trimAsciiRight0(C.JSString_methods.substring$2(text, 0, C.JSString_methods.indexOf$1(text, \":\")), false);\n    },\n    unvendor0: function($name) {\n      var i,\n        t1 = $name.length;\n      if (t1 < 2)\n        return $name;\n      if (J.getInterceptor$s($name)._codeUnitAt$1($name, 0) !== 45)\n        return $name;\n      if (C.JSString_methods._codeUnitAt$1($name, 1) === 45)\n        return $name;\n      for (i = 2; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1($name, i) === 45)\n          return C.JSString_methods.substring$1($name, i + 1);\n      return $name;\n    },\n    equalsIgnoreCase0: function(string1, string2) {\n      var t1, i;\n      if (string1 == string2)\n        return true;\n      if (string1 == null || string2 == null)\n        return false;\n      t1 = string1.length;\n      if (t1 !== string2.length)\n        return false;\n      for (i = 0; i < t1; ++i)\n        if (!T.characterEqualsIgnoreCase0(C.JSString_methods._codeUnitAt$1(string1, i), C.JSString_methods._codeUnitAt$1(string2, i)))\n          return false;\n      return true;\n    },\n    startsWithIgnoreCase0: function(string, prefix) {\n      var t2, i,\n        t1 = prefix.length;\n      if (string.length < t1)\n        return false;\n      for (t2 = J.getInterceptor$s(string), i = 0; i < t1; ++i)\n        if (!T.characterEqualsIgnoreCase0(t2._codeUnitAt$1(string, i), C.JSString_methods._codeUnitAt$1(prefix, i)))\n          return false;\n      return true;\n    },\n    mapInPlace0: function(list, $function) {\n      var i;\n      for (i = 0; i < list.length; ++i)\n        list[i] = $function.call$1(list[i]);\n    },\n    longestCommonSubsequence0: function(list1, list2, select, $T) {\n      var t1, lengths, selections, t2, i, i0, j, selection, t3, j0, t4, t5;\n      if (select == null)\n        select = new B.longestCommonSubsequence_closure2($T);\n      t1 = J.getInterceptor$asx(list1);\n      lengths = P.List_List$generate(t1.get$length(list1) + 1, new B.longestCommonSubsequence_closure3(list2), false, type$.legacy_List_legacy_int);\n      selections = P.List_List$generate(t1.get$length(list1), new B.longestCommonSubsequence_closure4(list2, $T), false, $T._eval$1(\"List<0*>*\"));\n      for (t2 = J.getInterceptor$asx(list2), i = 0; i < t1.get$length(list1); i = i0)\n        for (i0 = i + 1, j = 0; j < t2.get$length(list2); j = j0) {\n          selection = select.call$2(t1.$index(list1, i), t2.$index(list2, j));\n          J.$indexSet$ax(selections[i], j, selection);\n          t3 = lengths[i0];\n          j0 = j + 1;\n          if (selection == null) {\n            t4 = J.$index$asx(t3, j);\n            t5 = J.$index$asx(lengths[i], j0);\n            t5 = Math.max(H.checkNum(t4), H.checkNum(t5));\n            t4 = t5;\n          } else\n            t4 = J.$index$asx(lengths[i], j) + 1;\n          J.$indexSet$ax(t3, j0, t4);\n        }\n      return new B.longestCommonSubsequence_backtrack0(selections, lengths, $T).call$2(t1.get$length(list1) - 1, t2.get$length(list2) - 1);\n    },\n    removeFirstWhere0: function(list, test, orElse) {\n      var toRemove, element,\n        t1 = list.length,\n        _i = 0;\n      while (true) {\n        if (!(_i < list.length)) {\n          toRemove = null;\n          break;\n        }\n        c$0: {\n          element = list[_i];\n          if (!test.call$1(element))\n            break c$0;\n          toRemove = element;\n          break;\n        }\n        list.length === t1 || (0, H.throwConcurrentModificationError)(list);\n        ++_i;\n      }\n      if (toRemove == null)\n        return orElse.call$0();\n      else {\n        C.JSArray_methods.remove$1(list, toRemove);\n        return toRemove;\n      }\n    },\n    mapAddAll20: function(destination, source, K1, K2, $V) {\n      source.forEach$1(0, new B.mapAddAll2_closure0(destination, K1, K2, $V));\n    },\n    setAll0: function(map, keys, value) {\n      var t1;\n      for (t1 = J.get$iterator$ax(keys); t1.moveNext$0();)\n        map.$indexSet(0, t1.get$current(t1), value);\n    },\n    rotateSlice0: function(list, start, end) {\n      var i, next,\n        element = list.$index(0, end - 1);\n      for (i = start; i < end; ++i, element = next) {\n        next = list.$index(0, i);\n        list.$indexSet(0, i, element);\n      }\n    },\n    mapAsync0: function(iterable, callback, $E, $F) {\n      return B.mapAsync$body0(iterable, callback, $E, $F, $F._eval$1(\"Iterable<0*>*\"));\n    },\n    mapAsync$body0: function(iterable, callback, $E, $F, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, t2, _i, t1, $async$temp1;\n      var $async$mapAsync0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = H.setRuntimeTypeInfo([], $F._eval$1(\"JSArray<0*>\"));\n              t2 = iterable.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$temp1 = t1;\n              $async$goto = 6;\n              return P._asyncAwait(callback.call$1(iterable[_i]), $async$mapAsync0);\n            case 6:\n              // returning from await.\n              $async$temp1.push($async$result);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$mapAsync0, $async$completer);\n    },\n    putIfAbsentAsync0: function(map, key, ifAbsent, $K, $V) {\n      return B.putIfAbsentAsync$body0(map, key, ifAbsent, $K, $V, $V._eval$1(\"0*\"));\n    },\n    putIfAbsentAsync$body0: function(map, key, ifAbsent, $K, $V, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, value;\n      var $async$putIfAbsentAsync0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (map.containsKey$1(key)) {\n                $async$returnValue = map.$index(0, key);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait(ifAbsent.call$0(), $async$putIfAbsentAsync0);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              map.$indexSet(0, key, value);\n              $async$returnValue = value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$putIfAbsentAsync0, $async$completer);\n    },\n    copyMapOfMap0: function(map, K1, K2, $V) {\n      var t2, t3, t4, t5, t6, t7,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(K1._eval$1(\"0*\"), K2._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"Map<1*,2*>*\"));\n      for (t2 = map.get$entries(map), t2 = t2.get$iterator(t2), t3 = K2._eval$1(\"0*\"), t4 = $V._eval$1(\"0*\"); t2.moveNext$0();) {\n        t5 = t2.get$current(t2);\n        t6 = t5.key;\n        t5 = t5.value;\n        t7 = P.LinkedHashMap_LinkedHashMap(null, null, null, t3, t4);\n        t7.addAll$1(0, t5);\n        t1.$indexSet(0, t6, t7);\n      }\n      return t1;\n    },\n    copyMapOfList0: function(map, $K, $E) {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty($K._eval$1(\"0*\"), $E._eval$1(\"List<0*>*\"));\n      for (t2 = map.get$entries(map), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, t3.key, J.toList$0$ax(t3.value));\n      }\n      return t1;\n    },\n    SpanExtensions_trim0: function(_this) {\n      var t3, end, end0,\n        t1 = _this.file,\n        t2 = _this._file$_start,\n        text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t2, _this._end), 0, null),\n        start = 0;\n      while (true) {\n        t3 = C.JSString_methods._codeUnitAt$1(text, start);\n        if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n          break;\n        ++start;\n      }\n      end = text.length - 1;\n      end0 = end;\n      while (true) {\n        t3 = C.JSString_methods.codeUnitAt$1(text, end0);\n        if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n          break;\n        --end0;\n      }\n      return start === 0 && end0 === end ? _this : t1.span$2(Y.FileLocation$_(t1, t2).offset + start, Y.FileLocation$_(t1, t2).offset + end0 + 1);\n    },\n    indent_closure0: function indent_closure0(t0) {\n      this.indentation = t0;\n    },\n    flattenVertically_closure1: function flattenVertically_closure1(t0) {\n      this.T = t0;\n    },\n    flattenVertically_closure2: function flattenVertically_closure2(t0, t1) {\n      this.result = t0;\n      this.T = t1;\n    },\n    longestCommonSubsequence_closure2: function longestCommonSubsequence_closure2(t0) {\n      this.T = t0;\n    },\n    longestCommonSubsequence_closure3: function longestCommonSubsequence_closure3(t0) {\n      this.list2 = t0;\n    },\n    longestCommonSubsequence_closure4: function longestCommonSubsequence_closure4(t0, t1) {\n      this.list2 = t0;\n      this.T = t1;\n    },\n    longestCommonSubsequence_backtrack0: function longestCommonSubsequence_backtrack0(t0, t1, t2) {\n      this.selections = t0;\n      this.lengths = t1;\n      this.T = t2;\n    },\n    mapAddAll2_closure0: function mapAddAll2_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.destination = t0;\n      _.K1 = t1;\n      _.K2 = t2;\n      _.V = t3;\n    },\n    isAlphabetic: function(char) {\n      var t1;\n      if (!(char >= 65 && char <= 90))\n        t1 = char >= 97 && char <= 122;\n      else\n        t1 = true;\n      return t1;\n    },\n    isDriveLetter: function(path, index) {\n      var t1 = path.length,\n        t2 = index + 2;\n      if (t1 < t2)\n        return false;\n      if (!B.isAlphabetic(C.JSString_methods.codeUnitAt$1(path, index)))\n        return false;\n      if (C.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)\n        return false;\n      if (t1 === t2)\n        return true;\n      return C.JSString_methods.codeUnitAt$1(path, t2) === 47;\n    },\n    isAllTheSame: function(iter) {\n      var t1, lastValue, cur;\n      for (t1 = new H.ListIterator(iter, iter.get$length(iter)), lastValue = null; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (lastValue == null)\n          lastValue = cur;\n        else if (!J.$eq$(cur, lastValue))\n          return false;\n      }\n      return true;\n    },\n    replaceFirstNull: function(list, element) {\n      var index = C.JSArray_methods.indexOf$1(list, null);\n      if (index < 0)\n        throw H.wrapException(P.ArgumentError$(H.S(list) + \" contains no null elements.\"));\n      list[index] = element;\n    },\n    replaceWithNull: function(list, element) {\n      var index = C.JSArray_methods.indexOf$1(list, element);\n      if (index < 0)\n        throw H.wrapException(P.ArgumentError$(H.S(list) + \" contains no elements matching \" + element.toString$0(0) + \".\"));\n      list[index] = null;\n    },\n    countCodeUnits: function(string, codeUnit) {\n      var t1, count, cur;\n      for (t1 = new H.CodeUnits(string), t1 = new H.ListIterator(t1, t1.get$length(t1)), count = 0; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur === codeUnit)\n          ++count;\n      }\n      return count;\n    },\n    findLineStart: function(context, text, column) {\n      var beginningOfLine, index, lineStart;\n      if (text.length === 0)\n        for (beginningOfLine = 0; true;) {\n          index = C.JSString_methods.indexOf$2(context, \"\\n\", beginningOfLine);\n          if (index === -1)\n            return context.length - beginningOfLine >= column ? beginningOfLine : null;\n          if (index - beginningOfLine >= column)\n            return beginningOfLine;\n          beginningOfLine = index + 1;\n        }\n      index = C.JSString_methods.indexOf$1(context, text);\n      for (; index !== -1;) {\n        lineStart = index === 0 ? 0 : C.JSString_methods.lastIndexOf$2(context, \"\\n\", index - 1) + 1;\n        if (column === index - lineStart)\n          return lineStart;\n        index = C.JSString_methods.indexOf$2(context, text, index + 1);\n      }\n      return null;\n    },\n    validateErrorArgs: function(string, match, position, $length) {\n      var t2,\n        t1 = position != null;\n      if (t1)\n        if (position < 0)\n          throw H.wrapException(P.RangeError$(\"position must be greater than or equal to 0.\"));\n        else if (position > string.length)\n          throw H.wrapException(P.RangeError$(\"position must be less than or equal to the string length.\"));\n      t2 = $length != null;\n      if (t2 && $length < 0)\n        throw H.wrapException(P.RangeError$(\"length must be greater than or equal to 0.\"));\n      if (t1 && t2 && position + $length > string.length)\n        throw H.wrapException(P.RangeError$(\"position plus length must not go beyond the end of the string.\"));\n    }\n  },\n  O = {\n    EmptyUnmodifiableSet__throw: function() {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable Set\"));\n    },\n    EmptyUnmodifiableSet: function EmptyUnmodifiableSet(t0) {\n      this.$ti = t0;\n    },\n    Style__getPlatformStyle: function() {\n      if (P.Uri_base().get$scheme() !== \"file\")\n        return $.$get$Style_url();\n      var t1 = P.Uri_base();\n      if (!C.JSString_methods.endsWith$1(t1.get$path(t1), \"/\"))\n        return $.$get$Style_url();\n      if (P._Uri__Uri(null, \"a/b\", null, null).toFilePath$0() === \"a\\\\b\")\n        return $.$get$Style_windows();\n      return $.$get$Style_posix();\n    },\n    Style: function Style() {\n    },\n    NullExpression: function NullExpression(t0) {\n      this.span = t0;\n    },\n    AsyncImportCache__toImporters: function(importers, loadPaths, packageResolver) {\n      var _i, t2, t3, path, _null = null,\n        sassPath = H._asStringS(J.get$env$x(self.process).SASS_PATH),\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncImporter);\n      for (_i = 0; false; ++_i)\n        t1.push(importers[_i]);\n      if (loadPaths != null)\n        for (t2 = J.get$iterator$ax(loadPaths); t2.moveNext$0();) {\n          t3 = t2.get$current(t2);\n          t1.push(new F.FilesystemImporter($.$get$context().absolute$7(t3, _null, _null, _null, _null, _null, _null)));\n        }\n      if (sassPath != null) {\n        t2 = sassPath.split(J.$eq$(J.get$platform$x(self.process), \"win32\") ? \";\" : \":\");\n        t3 = t2.length;\n        _i = 0;\n        for (; _i < t3; ++_i) {\n          path = t2[_i];\n          t1.push(new F.FilesystemImporter($.$get$context().absolute$7(path, _null, _null, _null, _null, _null, _null)));\n        }\n      }\n      return t1;\n    },\n    AsyncImportCache: function AsyncImportCache(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._async_import_cache$_importers = t0;\n      _._async_import_cache$_logger = t1;\n      _._async_import_cache$_canonicalizeCache = t2;\n      _._async_import_cache$_importCache = t3;\n      _._async_import_cache$_resultsCache = t4;\n    },\n    AsyncImportCache_canonicalize_closure: function AsyncImportCache_canonicalize_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.url = t1;\n      this.forImport = t2;\n    },\n    AsyncImportCache__canonicalize_closure: function AsyncImportCache__canonicalize_closure(t0, t1) {\n      this.importer = t0;\n      this.url = t1;\n    },\n    AsyncImportCache_importCanonical_closure: function AsyncImportCache_importCanonical_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.originalUrl = t3;\n    },\n    AsyncImportCache_humanize_closure: function AsyncImportCache_humanize_closure(t0) {\n      this.canonicalUrl = t0;\n    },\n    AsyncImportCache_humanize_closure0: function AsyncImportCache_humanize_closure0() {\n    },\n    AsyncImportCache_humanize_closure1: function AsyncImportCache_humanize_closure1() {\n    },\n    Environment$: function(sourceMap) {\n      var _null = null,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Module_legacy_Callable,\n        t3 = type$.legacy_AstNode,\n        t4 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable),\n        t5 = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Value)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Value),\n        t6 = sourceMap ? H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t3)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode) : _null,\n        t7 = type$.legacy_int,\n        t8 = type$.legacy_Callable,\n        t9 = type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Callable;\n      return new O.Environment(P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), P.LinkedHashMap_LinkedHashMap$_empty(t1, t3), P.LinkedHashSet_LinkedHashSet$_empty(t2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), _null, _null, _null, t4, t5, t6, P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), _null);\n    },\n    Environment$_: function(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, _functions, _mixins, _content) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_int;\n      return new O.Environment(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _functions, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _mixins, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _content);\n    },\n    _EnvironmentModule__EnvironmentModule: function(environment, css, extender, forwarded) {\n      var t1, t2, t3, t4, t5, t6;\n      if (forwarded == null)\n        forwarded = C.Set_empty;\n      t1 = O._EnvironmentModule__makeModulesByVariable(forwarded);\n      t2 = H._instanceType(forwarded);\n      t3 = O._EnvironmentModule__memberMap(C.JSArray_methods.get$first(environment._variables), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Value*>*>\")), type$.legacy_Value);\n      t4 = environment._variableNodes;\n      t4 = t4 == null ? null : O._EnvironmentModule__memberMap(C.JSArray_methods.get$first(t4), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure0(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AstNode*>*>\")), type$.legacy_AstNode);\n      t2 = t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Callable*>*>\");\n      t5 = type$.legacy_Callable;\n      t6 = O._EnvironmentModule__memberMap(C.JSArray_methods.get$first(environment._functions), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure1(), t2), t5);\n      t5 = O._EnvironmentModule__memberMap(C.JSArray_methods.get$first(environment._mixins), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure2(), t2), t5);\n      t2 = J.get$isNotEmpty$asx(css.get$children(css)) || C.JSArray_methods.any$1(environment._allModules, new O._EnvironmentModule__EnvironmentModule_closure3());\n      return O._EnvironmentModule$_(environment, css, extender, t1, t3, t4, t6, t5, t2, !extender.get$isEmpty(extender) || C.JSArray_methods.any$1(environment._allModules, new O._EnvironmentModule__EnvironmentModule_closure4()));\n    },\n    _EnvironmentModule__makeModulesByVariable: function(forwarded) {\n      var modulesByVariable, t1, t2, t3, t4, t5;\n      if (forwarded.get$isEmpty(forwarded))\n        return C.Map_empty0;\n      modulesByVariable = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_Module_legacy_Callable);\n      for (t1 = forwarded.get$iterator(forwarded); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        if (t2 instanceof O._EnvironmentModule) {\n          for (t3 = t2._modulesByVariable, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n            t4 = t3.get$current(t3);\n            t5 = t4.get$variables();\n            B.setAll(modulesByVariable, t5.get$keys(t5), t4);\n          }\n          B.setAll(modulesByVariable, J.get$keys$z(C.JSArray_methods.get$first(t2._environment._variables)), t2);\n        } else {\n          t3 = t2.get$variables();\n          B.setAll(modulesByVariable, t3.get$keys(t3), t2);\n        }\n      }\n      return modulesByVariable;\n    },\n    _EnvironmentModule__memberMap: function(localMap, otherMaps, $V) {\n      var t1, t2, t3, cur;\n      localMap = new U.PublicMemberMapView(localMap, $V._eval$1(\"PublicMemberMapView<0*>\"));\n      t1 = otherMaps.__internal$_iterable;\n      t2 = J.getInterceptor$asx(t1);\n      if (t2.get$isEmpty(t1))\n        return localMap;\n      t3 = H.setRuntimeTypeInfo([], $V._eval$1(\"JSArray<Map<String*,0*>*>\"));\n      for (t1 = new H.MappedIterator(t2.get$iterator(t1), otherMaps._f); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur.get$isNotEmpty(cur))\n          t3.push(cur);\n      }\n      t3.push(localMap);\n      if (t3.length === 1)\n        return localMap;\n      return Z.MergedMapView$(t3, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    _EnvironmentModule$_: function(_environment, css, extender, _modulesByVariable, variables, variableNodes, functions, mixins, transitivelyContainsCss, transitivelyContainsExtensions) {\n      return new O._EnvironmentModule(_environment._allModules, variables, variableNodes, functions, mixins, extender, css, transitivelyContainsCss, transitivelyContainsExtensions, _environment, _modulesByVariable);\n    },\n    Environment: function Environment(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {\n      var _ = this;\n      _._environment$_modules = t0;\n      _._namespaceNodes = t1;\n      _._globalModules = t2;\n      _._globalModuleNodes = t3;\n      _._forwardedModules = t4;\n      _._forwardedModuleNodes = t5;\n      _._nestedForwardedModules = t6;\n      _._allModules = t7;\n      _._variables = t8;\n      _._variableNodes = t9;\n      _._variableIndices = t10;\n      _._functions = t11;\n      _._functionIndices = t12;\n      _._mixins = t13;\n      _._mixinIndices = t14;\n      _._content = t15;\n      _._inMixin = false;\n      _._inSemiGlobalScope = true;\n      _._lastVariableIndex = _._lastVariableName = null;\n    },\n    Environment_importForwards_closure: function Environment_importForwards_closure() {\n    },\n    Environment_importForwards_closure0: function Environment_importForwards_closure0() {\n    },\n    Environment_importForwards_closure1: function Environment_importForwards_closure1() {\n    },\n    Environment_importForwards_closure2: function Environment_importForwards_closure2() {\n    },\n    Environment__getVariableFromGlobalModule_closure: function Environment__getVariableFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    Environment_setVariable_closure: function Environment_setVariable_closure(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    Environment_setVariable_closure0: function Environment_setVariable_closure0(t0) {\n      this.name = t0;\n    },\n    Environment_setVariable_closure1: function Environment_setVariable_closure1(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    Environment__getFunctionFromGlobalModule_closure: function Environment__getFunctionFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    Environment__getMixinFromGlobalModule_closure: function Environment__getMixinFromGlobalModule_closure(t0) {\n      this.name = t0;\n    },\n    _EnvironmentModule: function _EnvironmentModule(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {\n      var _ = this;\n      _.upstream = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.extender = t5;\n      _.css = t6;\n      _.transitivelyContainsCss = t7;\n      _.transitivelyContainsExtensions = t8;\n      _._environment = t9;\n      _._modulesByVariable = t10;\n    },\n    _EnvironmentModule__EnvironmentModule_closure: function _EnvironmentModule__EnvironmentModule_closure() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure0: function _EnvironmentModule__EnvironmentModule_closure0() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure1: function _EnvironmentModule__EnvironmentModule_closure1() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure2: function _EnvironmentModule__EnvironmentModule_closure2() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure3: function _EnvironmentModule__EnvironmentModule_closure3() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure4: function _EnvironmentModule__EnvironmentModule_closure4() {\n    },\n    SassNull: function SassNull() {\n    },\n    AsyncImportCache$none: function(logger) {\n      var t1 = type$.legacy_Uri;\n      return new O.AsyncImportCache0(C.C_StderrLogger, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Stylesheet), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ImporterResult));\n    },\n    AsyncImportCache0: function AsyncImportCache0(t0, t1, t2, t3) {\n      var _ = this;\n      _._async_import_cache0$_logger = t0;\n      _._async_import_cache0$_canonicalizeCache = t1;\n      _._async_import_cache0$_importCache = t2;\n      _._async_import_cache0$_resultsCache = t3;\n    },\n    AsyncImportCache_canonicalize_closure0: function AsyncImportCache_canonicalize_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.url = t1;\n      this.forImport = t2;\n    },\n    AsyncImportCache__canonicalize_closure0: function AsyncImportCache__canonicalize_closure0(t0, t1) {\n      this.importer = t0;\n      this.url = t1;\n    },\n    AsyncImportCache_importCanonical_closure0: function AsyncImportCache_importCanonical_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.originalUrl = t3;\n    },\n    AsyncImportCache_humanize_closure2: function AsyncImportCache_humanize_closure2(t0) {\n      this.canonicalUrl = t0;\n    },\n    AsyncImportCache_humanize_closure3: function AsyncImportCache_humanize_closure3() {\n    },\n    AsyncImportCache_humanize_closure4: function AsyncImportCache_humanize_closure4() {\n    },\n    Environment$0: function(sourceMap) {\n      var _null = null,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Module_legacy_Callable_2,\n        t3 = type$.legacy_AstNode_2,\n        t4 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2),\n        t5 = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Value_2)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Value_2),\n        t6 = sourceMap ? H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t3)], type$.JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode_2) : _null,\n        t7 = type$.legacy_int,\n        t8 = type$.legacy_Callable_2,\n        t9 = type$.JSArray_legacy_Map_of_legacy_String_and_legacy_Callable_2;\n      return new O.Environment0(P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), P.LinkedHashMap_LinkedHashMap$_empty(t1, t3), P.LinkedHashSet_LinkedHashSet$_empty(t2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), _null, _null, _null, t4, t5, t6, P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_empty(t1, t8)], t9), P.LinkedHashMap_LinkedHashMap$_empty(t1, t7), _null);\n    },\n    Environment$_0: function(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, _functions, _mixins, _content) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_int;\n      return new O.Environment0(_modules, _namespaceNodes, _globalModules, _globalModuleNodes, _forwardedModules, _forwardedModuleNodes, _nestedForwardedModules, _allModules, _variables, _variableNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _functions, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _mixins, P.LinkedHashMap_LinkedHashMap$_empty(t1, t2), _content);\n    },\n    _EnvironmentModule__EnvironmentModule1: function(environment, css, extender, forwarded) {\n      var t1, t2, t3, t4, t5, t6;\n      if (forwarded == null)\n        forwarded = C.Set_empty2;\n      t1 = O._EnvironmentModule__makeModulesByVariable1(forwarded);\n      t2 = H._instanceType(forwarded);\n      t3 = O._EnvironmentModule__memberMap1(C.JSArray_methods.get$first(environment._environment0$_variables), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure11(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Value0*>*>\")), type$.legacy_Value_2);\n      t4 = environment._environment0$_variableNodes;\n      t4 = t4 == null ? null : O._EnvironmentModule__memberMap1(C.JSArray_methods.get$first(t4), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure12(), t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,AstNode0*>*>\")), type$.legacy_AstNode_2);\n      t2 = t2._eval$1(\"EfficientLengthMappedIterable<1,Map<String*,Callable0*>*>\");\n      t5 = type$.legacy_Callable_2;\n      t6 = O._EnvironmentModule__memberMap1(C.JSArray_methods.get$first(environment._environment0$_functions), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure13(), t2), t5);\n      t5 = O._EnvironmentModule__memberMap1(C.JSArray_methods.get$first(environment._environment0$_mixins), new H.EfficientLengthMappedIterable(forwarded, new O._EnvironmentModule__EnvironmentModule_closure14(), t2), t5);\n      t2 = J.get$isNotEmpty$asx(css.get$children(css)) || C.JSArray_methods.any$1(environment._environment0$_allModules, new O._EnvironmentModule__EnvironmentModule_closure15());\n      return O._EnvironmentModule$_1(environment, css, extender, t1, t3, t4, t6, t5, t2, !extender.get$isEmpty(extender) || C.JSArray_methods.any$1(environment._environment0$_allModules, new O._EnvironmentModule__EnvironmentModule_closure16()));\n    },\n    _EnvironmentModule__makeModulesByVariable1: function(forwarded) {\n      var modulesByVariable, t1, t2, t3, t4, t5;\n      if (forwarded.get$isEmpty(forwarded))\n        return C.Map_empty6;\n      modulesByVariable = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_Module_legacy_Callable_2);\n      for (t1 = forwarded.get$iterator(forwarded); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        if (t2 instanceof O._EnvironmentModule1) {\n          for (t3 = t2._environment0$_modulesByVariable, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n            t4 = t3.get$current(t3);\n            t5 = t4.get$variables();\n            B.setAll0(modulesByVariable, t5.get$keys(t5), t4);\n          }\n          B.setAll0(modulesByVariable, J.get$keys$z(C.JSArray_methods.get$first(t2._environment0$_environment._environment0$_variables)), t2);\n        } else {\n          t3 = t2.get$variables();\n          B.setAll0(modulesByVariable, t3.get$keys(t3), t2);\n        }\n      }\n      return modulesByVariable;\n    },\n    _EnvironmentModule__memberMap1: function(localMap, otherMaps, $V) {\n      var t1, t2, t3, cur;\n      localMap = new U.PublicMemberMapView0(localMap, $V._eval$1(\"PublicMemberMapView0<0*>\"));\n      t1 = otherMaps.__internal$_iterable;\n      t2 = J.getInterceptor$asx(t1);\n      if (t2.get$isEmpty(t1))\n        return localMap;\n      t3 = H.setRuntimeTypeInfo([], $V._eval$1(\"JSArray<Map<String*,0*>*>\"));\n      for (t1 = new H.MappedIterator(t2.get$iterator(t1), otherMaps._f); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur.get$isNotEmpty(cur))\n          t3.push(cur);\n      }\n      t3.push(localMap);\n      if (t3.length === 1)\n        return localMap;\n      return Z.MergedMapView$0(t3, type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    _EnvironmentModule$_1: function(_environment, css, extender, _modulesByVariable, variables, variableNodes, functions, mixins, transitivelyContainsCss, transitivelyContainsExtensions) {\n      return new O._EnvironmentModule1(_environment._environment0$_allModules, variables, variableNodes, functions, mixins, extender, css, transitivelyContainsCss, transitivelyContainsExtensions, _environment, _modulesByVariable);\n    },\n    Environment0: function Environment0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {\n      var _ = this;\n      _._environment0$_modules = t0;\n      _._environment0$_namespaceNodes = t1;\n      _._environment0$_globalModules = t2;\n      _._environment0$_globalModuleNodes = t3;\n      _._environment0$_forwardedModules = t4;\n      _._environment0$_forwardedModuleNodes = t5;\n      _._environment0$_nestedForwardedModules = t6;\n      _._environment0$_allModules = t7;\n      _._environment0$_variables = t8;\n      _._environment0$_variableNodes = t9;\n      _._environment0$_variableIndices = t10;\n      _._environment0$_functions = t11;\n      _._environment0$_functionIndices = t12;\n      _._environment0$_mixins = t13;\n      _._environment0$_mixinIndices = t14;\n      _._environment0$_content = t15;\n      _._environment0$_inMixin = false;\n      _._environment0$_inSemiGlobalScope = true;\n      _._environment0$_lastVariableIndex = _._environment0$_lastVariableName = null;\n    },\n    Environment_importForwards_closure3: function Environment_importForwards_closure3() {\n    },\n    Environment_importForwards_closure4: function Environment_importForwards_closure4() {\n    },\n    Environment_importForwards_closure5: function Environment_importForwards_closure5() {\n    },\n    Environment_importForwards_closure6: function Environment_importForwards_closure6() {\n    },\n    Environment__getVariableFromGlobalModule_closure0: function Environment__getVariableFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    Environment_setVariable_closure2: function Environment_setVariable_closure2(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    Environment_setVariable_closure3: function Environment_setVariable_closure3(t0) {\n      this.name = t0;\n    },\n    Environment_setVariable_closure4: function Environment_setVariable_closure4(t0, t1) {\n      this.$this = t0;\n      this.name = t1;\n    },\n    Environment__getFunctionFromGlobalModule_closure0: function Environment__getFunctionFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    Environment__getMixinFromGlobalModule_closure0: function Environment__getMixinFromGlobalModule_closure0(t0) {\n      this.name = t0;\n    },\n    _EnvironmentModule1: function _EnvironmentModule1(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {\n      var _ = this;\n      _.upstream = t0;\n      _.variables = t1;\n      _.variableNodes = t2;\n      _.functions = t3;\n      _.mixins = t4;\n      _.extender = t5;\n      _.css = t6;\n      _.transitivelyContainsCss = t7;\n      _.transitivelyContainsExtensions = t8;\n      _._environment0$_environment = t9;\n      _._environment0$_modulesByVariable = t10;\n    },\n    _EnvironmentModule__EnvironmentModule_closure11: function _EnvironmentModule__EnvironmentModule_closure11() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure12: function _EnvironmentModule__EnvironmentModule_closure12() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure13: function _EnvironmentModule__EnvironmentModule_closure13() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure14: function _EnvironmentModule__EnvironmentModule_closure14() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure15: function _EnvironmentModule__EnvironmentModule_closure15() {\n    },\n    _EnvironmentModule__EnvironmentModule_closure16: function _EnvironmentModule__EnvironmentModule_closure16() {\n    },\n    NullExpression0: function NullExpression0(t0) {\n      this.span = t0;\n    },\n    closure238: function closure238() {\n    },\n    _closure29: function _closure29() {\n    },\n    _closure30: function _closure30() {\n    },\n    SassNull0: function SassNull0() {\n    }\n  },\n  U = {DefaultEquality: function DefaultEquality() {\n    }, IterableEquality: function IterableEquality() {\n    }, ListEquality: function ListEquality() {\n    }, _MapEntry: function _MapEntry(t0, t1, t2) {\n      this.equality = t0;\n      this.key = t1;\n      this.value = t2;\n    }, MapEquality: function MapEquality() {\n    },\n    ModifiableCssAtRule$: function($name, span, childless, value) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      return new U.ModifiableCssAtRule($name, value, childless, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode), t1);\n    },\n    ModifiableCssAtRule: function ModifiableCssAtRule(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.isChildless = t2;\n      _.span = t3;\n      _.children = t4;\n      _._children = t5;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    ModifiableCssKeyframeBlock$: function(selector, span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      return new U.ModifiableCssKeyframeBlock(selector, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode), t1);\n    },\n    ModifiableCssKeyframeBlock: function ModifiableCssKeyframeBlock(t0, t1, t2, t3) {\n      var _ = this;\n      _.selector = t0;\n      _.span = t1;\n      _.children = t2;\n      _._children = t3;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    AtRule$: function($name, span, children, value) {\n      var t1 = children == null ? null : P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = t1 == null ? null : C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new U.AtRule($name, value, span, t1, t2 === true);\n    },\n    AtRule: function AtRule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    SupportsOperation: function SupportsOperation(t0, t1, t2, t3) {\n      var _ = this;\n      _.left = t0;\n      _.right = t1;\n      _.operator = t2;\n      _.span = t3;\n    },\n    _compileStylesheet: function(stylesheet, logger, importCache, nodeImporter, importer, functions, style, useSpaces, indentWidth, lineFeed, sourceMap, charset) {\n      var serializeResult = N.serialize(R._EvaluateVisitor$(functions, importCache, logger, nodeImporter, sourceMap).run$2(0, importer, stylesheet).stylesheet, charset, indentWidth, false, lineFeed, sourceMap, style, true),\n        t1 = serializeResult.sourceMap;\n      if (t1 != null && true)\n        B.mapInPlace(t1.urls, new U._compileStylesheet_closure(stylesheet, importCache));\n      return new X.CompileResult(serializeResult);\n    },\n    _compileStylesheet_closure: function _compileStylesheet_closure(t0, t1) {\n      this.stylesheet = t0;\n      this.importCache = t1;\n    },\n    SassParser: function SassParser(t0, t1, t2) {\n      var _ = this;\n      _._currentIndentation = 0;\n      _._spaces = _._nextIndentationEnd = _._nextIndentation = null;\n      _._isUseAllowed = true;\n      _._stylesheet$_inMixin = false;\n      _._mixinHasContent = null;\n      _._inParentheses = _._inStyleRule = _._stylesheet$_inUnknownAtRule = _._inControlDirective = _._inContentBlock = false;\n      _._globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    SassParser_children_closure: function SassParser_children_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.children = t1;\n      this.child = t2;\n    },\n    MultiDirWatcher: function MultiDirWatcher(t0, t1, t2) {\n      this._watchers = t0;\n      this._group = t1;\n      this._poll = t2;\n    },\n    PublicMemberMapView: function PublicMemberMapView(t0, t1) {\n      this._inner = t0;\n      this.$ti = t1;\n    },\n    Highlighter$: function(span, color) {\n      var t1 = U.Highlighter__collateLines(H.setRuntimeTypeInfo([U._Highlight$(span, null, true)], type$.JSArray_legacy__Highlight)),\n        t2 = new U.Highlighter_closure(color).call$0(),\n        t3 = C.JSInt_methods.toString$0(C.JSArray_methods.get$last(t1).number + 1),\n        t4 = U.Highlighter__contiguous(t1) ? 0 : 3,\n        t5 = H._arrayInstanceType(t1);\n      return new U.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new H.MappedListIterable(t1, new U.Highlighter$__closure(), t5._eval$1(\"MappedListIterable<1,int*>\")).reduce$1(0, H.instantiate1(P.math__max$closure(), type$.legacy_int)), !B.isAllTheSame(new H.MappedListIterable(t1, new U.Highlighter$__closure0(), t5._eval$1(\"MappedListIterable<1,Object*>\"))), new P.StringBuffer(\"\"));\n    },\n    Highlighter$multiple: function(primarySpan, primaryLabel, secondarySpans, color, primaryColor, secondaryColor) {\n      var t2, t3, t4, t5, t6,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy__Highlight);\n      t1.push(U._Highlight$(primarySpan, primaryLabel, true));\n      for (t2 = secondarySpans.get$entries(secondarySpans), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.push(U._Highlight$(t3.key, t3.value, false));\n      }\n      t1 = U.Highlighter__collateLines(t1);\n      if (color)\n        t2 = \"\\x1b[31m\";\n      else\n        t2 = null;\n      if (color)\n        t3 = \"\\x1b[34m\";\n      else\n        t3 = null;\n      t4 = C.JSInt_methods.toString$0(C.JSArray_methods.get$last(t1).number + 1);\n      t5 = U.Highlighter__contiguous(t1) ? 0 : 3;\n      t6 = H._arrayInstanceType(t1);\n      return new U.Highlighter(t1, t2, t3, 1 + Math.max(t4.length, t5), new H.MappedListIterable(t1, new U.Highlighter$__closure(), t6._eval$1(\"MappedListIterable<1,int*>\")).reduce$1(0, H.instantiate1(P.math__max$closure(), type$.legacy_int)), !B.isAllTheSame(new H.MappedListIterable(t1, new U.Highlighter$__closure0(), t6._eval$1(\"MappedListIterable<1,Object*>\"))), new P.StringBuffer(\"\"));\n    },\n    Highlighter__contiguous: function(lines) {\n      var i, thisLine, nextLine;\n      for (i = 0; i < lines.length - 1;) {\n        thisLine = lines[i];\n        ++i;\n        nextLine = lines[i];\n        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))\n          return false;\n      }\n      return true;\n    },\n    Highlighter__collateLines: function(highlights) {\n      var t1, t2,\n        highlightsByUrl = Y.groupBy(highlights, new U.Highlighter__collateLines_closure(), type$.legacy__Highlight, type$.dynamic);\n      for (t1 = highlightsByUrl.get$values(highlightsByUrl), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        J.sort$1$ax(t1.get$current(t1), new U.Highlighter__collateLines_closure0());\n      t1 = highlightsByUrl.get$values(highlightsByUrl);\n      t2 = H._instanceType(t1)._eval$1(\"ExpandIterable<Iterable.E,_Line*>\");\n      return P.List_List$from(new H.ExpandIterable(t1, new U.Highlighter__collateLines_closure1(), t2), true, t2._eval$1(\"Iterable.E\"));\n    },\n    _Highlight$: function(span, label, primary) {\n      return new U._Highlight(new U._Highlight_closure(span).call$0(), primary, label);\n    },\n    _Highlight__normalizeNewlines: function(span) {\n      var endOffset, t1, i, t2, t3, t4,\n        text = span.get$text();\n      if (!C.JSString_methods.contains$1(text, \"\\r\\n\"))\n        return span;\n      endOffset = span.get$end(span).get$offset();\n      for (t1 = text.length - 1, i = 0; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1(text, i) === 13 && C.JSString_methods._codeUnitAt$1(text, i + 1) === 10)\n          --endOffset;\n      t1 = span.get$start(span);\n      t2 = span.get$sourceUrl(span);\n      t3 = span.get$end(span).get$line();\n      t2 = V.SourceLocation$(endOffset, span.get$end(span).get$column(), t3, t2);\n      t3 = H.stringReplaceAllUnchecked(text, \"\\r\\n\", \"\\n\");\n      t4 = span.get$context(span);\n      return X.SourceSpanWithContext$(t1, t2, t3, H.stringReplaceAllUnchecked(t4, \"\\r\\n\", \"\\n\"));\n    },\n    _Highlight__normalizeTrailingNewline: function(span) {\n      var context, text, start, end, t1, t2, t3;\n      if (!C.JSString_methods.endsWith$1(span.get$context(span), \"\\n\"))\n        return span;\n      if (C.JSString_methods.endsWith$1(span.get$text(), \"\\n\\n\"))\n        return span;\n      context = C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1);\n      text = span.get$text();\n      start = span.get$start(span);\n      end = span.get$end(span);\n      if (C.JSString_methods.endsWith$1(span.get$text(), \"\\n\") && B.findLineStart(span.get$context(span), span.get$text(), span.get$start(span).get$column()) + span.get$start(span).get$column() + span.get$length(span) === span.get$context(span).length) {\n        text = C.JSString_methods.substring$2(span.get$text(), 0, span.get$text().length - 1);\n        if (text.length === 0)\n          end = start;\n        else {\n          t1 = span.get$end(span).get$offset();\n          t2 = span.get$sourceUrl(span);\n          t3 = span.get$end(span).get$line();\n          end = V.SourceLocation$(t1 - 1, U._Highlight__lastLineLength(context), t3 - 1, t2);\n          start = span.get$start(span).get$offset() === span.get$end(span).get$offset() ? end : span.get$start(span);\n        }\n      }\n      return X.SourceSpanWithContext$(start, end, text, context);\n    },\n    _Highlight__normalizeEndOfLine: function(span) {\n      var text, t1, t2, t3, t4;\n      if (span.get$end(span).get$column() !== 0)\n        return span;\n      if (span.get$end(span).get$line() == span.get$start(span).get$line())\n        return span;\n      text = C.JSString_methods.substring$2(span.get$text(), 0, span.get$text().length - 1);\n      t1 = span.get$start(span);\n      t2 = span.get$end(span).get$offset();\n      t3 = span.get$sourceUrl(span);\n      t4 = span.get$end(span).get$line();\n      t3 = V.SourceLocation$(t2 - 1, text.length - C.JSString_methods.lastIndexOf$1(text, \"\\n\") - 1, t4 - 1, t3);\n      return X.SourceSpanWithContext$(t1, t3, text, C.JSString_methods.endsWith$1(span.get$context(span), \"\\n\") ? C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1) : span.get$context(span));\n    },\n    _Highlight__lastLineLength: function(text) {\n      var t1 = text.length;\n      if (t1 === 0)\n        return 0;\n      else if (C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 10)\n        return t1 === 1 ? 0 : t1 - C.JSString_methods.lastIndexOf$2(text, \"\\n\", t1 - 2) - 1;\n      else\n        return t1 - C.JSString_methods.lastIndexOf$1(text, \"\\n\") - 1;\n    },\n    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._lines = t0;\n      _._primaryColor = t1;\n      _._secondaryColor = t2;\n      _._paddingBeforeSidebar = t3;\n      _._maxMultilineSpans = t4;\n      _._multipleFiles = t5;\n      _._highlighter$_buffer = t6;\n    },\n    Highlighter_closure: function Highlighter_closure(t0) {\n      this.color = t0;\n    },\n    Highlighter$__closure: function Highlighter$__closure() {\n    },\n    Highlighter$___closure: function Highlighter$___closure() {\n    },\n    Highlighter$__closure0: function Highlighter$__closure0() {\n    },\n    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {\n    },\n    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {\n    },\n    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {\n    },\n    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {\n      this.line = t0;\n    },\n    Highlighter_highlight_closure: function Highlighter_highlight_closure() {\n    },\n    Highlighter_highlight_closure0: function Highlighter_highlight_closure0() {\n    },\n    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {\n      this.$this = t0;\n    },\n    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.startLine = t1;\n      this.line = t2;\n    },\n    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {\n      this.$this = t0;\n      this.highlight = t1;\n    },\n    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {\n      this.$this = t0;\n    },\n    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.current = t2;\n      _.startLine = t3;\n      _.line = t4;\n      _.highlight = t5;\n      _.endLine = t6;\n    },\n    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {\n      this.$this = t0;\n      this.vertical = t1;\n    },\n    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.text = t1;\n      _.startColumn = t2;\n      _.endColumn = t3;\n    },\n    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.line = t1;\n      this.highlight = t2;\n    },\n    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.line = t1;\n      this.highlight = t2;\n    },\n    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.coversWholeLine = t1;\n      _.line = t2;\n      _.highlight = t3;\n    },\n    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.end = t2;\n    },\n    _Highlight: function _Highlight(t0, t1, t2) {\n      this.span = t0;\n      this.isPrimary = t1;\n      this.label = t2;\n    },\n    _Highlight_closure: function _Highlight_closure(t0) {\n      this.span = t0;\n    },\n    _Line: function _Line(t0, t1, t2, t3) {\n      var _ = this;\n      _.text = t0;\n      _.number = t1;\n      _.url = t2;\n      _.highlights = t3;\n    },\n    Chain_Chain$parse: function(chain) {\n      var t1, t2,\n        _s51_ = string$.x3d_____;\n      if (chain.length === 0)\n        return new U.Chain(P.List_List$unmodifiable(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Trace), type$.legacy_Trace));\n      t1 = $.$get$vmChainGap();\n      if (C.JSString_methods.contains$1(chain, t1)) {\n        t1 = C.JSString_methods.split$1(chain, t1);\n        t2 = H._arrayInstanceType(t1);\n        return new U.Chain(P.List_List$unmodifiable(new H.MappedIterable(new H.WhereIterable(t1, new U.Chain_Chain$parse_closure(), t2._eval$1(\"WhereIterable<1>\")), new U.Chain_Chain$parse_closure0(), t2._eval$1(\"MappedIterable<1,Trace*>\")), type$.legacy_Trace));\n      }\n      if (!C.JSString_methods.contains$1(chain, _s51_))\n        return new U.Chain(P.List_List$unmodifiable(H.setRuntimeTypeInfo([Y.Trace_Trace$parse(chain)], type$.JSArray_legacy_Trace), type$.legacy_Trace));\n      return new U.Chain(P.List_List$unmodifiable(new H.MappedListIterable(H.setRuntimeTypeInfo(chain.split(_s51_), type$.JSArray_String), new U.Chain_Chain$parse_closure1(), type$.MappedListIterable_of_String_and_legacy_Trace), type$.legacy_Trace));\n    },\n    Chain: function Chain(t0) {\n      this.traces = t0;\n    },\n    Chain_Chain$parse_closure: function Chain_Chain$parse_closure() {\n    },\n    Chain_Chain$parse_closure0: function Chain_Chain$parse_closure0() {\n    },\n    Chain_Chain$parse_closure1: function Chain_Chain$parse_closure1() {\n    },\n    Chain_toTrace_closure: function Chain_toTrace_closure() {\n    },\n    Chain_toString_closure0: function Chain_toString_closure0() {\n    },\n    Chain_toString__closure0: function Chain_toString__closure0() {\n    },\n    Chain_toString_closure: function Chain_toString_closure(t0) {\n      this.longest = t0;\n    },\n    Chain_toString__closure: function Chain_toString__closure(t0) {\n      this.longest = t0;\n    },\n    ModifiableCssAtRule$0: function($name, span, childless, value) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      return new U.ModifiableCssAtRule0($name, value, childless, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t1);\n    },\n    ModifiableCssAtRule0: function ModifiableCssAtRule0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.isChildless = t2;\n      _.span = t3;\n      _.children = t4;\n      _._node2$_children = t5;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    AtRule$0: function($name, span, children, value) {\n      var t1 = children == null ? null : P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = t1 == null ? null : C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new U.AtRule0($name, value, span, t1, t2 === true);\n    },\n    AtRule0: function AtRule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.value = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    _compileStylesheet1: function(stylesheet, logger, importCache, nodeImporter, importer, functions, style, useSpaces, indentWidth, lineFeed, sourceMap, charset) {\n      var evaluateResult = R._EvaluateVisitor$1(functions, importCache, logger, nodeImporter, sourceMap).run$2(0, importer, stylesheet),\n        serializeResult = N.serialize0(evaluateResult.stylesheet, true, indentWidth, false, lineFeed, sourceMap, style, useSpaces),\n        t1 = serializeResult.sourceMap;\n      if (t1 != null && importCache != null)\n        B.mapInPlace0(t1.urls, new U._compileStylesheet_closure1(stylesheet, importCache));\n      return new X.CompileResult0(evaluateResult, serializeResult);\n    },\n    _compileStylesheet_closure1: function _compileStylesheet_closure1(t0, t1) {\n      this.stylesheet = t0;\n      this.importCache = t1;\n    },\n    ModifiableCssKeyframeBlock$0: function(selector, span) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      return new U.ModifiableCssKeyframeBlock0(selector, span, new P.UnmodifiableListView(t1, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t1);\n    },\n    ModifiableCssKeyframeBlock0: function ModifiableCssKeyframeBlock0(t0, t1, t2, t3) {\n      var _ = this;\n      _.selector = t0;\n      _.span = t1;\n      _.children = t2;\n      _._node2$_children = t3;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    SupportsOperation0: function SupportsOperation0(t0, t1, t2, t3) {\n      var _ = this;\n      _.left = t0;\n      _.right = t1;\n      _.operator = t2;\n      _.span = t3;\n    },\n    PublicMemberMapView0: function PublicMemberMapView0(t0, t1) {\n      this._public_member_map_view$_inner = t0;\n      this.$ti = t1;\n    },\n    RenderResult: function RenderResult() {\n    },\n    RenderResultStats: function RenderResultStats() {\n    },\n    main: function(args) {\n      return U.main$body(args);\n    },\n    main$body: function(args) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], printError, graph, source, destination, error, stackTrace, error0, stackTrace0, error1, error2, stackTrace1, buffer, options, t1, t2, t3, t4, exception, _box_0, $async$exception, $async$exception1, $async$temp1;\n      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              _box_0 = {};\n              _box_0.printedError = false;\n              printError = new U.main_printError(_box_0);\n              _box_0.options = null;\n              $async$handler = 4;\n              options = B.ExecutableOptions_ExecutableOptions$parse(args);\n              _box_0.options = options;\n              t1 = options._options;\n              $._glyphs = !(t1.wasParsed$1(\"unicode\") ? H._asBoolS(t1.$index(0, \"unicode\")) : $._glyphs !== C.C_AsciiGlyphSet) ? C.C_AsciiGlyphSet : C.C_UnicodeGlyphSet;\n              $async$goto = H._asBoolS(_box_0.options._options.$index(0, \"version\")) ? 7 : 8;\n              break;\n            case 7:\n              // then\n              $async$temp1 = P;\n              $async$goto = 9;\n              return P._asyncAwait(U._loadVersion(), $async$main);\n            case 9:\n              // returning from await.\n              $async$temp1.print($async$result);\n              J.set$exitCode$x(self.process, 0);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 8:\n              // join\n              $async$goto = _box_0.options.get$interactive() ? 10 : 11;\n              break;\n            case 10:\n              // then\n              $async$goto = 12;\n              return P._asyncAwait(Y.repl(_box_0.options), $async$main);\n            case 12:\n              // returning from await.\n              // goto return\n              $async$goto = 1;\n              break;\n            case 11:\n              // join\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Importer);\n              t2 = type$.legacy_List_legacy_String._as(_box_0.options._options.$index(0, \"load-path\"));\n              t3 = _box_0.options;\n              t4 = type$.legacy_Uri;\n              graph = new M.StylesheetGraph(P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_StylesheetNode), R.ImportCache$(t1, t2, H._asBoolS(t3._options.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(t3.get$color())), P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_DateTime));\n              $async$goto = H._asBoolS(_box_0.options._options.$index(0, \"watch\")) ? 13 : 14;\n              break;\n            case 13:\n              // then\n              $async$goto = 15;\n              return P._asyncAwait(A.watch(_box_0.options, graph), $async$main);\n            case 15:\n              // returning from await.\n              // goto return\n              $async$goto = 1;\n              break;\n            case 14:\n              // join\n              t1 = _box_0.options, t1._ensureSources$0(), t1 = t1._sourcesToDestinations, t1 = J.get$iterator$ax(t1.get$keys(t1));\n            case 16:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 17;\n                break;\n              }\n              source = t1.get$current(t1);\n              t2 = _box_0.options;\n              t2._ensureSources$0();\n              destination = t2._sourcesToDestinations.$index(0, source);\n              $async$handler = 19;\n              t2 = _box_0.options;\n              $async$goto = 22;\n              return P._asyncAwait(D.compileStylesheet(t2, graph, source, destination, H._asBoolS(t2._options.$index(0, \"update\"))), $async$main);\n            case 22:\n              // returning from await.\n              $async$handler = 4;\n              // goto after finally\n              $async$goto = 21;\n              break;\n            case 19:\n              // catch\n              $async$handler = 18;\n              $async$exception = $async$currentError;\n              t2 = H.unwrapException($async$exception);\n              if (t2 instanceof E.SassException) {\n                error = t2;\n                stackTrace = H.getTraceFromException($async$exception);\n                new U.main_closure(_box_0, destination).call$0();\n                t2 = _box_0.options._options;\n                if (t2._parser.options._collection$_map.$index(0, \"color\") == null)\n                  H.throwExpression(P.ArgumentError$('Could not find an option named \"color\".'));\n                if (t2._parsed.containsKey$1(\"color\"))\n                  t2 = H._asBoolS(t2.$index(0, \"color\"));\n                else {\n                  t2 = J.get$isTTY$x(J.get$stdout$x(self.process));\n                  if (t2 == null)\n                    t2 = false;\n                }\n                t2 = J.toString$1$color$(error, t2);\n                t3 = H._asBoolS(_box_0.options._options.$index(0, \"trace\")) ? stackTrace : null;\n                printError.call$2(t2, t3);\n                if (J.get$exitCode$x(self.process) !== 66)\n                  J.set$exitCode$x(self.process, 65);\n                if (H._asBoolS(_box_0.options._options.$index(0, \"stop-on-error\"))) {\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n              } else if (t2 instanceof B.FileSystemException) {\n                error0 = t2;\n                stackTrace0 = H.getTraceFromException($async$exception);\n                t2 = error0.path;\n                t2 = \"Error reading \" + H.S($.$get$context().relative$2$from(t2, null)) + \": \" + error0.message + \".\";\n                t3 = H._asBoolS(_box_0.options._options.$index(0, \"trace\")) ? stackTrace0 : null;\n                printError.call$2(t2, t3);\n                J.set$exitCode$x(self.process, 66);\n                if (H._asBoolS(_box_0.options._options.$index(0, \"stop-on-error\"))) {\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 21;\n              break;\n            case 18:\n              // uncaught\n              // goto catch\n              $async$goto = 4;\n              break;\n            case 21:\n              // after finally\n              // goto for condition\n              $async$goto = 16;\n              break;\n            case 17:\n              // after for\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception1 = $async$currentError;\n              t1 = H.unwrapException($async$exception1);\n              if (t1 instanceof B.UsageException) {\n                error1 = t1;\n                P.print(H.S(error1.message) + \"\\n\");\n                P.print(\"Usage: sass <input.scss> [output.css]\\n       sass <input.scss>:<output.css> <input/>:<output/> <dir/>\\n\");\n                t1 = $.$get$ExecutableOptions__parser();\n                P.print(new G.Usage(t1._optionsAndSeparators, t1.usageLineLength).generate$0());\n                J.set$exitCode$x(self.process, 64);\n              } else {\n                error2 = t1;\n                stackTrace1 = H.getTraceFromException($async$exception1);\n                buffer = new P.StringBuffer(\"\");\n                t1 = _box_0.options;\n                if (t1 != null && t1.get$color())\n                  buffer._contents += \"\\x1b[31m\\x1b[1m\";\n                buffer._contents += \"Unexpected exception:\";\n                t1 = _box_0.options;\n                if (t1 != null && t1.get$color())\n                  buffer._contents += \"\\x1b[0m\";\n                buffer._contents += \"\\n\";\n                buffer._contents += H.S(error2) + \"\\n\";\n                t1 = buffer._contents;\n                printError.call$2(t1.charCodeAt(0) == 0 ? t1 : t1, stackTrace1);\n                J.set$exitCode$x(self.process, 255);\n              }\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$main, $async$completer);\n    },\n    _loadVersion: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue;\n      var $async$_loadVersion = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = \"1.30.0 compiled with dart2js 2.10.4\";\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_loadVersion, $async$completer);\n    },\n    main_printError: function main_printError(t0) {\n      this._box_0 = t0;\n    },\n    main_closure: function main_closure(t0, t1) {\n      this._box_0 = t0;\n      this.destination = t1;\n    },\n    SassParser0: function SassParser0(t0, t1, t2) {\n      var _ = this;\n      _._sass0$_currentIndentation = 0;\n      _._sass0$_spaces = _._sass0$_nextIndentationEnd = _._sass0$_nextIndentation = null;\n      _._stylesheet0$_isUseAllowed = true;\n      _._stylesheet0$_inMixin = false;\n      _._stylesheet0$_mixinHasContent = null;\n      _._stylesheet0$_inParentheses = _._stylesheet0$_inStyleRule = _._stylesheet0$_inUnknownAtRule = _._stylesheet0$_inControlDirective = _._stylesheet0$_inContentBlock = false;\n      _._stylesheet0$_globalVariables = t0;\n      _.lastSilentComment = null;\n      _.scanner = t1;\n      _.logger = t2;\n    },\n    SassParser_children_closure0: function SassParser_children_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.children = t1;\n      this.child = t2;\n    }\n  },\n  M = {_DelegatingIterableBase: function _DelegatingIterableBase() {\n    }, DelegatingIterable: function DelegatingIterable() {\n    }, DelegatingSet: function DelegatingSet(t0, t1) {\n      this._base = t0;\n      this.$ti = t1;\n    }, MapKeySet: function MapKeySet(t0, t1) {\n      this._baseMap = t0;\n      this.$ti = t1;\n    }, _MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin: function _MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin() {\n    },\n    futureToPromise: function(future) {\n      return new self.Promise(P.allowInterop(new M.futureToPromise_closure(future)));\n    },\n    Util: function Util() {\n    },\n    futureToPromise_closure: function futureToPromise_closure(t0) {\n      this.future = t0;\n    },\n    Context_Context: function(style) {\n      var current = style == null ? D.current() : \".\";\n      if (style == null)\n        style = $.$get$Style_platform();\n      return new M.Context(style, current);\n    },\n    _parseUri: function(uri) {\n      if (typeof uri == \"string\")\n        return P.Uri_parse(uri);\n      if (type$.legacy_Uri._is(uri))\n        return uri;\n      throw H.wrapException(P.ArgumentError$value(uri, \"uri\", \"Value must be a String or a Uri\"));\n    },\n    _validateArgList: function(method, args) {\n      var numArgs, i, numArgs0, message, t1, t2, t3, t4;\n      for (numArgs = args.length, i = 1; i < numArgs; ++i) {\n        if (args[i] == null || args[i - 1] != null)\n          continue;\n        for (; numArgs >= 1; numArgs = numArgs0) {\n          numArgs0 = numArgs - 1;\n          if (args[numArgs0] != null)\n            break;\n        }\n        message = new P.StringBuffer(\"\");\n        t1 = method + \"(\";\n        message._contents = t1;\n        t2 = H._arrayInstanceType(args);\n        t3 = t2._eval$1(\"SubListIterable<1>\");\n        t4 = new H.SubListIterable(args, 0, numArgs, t3);\n        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);\n        t3 = t1 + new H.MappedListIterable(t4, new M._validateArgList_closure(), t3._eval$1(\"MappedListIterable<ListIterable.E,String*>\")).join$1(0, \", \");\n        message._contents = t3;\n        message._contents = t3 + (\"): part \" + (i - 1) + \" was null, but part \" + i + \" was not.\");\n        throw H.wrapException(P.ArgumentError$(message.toString$0(0)));\n      }\n    },\n    Context: function Context(t0, t1) {\n      this.style = t0;\n      this._context$_current = t1;\n    },\n    Context_join_closure: function Context_join_closure() {\n    },\n    Context_joinAll_closure: function Context_joinAll_closure() {\n    },\n    Context_split_closure: function Context_split_closure() {\n    },\n    _validateArgList_closure: function _validateArgList_closure() {\n    },\n    _PathDirection: function _PathDirection(t0) {\n      this.name = t0;\n    },\n    _PathRelation: function _PathRelation(t0) {\n      this.name = t0;\n    },\n    CallableDeclaration: function CallableDeclaration() {\n    },\n    FunctionRule$: function($name, $arguments, children, span, comment) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new M.FunctionRule($name, $arguments, span, t1, t2);\n    },\n    FunctionRule: function FunctionRule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.$arguments = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    ParentStatement: function ParentStatement() {\n    },\n    ParentStatement_closure: function ParentStatement_closure() {\n    },\n    ParentStatement__closure: function ParentStatement__closure() {\n    },\n    SupportsNegation: function SupportsNegation(t0, t1) {\n      this.condition = t0;\n      this.span = t1;\n    },\n    ParentSelector: function ParentSelector(t0) {\n      this.suffix = t0;\n    },\n    SimpleSelector: function SimpleSelector() {\n    },\n    Importer: function Importer() {\n    },\n    StylesheetNode$_: function(_stylesheet, importer, canonicalUrl, allUpstream) {\n      var t1 = new M.StylesheetNode(_stylesheet, importer, canonicalUrl, allUpstream.item1, allUpstream.item2, P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_StylesheetNode));\n      t1.StylesheetNode$_$4(_stylesheet, importer, canonicalUrl, allUpstream);\n      return t1;\n    },\n    StylesheetGraph: function StylesheetGraph(t0, t1, t2) {\n      this._nodes = t0;\n      this.importCache = t1;\n      this._transitiveModificationTimes = t2;\n    },\n    StylesheetGraph_modifiedSince_transitiveModificationTime: function StylesheetGraph_modifiedSince_transitiveModificationTime(t0) {\n      this.$this = t0;\n    },\n    StylesheetGraph_modifiedSince_transitiveModificationTime_closure: function StylesheetGraph_modifiedSince_transitiveModificationTime_closure(t0, t1) {\n      this.node = t0;\n      this.transitiveModificationTime = t1;\n    },\n    StylesheetGraph__add_closure: function StylesheetGraph__add_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.baseImporter = t2;\n      _.baseUrl = t3;\n    },\n    StylesheetGraph_addCanonical_closure: function StylesheetGraph_addCanonical_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.originalUrl = t3;\n    },\n    StylesheetGraph_reload_closure: function StylesheetGraph_reload_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.canonicalUrl = t2;\n    },\n    StylesheetGraph__recanonicalizeImportsForNode_closure: function StylesheetGraph__recanonicalizeImportsForNode_closure(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.node = t3;\n      _.forImport = t4;\n      _.newMap = t5;\n    },\n    StylesheetGraph__nodeFor_closure: function StylesheetGraph__nodeFor_closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.baseImporter = t2;\n      _.baseUrl = t3;\n      _.forImport = t4;\n    },\n    StylesheetGraph__nodeFor_closure0: function StylesheetGraph__nodeFor_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.resolvedUrl = t3;\n    },\n    StylesheetNode: function StylesheetNode(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._stylesheet_graph$_stylesheet = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _._upstream = t3;\n      _._upstreamImports = t4;\n      _._downstream = t5;\n    },\n    Syntax_forPath: function(path) {\n      switch (X.ParsedPath_ParsedPath$parse(path, $.$get$context().style)._splitExtension$1(1)[1]) {\n        case \".sass\":\n          return C.Syntax_Sass;\n        case \".css\":\n          return C.Syntax_CSS;\n        default:\n          return C.Syntax_SCSS;\n      }\n    },\n    Syntax: function Syntax(t0) {\n      this._syntax$_name = t0;\n    },\n    CallableDeclaration0: function CallableDeclaration0() {\n    },\n    FunctionRule$0: function($name, $arguments, children, span, comment) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new M.FunctionRule0($name, $arguments, span, t1, t2);\n    },\n    FunctionRule0: function FunctionRule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.name = t0;\n      _.$arguments = t1;\n      _.span = t2;\n      _.children = t3;\n      _.hasDeclarations = t4;\n    },\n    Importer0: function Importer0() {\n    },\n    SupportsNegation0: function SupportsNegation0(t0, t1) {\n      this.condition = t0;\n      this.span = t1;\n    },\n    ParentSelector0: function ParentSelector0(t0) {\n      this.suffix = t0;\n    },\n    ParentStatement0: function ParentStatement0() {\n    },\n    ParentStatement_closure0: function ParentStatement_closure0() {\n    },\n    ParentStatement__closure0: function ParentStatement__closure0() {\n    },\n    SimpleSelector0: function SimpleSelector0() {\n    },\n    Syntax_forPath0: function(path) {\n      switch (X.ParsedPath_ParsedPath$parse(path, $.$get$context().style)._splitExtension$1(1)[1]) {\n        case \".sass\":\n          return C.Syntax_Sass0;\n        case \".css\":\n          return C.Syntax_CSS0;\n        default:\n          return C.Syntax_SCSS0;\n      }\n    },\n    Syntax0: function Syntax0(t0) {\n      this._syntax0$_name = t0;\n    }\n  },\n  D = {\n    fs: function() {\n      var t1 = $._fs;\n      return t1 == null ? $._fs = self.fs : t1;\n    },\n    FS: function FS() {\n    },\n    FSConstants: function FSConstants() {\n    },\n    FSWatcher: function FSWatcher() {\n    },\n    ReadStream: function ReadStream() {\n    },\n    ReadStreamOptions: function ReadStreamOptions() {\n    },\n    WriteStream: function WriteStream() {\n    },\n    WriteStreamOptions: function WriteStreamOptions() {\n    },\n    Stats: function Stats() {\n    },\n    StreamModule: function StreamModule() {\n    },\n    Readable: function Readable() {\n    },\n    Writable: function Writable() {\n    },\n    Duplex: function Duplex() {\n    },\n    Transform: function Transform() {\n    },\n    WritableOptions: function WritableOptions() {\n    },\n    ReadableOptions: function ReadableOptions() {\n    },\n    ListExpression$: function(contents, separator, brackets, span) {\n      var t1 = P.List_List$unmodifiable(contents, type$.legacy_Expression);\n      return new D.ListExpression(t1, separator, brackets, span == null ? B.spanForList(t1) : span);\n    },\n    ListExpression: function ListExpression(t0, t1, t2, t3) {\n      var _ = this;\n      _.contents = t0;\n      _.separator = t1;\n      _.hasBrackets = t2;\n      _.span = t3;\n    },\n    ListExpression_toString_closure: function ListExpression_toString_closure(t0) {\n      this.$this = t0;\n    },\n    StringExpression: function StringExpression(t0, t1) {\n      this.text = t0;\n      this.hasQuotes = t1;\n    },\n    ErrorRule: function ErrorRule(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    SelectorList$: function(components) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_ComplexSelector);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new D.SelectorList(t1);\n    },\n    SelectorList_SelectorList$parse: function(contents, allowParent, allowPlaceholder, logger) {\n      return T.SelectorParser$(contents, allowParent, allowPlaceholder, logger, null).parse$0();\n    },\n    SelectorList: function SelectorList(t0) {\n      this.components = t0;\n    },\n    SelectorList_isInvisible_closure: function SelectorList_isInvisible_closure() {\n    },\n    SelectorList_asSassList_closure: function SelectorList_asSassList_closure() {\n    },\n    SelectorList_asSassList__closure: function SelectorList_asSassList__closure() {\n    },\n    SelectorList_unify_closure: function SelectorList_unify_closure(t0) {\n      this.other = t0;\n    },\n    SelectorList_unify__closure: function SelectorList_unify__closure(t0) {\n      this.complex1 = t0;\n    },\n    SelectorList_unify___closure: function SelectorList_unify___closure() {\n    },\n    SelectorList_resolveParentSelectors_closure: function SelectorList_resolveParentSelectors_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.implicitParent = t1;\n      this.parent = t2;\n    },\n    SelectorList_resolveParentSelectors__closure: function SelectorList_resolveParentSelectors__closure(t0) {\n      this.complex = t0;\n    },\n    SelectorList_resolveParentSelectors__closure0: function SelectorList_resolveParentSelectors__closure0(t0) {\n      this._box_0 = t0;\n    },\n    SelectorList__complexContainsParentSelector_closure: function SelectorList__complexContainsParentSelector_closure() {\n    },\n    SelectorList__complexContainsParentSelector__closure: function SelectorList__complexContainsParentSelector__closure() {\n    },\n    SelectorList__resolveParentSelectorsCompound_closure: function SelectorList__resolveParentSelectorsCompound_closure() {\n    },\n    SelectorList__resolveParentSelectorsCompound_closure0: function SelectorList__resolveParentSelectorsCompound_closure0(t0) {\n      this.parent = t0;\n    },\n    SelectorList__resolveParentSelectorsCompound_closure1: function SelectorList__resolveParentSelectorsCompound_closure1(t0, t1) {\n      this.compound = t0;\n      this.resolvedMembers = t1;\n    },\n    PseudoSelector$: function($name, argument, element, selector) {\n      var t1 = !element,\n        t2 = t1 && !D.PseudoSelector__isFakePseudoElement($name);\n      return new D.PseudoSelector($name, B.unvendor($name), t2, t1, argument, selector);\n    },\n    PseudoSelector__isFakePseudoElement: function($name) {\n      switch (C.JSString_methods._codeUnitAt$1($name, 0)) {\n        case 97:\n        case 65:\n          return B.equalsIgnoreCase($name, \"after\");\n        case 98:\n        case 66:\n          return B.equalsIgnoreCase($name, \"before\");\n        case 102:\n        case 70:\n          return B.equalsIgnoreCase($name, \"first-line\") || B.equalsIgnoreCase($name, \"first-letter\");\n        default:\n          return false;\n      }\n    },\n    PseudoSelector: function PseudoSelector(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.name = t0;\n      _.normalizedName = t1;\n      _.isClass = t2;\n      _.isSyntacticClass = t3;\n      _.argument = t4;\n      _.selector = t5;\n      _._pseudo$_maxSpecificity = _._pseudo$_minSpecificity = null;\n    },\n    QualifiedName: function QualifiedName(t0, t1) {\n      this.name = t0;\n      this.namespace = t1;\n    },\n    compileStylesheet: function(options, graph, source, destination, ifModified) {\n      return D.compileStylesheet$body(options, graph, source, destination, ifModified);\n    },\n    compileStylesheet$body: function(options, graph, source, destination, ifModified) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], syntax, result, importCache, error, exception, t1, t2, t3, t4, t5, t6, t7, result0, stylesheet, css, buffer, sourceName, destinationName, importer, $async$exception;\n      var $async$compileStylesheet = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              importer = new F.FilesystemImporter(D.absolute(\".\"));\n              if (ifModified)\n                try {\n                  if (source != null && destination != null && !graph.modifiedSince$3($.$get$context().toUri$1(source), B.modificationTime(destination), importer)) {\n                    // goto return\n                    $async$goto = 1;\n                    break;\n                  }\n                } catch (exception) {\n                  if (!(H.unwrapException(exception) instanceof B.FileSystemException))\n                    throw exception;\n                }\n              syntax = null;\n              if (H._asBoolS(options._ifParsed$1(\"indented\")) === true)\n                syntax = C.Syntax_Sass;\n              else if (source != null)\n                syntax = M.Syntax_forPath(source);\n              else\n                syntax = C.Syntax_SCSS;\n              result = null;\n              $async$handler = 4;\n              t1 = options._options;\n              $async$goto = H._asBoolS(t1.$index(0, \"async\")) ? 7 : 9;\n              break;\n            case 7:\n              // then\n              t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncImporter);\n              t3 = type$.legacy_List_legacy_String._as(t1.$index(0, \"load-path\"));\n              t4 = H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color());\n              t3 = O.AsyncImportCache__toImporters(t2, t3, null);\n              t2 = t4 == null ? C.StderrLogger_false : t4;\n              t4 = type$.legacy_Uri;\n              importCache = new O.AsyncImportCache(t3, t2, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2), P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_Stylesheet_2), P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_ImporterResult_2));\n              $async$goto = source == null ? 10 : 12;\n              break;\n            case 10:\n              // then\n              $async$goto = 13;\n              return P._asyncAwait(B.readStdin(), $async$compileStylesheet);\n            case 13:\n              // returning from await.\n              t2 = $async$result;\n              t3 = syntax;\n              t4 = H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color());\n              t5 = D.absolute(\".\");\n              t6 = J.$eq$(t1.$index(0, \"style\"), \"compressed\") ? C.OutputStyle_compressed : C.OutputStyle_expanded0;\n              t7 = options.get$emitSourceMap();\n              $async$goto = 14;\n              return P._asyncAwait(X.compileStringAsync(t2, H._asBoolS(t1.$index(0, \"charset\")), importCache, new F.FilesystemImporter(t5), t4, t7, t6, t3), $async$compileStylesheet);\n            case 14:\n              // returning from await.\n              result0 = $async$result;\n              // goto join\n              $async$goto = 11;\n              break;\n            case 12:\n              // else\n              t2 = syntax;\n              t3 = H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color());\n              t4 = J.$eq$(t1.$index(0, \"style\"), \"compressed\") ? C.OutputStyle_compressed : C.OutputStyle_expanded0;\n              t5 = options.get$emitSourceMap();\n              $async$goto = 15;\n              return P._asyncAwait(X.compileAsync(source, H._asBoolS(t1.$index(0, \"charset\")), importCache, t3, t5, t4, t2), $async$compileStylesheet);\n            case 15:\n              // returning from await.\n              result0 = $async$result;\n            case 11:\n              // join\n              result = result0;\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              $async$goto = source == null ? 16 : 18;\n              break;\n            case 16:\n              // then\n              $async$goto = 19;\n              return P._asyncAwait(B.readStdin(), $async$compileStylesheet);\n            case 19:\n              // returning from await.\n              t2 = $async$result;\n              t3 = syntax;\n              t4 = H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color());\n              t5 = D.absolute(\".\");\n              t6 = J.$eq$(t1.$index(0, \"style\"), \"compressed\") ? C.OutputStyle_compressed : C.OutputStyle_expanded0;\n              t7 = options.get$emitSourceMap();\n              t1 = H._asBoolS(t1.$index(0, \"charset\"));\n              stylesheet = V.Stylesheet_Stylesheet$parse(t2, t3 == null ? C.Syntax_SCSS : t3, t4, null);\n              result0 = U._compileStylesheet(stylesheet, t4, graph.importCache, null, new F.FilesystemImporter(t5), null, t6, true, null, null, t7, t1);\n              // goto join\n              $async$goto = 17;\n              break;\n            case 18:\n              // else\n              t2 = syntax;\n              t3 = H._asBoolS(t1.$index(0, \"quiet\")) ? $.$get$Logger_quiet() : new S.StderrLogger(options.get$color());\n              importCache = graph.importCache;\n              t4 = J.$eq$(t1.$index(0, \"style\"), \"compressed\") ? C.OutputStyle_compressed : C.OutputStyle_expanded0;\n              t5 = options.get$emitSourceMap();\n              t1 = H._asBoolS(t1.$index(0, \"charset\"));\n              t6 = t2 == null || t2 === M.Syntax_forPath(source);\n              if (t6) {\n                t2 = D.absolute(\".\");\n                t6 = $.$get$context();\n                stylesheet = importCache.importCanonical$3(new F.FilesystemImporter(t2), t6.toUri$1(t6.canonicalize$1(source)), t6.toUri$1(source));\n              } else {\n                t6 = B.readFile(source);\n                if (t2 == null)\n                  t2 = M.Syntax_forPath(source);\n                stylesheet = V.Stylesheet_Stylesheet$parse(t6, t2, t3, $.$get$context().toUri$1(source));\n              }\n              result0 = U._compileStylesheet(stylesheet, t3, importCache, null, new F.FilesystemImporter(D.absolute(\".\")), null, t4, true, null, null, t5, t1);\n            case 17:\n              // join\n              result = result0;\n            case 8:\n              // join\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.SassException) {\n                error = t1;\n                if (options.get$emitErrorCss())\n                  if (destination == null)\n                    P.print(error.toCssString$0());\n                  else {\n                    B.ensureDir($.$get$context().dirname$1(destination));\n                    B.writeFile(destination, error.toCssString$0() + \"\\n\");\n                  }\n                throw $async$exception;\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n              css = result._serialize.css + D._writeSourceMap(options, result._serialize.sourceMap, destination);\n              if (destination == null) {\n                if (css.length !== 0)\n                  P.print(css);\n              } else {\n                B.ensureDir($.$get$context().dirname$1(destination));\n                B.writeFile(destination, css + \"\\n\");\n              }\n              t1 = options._options;\n              if (!H._asBoolS(t1.$index(0, \"quiet\")))\n                t1 = !H._asBoolS(t1.$index(0, \"update\")) && !H._asBoolS(t1.$index(0, \"watch\"));\n              else\n                t1 = true;\n              if (t1) {\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              buffer = new P.StringBuffer(\"\");\n              t1 = options.get$color() ? buffer._contents = \"\\x1b[32m\" : \"\";\n              if (source == null)\n                sourceName = \"stdin\";\n              else {\n                t2 = $.$get$context();\n                sourceName = t2.prettyUri$1(t2.toUri$1(source));\n              }\n              t2 = $.$get$context();\n              destinationName = t2.prettyUri$1(t2.toUri$1(destination));\n              t1 += \"Compiled \" + H.S(sourceName) + \" to \" + H.S(destinationName) + \".\";\n              buffer._contents = t1;\n              if (options.get$color())\n                buffer._contents = t1 + \"\\x1b[0m\";\n              P.print(buffer);\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compileStylesheet, $async$completer);\n    },\n    _writeSourceMap: function(options, sourceMap, destination) {\n      var t1, sourceMapText, url, sourceMapPath, t2;\n      if (sourceMap == null)\n        return \"\";\n      if (destination != null) {\n        t1 = $.$get$context();\n        sourceMap.targetUrl = t1.toUri$1(X.ParsedPath_ParsedPath$parse(destination, t1.style).get$basename()).toString$0(0);\n      }\n      B.mapInPlace(sourceMap.urls, new D._writeSourceMap_closure(options, destination));\n      t1 = options._options;\n      sourceMapText = C.C_JsonCodec.encode$2$toEncodable(sourceMap.toJson$1$includeSourceContents(H._asBoolS(t1.$index(0, \"embed-sources\"))), null);\n      if (H._asBoolS(t1.$index(0, \"embed-source-map\")))\n        url = P.Uri_Uri$dataFromString(sourceMapText, C.C_Utf8Codec, \"application/json\");\n      else {\n        sourceMapPath = J.$add$ansx(destination, \".map\");\n        t2 = $.$get$context();\n        B.ensureDir(t2.dirname$1(sourceMapPath));\n        B.writeFile(sourceMapPath, sourceMapText);\n        url = t2.toUri$1(t2.relative$2$from(sourceMapPath, t2.dirname$1(destination)));\n      }\n      t1 = (J.$eq$(t1.$index(0, \"style\"), \"compressed\") ? C.OutputStyle_compressed : C.OutputStyle_expanded0) === C.OutputStyle_compressed ? \"\" : \"\\n\\n\";\n      return t1 + (\"/*# sourceMappingURL=\" + url.toString$0(0) + \" */\");\n    },\n    _writeSourceMap_closure: function _writeSourceMap_closure(t0, t1) {\n      this.options = t0;\n      this.destination = t1;\n    },\n    _function3: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:list\");\n    },\n    closure43: function closure43() {\n    },\n    closure42: function closure42() {\n    },\n    closure41: function closure41() {\n    },\n    closure40: function closure40() {\n    },\n    closure39: function closure39() {\n    },\n    closure38: function closure38() {\n    },\n    _closure5: function _closure5() {\n    },\n    _closure6: function _closure6(t0) {\n      this._box_0 = t0;\n    },\n    _closure7: function _closure7(t0) {\n      this._box_0 = t0;\n    },\n    closure37: function closure37() {\n    },\n    closure35: function closure35() {\n    },\n    closure36: function closure36() {\n    },\n    _codepointForIndex: function(index, lengthInCodepoints, allowNegative) {\n      var result;\n      if (index === 0)\n        return 0;\n      if (index > 0)\n        return Math.min(index - 1, H.checkNum(lengthInCodepoints));\n      result = lengthInCodepoints + index;\n      if (result < 0 && !allowNegative)\n        return 0;\n      return result;\n    },\n    _function: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:string\");\n    },\n    closure8: function closure8() {\n    },\n    closure7: function closure7() {\n    },\n    closure3: function closure3() {\n    },\n    closure2: function closure2() {\n    },\n    closure1: function closure1() {\n    },\n    closure0: function closure0() {\n    },\n    closure6: function closure6() {\n    },\n    closure5: function closure5() {\n    },\n    closure4: function closure4() {\n    },\n    SourceMapBuffer0: function SourceMapBuffer0(t0, t1, t2) {\n      var _ = this;\n      _._source_map_buffer0$_buffer = t0;\n      _._source_map_buffer0$_entries = t1;\n      _._sourceFiles = t2;\n      _._source_map_buffer0$_column = _._source_map_buffer0$_line = 0;\n      _._source_map_buffer0$_inSpan = false;\n    },\n    SourceMapBuffer__addEntry_closure: function SourceMapBuffer__addEntry_closure(t0) {\n      this.source = t0;\n    },\n    SourceMapBuffer_buildSourceMap_closure: function SourceMapBuffer_buildSourceMap_closure(t0, t1) {\n      this._box_0 = t0;\n      this.prefixLength = t1;\n    },\n    SassArgumentList$: function(contents, keywords, separator) {\n      var t1 = type$.legacy_Value;\n      t1 = new D.SassArgumentList(H.ConstantMap_ConstantMap$from(keywords, type$.legacy_String, t1), P.List_List$unmodifiable(contents, t1), separator, false);\n      t1.SassList$3$brackets(contents, separator, false);\n      return t1;\n    },\n    SassArgumentList: function SassArgumentList(t0, t1, t2, t3) {\n      var _ = this;\n      _._keywords = t0;\n      _._wereKeywordsAccessed = false;\n      _._list$_contents = t1;\n      _.separator = t2;\n      _.hasBrackets = t3;\n    },\n    SassList$: function(contents, separator, brackets) {\n      var t1 = new D.SassList(P.List_List$unmodifiable(contents, type$.legacy_Value), separator, brackets);\n      t1.SassList$3$brackets(contents, separator, brackets);\n      return t1;\n    },\n    SassList: function SassList(t0, t1, t2) {\n      this._list$_contents = t0;\n      this.separator = t1;\n      this.hasBrackets = t2;\n    },\n    SassList_isBlank_closure: function SassList_isBlank_closure() {\n    },\n    ListSeparator: function ListSeparator(t0) {\n      this._list$_name = t0;\n    },\n    SassString$: function(text, quotes) {\n      return new D.SassString(text, quotes);\n    },\n    SassString: function SassString(t0, t1) {\n      this.text = t0;\n      this.hasQuotes = t1;\n      this._sassLength = null;\n    },\n    RecursiveStatementVisitor: function RecursiveStatementVisitor() {\n    },\n    SourceLocationMixin: function SourceLocationMixin() {\n    },\n    SassArgumentList$0: function(contents, keywords, separator) {\n      var t1 = type$.legacy_Value_2;\n      t1 = new D.SassArgumentList0(H.ConstantMap_ConstantMap$from(keywords, type$.legacy_String, t1), P.List_List$unmodifiable(contents, t1), separator, false);\n      t1.SassList$3$brackets0(contents, separator, false);\n      return t1;\n    },\n    SassArgumentList0: function SassArgumentList0(t0, t1, t2, t3) {\n      var _ = this;\n      _._argument_list$_keywords = t0;\n      _._argument_list$_wereKeywordsAccessed = false;\n      _._list1$_contents = t1;\n      _.separator = t2;\n      _.hasBrackets = t3;\n    },\n    ErrorRule0: function ErrorRule0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    Exports: function Exports() {\n    },\n    ListExpression$0: function(contents, separator, brackets, span) {\n      var t1 = P.List_List$unmodifiable(contents, type$.legacy_Expression_2);\n      return new D.ListExpression0(t1, separator, brackets, span == null ? B.spanForList0(t1) : span);\n    },\n    ListExpression0: function ListExpression0(t0, t1, t2, t3) {\n      var _ = this;\n      _.contents = t0;\n      _.separator = t1;\n      _.hasBrackets = t2;\n      _.span = t3;\n    },\n    ListExpression_toString_closure0: function ListExpression_toString_closure0(t0) {\n      this.$this = t0;\n    },\n    _function10: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:list\");\n    },\n    closure158: function closure158() {\n    },\n    closure157: function closure157() {\n    },\n    closure156: function closure156() {\n    },\n    closure155: function closure155() {\n    },\n    closure154: function closure154() {\n    },\n    closure153: function closure153() {\n    },\n    _closure20: function _closure20() {\n    },\n    _closure21: function _closure21(t0) {\n      this._box_0 = t0;\n    },\n    _closure22: function _closure22(t0) {\n      this._box_0 = t0;\n    },\n    closure152: function closure152() {\n    },\n    closure150: function closure150() {\n    },\n    closure151: function closure151() {\n    },\n    SelectorList$0: function(components) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_ComplexSelector_2);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new D.SelectorList0(t1);\n    },\n    SelectorList_SelectorList$parse0: function(contents, allowParent, allowPlaceholder, logger) {\n      return T.SelectorParser$0(contents, allowParent, allowPlaceholder, logger, null).parse$0();\n    },\n    SelectorList0: function SelectorList0(t0) {\n      this.components = t0;\n    },\n    SelectorList_isInvisible_closure0: function SelectorList_isInvisible_closure0() {\n    },\n    SelectorList_asSassList_closure0: function SelectorList_asSassList_closure0() {\n    },\n    SelectorList_asSassList__closure0: function SelectorList_asSassList__closure0() {\n    },\n    SelectorList_unify_closure0: function SelectorList_unify_closure0(t0) {\n      this.other = t0;\n    },\n    SelectorList_unify__closure0: function SelectorList_unify__closure0(t0) {\n      this.complex1 = t0;\n    },\n    SelectorList_unify___closure0: function SelectorList_unify___closure0() {\n    },\n    SelectorList_resolveParentSelectors_closure0: function SelectorList_resolveParentSelectors_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.implicitParent = t1;\n      this.parent = t2;\n    },\n    SelectorList_resolveParentSelectors__closure1: function SelectorList_resolveParentSelectors__closure1(t0) {\n      this.complex = t0;\n    },\n    SelectorList_resolveParentSelectors__closure2: function SelectorList_resolveParentSelectors__closure2(t0) {\n      this._box_0 = t0;\n    },\n    SelectorList__complexContainsParentSelector_closure0: function SelectorList__complexContainsParentSelector_closure0() {\n    },\n    SelectorList__complexContainsParentSelector__closure0: function SelectorList__complexContainsParentSelector__closure0() {\n    },\n    SelectorList__resolveParentSelectorsCompound_closure2: function SelectorList__resolveParentSelectorsCompound_closure2() {\n    },\n    SelectorList__resolveParentSelectorsCompound_closure3: function SelectorList__resolveParentSelectorsCompound_closure3(t0) {\n      this.parent = t0;\n    },\n    SelectorList__resolveParentSelectorsCompound_closure4: function SelectorList__resolveParentSelectorsCompound_closure4(t0, t1) {\n      this.compound = t0;\n      this.resolvedMembers = t1;\n    },\n    _NodeSassList: function _NodeSassList() {\n    },\n    closure246: function closure246() {\n    },\n    _closure33: function _closure33() {\n    },\n    closure247: function closure247() {\n    },\n    closure248: function closure248() {\n    },\n    closure249: function closure249() {\n    },\n    closure250: function closure250() {\n    },\n    closure251: function closure251() {\n    },\n    closure252: function closure252() {\n    },\n    SassList$0: function(contents, separator, brackets) {\n      var t1 = new D.SassList0(P.List_List$unmodifiable(contents, type$.legacy_Value_2), separator, brackets);\n      t1.SassList$3$brackets0(contents, separator, brackets);\n      return t1;\n    },\n    SassList0: function SassList0(t0, t1, t2) {\n      this._list1$_contents = t0;\n      this.separator = t1;\n      this.hasBrackets = t2;\n    },\n    SassList_isBlank_closure0: function SassList_isBlank_closure0() {\n    },\n    ListSeparator0: function ListSeparator0(t0) {\n      this._list1$_name = t0;\n    },\n    PseudoSelector$0: function($name, argument, element, selector) {\n      var t1 = !element,\n        t2 = t1 && !D.PseudoSelector__isFakePseudoElement0($name);\n      return new D.PseudoSelector0($name, B.unvendor0($name), t2, t1, argument, selector);\n    },\n    PseudoSelector__isFakePseudoElement0: function($name) {\n      switch (C.JSString_methods._codeUnitAt$1($name, 0)) {\n        case 97:\n        case 65:\n          return B.equalsIgnoreCase0($name, \"after\");\n        case 98:\n        case 66:\n          return B.equalsIgnoreCase0($name, \"before\");\n        case 102:\n        case 70:\n          return B.equalsIgnoreCase0($name, \"first-line\") || B.equalsIgnoreCase0($name, \"first-letter\");\n        default:\n          return false;\n      }\n    },\n    PseudoSelector0: function PseudoSelector0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.name = t0;\n      _.normalizedName = t1;\n      _.isClass = t2;\n      _.isSyntacticClass = t3;\n      _.argument = t4;\n      _.selector = t5;\n      _._pseudo0$_maxSpecificity = _._pseudo0$_minSpecificity = null;\n    },\n    QualifiedName0: function QualifiedName0(t0, t1) {\n      this.name = t0;\n      this.namespace = t1;\n    },\n    SourceMapBuffer: function SourceMapBuffer(t0, t1, t2) {\n      var _ = this;\n      _._source_map_buffer$_buffer = t0;\n      _._entries = t1;\n      _._source_map_buffer$_sourceFiles = t2;\n      _._column = _._line = 0;\n      _._inSpan = false;\n    },\n    SourceMapBuffer__addEntry_closure0: function SourceMapBuffer__addEntry_closure0(t0) {\n      this.source = t0;\n    },\n    SourceMapBuffer_buildSourceMap_closure0: function SourceMapBuffer_buildSourceMap_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.prefixLength = t1;\n    },\n    StringExpression0: function StringExpression0(t0, t1) {\n      this.text = t0;\n      this.hasQuotes = t1;\n    },\n    _codepointForIndex0: function(index, lengthInCodepoints, allowNegative) {\n      var result;\n      if (index === 0)\n        return 0;\n      if (index > 0)\n        return Math.min(index - 1, H.checkNum(lengthInCodepoints));\n      result = lengthInCodepoints + index;\n      if (result < 0 && !allowNegative)\n        return 0;\n      return result;\n    },\n    _function6: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:string\");\n    },\n    closure123: function closure123() {\n    },\n    closure122: function closure122() {\n    },\n    closure118: function closure118() {\n    },\n    closure117: function closure117() {\n    },\n    closure116: function closure116() {\n    },\n    closure115: function closure115() {\n    },\n    closure121: function closure121() {\n    },\n    closure120: function closure120() {\n    },\n    closure119: function closure119() {\n    },\n    _NodeSassString: function _NodeSassString() {\n    },\n    closure228: function closure228() {\n    },\n    closure229: function closure229() {\n    },\n    closure230: function closure230() {\n    },\n    closure231: function closure231() {\n    },\n    SassString$0: function(text, quotes) {\n      return new D.SassString0(text, quotes);\n    },\n    SassString0: function SassString0(t0, t1) {\n      this.text = t0;\n      this.hasQuotes = t1;\n      this._string$_sassLength = null;\n    },\n    current: function() {\n      var exception, t1, path, lastIndex, uri = null;\n      try {\n        uri = P.Uri_base();\n      } catch (exception) {\n        if (type$.legacy_Exception._is(H.unwrapException(exception))) {\n          t1 = $._current;\n          if (t1 != null)\n            return t1;\n          throw exception;\n        } else\n          throw exception;\n      }\n      if (J.$eq$(uri, $._currentUriBase))\n        return $._current;\n      $._currentUriBase = uri;\n      if ($.$get$Style_platform() == $.$get$Style_url())\n        t1 = $._current = uri.resolve$1(\".\").toString$0(0);\n      else {\n        path = uri.toFilePath$0();\n        lastIndex = path.length - 1;\n        t1 = $._current = lastIndex === 0 ? path : C.JSString_methods.substring$2(path, 0, lastIndex);\n      }\n      return t1;\n    },\n    absolute: function(part1) {\n      var _null = null;\n      return $.$get$context().absolute$7(part1, _null, _null, _null, _null, _null, _null);\n    },\n    dirname: function(path) {\n      return $.$get$context().dirname$1(path);\n    },\n    join: function(part1, part2, part3) {\n      var _null = null;\n      return $.$get$context().join$8(0, part1, part2, part3, _null, _null, _null, _null, _null);\n    }\n  },\n  E = {Promise: function Promise() {\n    }, Date: function Date() {\n    }, JsError: function JsError() {\n    }, Atomics: function Atomics() {\n    }, PosixStyle: function PosixStyle(t0, t1, t2) {\n      this.separatorPattern = t0;\n      this.needsSeparatorPattern = t1;\n      this.rootPattern = t2;\n    }, UserDefinedCallable: function UserDefinedCallable(t0, t1, t2) {\n      this.declaration = t0;\n      this.environment = t1;\n      this.$ti = t2;\n    },\n    SassException$: function(message, span) {\n      return new E.SassException(message, span);\n    },\n    MultiSpanSassException$: function(message, span, primaryLabel, secondarySpans) {\n      return new E.MultiSpanSassException(primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message, span);\n    },\n    SassRuntimeException$: function(message, span, trace) {\n      return new E.SassRuntimeException(trace, message, span);\n    },\n    MultiSpanSassRuntimeException$: function(message, span, primaryLabel, secondarySpans, trace) {\n      return new E.MultiSpanSassRuntimeException(trace, primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message, span);\n    },\n    SassFormatException$: function(message, span) {\n      return new E.SassFormatException(message, span);\n    },\n    SassScriptException$: function(message) {\n      return new E.SassScriptException(message);\n    },\n    MultiSpanSassScriptException$: function(message, primaryLabel, secondarySpans) {\n      return new E.MultiSpanSassScriptException(primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message);\n    },\n    SassException: function SassException(t0, t1) {\n      this._span_exception$_message = t0;\n      this._span = t1;\n    },\n    MultiSpanSassException: function MultiSpanSassException(t0, t1, t2, t3) {\n      var _ = this;\n      _.primaryLabel = t0;\n      _.secondarySpans = t1;\n      _._span_exception$_message = t2;\n      _._span = t3;\n    },\n    SassRuntimeException: function SassRuntimeException(t0, t1, t2) {\n      this.trace = t0;\n      this._span_exception$_message = t1;\n      this._span = t2;\n    },\n    MultiSpanSassRuntimeException: function MultiSpanSassRuntimeException(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.trace = t0;\n      _.primaryLabel = t1;\n      _.secondarySpans = t2;\n      _._span_exception$_message = t3;\n      _._span = t4;\n    },\n    SassFormatException: function SassFormatException(t0, t1) {\n      this._span_exception$_message = t0;\n      this._span = t1;\n    },\n    SassScriptException: function SassScriptException(t0) {\n      this.message = t0;\n    },\n    MultiSpanSassScriptException: function MultiSpanSassScriptException(t0, t1, t2) {\n      this.primaryLabel = t0;\n      this.secondarySpans = t1;\n      this.message = t2;\n    },\n    ImporterResult: function ImporterResult(t0, t1, t2) {\n      this.contents = t0;\n      this._sourceMapUrl = t1;\n      this.syntax = t2;\n    },\n    KeyframeSelectorParser$: function(contents, logger) {\n      var t1 = S.SpanScanner$(contents, null);\n      return new E.KeyframeSelectorParser(t1, logger);\n    },\n    KeyframeSelectorParser: function KeyframeSelectorParser(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    KeyframeSelectorParser_parse_closure: function KeyframeSelectorParser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor$0: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_Uri,\n        t3 = type$.legacy_Module_legacy_AsyncCallable,\n        t4 = type$.legacy_AstNode,\n        t5 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode),\n        t6 = logger == null ? C.StderrLogger_false : logger;\n      t5 = new E._EvaluateVisitor0(importCache, nodeImporter, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AsyncCallable), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t6, sourceMap, Q.AsyncEnvironment$(sourceMap), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t5, C.Configuration_Map_empty_null_true);\n      t5._EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap0(functions, importCache, logger, nodeImporter, sourceMap);\n      return t5;\n    },\n    _EvaluateVisitor0: function _EvaluateVisitor0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {\n      var _ = this;\n      _._async_evaluate$_importCache = t0;\n      _._async_evaluate$_nodeImporter = t1;\n      _._async_evaluate$_builtInFunctions = t2;\n      _._async_evaluate$_builtInModules = t3;\n      _._async_evaluate$_modules = t4;\n      _._async_evaluate$_moduleNodes = t5;\n      _._async_evaluate$_logger = t6;\n      _._async_evaluate$_sourceMap = t7;\n      _._async_evaluate$_environment = t8;\n      _._async_evaluate$_declarationName = _._async_evaluate$_parent = _._async_evaluate$_mediaQueries = _._async_evaluate$_styleRule = null;\n      _._async_evaluate$_member = \"root stylesheet\";\n      _._async_evaluate$_importSpan = _._async_evaluate$_callableNode = null;\n      _._async_evaluate$_inKeyframes = _._async_evaluate$_atRootExcludingStyleRule = _._async_evaluate$_inUnknownAtRule = _._async_evaluate$_inFunction = false;\n      _._async_evaluate$_includedFiles = t9;\n      _._async_evaluate$_activeModules = t10;\n      _._async_evaluate$_stack = t11;\n      _._async_evaluate$_extender = _._async_evaluate$_outOfOrderImports = _._async_evaluate$_endOfImports = _._async_evaluate$_root = _._async_evaluate$_stylesheet = _._async_evaluate$_importer = null;\n      _._async_evaluate$_configuration = t12;\n    },\n    _EvaluateVisitor_closure9: function _EvaluateVisitor_closure9(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure10: function _EvaluateVisitor_closure10(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure11: function _EvaluateVisitor_closure11(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure12: function _EvaluateVisitor_closure12(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure13: function _EvaluateVisitor_closure13(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure14: function _EvaluateVisitor_closure14(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure15: function _EvaluateVisitor_closure15(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure16: function _EvaluateVisitor_closure16(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure4: function _EvaluateVisitor__closure4(t0, t1, t2) {\n      this.$this = t0;\n      this.name = t1;\n      this.module = t2;\n    },\n    _EvaluateVisitor_closure17: function _EvaluateVisitor_closure17(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure18: function _EvaluateVisitor_closure18(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure2: function _EvaluateVisitor__closure2(t0, t1) {\n      this.values = t0;\n      this.span = t1;\n    },\n    _EvaluateVisitor__closure3: function _EvaluateVisitor__closure3(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_run_closure0: function _EvaluateVisitor_run_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.importer = t2;\n    },\n    _EvaluateVisitor__withWarnCallback_closure0: function _EvaluateVisitor__withWarnCallback_closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__loadModule_closure1: function _EvaluateVisitor__loadModule_closure1(t0, t1) {\n      this.callback = t0;\n      this.builtInModule = t1;\n    },\n    _EvaluateVisitor__loadModule_closure2: function _EvaluateVisitor__loadModule_closure2(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.nodeWithSpan = t2;\n      _.baseUrl = t3;\n      _.namesInErrors = t4;\n      _.configuration = t5;\n      _.callback = t6;\n    },\n    _EvaluateVisitor__execute_closure0: function _EvaluateVisitor__execute_closure0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.extender = t4;\n      _.configuration = t5;\n    },\n    _EvaluateVisitor__combineCss_closure2: function _EvaluateVisitor__combineCss_closure2() {\n    },\n    _EvaluateVisitor__combineCss_closure3: function _EvaluateVisitor__combineCss_closure3(t0) {\n      this.selectors = t0;\n    },\n    _EvaluateVisitor__combineCss_closure4: function _EvaluateVisitor__combineCss_closure4() {\n    },\n    _EvaluateVisitor__extendModules_closure1: function _EvaluateVisitor__extendModules_closure1(t0) {\n      this.originalSelectors = t0;\n    },\n    _EvaluateVisitor__extendModules_closure2: function _EvaluateVisitor__extendModules_closure2() {\n    },\n    _EvaluateVisitor__topologicalModules_visitModule0: function _EvaluateVisitor__topologicalModules_visitModule0(t0, t1) {\n      this.seen = t0;\n      this.sorted = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure2: function _EvaluateVisitor_visitAtRootRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure3: function _EvaluateVisitor_visitAtRootRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure4: function _EvaluateVisitor_visitAtRootRule_closure4(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure5: function _EvaluateVisitor__scopeForAtRoot_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.newParent = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure6: function _EvaluateVisitor__scopeForAtRoot_closure6(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure7: function _EvaluateVisitor__scopeForAtRoot_closure7(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot__closure0: function _EvaluateVisitor__scopeForAtRoot__closure0(t0, t1) {\n      this.innerScope = t0;\n      this.callback = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure8: function _EvaluateVisitor__scopeForAtRoot_closure8(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure9: function _EvaluateVisitor__scopeForAtRoot_closure9() {\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure10: function _EvaluateVisitor__scopeForAtRoot_closure10(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor_visitContentRule_closure0: function _EvaluateVisitor_visitContentRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.content = t1;\n    },\n    _EvaluateVisitor_visitDeclaration_closure0: function _EvaluateVisitor_visitDeclaration_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitEachRule_closure2: function _EvaluateVisitor_visitEachRule_closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure3: function _EvaluateVisitor_visitEachRule_closure3(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure4: function _EvaluateVisitor_visitEachRule_closure4(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.list = t1;\n      _.setVariables = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitEachRule__closure0: function _EvaluateVisitor_visitEachRule__closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.setVariables = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitEachRule___closure0: function _EvaluateVisitor_visitEachRule___closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitExtendRule_closure0: function _EvaluateVisitor_visitExtendRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.targetText = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure1: function _EvaluateVisitor_visitAtRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule__closure0: function _EvaluateVisitor_visitAtRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure2: function _EvaluateVisitor_visitAtRule_closure2() {\n    },\n    _EvaluateVisitor_visitForRule_closure4: function _EvaluateVisitor_visitForRule_closure4(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure5: function _EvaluateVisitor_visitForRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure6: function _EvaluateVisitor_visitForRule_closure6(t0, t1) {\n      this.fromNumber = t0;\n      this.toNumber = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure7: function _EvaluateVisitor_visitForRule_closure7(t0) {\n      this.toNumber = t0;\n    },\n    _EvaluateVisitor_visitForRule_closure8: function _EvaluateVisitor_visitForRule_closure8(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.node = t2;\n      _.from = t3;\n      _.direction = t4;\n    },\n    _EvaluateVisitor_visitForRule__closure0: function _EvaluateVisitor_visitForRule__closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitForwardRule_closure1: function _EvaluateVisitor_visitForwardRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForwardRule_closure2: function _EvaluateVisitor_visitForwardRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__assertConfigurationIsEmpty_closure0: function _EvaluateVisitor__assertConfigurationIsEmpty_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.only = t1;\n      this.nameInError = t2;\n    },\n    _EvaluateVisitor_visitIfRule_closure0: function _EvaluateVisitor_visitIfRule_closure0(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitIfRule__closure0: function _EvaluateVisitor_visitIfRule__closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__visitDynamicImport_closure0: function _EvaluateVisitor__visitDynamicImport_closure0(t0, t1) {\n      this.$this = t0;\n      this.$import = t1;\n    },\n    _EvaluateVisitor__visitDynamicImport__closure0: function _EvaluateVisitor__visitDynamicImport__closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.environment = t4;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure2: function _EvaluateVisitor_visitIncludeRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure3: function _EvaluateVisitor_visitIncludeRule_closure3(t0) {\n      this.node = t0;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure4: function _EvaluateVisitor_visitIncludeRule_closure4(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.contentCallable = t1;\n      _.mixin = t2;\n      _.nodeWithSpan = t3;\n    },\n    _EvaluateVisitor_visitIncludeRule__closure0: function _EvaluateVisitor_visitIncludeRule__closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule___closure0: function _EvaluateVisitor_visitIncludeRule___closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule____closure0: function _EvaluateVisitor_visitIncludeRule____closure0(t0, t1) {\n      this.$this = t0;\n      this.statement = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure1: function _EvaluateVisitor_visitMediaRule_closure1(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.mergedQueries = t1;\n      _.queries = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitMediaRule__closure0: function _EvaluateVisitor_visitMediaRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule___closure0: function _EvaluateVisitor_visitMediaRule___closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure2: function _EvaluateVisitor_visitMediaRule_closure2(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor__visitMediaQueries_closure0: function _EvaluateVisitor__visitMediaQueries_closure0(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure6: function _EvaluateVisitor_visitStyleRule_closure6(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure7: function _EvaluateVisitor_visitStyleRule_closure7(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure8: function _EvaluateVisitor_visitStyleRule_closure8() {\n    },\n    _EvaluateVisitor_visitStyleRule_closure9: function _EvaluateVisitor_visitStyleRule_closure9(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure10: function _EvaluateVisitor_visitStyleRule_closure10(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure11: function _EvaluateVisitor_visitStyleRule_closure11(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitStyleRule__closure0: function _EvaluateVisitor_visitStyleRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure12: function _EvaluateVisitor_visitStyleRule_closure12() {\n    },\n    _EvaluateVisitor_visitSupportsRule_closure1: function _EvaluateVisitor_visitSupportsRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule__closure0: function _EvaluateVisitor_visitSupportsRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule_closure2: function _EvaluateVisitor_visitSupportsRule_closure2() {\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure2: function _EvaluateVisitor_visitVariableDeclaration_closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.override = t2;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure3: function _EvaluateVisitor_visitVariableDeclaration_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure4: function _EvaluateVisitor_visitVariableDeclaration_closure4(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.value = t2;\n    },\n    _EvaluateVisitor_visitUseRule_closure0: function _EvaluateVisitor_visitUseRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWarnRule_closure0: function _EvaluateVisitor_visitWarnRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule_closure0: function _EvaluateVisitor_visitWhileRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule__closure0: function _EvaluateVisitor_visitWhileRule__closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitBinaryOperationExpression_closure0: function _EvaluateVisitor_visitBinaryOperationExpression_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableExpression_closure0: function _EvaluateVisitor_visitVariableExpression_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitListExpression_closure0: function _EvaluateVisitor_visitListExpression_closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure1: function _EvaluateVisitor_visitFunctionExpression_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.plainName = t2;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure2: function _EvaluateVisitor_visitFunctionExpression_closure2(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__runUserDefinedCallable_closure0: function _EvaluateVisitor__runUserDefinedCallable_closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.callable = t1;\n      _.evaluated = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable__closure0: function _EvaluateVisitor__runUserDefinedCallable__closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable___closure0: function _EvaluateVisitor__runUserDefinedCallable___closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable____closure0: function _EvaluateVisitor__runUserDefinedCallable____closure0() {\n    },\n    _EvaluateVisitor__runFunctionCallable_closure0: function _EvaluateVisitor__runFunctionCallable_closure0(t0, t1) {\n      this.$this = t0;\n      this.callable = t1;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure1: function _EvaluateVisitor__runBuiltInCallable_closure1(t0, t1, t2) {\n      this.overload = t0;\n      this.evaluated = t1;\n      this.namedSet = t2;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure2: function _EvaluateVisitor__runBuiltInCallable_closure2() {\n    },\n    _EvaluateVisitor__evaluateArguments_closure0: function _EvaluateVisitor__evaluateArguments_closure0(t0, t1, t2) {\n      this.named = t0;\n      this.namedNodes = t1;\n      this.restNodeForSpan = t2;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure3: function _EvaluateVisitor__evaluateMacroArguments_closure3() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure4: function _EvaluateVisitor__evaluateMacroArguments_closure4() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure5: function _EvaluateVisitor__evaluateMacroArguments_closure5(t0) {\n      this.named = t0;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure6: function _EvaluateVisitor__evaluateMacroArguments_closure6() {\n    },\n    _EvaluateVisitor__addRestMap_closure1: function _EvaluateVisitor__addRestMap_closure1(t0) {\n      this.T = t0;\n    },\n    _EvaluateVisitor__addRestMap_closure2: function _EvaluateVisitor__addRestMap_closure2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.values = t2;\n      _.map = t3;\n      _.nodeWithSpan = t4;\n    },\n    _EvaluateVisitor__verifyArguments_closure0: function _EvaluateVisitor__verifyArguments_closure0(t0, t1, t2) {\n      this.$arguments = t0;\n      this.positional = t1;\n      this.named = t2;\n    },\n    _EvaluateVisitor_visitStringExpression_closure0: function _EvaluateVisitor_visitStringExpression_closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure1: function _EvaluateVisitor_visitCssAtRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure2: function _EvaluateVisitor_visitCssAtRule_closure2() {\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure1: function _EvaluateVisitor_visitCssKeyframeBlock_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure2: function _EvaluateVisitor_visitCssKeyframeBlock_closure2() {\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure1: function _EvaluateVisitor_visitCssMediaRule_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.mergedQueries = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssMediaRule__closure0: function _EvaluateVisitor_visitCssMediaRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule___closure0: function _EvaluateVisitor_visitCssMediaRule___closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure2: function _EvaluateVisitor_visitCssMediaRule_closure2(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure1: function _EvaluateVisitor_visitCssStyleRule_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssStyleRule__closure0: function _EvaluateVisitor_visitCssStyleRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure2: function _EvaluateVisitor_visitCssStyleRule_closure2() {\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure1: function _EvaluateVisitor_visitCssSupportsRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule__closure0: function _EvaluateVisitor_visitCssSupportsRule__closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure2: function _EvaluateVisitor_visitCssSupportsRule_closure2() {\n    },\n    _EvaluateVisitor__performInterpolation_closure0: function _EvaluateVisitor__performInterpolation_closure0(t0, t1) {\n      this.$this = t0;\n      this.warnForColor = t1;\n    },\n    _EvaluateVisitor__serialize_closure0: function _EvaluateVisitor__serialize_closure0(t0, t1) {\n      this.value = t0;\n      this.quote = t1;\n    },\n    _EvaluateVisitor__stackTrace_closure0: function _EvaluateVisitor__stackTrace_closure0(t0) {\n      this.$this = t0;\n    },\n    _ImportedCssVisitor0: function _ImportedCssVisitor0(t0) {\n      this._async_evaluate$_visitor = t0;\n    },\n    _ImportedCssVisitor_visitCssAtRule_closure0: function _ImportedCssVisitor_visitCssAtRule_closure0() {\n    },\n    _ImportedCssVisitor_visitCssMediaRule_closure0: function _ImportedCssVisitor_visitCssMediaRule_closure0(t0) {\n      this.hasBeenMerged = t0;\n    },\n    _ImportedCssVisitor_visitCssStyleRule_closure0: function _ImportedCssVisitor_visitCssStyleRule_closure0() {\n    },\n    _ImportedCssVisitor_visitCssSupportsRule_closure0: function _ImportedCssVisitor_visitCssSupportsRule_closure0() {\n    },\n    EvaluateResult: function EvaluateResult(t0) {\n      this.stylesheet = t0;\n    },\n    _ArgumentResults0: function _ArgumentResults0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.positionalNodes = t1;\n      _.named = t2;\n      _.namedNodes = t3;\n      _.separator = t4;\n    },\n    StringScannerException$: function(message, span, source) {\n      return new E.StringScannerException(source, message, span);\n    },\n    StringScannerException: function StringScannerException(t0, t1, t2) {\n      this.source = t0;\n      this._span_exception$_message = t1;\n      this._span = t2;\n    },\n    WatchEvent: function WatchEvent(t0, t1) {\n      this.type = t0;\n      this.path = t1;\n    },\n    ChangeType: function ChangeType(t0) {\n      this._watch_event$_name = t0;\n    },\n    _EvaluateVisitor$2: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t6,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Uri,\n        t3 = type$.legacy_Module_legacy_AsyncCallable_2,\n        t4 = type$.legacy_AstNode_2,\n        t5 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode_2);\n      if (nodeImporter == null)\n        t6 = importCache == null ? O.AsyncImportCache$none(logger) : importCache;\n      else\n        t6 = null;\n      t1 = new E._EvaluateVisitor2(t6, nodeImporter, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AsyncCallable_2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), C.C_StderrLogger, sourceMap, Q.AsyncEnvironment$0(sourceMap), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t5, C.Configuration_Map_empty_null_true0);\n      t1._EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap2(functions, importCache, logger, nodeImporter, sourceMap);\n      return t1;\n    },\n    _EvaluateVisitor2: function _EvaluateVisitor2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {\n      var _ = this;\n      _._async_evaluate0$_importCache = t0;\n      _._async_evaluate0$_nodeImporter = t1;\n      _._async_evaluate0$_builtInFunctions = t2;\n      _._async_evaluate0$_builtInModules = t3;\n      _._async_evaluate0$_modules = t4;\n      _._async_evaluate0$_moduleNodes = t5;\n      _._async_evaluate0$_logger = t6;\n      _._async_evaluate0$_sourceMap = t7;\n      _._async_evaluate0$_environment = t8;\n      _._async_evaluate0$_declarationName = _._async_evaluate0$_parent = _._async_evaluate0$_mediaQueries = _._async_evaluate0$_styleRule = null;\n      _._async_evaluate0$_member = \"root stylesheet\";\n      _._async_evaluate0$_importSpan = _._async_evaluate0$_callableNode = null;\n      _._async_evaluate0$_inKeyframes = _._async_evaluate0$_atRootExcludingStyleRule = _._async_evaluate0$_inUnknownAtRule = _._async_evaluate0$_inFunction = false;\n      _._async_evaluate0$_includedFiles = t9;\n      _._async_evaluate0$_activeModules = t10;\n      _._async_evaluate0$_stack = t11;\n      _._async_evaluate0$_extender = _._async_evaluate0$_outOfOrderImports = _._async_evaluate0$_endOfImports = _._async_evaluate0$_root = _._async_evaluate0$_stylesheet = _._async_evaluate0$_importer = null;\n      _._async_evaluate0$_configuration = t12;\n    },\n    _EvaluateVisitor_closure29: function _EvaluateVisitor_closure29(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure30: function _EvaluateVisitor_closure30(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure31: function _EvaluateVisitor_closure31(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure32: function _EvaluateVisitor_closure32(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure33: function _EvaluateVisitor_closure33(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure34: function _EvaluateVisitor_closure34(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure35: function _EvaluateVisitor_closure35(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure36: function _EvaluateVisitor_closure36(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure10: function _EvaluateVisitor__closure10(t0, t1, t2) {\n      this.$this = t0;\n      this.name = t1;\n      this.module = t2;\n    },\n    _EvaluateVisitor_closure37: function _EvaluateVisitor_closure37(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure38: function _EvaluateVisitor_closure38(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure8: function _EvaluateVisitor__closure8(t0, t1) {\n      this.values = t0;\n      this.span = t1;\n    },\n    _EvaluateVisitor__closure9: function _EvaluateVisitor__closure9(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_run_closure2: function _EvaluateVisitor_run_closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.importer = t2;\n    },\n    _EvaluateVisitor__withWarnCallback_closure2: function _EvaluateVisitor__withWarnCallback_closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__loadModule_closure5: function _EvaluateVisitor__loadModule_closure5(t0, t1) {\n      this.callback = t0;\n      this.builtInModule = t1;\n    },\n    _EvaluateVisitor__loadModule_closure6: function _EvaluateVisitor__loadModule_closure6(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.nodeWithSpan = t2;\n      _.baseUrl = t3;\n      _.namesInErrors = t4;\n      _.configuration = t5;\n      _.callback = t6;\n    },\n    _EvaluateVisitor__execute_closure2: function _EvaluateVisitor__execute_closure2(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.extender = t4;\n      _.configuration = t5;\n    },\n    _EvaluateVisitor__combineCss_closure8: function _EvaluateVisitor__combineCss_closure8() {\n    },\n    _EvaluateVisitor__combineCss_closure9: function _EvaluateVisitor__combineCss_closure9(t0) {\n      this.selectors = t0;\n    },\n    _EvaluateVisitor__combineCss_closure10: function _EvaluateVisitor__combineCss_closure10() {\n    },\n    _EvaluateVisitor__extendModules_closure5: function _EvaluateVisitor__extendModules_closure5(t0) {\n      this.originalSelectors = t0;\n    },\n    _EvaluateVisitor__extendModules_closure6: function _EvaluateVisitor__extendModules_closure6() {\n    },\n    _EvaluateVisitor__topologicalModules_visitModule2: function _EvaluateVisitor__topologicalModules_visitModule2(t0, t1) {\n      this.seen = t0;\n      this.sorted = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure8: function _EvaluateVisitor_visitAtRootRule_closure8(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure9: function _EvaluateVisitor_visitAtRootRule_closure9(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure10: function _EvaluateVisitor_visitAtRootRule_closure10(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure17: function _EvaluateVisitor__scopeForAtRoot_closure17(t0, t1, t2) {\n      this.$this = t0;\n      this.newParent = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure18: function _EvaluateVisitor__scopeForAtRoot_closure18(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure19: function _EvaluateVisitor__scopeForAtRoot_closure19(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot__closure2: function _EvaluateVisitor__scopeForAtRoot__closure2(t0, t1) {\n      this.innerScope = t0;\n      this.callback = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure20: function _EvaluateVisitor__scopeForAtRoot_closure20(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure21: function _EvaluateVisitor__scopeForAtRoot_closure21() {\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure22: function _EvaluateVisitor__scopeForAtRoot_closure22(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor_visitContentRule_closure2: function _EvaluateVisitor_visitContentRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.content = t1;\n    },\n    _EvaluateVisitor_visitDeclaration_closure2: function _EvaluateVisitor_visitDeclaration_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitEachRule_closure8: function _EvaluateVisitor_visitEachRule_closure8(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure9: function _EvaluateVisitor_visitEachRule_closure9(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure10: function _EvaluateVisitor_visitEachRule_closure10(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.list = t1;\n      _.setVariables = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitEachRule__closure2: function _EvaluateVisitor_visitEachRule__closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.setVariables = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitEachRule___closure2: function _EvaluateVisitor_visitEachRule___closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitExtendRule_closure2: function _EvaluateVisitor_visitExtendRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.targetText = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure5: function _EvaluateVisitor_visitAtRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule__closure2: function _EvaluateVisitor_visitAtRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure6: function _EvaluateVisitor_visitAtRule_closure6() {\n    },\n    _EvaluateVisitor_visitForRule_closure14: function _EvaluateVisitor_visitForRule_closure14(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure15: function _EvaluateVisitor_visitForRule_closure15(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure16: function _EvaluateVisitor_visitForRule_closure16(t0, t1) {\n      this.fromNumber = t0;\n      this.toNumber = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure17: function _EvaluateVisitor_visitForRule_closure17(t0) {\n      this.toNumber = t0;\n    },\n    _EvaluateVisitor_visitForRule_closure18: function _EvaluateVisitor_visitForRule_closure18(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.node = t2;\n      _.from = t3;\n      _.direction = t4;\n    },\n    _EvaluateVisitor_visitForRule__closure2: function _EvaluateVisitor_visitForRule__closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitForwardRule_closure5: function _EvaluateVisitor_visitForwardRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForwardRule_closure6: function _EvaluateVisitor_visitForwardRule_closure6(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__assertConfigurationIsEmpty_closure2: function _EvaluateVisitor__assertConfigurationIsEmpty_closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.only = t1;\n      this.nameInError = t2;\n    },\n    _EvaluateVisitor_visitIfRule_closure2: function _EvaluateVisitor_visitIfRule_closure2(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitIfRule__closure2: function _EvaluateVisitor_visitIfRule__closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__visitDynamicImport_closure2: function _EvaluateVisitor__visitDynamicImport_closure2(t0, t1) {\n      this.$this = t0;\n      this.$import = t1;\n    },\n    _EvaluateVisitor__visitDynamicImport__closure2: function _EvaluateVisitor__visitDynamicImport__closure2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.environment = t4;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure8: function _EvaluateVisitor_visitIncludeRule_closure8(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure9: function _EvaluateVisitor_visitIncludeRule_closure9(t0) {\n      this.node = t0;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure10: function _EvaluateVisitor_visitIncludeRule_closure10(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.contentCallable = t1;\n      _.mixin = t2;\n      _.nodeWithSpan = t3;\n    },\n    _EvaluateVisitor_visitIncludeRule__closure2: function _EvaluateVisitor_visitIncludeRule__closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule___closure2: function _EvaluateVisitor_visitIncludeRule___closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule____closure2: function _EvaluateVisitor_visitIncludeRule____closure2(t0, t1) {\n      this.$this = t0;\n      this.statement = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure5: function _EvaluateVisitor_visitMediaRule_closure5(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.mergedQueries = t1;\n      _.queries = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitMediaRule__closure2: function _EvaluateVisitor_visitMediaRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule___closure2: function _EvaluateVisitor_visitMediaRule___closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure6: function _EvaluateVisitor_visitMediaRule_closure6(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor__visitMediaQueries_closure2: function _EvaluateVisitor__visitMediaQueries_closure2(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure20: function _EvaluateVisitor_visitStyleRule_closure20(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure21: function _EvaluateVisitor_visitStyleRule_closure21(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure22: function _EvaluateVisitor_visitStyleRule_closure22() {\n    },\n    _EvaluateVisitor_visitStyleRule_closure23: function _EvaluateVisitor_visitStyleRule_closure23(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure24: function _EvaluateVisitor_visitStyleRule_closure24(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure25: function _EvaluateVisitor_visitStyleRule_closure25(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitStyleRule__closure2: function _EvaluateVisitor_visitStyleRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure26: function _EvaluateVisitor_visitStyleRule_closure26() {\n    },\n    _EvaluateVisitor_visitSupportsRule_closure5: function _EvaluateVisitor_visitSupportsRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule__closure2: function _EvaluateVisitor_visitSupportsRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule_closure6: function _EvaluateVisitor_visitSupportsRule_closure6() {\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure8: function _EvaluateVisitor_visitVariableDeclaration_closure8(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.override = t2;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure9: function _EvaluateVisitor_visitVariableDeclaration_closure9(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure10: function _EvaluateVisitor_visitVariableDeclaration_closure10(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.value = t2;\n    },\n    _EvaluateVisitor_visitUseRule_closure2: function _EvaluateVisitor_visitUseRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWarnRule_closure2: function _EvaluateVisitor_visitWarnRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule_closure2: function _EvaluateVisitor_visitWhileRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule__closure2: function _EvaluateVisitor_visitWhileRule__closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitBinaryOperationExpression_closure2: function _EvaluateVisitor_visitBinaryOperationExpression_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableExpression_closure2: function _EvaluateVisitor_visitVariableExpression_closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitListExpression_closure2: function _EvaluateVisitor_visitListExpression_closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure5: function _EvaluateVisitor_visitFunctionExpression_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.plainName = t2;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure6: function _EvaluateVisitor_visitFunctionExpression_closure6(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__runUserDefinedCallable_closure2: function _EvaluateVisitor__runUserDefinedCallable_closure2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.callable = t1;\n      _.evaluated = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable__closure2: function _EvaluateVisitor__runUserDefinedCallable__closure2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable___closure2: function _EvaluateVisitor__runUserDefinedCallable___closure2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable____closure2: function _EvaluateVisitor__runUserDefinedCallable____closure2() {\n    },\n    _EvaluateVisitor__runFunctionCallable_closure2: function _EvaluateVisitor__runFunctionCallable_closure2(t0, t1) {\n      this.$this = t0;\n      this.callable = t1;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure5: function _EvaluateVisitor__runBuiltInCallable_closure5(t0, t1, t2) {\n      this.overload = t0;\n      this.evaluated = t1;\n      this.namedSet = t2;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure6: function _EvaluateVisitor__runBuiltInCallable_closure6() {\n    },\n    _EvaluateVisitor__evaluateArguments_closure2: function _EvaluateVisitor__evaluateArguments_closure2(t0, t1, t2) {\n      this.named = t0;\n      this.namedNodes = t1;\n      this.restNodeForSpan = t2;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure11: function _EvaluateVisitor__evaluateMacroArguments_closure11() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure12: function _EvaluateVisitor__evaluateMacroArguments_closure12() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure13: function _EvaluateVisitor__evaluateMacroArguments_closure13(t0) {\n      this.named = t0;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure14: function _EvaluateVisitor__evaluateMacroArguments_closure14() {\n    },\n    _EvaluateVisitor__addRestMap_closure5: function _EvaluateVisitor__addRestMap_closure5(t0) {\n      this.T = t0;\n    },\n    _EvaluateVisitor__addRestMap_closure6: function _EvaluateVisitor__addRestMap_closure6(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.values = t2;\n      _.map = t3;\n      _.nodeWithSpan = t4;\n    },\n    _EvaluateVisitor__verifyArguments_closure2: function _EvaluateVisitor__verifyArguments_closure2(t0, t1, t2) {\n      this.$arguments = t0;\n      this.positional = t1;\n      this.named = t2;\n    },\n    _EvaluateVisitor_visitStringExpression_closure2: function _EvaluateVisitor_visitStringExpression_closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure5: function _EvaluateVisitor_visitCssAtRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure6: function _EvaluateVisitor_visitCssAtRule_closure6() {\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure5: function _EvaluateVisitor_visitCssKeyframeBlock_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure6: function _EvaluateVisitor_visitCssKeyframeBlock_closure6() {\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure5: function _EvaluateVisitor_visitCssMediaRule_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.mergedQueries = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssMediaRule__closure2: function _EvaluateVisitor_visitCssMediaRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule___closure2: function _EvaluateVisitor_visitCssMediaRule___closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure6: function _EvaluateVisitor_visitCssMediaRule_closure6(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure5: function _EvaluateVisitor_visitCssStyleRule_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssStyleRule__closure2: function _EvaluateVisitor_visitCssStyleRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure6: function _EvaluateVisitor_visitCssStyleRule_closure6() {\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure5: function _EvaluateVisitor_visitCssSupportsRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule__closure2: function _EvaluateVisitor_visitCssSupportsRule__closure2(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure6: function _EvaluateVisitor_visitCssSupportsRule_closure6() {\n    },\n    _EvaluateVisitor__performInterpolation_closure2: function _EvaluateVisitor__performInterpolation_closure2(t0, t1) {\n      this.$this = t0;\n      this.warnForColor = t1;\n    },\n    _EvaluateVisitor__serialize_closure2: function _EvaluateVisitor__serialize_closure2(t0, t1) {\n      this.value = t0;\n      this.quote = t1;\n    },\n    _EvaluateVisitor__stackTrace_closure2: function _EvaluateVisitor__stackTrace_closure2(t0) {\n      this.$this = t0;\n    },\n    _ImportedCssVisitor2: function _ImportedCssVisitor2(t0) {\n      this._async_evaluate0$_visitor = t0;\n    },\n    _ImportedCssVisitor_visitCssAtRule_closure2: function _ImportedCssVisitor_visitCssAtRule_closure2() {\n    },\n    _ImportedCssVisitor_visitCssMediaRule_closure2: function _ImportedCssVisitor_visitCssMediaRule_closure2(t0) {\n      this.hasBeenMerged = t0;\n    },\n    _ImportedCssVisitor_visitCssStyleRule_closure2: function _ImportedCssVisitor_visitCssStyleRule_closure2() {\n    },\n    _ImportedCssVisitor_visitCssSupportsRule_closure2: function _ImportedCssVisitor_visitCssSupportsRule_closure2() {\n    },\n    EvaluateResult0: function EvaluateResult0(t0, t1) {\n      this.stylesheet = t0;\n      this.includedFiles = t1;\n    },\n    _ArgumentResults2: function _ArgumentResults2(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.positionalNodes = t1;\n      _.named = t2;\n      _.namedNodes = t3;\n      _.separator = t4;\n    },\n    SassException$0: function(message, span) {\n      return new E.SassException0(message, span);\n    },\n    MultiSpanSassException$0: function(message, span, primaryLabel, secondarySpans) {\n      return new E.MultiSpanSassException0(primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message, span);\n    },\n    SassRuntimeException$0: function(message, span, trace) {\n      return new E.SassRuntimeException0(trace, message, span);\n    },\n    MultiSpanSassRuntimeException$0: function(message, span, primaryLabel, secondarySpans, trace) {\n      return new E.MultiSpanSassRuntimeException0(trace, primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message, span);\n    },\n    SassFormatException$0: function(message, span) {\n      return new E.SassFormatException0(message, span);\n    },\n    SassScriptException$0: function(message) {\n      return new E.SassScriptException0(message);\n    },\n    MultiSpanSassScriptException$0: function(message, primaryLabel, secondarySpans) {\n      return new E.MultiSpanSassScriptException0(primaryLabel, H.ConstantMap_ConstantMap$from(secondarySpans, type$.legacy_FileSpan, type$.legacy_String), message);\n    },\n    SassException0: function SassException0(t0, t1) {\n      this._span_exception$_message = t0;\n      this._span = t1;\n    },\n    MultiSpanSassException0: function MultiSpanSassException0(t0, t1, t2, t3) {\n      var _ = this;\n      _.primaryLabel = t0;\n      _.secondarySpans = t1;\n      _._span_exception$_message = t2;\n      _._span = t3;\n    },\n    SassRuntimeException0: function SassRuntimeException0(t0, t1, t2) {\n      this.trace = t0;\n      this._span_exception$_message = t1;\n      this._span = t2;\n    },\n    MultiSpanSassRuntimeException0: function MultiSpanSassRuntimeException0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.trace = t0;\n      _.primaryLabel = t1;\n      _.secondarySpans = t2;\n      _._span_exception$_message = t3;\n      _._span = t4;\n    },\n    SassFormatException0: function SassFormatException0(t0, t1) {\n      this._span_exception$_message = t0;\n      this._span = t1;\n    },\n    SassScriptException0: function SassScriptException0(t0) {\n      this.message = t0;\n    },\n    MultiSpanSassScriptException0: function MultiSpanSassScriptException0(t0, t1, t2) {\n      this.primaryLabel = t0;\n      this.secondarySpans = t1;\n      this.message = t2;\n    },\n    FiberClass: function FiberClass() {\n    },\n    Fiber: function Fiber() {\n    },\n    KeyframeSelectorParser$0: function(contents, logger) {\n      var t1 = S.SpanScanner$(contents, null);\n      return new E.KeyframeSelectorParser0(t1, logger);\n    },\n    KeyframeSelectorParser0: function KeyframeSelectorParser0(t0, t1) {\n      this.scanner = t0;\n      this.logger = t1;\n    },\n    KeyframeSelectorParser_parse_closure0: function KeyframeSelectorParser_parse_closure0(t0) {\n      this.$this = t0;\n    },\n    ImporterResult0: function ImporterResult0(t0, t1, t2) {\n      this.contents = t0;\n      this._result$_sourceMapUrl = t1;\n      this.syntax = t2;\n    },\n    UserDefinedCallable0: function UserDefinedCallable0(t0, t1, t2) {\n      this.declaration = t0;\n      this.environment = t1;\n      this.$ti = t2;\n    }\n  },\n  X = {NodeJsError: function NodeJsError() {\n    }, JsAssertionError: function JsAssertionError() {\n    }, JsRangeError: function JsRangeError() {\n    }, JsReferenceError: function JsReferenceError() {\n    }, JsSyntaxError: function JsSyntaxError() {\n    }, JsTypeError: function JsTypeError() {\n    }, JsSystemError: function JsSystemError() {\n    }, Process: function Process() {\n    }, CPUUsage: function CPUUsage() {\n    }, Release: function Release() {\n    },\n    ParsedPath_ParsedPath$parse: function(path, style) {\n      var t1, parts, separators, start, i,\n        root = style.getRoot$1(path),\n        isRootRelative = style.isRootRelative$1(path);\n      if (root != null)\n        path = J.substring$1$s(path, root.length);\n      t1 = type$.JSArray_legacy_String;\n      parts = H.setRuntimeTypeInfo([], t1);\n      separators = H.setRuntimeTypeInfo([], t1);\n      t1 = path.length;\n      if (t1 !== 0 && style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, 0))) {\n        separators.push(path[0]);\n        start = 1;\n      } else {\n        separators.push(\"\");\n        start = 0;\n      }\n      for (i = start; i < t1; ++i)\n        if (style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, i))) {\n          parts.push(C.JSString_methods.substring$2(path, start, i));\n          separators.push(path[i]);\n          start = i + 1;\n        }\n      if (start < t1) {\n        parts.push(C.JSString_methods.substring$1(path, start));\n        separators.push(\"\");\n      }\n      return new X.ParsedPath(style, root, isRootRelative, parts, separators);\n    },\n    ParsedPath: function ParsedPath(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.style = t0;\n      _.root = t1;\n      _.isRootRelative = t2;\n      _.parts = t3;\n      _.separators = t4;\n    },\n    ParsedPath_normalize_closure: function ParsedPath_normalize_closure(t0) {\n      this.$this = t0;\n    },\n    ParsedPath__splitExtension_closure: function ParsedPath__splitExtension_closure() {\n    },\n    ParsedPath__splitExtension_closure0: function ParsedPath__splitExtension_closure0() {\n    },\n    PathException$: function(message) {\n      return new X.PathException(message);\n    },\n    PathException: function PathException(t0) {\n      this.message = t0;\n    },\n    ModifiableCssStyleRule$: function(selector, span, originalSelector) {\n      var t1 = originalSelector == null ? selector.value : originalSelector,\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode);\n      return new X.ModifiableCssStyleRule(selector, t1, span, new P.UnmodifiableListView(t2, type$.UnmodifiableListView_legacy_ModifiableCssNode), t2);\n    },\n    ModifiableCssStyleRule: function ModifiableCssStyleRule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.selector = t0;\n      _.originalSelector = t1;\n      _.span = t2;\n      _.children = t3;\n      _._children = t4;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    ArgumentInvocation$empty: function(span) {\n      return new X.ArgumentInvocation(C.List_empty7, C.Map_empty3, null, null, span);\n    },\n    ArgumentInvocation: function ArgumentInvocation(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.named = t1;\n      _.rest = t2;\n      _.keywordRest = t3;\n      _.span = t4;\n    },\n    UnaryOperationExpression: function UnaryOperationExpression(t0, t1, t2) {\n      this.operator = t0;\n      this.operand = t1;\n      this.span = t2;\n    },\n    UnaryOperator: function UnaryOperator(t0, t1) {\n      this.name = t0;\n      this.operator = t1;\n    },\n    Interpolation$: function(contents, span) {\n      var t1 = new X.Interpolation(P.List_List$unmodifiable(contents, type$.legacy_Object), span);\n      t1.Interpolation$2(contents, span);\n      return t1;\n    },\n    Interpolation: function Interpolation(t0, t1) {\n      this.contents = t0;\n      this.span = t1;\n    },\n    Interpolation_toString_closure: function Interpolation_toString_closure() {\n    },\n    ExtendRule: function ExtendRule(t0, t1, t2) {\n      this.selector = t0;\n      this.isOptional = t1;\n      this.span = t2;\n    },\n    StyleRule$: function(selector, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new X.StyleRule(selector, span, t1, t2);\n    },\n    StyleRule: function StyleRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.selector = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    SupportsInterpolation: function SupportsInterpolation(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    ClassSelector: function ClassSelector(t0) {\n      this.name = t0;\n    },\n    CompoundSelector$: function(components) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_SimpleSelector);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new X.CompoundSelector(t1);\n    },\n    CompoundSelector: function CompoundSelector(t0) {\n      this.components = t0;\n      this._compound$_maxSpecificity = this._compound$_minSpecificity = null;\n    },\n    CompoundSelector_isInvisible_closure: function CompoundSelector_isInvisible_closure() {\n    },\n    compileAsync: function(path, charset, importCache, logger, sourceMap, style, syntax) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult),\n        $async$returnValue, t2, stylesheet, t1;\n      var $async$compileAsync = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = syntax === M.Syntax_forPath(path);\n              $async$goto = t1 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              t1 = D.absolute(\".\");\n              t2 = $.$get$context();\n              $async$goto = 6;\n              return P._asyncAwait(importCache.importCanonical$3(new F.FilesystemImporter(t1), t2.toUri$1(t2.canonicalize$1(path)), t2.toUri$1(path)), $async$compileAsync);\n            case 6:\n              // returning from await.\n              stylesheet = $async$result;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              t1 = B.readFile(path);\n              stylesheet = V.Stylesheet_Stylesheet$parse(t1, syntax, logger, $.$get$context().toUri$1(path));\n            case 4:\n              // join\n              $async$goto = 7;\n              return P._asyncAwait(X._compileStylesheet0(stylesheet, logger, importCache, null, new F.FilesystemImporter(D.absolute(\".\")), null, style, true, null, null, sourceMap, charset), $async$compileAsync);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compileAsync, $async$completer);\n    },\n    compileStringAsync: function(source, charset, importCache, importer, logger, sourceMap, style, syntax) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult),\n        $async$returnValue, stylesheet;\n      var $async$compileStringAsync = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              stylesheet = V.Stylesheet_Stylesheet$parse(source, syntax, logger, null);\n              $async$returnValue = X._compileStylesheet0(stylesheet, logger, importCache, null, importer, null, style, true, null, null, sourceMap, charset);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compileStringAsync, $async$completer);\n    },\n    _compileStylesheet0: function(stylesheet, logger, importCache, nodeImporter, importer, functions, style, useSpaces, indentWidth, lineFeed, sourceMap, charset) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult),\n        $async$returnValue, serializeResult, t1, $async$temp1;\n      var $async$_compileStylesheet0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = N;\n              $async$goto = 3;\n              return P._asyncAwait(E._EvaluateVisitor$0(functions, importCache, logger, nodeImporter, sourceMap).run$2(0, importer, stylesheet), $async$_compileStylesheet0);\n            case 3:\n              // returning from await.\n              serializeResult = $async$temp1.serialize($async$result.stylesheet, charset, indentWidth, false, lineFeed, sourceMap, style, true);\n              t1 = serializeResult.sourceMap;\n              if (t1 != null && true)\n                B.mapInPlace(t1.urls, new X._compileStylesheet_closure0(stylesheet, importCache));\n              $async$returnValue = new X.CompileResult(serializeResult);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_compileStylesheet0, $async$completer);\n    },\n    _compileStylesheet_closure0: function _compileStylesheet_closure0(t0, t1) {\n      this.stylesheet = t0;\n      this.importCache = t1;\n    },\n    CompileResult: function CompileResult(t0) {\n      this._serialize = t0;\n    },\n    SourceSpanWithContext$: function(start, end, text, _context) {\n      var t1 = new X.SourceSpanWithContext(_context, start, end, text);\n      t1.SourceSpanBase$3(start, end, text);\n      if (!C.JSString_methods.contains$1(_context, text))\n        H.throwExpression(P.ArgumentError$('The context line \"' + _context + '\" must contain \"' + text + '\".'));\n      if (B.findLineStart(_context, text, start.get$column()) == null)\n        H.throwExpression(P.ArgumentError$('The span text \"' + text + '\" must start at column ' + (start.get$column() + 1) + ' in a line within \"' + _context + '\".'));\n      return t1;\n    },\n    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {\n      var _ = this;\n      _._context = t0;\n      _.start = t1;\n      _.end = t2;\n      _.text = t3;\n    },\n    StringScanner$: function(string, position, sourceUrl) {\n      var t1 = typeof sourceUrl == \"string\" ? P.Uri_parse(sourceUrl) : type$.legacy_Uri._as(sourceUrl);\n      return new X.StringScanner(t1, string);\n    },\n    StringScanner: function StringScanner(t0, t1) {\n      var _ = this;\n      _.sourceUrl = t0;\n      _.string = t1;\n      _._string_scanner$_position = 0;\n      _._lastMatchPosition = _._lastMatch = null;\n    },\n    ArgumentInvocation$empty0: function(span) {\n      return new X.ArgumentInvocation0(C.List_empty19, C.Map_empty9, null, null, span);\n    },\n    ArgumentInvocation0: function ArgumentInvocation0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.named = t1;\n      _.rest = t2;\n      _.keywordRest = t3;\n      _.span = t4;\n    },\n    compileAsync0: function(path, functions, indentWidth, lineFeed, nodeImporter, sourceMap, style, syntax, useSpaces) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult_2),\n        $async$returnValue, t1, t2, stylesheet;\n      var $async$compileAsync0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = B.readFile0(path);\n              t2 = syntax == null ? M.Syntax_forPath0(path) : syntax;\n              stylesheet = V.Stylesheet_Stylesheet$parse0(t1, t2, null, $.$get$context().toUri$1(path));\n              $async$goto = 3;\n              return P._asyncAwait(X._compileStylesheet2(stylesheet, null, null, nodeImporter, new F.FilesystemImporter0(D.absolute(\".\")), functions, style, useSpaces, indentWidth, lineFeed, sourceMap, true), $async$compileAsync0);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compileAsync0, $async$completer);\n    },\n    compileStringAsync0: function(source, functions, indentWidth, lineFeed, nodeImporter, sourceMap, style, syntax, url, useSpaces) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult_2),\n        $async$returnValue, stylesheet, t1;\n      var $async$compileStringAsync0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              stylesheet = V.Stylesheet_Stylesheet$parse0(source, syntax == null ? C.Syntax_SCSS0 : syntax, null, url);\n              t1 = D.absolute(\".\");\n              $async$returnValue = X._compileStylesheet2(stylesheet, null, null, nodeImporter, new F.FilesystemImporter0(t1), functions, style, useSpaces, indentWidth, lineFeed, sourceMap, true);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compileStringAsync0, $async$completer);\n    },\n    _compileStylesheet2: function(stylesheet, logger, importCache, nodeImporter, importer, functions, style, useSpaces, indentWidth, lineFeed, sourceMap, charset) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CompileResult_2),\n        $async$returnValue, evaluateResult, serializeResult, t1;\n      var $async$_compileStylesheet2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(E._EvaluateVisitor$2(functions, importCache, logger, nodeImporter, sourceMap).run$2(0, importer, stylesheet), $async$_compileStylesheet2);\n            case 3:\n              // returning from await.\n              evaluateResult = $async$result;\n              serializeResult = N.serialize0(evaluateResult.stylesheet, true, indentWidth, false, lineFeed, sourceMap, style, useSpaces);\n              t1 = serializeResult.sourceMap;\n              if (t1 != null && importCache != null)\n                B.mapInPlace0(t1.urls, new X._compileStylesheet_closure2(stylesheet, importCache));\n              $async$returnValue = new X.CompileResult0(evaluateResult, serializeResult);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_compileStylesheet2, $async$completer);\n    },\n    _compileStylesheet_closure2: function _compileStylesheet_closure2(t0, t1) {\n      this.stylesheet = t0;\n      this.importCache = t1;\n    },\n    CompileResult0: function CompileResult0(t0, t1) {\n      this._evaluate = t0;\n      this._async_compile$_serialize = t1;\n    },\n    ClassSelector0: function ClassSelector0(t0) {\n      this.name = t0;\n    },\n    CompoundSelector$0: function(components) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_SimpleSelector_2);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new X.CompoundSelector0(t1);\n    },\n    CompoundSelector0: function CompoundSelector0(t0) {\n      this.components = t0;\n      this._compound0$_maxSpecificity = this._compound0$_minSpecificity = null;\n    },\n    CompoundSelector_isInvisible_closure0: function CompoundSelector_isInvisible_closure0() {\n    },\n    ExtendRule0: function ExtendRule0(t0, t1, t2) {\n      this.selector = t0;\n      this.isOptional = t1;\n      this.span = t2;\n    },\n    Interpolation$0: function(contents, span) {\n      var t1 = new X.Interpolation0(P.List_List$unmodifiable(contents, type$.legacy_Object), span);\n      t1.Interpolation$20(contents, span);\n      return t1;\n    },\n    Interpolation0: function Interpolation0(t0, t1) {\n      this.contents = t0;\n      this.span = t1;\n    },\n    Interpolation_toString_closure0: function Interpolation_toString_closure0() {\n    },\n    SupportsInterpolation0: function SupportsInterpolation0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    ModifiableCssStyleRule$0: function(selector, span, originalSelector) {\n      var t1 = originalSelector == null ? selector.value : originalSelector,\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssNode_2);\n      return new X.ModifiableCssStyleRule0(selector, t1, span, new P.UnmodifiableListView(t2, type$.UnmodifiableListView_legacy_ModifiableCssNode_2), t2);\n    },\n    ModifiableCssStyleRule0: function ModifiableCssStyleRule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.selector = t0;\n      _.originalSelector = t1;\n      _.span = t2;\n      _.children = t3;\n      _._node2$_children = t4;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    StyleRule$0: function(selector, children, span) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new X.StyleRule0(selector, span, t1, t2);\n    },\n    StyleRule0: function StyleRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.selector = t0;\n      _.span = t1;\n      _.children = t2;\n      _.hasDeclarations = t3;\n    },\n    UnaryOperationExpression0: function UnaryOperationExpression0(t0, t1, t2) {\n      this.operator = t0;\n      this.operand = t1;\n      this.span = t2;\n    },\n    UnaryOperator0: function UnaryOperator0(t0, t1) {\n      this.name = t0;\n      this.operator = t1;\n    }\n  },\n  K = {\n    PathMap__create: function(context, $V) {\n      var t1 = {};\n      t1.context = context;\n      t1.context = $.$get$context();\n      return P.LinkedHashMap_LinkedHashMap(new K.PathMap__create_closure(t1), new K.PathMap__create_closure0(t1), new K.PathMap__create_closure1(), type$.legacy_String, $V._eval$1(\"0*\"));\n    },\n    PathMap: function PathMap(t0, t1) {\n      this._collection$_map = t0;\n      this.$ti = t1;\n    },\n    PathMap__create_closure: function PathMap__create_closure(t0) {\n      this._box_0 = t0;\n    },\n    PathMap__create_closure0: function PathMap__create_closure0(t0) {\n      this._box_0 = t0;\n    },\n    PathMap__create_closure1: function PathMap__create_closure1() {\n    },\n    ColorExpression: function ColorExpression(t0) {\n      this.value = t0;\n    },\n    _updateComponents: function($arguments, adjust, change, scale) {\n      var keywords, alpha, red, green, blue, hue, t2, saturation, lightness, whiteness, blackness, hasRgb, hasSL, hasWB, t3, t4, t5, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        argumentList = type$.legacy_SassArgumentList._as(t1.$index($arguments, 1));\n      if (argumentList._list$_contents.length !== 0)\n        throw H.wrapException(E.SassScriptException$(string$.Only_op));\n      argumentList._wereKeywordsAccessed = true;\n      keywords = P.LinkedHashMap_LinkedHashMap$of(argumentList._keywords, type$.legacy_String, type$.legacy_Value);\n      t1 = new K._updateComponents_getParam(keywords, scale, change);\n      alpha = t1.call$2(\"alpha\", 1);\n      red = t1.call$2(\"red\", 255);\n      green = t1.call$2(\"green\", 255);\n      blue = t1.call$2(\"blue\", 255);\n      if (scale)\n        hue = _null;\n      else {\n        t2 = keywords.remove$1(0, \"hue\");\n        t2 = t2 == null ? _null : t2.assertNumber$1(\"hue\");\n        hue = t2 == null ? _null : t2.value;\n      }\n      saturation = t1.call$2(\"saturation\", 100);\n      lightness = t1.call$2(\"lightness\", 100);\n      whiteness = t1.call$3$assertPercent(\"whiteness\", 100, true);\n      blackness = t1.call$3$assertPercent(\"blackness\", 100, true);\n      if (keywords.get$isNotEmpty(keywords))\n        throw H.wrapException(E.SassScriptException$(\"No \" + B.pluralize(\"argument\", keywords.get$length(keywords), _null) + \" named \" + H.S(B.toSentence(keywords.get$keys(keywords).map$1$1(0, new K._updateComponents_closure(), type$.legacy_Object), \"or\")) + \".\"));\n      hasRgb = red != null || green != null || blue != null;\n      hasSL = saturation != null || lightness != null;\n      hasWB = whiteness != null || blackness != null;\n      if (hasRgb)\n        t1 = hasSL || hasWB || hue != null;\n      else\n        t1 = false;\n      if (t1)\n        throw H.wrapException(E.SassScriptException$(string$.RGB_pa + (hasWB ? \"HWB\" : \"HSL\") + \" parameters.\"));\n      if (hasSL && hasWB)\n        throw H.wrapException(E.SassScriptException$(string$.HSL_pa));\n      t1 = new K._updateComponents_updateValue(change, adjust);\n      t2 = new K._updateComponents_updateRgb(t1);\n      if (hasRgb) {\n        t3 = t2.call$2(color.get$red(), red);\n        t4 = t2.call$2(color.get$green(), green);\n        t2 = t2.call$2(color.get$blue(), blue);\n        return color.changeRgb$4$alpha$blue$green$red(t1.call$3(color.alpha, alpha, 1), t2, t4, t3);\n      } else if (hasWB) {\n        if (change)\n          t2 = hue;\n        else {\n          t2 = color.get$hue();\n          t2 += hue == null ? 0 : hue;\n        }\n        t3 = t1.call$3(color.get$whiteness(), whiteness, 100);\n        t4 = t1.call$3(color.get$blackness(), blackness, 100);\n        t5 = color.alpha;\n        t1 = t1.call$3(t5, alpha, 1);\n        if (t2 == null)\n          t2 = color.get$hue();\n        if (t3 == null)\n          t3 = color.get$whiteness();\n        if (t4 == null)\n          t4 = color.get$blackness();\n        return K.SassColor_SassColor$hwb(t2, t3, t4, t1 == null ? t5 : t1);\n      } else {\n        t2 = hue == null;\n        if (!t2 || hasSL) {\n          if (change)\n            t2 = hue;\n          else {\n            t3 = color.get$hue();\n            t3 += t2 ? 0 : hue;\n            t2 = t3;\n          }\n          t3 = t1.call$3(color.get$saturation(), saturation, 100);\n          t4 = t1.call$3(color.get$lightness(), lightness, 100);\n          return color.changeHsl$4$alpha$hue$lightness$saturation(t1.call$3(color.alpha, alpha, 1), t2, t4, t3);\n        } else if (alpha != null)\n          return color.changeAlpha$1(t1.call$3(color.alpha, alpha, 1));\n        else\n          return color;\n      }\n    },\n    _functionString: function($name, $arguments) {\n      return new D.SassString($name + \"(\" + J.map$1$1$ax($arguments, new K._functionString_closure(), type$.legacy_String).join$1(0, \", \") + \")\", false);\n    },\n    _removedColorFunction: function($name, argument, negative) {\n      return Q.BuiltInCallable$function($name, \"$color, $amount\", new K._removedColorFunction_closure($name, argument, negative), \"sass:color\");\n    },\n    _rgb: function($name, $arguments) {\n      var t2, red, green, blue, t3, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : _null;\n      if (!t1.$index($arguments, 0).get$isSpecialNumber())\n        if (!t1.$index($arguments, 1).get$isSpecialNumber())\n          if (!t1.$index($arguments, 2).get$isSpecialNumber()) {\n            t2 = alpha == null ? _null : alpha.get$isSpecialNumber();\n            t2 = t2 === true;\n          } else\n            t2 = true;\n        else\n          t2 = true;\n      else\n        t2 = true;\n      if (t2)\n        return K._functionString($name, $arguments);\n      red = t1.$index($arguments, 0).assertNumber$1(\"red\");\n      green = t1.$index($arguments, 1).assertNumber$1(\"green\");\n      blue = t1.$index($arguments, 2).assertNumber$1(\"blue\");\n      t1 = T.fuzzyRound(K._percentageOrUnitless(red, 255, \"red\"));\n      t2 = T.fuzzyRound(K._percentageOrUnitless(green, 255, \"green\"));\n      t3 = T.fuzzyRound(K._percentageOrUnitless(blue, 255, \"blue\"));\n      return K.SassColor$rgb(t1, t2, t3, alpha == null ? _null : K._percentageOrUnitless(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\"), _null);\n    },\n    _rgbTwoArg: function($name, $arguments) {\n      var first, t2, color,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar())\n        return K._functionString($name, $arguments);\n      else if (t1.$index($arguments, 1).get$isVar()) {\n        first = t1.$index($arguments, 0);\n        if (first instanceof K.SassColor) {\n          t2 = $name + \"(\" + H.S(first.get$red()) + \", \" + H.S(first.get$green()) + \", \" + H.S(first.get$blue()) + \", \";\n          t1 = t1.$index($arguments, 1);\n          t1.toString;\n          return new D.SassString(t2 + N.serializeValue0(t1, false, true) + \")\", false);\n        } else\n          return K._functionString($name, $arguments);\n      } else if (t1.$index($arguments, 1).get$isSpecialNumber()) {\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n        t2 = $name + \"(\" + H.S(color.get$red()) + \", \" + H.S(color.get$green()) + \", \" + H.S(color.get$blue()) + \", \";\n        t1 = t1.$index($arguments, 1);\n        t1.toString;\n        return new D.SassString(t2 + N.serializeValue0(t1, false, true) + \")\", false);\n      }\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeAlpha$1(K._percentageOrUnitless(t1.$index($arguments, 1).assertNumber$1(\"alpha\"), 1, \"alpha\"));\n    },\n    _hsl: function($name, $arguments) {\n      var t2, hue, saturation, lightness, t3,\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : null;\n      if (!t1.$index($arguments, 0).get$isSpecialNumber())\n        if (!t1.$index($arguments, 1).get$isSpecialNumber())\n          if (!t1.$index($arguments, 2).get$isSpecialNumber()) {\n            t2 = alpha == null ? null : alpha.get$isSpecialNumber();\n            t2 = t2 === true;\n          } else\n            t2 = true;\n        else\n          t2 = true;\n      else\n        t2 = true;\n      if (t2)\n        return K._functionString($name, $arguments);\n      hue = t1.$index($arguments, 0).assertNumber$1(\"hue\");\n      saturation = t1.$index($arguments, 1).assertNumber$1(\"saturation\");\n      lightness = t1.$index($arguments, 2).assertNumber$1(\"lightness\");\n      t1 = J.clamp$2$n(saturation.value, 0, 100);\n      t2 = J.clamp$2$n(lightness.value, 0, 100);\n      t3 = alpha == null ? null : K._percentageOrUnitless(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\");\n      return K.SassColor$hsl(hue.value, t1, t2, t3);\n    },\n    _hwb: function($arguments) {\n      var t2, t3,\n        _s9_ = \"whiteness\",\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : null,\n        hue = t1.$index($arguments, 0).assertNumber$1(\"hue\"),\n        whiteness = t1.$index($arguments, 1).assertNumber$1(_s9_),\n        blackness = t1.$index($arguments, 2).assertNumber$1(\"blackness\");\n      whiteness.assertUnit$2(\"%\", _s9_);\n      blackness.assertUnit$2(\"%\", _s9_);\n      t1 = whiteness.valueInRange$3(0, 100, _s9_);\n      t2 = blackness.valueInRange$3(0, 100, _s9_);\n      t3 = alpha == null ? null : K._percentageOrUnitless(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\");\n      return K.SassColor_SassColor$hwb(hue.value, t1, t2, t3);\n    },\n    _parseChannels: function($name, argumentNames, channels) {\n      var isCommaSeparated, isBracketed, buffer, t1, list, maybeSlashSeparated, t2, t3,\n        _s17_ = \"$channels must be\",\n        _s32_ = \"$channels must be an unbracketed\";\n      if (channels.get$isVar())\n        return K._functionString($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value));\n      isCommaSeparated = channels.get$separator() === C.ListSeparator_comma;\n      isBracketed = channels.get$hasBrackets();\n      if (isCommaSeparated || isBracketed) {\n        buffer = new P.StringBuffer(_s17_);\n        if (isBracketed) {\n          buffer._contents = _s32_;\n          t1 = _s32_;\n        } else\n          t1 = _s17_;\n        if (isCommaSeparated) {\n          t1 += isBracketed ? \",\" : \" a\";\n          buffer._contents = t1;\n          t1 = buffer._contents = t1 + \" space-separated\";\n        }\n        buffer._contents = t1 + \" list.\";\n        throw H.wrapException(E.SassScriptException$(buffer.toString$0(0)));\n      }\n      list = channels.get$asList();\n      t1 = list.length;\n      if (t1 > 3)\n        throw H.wrapException(E.SassScriptException$(\"Only 3 elements allowed, but \" + t1 + \" were passed.\"));\n      else if (t1 < 3) {\n        if (!C.JSArray_methods.any$1(list, new K._parseChannels_closure()))\n          if (list.length !== 0) {\n            t1 = C.JSArray_methods.get$last(list);\n            if (t1 instanceof D.SassString)\n              if (t1.hasQuotes) {\n                t1 = t1.text;\n                t1 = B.startsWithIgnoreCase(t1, \"var(\") && J.contains$1$asx(t1, \"/\");\n              } else\n                t1 = false;\n            else\n              t1 = false;\n          } else\n            t1 = false;\n        else\n          t1 = true;\n        if (t1)\n          return K._functionString($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value));\n        else\n          throw H.wrapException(E.SassScriptException$(\"Missing element \" + argumentNames[list.length] + \".\"));\n      }\n      maybeSlashSeparated = list[2];\n      if (maybeSlashSeparated instanceof T.SassNumber && maybeSlashSeparated.asSlash != null) {\n        t1 = list[0];\n        t2 = list[1];\n        t3 = maybeSlashSeparated.asSlash;\n        return H.setRuntimeTypeInfo([t1, t2, t3.item1, t3.item2], type$.JSArray_legacy_Value);\n      } else if (maybeSlashSeparated instanceof D.SassString && !maybeSlashSeparated.hasQuotes && J.contains$1$asx(maybeSlashSeparated.text, \"/\"))\n        return K._functionString($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value));\n      else\n        return list;\n    },\n    _percentageOrUnitless: function(number, max, $name) {\n      var value;\n      if (!(number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0))\n        value = number.value;\n      else if (number.hasUnit$1(\"%\"))\n        value = max * number.value / 100;\n      else\n        throw H.wrapException(E.SassScriptException$(\"$\" + $name + \": Expected \" + number.toString$0(0) + ' to have no units or \"%\".'));\n      return J.clamp$2$n(value, 0, max);\n    },\n    _mixColors: function(color1, color2, weight) {\n      var weightScale = weight.valueInRange$3(0, 100, \"weight\") / 100,\n        normalizedWeight = weightScale * 2 - 1,\n        t1 = color1.alpha,\n        t2 = color2.alpha,\n        alphaDistance = t1 - t2,\n        t3 = normalizedWeight * alphaDistance,\n        weight1 = ((t3 === -1 ? normalizedWeight : (normalizedWeight + alphaDistance) / (1 + t3)) + 1) / 2,\n        weight2 = 1 - weight1;\n      return K.SassColor$rgb(T.fuzzyRound(color1.get$red() * weight1 + color2.get$red() * weight2), T.fuzzyRound(color1.get$green() * weight1 + color2.get$green() * weight2), T.fuzzyRound(color1.get$blue() * weight1 + color2.get$blue() * weight2), t1 * weightScale + t2 * (1 - weightScale), null);\n    },\n    _opacify: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      return color.changeAlpha$1(C.JSNumber_methods.clamp$2(color.alpha + t1.$index($arguments, 1).assertNumber$1(\"amount\").valueInRange$3(0, 1, \"amount\"), 0, 1));\n    },\n    _transparentize: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      return color.changeAlpha$1(C.JSNumber_methods.clamp$2(color.alpha - t1.$index($arguments, 1).assertNumber$1(\"amount\").valueInRange$3(0, 1, \"amount\"), 0, 1));\n    },\n    _function4: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:color\");\n    },\n    closure44: function closure44() {\n    },\n    closure45: function closure45() {\n    },\n    closure46: function closure46() {\n    },\n    closure47: function closure47() {\n    },\n    closure48: function closure48() {\n    },\n    closure49: function closure49() {\n    },\n    closure50: function closure50() {\n    },\n    closure51: function closure51() {\n    },\n    closure52: function closure52() {\n    },\n    closure53: function closure53() {\n    },\n    closure54: function closure54() {\n    },\n    closure55: function closure55() {\n    },\n    closure56: function closure56() {\n    },\n    closure57: function closure57() {\n    },\n    closure58: function closure58() {\n    },\n    closure59: function closure59() {\n    },\n    closure60: function closure60() {\n    },\n    closure61: function closure61() {\n    },\n    closure62: function closure62() {\n    },\n    closure63: function closure63() {\n    },\n    closure64: function closure64() {\n    },\n    closure65: function closure65() {\n    },\n    closure66: function closure66() {\n    },\n    closure67: function closure67() {\n    },\n    closure68: function closure68() {\n    },\n    closure69: function closure69() {\n    },\n    _closure8: function _closure8() {\n    },\n    closure70: function closure70() {\n    },\n    closure99: function closure99() {\n    },\n    closure100: function closure100() {\n    },\n    closure101: function closure101() {\n    },\n    closure102: function closure102() {\n    },\n    closure103: function closure103() {\n    },\n    closure104: function closure104() {\n    },\n    closure105: function closure105() {\n    },\n    closure106: function closure106() {\n    },\n    _closure13: function _closure13() {\n    },\n    closure107: function closure107() {\n    },\n    closure82: function closure82() {\n    },\n    closure81: function closure81() {\n    },\n    closure80: function closure80() {\n    },\n    closure79: function closure79() {\n    },\n    closure78: function closure78() {\n    },\n    closure77: function closure77() {\n    },\n    closure76: function closure76() {\n    },\n    closure75: function closure75() {\n    },\n    closure73: function closure73() {\n    },\n    closure72: function closure72() {\n    },\n    closure71: function closure71() {\n    },\n    closure74: function closure74() {\n    },\n    closure_hexString: function closure_hexString() {\n    },\n    _updateComponents_getParam: function _updateComponents_getParam(t0, t1, t2) {\n      this.keywords = t0;\n      this.scale = t1;\n      this.change = t2;\n    },\n    _updateComponents_closure: function _updateComponents_closure() {\n    },\n    _updateComponents_updateValue: function _updateComponents_updateValue(t0, t1) {\n      this.change = t0;\n      this.adjust = t1;\n    },\n    _updateComponents_updateRgb: function _updateComponents_updateRgb(t0) {\n      this.updateValue = t0;\n    },\n    _functionString_closure: function _functionString_closure() {\n    },\n    _removedColorFunction_closure: function _removedColorFunction_closure(t0, t1, t2) {\n      this.name = t0;\n      this.argument = t1;\n      this.negative = t2;\n    },\n    _parseChannels_closure: function _parseChannels_closure() {\n    },\n    _fuzzyRoundIfZero: function(number) {\n      if (!(Math.abs(number - 0) < $.$get$epsilon()))\n        return number;\n      return C.JSNumber_methods.get$isNegative(number) ? -0.0 : 0;\n    },\n    _coerceToRad: function(number) {\n      var error, t1, t2, exception;\n      try {\n        t1 = type$.JSArray_legacy_String;\n        t2 = H.setRuntimeTypeInfo([\"rad\"], t1);\n        t1 = H.setRuntimeTypeInfo([], t1);\n        t2 = T.SassNumber$withUnits(number.valueInUnits$2(t2, t1), t1, t2);\n        return t2;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassScriptException) {\n          error = t1;\n          if (!C.JSString_methods.startsWith$1(error.message, \"Incompatible units\"))\n            throw exception;\n          throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + \" to be an angle.\"));\n        } else\n          throw exception;\n      }\n    },\n    _numberFunction: function($name, transform) {\n      return Q.BuiltInCallable$function($name, \"$number\", new K._numberFunction_closure(transform), \"sass:math\");\n    },\n    _function1: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:math\");\n    },\n    closure25: function closure25() {\n    },\n    closure90: function closure90() {\n    },\n    closure24: function closure24() {\n    },\n    closure23: function closure23() {\n    },\n    closure22: function closure22() {\n    },\n    closure26: function closure26() {\n    },\n    closure88: function closure88() {\n    },\n    _closure9: function _closure9() {\n    },\n    closure87: function closure87() {\n    },\n    closure86: function closure86() {\n    },\n    closure84: function closure84() {\n    },\n    closure94: function closure94() {\n    },\n    closure93: function closure93() {\n    },\n    closure92: function closure92() {\n    },\n    closure91: function closure91() {\n    },\n    closure89: function closure89() {\n    },\n    closure85: function closure85() {\n    },\n    closure83: function closure83() {\n    },\n    closure18: function closure18() {\n    },\n    closure17: function closure17() {\n    },\n    closure19: function closure19() {\n    },\n    closure21: function closure21() {\n    },\n    closure20: function closure20() {\n    },\n    _numberFunction_closure: function _numberFunction_closure(t0) {\n      this.transform = t0;\n    },\n    LimitedMapView$blocklist: function(_map, blocklist, $K, $V) {\n      var t2, key,\n        t1 = P.LinkedHashSet_LinkedHashSet($K._eval$1(\"0*\"));\n      for (t2 = J.get$iterator$ax(_map.get$keys(_map)); t2.moveNext$0();) {\n        key = t2.get$current(t2);\n        if (!blocklist.contains$1(0, key))\n          t1.add$1(0, key);\n      }\n      return new K.LimitedMapView(_map, t1, $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"LimitedMapView<1,2>\"));\n    },\n    LimitedMapView: function LimitedMapView(t0, t1, t2) {\n      this._limited_map_view$_map = t0;\n      this._limited_map_view$_keys = t1;\n      this.$ti = t2;\n    },\n    SassColor$rgb: function(_red, _green, _blue, alpha, originalSpan) {\n      var t1 = new K.SassColor(_red, _green, _blue, null, null, null, alpha == null ? 1 : T.fuzzyAssertRange(alpha, 0, 1, \"alpha\"), originalSpan);\n      P.RangeError_checkValueInInterval(t1.get$red(), 0, 255, \"red\");\n      P.RangeError_checkValueInInterval(t1.get$green(), 0, 255, \"green\");\n      P.RangeError_checkValueInInterval(t1.get$blue(), 0, 255, \"blue\");\n      return t1;\n    },\n    SassColor$hsl: function(hue, saturation, lightness, alpha) {\n      var _null = null,\n        t1 = C.JSNumber_methods.$mod(hue, 360),\n        t2 = T.fuzzyAssertRange(saturation, 0, 100, \"saturation\"),\n        t3 = T.fuzzyAssertRange(lightness, 0, 100, \"lightness\");\n      return new K.SassColor(_null, _null, _null, t1, t2, t3, alpha == null ? 1 : T.fuzzyAssertRange(alpha, 0, 1, \"alpha\"), _null);\n    },\n    SassColor_SassColor$hwb: function(hue, whiteness, blackness, alpha) {\n      var t2, t1 = {},\n        scaledHue = C.JSNumber_methods.$mod(hue, 360) / 360,\n        scaledWhiteness = t1.scaledWhiteness = T.fuzzyAssertRange(whiteness, 0, 100, \"whiteness\") / 100,\n        scaledBlackness = T.fuzzyAssertRange(blackness, 0, 100, \"blackness\") / 100,\n        sum = scaledWhiteness + scaledBlackness;\n      if (sum > 1) {\n        t2 = t1.scaledWhiteness = scaledWhiteness / sum;\n        scaledBlackness /= sum;\n      } else\n        t2 = scaledWhiteness;\n      t2 = new K.SassColor_SassColor$hwb_toRgb(t1, 1 - t2 - scaledBlackness);\n      return K.SassColor$rgb(t2.call$1(scaledHue + 0.3333333333333333), t2.call$1(scaledHue), t2.call$1(scaledHue - 0.3333333333333333), alpha, null);\n    },\n    SassColor__hueToRgb: function(m1, m2, hue) {\n      if (hue < 0)\n        ++hue;\n      if (hue > 1)\n        --hue;\n      if (hue < 0.16666666666666666)\n        return m1 + (m2 - m1) * hue * 6;\n      else if (hue < 0.5)\n        return m2;\n      else if (hue < 0.6666666666666666)\n        return m1 + (m2 - m1) * (0.6666666666666666 - hue) * 6;\n      else\n        return m1;\n    },\n    SassColor: function SassColor(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _._red = t0;\n      _._green = t1;\n      _._blue = t2;\n      _._hue = t3;\n      _._saturation = t4;\n      _._lightness = t5;\n      _.alpha = t6;\n      _.originalSpan = t7;\n    },\n    SassColor_SassColor$hwb_toRgb: function SassColor_SassColor$hwb_toRgb(t0, t1) {\n      this._box_0 = t0;\n      this.factor = t1;\n    },\n    UnicodeGlyphSet: function UnicodeGlyphSet() {\n    },\n    ColorExpression0: function ColorExpression0(t0) {\n      this.value = t0;\n    },\n    _updateComponents0: function($arguments, adjust, change, scale) {\n      var keywords, alpha, red, green, blue, hue, t2, saturation, lightness, whiteness, blackness, hasRgb, hasSL, hasWB, t3, t4, t5, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        argumentList = type$.legacy_SassArgumentList_2._as(t1.$index($arguments, 1));\n      if (argumentList._list1$_contents.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(string$.Only_op));\n      argumentList._argument_list$_wereKeywordsAccessed = true;\n      keywords = P.LinkedHashMap_LinkedHashMap$of(argumentList._argument_list$_keywords, type$.legacy_String, type$.legacy_Value_2);\n      t1 = new K._updateComponents_getParam0(keywords, scale, change);\n      alpha = t1.call$2(\"alpha\", 1);\n      red = t1.call$2(\"red\", 255);\n      green = t1.call$2(\"green\", 255);\n      blue = t1.call$2(\"blue\", 255);\n      if (scale)\n        hue = _null;\n      else {\n        t2 = keywords.remove$1(0, \"hue\");\n        t2 = t2 == null ? _null : t2.assertNumber$1(\"hue\");\n        hue = t2 == null ? _null : t2.value;\n      }\n      saturation = t1.call$2(\"saturation\", 100);\n      lightness = t1.call$2(\"lightness\", 100);\n      whiteness = t1.call$3$assertPercent(\"whiteness\", 100, true);\n      blackness = t1.call$3$assertPercent(\"blackness\", 100, true);\n      if (keywords.get$isNotEmpty(keywords))\n        throw H.wrapException(E.SassScriptException$0(\"No \" + B.pluralize0(\"argument\", keywords.get$length(keywords), _null) + \" named \" + H.S(B.toSentence0(keywords.get$keys(keywords).map$1$1(0, new K._updateComponents_closure0(), type$.legacy_Object), \"or\")) + \".\"));\n      hasRgb = red != null || green != null || blue != null;\n      hasSL = saturation != null || lightness != null;\n      hasWB = whiteness != null || blackness != null;\n      if (hasRgb)\n        t1 = hasSL || hasWB || hue != null;\n      else\n        t1 = false;\n      if (t1)\n        throw H.wrapException(E.SassScriptException$0(string$.RGB_pa + (hasWB ? \"HWB\" : \"HSL\") + \" parameters.\"));\n      if (hasSL && hasWB)\n        throw H.wrapException(E.SassScriptException$0(string$.HSL_pa));\n      t1 = new K._updateComponents_updateValue0(change, adjust);\n      t2 = new K._updateComponents_updateRgb0(t1);\n      if (hasRgb) {\n        t3 = t2.call$2(color.get$red(), red);\n        t4 = t2.call$2(color.get$green(), green);\n        t2 = t2.call$2(color.get$blue(), blue);\n        return color.changeRgb$4$alpha$blue$green$red(t1.call$3(color.alpha, alpha, 1), t2, t4, t3);\n      } else if (hasWB) {\n        if (change)\n          t2 = hue;\n        else {\n          t2 = color.get$hue();\n          t2 += hue == null ? 0 : hue;\n        }\n        t3 = t1.call$3(color.get$whiteness(), whiteness, 100);\n        t4 = t1.call$3(color.get$blackness(), blackness, 100);\n        t5 = color.alpha;\n        t1 = t1.call$3(t5, alpha, 1);\n        if (t2 == null)\n          t2 = color.get$hue();\n        if (t3 == null)\n          t3 = color.get$whiteness();\n        if (t4 == null)\n          t4 = color.get$blackness();\n        return K.SassColor_SassColor$hwb0(t2, t3, t4, t1 == null ? t5 : t1);\n      } else {\n        t2 = hue == null;\n        if (!t2 || hasSL) {\n          if (change)\n            t2 = hue;\n          else {\n            t3 = color.get$hue();\n            t3 += t2 ? 0 : hue;\n            t2 = t3;\n          }\n          t3 = t1.call$3(color.get$saturation(), saturation, 100);\n          t4 = t1.call$3(color.get$lightness(), lightness, 100);\n          return color.changeHsl$4$alpha$hue$lightness$saturation(t1.call$3(color.alpha, alpha, 1), t2, t4, t3);\n        } else if (alpha != null)\n          return color.changeAlpha$1(t1.call$3(color.alpha, alpha, 1));\n        else\n          return color;\n      }\n    },\n    _functionString0: function($name, $arguments) {\n      return new D.SassString0($name + \"(\" + J.map$1$1$ax($arguments, new K._functionString_closure0(), type$.legacy_String).join$1(0, \", \") + \")\", false);\n    },\n    _removedColorFunction0: function($name, argument, negative) {\n      return Q.BuiltInCallable$function0($name, \"$color, $amount\", new K._removedColorFunction_closure0($name, argument, negative), \"sass:color\");\n    },\n    _rgb0: function($name, $arguments) {\n      var t2, red, green, blue, t3, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : _null;\n      if (!t1.$index($arguments, 0).get$isSpecialNumber())\n        if (!t1.$index($arguments, 1).get$isSpecialNumber())\n          if (!t1.$index($arguments, 2).get$isSpecialNumber()) {\n            t2 = alpha == null ? _null : alpha.get$isSpecialNumber();\n            t2 = t2 === true;\n          } else\n            t2 = true;\n        else\n          t2 = true;\n      else\n        t2 = true;\n      if (t2)\n        return K._functionString0($name, $arguments);\n      red = t1.$index($arguments, 0).assertNumber$1(\"red\");\n      green = t1.$index($arguments, 1).assertNumber$1(\"green\");\n      blue = t1.$index($arguments, 2).assertNumber$1(\"blue\");\n      t1 = T.fuzzyRound0(K._percentageOrUnitless0(red, 255, \"red\"));\n      t2 = T.fuzzyRound0(K._percentageOrUnitless0(green, 255, \"green\"));\n      t3 = T.fuzzyRound0(K._percentageOrUnitless0(blue, 255, \"blue\"));\n      return K.SassColor$rgb0(t1, t2, t3, alpha == null ? _null : K._percentageOrUnitless0(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\"), _null);\n    },\n    _rgbTwoArg0: function($name, $arguments) {\n      var first, t2, color,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar())\n        return K._functionString0($name, $arguments);\n      else if (t1.$index($arguments, 1).get$isVar()) {\n        first = t1.$index($arguments, 0);\n        if (first instanceof K.SassColor0) {\n          t2 = $name + \"(\" + H.S(first.get$red()) + \", \" + H.S(first.get$green()) + \", \" + H.S(first.get$blue()) + \", \";\n          t1 = t1.$index($arguments, 1);\n          t1.toString;\n          return new D.SassString0(t2 + N.serializeValue(t1, false, true) + \")\", false);\n        } else\n          return K._functionString0($name, $arguments);\n      } else if (t1.$index($arguments, 1).get$isSpecialNumber()) {\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n        t2 = $name + \"(\" + H.S(color.get$red()) + \", \" + H.S(color.get$green()) + \", \" + H.S(color.get$blue()) + \", \";\n        t1 = t1.$index($arguments, 1);\n        t1.toString;\n        return new D.SassString0(t2 + N.serializeValue(t1, false, true) + \")\", false);\n      }\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeAlpha$1(K._percentageOrUnitless0(t1.$index($arguments, 1).assertNumber$1(\"alpha\"), 1, \"alpha\"));\n    },\n    _hsl0: function($name, $arguments) {\n      var t2, hue, saturation, lightness, t3,\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : null;\n      if (!t1.$index($arguments, 0).get$isSpecialNumber())\n        if (!t1.$index($arguments, 1).get$isSpecialNumber())\n          if (!t1.$index($arguments, 2).get$isSpecialNumber()) {\n            t2 = alpha == null ? null : alpha.get$isSpecialNumber();\n            t2 = t2 === true;\n          } else\n            t2 = true;\n        else\n          t2 = true;\n      else\n        t2 = true;\n      if (t2)\n        return K._functionString0($name, $arguments);\n      hue = t1.$index($arguments, 0).assertNumber$1(\"hue\");\n      saturation = t1.$index($arguments, 1).assertNumber$1(\"saturation\");\n      lightness = t1.$index($arguments, 2).assertNumber$1(\"lightness\");\n      t1 = J.clamp$2$n(saturation.value, 0, 100);\n      t2 = J.clamp$2$n(lightness.value, 0, 100);\n      t3 = alpha == null ? null : K._percentageOrUnitless0(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\");\n      return K.SassColor$hsl0(hue.value, t1, t2, t3);\n    },\n    _hwb0: function($arguments) {\n      var t2, t3,\n        _s9_ = \"whiteness\",\n        t1 = J.getInterceptor$asx($arguments),\n        alpha = t1.get$length($arguments) > 3 ? t1.$index($arguments, 3) : null,\n        hue = t1.$index($arguments, 0).assertNumber$1(\"hue\"),\n        whiteness = t1.$index($arguments, 1).assertNumber$1(_s9_),\n        blackness = t1.$index($arguments, 2).assertNumber$1(\"blackness\");\n      whiteness.assertUnit$2(\"%\", _s9_);\n      blackness.assertUnit$2(\"%\", _s9_);\n      t1 = whiteness.valueInRange$3(0, 100, _s9_);\n      t2 = blackness.valueInRange$3(0, 100, _s9_);\n      t3 = alpha == null ? null : K._percentageOrUnitless0(alpha.assertNumber$1(\"alpha\"), 1, \"alpha\");\n      return K.SassColor_SassColor$hwb0(hue.value, t1, t2, t3);\n    },\n    _parseChannels0: function($name, argumentNames, channels) {\n      var isCommaSeparated, isBracketed, buffer, t1, list, maybeSlashSeparated, t2, t3,\n        _s17_ = \"$channels must be\",\n        _s32_ = \"$channels must be an unbracketed\";\n      if (channels.get$isVar())\n        return K._functionString0($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value_2));\n      isCommaSeparated = channels.get$separator() === C.ListSeparator_comma0;\n      isBracketed = channels.get$hasBrackets();\n      if (isCommaSeparated || isBracketed) {\n        buffer = new P.StringBuffer(_s17_);\n        if (isBracketed) {\n          buffer._contents = _s32_;\n          t1 = _s32_;\n        } else\n          t1 = _s17_;\n        if (isCommaSeparated) {\n          t1 += isBracketed ? \",\" : \" a\";\n          buffer._contents = t1;\n          t1 = buffer._contents = t1 + \" space-separated\";\n        }\n        buffer._contents = t1 + \" list.\";\n        throw H.wrapException(E.SassScriptException$0(buffer.toString$0(0)));\n      }\n      list = channels.get$asList();\n      t1 = list.length;\n      if (t1 > 3)\n        throw H.wrapException(E.SassScriptException$0(\"Only 3 elements allowed, but \" + t1 + \" were passed.\"));\n      else if (t1 < 3) {\n        if (!C.JSArray_methods.any$1(list, new K._parseChannels_closure0()))\n          if (list.length !== 0) {\n            t1 = C.JSArray_methods.get$last(list);\n            if (t1 instanceof D.SassString0)\n              if (t1.hasQuotes) {\n                t1 = t1.text;\n                t1 = B.startsWithIgnoreCase0(t1, \"var(\") && J.contains$1$asx(t1, \"/\");\n              } else\n                t1 = false;\n            else\n              t1 = false;\n          } else\n            t1 = false;\n        else\n          t1 = true;\n        if (t1)\n          return K._functionString0($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value_2));\n        else\n          throw H.wrapException(E.SassScriptException$0(\"Missing element \" + argumentNames[list.length] + \".\"));\n      }\n      maybeSlashSeparated = list[2];\n      if (maybeSlashSeparated instanceof T.SassNumber0 && maybeSlashSeparated.asSlash != null) {\n        t1 = list[0];\n        t2 = list[1];\n        t3 = maybeSlashSeparated.asSlash;\n        return H.setRuntimeTypeInfo([t1, t2, t3.item1, t3.item2], type$.JSArray_legacy_Value_2);\n      } else if (maybeSlashSeparated instanceof D.SassString0 && !maybeSlashSeparated.hasQuotes && J.contains$1$asx(maybeSlashSeparated.text, \"/\"))\n        return K._functionString0($name, H.setRuntimeTypeInfo([channels], type$.JSArray_legacy_Value_2));\n      else\n        return list;\n    },\n    _percentageOrUnitless0: function(number, max, $name) {\n      var value;\n      if (!(number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0))\n        value = number.value;\n      else if (number.hasUnit$1(\"%\"))\n        value = max * number.value / 100;\n      else\n        throw H.wrapException(E.SassScriptException$0(\"$\" + $name + \": Expected \" + number.toString$0(0) + ' to have no units or \"%\".'));\n      return J.clamp$2$n(value, 0, max);\n    },\n    _mixColors0: function(color1, color2, weight) {\n      var weightScale = weight.valueInRange$3(0, 100, \"weight\") / 100,\n        normalizedWeight = weightScale * 2 - 1,\n        t1 = color1.alpha,\n        t2 = color2.alpha,\n        alphaDistance = t1 - t2,\n        t3 = normalizedWeight * alphaDistance,\n        weight1 = ((t3 === -1 ? normalizedWeight : (normalizedWeight + alphaDistance) / (1 + t3)) + 1) / 2,\n        weight2 = 1 - weight1;\n      return K.SassColor$rgb0(T.fuzzyRound0(color1.get$red() * weight1 + color2.get$red() * weight2), T.fuzzyRound0(color1.get$green() * weight1 + color2.get$green() * weight2), T.fuzzyRound0(color1.get$blue() * weight1 + color2.get$blue() * weight2), t1 * weightScale + t2 * (1 - weightScale), null);\n    },\n    _opacify0: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      return color.changeAlpha$1(C.JSNumber_methods.clamp$2(color.alpha + t1.$index($arguments, 1).assertNumber$1(\"amount\").valueInRange$3(0, 1, \"amount\"), 0, 1));\n    },\n    _transparentize0: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      return color.changeAlpha$1(C.JSNumber_methods.clamp$2(color.alpha - t1.$index($arguments, 1).assertNumber$1(\"amount\").valueInRange$3(0, 1, \"amount\"), 0, 1));\n    },\n    _function11: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:color\");\n    },\n    closure159: function closure159() {\n    },\n    closure160: function closure160() {\n    },\n    closure161: function closure161() {\n    },\n    closure162: function closure162() {\n    },\n    closure163: function closure163() {\n    },\n    closure164: function closure164() {\n    },\n    closure165: function closure165() {\n    },\n    closure166: function closure166() {\n    },\n    closure167: function closure167() {\n    },\n    closure168: function closure168() {\n    },\n    closure169: function closure169() {\n    },\n    closure170: function closure170() {\n    },\n    closure171: function closure171() {\n    },\n    closure172: function closure172() {\n    },\n    closure173: function closure173() {\n    },\n    closure174: function closure174() {\n    },\n    closure175: function closure175() {\n    },\n    closure176: function closure176() {\n    },\n    closure177: function closure177() {\n    },\n    closure178: function closure178() {\n    },\n    closure179: function closure179() {\n    },\n    closure180: function closure180() {\n    },\n    closure181: function closure181() {\n    },\n    closure182: function closure182() {\n    },\n    closure183: function closure183() {\n    },\n    closure184: function closure184() {\n    },\n    _closure23: function _closure23() {\n    },\n    closure185: function closure185() {\n    },\n    closure214: function closure214() {\n    },\n    closure215: function closure215() {\n    },\n    closure216: function closure216() {\n    },\n    closure217: function closure217() {\n    },\n    closure218: function closure218() {\n    },\n    closure219: function closure219() {\n    },\n    closure220: function closure220() {\n    },\n    closure221: function closure221() {\n    },\n    _closure28: function _closure28() {\n    },\n    closure222: function closure222() {\n    },\n    closure197: function closure197() {\n    },\n    closure196: function closure196() {\n    },\n    closure195: function closure195() {\n    },\n    closure194: function closure194() {\n    },\n    closure193: function closure193() {\n    },\n    closure192: function closure192() {\n    },\n    closure191: function closure191() {\n    },\n    closure190: function closure190() {\n    },\n    closure188: function closure188() {\n    },\n    closure187: function closure187() {\n    },\n    closure186: function closure186() {\n    },\n    closure189: function closure189() {\n    },\n    closure_hexString0: function closure_hexString0() {\n    },\n    _updateComponents_getParam0: function _updateComponents_getParam0(t0, t1, t2) {\n      this.keywords = t0;\n      this.scale = t1;\n      this.change = t2;\n    },\n    _updateComponents_closure0: function _updateComponents_closure0() {\n    },\n    _updateComponents_updateValue0: function _updateComponents_updateValue0(t0, t1) {\n      this.change = t0;\n      this.adjust = t1;\n    },\n    _updateComponents_updateRgb0: function _updateComponents_updateRgb0(t0) {\n      this.updateValue = t0;\n    },\n    _functionString_closure0: function _functionString_closure0() {\n    },\n    _removedColorFunction_closure0: function _removedColorFunction_closure0(t0, t1, t2) {\n      this.name = t0;\n      this.argument = t1;\n      this.negative = t2;\n    },\n    _parseChannels_closure0: function _parseChannels_closure0() {\n    },\n    _NodeSassColor: function _NodeSassColor() {\n    },\n    closure253: function closure253() {\n    },\n    closure254: function closure254() {\n    },\n    closure255: function closure255() {\n    },\n    closure256: function closure256() {\n    },\n    closure257: function closure257() {\n    },\n    closure258: function closure258() {\n    },\n    closure259: function closure259() {\n    },\n    closure260: function closure260() {\n    },\n    closure261: function closure261() {\n    },\n    closure262: function closure262() {\n    },\n    SassColor$rgb0: function(_red, _green, _blue, alpha, originalSpan) {\n      var t1 = new K.SassColor0(_red, _green, _blue, null, null, null, alpha == null ? 1 : T.fuzzyAssertRange0(alpha, 0, 1, \"alpha\"), originalSpan);\n      P.RangeError_checkValueInInterval(t1.get$red(), 0, 255, \"red\");\n      P.RangeError_checkValueInInterval(t1.get$green(), 0, 255, \"green\");\n      P.RangeError_checkValueInInterval(t1.get$blue(), 0, 255, \"blue\");\n      return t1;\n    },\n    SassColor$hsl0: function(hue, saturation, lightness, alpha) {\n      var _null = null,\n        t1 = C.JSNumber_methods.$mod(hue, 360),\n        t2 = T.fuzzyAssertRange0(saturation, 0, 100, \"saturation\"),\n        t3 = T.fuzzyAssertRange0(lightness, 0, 100, \"lightness\");\n      return new K.SassColor0(_null, _null, _null, t1, t2, t3, alpha == null ? 1 : T.fuzzyAssertRange0(alpha, 0, 1, \"alpha\"), _null);\n    },\n    SassColor_SassColor$hwb0: function(hue, whiteness, blackness, alpha) {\n      var t2, t1 = {},\n        scaledHue = C.JSNumber_methods.$mod(hue, 360) / 360,\n        scaledWhiteness = t1.scaledWhiteness = T.fuzzyAssertRange0(whiteness, 0, 100, \"whiteness\") / 100,\n        scaledBlackness = T.fuzzyAssertRange0(blackness, 0, 100, \"blackness\") / 100,\n        sum = scaledWhiteness + scaledBlackness;\n      if (sum > 1) {\n        t2 = t1.scaledWhiteness = scaledWhiteness / sum;\n        scaledBlackness /= sum;\n      } else\n        t2 = scaledWhiteness;\n      t2 = new K.SassColor_SassColor$hwb_toRgb0(t1, 1 - t2 - scaledBlackness);\n      return K.SassColor$rgb0(t2.call$1(scaledHue + 0.3333333333333333), t2.call$1(scaledHue), t2.call$1(scaledHue - 0.3333333333333333), alpha, null);\n    },\n    SassColor__hueToRgb0: function(m1, m2, hue) {\n      if (hue < 0)\n        ++hue;\n      if (hue > 1)\n        --hue;\n      if (hue < 0.16666666666666666)\n        return m1 + (m2 - m1) * hue * 6;\n      else if (hue < 0.5)\n        return m2;\n      else if (hue < 0.6666666666666666)\n        return m1 + (m2 - m1) * (0.6666666666666666 - hue) * 6;\n      else\n        return m1;\n    },\n    SassColor0: function SassColor0(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _._color0$_red = t0;\n      _._color0$_green = t1;\n      _._color0$_blue = t2;\n      _._color0$_hue = t3;\n      _._color0$_saturation = t4;\n      _._color0$_lightness = t5;\n      _.alpha = t6;\n      _.originalSpan = t7;\n    },\n    SassColor_SassColor$hwb_toRgb0: function SassColor_SassColor$hwb_toRgb0(t0, t1) {\n      this._box_0 = t0;\n      this.factor = t1;\n    },\n    LimitedMapView$blocklist0: function(_map, blocklist, $K, $V) {\n      var t2, key,\n        t1 = P.LinkedHashSet_LinkedHashSet($K._eval$1(\"0*\"));\n      for (t2 = J.get$iterator$ax(_map.get$keys(_map)); t2.moveNext$0();) {\n        key = t2.get$current(t2);\n        if (!blocklist.contains$1(0, key))\n          t1.add$1(0, key);\n      }\n      return new K.LimitedMapView0(_map, t1, $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"LimitedMapView0<1,2>\"));\n    },\n    LimitedMapView0: function LimitedMapView0(t0, t1, t2) {\n      this._limited_map_view0$_map = t0;\n      this._limited_map_view0$_keys = t1;\n      this.$ti = t2;\n    },\n    _fuzzyRoundIfZero0: function(number) {\n      if (!(Math.abs(number - 0) < $.$get$epsilon0()))\n        return number;\n      return C.JSNumber_methods.get$isNegative(number) ? -0.0 : 0;\n    },\n    _coerceToRad0: function(number) {\n      var error, t1, t2, exception;\n      try {\n        t1 = type$.JSArray_legacy_String;\n        t2 = H.setRuntimeTypeInfo([\"rad\"], t1);\n        t1 = H.setRuntimeTypeInfo([], t1);\n        t2 = T.SassNumber$withUnits0(number.valueInUnits$2(t2, t1), t1, t2);\n        return t2;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassScriptException0) {\n          error = t1;\n          if (!C.JSString_methods.startsWith$1(error.message, \"Incompatible units\"))\n            throw exception;\n          throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + \" to be an angle.\"));\n        } else\n          throw exception;\n      }\n    },\n    _numberFunction0: function($name, transform) {\n      return Q.BuiltInCallable$function0($name, \"$number\", new K._numberFunction_closure0(transform), \"sass:math\");\n    },\n    _function8: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:math\");\n    },\n    closure140: function closure140() {\n    },\n    closure205: function closure205() {\n    },\n    closure139: function closure139() {\n    },\n    closure138: function closure138() {\n    },\n    closure137: function closure137() {\n    },\n    closure141: function closure141() {\n    },\n    closure203: function closure203() {\n    },\n    _closure24: function _closure24() {\n    },\n    closure202: function closure202() {\n    },\n    closure201: function closure201() {\n    },\n    closure199: function closure199() {\n    },\n    closure209: function closure209() {\n    },\n    closure208: function closure208() {\n    },\n    closure207: function closure207() {\n    },\n    closure206: function closure206() {\n    },\n    closure204: function closure204() {\n    },\n    closure200: function closure200() {\n    },\n    closure198: function closure198() {\n    },\n    closure133: function closure133() {\n    },\n    closure132: function closure132() {\n    },\n    closure134: function closure134() {\n    },\n    closure136: function closure136() {\n    },\n    closure135: function closure135() {\n    },\n    _numberFunction_closure0: function _numberFunction_closure0(t0) {\n      this.transform = t0;\n    }\n  },\n  R = {ModifiableCssComment: function ModifiableCssComment(t0, t1) {\n      var _ = this;\n      _.text = t0;\n      _.span = t1;\n      _._indexInParent = _._parent = null;\n      _.isGroupEnd = false;\n    },\n    ImportCache$: function(importers, loadPaths, logger) {\n      var t1 = R.ImportCache__toImporters(importers, loadPaths, null),\n        t2 = logger == null ? C.StderrLogger_false : logger,\n        t3 = type$.legacy_Uri;\n      return new R.ImportCache(t1, t2, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.legacy_Stylesheet_2), P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.legacy_ImporterResult_2));\n    },\n    ImportCache__toImporters: function(importers, loadPaths, packageResolver) {\n      var _i, t2, t3, path, _null = null,\n        sassPath = H._asStringS(J.get$env$x(self.process).SASS_PATH),\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Importer);\n      for (_i = 0; false; ++_i)\n        t1.push(importers[_i]);\n      if (loadPaths != null)\n        for (t2 = J.get$iterator$ax(loadPaths); t2.moveNext$0();) {\n          t3 = t2.get$current(t2);\n          t1.push(new F.FilesystemImporter($.$get$context().absolute$7(t3, _null, _null, _null, _null, _null, _null)));\n        }\n      if (sassPath != null) {\n        t2 = sassPath.split(J.$eq$(J.get$platform$x(self.process), \"win32\") ? \";\" : \":\");\n        t3 = t2.length;\n        _i = 0;\n        for (; _i < t3; ++_i) {\n          path = t2[_i];\n          t1.push(new F.FilesystemImporter($.$get$context().absolute$7(path, _null, _null, _null, _null, _null, _null)));\n        }\n      }\n      return t1;\n    },\n    ImportCache: function ImportCache(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._importers = t0;\n      _._logger = t1;\n      _._canonicalizeCache = t2;\n      _._importCache = t3;\n      _._resultsCache = t4;\n    },\n    ImportCache_canonicalize_closure: function ImportCache_canonicalize_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.url = t1;\n      this.forImport = t2;\n    },\n    ImportCache__canonicalize_closure: function ImportCache__canonicalize_closure(t0, t1) {\n      this.importer = t0;\n      this.url = t1;\n    },\n    ImportCache_importCanonical_closure: function ImportCache_importCanonical_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.originalUrl = t3;\n    },\n    ImportCache_humanize_closure: function ImportCache_humanize_closure(t0) {\n      this.canonicalUrl = t0;\n    },\n    ImportCache_humanize_closure0: function ImportCache_humanize_closure0() {\n    },\n    ImportCache_humanize_closure1: function ImportCache_humanize_closure1() {\n    },\n    ForwardedModuleView_ifNecessary: function(inner, rule, $T) {\n      var t1;\n      if (rule.prefix == null)\n        if (rule.shownMixinsAndFunctions == null)\n          if (rule.shownVariables == null) {\n            t1 = rule.hiddenMixinsAndFunctions;\n            if (t1 != null) {\n              t1 = t1._base;\n              t1 = t1.get$isEmpty(t1);\n            } else\n              t1 = true;\n            if (t1) {\n              t1 = rule.hiddenVariables;\n              if (t1 != null) {\n                t1 = t1._base;\n                t1 = t1.get$isEmpty(t1);\n              } else\n                t1 = true;\n            } else\n              t1 = false;\n          } else\n            t1 = false;\n        else\n          t1 = false;\n      else\n        t1 = false;\n      if (t1)\n        return inner;\n      else\n        return R.ForwardedModuleView$(inner, rule, $T._eval$1(\"0*\"));\n    },\n    ForwardedModuleView$: function(_inner, _rule, $T) {\n      var t5, t6,\n        t1 = _rule.prefix,\n        t2 = _rule.shownVariables,\n        t3 = _rule.hiddenVariables,\n        t4 = R.ForwardedModuleView__forwardedMap(_inner.get$variables(), t1, t2, t3, type$.legacy_Value);\n      t2 = _inner.get$variableNodes() == null ? null : R.ForwardedModuleView__forwardedMap(_inner.get$variableNodes(), t1, t2, t3, type$.legacy_AstNode);\n      t3 = _rule.shownMixinsAndFunctions;\n      t5 = _rule.hiddenMixinsAndFunctions;\n      t6 = $T._eval$1(\"0*\");\n      return new R.ForwardedModuleView(_inner, _rule, t4, t2, R.ForwardedModuleView__forwardedMap(_inner.get$functions(_inner), t1, t3, t5, t6), R.ForwardedModuleView__forwardedMap(_inner.get$mixins(), t1, t3, t5, t6), $T._eval$1(\"ForwardedModuleView<0>\"));\n    },\n    ForwardedModuleView__forwardedMap: function(map, prefix, safelist, blocklist, $V) {\n      var t2,\n        t1 = prefix == null;\n      if (t1)\n        if (safelist == null)\n          if (blocklist != null) {\n            t2 = blocklist._base;\n            t2 = t2.get$isEmpty(t2);\n          } else\n            t2 = true;\n        else\n          t2 = false;\n      else\n        t2 = false;\n      if (t2)\n        return map;\n      if (!t1)\n        map = new F.PrefixedMapView(map, prefix, $V._eval$1(\"PrefixedMapView<0*>\"));\n      if (safelist != null)\n        map = new K.LimitedMapView(map, safelist._base.intersection$1(new M.MapKeySet(map, type$.MapKeySet_legacy_Object)), type$.$env_1_1_legacy_String._bind$1($V._eval$1(\"0*\"))._eval$1(\"LimitedMapView<1,2>\"));\n      else {\n        if (blocklist != null) {\n          t1 = blocklist._base;\n          t1 = t1.get$isNotEmpty(t1);\n        } else\n          t1 = false;\n        if (t1)\n          map = K.LimitedMapView$blocklist(map, blocklist, type$.legacy_String, $V._eval$1(\"0*\"));\n      }\n      return map;\n    },\n    ForwardedModuleView: function ForwardedModuleView(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._forwarded_view$_inner = t0;\n      _._rule = t1;\n      _.variables = t2;\n      _.variableNodes = t3;\n      _.functions = t4;\n      _.mixins = t5;\n      _.$ti = t6;\n    },\n    UnprefixedMapView: function UnprefixedMapView(t0, t1, t2) {\n      this._unprefixed_map_view$_map = t0;\n      this._unprefixed_map_view$_prefix = t1;\n      this.$ti = t2;\n    },\n    _UnprefixedKeys: function _UnprefixedKeys(t0) {\n      this._unprefixed_map_view$_view = t0;\n    },\n    _UnprefixedKeys_iterator_closure: function _UnprefixedKeys_iterator_closure(t0) {\n      this.$this = t0;\n    },\n    _UnprefixedKeys_iterator_closure0: function _UnprefixedKeys_iterator_closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor$: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t1 = type$.legacy_String,\n        t2 = type$.legacy_Uri,\n        t3 = type$.legacy_Module_legacy_Callable,\n        t4 = type$.legacy_AstNode,\n        t5 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode),\n        t6 = logger == null ? C.StderrLogger_false : logger;\n      t5 = new R._EvaluateVisitor(importCache, nodeImporter, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Callable), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t6, sourceMap, O.Environment$(sourceMap), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t5, C.Configuration_Map_empty_null_true);\n      t5._EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap(functions, importCache, logger, nodeImporter, sourceMap);\n      return t5;\n    },\n    Evaluator: function Evaluator(t0, t1) {\n      this._visitor = t0;\n      this._importer = t1;\n    },\n    _EvaluateVisitor: function _EvaluateVisitor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {\n      var _ = this;\n      _._evaluate$_importCache = t0;\n      _._evaluate$_nodeImporter = t1;\n      _._builtInFunctions = t2;\n      _._builtInModules = t3;\n      _._modules = t4;\n      _._moduleNodes = t5;\n      _._evaluate$_logger = t6;\n      _._sourceMap = t7;\n      _._evaluate$_environment = t8;\n      _._declarationName = _._evaluate$_parent = _._mediaQueries = _._styleRule = null;\n      _._member = \"root stylesheet\";\n      _._importSpan = _._callableNode = null;\n      _._inKeyframes = _._atRootExcludingStyleRule = _._inUnknownAtRule = _._inFunction = false;\n      _._evaluate$_includedFiles = t9;\n      _._activeModules = t10;\n      _._stack = t11;\n      _._extender = _._outOfOrderImports = _._endOfImports = _._root = _._stylesheet = _._importer = null;\n      _._configuration = t12;\n    },\n    _EvaluateVisitor_closure: function _EvaluateVisitor_closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure0: function _EvaluateVisitor_closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure1: function _EvaluateVisitor_closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure2: function _EvaluateVisitor_closure2(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure3: function _EvaluateVisitor_closure3(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure4: function _EvaluateVisitor_closure4(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure5: function _EvaluateVisitor_closure5(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure6: function _EvaluateVisitor_closure6(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure1: function _EvaluateVisitor__closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.name = t1;\n      this.module = t2;\n    },\n    _EvaluateVisitor_closure7: function _EvaluateVisitor_closure7(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure8: function _EvaluateVisitor_closure8(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure: function _EvaluateVisitor__closure(t0, t1) {\n      this.values = t0;\n      this.span = t1;\n    },\n    _EvaluateVisitor__closure0: function _EvaluateVisitor__closure0(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_run_closure: function _EvaluateVisitor_run_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.importer = t2;\n    },\n    _EvaluateVisitor_runExpression_closure: function _EvaluateVisitor_runExpression_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.importer = t1;\n      this.expression = t2;\n    },\n    _EvaluateVisitor_runExpression__closure: function _EvaluateVisitor_runExpression__closure(t0, t1) {\n      this.$this = t0;\n      this.expression = t1;\n    },\n    _EvaluateVisitor_runStatement_closure: function _EvaluateVisitor_runStatement_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.importer = t1;\n      this.statement = t2;\n    },\n    _EvaluateVisitor_runStatement__closure: function _EvaluateVisitor_runStatement__closure(t0, t1) {\n      this.$this = t0;\n      this.statement = t1;\n    },\n    _EvaluateVisitor__withWarnCallback_closure: function _EvaluateVisitor__withWarnCallback_closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__loadModule_closure: function _EvaluateVisitor__loadModule_closure(t0, t1) {\n      this.callback = t0;\n      this.builtInModule = t1;\n    },\n    _EvaluateVisitor__loadModule_closure0: function _EvaluateVisitor__loadModule_closure0(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.nodeWithSpan = t2;\n      _.baseUrl = t3;\n      _.namesInErrors = t4;\n      _.configuration = t5;\n      _.callback = t6;\n    },\n    _EvaluateVisitor__execute_closure: function _EvaluateVisitor__execute_closure(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.extender = t4;\n      _.configuration = t5;\n    },\n    _EvaluateVisitor__combineCss_closure: function _EvaluateVisitor__combineCss_closure() {\n    },\n    _EvaluateVisitor__combineCss_closure0: function _EvaluateVisitor__combineCss_closure0(t0) {\n      this.selectors = t0;\n    },\n    _EvaluateVisitor__combineCss_closure1: function _EvaluateVisitor__combineCss_closure1() {\n    },\n    _EvaluateVisitor__extendModules_closure: function _EvaluateVisitor__extendModules_closure(t0) {\n      this.originalSelectors = t0;\n    },\n    _EvaluateVisitor__extendModules_closure0: function _EvaluateVisitor__extendModules_closure0() {\n    },\n    _EvaluateVisitor__topologicalModules_visitModule: function _EvaluateVisitor__topologicalModules_visitModule(t0, t1) {\n      this.seen = t0;\n      this.sorted = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure: function _EvaluateVisitor_visitAtRootRule_closure(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure0: function _EvaluateVisitor_visitAtRootRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure1: function _EvaluateVisitor_visitAtRootRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure: function _EvaluateVisitor__scopeForAtRoot_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.newParent = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure0: function _EvaluateVisitor__scopeForAtRoot_closure0(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure1: function _EvaluateVisitor__scopeForAtRoot_closure1(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot__closure: function _EvaluateVisitor__scopeForAtRoot__closure(t0, t1) {\n      this.innerScope = t0;\n      this.callback = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure2: function _EvaluateVisitor__scopeForAtRoot_closure2(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure3: function _EvaluateVisitor__scopeForAtRoot_closure3() {\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure4: function _EvaluateVisitor__scopeForAtRoot_closure4(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor_visitContentRule_closure: function _EvaluateVisitor_visitContentRule_closure(t0, t1) {\n      this.$this = t0;\n      this.content = t1;\n    },\n    _EvaluateVisitor_visitDeclaration_closure: function _EvaluateVisitor_visitDeclaration_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitEachRule_closure: function _EvaluateVisitor_visitEachRule_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure0: function _EvaluateVisitor_visitEachRule_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure1: function _EvaluateVisitor_visitEachRule_closure1(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.list = t1;\n      _.setVariables = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitEachRule__closure: function _EvaluateVisitor_visitEachRule__closure(t0, t1, t2) {\n      this.$this = t0;\n      this.setVariables = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitEachRule___closure: function _EvaluateVisitor_visitEachRule___closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitExtendRule_closure: function _EvaluateVisitor_visitExtendRule_closure(t0, t1) {\n      this.$this = t0;\n      this.targetText = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure: function _EvaluateVisitor_visitAtRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule__closure: function _EvaluateVisitor_visitAtRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure0: function _EvaluateVisitor_visitAtRule_closure0() {\n    },\n    _EvaluateVisitor_visitForRule_closure: function _EvaluateVisitor_visitForRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure0: function _EvaluateVisitor_visitForRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure1: function _EvaluateVisitor_visitForRule_closure1(t0, t1) {\n      this.fromNumber = t0;\n      this.toNumber = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure2: function _EvaluateVisitor_visitForRule_closure2(t0) {\n      this.toNumber = t0;\n    },\n    _EvaluateVisitor_visitForRule_closure3: function _EvaluateVisitor_visitForRule_closure3(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.node = t2;\n      _.from = t3;\n      _.direction = t4;\n    },\n    _EvaluateVisitor_visitForRule__closure: function _EvaluateVisitor_visitForRule__closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitForwardRule_closure: function _EvaluateVisitor_visitForwardRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForwardRule_closure0: function _EvaluateVisitor_visitForwardRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__assertConfigurationIsEmpty_closure: function _EvaluateVisitor__assertConfigurationIsEmpty_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.only = t1;\n      this.nameInError = t2;\n    },\n    _EvaluateVisitor_visitIfRule_closure: function _EvaluateVisitor_visitIfRule_closure(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitIfRule__closure: function _EvaluateVisitor_visitIfRule__closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__visitDynamicImport_closure: function _EvaluateVisitor__visitDynamicImport_closure(t0, t1) {\n      this.$this = t0;\n      this.$import = t1;\n    },\n    _EvaluateVisitor__visitDynamicImport__closure: function _EvaluateVisitor__visitDynamicImport__closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.environment = t4;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure: function _EvaluateVisitor_visitIncludeRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure0: function _EvaluateVisitor_visitIncludeRule_closure0(t0) {\n      this.node = t0;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure1: function _EvaluateVisitor_visitIncludeRule_closure1(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.contentCallable = t1;\n      _.mixin = t2;\n      _.nodeWithSpan = t3;\n    },\n    _EvaluateVisitor_visitIncludeRule__closure: function _EvaluateVisitor_visitIncludeRule__closure(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule___closure: function _EvaluateVisitor_visitIncludeRule___closure(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule____closure: function _EvaluateVisitor_visitIncludeRule____closure(t0, t1) {\n      this.$this = t0;\n      this.statement = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure: function _EvaluateVisitor_visitMediaRule_closure(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.mergedQueries = t1;\n      _.queries = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitMediaRule__closure: function _EvaluateVisitor_visitMediaRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule___closure: function _EvaluateVisitor_visitMediaRule___closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure0: function _EvaluateVisitor_visitMediaRule_closure0(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor__visitMediaQueries_closure: function _EvaluateVisitor__visitMediaQueries_closure(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure: function _EvaluateVisitor_visitStyleRule_closure(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure0: function _EvaluateVisitor_visitStyleRule_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure1: function _EvaluateVisitor_visitStyleRule_closure1() {\n    },\n    _EvaluateVisitor_visitStyleRule_closure2: function _EvaluateVisitor_visitStyleRule_closure2(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure3: function _EvaluateVisitor_visitStyleRule_closure3(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure4: function _EvaluateVisitor_visitStyleRule_closure4(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitStyleRule__closure: function _EvaluateVisitor_visitStyleRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure5: function _EvaluateVisitor_visitStyleRule_closure5() {\n    },\n    _EvaluateVisitor_visitSupportsRule_closure: function _EvaluateVisitor_visitSupportsRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule__closure: function _EvaluateVisitor_visitSupportsRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule_closure0: function _EvaluateVisitor_visitSupportsRule_closure0() {\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure: function _EvaluateVisitor_visitVariableDeclaration_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.override = t2;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure0: function _EvaluateVisitor_visitVariableDeclaration_closure0(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure1: function _EvaluateVisitor_visitVariableDeclaration_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.value = t2;\n    },\n    _EvaluateVisitor_visitUseRule_closure: function _EvaluateVisitor_visitUseRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWarnRule_closure: function _EvaluateVisitor_visitWarnRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule_closure: function _EvaluateVisitor_visitWhileRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule__closure: function _EvaluateVisitor_visitWhileRule__closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitBinaryOperationExpression_closure: function _EvaluateVisitor_visitBinaryOperationExpression_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableExpression_closure: function _EvaluateVisitor_visitVariableExpression_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitListExpression_closure: function _EvaluateVisitor_visitListExpression_closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure: function _EvaluateVisitor_visitFunctionExpression_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.plainName = t2;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure0: function _EvaluateVisitor_visitFunctionExpression_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__runUserDefinedCallable_closure: function _EvaluateVisitor__runUserDefinedCallable_closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.callable = t1;\n      _.evaluated = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable__closure: function _EvaluateVisitor__runUserDefinedCallable__closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable___closure: function _EvaluateVisitor__runUserDefinedCallable___closure(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable____closure: function _EvaluateVisitor__runUserDefinedCallable____closure() {\n    },\n    _EvaluateVisitor__runFunctionCallable_closure: function _EvaluateVisitor__runFunctionCallable_closure(t0, t1) {\n      this.$this = t0;\n      this.callable = t1;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure: function _EvaluateVisitor__runBuiltInCallable_closure(t0, t1, t2) {\n      this.overload = t0;\n      this.evaluated = t1;\n      this.namedSet = t2;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure0: function _EvaluateVisitor__runBuiltInCallable_closure0() {\n    },\n    _EvaluateVisitor__evaluateArguments_closure: function _EvaluateVisitor__evaluateArguments_closure(t0, t1, t2) {\n      this.named = t0;\n      this.namedNodes = t1;\n      this.restNodeForSpan = t2;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure: function _EvaluateVisitor__evaluateMacroArguments_closure() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure0: function _EvaluateVisitor__evaluateMacroArguments_closure0() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure1: function _EvaluateVisitor__evaluateMacroArguments_closure1(t0) {\n      this.named = t0;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure2: function _EvaluateVisitor__evaluateMacroArguments_closure2() {\n    },\n    _EvaluateVisitor__addRestMap_closure: function _EvaluateVisitor__addRestMap_closure(t0) {\n      this.T = t0;\n    },\n    _EvaluateVisitor__addRestMap_closure0: function _EvaluateVisitor__addRestMap_closure0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.values = t2;\n      _.map = t3;\n      _.nodeWithSpan = t4;\n    },\n    _EvaluateVisitor__verifyArguments_closure: function _EvaluateVisitor__verifyArguments_closure(t0, t1, t2) {\n      this.$arguments = t0;\n      this.positional = t1;\n      this.named = t2;\n    },\n    _EvaluateVisitor_visitStringExpression_closure: function _EvaluateVisitor_visitStringExpression_closure(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure: function _EvaluateVisitor_visitCssAtRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure0: function _EvaluateVisitor_visitCssAtRule_closure0() {\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure: function _EvaluateVisitor_visitCssKeyframeBlock_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure0: function _EvaluateVisitor_visitCssKeyframeBlock_closure0() {\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure: function _EvaluateVisitor_visitCssMediaRule_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.mergedQueries = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssMediaRule__closure: function _EvaluateVisitor_visitCssMediaRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule___closure: function _EvaluateVisitor_visitCssMediaRule___closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure0: function _EvaluateVisitor_visitCssMediaRule_closure0(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure: function _EvaluateVisitor_visitCssStyleRule_closure(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssStyleRule__closure: function _EvaluateVisitor_visitCssStyleRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure0: function _EvaluateVisitor_visitCssStyleRule_closure0() {\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure: function _EvaluateVisitor_visitCssSupportsRule_closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule__closure: function _EvaluateVisitor_visitCssSupportsRule__closure(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure0: function _EvaluateVisitor_visitCssSupportsRule_closure0() {\n    },\n    _EvaluateVisitor__performInterpolation_closure: function _EvaluateVisitor__performInterpolation_closure(t0, t1) {\n      this.$this = t0;\n      this.warnForColor = t1;\n    },\n    _EvaluateVisitor__serialize_closure: function _EvaluateVisitor__serialize_closure(t0, t1) {\n      this.value = t0;\n      this.quote = t1;\n    },\n    _EvaluateVisitor__stackTrace_closure: function _EvaluateVisitor__stackTrace_closure(t0) {\n      this.$this = t0;\n    },\n    _ImportedCssVisitor: function _ImportedCssVisitor(t0) {\n      this._visitor = t0;\n    },\n    _ImportedCssVisitor_visitCssAtRule_closure: function _ImportedCssVisitor_visitCssAtRule_closure() {\n    },\n    _ImportedCssVisitor_visitCssMediaRule_closure: function _ImportedCssVisitor_visitCssMediaRule_closure(t0) {\n      this.hasBeenMerged = t0;\n    },\n    _ImportedCssVisitor_visitCssStyleRule_closure: function _ImportedCssVisitor_visitCssStyleRule_closure() {\n    },\n    _ImportedCssVisitor_visitCssSupportsRule_closure: function _ImportedCssVisitor_visitCssSupportsRule_closure() {\n    },\n    _ArgumentResults: function _ArgumentResults(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.positionalNodes = t1;\n      _.named = t2;\n      _.namedNodes = t3;\n      _.separator = t4;\n    },\n    _collectToList: function(element, soFar, $T) {\n      if (soFar == null)\n        soFar = H.setRuntimeTypeInfo([], $T._eval$1(\"JSArray<0*>\"));\n      J.add$1$ax(soFar, element);\n      return soFar;\n    },\n    _debounceAggregate: function(duration, collect, leading, trailing, $T, $R) {\n      var t2, t1 = {};\n      t1.soFar = t1.timer = null;\n      t1.emittedLatestAsLeading = t1.shouldClose = false;\n      t2 = $R._eval$1(\"0*\");\n      return new L._StreamTransformer(new R._debounceAggregate_closure(t1, collect, false, duration, true, $T, $R), new R._debounceAggregate_closure0(t1, true, $R), H.instantiate1(L.from_handlers__StreamTransformer__defaultHandleError$closure(), t2), $T._eval$1(\"@<0*>\")._bind$1(t2)._eval$1(\"_StreamTransformer<1,2>\"));\n    },\n    _debounceAggregate_closure: function _debounceAggregate_closure(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._box_0 = t0;\n      _.collect = t1;\n      _.leading = t2;\n      _.duration = t3;\n      _.trailing = t4;\n      _.T = t5;\n      _.R = t6;\n    },\n    _debounceAggregate__closure: function _debounceAggregate__closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.trailing = t1;\n      this.sink = t2;\n    },\n    _debounceAggregate_closure0: function _debounceAggregate_closure0(t0, t1, t2) {\n      this._box_0 = t0;\n      this.trailing = t1;\n      this.R = t2;\n    },\n    ModifiableCssComment0: function ModifiableCssComment0(t0, t1) {\n      var _ = this;\n      _.text = t0;\n      _.span = t1;\n      _._node2$_indexInParent = _._node2$_parent = null;\n      _.isGroupEnd = false;\n    },\n    _EvaluateVisitor$1: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t6,\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_Uri,\n        t3 = type$.legacy_Module_legacy_Callable_2,\n        t4 = type$.legacy_AstNode_2,\n        t5 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode_2);\n      if (nodeImporter == null)\n        t6 = importCache == null ? R.ImportCache$none(logger) : importCache;\n      else\n        t6 = null;\n      t1 = new R._EvaluateVisitor1(t6, nodeImporter, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Callable_2), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), C.C_StderrLogger, sourceMap, O.Environment$0(sourceMap), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t4), t5, C.Configuration_Map_empty_null_true0);\n      t1._EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap1(functions, importCache, logger, nodeImporter, sourceMap);\n      return t1;\n    },\n    _EvaluateVisitor1: function _EvaluateVisitor1(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {\n      var _ = this;\n      _._evaluate0$_importCache = t0;\n      _._nodeImporter = t1;\n      _._evaluate0$_builtInFunctions = t2;\n      _._evaluate0$_builtInModules = t3;\n      _._evaluate0$_modules = t4;\n      _._evaluate0$_moduleNodes = t5;\n      _._evaluate0$_logger = t6;\n      _._evaluate0$_sourceMap = t7;\n      _._evaluate0$_environment = t8;\n      _._evaluate0$_declarationName = _._evaluate0$_parent = _._evaluate0$_mediaQueries = _._evaluate0$_styleRule = null;\n      _._evaluate0$_member = \"root stylesheet\";\n      _._evaluate0$_importSpan = _._evaluate0$_callableNode = null;\n      _._evaluate0$_inKeyframes = _._evaluate0$_atRootExcludingStyleRule = _._evaluate0$_inUnknownAtRule = _._evaluate0$_inFunction = false;\n      _._includedFiles = t9;\n      _._evaluate0$_activeModules = t10;\n      _._evaluate0$_stack = t11;\n      _._evaluate0$_extender = _._evaluate0$_outOfOrderImports = _._evaluate0$_endOfImports = _._evaluate0$_root = _._evaluate0$_stylesheet = _._evaluate0$_importer = null;\n      _._evaluate0$_configuration = t12;\n    },\n    _EvaluateVisitor_closure19: function _EvaluateVisitor_closure19(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure20: function _EvaluateVisitor_closure20(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure21: function _EvaluateVisitor_closure21(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure22: function _EvaluateVisitor_closure22(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure23: function _EvaluateVisitor_closure23(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure24: function _EvaluateVisitor_closure24(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure25: function _EvaluateVisitor_closure25(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure26: function _EvaluateVisitor_closure26(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure7: function _EvaluateVisitor__closure7(t0, t1, t2) {\n      this.$this = t0;\n      this.name = t1;\n      this.module = t2;\n    },\n    _EvaluateVisitor_closure27: function _EvaluateVisitor_closure27(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_closure28: function _EvaluateVisitor_closure28(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__closure5: function _EvaluateVisitor__closure5(t0, t1) {\n      this.values = t0;\n      this.span = t1;\n    },\n    _EvaluateVisitor__closure6: function _EvaluateVisitor__closure6(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_run_closure1: function _EvaluateVisitor_run_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.importer = t2;\n    },\n    _EvaluateVisitor__withWarnCallback_closure1: function _EvaluateVisitor__withWarnCallback_closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__loadModule_closure3: function _EvaluateVisitor__loadModule_closure3(t0, t1) {\n      this.callback = t0;\n      this.builtInModule = t1;\n    },\n    _EvaluateVisitor__loadModule_closure4: function _EvaluateVisitor__loadModule_closure4(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _.$this = t0;\n      _.url = t1;\n      _.nodeWithSpan = t2;\n      _.baseUrl = t3;\n      _.namesInErrors = t4;\n      _.configuration = t5;\n      _.callback = t6;\n    },\n    _EvaluateVisitor__execute_closure1: function _EvaluateVisitor__execute_closure1(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.extender = t4;\n      _.configuration = t5;\n    },\n    _EvaluateVisitor__combineCss_closure5: function _EvaluateVisitor__combineCss_closure5() {\n    },\n    _EvaluateVisitor__combineCss_closure6: function _EvaluateVisitor__combineCss_closure6(t0) {\n      this.selectors = t0;\n    },\n    _EvaluateVisitor__combineCss_closure7: function _EvaluateVisitor__combineCss_closure7() {\n    },\n    _EvaluateVisitor__extendModules_closure3: function _EvaluateVisitor__extendModules_closure3(t0) {\n      this.originalSelectors = t0;\n    },\n    _EvaluateVisitor__extendModules_closure4: function _EvaluateVisitor__extendModules_closure4() {\n    },\n    _EvaluateVisitor__topologicalModules_visitModule1: function _EvaluateVisitor__topologicalModules_visitModule1(t0, t1) {\n      this.seen = t0;\n      this.sorted = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure5: function _EvaluateVisitor_visitAtRootRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure6: function _EvaluateVisitor_visitAtRootRule_closure6(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRootRule_closure7: function _EvaluateVisitor_visitAtRootRule_closure7(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure11: function _EvaluateVisitor__scopeForAtRoot_closure11(t0, t1, t2) {\n      this.$this = t0;\n      this.newParent = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure12: function _EvaluateVisitor__scopeForAtRoot_closure12(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure13: function _EvaluateVisitor__scopeForAtRoot_closure13(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot__closure1: function _EvaluateVisitor__scopeForAtRoot__closure1(t0, t1) {\n      this.innerScope = t0;\n      this.callback = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure14: function _EvaluateVisitor__scopeForAtRoot_closure14(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure15: function _EvaluateVisitor__scopeForAtRoot_closure15() {\n    },\n    _EvaluateVisitor__scopeForAtRoot_closure16: function _EvaluateVisitor__scopeForAtRoot_closure16(t0, t1) {\n      this.$this = t0;\n      this.innerScope = t1;\n    },\n    _EvaluateVisitor_visitContentRule_closure1: function _EvaluateVisitor_visitContentRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.content = t1;\n    },\n    _EvaluateVisitor_visitDeclaration_closure1: function _EvaluateVisitor_visitDeclaration_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitEachRule_closure5: function _EvaluateVisitor_visitEachRule_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure6: function _EvaluateVisitor_visitEachRule_closure6(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitEachRule_closure7: function _EvaluateVisitor_visitEachRule_closure7(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.list = t1;\n      _.setVariables = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitEachRule__closure1: function _EvaluateVisitor_visitEachRule__closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.setVariables = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitEachRule___closure1: function _EvaluateVisitor_visitEachRule___closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitExtendRule_closure1: function _EvaluateVisitor_visitExtendRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.targetText = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure3: function _EvaluateVisitor_visitAtRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule__closure1: function _EvaluateVisitor_visitAtRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitAtRule_closure4: function _EvaluateVisitor_visitAtRule_closure4() {\n    },\n    _EvaluateVisitor_visitForRule_closure9: function _EvaluateVisitor_visitForRule_closure9(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure10: function _EvaluateVisitor_visitForRule_closure10(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure11: function _EvaluateVisitor_visitForRule_closure11(t0, t1) {\n      this.fromNumber = t0;\n      this.toNumber = t1;\n    },\n    _EvaluateVisitor_visitForRule_closure12: function _EvaluateVisitor_visitForRule_closure12(t0) {\n      this.toNumber = t0;\n    },\n    _EvaluateVisitor_visitForRule_closure13: function _EvaluateVisitor_visitForRule_closure13(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.node = t2;\n      _.from = t3;\n      _.direction = t4;\n    },\n    _EvaluateVisitor_visitForRule__closure1: function _EvaluateVisitor_visitForRule__closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitForwardRule_closure3: function _EvaluateVisitor_visitForwardRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitForwardRule_closure4: function _EvaluateVisitor_visitForwardRule_closure4(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor__assertConfigurationIsEmpty_closure1: function _EvaluateVisitor__assertConfigurationIsEmpty_closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.only = t1;\n      this.nameInError = t2;\n    },\n    _EvaluateVisitor_visitIfRule_closure1: function _EvaluateVisitor_visitIfRule_closure1(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitIfRule__closure1: function _EvaluateVisitor_visitIfRule__closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor__visitDynamicImport_closure1: function _EvaluateVisitor__visitDynamicImport_closure1(t0, t1) {\n      this.$this = t0;\n      this.$import = t1;\n    },\n    _EvaluateVisitor__visitDynamicImport__closure1: function _EvaluateVisitor__visitDynamicImport__closure1(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.importer = t2;\n      _.stylesheet = t3;\n      _.environment = t4;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure5: function _EvaluateVisitor_visitIncludeRule_closure5(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure6: function _EvaluateVisitor_visitIncludeRule_closure6(t0) {\n      this.node = t0;\n    },\n    _EvaluateVisitor_visitIncludeRule_closure7: function _EvaluateVisitor_visitIncludeRule_closure7(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.contentCallable = t1;\n      _.mixin = t2;\n      _.nodeWithSpan = t3;\n    },\n    _EvaluateVisitor_visitIncludeRule__closure1: function _EvaluateVisitor_visitIncludeRule__closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule___closure1: function _EvaluateVisitor_visitIncludeRule___closure1(t0, t1, t2) {\n      this.$this = t0;\n      this.mixin = t1;\n      this.nodeWithSpan = t2;\n    },\n    _EvaluateVisitor_visitIncludeRule____closure1: function _EvaluateVisitor_visitIncludeRule____closure1(t0, t1) {\n      this.$this = t0;\n      this.statement = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure3: function _EvaluateVisitor_visitMediaRule_closure3(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.mergedQueries = t1;\n      _.queries = t2;\n      _.node = t3;\n    },\n    _EvaluateVisitor_visitMediaRule__closure1: function _EvaluateVisitor_visitMediaRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule___closure1: function _EvaluateVisitor_visitMediaRule___closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitMediaRule_closure4: function _EvaluateVisitor_visitMediaRule_closure4(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor__visitMediaQueries_closure1: function _EvaluateVisitor__visitMediaQueries_closure1(t0, t1) {\n      this.$this = t0;\n      this.resolved = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure13: function _EvaluateVisitor_visitStyleRule_closure13(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure14: function _EvaluateVisitor_visitStyleRule_closure14(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure15: function _EvaluateVisitor_visitStyleRule_closure15() {\n    },\n    _EvaluateVisitor_visitStyleRule_closure16: function _EvaluateVisitor_visitStyleRule_closure16(t0, t1) {\n      this.$this = t0;\n      this.selectorText = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure17: function _EvaluateVisitor_visitStyleRule_closure17(t0, t1) {\n      this._box_0 = t0;\n      this.$this = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure18: function _EvaluateVisitor_visitStyleRule_closure18(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitStyleRule__closure1: function _EvaluateVisitor_visitStyleRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitStyleRule_closure19: function _EvaluateVisitor_visitStyleRule_closure19() {\n    },\n    _EvaluateVisitor_visitSupportsRule_closure3: function _EvaluateVisitor_visitSupportsRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule__closure1: function _EvaluateVisitor_visitSupportsRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitSupportsRule_closure4: function _EvaluateVisitor_visitSupportsRule_closure4() {\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure5: function _EvaluateVisitor_visitVariableDeclaration_closure5(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.override = t2;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure6: function _EvaluateVisitor_visitVariableDeclaration_closure6(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableDeclaration_closure7: function _EvaluateVisitor_visitVariableDeclaration_closure7(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.value = t2;\n    },\n    _EvaluateVisitor_visitUseRule_closure1: function _EvaluateVisitor_visitUseRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWarnRule_closure1: function _EvaluateVisitor_visitWarnRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule_closure1: function _EvaluateVisitor_visitWhileRule_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitWhileRule__closure1: function _EvaluateVisitor_visitWhileRule__closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitBinaryOperationExpression_closure1: function _EvaluateVisitor_visitBinaryOperationExpression_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitVariableExpression_closure1: function _EvaluateVisitor_visitVariableExpression_closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitListExpression_closure1: function _EvaluateVisitor_visitListExpression_closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure3: function _EvaluateVisitor_visitFunctionExpression_closure3(t0, t1, t2) {\n      this.$this = t0;\n      this.node = t1;\n      this.plainName = t2;\n    },\n    _EvaluateVisitor_visitFunctionExpression_closure4: function _EvaluateVisitor_visitFunctionExpression_closure4(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor__runUserDefinedCallable_closure1: function _EvaluateVisitor__runUserDefinedCallable_closure1(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.callable = t1;\n      _.evaluated = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable__closure1: function _EvaluateVisitor__runUserDefinedCallable__closure1(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable___closure1: function _EvaluateVisitor__runUserDefinedCallable___closure1(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.$this = t0;\n      _.evaluated = t1;\n      _.callable = t2;\n      _.nodeWithSpan = t3;\n      _.run = t4;\n    },\n    _EvaluateVisitor__runUserDefinedCallable____closure1: function _EvaluateVisitor__runUserDefinedCallable____closure1() {\n    },\n    _EvaluateVisitor__runFunctionCallable_closure1: function _EvaluateVisitor__runFunctionCallable_closure1(t0, t1) {\n      this.$this = t0;\n      this.callable = t1;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure3: function _EvaluateVisitor__runBuiltInCallable_closure3(t0, t1, t2) {\n      this.overload = t0;\n      this.evaluated = t1;\n      this.namedSet = t2;\n    },\n    _EvaluateVisitor__runBuiltInCallable_closure4: function _EvaluateVisitor__runBuiltInCallable_closure4() {\n    },\n    _EvaluateVisitor__evaluateArguments_closure1: function _EvaluateVisitor__evaluateArguments_closure1(t0, t1, t2) {\n      this.named = t0;\n      this.namedNodes = t1;\n      this.restNodeForSpan = t2;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure7: function _EvaluateVisitor__evaluateMacroArguments_closure7() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure8: function _EvaluateVisitor__evaluateMacroArguments_closure8() {\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure9: function _EvaluateVisitor__evaluateMacroArguments_closure9(t0) {\n      this.named = t0;\n    },\n    _EvaluateVisitor__evaluateMacroArguments_closure10: function _EvaluateVisitor__evaluateMacroArguments_closure10() {\n    },\n    _EvaluateVisitor__addRestMap_closure3: function _EvaluateVisitor__addRestMap_closure3(t0) {\n      this.T = t0;\n    },\n    _EvaluateVisitor__addRestMap_closure4: function _EvaluateVisitor__addRestMap_closure4(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _._box_0 = t0;\n      _.$this = t1;\n      _.values = t2;\n      _.map = t3;\n      _.nodeWithSpan = t4;\n    },\n    _EvaluateVisitor__verifyArguments_closure1: function _EvaluateVisitor__verifyArguments_closure1(t0, t1, t2) {\n      this.$arguments = t0;\n      this.positional = t1;\n      this.named = t2;\n    },\n    _EvaluateVisitor_visitStringExpression_closure1: function _EvaluateVisitor_visitStringExpression_closure1(t0) {\n      this.$this = t0;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure3: function _EvaluateVisitor_visitCssAtRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssAtRule_closure4: function _EvaluateVisitor_visitCssAtRule_closure4() {\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure3: function _EvaluateVisitor_visitCssKeyframeBlock_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssKeyframeBlock_closure4: function _EvaluateVisitor_visitCssKeyframeBlock_closure4() {\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure3: function _EvaluateVisitor_visitCssMediaRule_closure3(t0, t1, t2) {\n      this.$this = t0;\n      this.mergedQueries = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssMediaRule__closure1: function _EvaluateVisitor_visitCssMediaRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule___closure1: function _EvaluateVisitor_visitCssMediaRule___closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssMediaRule_closure4: function _EvaluateVisitor_visitCssMediaRule_closure4(t0) {\n      this.mergedQueries = t0;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure3: function _EvaluateVisitor_visitCssStyleRule_closure3(t0, t1, t2) {\n      this.$this = t0;\n      this.rule = t1;\n      this.node = t2;\n    },\n    _EvaluateVisitor_visitCssStyleRule__closure1: function _EvaluateVisitor_visitCssStyleRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssStyleRule_closure4: function _EvaluateVisitor_visitCssStyleRule_closure4() {\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure3: function _EvaluateVisitor_visitCssSupportsRule_closure3(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule__closure1: function _EvaluateVisitor_visitCssSupportsRule__closure1(t0, t1) {\n      this.$this = t0;\n      this.node = t1;\n    },\n    _EvaluateVisitor_visitCssSupportsRule_closure4: function _EvaluateVisitor_visitCssSupportsRule_closure4() {\n    },\n    _EvaluateVisitor__performInterpolation_closure1: function _EvaluateVisitor__performInterpolation_closure1(t0, t1) {\n      this.$this = t0;\n      this.warnForColor = t1;\n    },\n    _EvaluateVisitor__serialize_closure1: function _EvaluateVisitor__serialize_closure1(t0, t1) {\n      this.value = t0;\n      this.quote = t1;\n    },\n    _EvaluateVisitor__stackTrace_closure1: function _EvaluateVisitor__stackTrace_closure1(t0) {\n      this.$this = t0;\n    },\n    _ImportedCssVisitor1: function _ImportedCssVisitor1(t0) {\n      this._evaluate0$_visitor = t0;\n    },\n    _ImportedCssVisitor_visitCssAtRule_closure1: function _ImportedCssVisitor_visitCssAtRule_closure1() {\n    },\n    _ImportedCssVisitor_visitCssMediaRule_closure1: function _ImportedCssVisitor_visitCssMediaRule_closure1(t0) {\n      this.hasBeenMerged = t0;\n    },\n    _ImportedCssVisitor_visitCssStyleRule_closure1: function _ImportedCssVisitor_visitCssStyleRule_closure1() {\n    },\n    _ImportedCssVisitor_visitCssSupportsRule_closure1: function _ImportedCssVisitor_visitCssSupportsRule_closure1() {\n    },\n    _ArgumentResults1: function _ArgumentResults1(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.positional = t0;\n      _.positionalNodes = t1;\n      _.named = t2;\n      _.namedNodes = t3;\n      _.separator = t4;\n    },\n    ForwardedModuleView_ifNecessary0: function(inner, rule, $T) {\n      var t1;\n      if (rule.prefix == null)\n        if (rule.shownMixinsAndFunctions == null)\n          if (rule.shownVariables == null) {\n            t1 = rule.hiddenMixinsAndFunctions;\n            if (t1 != null) {\n              t1 = t1._base;\n              t1 = t1.get$isEmpty(t1);\n            } else\n              t1 = true;\n            if (t1) {\n              t1 = rule.hiddenVariables;\n              if (t1 != null) {\n                t1 = t1._base;\n                t1 = t1.get$isEmpty(t1);\n              } else\n                t1 = true;\n            } else\n              t1 = false;\n          } else\n            t1 = false;\n        else\n          t1 = false;\n      else\n        t1 = false;\n      if (t1)\n        return inner;\n      else\n        return R.ForwardedModuleView$0(inner, rule, $T._eval$1(\"0*\"));\n    },\n    ForwardedModuleView$0: function(_inner, _rule, $T) {\n      var t5, t6,\n        t1 = _rule.prefix,\n        t2 = _rule.shownVariables,\n        t3 = _rule.hiddenVariables,\n        t4 = R.ForwardedModuleView__forwardedMap0(_inner.get$variables(), t1, t2, t3, type$.legacy_Value_2);\n      t2 = _inner.get$variableNodes() == null ? null : R.ForwardedModuleView__forwardedMap0(_inner.get$variableNodes(), t1, t2, t3, type$.legacy_AstNode_2);\n      t3 = _rule.shownMixinsAndFunctions;\n      t5 = _rule.hiddenMixinsAndFunctions;\n      t6 = $T._eval$1(\"0*\");\n      return new R.ForwardedModuleView0(_inner, _rule, t4, t2, R.ForwardedModuleView__forwardedMap0(_inner.get$functions(_inner), t1, t3, t5, t6), R.ForwardedModuleView__forwardedMap0(_inner.get$mixins(), t1, t3, t5, t6), $T._eval$1(\"ForwardedModuleView0<0>\"));\n    },\n    ForwardedModuleView__forwardedMap0: function(map, prefix, safelist, blocklist, $V) {\n      var t2,\n        t1 = prefix == null;\n      if (t1)\n        if (safelist == null)\n          if (blocklist != null) {\n            t2 = blocklist._base;\n            t2 = t2.get$isEmpty(t2);\n          } else\n            t2 = true;\n        else\n          t2 = false;\n      else\n        t2 = false;\n      if (t2)\n        return map;\n      if (!t1)\n        map = new F.PrefixedMapView0(map, prefix, $V._eval$1(\"PrefixedMapView0<0*>\"));\n      if (safelist != null)\n        map = new K.LimitedMapView0(map, safelist._base.intersection$1(new M.MapKeySet(map, type$.MapKeySet_legacy_Object)), type$.$env_1_1_legacy_String._bind$1($V._eval$1(\"0*\"))._eval$1(\"LimitedMapView0<1,2>\"));\n      else {\n        if (blocklist != null) {\n          t1 = blocklist._base;\n          t1 = t1.get$isNotEmpty(t1);\n        } else\n          t1 = false;\n        if (t1)\n          map = K.LimitedMapView$blocklist0(map, blocklist, type$.legacy_String, $V._eval$1(\"0*\"));\n      }\n      return map;\n    },\n    ForwardedModuleView0: function ForwardedModuleView0(t0, t1, t2, t3, t4, t5, t6) {\n      var _ = this;\n      _._forwarded_view0$_inner = t0;\n      _._forwarded_view0$_rule = t1;\n      _.variables = t2;\n      _.variableNodes = t3;\n      _.functions = t4;\n      _.mixins = t5;\n      _.$ti = t6;\n    },\n    ImportCache$none: function(logger) {\n      var t1 = type$.legacy_Uri;\n      return new R.ImportCache0(C.C_StderrLogger, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Stylesheet), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ImporterResult));\n    },\n    ImportCache0: function ImportCache0(t0, t1, t2, t3) {\n      var _ = this;\n      _._import_cache$_logger = t0;\n      _._import_cache$_canonicalizeCache = t1;\n      _._import_cache$_importCache = t2;\n      _._import_cache$_resultsCache = t3;\n    },\n    ImportCache_canonicalize_closure0: function ImportCache_canonicalize_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.url = t1;\n      this.forImport = t2;\n    },\n    ImportCache__canonicalize_closure0: function ImportCache__canonicalize_closure0(t0, t1) {\n      this.importer = t0;\n      this.url = t1;\n    },\n    ImportCache_importCanonical_closure0: function ImportCache_importCanonical_closure0(t0, t1, t2, t3) {\n      var _ = this;\n      _.$this = t0;\n      _.importer = t1;\n      _.canonicalUrl = t2;\n      _.originalUrl = t3;\n    },\n    ImportCache_humanize_closure2: function ImportCache_humanize_closure2(t0) {\n      this.canonicalUrl = t0;\n    },\n    ImportCache_humanize_closure3: function ImportCache_humanize_closure3() {\n    },\n    ImportCache_humanize_closure4: function ImportCache_humanize_closure4() {\n    },\n    RenderOptions: function RenderOptions() {\n    },\n    _translateReturnValue: function(val) {\n      if (type$.legacy_Future_dynamic._is(val))\n        return M.futureToPromise(val);\n      else\n        return val;\n    },\n    main0: function() {\n      new Uint8Array(0);\n      J.set$render$x(self.exports, P.allowInterop(B.node___render$closure()));\n      J.set$renderSync$x(self.exports, P.allowInterop(B.node___renderSync$closure()));\n      J.set$info$x(self.exports, \"dart-sass\\t1.30.0\\t(Sass Compiler)\\t[Dart]\\ndart2js\\t2.10.4\\t(Dart Compiler)\\t[Dart]\");\n      J.set$types$x(self.exports, {Boolean: $.$get$booleanConstructor(), Color: $.$get$colorConstructor(), List: $.$get$listConstructor(), Map: $.$get$mapConstructor(), Null: $.$get$nullConstructor(), Number: $.$get$numberConstructor(), String: $.$get$stringConstructor(), Error: self.Error});\n      J.set$NULL$x(self.exports, C.C_SassNull);\n      J.set$TRUE$x(self.exports, C.SassBoolean_true);\n      J.set$FALSE$x(self.exports, C.SassBoolean_false);\n      J.set$cli_pkg_main_0_$x(self.exports, R._wrapMain(U.sass__main$closure()));\n    },\n    _wrapMain: function(main) {\n      if (type$.legacy_legacy_Object_Function._is(main))\n        return P.allowInterop(new R._wrapMain_closure(main));\n      else\n        return P.allowInterop(new R._wrapMain_closure0(main));\n    },\n    _Exports: function _Exports() {\n    },\n    _wrapMain_closure: function _wrapMain_closure(t0) {\n      this.main = t0;\n    },\n    _wrapMain_closure0: function _wrapMain_closure0(t0) {\n      this.main = t0;\n    },\n    UnprefixedMapView0: function UnprefixedMapView0(t0, t1, t2) {\n      this._unprefixed_map_view0$_map = t0;\n      this._unprefixed_map_view0$_prefix = t1;\n      this.$ti = t2;\n    },\n    _UnprefixedKeys0: function _UnprefixedKeys0(t0) {\n      this._unprefixed_map_view0$_view = t0;\n    },\n    _UnprefixedKeys_iterator_closure1: function _UnprefixedKeys_iterator_closure1(t0) {\n      this.$this = t0;\n    },\n    _UnprefixedKeys_iterator_closure2: function _UnprefixedKeys_iterator_closure2(t0) {\n      this.$this = t0;\n    }\n  },\n  A = {MapExpression: function MapExpression(t0, t1) {\n      this.pairs = t0;\n      this.span = t1;\n    }, MapExpression_toString_closure: function MapExpression_toString_closure() {\n    }, IncludeRule: function IncludeRule(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.content = t3;\n      _.span = t4;\n    }, Configuration: function Configuration(t0, t1, t2) {\n      this._values = t0;\n      this.nodeWithSpan = t1;\n      this.isImplicit = t2;\n    },\n    watch: function(options, graph) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, t2, t3, t4, t5, t6, dirWatcher, watcher, destination, t1;\n      var $async$watch = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n              for (options._ensureSources$0(), t2 = options._sourceDirectoriesToDestinations, t2 = J.get$iterator$ax(t2.get$keys(t2)); t2.moveNext$0();)\n                t1.push(t2.get$current(t2));\n              for (options._ensureSources$0(), t2 = options._sourcesToDestinations, t3 = type$.legacy_String, t2 = J.map$1$1$ax(t2.get$keys(t2), D.path__dirname$closure(), t3), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n                t1.push(t2.get$current(t2));\n              for (t2 = options._options, t4 = J.get$iterator$ax(type$.legacy_List_legacy_String._as(t2.$index(0, \"load-path\"))); t4.moveNext$0();)\n                t1.push(t4.get$current(t4));\n              t4 = H._asBoolS(t2.$index(0, \"poll\"));\n              t5 = type$.legacy_Stream_legacy_WatchEvent;\n              t6 = new L.StreamGroup(C._StreamGroupState_dormant, P.LinkedHashMap_LinkedHashMap$_empty(t5, type$.legacy_StreamSubscription_legacy_WatchEvent), type$.StreamGroup_legacy_WatchEvent);\n              t6._controller = P.StreamController_StreamController(t6.get$_onCancel(), t6.get$_onListen(), t6.get$_onPause(), t6.get$_onResume(), true, type$.legacy_WatchEvent);\n              dirWatcher = new U.MultiDirWatcher(P.LinkedHashMap_LinkedHashMap$_empty(t3, t5), t6, t4);\n              $async$goto = 3;\n              return P._asyncAwait(P.Future_wait(new H.MappedListIterable(t1, new A.watch_closure(dirWatcher), type$.MappedListIterable_of_legacy_String_and_legacy_Future_void), type$.void), $async$watch);\n            case 3:\n              // returning from await.\n              watcher = new A._Watcher(options, graph);\n              options._ensureSources$0(), t1 = options._sourcesToDestinations, t1 = J.get$iterator$ax(t1.get$keys(t1));\n            case 4:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              t3 = t1.get$current(t1);\n              options._ensureSources$0();\n              destination = options._sourcesToDestinations.$index(0, t3);\n              t4 = $.$get$context();\n              graph.addCanonical$4$recanonicalize(new F.FilesystemImporter(t4.absolute$7(\".\", null, null, null, null, null, null)), t4.toUri$1(t4.canonicalize$1(t3)), t4.toUri$1(t3), false);\n              $async$goto = 6;\n              return P._asyncAwait(watcher.compile$3$ifModified(t3, destination, true), $async$watch);\n            case 6:\n              // returning from await.\n              if (!$async$result && H._asBoolS(t2.$index(0, \"stop-on-error\"))) {\n                t1 = dirWatcher._group._controller;\n                t1._subscribe$4(null, null, null, false).cancel$0();\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              // goto for condition\n              $async$goto = 4;\n              break;\n            case 5:\n              // after for\n              P.print(\"Sass is watching for changes. Press Ctrl-C to stop.\\n\");\n              $async$goto = 7;\n              return P._asyncAwait(watcher.watch$1(0, dirWatcher), $async$watch);\n            case 7:\n              // returning from await.\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$watch, $async$completer);\n    },\n    watch_closure: function watch_closure(t0) {\n      this.dirWatcher = t0;\n    },\n    _Watcher: function _Watcher(t0, t1) {\n      this._watch$_options = t0;\n      this._graph = t1;\n    },\n    _Watcher__debounceEvents_closure: function _Watcher__debounceEvents_closure() {\n    },\n    _Watcher__debounceEvents__closure: function _Watcher__debounceEvents__closure(t0) {\n      this.typeForPath = t0;\n    },\n    MergedExtension_merge: function(left, right) {\n      var t2, t3, t4,\n        t1 = left.extender;\n      if (!J.$eq$(t1, right.extender) || !J.$eq$(left.target, right.target))\n        throw H.wrapException(P.ArgumentError$(left.toString$0(0) + \" and \" + right.toString$0(0) + \" aren't the same extension.\"));\n      t2 = left.mediaContext;\n      t3 = t2 == null;\n      if (!t3) {\n        t4 = right.mediaContext;\n        t4 = t4 != null && !C.C_ListEquality.equals$2(0, t2, t4);\n      } else\n        t4 = false;\n      if (t4)\n        throw H.wrapException(E.SassException$(\"From \" + left.span.message$1(0, \"\") + string$.x0aYou_m, right.span));\n      if (right.isOptional && right.mediaContext == null)\n        return left;\n      if (left.isOptional && t3)\n        return right;\n      if (t3)\n        t2 = right.mediaContext;\n      t3 = left.specificity;\n      if (t3 == null)\n        t3 = t1.get$maxSpecificity();\n      return new A.MergedExtension(left, right, t1, left.target, t3, true, false, t2, left.extenderSpan, left.span);\n    },\n    MergedExtension: function MergedExtension(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {\n      var _ = this;\n      _.left = t0;\n      _.right = t1;\n      _.extender = t2;\n      _.target = t3;\n      _.specificity = t4;\n      _.isOptional = t5;\n      _.isOriginal = t6;\n      _.mediaContext = t7;\n      _.extenderSpan = t8;\n      _.span = t9;\n    },\n    _modify: function(map, keys, modify) {\n      var keyIterator = J.get$iterator$ax(keys);\n      return keyIterator.moveNext$0() ? new A._modify__modifyNestedMap(keyIterator, modify).call$1(map) : modify.call$1(map);\n    },\n    _deepMergeImpl: function(map1, map2) {\n      var t1 = {},\n        t2 = map2.contents;\n      if (t2.get$isEmpty(t2))\n        return map1;\n      t1.mutable = false;\n      t1.result = t2;\n      map1.contents.forEach$1(0, new A._deepMergeImpl_closure(t1, new A._deepMergeImpl__ensureMutable(t1)));\n      if (t1.mutable) {\n        t2 = type$.legacy_Value;\n        t2 = new A.SassMap(H.ConstantMap_ConstantMap$from(t1.result, t2, t2));\n        t1 = t2;\n      } else\n        t1 = map2;\n      return t1;\n    },\n    _function2: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:map\");\n    },\n    closure34: function closure34() {\n    },\n    closure97: function closure97() {\n    },\n    _closure12: function _closure12(t0) {\n      this.$arguments = t0;\n    },\n    closure98: function closure98() {\n    },\n    _closure11: function _closure11(t0) {\n      this.args = t0;\n    },\n    closure32: function closure32() {\n    },\n    closure33: function closure33() {\n    },\n    _closure4: function _closure4(t0) {\n      this.map2 = t0;\n    },\n    closure96: function closure96() {\n    },\n    closure95: function closure95() {\n    },\n    _closure10: function _closure10(t0) {\n      this.keys = t0;\n    },\n    closure30: function closure30() {\n    },\n    closure31: function closure31() {\n    },\n    closure29: function closure29() {\n    },\n    closure28: function closure28() {\n    },\n    closure27: function closure27() {\n    },\n    _modify__modifyNestedMap: function _modify__modifyNestedMap(t0, t1) {\n      this.keyIterator = t0;\n      this.modify = t1;\n    },\n    _deepMergeImpl__ensureMutable: function _deepMergeImpl__ensureMutable(t0) {\n      this._box_0 = t0;\n    },\n    _deepMergeImpl_closure: function _deepMergeImpl_closure(t0, t1) {\n      this._box_0 = t0;\n      this._ensureMutable = t1;\n    },\n    SassMap: function SassMap(t0) {\n      this.contents = t0;\n    },\n    SassMap_asList_closure: function SassMap_asList_closure(t0) {\n      this.result = t0;\n    },\n    Frame_Frame$parseVM: function(frame) {\n      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseVM_closure(frame));\n    },\n    Frame_Frame$parseV8: function(frame) {\n      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseV8_closure(frame));\n    },\n    Frame_Frame$_parseFirefoxEval: function(frame) {\n      return A.Frame__catchFormatException(frame, new A.Frame_Frame$_parseFirefoxEval_closure(frame));\n    },\n    Frame_Frame$parseFirefox: function(frame) {\n      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFirefox_closure(frame));\n    },\n    Frame_Frame$parseFriendly: function(frame) {\n      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFriendly_closure(frame));\n    },\n    Frame__uriOrPathToUri: function(uriOrPath) {\n      if (J.getInterceptor$asx(uriOrPath).contains$1(uriOrPath, $.$get$Frame__uriRegExp()))\n        return P.Uri_parse(uriOrPath);\n      else if (C.JSString_methods.contains$1(uriOrPath, $.$get$Frame__windowsRegExp()))\n        return P._Uri__Uri$file(uriOrPath, true);\n      else if (C.JSString_methods.startsWith$1(uriOrPath, \"/\"))\n        return P._Uri__Uri$file(uriOrPath, false);\n      if (C.JSString_methods.contains$1(uriOrPath, \"\\\\\"))\n        return $.$get$windows().toUri$1(uriOrPath);\n      return P.Uri_parse(uriOrPath);\n    },\n    Frame__catchFormatException: function(text, body) {\n      var t1, exception;\n      try {\n        t1 = body.call$0();\n        return t1;\n      } catch (exception) {\n        if (type$.legacy_FormatException._is(H.unwrapException(exception)))\n          return new N.UnparsedFrame(P._Uri__Uri(null, \"unparsed\", null, null), text);\n        else\n          throw exception;\n      }\n    },\n    Frame: function Frame(t0, t1, t2, t3) {\n      var _ = this;\n      _.uri = t0;\n      _.line = t1;\n      _.column = t2;\n      _.member = t3;\n    },\n    Frame_Frame$parseVM_closure: function Frame_Frame$parseVM_closure(t0) {\n      this.frame = t0;\n    },\n    Frame_Frame$parseV8_closure: function Frame_Frame$parseV8_closure(t0) {\n      this.frame = t0;\n    },\n    Frame_Frame$parseV8_closure_parseLocation: function Frame_Frame$parseV8_closure_parseLocation(t0) {\n      this.frame = t0;\n    },\n    Frame_Frame$_parseFirefoxEval_closure: function Frame_Frame$_parseFirefoxEval_closure(t0) {\n      this.frame = t0;\n    },\n    Frame_Frame$parseFirefox_closure: function Frame_Frame$parseFirefox_closure(t0) {\n      this.frame = t0;\n    },\n    Frame_Frame$parseFriendly_closure: function Frame_Frame$parseFriendly_closure(t0) {\n      this.frame = t0;\n    },\n    AsciiGlyphSet: function AsciiGlyphSet() {\n    },\n    Configuration0: function Configuration0(t0, t1, t2) {\n      this._configuration$_values = t0;\n      this.nodeWithSpan = t1;\n      this.isImplicit = t2;\n    },\n    IncludeRule0: function IncludeRule0(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.namespace = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.content = t3;\n      _.span = t4;\n    },\n    MapExpression0: function MapExpression0(t0, t1) {\n      this.pairs = t0;\n      this.span = t1;\n    },\n    MapExpression_toString_closure0: function MapExpression_toString_closure0() {\n    },\n    _modify0: function(map, keys, modify) {\n      var keyIterator = J.get$iterator$ax(keys);\n      return keyIterator.moveNext$0() ? new A._modify__modifyNestedMap0(keyIterator, modify).call$1(map) : modify.call$1(map);\n    },\n    _deepMergeImpl0: function(map1, map2) {\n      var t1 = {},\n        t2 = map2.contents;\n      if (t2.get$isEmpty(t2))\n        return map1;\n      t1.mutable = false;\n      t1.result = t2;\n      map1.contents.forEach$1(0, new A._deepMergeImpl_closure0(t1, new A._deepMergeImpl__ensureMutable0(t1)));\n      if (t1.mutable) {\n        t2 = type$.legacy_Value_2;\n        t2 = new A.SassMap0(H.ConstantMap_ConstantMap$from(t1.result, t2, t2));\n        t1 = t2;\n      } else\n        t1 = map2;\n      return t1;\n    },\n    _function9: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:map\");\n    },\n    closure149: function closure149() {\n    },\n    closure212: function closure212() {\n    },\n    _closure27: function _closure27(t0) {\n      this.$arguments = t0;\n    },\n    closure213: function closure213() {\n    },\n    _closure26: function _closure26(t0) {\n      this.args = t0;\n    },\n    closure147: function closure147() {\n    },\n    closure148: function closure148() {\n    },\n    _closure19: function _closure19(t0) {\n      this.map2 = t0;\n    },\n    closure211: function closure211() {\n    },\n    closure210: function closure210() {\n    },\n    _closure25: function _closure25(t0) {\n      this.keys = t0;\n    },\n    closure145: function closure145() {\n    },\n    closure146: function closure146() {\n    },\n    closure144: function closure144() {\n    },\n    closure143: function closure143() {\n    },\n    closure142: function closure142() {\n    },\n    _modify__modifyNestedMap0: function _modify__modifyNestedMap0(t0, t1) {\n      this.keyIterator = t0;\n      this.modify = t1;\n    },\n    _deepMergeImpl__ensureMutable0: function _deepMergeImpl__ensureMutable0(t0) {\n      this._box_0 = t0;\n    },\n    _deepMergeImpl_closure0: function _deepMergeImpl_closure0(t0, t1) {\n      this._box_0 = t0;\n      this._ensureMutable = t1;\n    },\n    _NodeSassMap: function _NodeSassMap() {\n    },\n    closure239: function closure239() {\n    },\n    _closure31: function _closure31() {\n    },\n    _closure32: function _closure32() {\n    },\n    closure240: function closure240() {\n    },\n    closure241: function closure241() {\n    },\n    closure242: function closure242() {\n    },\n    closure243: function closure243() {\n    },\n    closure244: function closure244() {\n    },\n    closure245: function closure245() {\n    },\n    SassMap0: function SassMap0(t0) {\n      this.contents = t0;\n    },\n    SassMap_asList_closure0: function SassMap_asList_closure0(t0) {\n      this.result = t0;\n    },\n    MergedExtension_merge0: function(left, right) {\n      var t2, t3, t4,\n        t1 = left.extender;\n      if (!J.$eq$(t1, right.extender) || !J.$eq$(left.target, right.target))\n        throw H.wrapException(P.ArgumentError$(left.toString$0(0) + \" and \" + right.toString$0(0) + \" aren't the same extension.\"));\n      t2 = left.mediaContext;\n      t3 = t2 == null;\n      if (!t3) {\n        t4 = right.mediaContext;\n        t4 = t4 != null && !C.C_ListEquality.equals$2(0, t2, t4);\n      } else\n        t4 = false;\n      if (t4)\n        throw H.wrapException(E.SassException$0(\"From \" + left.span.message$1(0, \"\") + string$.x0aYou_m, right.span));\n      if (right.isOptional && right.mediaContext == null)\n        return left;\n      if (left.isOptional && t3)\n        return right;\n      if (t3)\n        t2 = right.mediaContext;\n      t3 = left.specificity;\n      if (t3 == null)\n        t3 = t1.get$maxSpecificity();\n      return new A.MergedExtension0(left, right, t1, left.target, t3, true, false, t2, left.extenderSpan, left.span);\n    },\n    MergedExtension0: function MergedExtension0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {\n      var _ = this;\n      _.left = t0;\n      _.right = t1;\n      _.extender = t2;\n      _.target = t3;\n      _.specificity = t4;\n      _.isOptional = t5;\n      _.isOriginal = t6;\n      _.mediaContext = t7;\n      _.extenderSpan = t8;\n      _.span = t9;\n    },\n    _combine: function(hash, value) {\n      hash = 536870911 & hash + value;\n      hash = 536870911 & hash + ((524287 & hash) << 10);\n      return hash ^ hash >>> 6;\n    },\n    _finish: function(hash) {\n      hash = 536870911 & hash + ((67108863 & hash) << 3);\n      hash ^= hash >>> 11;\n      return 536870911 & hash + ((16383 & hash) << 15);\n    }\n  },\n  T = {NumberExpression: function NumberExpression(t0, t1, t2) {\n      this.value = t0;\n      this.unit = t1;\n      this.span = t2;\n    }, ParenthesizedExpression: function ParenthesizedExpression(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    }, SelectorExpression: function SelectorExpression(t0) {\n      this.span = t0;\n    },\n    MixinRule$: function($name, $arguments, children, span, comment, hasContent) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure());\n      return new T.MixinRule(hasContent, $name, $arguments, span, t1, t2);\n    },\n    MixinRule: function MixinRule(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.hasContent = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.span = t3;\n      _.children = t4;\n      _.hasDeclarations = t5;\n    },\n    UseRule: function UseRule(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.namespace = t1;\n      _.configuration = t2;\n      _.span = t3;\n    },\n    Selector: function Selector() {\n    },\n    EmptyExtender: function EmptyExtender() {\n    },\n    _prependParent: function(compound) {\n      var t2, t3, cur, _i, _null = null,\n        t1 = compound.components,\n        first = C.JSArray_methods.get$first(t1);\n      if (first instanceof N.UniversalSelector)\n        return _null;\n      if (first instanceof F.TypeSelector) {\n        t2 = first.name;\n        if (t2.namespace != null)\n          return _null;\n        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t3.push(new M.ParentSelector(t2.name));\n        for (t1 = H.SubListIterable$(t1, 1, _null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          t3.push(cur);\n        }\n        return X.CompoundSelector$(t3);\n      } else {\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t2.push(new M.ParentSelector(_null));\n        for (t3 = t1.length, _i = 0; _i < t3; ++_i)\n          t2.push(t1[_i]);\n        return X.CompoundSelector$(t2);\n      }\n    },\n    _function0: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function($name, $arguments, callback, \"sass:selector\");\n    },\n    closure13: function closure13() {\n    },\n    _closure1: function _closure1(t0) {\n      this._box_0 = t0;\n    },\n    _closure2: function _closure2() {\n    },\n    closure12: function closure12() {\n    },\n    _closure: function _closure() {\n    },\n    _closure0: function _closure0() {\n    },\n    __closure: function __closure(t0) {\n      this.parent = t0;\n    },\n    closure11: function closure11() {\n    },\n    closure10: function closure10() {\n    },\n    closure9: function closure9() {\n    },\n    closure16: function closure16() {\n    },\n    closure15: function closure15() {\n    },\n    _closure3: function _closure3() {\n    },\n    closure14: function closure14() {\n    },\n    TrackingLogger: function TrackingLogger(t0) {\n      this._tracking$_logger = t0;\n      this._emittedDebug = this._emittedWarning = false;\n    },\n    SelectorParser$: function(contents, allowParent, allowPlaceholder, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new T.SelectorParser(allowParent, allowPlaceholder, t1, logger == null ? C.StderrLogger_false : logger);\n    },\n    SelectorParser: function SelectorParser(t0, t1, t2, t3) {\n      var _ = this;\n      _._allowParent = t0;\n      _._allowPlaceholder = t1;\n      _.scanner = t2;\n      _.logger = t3;\n    },\n    SelectorParser_parse_closure: function SelectorParser_parse_closure(t0) {\n      this.$this = t0;\n    },\n    SelectorParser_parseCompoundSelector_closure: function SelectorParser_parseCompoundSelector_closure(t0) {\n      this.$this = t0;\n    },\n    SassNumber$: function(value, unit) {\n      var t1 = unit == null ? null : H.setRuntimeTypeInfo([unit], type$.JSArray_legacy_String);\n      t1 = t1 == null ? C.List_empty : P.List_List$unmodifiable(t1, type$.legacy_String);\n      return new T.SassNumber(value, t1, C.List_empty, null);\n    },\n    SassNumber$withUnits: function(value, denominatorUnits, numeratorUnits) {\n      var t1 = numeratorUnits == null ? C.List_empty : P.List_List$unmodifiable(numeratorUnits, type$.legacy_String);\n      return new T.SassNumber(value, t1, denominatorUnits == null ? C.List_empty : P.List_List$unmodifiable(denominatorUnits, type$.legacy_String), null);\n    },\n    SassNumber: function SassNumber(t0, t1, t2, t3) {\n      var _ = this;\n      _.value = t0;\n      _.numeratorUnits = t1;\n      _.denominatorUnits = t2;\n      _.asSlash = t3;\n    },\n    SassNumber_valueInUnits_closure: function SassNumber_valueInUnits_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.newNumerator = t2;\n    },\n    SassNumber_valueInUnits_closure0: function SassNumber_valueInUnits_closure0(t0, t1, t2) {\n      this.$this = t0;\n      this.newNumerators = t1;\n      this.newDenominators = t2;\n    },\n    SassNumber_valueInUnits_closure1: function SassNumber_valueInUnits_closure1(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.newDenominator = t2;\n    },\n    SassNumber_valueInUnits_closure2: function SassNumber_valueInUnits_closure2(t0, t1, t2) {\n      this.$this = t0;\n      this.newNumerators = t1;\n      this.newDenominators = t2;\n    },\n    SassNumber_modulo_closure: function SassNumber_modulo_closure() {\n    },\n    SassNumber_plus_closure: function SassNumber_plus_closure() {\n    },\n    SassNumber_minus_closure: function SassNumber_minus_closure() {\n    },\n    SassNumber__multiplyUnits_closure: function SassNumber__multiplyUnits_closure(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.numerator = t2;\n    },\n    SassNumber__multiplyUnits_closure0: function SassNumber__multiplyUnits_closure0(t0, t1) {\n      this.newNumerators = t0;\n      this.numerator = t1;\n    },\n    SassNumber__multiplyUnits_closure1: function SassNumber__multiplyUnits_closure1(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.numerator = t2;\n    },\n    SassNumber__multiplyUnits_closure2: function SassNumber__multiplyUnits_closure2(t0, t1) {\n      this.newNumerators = t0;\n      this.numerator = t1;\n    },\n    SassNumber__areAnyConvertible_closure: function SassNumber__areAnyConvertible_closure(t0, t1) {\n      this.$this = t0;\n      this.units2 = t1;\n    },\n    SassNumber__canonicalMultiplier_closure: function SassNumber__canonicalMultiplier_closure() {\n    },\n    SingleMapping_SingleMapping$fromEntries: function(entries) {\n      var lines, t2, t3, urls, names, t4, files, t5, targetEntries, lineNum, _i, sourceEntry, sourceUrl, t6, urlId, _null = null,\n        t1 = type$.dynamic,\n        sourceEntries = P.List_List$from(entries, true, t1);\n      C.JSArray_methods.sort$0(sourceEntries);\n      lines = H.setRuntimeTypeInfo([], type$.JSArray_legacy_TargetLineEntry);\n      t2 = type$.legacy_String;\n      t3 = type$.legacy_int;\n      urls = P.LinkedHashMap_LinkedHashMap$_empty(t2, t3);\n      names = P.LinkedHashMap_LinkedHashMap$_empty(t2, t3);\n      t4 = type$.legacy_SourceFile;\n      files = P.LinkedHashMap_LinkedHashMap$_empty(t3, t4);\n      for (t3 = sourceEntries.length, t5 = type$.JSArray_legacy_TargetEntry, targetEntries = _null, lineNum = targetEntries, _i = 0; _i < sourceEntries.length; sourceEntries.length === t3 || (0, H.throwConcurrentModificationError)(sourceEntries), ++_i) {\n        sourceEntry = sourceEntries[_i];\n        if (lineNum == null || sourceEntry.get$target().get$line() > lineNum) {\n          lineNum = sourceEntry.get$target().get$line();\n          targetEntries = H.setRuntimeTypeInfo([], t5);\n          lines.push(new T.TargetLineEntry(lineNum, targetEntries));\n        }\n        if (sourceEntry.get$source() == null)\n          targetEntries.push(new T.TargetEntry(sourceEntry.get$target().get$column(), _null, _null, _null, _null));\n        else {\n          sourceUrl = J.get$sourceUrl$x(sourceEntry.get$source());\n          t6 = sourceUrl == null ? \"\" : sourceUrl.toString$0(0);\n          urlId = urls.putIfAbsent$2(t6, new T.SingleMapping_SingleMapping$fromEntries_closure(urls));\n          if (sourceEntry.get$source() instanceof Y.FileLocation)\n            files.putIfAbsent$2(urlId, new T.SingleMapping_SingleMapping$fromEntries_closure0(sourceEntry));\n          sourceEntry.get$identifierName();\n          targetEntries.push(new T.TargetEntry(sourceEntry.get$target().get$column(), urlId, sourceEntry.get$source().get$line(), sourceEntry.get$source().get$column(), _null));\n        }\n      }\n      t3 = urls.get$values(urls);\n      t4 = H.MappedIterable_MappedIterable(t3, new T.SingleMapping_SingleMapping$fromEntries_closure1(files), H._instanceType(t3)._eval$1(\"Iterable.E\"), t4);\n      t4 = P.List_List$from(t4, true, H._instanceType(t4)._eval$1(\"Iterable.E\"));\n      t3 = urls.get$keys(urls);\n      t3 = P.List_List$from(t3, true, H._instanceType(t3)._eval$1(\"Iterable.E\"));\n      t5 = names.get$keys(names);\n      return new T.SingleMapping(t3, P.List_List$from(t5, true, H._instanceType(t5)._eval$1(\"Iterable.E\")), t4, lines, _null, P.LinkedHashMap_LinkedHashMap$_empty(t2, t1));\n    },\n    Mapping: function Mapping() {\n    },\n    SingleMapping: function SingleMapping(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.urls = t0;\n      _.names = t1;\n      _.files = t2;\n      _.lines = t3;\n      _.targetUrl = t4;\n      _.sourceRoot = null;\n      _.extensions = t5;\n    },\n    SingleMapping_SingleMapping$fromEntries_closure: function SingleMapping_SingleMapping$fromEntries_closure(t0) {\n      this.urls = t0;\n    },\n    SingleMapping_SingleMapping$fromEntries_closure0: function SingleMapping_SingleMapping$fromEntries_closure0(t0) {\n      this.sourceEntry = t0;\n    },\n    SingleMapping_SingleMapping$fromEntries_closure1: function SingleMapping_SingleMapping$fromEntries_closure1(t0) {\n      this.files = t0;\n    },\n    SingleMapping_toJson_closure: function SingleMapping_toJson_closure() {\n    },\n    SingleMapping_toJson_closure0: function SingleMapping_toJson_closure0(t0) {\n      this.result = t0;\n    },\n    TargetLineEntry: function TargetLineEntry(t0, t1) {\n      this.line = t0;\n      this.entries = t1;\n    },\n    TargetEntry: function TargetEntry(t0, t1, t2, t3, t4) {\n      var _ = this;\n      _.column = t0;\n      _.sourceUrlId = t1;\n      _.sourceLine = t2;\n      _.sourceColumn = t3;\n      _.sourceNameId = t4;\n    },\n    LazyTrace: function LazyTrace(t0) {\n      this._thunk = t0;\n      this._lazy_trace$_inner = null;\n    },\n    LazyTrace_terse_closure: function LazyTrace_terse_closure(t0) {\n      this.$this = t0;\n    },\n    EmptyExtender0: function EmptyExtender0() {\n    },\n    MixinRule$0: function($name, $arguments, children, span, comment, hasContent) {\n      var t1 = P.List_List$unmodifiable(children, type$.legacy_Statement_2),\n        t2 = C.JSArray_methods.any$1(t1, new M.ParentStatement_closure0());\n      return new T.MixinRule0(hasContent, $name, $arguments, span, t1, t2);\n    },\n    MixinRule0: function MixinRule0(t0, t1, t2, t3, t4, t5) {\n      var _ = this;\n      _.hasContent = t0;\n      _.name = t1;\n      _.$arguments = t2;\n      _.span = t3;\n      _.children = t4;\n      _.hasDeclarations = t5;\n    },\n    NumberExpression0: function NumberExpression0(t0, t1, t2) {\n      this.value = t0;\n      this.unit = t1;\n      this.span = t2;\n    },\n    _parseNumber: function(value, unit) {\n      var invalidUnit, operands, t1, numerator, denominator, numeratorUnits, denominatorUnits;\n      if (unit == null || unit.length === 0)\n        return T.SassNumber$0(value, null);\n      if (!J.getInterceptor$asx(unit).contains$1(unit, \"*\") && !C.JSString_methods.contains$1(unit, \"/\"))\n        return T.SassNumber$0(value, unit);\n      invalidUnit = new P.ArgumentError(true, unit, \"unit\", \"is invalid.\");\n      operands = unit.split(\"/\");\n      t1 = operands.length;\n      if (t1 > 2)\n        throw H.wrapException(invalidUnit);\n      numerator = operands[0];\n      denominator = t1 === 1 ? null : operands[1];\n      numeratorUnits = numerator.length === 0 ? H.setRuntimeTypeInfo([], type$.JSArray_legacy_String) : H.setRuntimeTypeInfo(numerator.split(\"*\"), type$.JSArray_String);\n      if (C.JSArray_methods.any$1(numeratorUnits, new T._parseNumber_closure()))\n        throw H.wrapException(invalidUnit);\n      denominatorUnits = denominator == null ? H.setRuntimeTypeInfo([], type$.JSArray_legacy_String) : H.setRuntimeTypeInfo(denominator.split(\"*\"), type$.JSArray_String);\n      if (C.JSArray_methods.any$1(denominatorUnits, new T._parseNumber_closure0()))\n        throw H.wrapException(invalidUnit);\n      return T.SassNumber$withUnits0(value, denominatorUnits, numeratorUnits);\n    },\n    _NodeSassNumber: function _NodeSassNumber() {\n    },\n    closure232: function closure232() {\n    },\n    closure233: function closure233() {\n    },\n    closure234: function closure234() {\n    },\n    closure235: function closure235() {\n    },\n    closure236: function closure236() {\n    },\n    closure237: function closure237() {\n    },\n    _parseNumber_closure: function _parseNumber_closure() {\n    },\n    _parseNumber_closure0: function _parseNumber_closure0() {\n    },\n    SassNumber$0: function(value, unit) {\n      var t1 = unit == null ? null : H.setRuntimeTypeInfo([unit], type$.JSArray_legacy_String);\n      t1 = t1 == null ? C.List_empty : P.List_List$unmodifiable(t1, type$.legacy_String);\n      return new T.SassNumber0(value, t1, C.List_empty, null);\n    },\n    SassNumber$withUnits0: function(value, denominatorUnits, numeratorUnits) {\n      var t1 = numeratorUnits == null ? C.List_empty : P.List_List$unmodifiable(numeratorUnits, type$.legacy_String);\n      return new T.SassNumber0(value, t1, denominatorUnits == null ? C.List_empty : P.List_List$unmodifiable(denominatorUnits, type$.legacy_String), null);\n    },\n    SassNumber0: function SassNumber0(t0, t1, t2, t3) {\n      var _ = this;\n      _.value = t0;\n      _.numeratorUnits = t1;\n      _.denominatorUnits = t2;\n      _.asSlash = t3;\n    },\n    SassNumber_valueInUnits_closure3: function SassNumber_valueInUnits_closure3(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.newNumerator = t2;\n    },\n    SassNumber_valueInUnits_closure4: function SassNumber_valueInUnits_closure4(t0, t1, t2) {\n      this.$this = t0;\n      this.newNumerators = t1;\n      this.newDenominators = t2;\n    },\n    SassNumber_valueInUnits_closure5: function SassNumber_valueInUnits_closure5(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.newDenominator = t2;\n    },\n    SassNumber_valueInUnits_closure6: function SassNumber_valueInUnits_closure6(t0, t1, t2) {\n      this.$this = t0;\n      this.newNumerators = t1;\n      this.newDenominators = t2;\n    },\n    SassNumber_modulo_closure0: function SassNumber_modulo_closure0() {\n    },\n    SassNumber_plus_closure0: function SassNumber_plus_closure0() {\n    },\n    SassNumber_minus_closure0: function SassNumber_minus_closure0() {\n    },\n    SassNumber__multiplyUnits_closure3: function SassNumber__multiplyUnits_closure3(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.numerator = t2;\n    },\n    SassNumber__multiplyUnits_closure4: function SassNumber__multiplyUnits_closure4(t0, t1) {\n      this.newNumerators = t0;\n      this.numerator = t1;\n    },\n    SassNumber__multiplyUnits_closure5: function SassNumber__multiplyUnits_closure5(t0, t1, t2) {\n      this._box_0 = t0;\n      this.$this = t1;\n      this.numerator = t2;\n    },\n    SassNumber__multiplyUnits_closure6: function SassNumber__multiplyUnits_closure6(t0, t1) {\n      this.newNumerators = t0;\n      this.numerator = t1;\n    },\n    SassNumber__areAnyConvertible_closure0: function SassNumber__areAnyConvertible_closure0(t0, t1) {\n      this.$this = t0;\n      this.units2 = t1;\n    },\n    SassNumber__canonicalMultiplier_closure0: function SassNumber__canonicalMultiplier_closure0() {\n    },\n    ParenthesizedExpression0: function ParenthesizedExpression0(t0, t1) {\n      this.expression = t0;\n      this.span = t1;\n    },\n    Selector0: function Selector0() {\n    },\n    SelectorExpression0: function SelectorExpression0(t0) {\n      this.span = t0;\n    },\n    _prependParent0: function(compound) {\n      var t2, t3, cur, _i, _null = null,\n        t1 = compound.components,\n        first = C.JSArray_methods.get$first(t1);\n      if (first instanceof N.UniversalSelector0)\n        return _null;\n      if (first instanceof F.TypeSelector0) {\n        t2 = first.name;\n        if (t2.namespace != null)\n          return _null;\n        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t3.push(new M.ParentSelector0(t2.name));\n        for (t1 = H.SubListIterable$(t1, 1, _null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          t3.push(cur);\n        }\n        return X.CompoundSelector$0(t3);\n      } else {\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t2.push(new M.ParentSelector0(_null));\n        for (t3 = t1.length, _i = 0; _i < t3; ++_i)\n          t2.push(t1[_i]);\n        return X.CompoundSelector$0(t2);\n      }\n    },\n    _function7: function($name, $arguments, callback) {\n      return Q.BuiltInCallable$function0($name, $arguments, callback, \"sass:selector\");\n    },\n    closure128: function closure128() {\n    },\n    _closure16: function _closure16(t0) {\n      this._box_0 = t0;\n    },\n    _closure17: function _closure17() {\n    },\n    closure127: function closure127() {\n    },\n    _closure14: function _closure14() {\n    },\n    _closure15: function _closure15() {\n    },\n    __closure0: function __closure0(t0) {\n      this.parent = t0;\n    },\n    closure126: function closure126() {\n    },\n    closure125: function closure125() {\n    },\n    closure124: function closure124() {\n    },\n    closure131: function closure131() {\n    },\n    closure130: function closure130() {\n    },\n    _closure18: function _closure18() {\n    },\n    closure129: function closure129() {\n    },\n    SelectorParser$0: function(contents, allowParent, allowPlaceholder, logger, url) {\n      var t1 = S.SpanScanner$(contents, url);\n      return new T.SelectorParser0(allowParent, allowPlaceholder, t1, logger == null ? C.C_StderrLogger : logger);\n    },\n    SelectorParser0: function SelectorParser0(t0, t1, t2, t3) {\n      var _ = this;\n      _._selector$_allowParent = t0;\n      _._selector$_allowPlaceholder = t1;\n      _.scanner = t2;\n      _.logger = t3;\n    },\n    SelectorParser_parse_closure0: function SelectorParser_parse_closure0(t0) {\n      this.$this = t0;\n    },\n    SelectorParser_parseCompoundSelector_closure0: function SelectorParser_parseCompoundSelector_closure0(t0) {\n      this.$this = t0;\n    },\n    UseRule0: function UseRule0(t0, t1, t2, t3) {\n      var _ = this;\n      _.url = t0;\n      _.namespace = t1;\n      _.configuration = t2;\n      _.span = t3;\n    },\n    isWhitespace: function(character) {\n      return character === 32 || character === 9 || T.isNewline(character);\n    },\n    isNewline: function(character) {\n      return character === 10 || character === 13 || character === 12;\n    },\n    isAlphabetic0: function(character) {\n      var t1;\n      if (!(character >= 97 && character <= 122))\n        t1 = character >= 65 && character <= 90;\n      else\n        t1 = true;\n      return t1;\n    },\n    isDigit: function(character) {\n      return character != null && character >= 48 && character <= 57;\n    },\n    isHex: function(character) {\n      if (character == null)\n        return false;\n      if (T.isDigit(character))\n        return true;\n      if (character >= 97 && character <= 102)\n        return true;\n      if (character >= 65 && character <= 70)\n        return true;\n      return false;\n    },\n    isPrivate: function(identifier) {\n      var first = C.JSString_methods._codeUnitAt$1(identifier, 0);\n      return first === 45 || first === 95;\n    },\n    asHex: function(character) {\n      if (character <= 57)\n        return character - 48;\n      if (character <= 70)\n        return 10 + character - 65;\n      return 10 + character - 97;\n    },\n    hexCharFor: function(number) {\n      return number < 10 ? 48 + number : 87 + number;\n    },\n    opposite: function(character) {\n      switch (character) {\n        case 40:\n          return 41;\n        case 123:\n          return 125;\n        case 91:\n          return 93;\n        default:\n          return null;\n      }\n    },\n    characterEqualsIgnoreCase: function(character1, character2) {\n      var upperCase1;\n      if (character1 === character2)\n        return true;\n      if ((character1 ^ character2) >>> 0 !== 32)\n        return false;\n      upperCase1 = (character1 & 4294967263) >>> 0;\n      return upperCase1 >= 65 && upperCase1 <= 90;\n    },\n    fuzzyEquals: function(number1, number2) {\n      return Math.abs(number1 - number2) < $.$get$epsilon();\n    },\n    fuzzyLessThan: function(number1, number2) {\n      return number1 < number2 && !(Math.abs(number1 - number2) < $.$get$epsilon());\n    },\n    fuzzyLessThanOrEquals: function(number1, number2) {\n      return number1 < number2 || Math.abs(number1 - number2) < $.$get$epsilon();\n    },\n    fuzzyGreaterThan: function(number1, number2) {\n      return number1 > number2 && !(Math.abs(number1 - number2) < $.$get$epsilon());\n    },\n    fuzzyGreaterThanOrEquals: function(number1, number2) {\n      return number1 > number2 || Math.abs(number1 - number2) < $.$get$epsilon();\n    },\n    fuzzyIsInt: function(number) {\n      number.toString;\n      if (number == 1 / 0 || number == -1 / 0 || isNaN(number))\n        return false;\n      if (H._isInt(number))\n        return true;\n      return Math.abs(C.JSNumber_methods.$mod(Math.abs(number - 0.5), 1) - 0.5) < $.$get$epsilon();\n    },\n    fuzzyRound: function(number) {\n      var t1;\n      if (number > 0) {\n        t1 = C.JSNumber_methods.$mod(number, 1);\n        return t1 < 0.5 && !(Math.abs(t1 - 0.5) < $.$get$epsilon()) ? C.JSNumber_methods.floor$0(number) : C.JSNumber_methods.ceil$0(number);\n      } else {\n        t1 = C.JSNumber_methods.$mod(number, 1);\n        return t1 < 0.5 || Math.abs(t1 - 0.5) < $.$get$epsilon() ? C.JSNumber_methods.floor$0(number) : C.JSNumber_methods.ceil$0(number);\n      }\n    },\n    fuzzyCheckRange: function(number, min, max) {\n      var t1 = $.$get$epsilon();\n      if (Math.abs(number - min) < t1)\n        return min;\n      if (Math.abs(number - max) < t1)\n        return max;\n      if (number > min && number < max)\n        return number;\n      return null;\n    },\n    fuzzyAssertRange: function(number, min, max, $name) {\n      var result = T.fuzzyCheckRange(number, min, max);\n      if (result != null)\n        return result;\n      throw H.wrapException(P.RangeError$value(number, $name, \"must be between \" + min + \" and \" + max + \".\"));\n    },\n    isWhitespace0: function(character) {\n      return character === 32 || character === 9 || T.isNewline0(character);\n    },\n    isNewline0: function(character) {\n      return character === 10 || character === 13 || character === 12;\n    },\n    isAlphabetic1: function(character) {\n      var t1;\n      if (!(character >= 97 && character <= 122))\n        t1 = character >= 65 && character <= 90;\n      else\n        t1 = true;\n      return t1;\n    },\n    isDigit0: function(character) {\n      return character != null && character >= 48 && character <= 57;\n    },\n    isHex0: function(character) {\n      if (character == null)\n        return false;\n      if (T.isDigit0(character))\n        return true;\n      if (character >= 97 && character <= 102)\n        return true;\n      if (character >= 65 && character <= 70)\n        return true;\n      return false;\n    },\n    isPrivate0: function(identifier) {\n      var first = C.JSString_methods._codeUnitAt$1(identifier, 0);\n      return first === 45 || first === 95;\n    },\n    asHex0: function(character) {\n      if (character <= 57)\n        return character - 48;\n      if (character <= 70)\n        return 10 + character - 65;\n      return 10 + character - 97;\n    },\n    hexCharFor0: function(number) {\n      return number < 10 ? 48 + number : 87 + number;\n    },\n    opposite0: function(character) {\n      switch (character) {\n        case 40:\n          return 41;\n        case 123:\n          return 125;\n        case 91:\n          return 93;\n        default:\n          return null;\n      }\n    },\n    characterEqualsIgnoreCase0: function(character1, character2) {\n      var upperCase1;\n      if (character1 === character2)\n        return true;\n      if ((character1 ^ character2) >>> 0 !== 32)\n        return false;\n      upperCase1 = (character1 & 4294967263) >>> 0;\n      return upperCase1 >= 65 && upperCase1 <= 90;\n    },\n    fuzzyEquals0: function(number1, number2) {\n      return Math.abs(number1 - number2) < $.$get$epsilon0();\n    },\n    fuzzyLessThan0: function(number1, number2) {\n      return number1 < number2 && !(Math.abs(number1 - number2) < $.$get$epsilon0());\n    },\n    fuzzyLessThanOrEquals0: function(number1, number2) {\n      return number1 < number2 || Math.abs(number1 - number2) < $.$get$epsilon0();\n    },\n    fuzzyGreaterThan0: function(number1, number2) {\n      return number1 > number2 && !(Math.abs(number1 - number2) < $.$get$epsilon0());\n    },\n    fuzzyGreaterThanOrEquals0: function(number1, number2) {\n      return number1 > number2 || Math.abs(number1 - number2) < $.$get$epsilon0();\n    },\n    fuzzyIsInt0: function(number) {\n      number.toString;\n      if (number == 1 / 0 || number == -1 / 0 || isNaN(number))\n        return false;\n      if (H._isInt(number))\n        return true;\n      return Math.abs(C.JSNumber_methods.$mod(Math.abs(number - 0.5), 1) - 0.5) < $.$get$epsilon0();\n    },\n    fuzzyRound0: function(number) {\n      var t1;\n      if (number > 0) {\n        t1 = C.JSNumber_methods.$mod(number, 1);\n        return t1 < 0.5 && !(Math.abs(t1 - 0.5) < $.$get$epsilon0()) ? C.JSNumber_methods.floor$0(number) : C.JSNumber_methods.ceil$0(number);\n      } else {\n        t1 = C.JSNumber_methods.$mod(number, 1);\n        return t1 < 0.5 || Math.abs(t1 - 0.5) < $.$get$epsilon0() ? C.JSNumber_methods.floor$0(number) : C.JSNumber_methods.ceil$0(number);\n      }\n    },\n    fuzzyCheckRange0: function(number, min, max) {\n      var t1 = $.$get$epsilon0();\n      if (Math.abs(number - min) < t1)\n        return min;\n      if (Math.abs(number - max) < t1)\n        return max;\n      if (number > min && number < max)\n        return number;\n      return null;\n    },\n    fuzzyAssertRange0: function(number, min, max, $name) {\n      var result = T.fuzzyCheckRange0(number, min, max);\n      if (result != null)\n        return result;\n      throw H.wrapException(P.RangeError$value(number, $name, \"must be between \" + min + \" and \" + max + \".\"));\n    }\n  },\n  S = {VariableExpression: function VariableExpression(t0, t1, t2) {\n      this.namespace = t0;\n      this.name = t1;\n      this.span = t2;\n    },\n    ComplexSelector$: function(components, lineBreak) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_ComplexSelectorComponent);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new S.ComplexSelector(t1, lineBreak);\n    },\n    ComplexSelector: function ComplexSelector(t0, t1) {\n      var _ = this;\n      _.components = t0;\n      _.lineBreak = t1;\n      _._complex$_isInvisible = _._maxSpecificity = _._minSpecificity = null;\n    },\n    ComplexSelector_isInvisible_closure: function ComplexSelector_isInvisible_closure() {\n    },\n    Combinator: function Combinator(t0) {\n      this._complex$_text = t0;\n    },\n    AsyncBuiltInCallable$mixin: function($name, $arguments, callback, url) {\n      return new S.AsyncBuiltInCallable($name, L.ScssParser$(\"@mixin \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), new S.AsyncBuiltInCallable$mixin_closure(callback));\n    },\n    AsyncBuiltInCallable: function AsyncBuiltInCallable(t0, t1, t2) {\n      this.name = t0;\n      this._async_built_in$_arguments = t1;\n      this._async_built_in$_callback = t2;\n    },\n    AsyncBuiltInCallable$mixin_closure: function AsyncBuiltInCallable$mixin_closure(t0) {\n      this.callback = t0;\n    },\n    Extension$oneOff: function(extender, isOriginal, specificity) {\n      var _null = null;\n      return new S.Extension(extender, _null, specificity == null ? extender.get$maxSpecificity() : specificity, true, isOriginal, _null, _null, _null);\n    },\n    Extension: function Extension(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _.extender = t0;\n      _.target = t1;\n      _.specificity = t2;\n      _.isOptional = t3;\n      _.isOriginal = t4;\n      _.mediaContext = t5;\n      _.extenderSpan = t6;\n      _.span = t7;\n    },\n    StderrLogger: function StderrLogger(t0) {\n      this.color = t0;\n    },\n    SpanScanner$: function(string, sourceUrl) {\n      var t1 = Y.SourceFile$fromString(string, sourceUrl),\n        t2 = typeof sourceUrl == \"string\" ? P.Uri_parse(sourceUrl) : type$.legacy_Uri._as(sourceUrl);\n      return new S.SpanScanner(t1, t2, string);\n    },\n    SpanScanner: function SpanScanner(t0, t1, t2) {\n      var _ = this;\n      _._sourceFile = t0;\n      _.sourceUrl = t1;\n      _.string = t2;\n      _._string_scanner$_position = 0;\n      _._lastMatchPosition = _._lastMatch = null;\n    },\n    _SpanScannerState: function _SpanScannerState(t0, t1) {\n      this._scanner = t0;\n      this.position = t1;\n    },\n    Tuple2: function Tuple2(t0, t1, t2) {\n      this.item1 = t0;\n      this.item2 = t1;\n      this.$ti = t2;\n    },\n    Tuple3: function Tuple3(t0, t1, t2, t3) {\n      var _ = this;\n      _.item1 = t0;\n      _.item2 = t1;\n      _.item3 = t2;\n      _.$ti = t3;\n    },\n    AsyncBuiltInCallable$mixin0: function($name, $arguments, callback, url) {\n      return new S.AsyncBuiltInCallable0($name, L.ScssParser$0(\"@mixin \" + $name + \"(\" + $arguments + \") {\", null, url).parseArgumentDeclaration$0(), new S.AsyncBuiltInCallable$mixin_closure0(callback));\n    },\n    AsyncBuiltInCallable0: function AsyncBuiltInCallable0(t0, t1, t2) {\n      this.name = t0;\n      this._async_built_in0$_arguments = t1;\n      this._async_built_in0$_callback = t2;\n    },\n    AsyncBuiltInCallable$mixin_closure0: function AsyncBuiltInCallable$mixin_closure0(t0) {\n      this.callback = t0;\n    },\n    ComplexSelector$0: function(components, lineBreak) {\n      var t1 = P.List_List$unmodifiable(components, type$.legacy_ComplexSelectorComponent_2);\n      if (t1.length === 0)\n        H.throwExpression(P.ArgumentError$(\"components may not be empty.\"));\n      return new S.ComplexSelector0(t1, lineBreak);\n    },\n    ComplexSelector0: function ComplexSelector0(t0, t1) {\n      var _ = this;\n      _.components = t0;\n      _.lineBreak = t1;\n      _._complex0$_isInvisible = _._complex0$_maxSpecificity = _._complex0$_minSpecificity = null;\n    },\n    ComplexSelector_isInvisible_closure0: function ComplexSelector_isInvisible_closure0() {\n    },\n    Combinator0: function Combinator0(t0) {\n      this._complex0$_text = t0;\n    },\n    Extension$oneOff0: function(extender, isOriginal, specificity) {\n      var _null = null;\n      return new S.Extension0(extender, _null, specificity == null ? extender.get$maxSpecificity() : specificity, true, isOriginal, _null, _null, _null);\n    },\n    Extension0: function Extension0(t0, t1, t2, t3, t4, t5, t6, t7) {\n      var _ = this;\n      _.extender = t0;\n      _.target = t1;\n      _.specificity = t2;\n      _.isOptional = t3;\n      _.isOriginal = t4;\n      _.mediaContext = t5;\n      _.extenderSpan = t6;\n      _.span = t7;\n    },\n    StderrLogger0: function StderrLogger0() {\n    },\n    VariableExpression0: function VariableExpression0(t0, t1, t2) {\n      this.namespace = t0;\n      this.name = t1;\n      this.span = t2;\n    }\n  };\n  var holders = [C, H, J, P, N, Z, V, G, F, Y, L, Q, B, O, U, M, D, E, X, K, R, A, T, S];\n  hunkHelpers.setFunctionNamesIfNecessary(holders);\n  var $ = {};\n  H.JS_CONST.prototype = {};\n  J.Interceptor.prototype = {\n    $eq: function(receiver, other) {\n      return receiver === other;\n    },\n    get$hashCode: function(receiver) {\n      return H.Primitives_objectHashCode(receiver);\n    },\n    toString$0: function(receiver) {\n      return \"Instance of '\" + H.S(H.Primitives_objectTypeName(receiver)) + \"'\";\n    },\n    noSuchMethod$1: function(receiver, invocation) {\n      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));\n    }\n  };\n  J.JSBool.prototype = {\n    toString$0: function(receiver) {\n      return String(receiver);\n    },\n    get$hashCode: function(receiver) {\n      return receiver ? 519018 : 218159;\n    },\n    $isbool: 1\n  };\n  J.JSNull.prototype = {\n    $eq: function(receiver, other) {\n      return null == other;\n    },\n    toString$0: function(receiver) {\n      return \"null\";\n    },\n    get$hashCode: function(receiver) {\n      return 0;\n    },\n    get$runtimeType: function(receiver) {\n      return C.Type_Null_Yyn;\n    },\n    noSuchMethod$1: function(receiver, invocation) {\n      return this.super$Interceptor$noSuchMethod(receiver, invocation);\n    },\n    $isNull: 1\n  };\n  J.JavaScriptObject.prototype = {\n    get$hashCode: function(receiver) {\n      return 0;\n    },\n    toString$0: function(receiver) {\n      return String(receiver);\n    },\n    $isJsError: 1,\n    $isJsError: 1,\n    $isJsSystemError: 1,\n    $is_NodeSassColor: 1,\n    $isJSFunction0: 1,\n    $isNodeImporterResult0: 1,\n    $is_NodeSassList: 1,\n    $is_NodeSassMap: 1,\n    $is_NodeSassNumber: 1,\n    $isRenderOptions: 1,\n    $isRenderResult: 1,\n    $is_NodeSassString: 1,\n    get$isTTY: function(obj) {\n      return obj.isTTY;\n    },\n    get$write: function(obj) {\n      return obj.write;\n    },\n    write$1: function(receiver, p0) {\n      return receiver.write(p0);\n    },\n    createInterface$1: function(receiver, p0) {\n      return receiver.createInterface(p0);\n    },\n    on$2: function(receiver, p0, p1) {\n      return receiver.on(p0, p1);\n    },\n    get$close: function(obj) {\n      return obj.close;\n    },\n    close$0: function(receiver) {\n      return receiver.close();\n    },\n    setPrompt$1: function(receiver, p0) {\n      return receiver.setPrompt(p0);\n    },\n    get$length: function(obj) {\n      return obj.length;\n    },\n    toString$0: function(receiver) {\n      return receiver.toString();\n    },\n    clear$0: function(receiver) {\n      return receiver.clear();\n    },\n    existsSync$1: function(receiver, p0) {\n      return receiver.existsSync(p0);\n    },\n    mkdirSync$1: function(receiver, p0) {\n      return receiver.mkdirSync(p0);\n    },\n    readdirSync$1: function(receiver, p0) {\n      return receiver.readdirSync(p0);\n    },\n    readFileSync$2: function(receiver, p0, p1) {\n      return receiver.readFileSync(p0, p1);\n    },\n    statSync$1: function(receiver, p0) {\n      return receiver.statSync(p0);\n    },\n    unlinkSync$1: function(receiver, p0) {\n      return receiver.unlinkSync(p0);\n    },\n    watch$2: function(receiver, p0, p1) {\n      return receiver.watch(p0, p1);\n    },\n    writeFileSync$2: function(receiver, p0, p1) {\n      return receiver.writeFileSync(p0, p1);\n    },\n    get$path: function(obj) {\n      return obj.path;\n    },\n    get$start: function(obj) {\n      return obj.start;\n    },\n    get$end: function(obj) {\n      return obj.end;\n    },\n    isDirectory$0: function(receiver) {\n      return receiver.isDirectory();\n    },\n    isFile$0: function(receiver) {\n      return receiver.isFile();\n    },\n    get$mtime: function(obj) {\n      return obj.mtime;\n    },\n    then$1$1: function(receiver, p0) {\n      return receiver.then(p0);\n    },\n    then$1: function(receiver, p0) {\n      return receiver.then(p0);\n    },\n    getTime$0: function(receiver) {\n      return receiver.getTime();\n    },\n    get$message: function(obj) {\n      return obj.message;\n    },\n    message$1: function(receiver, p0) {\n      return receiver.message(p0);\n    },\n    get$code: function(obj) {\n      return obj.code;\n    },\n    get$syscall: function(obj) {\n      return obj.syscall;\n    },\n    get$env: function(obj) {\n      return obj.env;\n    },\n    get$exitCode: function(obj) {\n      return obj.exitCode;\n    },\n    set$exitCode: function(obj, v) {\n      return obj.exitCode = v;\n    },\n    get$platform: function(obj) {\n      return obj.platform;\n    },\n    get$stderr: function(obj) {\n      return obj.stderr;\n    },\n    get$stdin: function(obj) {\n      return obj.stdin;\n    },\n    get$stdout: function(obj) {\n      return obj.stdout;\n    },\n    get$name: function(obj) {\n      return obj.name;\n    },\n    get$sourceUrl: function(obj) {\n      return obj.sourceUrl;\n    },\n    call$2: function(receiver, p0, p1) {\n      return receiver.call(p0, p1);\n    },\n    call$1: function(receiver, p0) {\n      return receiver.call(p0);\n    },\n    call$0: function(receiver) {\n      return receiver.call();\n    },\n    call$3$1: function(receiver, p0) {\n      return receiver.call(p0);\n    },\n    call$2$1: function(receiver, p0) {\n      return receiver.call(p0);\n    },\n    call$1$1: function(receiver, p0) {\n      return receiver.call(p0);\n    },\n    call$3: function(receiver, p0, p1, p2) {\n      return receiver.call(p0, p1, p2);\n    },\n    call$3$3: function(receiver, p0, p1, p2) {\n      return receiver.call(p0, p1, p2);\n    },\n    call$2$2: function(receiver, p0, p1) {\n      return receiver.call(p0, p1);\n    },\n    call$1$3: function(receiver, p0, p1, p2) {\n      return receiver.call(p0, p1, p2);\n    },\n    call$2$3: function(receiver, p0, p1, p2) {\n      return receiver.call(p0, p1, p2);\n    },\n    call$1$2: function(receiver, p0, p1) {\n      return receiver.call(p0, p1);\n    },\n    call$1$0: function(receiver) {\n      return receiver.call();\n    },\n    apply$2: function(receiver, p0, p1) {\n      return receiver.apply(p0, p1);\n    },\n    get$file: function(obj) {\n      return obj.file;\n    },\n    get$contents: function(obj) {\n      return obj.contents;\n    },\n    get$dartValue: function(obj) {\n      return obj.dartValue;\n    },\n    set$dartValue: function(obj, v) {\n      return obj.dartValue = v;\n    },\n    set$render: function(obj, v) {\n      return obj.render = v;\n    },\n    set$renderSync: function(obj, v) {\n      return obj.renderSync = v;\n    },\n    set$info: function(obj, v) {\n      return obj.info = v;\n    },\n    set$types: function(obj, v) {\n      return obj.types = v;\n    },\n    set$NULL: function(obj, v) {\n      return obj.NULL = v;\n    },\n    set$TRUE: function(obj, v) {\n      return obj.TRUE = v;\n    },\n    set$FALSE: function(obj, v) {\n      return obj.FALSE = v;\n    },\n    get$current: function(obj) {\n      return obj.current;\n    },\n    yield$0: function(receiver) {\n      return receiver.yield();\n    },\n    run$1$1: function(receiver, p0) {\n      return receiver.run(p0);\n    },\n    run$1: function(receiver, p0) {\n      return receiver.run(p0);\n    },\n    run$0: function(receiver) {\n      return receiver.run();\n    },\n    get$options: function(obj) {\n      return obj.options;\n    },\n    get$data: function(obj) {\n      return obj.data;\n    },\n    get$includePaths: function(obj) {\n      return obj.includePaths;\n    },\n    get$indentType: function(obj) {\n      return obj.indentType;\n    },\n    get$indentWidth: function(obj) {\n      return obj.indentWidth;\n    },\n    get$linefeed: function(obj) {\n      return obj.linefeed;\n    },\n    set$context: function(obj, v) {\n      return obj.context = v;\n    },\n    get$importer: function(obj) {\n      return obj.importer;\n    },\n    get$functions: function(obj) {\n      return obj.functions;\n    },\n    get$indentedSyntax: function(obj) {\n      return obj.indentedSyntax;\n    },\n    get$omitSourceMapUrl: function(obj) {\n      return obj.omitSourceMapUrl;\n    },\n    get$outFile: function(obj) {\n      return obj.outFile;\n    },\n    get$outputStyle: function(obj) {\n      return obj.outputStyle;\n    },\n    get$fiber: function(obj) {\n      return obj.fiber;\n    },\n    get$sourceMap: function(obj) {\n      return obj.sourceMap;\n    },\n    get$sourceMapContents: function(obj) {\n      return obj.sourceMapContents;\n    },\n    get$sourceMapEmbed: function(obj) {\n      return obj.sourceMapEmbed;\n    },\n    get$sourceMapRoot: function(obj) {\n      return obj.sourceMapRoot;\n    },\n    map$1: function(receiver, p0) {\n      return receiver.map(p0);\n    },\n    map$1$1: function(receiver, p0) {\n      return receiver.map(p0);\n    },\n    set$cli_pkg_main_0_: function(obj, v) {\n      return obj.cli_pkg_main_0_ = v;\n    }\n  };\n  J.PlainJavaScriptObject.prototype = {};\n  J.UnknownJavaScriptObject.prototype = {};\n  J.JavaScriptFunction.prototype = {\n    toString$0: function(receiver) {\n      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];\n      if (dartClosure == null)\n        return this.super$JavaScriptObject$toString(receiver);\n      return \"JavaScript function for \" + H.S(J.toString$0$(dartClosure));\n    },\n    $isFunction: 1\n  };\n  J.JSArray.prototype = {\n    cast$1$0: function(receiver, $R) {\n      return new H.CastList(receiver, H._arrayInstanceType(receiver)._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"CastList<1,2>\"));\n    },\n    add$1: function(receiver, value) {\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"add\"));\n      receiver.push(value);\n    },\n    removeAt$1: function(receiver, index) {\n      var t1;\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"removeAt\"));\n      t1 = receiver.length;\n      if (index >= t1)\n        throw H.wrapException(P.RangeError$value(index, null, null));\n      return receiver.splice(index, 1)[0];\n    },\n    insert$2: function(receiver, index, value) {\n      var t1;\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"insert\"));\n      t1 = receiver.length;\n      if (index > t1)\n        throw H.wrapException(P.RangeError$value(index, null, null));\n      receiver.splice(index, 0, value);\n    },\n    insertAll$2: function(receiver, index, iterable) {\n      var insertionLength, end;\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"insertAll\"));\n      P.RangeError_checkValueInInterval(index, 0, receiver.length, \"index\");\n      if (!type$.EfficientLengthIterable_dynamic._is(iterable))\n        iterable = J.toList$0$ax(iterable);\n      insertionLength = J.get$length$asx(iterable);\n      receiver.length = receiver.length + insertionLength;\n      end = index + insertionLength;\n      this.setRange$4(receiver, end, receiver.length, receiver, index);\n      this.setRange$3(receiver, index, end, iterable);\n    },\n    setAll$2: function(receiver, index, iterable) {\n      var t1, index0;\n      if (!!receiver.immutable$list)\n        H.throwExpression(P.UnsupportedError$(\"setAll\"));\n      P.RangeError_checkValueInInterval(index, 0, receiver.length, \"index\");\n      for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0(); index = index0) {\n        index0 = index + 1;\n        this.$indexSet(receiver, index, t1.get$current(t1));\n      }\n    },\n    removeLast$0: function(receiver) {\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"removeLast\"));\n      if (receiver.length === 0)\n        throw H.wrapException(H.diagnoseIndexError(receiver, -1));\n      return receiver.pop();\n    },\n    remove$1: function(receiver, element) {\n      var i;\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"remove\"));\n      for (i = 0; i < receiver.length; ++i)\n        if (J.$eq$(receiver[i], element)) {\n          receiver.splice(i, 1);\n          return true;\n        }\n      return false;\n    },\n    _removeWhere$2: function(receiver, test, removeMatching) {\n      var i, element, t1, retained = [],\n        end = receiver.length;\n      for (i = 0; i < end; ++i) {\n        element = receiver[i];\n        if (!test.call$1(element))\n          retained.push(element);\n        if (receiver.length !== end)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      t1 = retained.length;\n      if (t1 === end)\n        return;\n      this.set$length(receiver, t1);\n      for (i = 0; i < retained.length; ++i)\n        receiver[i] = retained[i];\n    },\n    where$1: function(receiver, f) {\n      return new H.WhereIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1(\"WhereIterable<1>\"));\n    },\n    expand$1$1: function(receiver, f, $T) {\n      return new H.ExpandIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1(\"@<1>\")._bind$1($T)._eval$1(\"ExpandIterable<1,2>\"));\n    },\n    addAll$1: function(receiver, collection) {\n      var t1;\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"addAll\"));\n      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)\n        receiver.push(t1.get$current(t1));\n    },\n    map$1$1: function(receiver, f, $T) {\n      return new H.MappedListIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1(\"@<1>\")._bind$1($T)._eval$1(\"MappedListIterable<1,2>\"));\n    },\n    map$1: function($receiver, f) {\n      return this.map$1$1($receiver, f, type$.dynamic);\n    },\n    join$1: function(receiver, separator) {\n      var i,\n        list = P.List_List$filled(receiver.length, \"\", false, type$.String);\n      for (i = 0; i < receiver.length; ++i)\n        list[i] = H.S(receiver[i]);\n      return list.join(separator);\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    take$1: function(receiver, n) {\n      return H.SubListIterable$(receiver, 0, n, H._arrayInstanceType(receiver)._precomputed1);\n    },\n    skip$1: function(receiver, n) {\n      return H.SubListIterable$(receiver, n, null, H._arrayInstanceType(receiver)._precomputed1);\n    },\n    fold$1$2: function(receiver, initialValue, combine) {\n      var value, i,\n        $length = receiver.length;\n      for (value = initialValue, i = 0; i < $length; ++i) {\n        value = combine.call$2(value, receiver[i]);\n        if (receiver.length !== $length)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return value;\n    },\n    fold$2: function($receiver, initialValue, combine) {\n      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);\n    },\n    firstWhere$2$orElse: function(receiver, test, orElse) {\n      var i, element,\n        end = receiver.length;\n      for (i = 0; i < end; ++i) {\n        element = receiver[i];\n        if (test.call$1(element))\n          return element;\n        if (receiver.length !== end)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      if (orElse != null)\n        return orElse.call$0();\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    lastWhere$2$orElse: function(receiver, test, orElse) {\n      var i, element,\n        $length = receiver.length;\n      for (i = $length - 1; i >= 0; --i) {\n        element = receiver[i];\n        if (test.call$1(element))\n          return element;\n        if ($length !== receiver.length)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      if (orElse != null)\n        return orElse.call$0();\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    elementAt$1: function(receiver, index) {\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      var end0 = receiver.length;\n      if (start > end0)\n        throw H.wrapException(P.RangeError$range(start, 0, end0, \"start\", null));\n      if (end == null)\n        end = end0;\n      else if (end < start || end > end0)\n        throw H.wrapException(P.RangeError$range(end, start, end0, \"end\", null));\n      if (start === end)\n        return H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));\n      return H.setRuntimeTypeInfo(receiver.slice(start, end), H._arrayInstanceType(receiver));\n    },\n    sublist$1: function($receiver, start) {\n      return this.sublist$2($receiver, start, null);\n    },\n    getRange$2: function(receiver, start, end) {\n      P.RangeError_checkValidRange(start, end, receiver.length);\n      return H.SubListIterable$(receiver, start, end, H._arrayInstanceType(receiver)._precomputed1);\n    },\n    get$first: function(receiver) {\n      if (receiver.length > 0)\n        return receiver[0];\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    get$last: function(receiver) {\n      var t1 = receiver.length;\n      if (t1 > 0)\n        return receiver[t1 - 1];\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    get$single: function(receiver) {\n      var t1 = receiver.length;\n      if (t1 === 1)\n        return receiver[0];\n      if (t1 === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      throw H.wrapException(H.IterableElementError_tooMany());\n    },\n    removeRange$2: function(receiver, start, end) {\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"removeRange\"));\n      P.RangeError_checkValidRange(start, end, receiver.length);\n      receiver.splice(start, end - start);\n    },\n    setRange$4: function(receiver, start, end, iterable, skipCount) {\n      var $length, otherList, otherStart, t1, i;\n      if (!!receiver.immutable$list)\n        H.throwExpression(P.UnsupportedError$(\"setRange\"));\n      P.RangeError_checkValidRange(start, end, receiver.length);\n      $length = end - start;\n      if ($length === 0)\n        return;\n      P.RangeError_checkNotNegative(skipCount, \"skipCount\");\n      if (type$.List_dynamic._is(iterable)) {\n        otherList = iterable;\n        otherStart = skipCount;\n      } else {\n        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);\n        otherStart = 0;\n      }\n      t1 = J.getInterceptor$asx(otherList);\n      if (otherStart + $length > t1.get$length(otherList))\n        throw H.wrapException(H.IterableElementError_tooFew());\n      if (otherStart < start)\n        for (i = $length - 1; i >= 0; --i)\n          receiver[start + i] = t1.$index(otherList, otherStart + i);\n      else\n        for (i = 0; i < $length; ++i)\n          receiver[start + i] = t1.$index(otherList, otherStart + i);\n    },\n    setRange$3: function($receiver, start, end, iterable) {\n      return this.setRange$4($receiver, start, end, iterable, 0);\n    },\n    fillRange$3: function(receiver, start, end, fillValue) {\n      var i;\n      if (!!receiver.immutable$list)\n        H.throwExpression(P.UnsupportedError$(\"fill range\"));\n      P.RangeError_checkValidRange(start, end, receiver.length);\n      for (i = start; i < end; ++i)\n        receiver[i] = fillValue;\n    },\n    any$1: function(receiver, test) {\n      var i,\n        end = receiver.length;\n      for (i = 0; i < end; ++i) {\n        if (test.call$1(receiver[i]))\n          return true;\n        if (receiver.length !== end)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return false;\n    },\n    every$1: function(receiver, test) {\n      var i,\n        end = receiver.length;\n      for (i = 0; i < end; ++i) {\n        if (!test.call$1(receiver[i]))\n          return false;\n        if (receiver.length !== end)\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return true;\n    },\n    get$reversed: function(receiver) {\n      return new H.ReversedListIterable(receiver, H._arrayInstanceType(receiver)._eval$1(\"ReversedListIterable<1>\"));\n    },\n    sort$1: function(receiver, compare) {\n      if (!!receiver.immutable$list)\n        H.throwExpression(P.UnsupportedError$(\"sort\"));\n      H.Sort_sort(receiver, compare == null ? J._interceptors_JSArray__compareAny$closure() : compare);\n    },\n    sort$0: function($receiver) {\n      return this.sort$1($receiver, null);\n    },\n    indexOf$1: function(receiver, element) {\n      var i,\n        $length = receiver.length;\n      if (0 >= $length)\n        return -1;\n      for (i = 0; i < $length; ++i)\n        if (J.$eq$(receiver[i], element))\n          return i;\n      return -1;\n    },\n    contains$1: function(receiver, other) {\n      var i;\n      for (i = 0; i < receiver.length; ++i)\n        if (J.$eq$(receiver[i], other))\n          return true;\n      return false;\n    },\n    get$isEmpty: function(receiver) {\n      return receiver.length === 0;\n    },\n    get$isNotEmpty: function(receiver) {\n      return receiver.length !== 0;\n    },\n    toString$0: function(receiver) {\n      return P.IterableBase_iterableToFullString(receiver, \"[\", \"]\");\n    },\n    toList$1$growable: function(receiver, growable) {\n      var t1 = H._arrayInstanceType(receiver);\n      return growable ? H.setRuntimeTypeInfo(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(receiver) {\n      return P.LinkedHashSet_LinkedHashSet$from(receiver, H._arrayInstanceType(receiver)._precomputed1);\n    },\n    get$iterator: function(receiver) {\n      return new J.ArrayIterator(receiver, receiver.length);\n    },\n    get$hashCode: function(receiver) {\n      return H.Primitives_objectHashCode(receiver);\n    },\n    get$length: function(receiver) {\n      return receiver.length;\n    },\n    set$length: function(receiver, newLength) {\n      if (!!receiver.fixed$length)\n        H.throwExpression(P.UnsupportedError$(\"set length\"));\n      if (newLength < 0)\n        throw H.wrapException(P.RangeError$range(newLength, 0, null, \"newLength\", null));\n      receiver.length = newLength;\n    },\n    $index: function(receiver, index) {\n      if (!H._isInt(index))\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      if (index >= receiver.length || index < 0)\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      return receiver[index];\n    },\n    $indexSet: function(receiver, index, value) {\n      if (!!receiver.immutable$list)\n        H.throwExpression(P.UnsupportedError$(\"indexed set\"));\n      if (!H._isInt(index))\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      if (index >= receiver.length || index < 0)\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      receiver[index] = value;\n    },\n    $add: function(receiver, other) {\n      var t2, _i,\n        t1 = H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));\n      for (t2 = receiver.length, _i = 0; _i < receiver.length; receiver.length === t2 || (0, H.throwConcurrentModificationError)(receiver), ++_i)\n        t1.push(receiver[_i]);\n      for (t2 = other.length, _i = 0; _i < other.length; other.length === t2 || (0, H.throwConcurrentModificationError)(other), ++_i)\n        t1.push(other[_i]);\n      return t1;\n    },\n    $isEfficientLengthIterable: 1,\n    $isIterable: 1,\n    $isList: 1\n  };\n  J.JSUnmodifiableArray.prototype = {};\n  J.ArrayIterator.prototype = {\n    get$current: function(_) {\n      return this._current;\n    },\n    moveNext$0: function() {\n      var t2, _this = this,\n        t1 = _this._iterable,\n        $length = t1.length;\n      if (_this._length !== $length)\n        throw H.wrapException(H.throwConcurrentModificationError(t1));\n      t2 = _this._index;\n      if (t2 >= $length) {\n        _this._current = null;\n        return false;\n      }\n      _this._current = t1[t2];\n      _this._index = t2 + 1;\n      return true;\n    }\n  };\n  J.JSNumber.prototype = {\n    compareTo$1: function(receiver, b) {\n      var bIsNegative;\n      if (typeof b != \"number\")\n        throw H.wrapException(H.argumentErrorValue(b));\n      if (receiver < b)\n        return -1;\n      else if (receiver > b)\n        return 1;\n      else if (receiver === b) {\n        if (receiver === 0) {\n          bIsNegative = this.get$isNegative(b);\n          if (this.get$isNegative(receiver) === bIsNegative)\n            return 0;\n          if (this.get$isNegative(receiver))\n            return -1;\n          return 1;\n        }\n        return 0;\n      } else if (isNaN(receiver)) {\n        if (isNaN(b))\n          return 0;\n        return 1;\n      } else\n        return -1;\n    },\n    get$isNegative: function(receiver) {\n      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;\n    },\n    ceil$0: function(receiver) {\n      var truncated, d;\n      if (receiver >= 0) {\n        if (receiver <= 2147483647) {\n          truncated = receiver | 0;\n          return receiver === truncated ? truncated : truncated + 1;\n        }\n      } else if (receiver >= -2147483648)\n        return receiver | 0;\n      d = Math.ceil(receiver);\n      if (isFinite(d))\n        return d;\n      throw H.wrapException(P.UnsupportedError$(\"\" + receiver + \".ceil()\"));\n    },\n    floor$0: function(receiver) {\n      var truncated, d;\n      if (receiver >= 0) {\n        if (receiver <= 2147483647)\n          return receiver | 0;\n      } else if (receiver >= -2147483648) {\n        truncated = receiver | 0;\n        return receiver === truncated ? truncated : truncated - 1;\n      }\n      d = Math.floor(receiver);\n      if (isFinite(d))\n        return d;\n      throw H.wrapException(P.UnsupportedError$(\"\" + receiver + \".floor()\"));\n    },\n    round$0: function(receiver) {\n      if (receiver > 0) {\n        if (receiver !== 1 / 0)\n          return Math.round(receiver);\n      } else if (receiver > -1 / 0)\n        return 0 - Math.round(0 - receiver);\n      throw H.wrapException(P.UnsupportedError$(\"\" + receiver + \".round()\"));\n    },\n    clamp$2: function(receiver, lowerLimit, upperLimit) {\n      if (C.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)\n        throw H.wrapException(H.argumentErrorValue(lowerLimit));\n      if (this.compareTo$1(receiver, lowerLimit) < 0)\n        return lowerLimit;\n      if (this.compareTo$1(receiver, upperLimit) > 0)\n        return upperLimit;\n      return receiver;\n    },\n    toRadixString$1: function(receiver, radix) {\n      var result, match, exponent, t1;\n      if (radix < 2 || radix > 36)\n        throw H.wrapException(P.RangeError$range(radix, 2, 36, \"radix\", null));\n      result = receiver.toString(radix);\n      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)\n        return result;\n      match = /^([\\da-z]+)(?:\\.([\\da-z]+))?\\(e\\+(\\d+)\\)$/.exec(result);\n      if (match == null)\n        H.throwExpression(P.UnsupportedError$(\"Unexpected toString result: \" + result));\n      result = match[1];\n      exponent = +match[3];\n      t1 = match[2];\n      if (t1 != null) {\n        result += t1;\n        exponent -= t1.length;\n      }\n      return result + C.JSString_methods.$mul(\"0\", exponent);\n    },\n    toString$0: function(receiver) {\n      if (receiver === 0 && 1 / receiver < 0)\n        return \"-0.0\";\n      else\n        return \"\" + receiver;\n    },\n    get$hashCode: function(receiver) {\n      var absolute, floorLog2, factor, scaled,\n        intValue = receiver | 0;\n      if (receiver === intValue)\n        return 536870911 & intValue;\n      absolute = Math.abs(receiver);\n      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;\n      factor = Math.pow(2, floorLog2);\n      scaled = absolute < 1 ? absolute / factor : factor / absolute;\n      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;\n    },\n    $add: function(receiver, other) {\n      if (typeof other != \"number\")\n        throw H.wrapException(H.argumentErrorValue(other));\n      return receiver + other;\n    },\n    $mod: function(receiver, other) {\n      var result = receiver % other;\n      if (result === 0)\n        return 0;\n      if (result > 0)\n        return result;\n      if (other < 0)\n        return result - other;\n      else\n        return result + other;\n    },\n    $tdiv: function(receiver, other) {\n      if ((receiver | 0) === receiver)\n        if (other >= 1 || other < -1)\n          return receiver / other | 0;\n      return this._tdivSlow$1(receiver, other);\n    },\n    _tdivFast$1: function(receiver, other) {\n      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);\n    },\n    _tdivSlow$1: function(receiver, other) {\n      var quotient = receiver / other;\n      if (quotient >= -2147483648 && quotient <= 2147483647)\n        return quotient | 0;\n      if (quotient > 0) {\n        if (quotient !== 1 / 0)\n          return Math.floor(quotient);\n      } else if (quotient > -1 / 0)\n        return Math.ceil(quotient);\n      throw H.wrapException(P.UnsupportedError$(\"Result of truncating division is \" + H.S(quotient) + \": \" + H.S(receiver) + \" ~/ \" + other));\n    },\n    _shrOtherPositive$1: function(receiver, other) {\n      var t1;\n      if (receiver > 0)\n        t1 = this._shrBothPositive$1(receiver, other);\n      else {\n        t1 = other > 31 ? 31 : other;\n        t1 = receiver >> t1 >>> 0;\n      }\n      return t1;\n    },\n    _shrReceiverPositive$1: function(receiver, other) {\n      if (other < 0)\n        throw H.wrapException(H.argumentErrorValue(other));\n      return this._shrBothPositive$1(receiver, other);\n    },\n    _shrBothPositive$1: function(receiver, other) {\n      return other > 31 ? 0 : receiver >>> other;\n    },\n    $isComparable: 1,\n    $isdouble: 1,\n    $isnum: 1\n  };\n  J.JSInt.prototype = {$isint: 1};\n  J.JSDouble.prototype = {};\n  J.JSString.prototype = {\n    codeUnitAt$1: function(receiver, index) {\n      if (!H._isInt(index))\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      if (index < 0)\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      if (index >= receiver.length)\n        H.throwExpression(H.diagnoseIndexError(receiver, index));\n      return receiver.charCodeAt(index);\n    },\n    _codeUnitAt$1: function(receiver, index) {\n      if (index >= receiver.length)\n        throw H.wrapException(H.diagnoseIndexError(receiver, index));\n      return receiver.charCodeAt(index);\n    },\n    allMatches$2: function(receiver, string, start) {\n      var t1;\n      if (typeof string != \"string\")\n        H.throwExpression(H.argumentErrorValue(string));\n      t1 = string.length;\n      if (start > t1)\n        throw H.wrapException(P.RangeError$range(start, 0, t1, null, null));\n      return new H._StringAllMatchesIterable(string, receiver, start);\n    },\n    allMatches$1: function($receiver, string) {\n      return this.allMatches$2($receiver, string, 0);\n    },\n    matchAsPrefix$2: function(receiver, string, start) {\n      var t1, t2, i, _null = null;\n      if (start < 0 || start > string.length)\n        throw H.wrapException(P.RangeError$range(start, 0, string.length, _null, _null));\n      t1 = receiver.length;\n      if (start + t1 > string.length)\n        return _null;\n      for (t2 = J.getInterceptor$s(string), i = 0; i < t1; ++i)\n        if (t2.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))\n          return _null;\n      return new H.StringMatch(start, receiver);\n    },\n    $add: function(receiver, other) {\n      if (typeof other != \"string\")\n        throw H.wrapException(P.ArgumentError$value(other, null, null));\n      return receiver + other;\n    },\n    endsWith$1: function(receiver, other) {\n      var otherLength = other.length,\n        t1 = receiver.length;\n      if (otherLength > t1)\n        return false;\n      return other === this.substring$1(receiver, t1 - otherLength);\n    },\n    replaceFirst$2: function(receiver, from, to) {\n      P.RangeError_checkValueInInterval(0, 0, receiver.length, \"startIndex\");\n      return H.stringReplaceFirstUnchecked(receiver, from, to, 0);\n    },\n    split$1: function(receiver, pattern) {\n      if (pattern == null)\n        H.throwExpression(H.argumentErrorValue(pattern));\n      if (typeof pattern == \"string\")\n        return H.setRuntimeTypeInfo(receiver.split(pattern), type$.JSArray_String);\n      else if (pattern instanceof H.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec(\"\").length - 2 === 0)\n        return H.setRuntimeTypeInfo(receiver.split(pattern._nativeRegExp), type$.JSArray_String);\n      else\n        return this._defaultSplit$1(receiver, pattern);\n    },\n    replaceRange$3: function(receiver, start, end, replacement) {\n      var e;\n      if (typeof replacement != \"string\")\n        H.throwExpression(H.argumentErrorValue(replacement));\n      e = P.RangeError_checkValidRange(start, end, receiver.length);\n      return H.stringReplaceRangeUnchecked(receiver, start, e, replacement);\n    },\n    _defaultSplit$1: function(receiver, pattern) {\n      var t1, start, $length, match, matchStart, matchEnd,\n        result = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {\n        match = t1.get$current(t1);\n        matchStart = match.get$start(match);\n        matchEnd = match.get$end(match);\n        $length = matchEnd - matchStart;\n        if ($length === 0 && start === matchStart)\n          continue;\n        result.push(this.substring$2(receiver, start, matchStart));\n        start = matchEnd;\n      }\n      if (start < receiver.length || $length > 0)\n        result.push(this.substring$1(receiver, start));\n      return result;\n    },\n    startsWith$2: function(receiver, pattern, index) {\n      var endIndex;\n      if (index < 0 || index > receiver.length)\n        throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));\n      if (typeof pattern == \"string\") {\n        endIndex = index + pattern.length;\n        if (endIndex > receiver.length)\n          return false;\n        return pattern === receiver.substring(index, endIndex);\n      }\n      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;\n    },\n    startsWith$1: function($receiver, pattern) {\n      return this.startsWith$2($receiver, pattern, 0);\n    },\n    substring$2: function(receiver, startIndex, endIndex) {\n      var _null = null;\n      if (endIndex == null)\n        endIndex = receiver.length;\n      if (startIndex < 0)\n        throw H.wrapException(P.RangeError$value(startIndex, _null, _null));\n      if (startIndex > endIndex)\n        throw H.wrapException(P.RangeError$value(startIndex, _null, _null));\n      if (endIndex > receiver.length)\n        throw H.wrapException(P.RangeError$value(endIndex, _null, _null));\n      return receiver.substring(startIndex, endIndex);\n    },\n    substring$1: function($receiver, startIndex) {\n      return this.substring$2($receiver, startIndex, null);\n    },\n    trim$0: function(receiver) {\n      var startIndex, t1, endIndex0,\n        result = receiver.trim(),\n        endIndex = result.length;\n      if (endIndex === 0)\n        return result;\n      if (this._codeUnitAt$1(result, 0) === 133) {\n        startIndex = J.JSString__skipLeadingWhitespace(result, 1);\n        if (startIndex === endIndex)\n          return \"\";\n      } else\n        startIndex = 0;\n      t1 = endIndex - 1;\n      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;\n      if (startIndex === 0 && endIndex0 === endIndex)\n        return result;\n      return result.substring(startIndex, endIndex0);\n    },\n    trimRight$0: function(receiver) {\n      var result, endIndex, t1;\n      if (typeof receiver.trimRight != \"undefined\") {\n        result = receiver.trimRight();\n        endIndex = result.length;\n        if (endIndex === 0)\n          return result;\n        t1 = endIndex - 1;\n        if (this.codeUnitAt$1(result, t1) === 133)\n          endIndex = J.JSString__skipTrailingWhitespace(result, t1);\n      } else {\n        endIndex = J.JSString__skipTrailingWhitespace(receiver, receiver.length);\n        result = receiver;\n      }\n      if (endIndex === result.length)\n        return result;\n      if (endIndex === 0)\n        return \"\";\n      return result.substring(0, endIndex);\n    },\n    $mul: function(receiver, times) {\n      var s, result;\n      if (0 >= times)\n        return \"\";\n      if (times === 1 || receiver.length === 0)\n        return receiver;\n      if (times !== times >>> 0)\n        throw H.wrapException(C.C_OutOfMemoryError);\n      for (s = receiver, result = \"\"; true;) {\n        if ((times & 1) === 1)\n          result = s + result;\n        times = times >>> 1;\n        if (times === 0)\n          break;\n        s += s;\n      }\n      return result;\n    },\n    padLeft$2: function(receiver, width, padding) {\n      var delta = width - receiver.length;\n      if (delta <= 0)\n        return receiver;\n      return this.$mul(padding, delta) + receiver;\n    },\n    padRight$1: function(receiver, width) {\n      var delta = width - receiver.length;\n      if (delta <= 0)\n        return receiver;\n      return receiver + this.$mul(\" \", delta);\n    },\n    indexOf$2: function(receiver, pattern, start) {\n      var t1, t2, i;\n      if (pattern == null)\n        H.throwExpression(H.argumentErrorValue(pattern));\n      if (start < 0 || start > receiver.length)\n        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));\n      if (typeof pattern == \"string\")\n        return receiver.indexOf(pattern, start);\n      for (t1 = receiver.length, t2 = J.getInterceptor$s(pattern), i = start; i <= t1; ++i)\n        if (t2.matchAsPrefix$2(pattern, receiver, i) != null)\n          return i;\n      return -1;\n    },\n    indexOf$1: function($receiver, pattern) {\n      return this.indexOf$2($receiver, pattern, 0);\n    },\n    lastIndexOf$2: function(receiver, pattern, start) {\n      var t1, t2, i;\n      if (pattern == null)\n        H.throwExpression(H.argumentErrorValue(pattern));\n      if (start == null)\n        start = receiver.length;\n      else if (start < 0 || start > receiver.length)\n        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));\n      if (typeof pattern == \"string\") {\n        t1 = pattern.length;\n        t2 = receiver.length;\n        if (start + t1 > t2)\n          start = t2 - t1;\n        return receiver.lastIndexOf(pattern, start);\n      }\n      for (t1 = J.getInterceptor$s(pattern), i = start; i >= 0; --i)\n        if (t1.matchAsPrefix$2(pattern, receiver, i) != null)\n          return i;\n      return -1;\n    },\n    lastIndexOf$1: function($receiver, pattern) {\n      return this.lastIndexOf$2($receiver, pattern, null);\n    },\n    contains$2: function(receiver, other, startIndex) {\n      var t1;\n      if (other == null)\n        H.throwExpression(H.argumentErrorValue(other));\n      t1 = receiver.length;\n      if (startIndex > t1)\n        throw H.wrapException(P.RangeError$range(startIndex, 0, t1, null, null));\n      return H.stringContainsUnchecked(receiver, other, startIndex);\n    },\n    contains$1: function($receiver, other) {\n      return this.contains$2($receiver, other, 0);\n    },\n    get$isNotEmpty: function(receiver) {\n      return receiver.length !== 0;\n    },\n    compareTo$1: function(receiver, other) {\n      var t1;\n      if (typeof other != \"string\")\n        throw H.wrapException(H.argumentErrorValue(other));\n      if (receiver === other)\n        t1 = 0;\n      else\n        t1 = receiver < other ? -1 : 1;\n      return t1;\n    },\n    toString$0: function(receiver) {\n      return receiver;\n    },\n    get$hashCode: function(receiver) {\n      var t1, hash, i;\n      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {\n        hash = 536870911 & hash + receiver.charCodeAt(i);\n        hash = 536870911 & hash + ((524287 & hash) << 10);\n        hash ^= hash >> 6;\n      }\n      hash = 536870911 & hash + ((67108863 & hash) << 3);\n      hash ^= hash >> 11;\n      return 536870911 & hash + ((16383 & hash) << 15);\n    },\n    get$length: function(receiver) {\n      return receiver.length;\n    },\n    $isComparable: 1,\n    $isString: 1\n  };\n  H._CastIterableBase.prototype = {\n    get$iterator: function(_) {\n      var t1 = H._instanceType(this);\n      return new H.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1(\"@<1>\")._bind$1(t1._rest[1])._eval$1(\"CastIterator<1,2>\"));\n    },\n    get$length: function(_) {\n      return J.get$length$asx(this.get$_source());\n    },\n    get$isEmpty: function(_) {\n      return J.get$isEmpty$asx(this.get$_source());\n    },\n    get$isNotEmpty: function(_) {\n      return J.get$isNotEmpty$asx(this.get$_source());\n    },\n    skip$1: function(_, count) {\n      var t1 = H._instanceType(this);\n      return H.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);\n    },\n    take$1: function(_, count) {\n      var t1 = H._instanceType(this);\n      return H.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);\n    },\n    elementAt$1: function(_, index) {\n      return H._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));\n    },\n    get$first: function(_) {\n      return H._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));\n    },\n    get$last: function(_) {\n      return H._instanceType(this)._rest[1]._as(J.get$last$ax(this.get$_source()));\n    },\n    get$single: function(_) {\n      return H._instanceType(this)._rest[1]._as(J.get$single$ax(this.get$_source()));\n    },\n    contains$1: function(_, other) {\n      return J.contains$1$asx(this.get$_source(), other);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.get$_source());\n    }\n  };\n  H.CastIterator.prototype = {\n    moveNext$0: function() {\n      return this._source.moveNext$0();\n    },\n    get$current: function(_) {\n      var t1 = this._source;\n      return this.$ti._rest[1]._as(t1.get$current(t1));\n    }\n  };\n  H.CastIterable.prototype = {\n    cast$1$0: function(_, $R) {\n      return H.CastIterable_CastIterable(this._source, H._instanceType(this)._precomputed1, $R);\n    },\n    get$_source: function() {\n      return this._source;\n    }\n  };\n  H._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};\n  H._CastListBase.prototype = {\n    $index: function(_, index) {\n      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));\n    },\n    $indexSet: function(_, index, value) {\n      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));\n    },\n    set$length: function(_, $length) {\n      J.set$length$asx(this._source, $length);\n    },\n    add$1: function(_, value) {\n      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));\n    },\n    addAll$1: function(_, values) {\n      var t1 = this.$ti;\n      J.addAll$1$ax(this._source, H.CastIterable_CastIterable(values, t1._rest[1], t1._precomputed1));\n    },\n    sort$1: function(_, compare) {\n      var t1 = compare == null ? null : new H._CastListBase_sort_closure(this, compare);\n      J.sort$1$ax(this._source, t1);\n    },\n    getRange$2: function(_, start, end) {\n      var t1 = this.$ti;\n      return H.CastIterable_CastIterable(J.getRange$2$ax(this._source, start, end), t1._precomputed1, t1._rest[1]);\n    },\n    setRange$4: function(_, start, end, iterable, skipCount) {\n      var t1 = this.$ti;\n      J.setRange$4$ax(this._source, start, end, H.CastIterable_CastIterable(iterable, t1._rest[1], t1._precomputed1), skipCount);\n    },\n    fillRange$3: function(_, start, end, fillValue) {\n      J.fillRange$3$ax(this._source, start, end, this.$ti._precomputed1._as(fillValue));\n    },\n    $isEfficientLengthIterable: 1,\n    $isList: 1\n  };\n  H._CastListBase_sort_closure.prototype = {\n    call$2: function(v1, v2) {\n      var t1 = this.$this.$ti._rest[1];\n      return this.compare.call$2(t1._as(v1), t1._as(v2));\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"int(1,1)\");\n    }\n  };\n  H.CastList.prototype = {\n    cast$1$0: function(_, $R) {\n      return new H.CastList(this._source, this.$ti._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"CastList<1,2>\"));\n    },\n    get$_source: function() {\n      return this._source;\n    }\n  };\n  H.CastSet.prototype = {\n    cast$1$0: function(_, $R) {\n      return new H.CastSet(this._source, this._emptySet, this.$ti._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"CastSet<1,2>\"));\n    },\n    add$1: function(_, value) {\n      return this._source.add$1(0, this.$ti._precomputed1._as(value));\n    },\n    addAll$1: function(_, elements) {\n      var t1 = this.$ti;\n      this._source.addAll$1(0, H.CastIterable_CastIterable(elements, t1._rest[1], t1._precomputed1));\n    },\n    toSet$0: function(_) {\n      var emptySet = this._emptySet,\n        t1 = this.$ti._rest[1],\n        result = emptySet == null ? P.LinkedHashSet_LinkedHashSet(t1) : emptySet.call$1$0(t1);\n      result.addAll$1(0, this);\n      return result;\n    },\n    $isEfficientLengthIterable: 1,\n    $isSet: 1,\n    get$_source: function() {\n      return this._source;\n    }\n  };\n  H.CastQueue.prototype = {\n    cast$1$0: function(_, $R) {\n      return new H.CastQueue(this._source, this.$ti._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"CastQueue<1,2>\"));\n    },\n    add$1: function(_, value) {\n      this._source._add$1(this.$ti._precomputed1._as(value));\n    },\n    $isEfficientLengthIterable: 1,\n    $isQueue: 1,\n    get$_source: function() {\n      return this._source;\n    }\n  };\n  H.LateInitializationErrorImpl.prototype = {\n    toString$0: function(_) {\n      var t1 = \"LateInitializationError: \" + this.__internal$_message;\n      return t1;\n    }\n  };\n  H.CodeUnits.prototype = {\n    get$length: function(_) {\n      return this._string.length;\n    },\n    $index: function(_, i) {\n      return C.JSString_methods.codeUnitAt$1(this._string, i);\n    }\n  };\n  H.EfficientLengthIterable.prototype = {};\n  H.ListIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.ListIterator(this, this.get$length(this));\n    },\n    get$isEmpty: function(_) {\n      return this.get$length(this) === 0;\n    },\n    get$first: function(_) {\n      if (this.get$length(this) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      return this.elementAt$1(0, 0);\n    },\n    get$last: function(_) {\n      var _this = this;\n      if (_this.get$length(_this) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      return _this.elementAt$1(0, _this.get$length(_this) - 1);\n    },\n    get$single: function(_) {\n      var _this = this;\n      if (_this.get$length(_this) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      if (_this.get$length(_this) > 1)\n        throw H.wrapException(H.IterableElementError_tooMany());\n      return _this.elementAt$1(0, 0);\n    },\n    contains$1: function(_, element) {\n      var i, _this = this,\n        $length = _this.get$length(_this);\n      for (i = 0; i < $length; ++i) {\n        if (J.$eq$(_this.elementAt$1(0, i), element))\n          return true;\n        if ($length !== _this.get$length(_this))\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n      return false;\n    },\n    any$1: function(_, test) {\n      var i, _this = this,\n        $length = _this.get$length(_this);\n      for (i = 0; i < $length; ++i) {\n        if (test.call$1(_this.elementAt$1(0, i)))\n          return true;\n        if ($length !== _this.get$length(_this))\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n      return false;\n    },\n    join$1: function(_, separator) {\n      var first, t1, i, _this = this,\n        $length = _this.get$length(_this);\n      if (separator.length !== 0) {\n        if ($length === 0)\n          return \"\";\n        first = H.S(_this.elementAt$1(0, 0));\n        if ($length !== _this.get$length(_this))\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n        for (t1 = first, i = 1; i < $length; ++i) {\n          t1 = t1 + separator + H.S(_this.elementAt$1(0, i));\n          if ($length !== _this.get$length(_this))\n            throw H.wrapException(P.ConcurrentModificationError$(_this));\n        }\n        return t1.charCodeAt(0) == 0 ? t1 : t1;\n      } else {\n        for (i = 0, t1 = \"\"; i < $length; ++i) {\n          t1 += H.S(_this.elementAt$1(0, i));\n          if ($length !== _this.get$length(_this))\n            throw H.wrapException(P.ConcurrentModificationError$(_this));\n        }\n        return t1.charCodeAt(0) == 0 ? t1 : t1;\n      }\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    where$1: function(_, test) {\n      return this.super$Iterable$where(0, test);\n    },\n    map$1$1: function(_, f, $T) {\n      return new H.MappedListIterable(this, f, H._instanceType(this)._eval$1(\"@<ListIterable.E>\")._bind$1($T)._eval$1(\"MappedListIterable<1,2>\"));\n    },\n    reduce$1: function(_, combine) {\n      var value, i, _this = this,\n        $length = _this.get$length(_this);\n      if ($length === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      value = _this.elementAt$1(0, 0);\n      for (i = 1; i < $length; ++i) {\n        value = combine.call$2(value, _this.elementAt$1(0, i));\n        if ($length !== _this.get$length(_this))\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n      return value;\n    },\n    fold$1$2: function(_, initialValue, combine) {\n      var value, i, _this = this,\n        $length = _this.get$length(_this);\n      for (value = initialValue, i = 0; i < $length; ++i) {\n        value = combine.call$2(value, _this.elementAt$1(0, i));\n        if ($length !== _this.get$length(_this))\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n      return value;\n    },\n    fold$2: function($receiver, initialValue, combine) {\n      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);\n    },\n    skip$1: function(_, count) {\n      return H.SubListIterable$(this, count, null, H._instanceType(this)._eval$1(\"ListIterable.E\"));\n    },\n    take$1: function(_, count) {\n      return H.SubListIterable$(this, 0, count, H._instanceType(this)._eval$1(\"ListIterable.E\"));\n    },\n    toList$1$growable: function(_, growable) {\n      return P.List_List$from(this, growable, H._instanceType(this)._eval$1(\"ListIterable.E\"));\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(_) {\n      var i, _this = this,\n        result = P.LinkedHashSet_LinkedHashSet(H._instanceType(_this)._eval$1(\"ListIterable.E\"));\n      for (i = 0; i < _this.get$length(_this); ++i)\n        result.add$1(0, _this.elementAt$1(0, i));\n      return result;\n    }\n  };\n  H.SubListIterable.prototype = {\n    SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {\n      var endOrLength,\n        t1 = this._start;\n      P.RangeError_checkNotNegative(t1, \"start\");\n      endOrLength = this._endOrLength;\n      if (endOrLength != null) {\n        P.RangeError_checkNotNegative(endOrLength, \"end\");\n        if (t1 > endOrLength)\n          throw H.wrapException(P.RangeError$range(t1, 0, endOrLength, \"start\", null));\n      }\n    },\n    get$_endIndex: function() {\n      var $length = J.get$length$asx(this.__internal$_iterable),\n        endOrLength = this._endOrLength;\n      if (endOrLength == null || endOrLength > $length)\n        return $length;\n      return endOrLength;\n    },\n    get$_startIndex: function() {\n      var $length = J.get$length$asx(this.__internal$_iterable),\n        t1 = this._start;\n      if (t1 > $length)\n        return $length;\n      return t1;\n    },\n    get$length: function(_) {\n      var endOrLength,\n        $length = J.get$length$asx(this.__internal$_iterable),\n        t1 = this._start;\n      if (t1 >= $length)\n        return 0;\n      endOrLength = this._endOrLength;\n      if (endOrLength == null || endOrLength >= $length)\n        return $length - t1;\n      return endOrLength - t1;\n    },\n    elementAt$1: function(_, index) {\n      var _this = this,\n        realIndex = _this.get$_startIndex() + index;\n      if (index < 0 || realIndex >= _this.get$_endIndex())\n        throw H.wrapException(P.IndexError$(index, _this, \"index\", null, null));\n      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);\n    },\n    skip$1: function(_, count) {\n      var newStart, endOrLength, _this = this;\n      P.RangeError_checkNotNegative(count, \"count\");\n      newStart = _this._start + count;\n      endOrLength = _this._endOrLength;\n      if (endOrLength != null && newStart >= endOrLength)\n        return new H.EmptyIterable(_this.$ti._eval$1(\"EmptyIterable<1>\"));\n      return H.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);\n    },\n    take$1: function(_, count) {\n      var endOrLength, t1, newEnd, _this = this;\n      P.RangeError_checkNotNegative(count, \"count\");\n      endOrLength = _this._endOrLength;\n      t1 = _this._start;\n      if (endOrLength == null)\n        return H.SubListIterable$(_this.__internal$_iterable, t1, t1 + count, _this.$ti._precomputed1);\n      else {\n        newEnd = t1 + count;\n        if (endOrLength < newEnd)\n          return _this;\n        return H.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);\n      }\n    },\n    toList$1$growable: function(_, growable) {\n      var $length, result, i, _this = this,\n        start = _this._start,\n        t1 = _this.__internal$_iterable,\n        t2 = J.getInterceptor$asx(t1),\n        end = t2.get$length(t1),\n        endOrLength = _this._endOrLength;\n      if (endOrLength != null && endOrLength < end)\n        end = endOrLength;\n      $length = end - start;\n      if ($length <= 0) {\n        t1 = _this.$ti._precomputed1;\n        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);\n      }\n      result = P.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);\n      for (i = 1; i < $length; ++i) {\n        result[i] = t2.elementAt$1(t1, start + i);\n        if (t2.get$length(t1) < end)\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n      return result;\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    }\n  };\n  H.ListIterator.prototype = {\n    get$current: function(_) {\n      var cur = this.__internal$_current;\n      return cur;\n    },\n    moveNext$0: function() {\n      var t3, _this = this,\n        t1 = _this.__internal$_iterable,\n        t2 = J.getInterceptor$asx(t1),\n        $length = t2.get$length(t1);\n      if (_this.__internal$_length !== $length)\n        throw H.wrapException(P.ConcurrentModificationError$(t1));\n      t3 = _this.__internal$_index;\n      if (t3 >= $length) {\n        _this.__internal$_current = null;\n        return false;\n      }\n      _this.__internal$_current = t2.elementAt$1(t1, t3);\n      ++_this.__internal$_index;\n      return true;\n    }\n  };\n  H.MappedIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);\n    },\n    get$length: function(_) {\n      return J.get$length$asx(this.__internal$_iterable);\n    },\n    get$isEmpty: function(_) {\n      return J.get$isEmpty$asx(this.__internal$_iterable);\n    },\n    get$first: function(_) {\n      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));\n    },\n    get$last: function(_) {\n      return this._f.call$1(J.get$last$ax(this.__internal$_iterable));\n    },\n    get$single: function(_) {\n      return this._f.call$1(J.get$single$ax(this.__internal$_iterable));\n    },\n    elementAt$1: function(_, index) {\n      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));\n    }\n  };\n  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};\n  H.MappedIterator.prototype = {\n    moveNext$0: function() {\n      var _this = this,\n        t1 = _this._iterator;\n      if (t1.moveNext$0()) {\n        _this.__internal$_current = _this._f.call$1(t1.get$current(t1));\n        return true;\n      }\n      _this.__internal$_current = null;\n      return false;\n    },\n    get$current: function(_) {\n      var cur = this.__internal$_current;\n      return cur;\n    }\n  };\n  H.MappedListIterable.prototype = {\n    get$length: function(_) {\n      return J.get$length$asx(this._source);\n    },\n    elementAt$1: function(_, index) {\n      return this._f.call$1(J.elementAt$1$ax(this._source, index));\n    }\n  };\n  H.WhereIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);\n    },\n    map$1$1: function(_, f, $T) {\n      return new H.MappedIterable(this, f, this.$ti._eval$1(\"@<1>\")._bind$1($T)._eval$1(\"MappedIterable<1,2>\"));\n    }\n  };\n  H.WhereIterator.prototype = {\n    moveNext$0: function() {\n      var t1, t2;\n      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)\n        if (t2.call$1(t1.get$current(t1)))\n          return true;\n      return false;\n    },\n    get$current: function(_) {\n      var t1 = this._iterator;\n      return t1.get$current(t1);\n    }\n  };\n  H.ExpandIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, C.C_EmptyIterator);\n    }\n  };\n  H.ExpandIterator.prototype = {\n    get$current: function(_) {\n      var cur = this.__internal$_current;\n      return cur;\n    },\n    moveNext$0: function() {\n      var t2, t3, _this = this,\n        t1 = _this._currentExpansion;\n      if (t1 == null)\n        return false;\n      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {\n        _this.__internal$_current = null;\n        if (t2.moveNext$0()) {\n          _this._currentExpansion = null;\n          t1 = J.get$iterator$ax(t3.call$1(t2.get$current(t2)));\n          _this._currentExpansion = t1;\n        } else\n          return false;\n      }\n      t1 = _this._currentExpansion;\n      _this.__internal$_current = t1.get$current(t1);\n      return true;\n    }\n  };\n  H.TakeIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount);\n    }\n  };\n  H.EfficientLengthTakeIterable.prototype = {\n    get$length: function(_) {\n      var iterableLength = J.get$length$asx(this.__internal$_iterable),\n        t1 = this._takeCount;\n      if (iterableLength > t1)\n        return t1;\n      return iterableLength;\n    },\n    $isEfficientLengthIterable: 1\n  };\n  H.TakeIterator.prototype = {\n    moveNext$0: function() {\n      if (--this._remaining >= 0)\n        return this._iterator.moveNext$0();\n      this._remaining = -1;\n      return false;\n    },\n    get$current: function(_) {\n      var t1;\n      if (this._remaining < 0)\n        return null;\n      t1 = this._iterator;\n      return t1.get$current(t1);\n    }\n  };\n  H.SkipIterable.prototype = {\n    skip$1: function(_, count) {\n      P.ArgumentError_checkNotNull(count, \"count\");\n      P.RangeError_checkNotNegative(count, \"count\");\n      return new H.SkipIterable(this.__internal$_iterable, this._skipCount + count, H._instanceType(this)._eval$1(\"SkipIterable<1>\"));\n    },\n    get$iterator: function(_) {\n      return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount);\n    }\n  };\n  H.EfficientLengthSkipIterable.prototype = {\n    get$length: function(_) {\n      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;\n      if ($length >= 0)\n        return $length;\n      return 0;\n    },\n    skip$1: function(_, count) {\n      P.ArgumentError_checkNotNull(count, \"count\");\n      P.RangeError_checkNotNegative(count, \"count\");\n      return new H.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);\n    },\n    $isEfficientLengthIterable: 1\n  };\n  H.SkipIterator.prototype = {\n    moveNext$0: function() {\n      var t1, i;\n      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)\n        t1.moveNext$0();\n      this._skipCount = 0;\n      return t1.moveNext$0();\n    },\n    get$current: function(_) {\n      var t1 = this._iterator;\n      return t1.get$current(t1);\n    }\n  };\n  H.SkipWhileIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);\n    }\n  };\n  H.SkipWhileIterator.prototype = {\n    moveNext$0: function() {\n      var t1, t2, _this = this;\n      if (!_this._hasSkipped) {\n        _this._hasSkipped = true;\n        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)\n          if (!t2.call$1(t1.get$current(t1)))\n            return true;\n      }\n      return _this._iterator.moveNext$0();\n    },\n    get$current: function(_) {\n      var t1 = this._iterator;\n      return t1.get$current(t1);\n    }\n  };\n  H.EmptyIterable.prototype = {\n    get$iterator: function(_) {\n      return C.C_EmptyIterator;\n    },\n    get$isEmpty: function(_) {\n      return true;\n    },\n    get$length: function(_) {\n      return 0;\n    },\n    get$first: function(_) {\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    get$last: function(_) {\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    get$single: function(_) {\n      throw H.wrapException(H.IterableElementError_noElement());\n    },\n    elementAt$1: function(_, index) {\n      throw H.wrapException(P.RangeError$range(index, 0, 0, \"index\", null));\n    },\n    contains$1: function(_, element) {\n      return false;\n    },\n    join$1: function(_, separator) {\n      return \"\";\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    where$1: function(_, test) {\n      return this;\n    },\n    map$1$1: function(_, f, $T) {\n      return new H.EmptyIterable($T._eval$1(\"EmptyIterable<0>\"));\n    },\n    skip$1: function(_, count) {\n      P.RangeError_checkNotNegative(count, \"count\");\n      return this;\n    },\n    take$1: function(_, count) {\n      P.RangeError_checkNotNegative(count, \"count\");\n      return this;\n    },\n    toList$1$growable: function(_, growable) {\n      var t1 = this.$ti._precomputed1;\n      return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(_) {\n      return P.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);\n    }\n  };\n  H.EmptyIterator.prototype = {\n    moveNext$0: function() {\n      return false;\n    },\n    get$current: function(_) {\n      throw H.wrapException(H.IterableElementError_noElement());\n    }\n  };\n  H.FollowedByIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.FollowedByIterator(J.get$iterator$ax(this.__internal$_first), this._second);\n    },\n    get$length: function(_) {\n      var t1 = this._second;\n      return J.get$length$asx(this.__internal$_first) + t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1;\n      if (J.get$isEmpty$asx(this.__internal$_first)) {\n        t1 = this._second;\n        t1 = t1.get$isEmpty(t1);\n      } else\n        t1 = false;\n      return t1;\n    },\n    get$isNotEmpty: function(_) {\n      var t1;\n      if (!J.get$isNotEmpty$asx(this.__internal$_first)) {\n        t1 = this._second;\n        t1 = t1.get$isNotEmpty(t1);\n      } else\n        t1 = true;\n      return t1;\n    },\n    contains$1: function(_, value) {\n      return J.contains$1$asx(this.__internal$_first, value) || this._second.contains$1(0, value);\n    },\n    get$first: function(_) {\n      var t1,\n        iterator = J.get$iterator$ax(this.__internal$_first);\n      if (iterator.moveNext$0())\n        return iterator.get$current(iterator);\n      t1 = this._second;\n      return t1.get$first(t1);\n    },\n    get$last: function(_) {\n      var last,\n        t1 = this._second,\n        iterator = t1.get$iterator(t1);\n      if (iterator.moveNext$0()) {\n        last = iterator.get$current(iterator);\n        for (; iterator.moveNext$0();)\n          last = iterator.get$current(iterator);\n        return last;\n      }\n      return J.get$last$ax(this.__internal$_first);\n    }\n  };\n  H.EfficientLengthFollowedByIterable.prototype = {\n    elementAt$1: function(_, index) {\n      var t1 = this.__internal$_first,\n        t2 = J.getInterceptor$asx(t1),\n        firstLength = t2.get$length(t1);\n      if (index < firstLength)\n        return t2.elementAt$1(t1, index);\n      return this._second.elementAt$1(0, index - firstLength);\n    },\n    get$first: function(_) {\n      var t1 = this.__internal$_first,\n        t2 = J.getInterceptor$asx(t1);\n      if (t2.get$isNotEmpty(t1))\n        return t2.get$first(t1);\n      t1 = this._second;\n      return t1.get$first(t1);\n    },\n    get$last: function(_) {\n      var t1 = this._second;\n      if (t1.get$isNotEmpty(t1))\n        return t1.get$last(t1);\n      return J.get$last$ax(this.__internal$_first);\n    },\n    $isEfficientLengthIterable: 1\n  };\n  H.FollowedByIterator.prototype = {\n    moveNext$0: function() {\n      var t1, _this = this;\n      if (_this._currentIterator.moveNext$0())\n        return true;\n      t1 = _this._nextIterable;\n      if (t1 != null) {\n        t1 = t1.get$iterator(t1);\n        _this._currentIterator = t1;\n        _this._nextIterable = null;\n        return t1.moveNext$0();\n      }\n      return false;\n    },\n    get$current: function(_) {\n      var t1 = this._currentIterator;\n      return t1.get$current(t1);\n    }\n  };\n  H.WhereTypeIterable.prototype = {\n    get$iterator: function(_) {\n      return new H.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1(\"WhereTypeIterator<1>\"));\n    }\n  };\n  H.WhereTypeIterator.prototype = {\n    moveNext$0: function() {\n      var t1, t2;\n      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)\n        if (t2._is(t1.get$current(t1)))\n          return true;\n      return false;\n    },\n    get$current: function(_) {\n      var t1 = this._source;\n      return this.$ti._precomputed1._as(t1.get$current(t1));\n    }\n  };\n  H.FixedLengthListMixin.prototype = {\n    set$length: function(receiver, newLength) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot change the length of a fixed-length list\"));\n    },\n    add$1: function(receiver, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot add to a fixed-length list\"));\n    },\n    addAll$1: function(receiver, iterable) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot add to a fixed-length list\"));\n    }\n  };\n  H.UnmodifiableListMixin.prototype = {\n    $indexSet: function(_, index, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable list\"));\n    },\n    set$length: function(_, newLength) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot change the length of an unmodifiable list\"));\n    },\n    add$1: function(_, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot add to an unmodifiable list\"));\n    },\n    addAll$1: function(_, iterable) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot add to an unmodifiable list\"));\n    },\n    sort$1: function(_, compare) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable list\"));\n    },\n    setRange$4: function(_, start, end, iterable, skipCount) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable list\"));\n    },\n    fillRange$3: function(_, start, end, fillValue) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify an unmodifiable list\"));\n    }\n  };\n  H.UnmodifiableListBase.prototype = {};\n  H.ReversedListIterable.prototype = {\n    get$length: function(_) {\n      return J.get$length$asx(this._source);\n    },\n    elementAt$1: function(_, index) {\n      var t1 = this._source,\n        t2 = J.getInterceptor$asx(t1);\n      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);\n    }\n  };\n  H.Symbol.prototype = {\n    get$hashCode: function(_) {\n      var hash = this._hashCode;\n      if (hash != null)\n        return hash;\n      hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);\n      this._hashCode = hash;\n      return hash;\n    },\n    toString$0: function(_) {\n      return 'Symbol(\"' + H.S(this.__internal$_name) + '\")';\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;\n    },\n    $isSymbol0: 1\n  };\n  H.__CastListBase__CastIterableBase_ListMixin.prototype = {};\n  H.ConstantMapView.prototype = {};\n  H.ConstantMap.prototype = {\n    get$isEmpty: function(_) {\n      return this.get$length(this) === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this.get$length(this) !== 0;\n    },\n    toString$0: function(_) {\n      return P.MapBase_mapToString(this);\n    },\n    $indexSet: function(_, key, val) {\n      H.ConstantMap__throwUnmodifiable();\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      H.ConstantMap__throwUnmodifiable();\n    },\n    remove$1: function(_, key) {\n      H.ConstantMap__throwUnmodifiable();\n    },\n    addAll$1: function(_, other) {\n      return H.ConstantMap__throwUnmodifiable();\n    },\n    get$entries: function(_) {\n      return this.entries$body$ConstantMap(_, H._instanceType(this)._eval$1(\"MapEntry<1,2>\"));\n    },\n    entries$body$ConstantMap: function($async$_, $async$type) {\n      var $async$self = this;\n      return P._makeSyncStarIterable(function() {\n        var _ = $async$_;\n        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, key, t3;\n        return function $async$get$entries($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = H._instanceType($async$self), t2 = t2._eval$1(\"@<1>\")._bind$1(t2._rest[1])._eval$1(\"MapEntry<1,2>\");\n              case 2:\n                // for condition\n                if (!t1.moveNext$0()) {\n                  // goto after for\n                  $async$goto = 3;\n                  break;\n                }\n                key = t1.get$current(t1);\n                t3 = $async$self.$index(0, key);\n                t3.toString;\n                $async$goto = 4;\n                return new P.MapEntry(key, t3, t2);\n              case 4:\n                // after yield\n                // goto for condition\n                $async$goto = 2;\n                break;\n              case 3:\n                // after for\n                // implicit return\n                return P._IterationMarker_endOfIteration();\n              case 1:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, $async$type);\n    },\n    $isMap: 1\n  };\n  H.ConstantStringMap.prototype = {\n    get$length: function(_) {\n      return this.__js_helper$_length;\n    },\n    containsKey$1: function(key) {\n      if (typeof key != \"string\")\n        return false;\n      if (\"__proto__\" === key)\n        return false;\n      return this._jsObject.hasOwnProperty(key);\n    },\n    $index: function(_, key) {\n      if (!this.containsKey$1(key))\n        return null;\n      return this._fetch$1(key);\n    },\n    _fetch$1: function(key) {\n      return this._jsObject[key];\n    },\n    forEach$1: function(_, f) {\n      var t1, i, key,\n        keys = this.__js_helper$_keys;\n      for (t1 = keys.length, i = 0; i < t1; ++i) {\n        key = keys[i];\n        f.call$2(key, this._fetch$1(key));\n      }\n    },\n    get$keys: function(_) {\n      return new H._ConstantMapKeyIterable(this, H._instanceType(this)._eval$1(\"_ConstantMapKeyIterable<1>\"));\n    },\n    get$values: function(_) {\n      var t1 = H._instanceType(this);\n      return H.MappedIterable_MappedIterable(this.__js_helper$_keys, new H.ConstantStringMap_values_closure(this), t1._precomputed1, t1._rest[1]);\n    }\n  };\n  H.ConstantStringMap_values_closure.prototype = {\n    call$1: function(key) {\n      return this.$this._fetch$1(key);\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"2(1)\");\n    }\n  };\n  H.ConstantProtoMap.prototype = {\n    containsKey$1: function(key) {\n      if (typeof key != \"string\")\n        return false;\n      if (\"__proto__\" === key)\n        return true;\n      return this._jsObject.hasOwnProperty(key);\n    },\n    _fetch$1: function(key) {\n      return \"__proto__\" === key ? this._protoValue : this._jsObject[key];\n    }\n  };\n  H._ConstantMapKeyIterable.prototype = {\n    get$iterator: function(_) {\n      var t1 = this._map.__js_helper$_keys;\n      return new J.ArrayIterator(t1, t1.length);\n    },\n    get$length: function(_) {\n      return this._map.__js_helper$_keys.length;\n    }\n  };\n  H.Instantiation.prototype = {\n    Instantiation$1: function(_genericClosure) {\n      if (false)\n        {}\n    },\n    toString$0: function(_) {\n      var types = \"<\" + C.JSArray_methods.join$1(this.get$_types(), \", \") + \">\";\n      return H.S(this._genericClosure) + \" with \" + types;\n    }\n  };\n  H.Instantiation1.prototype = {\n    get$_types: function() {\n      return [H.createRuntimeType(this.$ti._precomputed1)];\n    },\n    call$2: function(a0, a1) {\n      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);\n    },\n    call$0: function() {\n      return this._genericClosure.call$1$0(this.$ti._rest[0]);\n    },\n    call$3: function(a0, a1, a2) {\n      return this._genericClosure.call$1$3(a0, a1, a2, this.$ti._rest[0]);\n    },\n    call$4: function(a0, a1, a2, a3) {\n      return this._genericClosure.call$1$4(a0, a1, a2, a3, this.$ti._rest[0]);\n    },\n    $signature: function() {\n      return H.instantiatedGenericFunctionType(H.closureFunctionType(this._genericClosure), this.$ti);\n    }\n  };\n  H.JSInvocationMirror.prototype = {\n    get$memberName: function() {\n      var t1 = this.__js_helper$_memberName;\n      return t1;\n    },\n    get$positionalArguments: function() {\n      var t1, argumentCount, list, index, _this = this;\n      if (_this.__js_helper$_kind === 1)\n        return C.List_empty22;\n      t1 = _this._arguments;\n      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;\n      if (argumentCount === 0)\n        return C.List_empty22;\n      list = [];\n      for (index = 0; index < argumentCount; ++index)\n        list.push(t1[index]);\n      return J.JSArray_markUnmodifiableList(list);\n    },\n    get$namedArguments: function() {\n      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, _this = this;\n      if (_this.__js_helper$_kind !== 0)\n        return C.Map_empty10;\n      t1 = _this._namedArgumentNames;\n      namedArgumentCount = t1.length;\n      t2 = _this._arguments;\n      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;\n      if (namedArgumentCount === 0)\n        return C.Map_empty10;\n      map = new H.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);\n      for (i = 0; i < namedArgumentCount; ++i)\n        map.$indexSet(0, new H.Symbol(t1[i]), t2[namedArgumentsStartIndex + i]);\n      return new H.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);\n    }\n  };\n  H.Primitives_functionNoSuchMethod_closure.prototype = {\n    call$2: function($name, argument) {\n      var t1 = this._box_0;\n      t1.names = t1.names + \"$\" + H.S($name);\n      this.namedArgumentList.push($name);\n      this.$arguments.push(argument);\n      ++t1.argumentCount;\n    },\n    $signature: 273\n  };\n  H.TypeErrorDecoder.prototype = {\n    matchTypeError$1: function(message) {\n      var result, t1, _this = this,\n        match = new RegExp(_this._pattern).exec(message);\n      if (match == null)\n        return null;\n      result = Object.create(null);\n      t1 = _this._arguments;\n      if (t1 !== -1)\n        result.arguments = match[t1 + 1];\n      t1 = _this._argumentsExpr;\n      if (t1 !== -1)\n        result.argumentsExpr = match[t1 + 1];\n      t1 = _this._expr;\n      if (t1 !== -1)\n        result.expr = match[t1 + 1];\n      t1 = _this._method;\n      if (t1 !== -1)\n        result.method = match[t1 + 1];\n      t1 = _this._receiver;\n      if (t1 !== -1)\n        result.receiver = match[t1 + 1];\n      return result;\n    }\n  };\n  H.NullError.prototype = {\n    toString$0: function(_) {\n      var t1 = this._method;\n      if (t1 == null)\n        return \"NoSuchMethodError: \" + H.S(this.__js_helper$_message);\n      return \"NoSuchMethodError: method not found: '\" + t1 + \"' on null\";\n    }\n  };\n  H.JsNoSuchMethodError.prototype = {\n    toString$0: function(_) {\n      var t2, _this = this,\n        _s38_ = \"NoSuchMethodError: method not found: '\",\n        t1 = _this._method;\n      if (t1 == null)\n        return \"NoSuchMethodError: \" + H.S(_this.__js_helper$_message);\n      t2 = _this._receiver;\n      if (t2 == null)\n        return _s38_ + t1 + \"' (\" + H.S(_this.__js_helper$_message) + \")\";\n      return _s38_ + t1 + \"' on '\" + t2 + \"' (\" + H.S(_this.__js_helper$_message) + \")\";\n    }\n  };\n  H.UnknownJsTypeError.prototype = {\n    toString$0: function(_) {\n      var t1 = this.__js_helper$_message;\n      return t1.length === 0 ? \"Error\" : \"Error: \" + t1;\n    }\n  };\n  H.NullThrownFromJavaScriptException.prototype = {\n    toString$0: function(_) {\n      return \"Throw of null ('\" + (this._irritant === null ? \"null\" : \"undefined\") + \"' from JavaScript)\";\n    },\n    $isException: 1\n  };\n  H.ExceptionAndStackTrace.prototype = {};\n  H._StackTrace.prototype = {\n    toString$0: function(_) {\n      var trace,\n        t1 = this._trace;\n      if (t1 != null)\n        return t1;\n      t1 = this._exception;\n      trace = t1 !== null && typeof t1 === \"object\" ? t1.stack : null;\n      return this._trace = trace == null ? \"\" : trace;\n    },\n    $isStackTrace: 1\n  };\n  H.Closure.prototype = {\n    toString$0: function(_) {\n      var $constructor = this.constructor,\n        $name = $constructor == null ? null : $constructor.name;\n      return \"Closure '\" + H.unminifyOrTag($name == null ? \"unknown\" : $name) + \"'\";\n    },\n    $isFunction: 1,\n    get$$call: function() {\n      return this;\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 1,\n    $defaultValues: null\n  };\n  H.TearOffClosure.prototype = {};\n  H.StaticClosure.prototype = {\n    toString$0: function(_) {\n      var $name = this.$static_name;\n      if ($name == null)\n        return \"Closure of unknown static method\";\n      return \"Closure '\" + H.unminifyOrTag($name) + \"'\";\n    }\n  };\n  H.BoundClosure.prototype = {\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      if (_this === other)\n        return true;\n      if (!(other instanceof H.BoundClosure))\n        return false;\n      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;\n    },\n    get$hashCode: function(_) {\n      var receiverHashCode,\n        t1 = this._receiver;\n      if (t1 == null)\n        receiverHashCode = H.Primitives_objectHashCode(this._self);\n      else\n        receiverHashCode = typeof t1 !== \"object\" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);\n      return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;\n    },\n    toString$0: function(_) {\n      var receiver = this._receiver;\n      if (receiver == null)\n        receiver = this._self;\n      return \"Closure '\" + H.S(this.__js_helper$_name) + \"' of \" + (\"Instance of '\" + H.S(H.Primitives_objectTypeName(receiver)) + \"'\");\n    }\n  };\n  H.RuntimeError.prototype = {\n    toString$0: function(_) {\n      return \"RuntimeError: \" + this.message;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  H._Required.prototype = {};\n  H.JsLinkedHashMap.prototype = {\n    get$length: function(_) {\n      return this.__js_helper$_length;\n    },\n    get$isEmpty: function(_) {\n      return this.__js_helper$_length === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return !this.get$isEmpty(this);\n    },\n    get$keys: function(_) {\n      return new H.LinkedHashMapKeyIterable(this, H._instanceType(this)._eval$1(\"LinkedHashMapKeyIterable<1>\"));\n    },\n    get$values: function(_) {\n      var _this = this,\n        t1 = H._instanceType(_this);\n      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), t1._precomputed1, t1._rest[1]);\n    },\n    containsKey$1: function(key) {\n      var strings, nums, _this = this;\n      if (typeof key == \"string\") {\n        strings = _this._strings;\n        if (strings == null)\n          return false;\n        return _this._containsTableEntry$2(strings, key);\n      } else if (typeof key == \"number\" && (key & 0x3ffffff) === key) {\n        nums = _this._nums;\n        if (nums == null)\n          return false;\n        return _this._containsTableEntry$2(nums, key);\n      } else\n        return _this.internalContainsKey$1(key);\n    },\n    internalContainsKey$1: function(key) {\n      var _this = this,\n        rest = _this.__js_helper$_rest;\n      if (rest == null)\n        return false;\n      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;\n    },\n    addAll$1: function(_, other) {\n      other.forEach$1(0, new H.JsLinkedHashMap_addAll_closure(this));\n    },\n    $index: function(_, key) {\n      var strings, cell, t1, nums, _this = this, _null = null;\n      if (typeof key == \"string\") {\n        strings = _this._strings;\n        if (strings == null)\n          return _null;\n        cell = _this._getTableCell$2(strings, key);\n        t1 = cell == null ? _null : cell.hashMapCellValue;\n        return t1;\n      } else if (typeof key == \"number\" && (key & 0x3ffffff) === key) {\n        nums = _this._nums;\n        if (nums == null)\n          return _null;\n        cell = _this._getTableCell$2(nums, key);\n        t1 = cell == null ? _null : cell.hashMapCellValue;\n        return t1;\n      } else\n        return _this.internalGet$1(key);\n    },\n    internalGet$1: function(key) {\n      var bucket, index, _this = this,\n        rest = _this.__js_helper$_rest;\n      if (rest == null)\n        return null;\n      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));\n      index = _this.internalFindBucketIndex$2(bucket, key);\n      if (index < 0)\n        return null;\n      return bucket[index].hashMapCellValue;\n    },\n    $indexSet: function(_, key, value) {\n      var strings, nums, _this = this;\n      if (typeof key == \"string\") {\n        strings = _this._strings;\n        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);\n      } else if (typeof key == \"number\" && (key & 0x3ffffff) === key) {\n        nums = _this._nums;\n        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);\n      } else\n        _this.internalSet$2(key, value);\n    },\n    internalSet$2: function(key, value) {\n      var hash, bucket, index, _this = this,\n        rest = _this.__js_helper$_rest;\n      if (rest == null)\n        rest = _this.__js_helper$_rest = _this._newHashTable$0();\n      hash = _this.internalComputeHashCode$1(key);\n      bucket = _this._getTableBucket$2(rest, hash);\n      if (bucket == null)\n        _this._setTableEntry$3(rest, hash, [_this._newLinkedCell$2(key, value)]);\n      else {\n        index = _this.internalFindBucketIndex$2(bucket, key);\n        if (index >= 0)\n          bucket[index].hashMapCellValue = value;\n        else\n          bucket.push(_this._newLinkedCell$2(key, value));\n      }\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      var value;\n      if (this.containsKey$1(key))\n        return this.$index(0, key);\n      value = ifAbsent.call$0();\n      this.$indexSet(0, key, value);\n      return value;\n    },\n    remove$1: function(_, key) {\n      var _this = this;\n      if (typeof key == \"string\")\n        return _this.__js_helper$_removeHashTableEntry$2(_this._strings, key);\n      else if (typeof key == \"number\" && (key & 0x3ffffff) === key)\n        return _this.__js_helper$_removeHashTableEntry$2(_this._nums, key);\n      else\n        return _this.internalRemove$1(key);\n    },\n    internalRemove$1: function(key) {\n      var hash, bucket, index, cell, _this = this,\n        rest = _this.__js_helper$_rest;\n      if (rest == null)\n        return null;\n      hash = _this.internalComputeHashCode$1(key);\n      bucket = _this._getTableBucket$2(rest, hash);\n      index = _this.internalFindBucketIndex$2(bucket, key);\n      if (index < 0)\n        return null;\n      cell = bucket.splice(index, 1)[0];\n      _this.__js_helper$_unlinkCell$1(cell);\n      if (bucket.length === 0)\n        _this._deleteTableEntry$2(rest, hash);\n      return cell.hashMapCellValue;\n    },\n    clear$0: function(_) {\n      var _this = this;\n      if (_this.__js_helper$_length > 0) {\n        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;\n        _this.__js_helper$_length = 0;\n        _this._modified$0();\n      }\n    },\n    forEach$1: function(_, action) {\n      var _this = this,\n        cell = _this._first,\n        modifications = _this._modifications;\n      for (; cell != null;) {\n        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);\n        if (modifications !== _this._modifications)\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n        cell = cell._next;\n      }\n    },\n    _addHashTableEntry$3: function(table, key, value) {\n      var cell = this._getTableCell$2(table, key);\n      if (cell == null)\n        this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));\n      else\n        cell.hashMapCellValue = value;\n    },\n    __js_helper$_removeHashTableEntry$2: function(table, key) {\n      var cell;\n      if (table == null)\n        return null;\n      cell = this._getTableCell$2(table, key);\n      if (cell == null)\n        return null;\n      this.__js_helper$_unlinkCell$1(cell);\n      this._deleteTableEntry$2(table, key);\n      return cell.hashMapCellValue;\n    },\n    _modified$0: function() {\n      this._modifications = this._modifications + 1 & 67108863;\n    },\n    _newLinkedCell$2: function(key, value) {\n      var t1, _this = this,\n        cell = new H.LinkedHashMapCell(key, value);\n      if (_this._first == null)\n        _this._first = _this._last = cell;\n      else {\n        t1 = _this._last;\n        t1.toString;\n        cell._previous = t1;\n        _this._last = t1._next = cell;\n      }\n      ++_this.__js_helper$_length;\n      _this._modified$0();\n      return cell;\n    },\n    __js_helper$_unlinkCell$1: function(cell) {\n      var _this = this,\n        previous = cell._previous,\n        next = cell._next;\n      if (previous == null)\n        _this._first = next;\n      else\n        previous._next = next;\n      if (next == null)\n        _this._last = previous;\n      else\n        next._previous = previous;\n      --_this.__js_helper$_length;\n      _this._modified$0();\n    },\n    internalComputeHashCode$1: function(key) {\n      return J.get$hashCode$(key) & 0x3ffffff;\n    },\n    internalFindBucketIndex$2: function(bucket, key) {\n      var $length, i;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (i = 0; i < $length; ++i)\n        if (J.$eq$(bucket[i].hashMapCellKey, key))\n          return i;\n      return -1;\n    },\n    toString$0: function(_) {\n      return P.MapBase_mapToString(this);\n    },\n    _getTableCell$2: function(table, key) {\n      return table[key];\n    },\n    _getTableBucket$2: function(table, key) {\n      return table[key];\n    },\n    _setTableEntry$3: function(table, key, value) {\n      table[key] = value;\n    },\n    _deleteTableEntry$2: function(table, key) {\n      delete table[key];\n    },\n    _containsTableEntry$2: function(table, key) {\n      return this._getTableCell$2(table, key) != null;\n    },\n    _newHashTable$0: function() {\n      var _s20_ = \"<non-identifier-key>\",\n        table = Object.create(null);\n      this._setTableEntry$3(table, _s20_, table);\n      this._deleteTableEntry$2(table, _s20_);\n      return table;\n    }\n  };\n  H.JsLinkedHashMap_values_closure.prototype = {\n    call$1: function(each) {\n      return this.$this.$index(0, each);\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"2(1)\");\n    }\n  };\n  H.JsLinkedHashMap_addAll_closure.prototype = {\n    call$2: function(key, value) {\n      this.$this.$indexSet(0, key, value);\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"Null(1,2)\");\n    }\n  };\n  H.LinkedHashMapCell.prototype = {};\n  H.LinkedHashMapKeyIterable.prototype = {\n    get$length: function(_) {\n      return this._map.__js_helper$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._map.__js_helper$_length === 0;\n    },\n    get$iterator: function(_) {\n      var t1 = this._map,\n        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications);\n      t2._cell = t1._first;\n      return t2;\n    },\n    contains$1: function(_, element) {\n      return this._map.containsKey$1(element);\n    }\n  };\n  H.LinkedHashMapKeyIterator.prototype = {\n    get$current: function(_) {\n      return this.__js_helper$_current;\n    },\n    moveNext$0: function() {\n      var cell, _this = this,\n        t1 = _this._map;\n      if (_this._modifications !== t1._modifications)\n        throw H.wrapException(P.ConcurrentModificationError$(t1));\n      cell = _this._cell;\n      if (cell == null) {\n        _this.__js_helper$_current = null;\n        return false;\n      } else {\n        _this.__js_helper$_current = cell.hashMapCellKey;\n        _this._cell = cell._next;\n        return true;\n      }\n    }\n  };\n  H.initHooks_closure.prototype = {\n    call$1: function(o) {\n      return this.getTag(o);\n    },\n    $signature: 41\n  };\n  H.initHooks_closure0.prototype = {\n    call$2: function(o, tag) {\n      return this.getUnknownTag(o, tag);\n    },\n    $signature: 222\n  };\n  H.initHooks_closure1.prototype = {\n    call$1: function(tag) {\n      return this.prototypeForTag(tag);\n    },\n    $signature: 255\n  };\n  H.JSSyntaxRegExp.prototype = {\n    toString$0: function(_) {\n      return \"RegExp/\" + this.pattern + \"/\" + this._nativeRegExp.flags;\n    },\n    get$_nativeGlobalVersion: function() {\n      var _this = this,\n        t1 = _this._nativeGlobalRegExp;\n      if (t1 != null)\n        return t1;\n      t1 = _this._nativeRegExp;\n      return _this._nativeGlobalRegExp = H.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);\n    },\n    get$_nativeAnchoredVersion: function() {\n      var _this = this,\n        t1 = _this._nativeAnchoredRegExp;\n      if (t1 != null)\n        return t1;\n      t1 = _this._nativeRegExp;\n      return _this._nativeAnchoredRegExp = H.JSSyntaxRegExp_makeNative(_this.pattern + \"|()\", t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);\n    },\n    firstMatch$1: function(string) {\n      var m;\n      if (typeof string != \"string\")\n        H.throwExpression(H.argumentErrorValue(string));\n      m = this._nativeRegExp.exec(string);\n      if (m == null)\n        return null;\n      return new H._MatchImplementation(m);\n    },\n    allMatches$2: function(_, string, start) {\n      var t1 = string.length;\n      if (start > t1)\n        throw H.wrapException(P.RangeError$range(start, 0, t1, null, null));\n      return new H._AllMatchesIterable(this, string, start);\n    },\n    allMatches$1: function($receiver, string) {\n      return this.allMatches$2($receiver, string, 0);\n    },\n    _execGlobal$2: function(string, start) {\n      var match,\n        regexp = this.get$_nativeGlobalVersion();\n      regexp.lastIndex = start;\n      match = regexp.exec(string);\n      if (match == null)\n        return null;\n      return new H._MatchImplementation(match);\n    },\n    _execAnchored$2: function(string, start) {\n      var match,\n        regexp = this.get$_nativeAnchoredVersion();\n      regexp.lastIndex = start;\n      match = regexp.exec(string);\n      if (match == null)\n        return null;\n      if (match.pop() != null)\n        return null;\n      return new H._MatchImplementation(match);\n    },\n    matchAsPrefix$2: function(_, string, start) {\n      if (start < 0 || start > string.length)\n        throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));\n      return this._execAnchored$2(string, start);\n    }\n  };\n  H._MatchImplementation.prototype = {\n    get$start: function(_) {\n      return this._match.index;\n    },\n    get$end: function(_) {\n      var t1 = this._match;\n      return t1.index + t1[0].length;\n    },\n    $isMatch: 1,\n    $isRegExpMatch: 1\n  };\n  H._AllMatchesIterable.prototype = {\n    get$iterator: function(_) {\n      return new H._AllMatchesIterator(this._re, this.__js_helper$_string, this.__js_helper$_start);\n    }\n  };\n  H._AllMatchesIterator.prototype = {\n    get$current: function(_) {\n      var t1 = this.__js_helper$_current;\n      t1.toString;\n      return t1;\n    },\n    moveNext$0: function() {\n      var t1, t2, t3, match, nextIndex, _this = this,\n        string = _this.__js_helper$_string;\n      if (string == null)\n        return false;\n      t1 = _this._nextIndex;\n      t2 = string.length;\n      if (t1 <= t2) {\n        t3 = _this._regExp;\n        match = t3._execGlobal$2(string, t1);\n        if (match != null) {\n          _this.__js_helper$_current = match;\n          nextIndex = match.get$end(match);\n          if (match._match.index === nextIndex) {\n            if (t3._nativeRegExp.unicode) {\n              t1 = _this._nextIndex;\n              t3 = t1 + 1;\n              if (t3 < t2) {\n                t1 = C.JSString_methods.codeUnitAt$1(string, t1);\n                if (t1 >= 55296 && t1 <= 56319) {\n                  t1 = C.JSString_methods.codeUnitAt$1(string, t3);\n                  t1 = t1 >= 56320 && t1 <= 57343;\n                } else\n                  t1 = false;\n              } else\n                t1 = false;\n            } else\n              t1 = false;\n            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;\n          }\n          _this._nextIndex = nextIndex;\n          return true;\n        }\n      }\n      _this.__js_helper$_string = _this.__js_helper$_current = null;\n      return false;\n    }\n  };\n  H.StringMatch.prototype = {\n    get$end: function(_) {\n      return this.start + this.pattern.length;\n    },\n    group$1: function(_, group_) {\n      if (group_ !== 0)\n        throw H.wrapException(P.RangeError$value(group_, null, null));\n      return this.pattern;\n    },\n    $isMatch: 1,\n    get$start: function(receiver) {\n      return this.start;\n    }\n  };\n  H._StringAllMatchesIterable.prototype = {\n    get$iterator: function(_) {\n      return new H._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);\n    },\n    get$first: function(_) {\n      var t1 = this._pattern,\n        index = this._input.indexOf(t1, this.__js_helper$_index);\n      if (index >= 0)\n        return new H.StringMatch(index, t1);\n      throw H.wrapException(H.IterableElementError_noElement());\n    }\n  };\n  H._StringAllMatchesIterator.prototype = {\n    moveNext$0: function() {\n      var index, end, _this = this,\n        t1 = _this.__js_helper$_index,\n        t2 = _this._pattern,\n        t3 = t2.length,\n        t4 = _this._input,\n        t5 = t4.length;\n      if (t1 + t3 > t5) {\n        _this.__js_helper$_current = null;\n        return false;\n      }\n      index = t4.indexOf(t2, t1);\n      if (index < 0) {\n        _this.__js_helper$_index = t5 + 1;\n        _this.__js_helper$_current = null;\n        return false;\n      }\n      end = index + t3;\n      _this.__js_helper$_current = new H.StringMatch(index, t2);\n      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;\n      return true;\n    },\n    get$current: function(_) {\n      var t1 = this.__js_helper$_current;\n      t1.toString;\n      return t1;\n    }\n  };\n  H.NativeTypedData.prototype = {\n    _invalidPosition$3: function(receiver, position, $length, $name) {\n      if (!H._isInt(position))\n        throw H.wrapException(P.ArgumentError$value(position, $name, \"Invalid list position\"));\n      else\n        throw H.wrapException(P.RangeError$range(position, 0, $length, $name, null));\n    },\n    _checkPosition$3: function(receiver, position, $length, $name) {\n      if (position >>> 0 !== position || position > $length)\n        this._invalidPosition$3(receiver, position, $length, $name);\n    }\n  };\n  H.NativeTypedArray.prototype = {\n    get$length: function(receiver) {\n      return receiver.length;\n    },\n    _setRangeFast$4: function(receiver, start, end, source, skipCount) {\n      var count, sourceLength,\n        targetLength = receiver.length;\n      this._checkPosition$3(receiver, start, targetLength, \"start\");\n      this._checkPosition$3(receiver, end, targetLength, \"end\");\n      if (start > end)\n        throw H.wrapException(P.RangeError$range(start, 0, end, null, null));\n      count = end - start;\n      if (skipCount < 0)\n        throw H.wrapException(P.ArgumentError$(skipCount));\n      sourceLength = source.length;\n      if (sourceLength - skipCount < count)\n        throw H.wrapException(P.StateError$(\"Not enough elements\"));\n      if (skipCount !== 0 || sourceLength !== count)\n        source = source.subarray(skipCount, skipCount + count);\n      receiver.set(source, start);\n    },\n    $isJavaScriptIndexingBehavior: 1\n  };\n  H.NativeTypedArrayOfDouble.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    $indexSet: function(receiver, index, value) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      receiver[index] = value;\n    },\n    setRange$4: function(receiver, start, end, iterable, skipCount) {\n      if (type$.NativeTypedArrayOfDouble._is(iterable)) {\n        this._setRangeFast$4(receiver, start, end, iterable, skipCount);\n        return;\n      }\n      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);\n    },\n    $isEfficientLengthIterable: 1,\n    $isIterable: 1,\n    $isList: 1\n  };\n  H.NativeTypedArrayOfInt.prototype = {\n    $indexSet: function(receiver, index, value) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      receiver[index] = value;\n    },\n    setRange$4: function(receiver, start, end, iterable, skipCount) {\n      if (type$.NativeTypedArrayOfInt._is(iterable)) {\n        this._setRangeFast$4(receiver, start, end, iterable, skipCount);\n        return;\n      }\n      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);\n    },\n    $isEfficientLengthIterable: 1,\n    $isIterable: 1,\n    $isList: 1\n  };\n  H.NativeFloat32List.prototype = {\n    sublist$2: function(receiver, start, end) {\n      return new Float32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeFloat64List.prototype = {\n    sublist$2: function(receiver, start, end) {\n      return new Float64Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeInt16List.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Int16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeInt32List.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Int32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeInt8List.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Int8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeUint16List.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Uint16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeUint32List.prototype = {\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Uint32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeUint8ClampedList.prototype = {\n    get$length: function(receiver) {\n      return receiver.length;\n    },\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Uint8ClampedArray(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    }\n  };\n  H.NativeUint8List.prototype = {\n    get$length: function(receiver) {\n      return receiver.length;\n    },\n    $index: function(receiver, index) {\n      H._checkValidIndex(index, receiver, receiver.length);\n      return receiver[index];\n    },\n    sublist$2: function(receiver, start, end) {\n      return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));\n    },\n    $isNativeUint8List: 1,\n    $isUint8List: 1\n  };\n  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};\n  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};\n  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};\n  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};\n  H.Rti.prototype = {\n    _eval$1: function(recipe) {\n      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);\n    },\n    _bind$1: function(typeOrTuple) {\n      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);\n    }\n  };\n  H._FunctionParameters.prototype = {};\n  H._Type.prototype = {\n    toString$0: function(_) {\n      return H._rtiToString(this._rti, null);\n    }\n  };\n  H._Error.prototype = {\n    toString$0: function(_) {\n      return this._message;\n    }\n  };\n  H._TypeError.prototype = {\n    get$message: function(_) {\n      return this._message;\n    }\n  };\n  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {\n    call$1: function(_) {\n      var t1 = this._box_0,\n        f = t1.storedCallback;\n      t1.storedCallback = null;\n      f.call$0();\n    },\n    $signature: 93\n  };\n  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {\n    call$1: function(callback) {\n      var t1, t2;\n      this._box_0.storedCallback = callback;\n      t1 = this.div;\n      t2 = this.span;\n      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);\n    },\n    $signature: 373\n  };\n  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {\n    call$0: function() {\n      this.callback.call$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {\n    call$0: function() {\n      this.callback.call$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._TimerImpl.prototype = {\n    _TimerImpl$2: function(milliseconds, callback) {\n      if (self.setTimeout != null)\n        this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);\n      else\n        throw H.wrapException(P.UnsupportedError$(\"`setTimeout()` not found.\"));\n    },\n    _TimerImpl$periodic$2: function(milliseconds, callback) {\n      if (self.setTimeout != null)\n        this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);\n      else\n        throw H.wrapException(P.UnsupportedError$(\"Periodic timer.\"));\n    },\n    cancel$0: function() {\n      if (self.setTimeout != null) {\n        var t1 = this._handle;\n        if (t1 == null)\n          return;\n        if (this._once)\n          self.clearTimeout(t1);\n        else\n          self.clearInterval(t1);\n        this._handle = null;\n      } else\n        throw H.wrapException(P.UnsupportedError$(\"Canceling a timer.\"));\n    }\n  };\n  P._TimerImpl_internalCallback.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._handle = null;\n      t1._tick = 1;\n      this.callback.call$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._TimerImpl$periodic_closure.prototype = {\n    call$0: function() {\n      var duration, _this = this,\n        t1 = _this.$this,\n        tick = t1._tick + 1,\n        t2 = _this.milliseconds;\n      if (t2 > 0) {\n        duration = Date.now() - _this.start;\n        if (duration > (tick + 1) * t2)\n          tick = C.JSInt_methods.$tdiv(duration, t2);\n      }\n      t1._tick = tick;\n      _this.callback.call$1(t1);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._AsyncAwaitCompleter.prototype = {\n    complete$1: function(value) {\n      var t1, _this = this;\n      if (!_this.isSync)\n        _this._future._asyncComplete$1(value);\n      else {\n        t1 = _this._future;\n        if (_this.$ti._eval$1(\"Future<1>\")._is(value))\n          t1._chainFuture$1(value);\n        else\n          t1._completeWithValue$1(value);\n      }\n    },\n    completeError$2: function(e, st) {\n      var t1;\n      if (st == null)\n        st = P.AsyncError_defaultStackTrace(e);\n      t1 = this._future;\n      if (this.isSync)\n        t1._completeError$2(e, st);\n      else\n        t1._asyncCompleteError$2(e, st);\n    }\n  };\n  P._awaitOnObject_closure.prototype = {\n    call$1: function(result) {\n      return this.bodyFunction.call$2(0, result);\n    },\n    $signature: 213\n  };\n  P._awaitOnObject_closure0.prototype = {\n    call$2: function(error, stackTrace) {\n      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, stackTrace));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 290\n  };\n  P._wrapJsFunctionForAsync_closure.prototype = {\n    call$2: function(errorCode, result) {\n      this.$protected(errorCode, result);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 295\n  };\n  P._asyncStarHelper_closure.prototype = {\n    call$0: function() {\n      var t1 = this.controller,\n        t2 = t1.get$controller(),\n        t3 = t2._state;\n      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {\n        t1.isSuspended = true;\n        return;\n      }\n      this.bodyFunction.call$2(0, null);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._asyncStarHelper_closure0.prototype = {\n    call$1: function(_) {\n      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;\n      this.bodyFunction.call$2(errorCode, null);\n    },\n    $signature: 93\n  };\n  P._AsyncStarStreamController.prototype = {\n    get$controller: function() {\n      var t1 = this.___AsyncStarStreamController_controller;\n      return t1 == null ? H.throwExpression(H.LateInitializationErrorImpl$(\"Field 'controller' has not been initialized.\")) : t1;\n    },\n    add$1: function(_, $event) {\n      return this.get$controller().add$1(0, $event);\n    },\n    _AsyncStarStreamController$1: function(body, $T) {\n      var t1 = new P._AsyncStarStreamController__resumeBody(body);\n      this.___AsyncStarStreamController_controller = P.StreamController_StreamController(new P._AsyncStarStreamController_closure(this, body), new P._AsyncStarStreamController_closure0(t1), null, new P._AsyncStarStreamController_closure1(this, t1), false, $T);\n    }\n  };\n  P._AsyncStarStreamController__resumeBody.prototype = {\n    call$0: function() {\n      P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));\n    },\n    $signature: 0\n  };\n  P._AsyncStarStreamController__resumeBody_closure.prototype = {\n    call$0: function() {\n      this.body.call$2(0, null);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._AsyncStarStreamController_closure0.prototype = {\n    call$0: function() {\n      this._resumeBody.call$0();\n    },\n    $signature: 0\n  };\n  P._AsyncStarStreamController_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if (t1.isSuspended) {\n        t1.isSuspended = false;\n        this._resumeBody.call$0();\n      }\n    },\n    $signature: 0\n  };\n  P._AsyncStarStreamController_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if ((t1.get$controller()._state & 4) === 0) {\n        t1.cancelationFuture = new P._Future($.Zone__current, type$._Future_dynamic);\n        if (t1.isSuspended) {\n          t1.isSuspended = false;\n          P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));\n        }\n        return t1.cancelationFuture;\n      }\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 300\n  };\n  P._AsyncStarStreamController__closure.prototype = {\n    call$0: function() {\n      this.body.call$2(2, null);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._IterationMarker.prototype = {\n    toString$0: function(_) {\n      return \"IterationMarker(\" + this.state + \", \" + H.S(this.value) + \")\";\n    }\n  };\n  P._SyncStarIterator.prototype = {\n    get$current: function(_) {\n      var nested = this._nestedIterator;\n      if (nested == null)\n        return this._async$_current;\n      return nested.get$current(nested);\n    },\n    moveNext$0: function() {\n      var t1, value, state, suspendedBodies, inner, _this = this;\n      for (; true;) {\n        t1 = _this._nestedIterator;\n        if (t1 != null)\n          if (t1.moveNext$0())\n            return true;\n          else\n            _this._nestedIterator = null;\n        value = function(body, SUCCESS, ERROR) {\n          var errorValue,\n            errorCode = SUCCESS;\n          while (true)\n            try {\n              return body(errorCode, errorValue);\n            } catch (error) {\n              errorValue = error;\n              errorCode = ERROR;\n            }\n        }(_this._body, 0, 1);\n        if (value instanceof P._IterationMarker) {\n          state = value.state;\n          if (state === 2) {\n            suspendedBodies = _this._suspendedBodies;\n            if (suspendedBodies == null || suspendedBodies.length === 0) {\n              _this._async$_current = null;\n              return false;\n            }\n            _this._body = suspendedBodies.pop();\n            continue;\n          } else {\n            t1 = value.value;\n            if (state === 3)\n              throw t1;\n            else {\n              inner = J.get$iterator$ax(t1);\n              if (inner instanceof P._SyncStarIterator) {\n                t1 = _this._suspendedBodies;\n                if (t1 == null)\n                  t1 = _this._suspendedBodies = [];\n                t1.push(_this._body);\n                _this._body = inner._body;\n                continue;\n              } else {\n                _this._nestedIterator = inner;\n                continue;\n              }\n            }\n          }\n        } else {\n          _this._async$_current = value;\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n  P._SyncStarIterable.prototype = {\n    get$iterator: function(_) {\n      return new P._SyncStarIterator(this._outerHelper());\n    }\n  };\n  P._BroadcastStream.prototype = {\n    get$isBroadcast: function() {\n      return true;\n    }\n  };\n  P._BroadcastSubscription.prototype = {\n    _async$_onPause$0: function() {\n    },\n    _async$_onResume$0: function() {\n    }\n  };\n  P._BroadcastStreamController.prototype = {\n    set$onPause: function(onPauseHandler) {\n      throw H.wrapException(P.UnsupportedError$(string$.Broadc));\n    },\n    set$onResume: function(onResumeHandler) {\n      throw H.wrapException(P.UnsupportedError$(string$.Broadc));\n    },\n    get$stream: function() {\n      return new P._BroadcastStream(this, H._instanceType(this)._eval$1(\"_BroadcastStream<1>\"));\n    },\n    get$_mayAddEvent: function() {\n      return this._state < 4;\n    },\n    _ensureDoneFuture$0: function() {\n      var t1 = this._doneFuture;\n      return t1 == null ? this._doneFuture = new P._Future($.Zone__current, type$._Future_void) : t1;\n    },\n    _removeListener$1: function(subscription) {\n      var previous = subscription._async$_previous,\n        next = subscription._async$_next;\n      if (previous == null)\n        this._firstSubscription = next;\n      else\n        previous._async$_next = next;\n      if (next == null)\n        this._lastSubscription = previous;\n      else\n        next._async$_previous = previous;\n      subscription._async$_previous = subscription;\n      subscription._async$_next = subscription;\n    },\n    _subscribe$4: function(onData, onError, onDone, cancelOnError) {\n      var t1, t2, t3, t4, t5, t6, subscription, oldLast, _this = this;\n      if ((_this._state & 4) !== 0) {\n        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, H._instanceType(_this)._eval$1(\"_DoneStreamSubscription<1>\"));\n        t1._schedule$0();\n        return t1;\n      }\n      t1 = H._instanceType(_this);\n      t2 = $.Zone__current;\n      t3 = cancelOnError ? 1 : 0;\n      t4 = P._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1);\n      t5 = P._BufferingStreamSubscription__registerErrorHandler(t2, onError);\n      t6 = onDone == null ? P.async___nullDoneHandler$closure() : onDone;\n      subscription = new P._BroadcastSubscription(_this, t4, t5, t2.registerCallback$1$1(t6, type$.void), t2, t3, t1._eval$1(\"_BroadcastSubscription<1>\"));\n      subscription._async$_previous = subscription;\n      subscription._async$_next = subscription;\n      subscription._eventState = _this._state & 1;\n      oldLast = _this._lastSubscription;\n      _this._lastSubscription = subscription;\n      subscription._async$_next = null;\n      subscription._async$_previous = oldLast;\n      if (oldLast == null)\n        _this._firstSubscription = subscription;\n      else\n        oldLast._async$_next = subscription;\n      if (_this._firstSubscription === subscription)\n        P._runGuarded(_this.onListen);\n      return subscription;\n    },\n    _recordCancel$1: function(sub) {\n      var t1, _this = this;\n      H._instanceType(_this)._eval$1(\"_BroadcastSubscription<1>\")._as(sub);\n      if (sub._async$_next === sub)\n        return null;\n      t1 = sub._eventState;\n      if ((t1 & 2) !== 0)\n        sub._eventState = t1 | 4;\n      else {\n        _this._removeListener$1(sub);\n        if ((_this._state & 2) === 0 && _this._firstSubscription == null)\n          _this._callOnCancel$0();\n      }\n      return null;\n    },\n    _recordPause$1: function(subscription) {\n    },\n    _recordResume$1: function(subscription) {\n    },\n    _addEventError$0: function() {\n      if ((this._state & 4) !== 0)\n        return new P.StateError(\"Cannot add new events after calling close\");\n      return new P.StateError(\"Cannot add new events while doing an addStream\");\n    },\n    add$1: function(_, data) {\n      if (!this.get$_mayAddEvent())\n        throw H.wrapException(this._addEventError$0());\n      this._sendData$1(data);\n    },\n    addError$2: function(error, stackTrace) {\n      var replacement;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      if (!this.get$_mayAddEvent())\n        throw H.wrapException(this._addEventError$0());\n      replacement = $.Zone__current.errorCallback$2(error, stackTrace);\n      if (replacement != null) {\n        error = replacement.error;\n        stackTrace = replacement.stackTrace;\n      } else if (stackTrace == null)\n        stackTrace = P.AsyncError_defaultStackTrace(error);\n      this._sendError$2(error, stackTrace);\n    },\n    close$0: function(_) {\n      var t1, doneFuture, _this = this;\n      if ((_this._state & 4) !== 0) {\n        t1 = _this._doneFuture;\n        t1.toString;\n        return t1;\n      }\n      if (!_this.get$_mayAddEvent())\n        throw H.wrapException(_this._addEventError$0());\n      _this._state |= 4;\n      doneFuture = _this._ensureDoneFuture$0();\n      _this._sendDone$0();\n      return doneFuture;\n    },\n    _forEachListener$1: function(action) {\n      var subscription, id, next, _this = this,\n        t1 = _this._state;\n      if ((t1 & 2) !== 0)\n        throw H.wrapException(P.StateError$(string$.Cannotf));\n      subscription = _this._firstSubscription;\n      if (subscription == null)\n        return;\n      id = t1 & 1;\n      _this._state = t1 ^ 3;\n      for (; subscription != null;) {\n        t1 = subscription._eventState;\n        if ((t1 & 1) === id) {\n          subscription._eventState = t1 | 2;\n          action.call$1(subscription);\n          t1 = subscription._eventState ^= 1;\n          next = subscription._async$_next;\n          if ((t1 & 4) !== 0)\n            _this._removeListener$1(subscription);\n          subscription._eventState &= 4294967293;\n          subscription = next;\n        } else\n          subscription = subscription._async$_next;\n      }\n      _this._state &= 4294967293;\n      if (_this._firstSubscription == null)\n        _this._callOnCancel$0();\n    },\n    _callOnCancel$0: function() {\n      if ((this._state & 4) !== 0) {\n        var doneFuture = this._doneFuture;\n        if (doneFuture._state === 0)\n          doneFuture._asyncComplete$1(null);\n      }\n      P._runGuarded(this.onCancel);\n    },\n    $isEventSink: 1,\n    set$onListen: function(val) {\n      return this.onListen = val;\n    },\n    set$onCancel: function(val) {\n      return this.onCancel = val;\n    }\n  };\n  P._SyncBroadcastStreamController.prototype = {\n    get$_mayAddEvent: function() {\n      return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;\n    },\n    _addEventError$0: function() {\n      if ((this._state & 2) !== 0)\n        return new P.StateError(string$.Cannotf);\n      return this.super$_BroadcastStreamController$_addEventError();\n    },\n    _sendData$1: function(data) {\n      var _this = this,\n        t1 = _this._firstSubscription;\n      if (t1 == null)\n        return;\n      if (t1 === _this._lastSubscription) {\n        _this._state |= 2;\n        t1._async$_add$1(data);\n        _this._state &= 4294967293;\n        if (_this._firstSubscription == null)\n          _this._callOnCancel$0();\n        return;\n      }\n      _this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(_this, data));\n    },\n    _sendError$2: function(error, stackTrace) {\n      if (this._firstSubscription == null)\n        return;\n      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));\n    },\n    _sendDone$0: function() {\n      var _this = this;\n      if (_this._firstSubscription != null)\n        _this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(_this));\n      else\n        _this._doneFuture._asyncComplete$1(null);\n    }\n  };\n  P._SyncBroadcastStreamController__sendData_closure.prototype = {\n    call$1: function(subscription) {\n      subscription._async$_add$1(this.data);\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Null(_BufferingStreamSubscription<1>)\");\n    }\n  };\n  P._SyncBroadcastStreamController__sendError_closure.prototype = {\n    call$1: function(subscription) {\n      subscription._addError$2(this.error, this.stackTrace);\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Null(_BufferingStreamSubscription<1>)\");\n    }\n  };\n  P._SyncBroadcastStreamController__sendDone_closure.prototype = {\n    call$1: function(subscription) {\n      subscription._close$0();\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Null(_BufferingStreamSubscription<1>)\");\n    }\n  };\n  P.Future_wait__error_set.prototype = {\n    call$1: function(t1) {\n      return this._box_0.error = t1;\n    },\n    $signature: 314\n  };\n  P.Future_wait__stackTrace_set.prototype = {\n    call$1: function(t1) {\n      return this._box_0.stackTrace = t1;\n    },\n    $signature: 323\n  };\n  P.Future_wait__error_get.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.error;\n      return t1 == null ? H.throwExpression(H.LateInitializationErrorImpl$(\"Local 'error' has not been initialized.\")) : t1;\n    },\n    $signature: 364\n  };\n  P.Future_wait__stackTrace_get.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.stackTrace;\n      return t1 == null ? H.throwExpression(H.LateInitializationErrorImpl$(\"Local 'stackTrace' has not been initialized.\")) : t1;\n    },\n    $signature: 367\n  };\n  P.Future_wait_handleError.prototype = {\n    call$2: function(theError, theStackTrace) {\n      var _this = this,\n        t1 = _this._box_0,\n        t2 = --t1.remaining;\n      if (t1.values != null) {\n        t1.values = null;\n        if (t1.remaining === 0 || _this.eagerError)\n          _this._future._completeError$2(theError, theStackTrace);\n        else {\n          _this._error_set.call$1(theError);\n          _this._stackTrace_set.call$1(theStackTrace);\n        }\n      } else if (t2 === 0 && !_this.eagerError)\n        _this._future._completeError$2(_this._error_get.call$0(), _this._stackTrace_get.call$0());\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 59\n  };\n  P.Future_wait_closure.prototype = {\n    call$1: function(value) {\n      var valueList, _this = this,\n        t1 = _this._box_0;\n      --t1.remaining;\n      valueList = t1.values;\n      if (valueList != null) {\n        J.$indexSet$ax(valueList, _this.pos, value);\n        if (t1.remaining === 0)\n          _this._future._completeWithValue$1(P.List_List$from(valueList, true, _this.T));\n      } else if (t1.remaining === 0 && !_this.eagerError)\n        _this._future._completeError$2(_this._error_get.call$0(), _this._stackTrace_get.call$0());\n    },\n    $signature: function() {\n      return this.T._eval$1(\"Null(0)\");\n    }\n  };\n  P._Completer.prototype = {\n    completeError$2: function(error, stackTrace) {\n      var t1, replacement;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      t1 = this.future;\n      if (t1._state !== 0)\n        throw H.wrapException(P.StateError$(\"Future already completed\"));\n      replacement = $.Zone__current.errorCallback$2(error, stackTrace);\n      if (replacement != null) {\n        error = replacement.error;\n        stackTrace = replacement.stackTrace;\n      } else if (stackTrace == null)\n        stackTrace = P.AsyncError_defaultStackTrace(error);\n      t1._asyncCompleteError$2(error, stackTrace);\n    },\n    completeError$1: function(error) {\n      return this.completeError$2(error, null);\n    }\n  };\n  P._AsyncCompleter.prototype = {\n    complete$1: function(value) {\n      var t1 = this.future;\n      if (t1._state !== 0)\n        throw H.wrapException(P.StateError$(\"Future already completed\"));\n      t1._asyncComplete$1(value);\n    },\n    complete$0: function() {\n      return this.complete$1(null);\n    }\n  };\n  P._FutureListener.prototype = {\n    matchesErrorTest$1: function(asyncError) {\n      if ((this.state & 15) !== 6)\n        return true;\n      return this.result._zone.runUnary$2$2(this.callback, asyncError.error, type$.bool, type$.Object);\n    },\n    handleError$1: function(asyncError) {\n      var errorCallback = this.errorCallback,\n        t1 = type$.dynamic,\n        t2 = type$.Object,\n        t3 = this.result._zone;\n      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))\n        return t3.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, t1, t2, type$.StackTrace);\n      else\n        return t3.runUnary$2$2(errorCallback, asyncError.error, t1, t2);\n    }\n  };\n  P._Future.prototype = {\n    then$1$2$onError: function(_, f, onError, $R) {\n      var result, t1,\n        currentZone = $.Zone__current;\n      if (currentZone !== C.C__RootZone) {\n        f = currentZone.registerUnaryCallback$2$1(f, $R._eval$1(\"0/\"), this.$ti._precomputed1);\n        if (onError != null)\n          onError = P._registerErrorHandler(onError, currentZone);\n      }\n      result = new P._Future($.Zone__current, $R._eval$1(\"_Future<0>\"));\n      t1 = onError == null ? 1 : 3;\n      this._addListener$1(new P._FutureListener(result, t1, f, onError, this.$ti._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"_FutureListener<1,2>\")));\n      return result;\n    },\n    then$1$1: function($receiver, f, $R) {\n      return this.then$1$2$onError($receiver, f, null, $R);\n    },\n    then$1: function($receiver, f) {\n      return this.then$1$2$onError($receiver, f, null, type$.dynamic);\n    },\n    _thenAwait$1$2: function(f, onError, $E) {\n      var result = new P._Future($.Zone__current, $E._eval$1(\"_Future<0>\"));\n      this._addListener$1(new P._FutureListener(result, 19, f, onError, this.$ti._eval$1(\"@<1>\")._bind$1($E)._eval$1(\"_FutureListener<1,2>\")));\n      return result;\n    },\n    whenComplete$1: function(action) {\n      var t1 = this.$ti,\n        t2 = $.Zone__current,\n        result = new P._Future(t2, t1);\n      if (t2 !== C.C__RootZone)\n        action = t2.registerCallback$1$1(action, type$.dynamic);\n      this._addListener$1(new P._FutureListener(result, 8, action, null, t1._eval$1(\"@<1>\")._bind$1(t1._precomputed1)._eval$1(\"_FutureListener<1,2>\")));\n      return result;\n    },\n    _addListener$1: function(listener) {\n      var t2, _this = this,\n        t1 = _this._state;\n      if (t1 <= 1) {\n        listener._nextListener = _this._resultOrListeners;\n        _this._resultOrListeners = listener;\n      } else {\n        if (t1 === 2) {\n          t1 = _this._resultOrListeners;\n          t2 = t1._state;\n          if (t2 < 4) {\n            t1._addListener$1(listener);\n            return;\n          }\n          _this._state = t2;\n          _this._resultOrListeners = t1._resultOrListeners;\n        }\n        _this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(_this, listener));\n      }\n    },\n    _prependListeners$1: function(listeners) {\n      var t1, existingListeners, next, cursor, next0, t2, _this = this, _box_0 = {};\n      _box_0.listeners = listeners;\n      if (listeners == null)\n        return;\n      t1 = _this._state;\n      if (t1 <= 1) {\n        existingListeners = _this._resultOrListeners;\n        _this._resultOrListeners = listeners;\n        if (existingListeners != null) {\n          next = listeners._nextListener;\n          for (cursor = listeners; next != null; cursor = next, next = next0)\n            next0 = next._nextListener;\n          cursor._nextListener = existingListeners;\n        }\n      } else {\n        if (t1 === 2) {\n          t1 = _this._resultOrListeners;\n          t2 = t1._state;\n          if (t2 < 4) {\n            t1._prependListeners$1(listeners);\n            return;\n          }\n          _this._state = t2;\n          _this._resultOrListeners = t1._resultOrListeners;\n        }\n        _box_0.listeners = _this._reverseListeners$1(listeners);\n        _this._zone.scheduleMicrotask$1(new P._Future__prependListeners_closure(_box_0, _this));\n      }\n    },\n    _removeListeners$0: function() {\n      var current = this._resultOrListeners;\n      this._resultOrListeners = null;\n      return this._reverseListeners$1(current);\n    },\n    _reverseListeners$1: function(listeners) {\n      var current, prev, next;\n      for (current = listeners, prev = null; current != null; prev = current, current = next) {\n        next = current._nextListener;\n        current._nextListener = prev;\n      }\n      return prev;\n    },\n    _complete$1: function(value) {\n      var listeners, _this = this,\n        t1 = _this.$ti;\n      if (t1._eval$1(\"Future<1>\")._is(value))\n        if (t1._is(value))\n          P._Future__chainCoreFuture(value, _this);\n        else\n          P._Future__chainForeignFuture(value, _this);\n      else {\n        listeners = _this._removeListeners$0();\n        _this._state = 4;\n        _this._resultOrListeners = value;\n        P._Future__propagateToListeners(_this, listeners);\n      }\n    },\n    _completeWithValue$1: function(value) {\n      var _this = this,\n        listeners = _this._removeListeners$0();\n      _this._state = 4;\n      _this._resultOrListeners = value;\n      P._Future__propagateToListeners(_this, listeners);\n    },\n    _completeError$2: function(error, stackTrace) {\n      var _this = this,\n        listeners = _this._removeListeners$0(),\n        t1 = P.AsyncError$(error, stackTrace);\n      _this._state = 8;\n      _this._resultOrListeners = t1;\n      P._Future__propagateToListeners(_this, listeners);\n    },\n    _asyncComplete$1: function(value) {\n      if (this.$ti._eval$1(\"Future<1>\")._is(value)) {\n        this._chainFuture$1(value);\n        return;\n      }\n      this._asyncCompleteWithValue$1(value);\n    },\n    _asyncCompleteWithValue$1: function(value) {\n      this._state = 1;\n      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteWithValue_closure(this, value));\n    },\n    _chainFuture$1: function(value) {\n      var _this = this;\n      if (_this.$ti._is(value)) {\n        if (value._state === 8) {\n          _this._state = 1;\n          _this._zone.scheduleMicrotask$1(new P._Future__chainFuture_closure(_this, value));\n        } else\n          P._Future__chainCoreFuture(value, _this);\n        return;\n      }\n      P._Future__chainForeignFuture(value, _this);\n    },\n    _asyncCompleteError$2: function(error, stackTrace) {\n      this._state = 1;\n      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));\n    },\n    $isFuture: 1\n  };\n  P._Future__addListener_closure.prototype = {\n    call$0: function() {\n      P._Future__propagateToListeners(this.$this, this.listener);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__prependListeners_closure.prototype = {\n    call$0: function() {\n      P._Future__propagateToListeners(this.$this, this._box_0.listeners);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__chainForeignFuture_closure.prototype = {\n    call$1: function(value) {\n      var t1 = this.target;\n      t1._state = 0;\n      t1._complete$1(value);\n    },\n    $signature: 93\n  };\n  P._Future__chainForeignFuture_closure0.prototype = {\n    call$2: function(error, stackTrace) {\n      this.target._completeError$2(error, stackTrace);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 446\n  };\n  P._Future__chainForeignFuture_closure1.prototype = {\n    call$0: function() {\n      this.target._completeError$2(this.e, this.s);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__asyncCompleteWithValue_closure.prototype = {\n    call$0: function() {\n      this.$this._completeWithValue$1(this.value);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__chainFuture_closure.prototype = {\n    call$0: function() {\n      P._Future__chainCoreFuture(this.value, this.$this);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__asyncCompleteError_closure.prototype = {\n    call$0: function() {\n      this.$this._completeError$2(this.error, this.stackTrace);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {\n    call$0: function() {\n      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;\n      try {\n        t1 = _this._box_0.listener;\n        completeResult = t1.result._zone.run$1$1(0, t1.callback, type$.dynamic);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        if (_this.hasError) {\n          t1 = _this._box_1.source._resultOrListeners.error;\n          t2 = e;\n          t2 = t1 == null ? t2 == null : t1 === t2;\n          t1 = t2;\n        } else\n          t1 = false;\n        t2 = _this._box_0;\n        if (t1)\n          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;\n        else\n          t2.listenerValueOrError = P.AsyncError$(e, s);\n        t2.listenerHasError = true;\n        return;\n      }\n      if (completeResult instanceof P._Future && completeResult._state >= 4) {\n        if (completeResult._state === 8) {\n          t1 = _this._box_0;\n          t1.listenerValueOrError = completeResult._resultOrListeners;\n          t1.listenerHasError = true;\n        }\n        return;\n      }\n      if (type$.Future_dynamic._is(completeResult)) {\n        originalSource = _this._box_1.source;\n        t1 = _this._box_0;\n        t1.listenerValueOrError = J.then$1$1$x(completeResult, new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);\n        t1.listenerHasError = false;\n      }\n    },\n    $signature: 1\n  };\n  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {\n    call$1: function(_) {\n      return this.originalSource;\n    },\n    $signature: 221\n  };\n  P._Future__propagateToListeners_handleValueCallback.prototype = {\n    call$0: function() {\n      var e, s, t1, t2, t3, exception;\n      try {\n        t1 = this._box_0;\n        t2 = t1.listener;\n        t3 = t2.$ti;\n        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t2.callback, this.sourceResult, t3._eval$1(\"2/\"), t3._precomputed1);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        t1 = this._box_0;\n        t1.listenerValueOrError = P.AsyncError$(e, s);\n        t1.listenerHasError = true;\n      }\n    },\n    $signature: 1\n  };\n  P._Future__propagateToListeners_handleError.prototype = {\n    call$0: function() {\n      var asyncError, e, s, t1, exception, t2, t3, t4, _this = this;\n      try {\n        asyncError = _this._box_1.source._resultOrListeners;\n        t1 = _this._box_0;\n        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {\n          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);\n          t1.listenerHasError = false;\n        }\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        t1 = _this._box_1.source._resultOrListeners;\n        t2 = t1.error;\n        t3 = e;\n        t4 = _this._box_0;\n        if (t2 == null ? t3 == null : t2 === t3)\n          t4.listenerValueOrError = t1;\n        else\n          t4.listenerValueOrError = P.AsyncError$(e, s);\n        t4.listenerHasError = true;\n      }\n    },\n    $signature: 1\n  };\n  P._AsyncCallbackEntry.prototype = {};\n  P.Stream.prototype = {\n    get$isBroadcast: function() {\n      return false;\n    },\n    get$length: function(_) {\n      var t1 = {},\n        future = new P._Future($.Zone__current, type$._Future_int);\n      t1.count = 0;\n      this.listen$4$cancelOnError$onDone$onError(0, new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());\n      return future;\n    }\n  };\n  P.Stream_Stream$fromFuture_closure.prototype = {\n    call$1: function(value) {\n      var t1 = this.controller;\n      t1._async$_add$1(value);\n      t1._closeUnchecked$0();\n    },\n    $signature: function() {\n      return this.T._eval$1(\"Null(0)\");\n    }\n  };\n  P.Stream_Stream$fromFuture_closure0.prototype = {\n    call$2: function(error, stackTrace) {\n      var t1 = this.controller;\n      t1._addError$2(error, stackTrace);\n      t1._closeUnchecked$0();\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 101\n  };\n  P.Stream_length_closure.prototype = {\n    call$1: function(_) {\n      ++this._box_0.count;\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"Null(Stream.T)\");\n    }\n  };\n  P.Stream_length_closure0.prototype = {\n    call$0: function() {\n      this.future._complete$1(this._box_0.count);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P.StreamTransformerBase.prototype = {};\n  P._StreamController.prototype = {\n    get$stream: function() {\n      return new P._ControllerStream(this, H._instanceType(this)._eval$1(\"_ControllerStream<1>\"));\n    },\n    get$_pendingEvents: function() {\n      if ((this._state & 8) === 0)\n        return this._varData;\n      return this._varData.varData;\n    },\n    _ensurePendingEvents$0: function() {\n      var events, state, _this = this;\n      if ((_this._state & 8) === 0) {\n        events = _this._varData;\n        return events == null ? _this._varData = new P._StreamImplEvents() : events;\n      }\n      state = _this._varData;\n      events = state.varData;\n      return events == null ? state.varData = new P._StreamImplEvents() : events;\n    },\n    get$_subscription: function() {\n      var varData = this._varData;\n      return (this._state & 8) !== 0 ? varData.varData : varData;\n    },\n    _badEventState$0: function() {\n      if ((this._state & 4) !== 0)\n        return new P.StateError(\"Cannot add event after closing\");\n      return new P.StateError(\"Cannot add event while adding a stream\");\n    },\n    addStream$2$cancelOnError: function(source, cancelOnError) {\n      var t2, t3, t4, _this = this,\n        t1 = _this._state;\n      if (t1 >= 4)\n        throw H.wrapException(_this._badEventState$0());\n      if ((t1 & 2) !== 0) {\n        t1 = new P._Future($.Zone__current, type$._Future_dynamic);\n        t1._asyncComplete$1(null);\n        return t1;\n      }\n      t1 = _this._varData;\n      t2 = new P._Future($.Zone__current, type$._Future_dynamic);\n      t3 = source.listen$4$cancelOnError$onDone$onError(0, _this.get$_async$_add(), false, _this.get$_close(), _this.get$_addError());\n      t4 = _this._state;\n      if ((t4 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t4 & 2) === 0)\n        t3.pause$0(0);\n      _this._varData = new P._StreamControllerAddStreamState(t1, t2, t3);\n      _this._state |= 8;\n      return t2;\n    },\n    _ensureDoneFuture$0: function() {\n      var t1 = this._doneFuture;\n      if (t1 == null)\n        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future($.Zone__current, type$._Future_void);\n      return t1;\n    },\n    add$1: function(_, value) {\n      if (this._state >= 4)\n        throw H.wrapException(this._badEventState$0());\n      this._async$_add$1(value);\n    },\n    addError$2: function(error, stackTrace) {\n      var replacement;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      if (this._state >= 4)\n        throw H.wrapException(this._badEventState$0());\n      replacement = $.Zone__current.errorCallback$2(error, stackTrace);\n      if (replacement != null) {\n        error = replacement.error;\n        stackTrace = replacement.stackTrace;\n      } else if (stackTrace == null)\n        stackTrace = P.AsyncError_defaultStackTrace(error);\n      this._addError$2(error, stackTrace);\n    },\n    addError$1: function(error) {\n      return this.addError$2(error, null);\n    },\n    close$0: function(_) {\n      var _this = this,\n        t1 = _this._state;\n      if ((t1 & 4) !== 0)\n        return _this._ensureDoneFuture$0();\n      if (t1 >= 4)\n        throw H.wrapException(_this._badEventState$0());\n      _this._closeUnchecked$0();\n      return _this._ensureDoneFuture$0();\n    },\n    _closeUnchecked$0: function() {\n      var t1 = this._state |= 4;\n      if ((t1 & 1) !== 0)\n        this._sendDone$0();\n      else if ((t1 & 3) === 0)\n        this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);\n    },\n    _async$_add$1: function(value) {\n      var t1 = this._state;\n      if ((t1 & 1) !== 0)\n        this._sendData$1(value);\n      else if ((t1 & 3) === 0)\n        this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value));\n    },\n    _addError$2: function(error, stackTrace) {\n      var t1 = this._state;\n      if ((t1 & 1) !== 0)\n        this._sendError$2(error, stackTrace);\n      else if ((t1 & 3) === 0)\n        this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));\n    },\n    _close$0: function() {\n      var addState = this._varData;\n      this._varData = addState.varData;\n      this._state &= 4294967287;\n      addState.addStreamFuture._asyncComplete$1(null);\n    },\n    _subscribe$4: function(onData, onError, onDone, cancelOnError) {\n      var subscription, pendingEvents, t1, addState, _this = this;\n      if ((_this._state & 3) !== 0)\n        throw H.wrapException(P.StateError$(\"Stream has already been listened to.\"));\n      subscription = P._ControllerSubscription$(_this, onData, onError, onDone, cancelOnError, H._instanceType(_this)._precomputed1);\n      pendingEvents = _this.get$_pendingEvents();\n      t1 = _this._state |= 1;\n      if ((t1 & 8) !== 0) {\n        addState = _this._varData;\n        addState.varData = subscription;\n        addState.addSubscription.resume$0(0);\n      } else\n        _this._varData = subscription;\n      subscription._setPendingEvents$1(pendingEvents);\n      subscription._guardCallback$1(new P._StreamController__subscribe_closure(_this));\n      return subscription;\n    },\n    _recordCancel$1: function(subscription) {\n      var onCancel, cancelResult, e, s, exception, result0, t1, _this = this, result = null;\n      if ((_this._state & 8) !== 0)\n        result = _this._varData.cancel$0();\n      _this._varData = null;\n      _this._state = _this._state & 4294967286 | 2;\n      onCancel = _this.onCancel;\n      if (onCancel != null)\n        if (result == null)\n          try {\n            cancelResult = onCancel.call$0();\n            if (type$.Future_void._is(cancelResult))\n              result = cancelResult;\n          } catch (exception) {\n            e = H.unwrapException(exception);\n            s = H.getTraceFromException(exception);\n            result0 = new P._Future($.Zone__current, type$._Future_void);\n            result0._asyncCompleteError$2(e, s);\n            result = result0;\n          }\n        else\n          result = result.whenComplete$1(onCancel);\n      t1 = new P._StreamController__recordCancel_complete(_this);\n      if (result != null)\n        result = result.whenComplete$1(t1);\n      else\n        t1.call$0();\n      return result;\n    },\n    _recordPause$1: function(subscription) {\n      if ((this._state & 8) !== 0)\n        this._varData.addSubscription.pause$0(0);\n      P._runGuarded(this.onPause);\n    },\n    _recordResume$1: function(subscription) {\n      if ((this._state & 8) !== 0)\n        this._varData.addSubscription.resume$0(0);\n      P._runGuarded(this.onResume);\n    },\n    $isEventSink: 1,\n    set$onListen: function(val) {\n      return this.onListen = val;\n    },\n    set$onPause: function(val) {\n      return this.onPause = val;\n    },\n    set$onResume: function(val) {\n      return this.onResume = val;\n    },\n    set$onCancel: function(val) {\n      return this.onCancel = val;\n    }\n  };\n  P._StreamController__subscribe_closure.prototype = {\n    call$0: function() {\n      P._runGuarded(this.$this.onListen);\n    },\n    $signature: 0\n  };\n  P._StreamController__recordCancel_complete.prototype = {\n    call$0: function() {\n      var doneFuture = this.$this._doneFuture;\n      if (doneFuture != null && doneFuture._state === 0)\n        doneFuture._asyncComplete$1(null);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._SyncStreamControllerDispatch.prototype = {\n    _sendData$1: function(data) {\n      this.get$_subscription()._async$_add$1(data);\n    },\n    _sendError$2: function(error, stackTrace) {\n      this.get$_subscription()._addError$2(error, stackTrace);\n    },\n    _sendDone$0: function() {\n      this.get$_subscription()._close$0();\n    }\n  };\n  P._AsyncStreamControllerDispatch.prototype = {\n    _sendData$1: function(data) {\n      this.get$_subscription()._addPending$1(new P._DelayedData(data));\n    },\n    _sendError$2: function(error, stackTrace) {\n      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));\n    },\n    _sendDone$0: function() {\n      this.get$_subscription()._addPending$1(C.C__DelayedDone);\n    }\n  };\n  P._AsyncStreamController.prototype = {};\n  P._SyncStreamController.prototype = {};\n  P._ControllerStream.prototype = {\n    get$hashCode: function(_) {\n      return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      if (this === other)\n        return true;\n      return other instanceof P._ControllerStream && other._async$_controller === this._async$_controller;\n    }\n  };\n  P._ControllerSubscription.prototype = {\n    _async$_onCancel$0: function() {\n      return this._async$_controller._recordCancel$1(this);\n    },\n    _async$_onPause$0: function() {\n      this._async$_controller._recordPause$1(this);\n    },\n    _async$_onResume$0: function() {\n      this._async$_controller._recordResume$1(this);\n    }\n  };\n  P._AddStreamState.prototype = {\n    cancel$0: function() {\n      var cancel = this.addSubscription.cancel$0();\n      if (cancel == null) {\n        this.addStreamFuture._asyncComplete$1(null);\n        return $.$get$Future__nullFuture();\n      }\n      return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));\n    }\n  };\n  P._AddStreamState_cancel_closure.prototype = {\n    call$0: function() {\n      this.$this.addStreamFuture._asyncComplete$1(null);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._StreamControllerAddStreamState.prototype = {};\n  P._BufferingStreamSubscription.prototype = {\n    _setPendingEvents$1: function(pendingEvents) {\n      var _this = this;\n      if (pendingEvents == null)\n        return;\n      _this._pending = pendingEvents;\n      if (pendingEvents.lastPendingEvent != null) {\n        _this._state = (_this._state | 64) >>> 0;\n        pendingEvents.schedule$1(_this);\n      }\n    },\n    pause$1: function(_, resumeSignal) {\n      var t2, t3, _this = this,\n        t1 = _this._state;\n      if ((t1 & 8) !== 0)\n        return;\n      t2 = (t1 + 128 | 4) >>> 0;\n      _this._state = t2;\n      if (t1 < 128) {\n        t3 = _this._pending;\n        if (t3 != null)\n          if (t3._state === 1)\n            t3._state = 3;\n      }\n      if ((t1 & 4) === 0 && (t2 & 32) === 0)\n        _this._guardCallback$1(_this.get$_async$_onPause());\n    },\n    pause$0: function($receiver) {\n      return this.pause$1($receiver, null);\n    },\n    resume$0: function(_) {\n      var _this = this,\n        t1 = _this._state;\n      if ((t1 & 8) !== 0)\n        return;\n      if (t1 >= 128) {\n        t1 = _this._state = t1 - 128;\n        if (t1 < 128)\n          if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent != null)\n            _this._pending.schedule$1(_this);\n          else {\n            t1 = (t1 & 4294967291) >>> 0;\n            _this._state = t1;\n            if ((t1 & 32) === 0)\n              _this._guardCallback$1(_this.get$_async$_onResume());\n          }\n      }\n    },\n    cancel$0: function() {\n      var _this = this,\n        t1 = (_this._state & 4294967279) >>> 0;\n      _this._state = t1;\n      if ((t1 & 8) === 0)\n        _this._cancel$0();\n      t1 = _this._cancelFuture;\n      return t1 == null ? $.$get$Future__nullFuture() : t1;\n    },\n    _cancel$0: function() {\n      var t2, _this = this,\n        t1 = _this._state = (_this._state | 8) >>> 0;\n      if ((t1 & 64) !== 0) {\n        t2 = _this._pending;\n        if (t2._state === 1)\n          t2._state = 3;\n      }\n      if ((t1 & 32) === 0)\n        _this._pending = null;\n      _this._cancelFuture = _this._async$_onCancel$0();\n    },\n    _async$_add$1: function(data) {\n      var t1 = this._state;\n      if ((t1 & 8) !== 0)\n        return;\n      if (t1 < 32)\n        this._sendData$1(data);\n      else\n        this._addPending$1(new P._DelayedData(data));\n    },\n    _addError$2: function(error, stackTrace) {\n      var t1 = this._state;\n      if ((t1 & 8) !== 0)\n        return;\n      if (t1 < 32)\n        this._sendError$2(error, stackTrace);\n      else\n        this._addPending$1(new P._DelayedError(error, stackTrace));\n    },\n    _close$0: function() {\n      var _this = this,\n        t1 = _this._state;\n      if ((t1 & 8) !== 0)\n        return;\n      t1 = (t1 | 2) >>> 0;\n      _this._state = t1;\n      if (t1 < 32)\n        _this._sendDone$0();\n      else\n        _this._addPending$1(C.C__DelayedDone);\n    },\n    _async$_onPause$0: function() {\n    },\n    _async$_onResume$0: function() {\n    },\n    _async$_onCancel$0: function() {\n      return null;\n    },\n    _addPending$1: function($event) {\n      var t1, _this = this,\n        pending = _this._pending;\n      if (pending == null)\n        pending = new P._StreamImplEvents();\n      _this._pending = pending;\n      pending.add$1(0, $event);\n      t1 = _this._state;\n      if ((t1 & 64) === 0) {\n        t1 = (t1 | 64) >>> 0;\n        _this._state = t1;\n        if (t1 < 128)\n          pending.schedule$1(_this);\n      }\n    },\n    _sendData$1: function(data) {\n      var _this = this,\n        t1 = _this._state;\n      _this._state = (t1 | 32) >>> 0;\n      _this._zone.runUnaryGuarded$1$2(_this._onData, data, H._instanceType(_this)._eval$1(\"_BufferingStreamSubscription.T\"));\n      _this._state = (_this._state & 4294967263) >>> 0;\n      _this._checkState$1((t1 & 4) !== 0);\n    },\n    _sendError$2: function(error, stackTrace) {\n      var cancelFuture, _this = this,\n        t1 = _this._state,\n        t2 = new P._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);\n      if ((t1 & 1) !== 0) {\n        _this._state = (t1 | 16) >>> 0;\n        _this._cancel$0();\n        cancelFuture = _this._cancelFuture;\n        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())\n          cancelFuture.whenComplete$1(t2);\n        else\n          t2.call$0();\n      } else {\n        t2.call$0();\n        _this._checkState$1((t1 & 4) !== 0);\n      }\n    },\n    _sendDone$0: function() {\n      var cancelFuture, _this = this,\n        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(_this);\n      _this._cancel$0();\n      _this._state = (_this._state | 16) >>> 0;\n      cancelFuture = _this._cancelFuture;\n      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())\n        cancelFuture.whenComplete$1(t1);\n      else\n        t1.call$0();\n    },\n    _guardCallback$1: function(callback) {\n      var _this = this,\n        t1 = _this._state;\n      _this._state = (t1 | 32) >>> 0;\n      callback.call$0();\n      _this._state = (_this._state & 4294967263) >>> 0;\n      _this._checkState$1((t1 & 4) !== 0);\n    },\n    _checkState$1: function(wasInputPaused) {\n      var t2, isInputPaused, _this = this,\n        t1 = _this._state;\n      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {\n        t1 = _this._state = (t1 & 4294967231) >>> 0;\n        if ((t1 & 4) !== 0)\n          if (t1 < 128) {\n            t2 = _this._pending;\n            t2 = t2 == null ? null : t2.lastPendingEvent == null;\n            t2 = t2 !== false;\n          } else\n            t2 = false;\n        else\n          t2 = false;\n        if (t2) {\n          t1 = (t1 & 4294967291) >>> 0;\n          _this._state = t1;\n        }\n      }\n      for (; true; wasInputPaused = isInputPaused) {\n        if ((t1 & 8) !== 0) {\n          _this._pending = null;\n          return;\n        }\n        isInputPaused = (t1 & 4) !== 0;\n        if (wasInputPaused === isInputPaused)\n          break;\n        _this._state = (t1 ^ 32) >>> 0;\n        if (isInputPaused)\n          _this._async$_onPause$0();\n        else\n          _this._async$_onResume$0();\n        t1 = (_this._state & 4294967263) >>> 0;\n        _this._state = t1;\n      }\n      if ((t1 & 64) !== 0 && t1 < 128)\n        _this._pending.schedule$1(_this);\n    },\n    $isStreamSubscription: 1\n  };\n  P._BufferingStreamSubscription__sendError_sendError.prototype = {\n    call$0: function() {\n      var onError, t3, t4,\n        t1 = this.$this,\n        t2 = t1._state;\n      if ((t2 & 8) !== 0 && (t2 & 16) === 0)\n        return;\n      t1._state = (t2 | 32) >>> 0;\n      onError = t1._onError;\n      t2 = this.error;\n      t3 = type$.Object;\n      t4 = t1._zone;\n      if (type$.void_Function_Object_StackTrace._is(onError))\n        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, type$.StackTrace);\n      else\n        t4.runUnaryGuarded$1$2(onError, t2, t3);\n      t1._state = (t1._state & 4294967263) >>> 0;\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._state;\n      if ((t2 & 16) === 0)\n        return;\n      t1._state = (t2 | 42) >>> 0;\n      t1._zone.runGuarded$1(t1._onDone);\n      t1._state = (t1._state & 4294967263) >>> 0;\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._StreamImpl.prototype = {\n    listen$4$cancelOnError$onDone$onError: function(_, onData, cancelOnError, onDone, onError) {\n      return this._async$_controller._subscribe$4(onData, onError, onDone, cancelOnError === true);\n    },\n    listen$3$onDone$onError: function($receiver, onData, onDone, onError) {\n      return this.listen$4$cancelOnError$onDone$onError($receiver, onData, null, onDone, onError);\n    }\n  };\n  P._DelayedEvent.prototype = {\n    get$next: function() {\n      return this.next;\n    },\n    set$next: function(val) {\n      return this.next = val;\n    }\n  };\n  P._DelayedData.prototype = {\n    perform$1: function(dispatch) {\n      dispatch._sendData$1(this.value);\n    }\n  };\n  P._DelayedError.prototype = {\n    perform$1: function(dispatch) {\n      dispatch._sendError$2(this.error, this.stackTrace);\n    }\n  };\n  P._DelayedDone.prototype = {\n    perform$1: function(dispatch) {\n      dispatch._sendDone$0();\n    },\n    get$next: function() {\n      return null;\n    },\n    set$next: function(_) {\n      throw H.wrapException(P.StateError$(\"No events after a done.\"));\n    }\n  };\n  P._PendingEvents.prototype = {\n    schedule$1: function(dispatch) {\n      var _this = this,\n        t1 = _this._state;\n      if (t1 === 1)\n        return;\n      if (t1 >= 1) {\n        _this._state = 1;\n        return;\n      }\n      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));\n      _this._state = 1;\n    }\n  };\n  P._PendingEvents_schedule_closure.prototype = {\n    call$0: function() {\n      var $event, nextEvent,\n        t1 = this.$this,\n        oldState = t1._state;\n      t1._state = 0;\n      if (oldState === 3)\n        return;\n      $event = t1.firstPendingEvent;\n      nextEvent = $event.get$next();\n      t1.firstPendingEvent = nextEvent;\n      if (nextEvent == null)\n        t1.lastPendingEvent = null;\n      $event.perform$1(this.dispatch);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  P._StreamImplEvents.prototype = {\n    add$1: function(_, $event) {\n      var _this = this,\n        lastEvent = _this.lastPendingEvent;\n      if (lastEvent == null)\n        _this.firstPendingEvent = _this.lastPendingEvent = $event;\n      else {\n        lastEvent.set$next($event);\n        _this.lastPendingEvent = $event;\n      }\n    }\n  };\n  P._DoneStreamSubscription.prototype = {\n    _schedule$0: function() {\n      var _this = this;\n      if ((_this._state & 2) !== 0)\n        return;\n      _this._zone.scheduleMicrotask$1(_this.get$_sendDone());\n      _this._state = (_this._state | 2) >>> 0;\n    },\n    pause$1: function(_, resumeSignal) {\n      this._state += 4;\n    },\n    pause$0: function($receiver) {\n      return this.pause$1($receiver, null);\n    },\n    resume$0: function(_) {\n      var t1 = this._state;\n      if (t1 >= 4) {\n        t1 = this._state = t1 - 4;\n        if (t1 < 4 && (t1 & 1) === 0)\n          this._schedule$0();\n      }\n    },\n    cancel$0: function() {\n      return $.$get$Future__nullFuture();\n    },\n    _sendDone$0: function() {\n      var doneHandler, _this = this,\n        t1 = _this._state = (_this._state & 4294967293) >>> 0;\n      if (t1 >= 4)\n        return;\n      _this._state = (t1 | 1) >>> 0;\n      doneHandler = _this._onDone;\n      if (doneHandler != null)\n        _this._zone.runGuarded$1(doneHandler);\n    },\n    $isStreamSubscription: 1\n  };\n  P._StreamIterator.prototype = {\n    get$current: function(_) {\n      if (this._subscription != null && this._isPaused)\n        return this._stateData;\n      return null;\n    },\n    moveNext$0: function() {\n      var future, _this = this,\n        subscription = _this._subscription;\n      if (subscription != null) {\n        if (_this._isPaused) {\n          future = new P._Future($.Zone__current, type$._Future_bool);\n          _this._stateData = future;\n          _this._isPaused = false;\n          subscription.resume$0(0);\n          return future;\n        }\n        throw H.wrapException(P.StateError$(\"Already waiting for next.\"));\n      }\n      return _this._initializeOrDone$0();\n    },\n    _initializeOrDone$0: function() {\n      var _this = this,\n        stateData = _this._stateData;\n      if (stateData != null) {\n        _this._subscription = stateData.listen$4$cancelOnError$onDone$onError(0, _this.get$_onData(), true, _this.get$_onDone(), _this.get$_onError());\n        return _this._stateData = new P._Future($.Zone__current, type$._Future_bool);\n      }\n      return $.$get$Future__falseFuture();\n    },\n    cancel$0: function() {\n      var _this = this,\n        subscription = _this._subscription,\n        stateData = _this._stateData;\n      _this._stateData = null;\n      if (subscription != null) {\n        _this._subscription = null;\n        if (!_this._isPaused)\n          stateData._asyncComplete$1(false);\n        return subscription.cancel$0();\n      }\n      return $.$get$Future__nullFuture();\n    },\n    _onData$1: function(data) {\n      var t1, _this = this,\n        moveNextFuture = _this._stateData;\n      _this._stateData = data;\n      _this._isPaused = true;\n      moveNextFuture._complete$1(true);\n      if (_this._isPaused) {\n        t1 = _this._subscription;\n        if (t1 != null)\n          t1.pause$0(0);\n      }\n    },\n    _onError$2: function(error, stackTrace) {\n      var moveNextFuture = this._stateData;\n      this._stateData = this._subscription = null;\n      moveNextFuture._completeError$2(error, stackTrace);\n    },\n    _onDone$0: function() {\n      var moveNextFuture = this._stateData;\n      this._stateData = this._subscription = null;\n      moveNextFuture._complete$1(false);\n    }\n  };\n  P._ForwardingStream.prototype = {\n    get$isBroadcast: function() {\n      return this._async$_source.get$isBroadcast();\n    },\n    listen$4$cancelOnError$onDone$onError: function(_, onData, cancelOnError, onDone, onError) {\n      var t1 = H._instanceType(this),\n        t2 = t1._rest[1],\n        t3 = $.Zone__current,\n        t4 = cancelOnError === true ? 1 : 0,\n        t5 = P._BufferingStreamSubscription__registerDataHandler(t3, onData, t2),\n        t6 = P._BufferingStreamSubscription__registerErrorHandler(t3, onError),\n        t7 = onDone == null ? P.async___nullDoneHandler$closure() : onDone;\n      t2 = new P._ForwardingStreamSubscription(this, t5, t6, t3.registerCallback$1$1(t7, type$.void), t3, t4, t1._eval$1(\"@<1>\")._bind$1(t2)._eval$1(\"_ForwardingStreamSubscription<1,2>\"));\n      t2._subscription = this._async$_source.listen$3$onDone$onError(0, t2.get$_handleData(), t2.get$_handleDone(), t2.get$_handleError());\n      return t2;\n    },\n    listen$3$onDone$onError: function($receiver, onData, onDone, onError) {\n      return this.listen$4$cancelOnError$onDone$onError($receiver, onData, null, onDone, onError);\n    }\n  };\n  P._ForwardingStreamSubscription.prototype = {\n    _async$_add$1: function(data) {\n      if ((this._state & 2) !== 0)\n        return;\n      this.super$_BufferingStreamSubscription$_add(data);\n    },\n    _addError$2: function(error, stackTrace) {\n      if ((this._state & 2) !== 0)\n        return;\n      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);\n    },\n    _async$_onPause$0: function() {\n      var t1 = this._subscription;\n      if (t1 != null)\n        t1.pause$0(0);\n    },\n    _async$_onResume$0: function() {\n      var t1 = this._subscription;\n      if (t1 != null)\n        t1.resume$0(0);\n    },\n    _async$_onCancel$0: function() {\n      var subscription = this._subscription;\n      if (subscription != null) {\n        this._subscription = null;\n        return subscription.cancel$0();\n      }\n      return null;\n    },\n    _handleData$1: function(data) {\n      this._stream._handleData$2(data, this);\n    },\n    _handleError$2: function(error, stackTrace) {\n      this._addError$2(error, stackTrace);\n    },\n    _handleDone$0: function() {\n      this._close$0();\n    }\n  };\n  P._ExpandStream.prototype = {\n    _handleData$2: function(inputEvent, sink) {\n      var value, e, s, t1, exception;\n      try {\n        for (t1 = J.get$iterator$ax(this._expand.call$1(inputEvent)); t1.moveNext$0();) {\n          value = t1.get$current(t1);\n          sink._async$_add$1(value);\n        }\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        P._addErrorWithReplacement(sink, e, s);\n      }\n    }\n  };\n  P.AsyncError.prototype = {\n    toString$0: function(_) {\n      return H.S(this.error);\n    },\n    $isError: 1,\n    get$stackTrace: function() {\n      return this.stackTrace;\n    }\n  };\n  P._ZoneFunction.prototype = {};\n  P._RunNullaryZoneFunction.prototype = {};\n  P._RunUnaryZoneFunction.prototype = {};\n  P._RunBinaryZoneFunction.prototype = {};\n  P._RegisterNullaryZoneFunction.prototype = {};\n  P._RegisterUnaryZoneFunction.prototype = {};\n  P._RegisterBinaryZoneFunction.prototype = {};\n  P._ZoneSpecification.prototype = {$isZoneSpecification: 1};\n  P._ZoneDelegate.prototype = {$isZoneDelegate: 1};\n  P._Zone.prototype = {$isZone: 1};\n  P._CustomZone.prototype = {\n    get$_delegate: function() {\n      var t1 = this._delegateCache;\n      return t1 == null ? this._delegateCache = new P._ZoneDelegate(this) : t1;\n    },\n    get$_parentDelegate: function() {\n      return this.parent.get$_delegate();\n    },\n    get$errorZone: function() {\n      return this._handleUncaughtError.zone;\n    },\n    runGuarded$1: function(f) {\n      var e, s, exception;\n      try {\n        this.run$1$1(0, f, type$.void);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        this.handleUncaughtError$2(e, s);\n      }\n    },\n    runUnaryGuarded$1$2: function(f, arg, $T) {\n      var e, s, exception;\n      try {\n        this.runUnary$2$2(f, arg, type$.void, $T);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        this.handleUncaughtError$2(e, s);\n      }\n    },\n    runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {\n      var e, s, exception;\n      try {\n        this.runBinary$3$3(f, arg1, arg2, type$.void, T1, T2);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        this.handleUncaughtError$2(e, s);\n      }\n    },\n    bindCallback$1$1: function(f, $R) {\n      return new P._CustomZone_bindCallback_closure(this, this.registerCallback$1$1(f, $R), $R);\n    },\n    bindUnaryCallback$2$1: function(f, $R, $T) {\n      return new P._CustomZone_bindUnaryCallback_closure(this, this.registerUnaryCallback$2$1(f, $R, $T), $T, $R);\n    },\n    bindCallbackGuarded$1: function(f) {\n      return new P._CustomZone_bindCallbackGuarded_closure(this, this.registerCallback$1$1(f, type$.void));\n    },\n    $index: function(_, key) {\n      var value,\n        t1 = this._async$_map,\n        result = t1.$index(0, key);\n      if (result != null || t1.containsKey$1(key))\n        return result;\n      value = this.parent.$index(0, key);\n      if (value != null)\n        t1.$indexSet(0, key, value);\n      return value;\n    },\n    handleUncaughtError$2: function(error, stackTrace) {\n      var implementation = this._handleUncaughtError,\n        t1 = implementation.zone;\n      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, error, stackTrace);\n    },\n    fork$2$specification$zoneValues: function(specification, zoneValues) {\n      var implementation = this._fork,\n        t1 = implementation.zone;\n      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, specification, zoneValues);\n    },\n    run$1$1: function(_, f) {\n      var implementation = this._run,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, f);\n    },\n    runUnary$2$2: function(f, arg) {\n      var implementation = this._runUnary,\n        t1 = implementation.zone;\n      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, f, arg);\n    },\n    runBinary$3$3: function(f, arg1, arg2) {\n      var implementation = this._runBinary,\n        t1 = implementation.zone;\n      return implementation.$function.call$6(t1, t1.get$_parentDelegate(), this, f, arg1, arg2);\n    },\n    registerCallback$1$1: function(callback) {\n      var implementation = this._registerCallback,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, callback);\n    },\n    registerUnaryCallback$2$1: function(callback) {\n      var implementation = this._registerUnaryCallback,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, callback);\n    },\n    registerBinaryCallback$3$1: function(callback) {\n      var implementation = this._registerBinaryCallback,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, callback);\n    },\n    errorCallback$2: function(error, stackTrace) {\n      var implementation, implementationZone;\n      P.ArgumentError_checkNotNull(error, \"error\");\n      implementation = this._errorCallback;\n      implementationZone = implementation.zone;\n      if (implementationZone === C.C__RootZone)\n        return null;\n      return implementation.$function.call$5(implementationZone, implementationZone.get$_parentDelegate(), this, error, stackTrace);\n    },\n    scheduleMicrotask$1: function(f) {\n      var implementation = this._scheduleMicrotask,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, f);\n    },\n    createTimer$2: function(duration, f) {\n      var implementation = this._createTimer,\n        t1 = implementation.zone;\n      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, duration, f);\n    },\n    print$1: function(line) {\n      var implementation = this._print,\n        t1 = implementation.zone;\n      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, line);\n    },\n    get$_run: function() {\n      return this._run;\n    },\n    get$_runUnary: function() {\n      return this._runUnary;\n    },\n    get$_runBinary: function() {\n      return this._runBinary;\n    },\n    get$_registerCallback: function() {\n      return this._registerCallback;\n    },\n    get$_registerUnaryCallback: function() {\n      return this._registerUnaryCallback;\n    },\n    get$_registerBinaryCallback: function() {\n      return this._registerBinaryCallback;\n    },\n    get$_errorCallback: function() {\n      return this._errorCallback;\n    },\n    get$_scheduleMicrotask: function() {\n      return this._scheduleMicrotask;\n    },\n    get$_createTimer: function() {\n      return this._createTimer;\n    },\n    get$_createPeriodicTimer: function() {\n      return this._createPeriodicTimer;\n    },\n    get$_print: function() {\n      return this._print;\n    },\n    get$_fork: function() {\n      return this._fork;\n    },\n    get$_handleUncaughtError: function() {\n      return this._handleUncaughtError;\n    },\n    get$_async$_map: function() {\n      return this._async$_map;\n    }\n  };\n  P._CustomZone_bindCallback_closure.prototype = {\n    call$0: function() {\n      return this.$this.run$1$1(0, this.registered, this.R);\n    },\n    $signature: function() {\n      return this.R._eval$1(\"0()\");\n    }\n  };\n  P._CustomZone_bindUnaryCallback_closure.prototype = {\n    call$1: function(arg) {\n      var _this = this;\n      return _this.$this.runUnary$2$2(_this.registered, arg, _this.R, _this.T);\n    },\n    $signature: function() {\n      return this.R._eval$1(\"@<0>\")._bind$1(this.T)._eval$1(\"1(2)\");\n    }\n  };\n  P._CustomZone_bindCallbackGuarded_closure.prototype = {\n    call$0: function() {\n      return this.$this.runGuarded$1(this.registered);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._rootHandleUncaughtError_closure.prototype = {\n    call$0: function() {\n      var error = H.wrapException(this.error);\n      error.stack = J.toString$0$(this.stackTrace);\n      throw error;\n    },\n    $signature: 0\n  };\n  P._RootZone.prototype = {\n    get$_run: function() {\n      return C._RunNullaryZoneFunction__RootZone__rootRun;\n    },\n    get$_runUnary: function() {\n      return C._RunUnaryZoneFunction__RootZone__rootRunUnary;\n    },\n    get$_runBinary: function() {\n      return C._RunBinaryZoneFunction__RootZone__rootRunBinary;\n    },\n    get$_registerCallback: function() {\n      return C._RegisterNullaryZoneFunction__RootZone__rootRegisterCallback;\n    },\n    get$_registerUnaryCallback: function() {\n      return C._RegisterUnaryZoneFunction_Bqo;\n    },\n    get$_registerBinaryCallback: function() {\n      return C._RegisterBinaryZoneFunction_kGu;\n    },\n    get$_errorCallback: function() {\n      return C._ZoneFunction__RootZone__rootErrorCallback;\n    },\n    get$_scheduleMicrotask: function() {\n      return C._ZoneFunction__RootZone__rootScheduleMicrotask;\n    },\n    get$_createTimer: function() {\n      return C._ZoneFunction__RootZone__rootCreateTimer;\n    },\n    get$_createPeriodicTimer: function() {\n      return C._ZoneFunction_3bB;\n    },\n    get$_print: function() {\n      return C._ZoneFunction__RootZone__rootPrint;\n    },\n    get$_fork: function() {\n      return C._ZoneFunction__RootZone__rootFork;\n    },\n    get$_handleUncaughtError: function() {\n      return C._ZoneFunction_NMc;\n    },\n    get$_async$_map: function() {\n      return $.$get$_RootZone__rootMap();\n    },\n    get$_delegate: function() {\n      var t1 = $._RootZone__rootDelegate;\n      return t1 == null ? $._RootZone__rootDelegate = new P._ZoneDelegate(this) : t1;\n    },\n    get$_parentDelegate: function() {\n      return this.get$_delegate();\n    },\n    get$errorZone: function() {\n      return this;\n    },\n    runGuarded$1: function(f) {\n      var e, s, exception, _null = null;\n      try {\n        if (C.C__RootZone === $.Zone__current) {\n          f.call$0();\n          return;\n        }\n        P._rootRun(_null, _null, this, f);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        P._rootHandleUncaughtError(_null, _null, this, e, s);\n      }\n    },\n    runUnaryGuarded$1$2: function(f, arg) {\n      var e, s, exception, _null = null;\n      try {\n        if (C.C__RootZone === $.Zone__current) {\n          f.call$1(arg);\n          return;\n        }\n        P._rootRunUnary(_null, _null, this, f, arg);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        P._rootHandleUncaughtError(_null, _null, this, e, s);\n      }\n    },\n    runBinaryGuarded$2$3: function(f, arg1, arg2) {\n      var e, s, exception, _null = null;\n      try {\n        if (C.C__RootZone === $.Zone__current) {\n          f.call$2(arg1, arg2);\n          return;\n        }\n        P._rootRunBinary(_null, _null, this, f, arg1, arg2);\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        s = H.getTraceFromException(exception);\n        P._rootHandleUncaughtError(_null, _null, this, e, s);\n      }\n    },\n    bindCallback$1$1: function(f, $R) {\n      return new P._RootZone_bindCallback_closure(this, f, $R);\n    },\n    bindCallbackGuarded$1: function(f) {\n      return new P._RootZone_bindCallbackGuarded_closure(this, f);\n    },\n    $index: function(_, key) {\n      return null;\n    },\n    handleUncaughtError$2: function(error, stackTrace) {\n      P._rootHandleUncaughtError(null, null, this, error, stackTrace);\n    },\n    fork$2$specification$zoneValues: function(specification, zoneValues) {\n      return P._rootFork(null, null, this, specification, zoneValues);\n    },\n    run$1$1: function(_, f) {\n      if ($.Zone__current === C.C__RootZone)\n        return f.call$0();\n      return P._rootRun(null, null, this, f);\n    },\n    runUnary$2$2: function(f, arg) {\n      if ($.Zone__current === C.C__RootZone)\n        return f.call$1(arg);\n      return P._rootRunUnary(null, null, this, f, arg);\n    },\n    runBinary$3$3: function(f, arg1, arg2) {\n      if ($.Zone__current === C.C__RootZone)\n        return f.call$2(arg1, arg2);\n      return P._rootRunBinary(null, null, this, f, arg1, arg2);\n    },\n    registerCallback$1$1: function(f) {\n      return f;\n    },\n    registerUnaryCallback$2$1: function(f) {\n      return f;\n    },\n    registerBinaryCallback$3$1: function(f) {\n      return f;\n    },\n    errorCallback$2: function(error, stackTrace) {\n      return null;\n    },\n    scheduleMicrotask$1: function(f) {\n      P._rootScheduleMicrotask(null, null, this, f);\n    },\n    createTimer$2: function(duration, f) {\n      return P.Timer__createTimer(duration, f);\n    },\n    print$1: function(line) {\n      H.printString(H.S(line));\n    }\n  };\n  P._RootZone_bindCallback_closure.prototype = {\n    call$0: function() {\n      return this.$this.run$1$1(0, this.f, this.R);\n    },\n    $signature: function() {\n      return this.R._eval$1(\"0()\");\n    }\n  };\n  P._RootZone_bindCallbackGuarded_closure.prototype = {\n    call$0: function() {\n      return this.$this.runGuarded$1(this.f);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 1\n  };\n  P._HashMap.prototype = {\n    get$length: function(_) {\n      return this._collection$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._collection$_length === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this._collection$_length !== 0;\n    },\n    get$keys: function(_) {\n      return new P._HashMapKeyIterable(this, H._instanceType(this)._eval$1(\"_HashMapKeyIterable<1>\"));\n    },\n    get$values: function(_) {\n      var t1 = H._instanceType(this);\n      return H.MappedIterable_MappedIterable(new P._HashMapKeyIterable(this, t1._eval$1(\"_HashMapKeyIterable<1>\")), new P._HashMap_values_closure(this), t1._precomputed1, t1._rest[1]);\n    },\n    containsKey$1: function(key) {\n      var strings, nums;\n      if (typeof key == \"string\" && key !== \"__proto__\") {\n        strings = this._collection$_strings;\n        return strings == null ? false : strings[key] != null;\n      } else if (typeof key == \"number\" && (key & 1073741823) === key) {\n        nums = this._collection$_nums;\n        return nums == null ? false : nums[key] != null;\n      } else\n        return this._containsKey$1(key);\n    },\n    _containsKey$1: function(key) {\n      var rest = this._collection$_rest;\n      if (rest == null)\n        return false;\n      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;\n    },\n    addAll$1: function(_, other) {\n      other.forEach$1(0, new P._HashMap_addAll_closure(this));\n    },\n    $index: function(_, key) {\n      var strings, t1, nums;\n      if (typeof key == \"string\" && key !== \"__proto__\") {\n        strings = this._collection$_strings;\n        t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);\n        return t1;\n      } else if (typeof key == \"number\" && (key & 1073741823) === key) {\n        nums = this._collection$_nums;\n        t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);\n        return t1;\n      } else\n        return this._get$1(key);\n    },\n    _get$1: function(key) {\n      var bucket, index,\n        rest = this._collection$_rest;\n      if (rest == null)\n        return null;\n      bucket = this._getBucket$2(rest, key);\n      index = this._findBucketIndex$2(bucket, key);\n      return index < 0 ? null : bucket[index + 1];\n    },\n    $indexSet: function(_, key, value) {\n      var strings, nums, _this = this;\n      if (typeof key == \"string\" && key !== \"__proto__\") {\n        strings = _this._collection$_strings;\n        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = P._HashMap__newHashTable() : strings, key, value);\n      } else if (typeof key == \"number\" && (key & 1073741823) === key) {\n        nums = _this._collection$_nums;\n        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = P._HashMap__newHashTable() : nums, key, value);\n      } else\n        _this._set$2(key, value);\n    },\n    _set$2: function(key, value) {\n      var hash, bucket, index, _this = this,\n        rest = _this._collection$_rest;\n      if (rest == null)\n        rest = _this._collection$_rest = P._HashMap__newHashTable();\n      hash = _this._computeHashCode$1(key);\n      bucket = rest[hash];\n      if (bucket == null) {\n        P._HashMap__setTableEntry(rest, hash, [key, value]);\n        ++_this._collection$_length;\n        _this._keys = null;\n      } else {\n        index = _this._findBucketIndex$2(bucket, key);\n        if (index >= 0)\n          bucket[index + 1] = value;\n        else {\n          bucket.push(key, value);\n          ++_this._collection$_length;\n          _this._keys = null;\n        }\n      }\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      var value;\n      if (this.containsKey$1(key))\n        return this.$index(0, key);\n      value = ifAbsent.call$0();\n      this.$indexSet(0, key, value);\n      return value;\n    },\n    remove$1: function(_, key) {\n      var t1;\n      if (typeof key == \"string\" && key !== \"__proto__\")\n        return this._removeHashTableEntry$2(this._collection$_strings, key);\n      else {\n        t1 = this._remove$1(key);\n        return t1;\n      }\n    },\n    _remove$1: function(key) {\n      var hash, bucket, index, result, _this = this,\n        rest = _this._collection$_rest;\n      if (rest == null)\n        return null;\n      hash = _this._computeHashCode$1(key);\n      bucket = rest[hash];\n      index = _this._findBucketIndex$2(bucket, key);\n      if (index < 0)\n        return null;\n      --_this._collection$_length;\n      _this._keys = null;\n      result = bucket.splice(index, 2)[1];\n      if (0 === bucket.length)\n        delete rest[hash];\n      return result;\n    },\n    forEach$1: function(_, action) {\n      var $length, i, key, _this = this,\n        keys = _this._computeKeys$0();\n      for ($length = keys.length, i = 0; i < $length; ++i) {\n        key = keys[i];\n        action.call$2(key, _this.$index(0, key));\n        if (keys !== _this._keys)\n          throw H.wrapException(P.ConcurrentModificationError$(_this));\n      }\n    },\n    _computeKeys$0: function() {\n      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,\n        result = _this._keys;\n      if (result != null)\n        return result;\n      result = P.List_List$filled(_this._collection$_length, null, false, type$.dynamic);\n      strings = _this._collection$_strings;\n      if (strings != null) {\n        names = Object.getOwnPropertyNames(strings);\n        entries = names.length;\n        for (index = 0, i = 0; i < entries; ++i) {\n          result[index] = names[i];\n          ++index;\n        }\n      } else\n        index = 0;\n      nums = _this._collection$_nums;\n      if (nums != null) {\n        names = Object.getOwnPropertyNames(nums);\n        entries = names.length;\n        for (i = 0; i < entries; ++i) {\n          result[index] = +names[i];\n          ++index;\n        }\n      }\n      rest = _this._collection$_rest;\n      if (rest != null) {\n        names = Object.getOwnPropertyNames(rest);\n        entries = names.length;\n        for (i = 0; i < entries; ++i) {\n          bucket = rest[names[i]];\n          $length = bucket.length;\n          for (i0 = 0; i0 < $length; i0 += 2) {\n            result[index] = bucket[i0];\n            ++index;\n          }\n        }\n      }\n      return _this._keys = result;\n    },\n    _collection$_addHashTableEntry$3: function(table, key, value) {\n      if (table[key] == null) {\n        ++this._collection$_length;\n        this._keys = null;\n      }\n      P._HashMap__setTableEntry(table, key, value);\n    },\n    _removeHashTableEntry$2: function(table, key) {\n      var value;\n      if (table != null && table[key] != null) {\n        value = P._HashMap__getTableEntry(table, key);\n        delete table[key];\n        --this._collection$_length;\n        this._keys = null;\n        return value;\n      } else\n        return null;\n    },\n    _computeHashCode$1: function(key) {\n      return J.get$hashCode$(key) & 1073741823;\n    },\n    _getBucket$2: function(table, key) {\n      return table[this._computeHashCode$1(key)];\n    },\n    _findBucketIndex$2: function(bucket, key) {\n      var $length, i;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (i = 0; i < $length; i += 2)\n        if (J.$eq$(bucket[i], key))\n          return i;\n      return -1;\n    }\n  };\n  P._HashMap_values_closure.prototype = {\n    call$1: function(each) {\n      return this.$this.$index(0, each);\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"2(1)\");\n    }\n  };\n  P._HashMap_addAll_closure.prototype = {\n    call$2: function(key, value) {\n      this.$this.$indexSet(0, key, value);\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"Null(1,2)\");\n    }\n  };\n  P._HashMapKeyIterable.prototype = {\n    get$length: function(_) {\n      return this._collection$_map._collection$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._collection$_map._collection$_length === 0;\n    },\n    get$iterator: function(_) {\n      var t1 = this._collection$_map;\n      return new P._HashMapKeyIterator(t1, t1._computeKeys$0());\n    },\n    contains$1: function(_, element) {\n      return this._collection$_map.containsKey$1(element);\n    }\n  };\n  P._HashMapKeyIterator.prototype = {\n    get$current: function(_) {\n      return this._collection$_current;\n    },\n    moveNext$0: function() {\n      var _this = this,\n        keys = _this._keys,\n        offset = _this._offset,\n        t1 = _this._collection$_map;\n      if (keys !== t1._keys)\n        throw H.wrapException(P.ConcurrentModificationError$(t1));\n      else if (offset >= keys.length) {\n        _this._collection$_current = null;\n        return false;\n      } else {\n        _this._collection$_current = keys[offset];\n        _this._offset = offset + 1;\n        return true;\n      }\n    }\n  };\n  P._LinkedIdentityHashMap.prototype = {\n    internalComputeHashCode$1: function(key) {\n      return H.objectHashCode(key) & 1073741823;\n    },\n    internalFindBucketIndex$2: function(bucket, key) {\n      var $length, i, t1;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (i = 0; i < $length; ++i) {\n        t1 = bucket[i].hashMapCellKey;\n        if (t1 == null ? key == null : t1 === key)\n          return i;\n      }\n      return -1;\n    }\n  };\n  P._LinkedCustomHashMap.prototype = {\n    $index: function(_, key) {\n      if (!this._validKey.call$1(key))\n        return null;\n      return this.super$JsLinkedHashMap$internalGet(key);\n    },\n    $indexSet: function(_, key, value) {\n      this.super$JsLinkedHashMap$internalSet(key, value);\n    },\n    containsKey$1: function(key) {\n      if (!this._validKey.call$1(key))\n        return false;\n      return this.super$JsLinkedHashMap$internalContainsKey(key);\n    },\n    remove$1: function(_, key) {\n      if (!this._validKey.call$1(key))\n        return null;\n      return this.super$JsLinkedHashMap$internalRemove(key);\n    },\n    internalComputeHashCode$1: function(key) {\n      return this._hashCode.call$1(key) & 1073741823;\n    },\n    internalFindBucketIndex$2: function(bucket, key) {\n      var $length, t1, i;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (t1 = this._equals, i = 0; i < $length; ++i)\n        if (t1.call$2(bucket[i].hashMapCellKey, key))\n          return i;\n      return -1;\n    }\n  };\n  P._LinkedCustomHashMap_closure.prototype = {\n    call$1: function(v) {\n      return this.K._is(v);\n    },\n    $signature: 282\n  };\n  P._LinkedHashSet.prototype = {\n    _newSet$0: function() {\n      return new P._LinkedHashSet(H._instanceType(this)._eval$1(\"_LinkedHashSet<1>\"));\n    },\n    _newSimilarSet$1$0: function($R) {\n      return new P._LinkedHashSet($R._eval$1(\"_LinkedHashSet<0>\"));\n    },\n    _newSimilarSet$0: function() {\n      return this._newSimilarSet$1$0(type$.dynamic);\n    },\n    get$iterator: function(_) {\n      var t1 = new P._LinkedHashSetIterator(this, this._collection$_modifications);\n      t1._collection$_cell = this._collection$_first;\n      return t1;\n    },\n    get$length: function(_) {\n      return this._collection$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._collection$_length === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this._collection$_length !== 0;\n    },\n    contains$1: function(_, object) {\n      var strings, nums;\n      if (typeof object == \"string\" && object !== \"__proto__\") {\n        strings = this._collection$_strings;\n        if (strings == null)\n          return false;\n        return strings[object] != null;\n      } else if (typeof object == \"number\" && (object & 1073741823) === object) {\n        nums = this._collection$_nums;\n        if (nums == null)\n          return false;\n        return nums[object] != null;\n      } else\n        return this._contains$1(object);\n    },\n    _contains$1: function(object) {\n      var rest = this._collection$_rest;\n      if (rest == null)\n        return false;\n      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;\n    },\n    get$first: function(_) {\n      var first = this._collection$_first;\n      if (first == null)\n        throw H.wrapException(P.StateError$(\"No elements\"));\n      return first._element;\n    },\n    get$last: function(_) {\n      var last = this._collection$_last;\n      if (last == null)\n        throw H.wrapException(P.StateError$(\"No elements\"));\n      return last._element;\n    },\n    add$1: function(_, element) {\n      var strings, nums, _this = this;\n      if (typeof element == \"string\" && element !== \"__proto__\") {\n        strings = _this._collection$_strings;\n        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);\n      } else if (typeof element == \"number\" && (element & 1073741823) === element) {\n        nums = _this._collection$_nums;\n        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);\n      } else\n        return _this._add$1(element);\n    },\n    _add$1: function(element) {\n      var hash, bucket, _this = this,\n        rest = _this._collection$_rest;\n      if (rest == null)\n        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();\n      hash = _this._computeHashCode$1(element);\n      bucket = rest[hash];\n      if (bucket == null)\n        rest[hash] = [_this._collection$_newLinkedCell$1(element)];\n      else {\n        if (_this._findBucketIndex$2(bucket, element) >= 0)\n          return false;\n        bucket.push(_this._collection$_newLinkedCell$1(element));\n      }\n      return true;\n    },\n    remove$1: function(_, object) {\n      var _this = this;\n      if (typeof object == \"string\" && object !== \"__proto__\")\n        return _this._removeHashTableEntry$2(_this._collection$_strings, object);\n      else if (typeof object == \"number\" && (object & 1073741823) === object)\n        return _this._removeHashTableEntry$2(_this._collection$_nums, object);\n      else\n        return _this._remove$1(object);\n    },\n    _remove$1: function(object) {\n      var hash, bucket, index, cell, _this = this,\n        rest = _this._collection$_rest;\n      if (rest == null)\n        return false;\n      hash = _this._computeHashCode$1(object);\n      bucket = rest[hash];\n      index = _this._findBucketIndex$2(bucket, object);\n      if (index < 0)\n        return false;\n      cell = bucket.splice(index, 1)[0];\n      if (0 === bucket.length)\n        delete rest[hash];\n      _this._unlinkCell$1(cell);\n      return true;\n    },\n    _collection$_addHashTableEntry$2: function(table, element) {\n      if (table[element] != null)\n        return false;\n      table[element] = this._collection$_newLinkedCell$1(element);\n      return true;\n    },\n    _removeHashTableEntry$2: function(table, element) {\n      var cell;\n      if (table == null)\n        return false;\n      cell = table[element];\n      if (cell == null)\n        return false;\n      this._unlinkCell$1(cell);\n      delete table[element];\n      return true;\n    },\n    _collection$_modified$0: function() {\n      this._collection$_modifications = 1073741823 & this._collection$_modifications + 1;\n    },\n    _collection$_newLinkedCell$1: function(element) {\n      var t1, _this = this,\n        cell = new P._LinkedHashSetCell(element);\n      if (_this._collection$_first == null)\n        _this._collection$_first = _this._collection$_last = cell;\n      else {\n        t1 = _this._collection$_last;\n        t1.toString;\n        cell._collection$_previous = t1;\n        _this._collection$_last = t1._collection$_next = cell;\n      }\n      ++_this._collection$_length;\n      _this._collection$_modified$0();\n      return cell;\n    },\n    _unlinkCell$1: function(cell) {\n      var _this = this,\n        previous = cell._collection$_previous,\n        next = cell._collection$_next;\n      if (previous == null)\n        _this._collection$_first = next;\n      else\n        previous._collection$_next = next;\n      if (next == null)\n        _this._collection$_last = previous;\n      else\n        next._collection$_previous = previous;\n      --_this._collection$_length;\n      _this._collection$_modified$0();\n    },\n    _computeHashCode$1: function(element) {\n      return J.get$hashCode$(element) & 1073741823;\n    },\n    _findBucketIndex$2: function(bucket, element) {\n      var $length, i;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (i = 0; i < $length; ++i)\n        if (J.$eq$(bucket[i]._element, element))\n          return i;\n      return -1;\n    }\n  };\n  P._LinkedIdentityHashSet.prototype = {\n    _newSet$0: function() {\n      return new P._LinkedIdentityHashSet(this.$ti);\n    },\n    _newSimilarSet$1$0: function($R) {\n      return new P._LinkedIdentityHashSet($R._eval$1(\"_LinkedIdentityHashSet<0>\"));\n    },\n    _newSimilarSet$0: function() {\n      return this._newSimilarSet$1$0(type$.dynamic);\n    },\n    _computeHashCode$1: function(key) {\n      return H.objectHashCode(key) & 1073741823;\n    },\n    _findBucketIndex$2: function(bucket, element) {\n      var $length, i, t1;\n      if (bucket == null)\n        return -1;\n      $length = bucket.length;\n      for (i = 0; i < $length; ++i) {\n        t1 = bucket[i]._element;\n        if (t1 == null ? element == null : t1 === element)\n          return i;\n      }\n      return -1;\n    }\n  };\n  P._LinkedHashSetCell.prototype = {};\n  P._LinkedHashSetIterator.prototype = {\n    get$current: function(_) {\n      return this._collection$_current;\n    },\n    moveNext$0: function() {\n      var _this = this,\n        cell = _this._collection$_cell,\n        t1 = _this._set;\n      if (_this._collection$_modifications !== t1._collection$_modifications)\n        throw H.wrapException(P.ConcurrentModificationError$(t1));\n      else if (cell == null) {\n        _this._collection$_current = null;\n        return false;\n      } else {\n        _this._collection$_current = cell._element;\n        _this._collection$_cell = cell._collection$_next;\n        return true;\n      }\n    }\n  };\n  P.UnmodifiableListView.prototype = {\n    cast$1$0: function(_, $R) {\n      return new P.UnmodifiableListView(J.cast$1$0$ax(this._collection$_source, $R), $R._eval$1(\"UnmodifiableListView<0>\"));\n    },\n    get$length: function(_) {\n      return J.get$length$asx(this._collection$_source);\n    },\n    $index: function(_, index) {\n      return J.elementAt$1$ax(this._collection$_source, index);\n    }\n  };\n  P.HashMap_HashMap$from_closure.prototype = {\n    call$2: function(k, v) {\n      this.result.$indexSet(0, this.K._as(k), this.V._as(v));\n    },\n    $signature: 101\n  };\n  P.IterableBase.prototype = {};\n  P.LinkedHashMap_LinkedHashMap$from_closure.prototype = {\n    call$2: function(k, v) {\n      this.result.$indexSet(0, this.K._as(k), this.V._as(v));\n    },\n    $signature: 101\n  };\n  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};\n  P.ListMixin.prototype = {\n    get$iterator: function(receiver) {\n      return new H.ListIterator(receiver, this.get$length(receiver));\n    },\n    elementAt$1: function(receiver, index) {\n      return this.$index(receiver, index);\n    },\n    get$isEmpty: function(receiver) {\n      return this.get$length(receiver) === 0;\n    },\n    get$isNotEmpty: function(receiver) {\n      return !this.get$isEmpty(receiver);\n    },\n    get$first: function(receiver) {\n      if (this.get$length(receiver) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      return this.$index(receiver, 0);\n    },\n    get$last: function(receiver) {\n      if (this.get$length(receiver) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      return this.$index(receiver, this.get$length(receiver) - 1);\n    },\n    get$single: function(receiver) {\n      if (this.get$length(receiver) === 0)\n        throw H.wrapException(H.IterableElementError_noElement());\n      if (this.get$length(receiver) > 1)\n        throw H.wrapException(H.IterableElementError_tooMany());\n      return this.$index(receiver, 0);\n    },\n    contains$1: function(receiver, element) {\n      var i,\n        $length = this.get$length(receiver);\n      for (i = 0; i < $length; ++i) {\n        if (J.$eq$(this.$index(receiver, i), element))\n          return true;\n        if ($length !== this.get$length(receiver))\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return false;\n    },\n    every$1: function(receiver, test) {\n      var i,\n        $length = this.get$length(receiver);\n      for (i = 0; i < $length; ++i) {\n        if (!test.call$1(this.$index(receiver, i)))\n          return false;\n        if ($length !== this.get$length(receiver))\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return true;\n    },\n    any$1: function(receiver, test) {\n      var i,\n        $length = this.get$length(receiver);\n      for (i = 0; i < $length; ++i) {\n        if (test.call$1(this.$index(receiver, i)))\n          return true;\n        if ($length !== this.get$length(receiver))\n          throw H.wrapException(P.ConcurrentModificationError$(receiver));\n      }\n      return false;\n    },\n    join$1: function(receiver, separator) {\n      var t1;\n      if (this.get$length(receiver) === 0)\n        return \"\";\n      t1 = P.StringBuffer__writeAll(\"\", receiver, separator);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    where$1: function(receiver, test) {\n      return new H.WhereIterable(receiver, test, H.instanceType(receiver)._eval$1(\"WhereIterable<ListMixin.E>\"));\n    },\n    map$1$1: function(receiver, f, $T) {\n      return new H.MappedListIterable(receiver, f, H.instanceType(receiver)._eval$1(\"@<ListMixin.E>\")._bind$1($T)._eval$1(\"MappedListIterable<1,2>\"));\n    },\n    expand$1$1: function(receiver, f, $T) {\n      return new H.ExpandIterable(receiver, f, H.instanceType(receiver)._eval$1(\"@<ListMixin.E>\")._bind$1($T)._eval$1(\"ExpandIterable<1,2>\"));\n    },\n    skip$1: function(receiver, count) {\n      return H.SubListIterable$(receiver, count, null, H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n    },\n    take$1: function(receiver, count) {\n      return H.SubListIterable$(receiver, 0, count, H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n    },\n    toList$1$growable: function(receiver, growable) {\n      var t1, first, result, i, _this = this;\n      if (_this.get$isEmpty(receiver)) {\n        t1 = H.instanceType(receiver)._eval$1(\"ListMixin.E\");\n        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);\n      }\n      first = _this.$index(receiver, 0);\n      result = P.List_List$filled(_this.get$length(receiver), first, growable, H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n      for (i = 1; i < _this.get$length(receiver); ++i)\n        result[i] = _this.$index(receiver, i);\n      return result;\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(receiver) {\n      var i,\n        result = P.LinkedHashSet_LinkedHashSet(H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n      for (i = 0; i < this.get$length(receiver); ++i)\n        result.add$1(0, this.$index(receiver, i));\n      return result;\n    },\n    add$1: function(receiver, element) {\n      var t1 = this.get$length(receiver);\n      this.set$length(receiver, t1 + 1);\n      this.$indexSet(receiver, t1, element);\n    },\n    addAll$1: function(receiver, iterable) {\n      var t1,\n        i = this.get$length(receiver);\n      for (t1 = iterable.get$iterator(iterable); t1.moveNext$0();) {\n        this.add$1(receiver, t1.get$current(t1));\n        ++i;\n      }\n    },\n    cast$1$0: function(receiver, $R) {\n      return new H.CastList(receiver, H.instanceType(receiver)._eval$1(\"@<ListMixin.E>\")._bind$1($R)._eval$1(\"CastList<1,2>\"));\n    },\n    sort$1: function(receiver, compare) {\n      H.Sort_sort(receiver, compare == null ? P.collection_ListMixin__compareAny$closure() : compare);\n    },\n    sublist$2: function(receiver, start, end) {\n      var listLength = this.get$length(receiver);\n      P.RangeError_checkValidRange(start, end, listLength);\n      return P.List_List$from(this.getRange$2(receiver, start, end), true, H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n    },\n    getRange$2: function(receiver, start, end) {\n      P.RangeError_checkValidRange(start, end, this.get$length(receiver));\n      return H.SubListIterable$(receiver, start, end, H.instanceType(receiver)._eval$1(\"ListMixin.E\"));\n    },\n    fillRange$3: function(receiver, start, end, fill) {\n      var i;\n      P.RangeError_checkValidRange(start, end, this.get$length(receiver));\n      for (i = start; i < end; ++i)\n        this.$indexSet(receiver, i, fill);\n    },\n    setRange$4: function(receiver, start, end, iterable, skipCount) {\n      var $length, otherStart, otherList, t1, i;\n      P.RangeError_checkValidRange(start, end, this.get$length(receiver));\n      $length = end - start;\n      if ($length === 0)\n        return;\n      P.RangeError_checkNotNegative(skipCount, \"skipCount\");\n      if (H.instanceType(receiver)._eval$1(\"List<ListMixin.E>\")._is(iterable)) {\n        otherStart = skipCount;\n        otherList = iterable;\n      } else {\n        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);\n        otherStart = 0;\n      }\n      t1 = J.getInterceptor$asx(otherList);\n      if (otherStart + $length > t1.get$length(otherList))\n        throw H.wrapException(H.IterableElementError_tooFew());\n      if (otherStart < start)\n        for (i = $length - 1; i >= 0; --i)\n          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));\n      else\n        for (i = 0; i < $length; ++i)\n          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));\n    },\n    get$reversed: function(receiver) {\n      return new H.ReversedListIterable(receiver, H.instanceType(receiver)._eval$1(\"ReversedListIterable<ListMixin.E>\"));\n    },\n    toString$0: function(receiver) {\n      return P.IterableBase_iterableToFullString(receiver, \"[\", \"]\");\n    }\n  };\n  P.MapBase.prototype = {};\n  P.MapBase_mapToString_closure.prototype = {\n    call$2: function(k, v) {\n      var t2,\n        t1 = this._box_0;\n      if (!t1.first)\n        this.result._contents += \", \";\n      t1.first = false;\n      t1 = this.result;\n      t2 = t1._contents += H.S(k);\n      t1._contents = t2 + \": \";\n      t1._contents += H.S(v);\n    },\n    $signature: 208\n  };\n  P.MapMixin.prototype = {\n    forEach$1: function(_, action) {\n      var t1, key;\n      for (t1 = J.get$iterator$ax(this.get$keys(this)); t1.moveNext$0();) {\n        key = t1.get$current(t1);\n        action.call$2(key, this.$index(0, key));\n      }\n    },\n    addAll$1: function(_, other) {\n      var t1, key;\n      for (t1 = J.get$iterator$ax(other.get$keys(other)); t1.moveNext$0();) {\n        key = t1.get$current(t1);\n        this.$indexSet(0, key, other.$index(0, key));\n      }\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      var t1;\n      if (this.containsKey$1(key))\n        return this.$index(0, key);\n      t1 = ifAbsent.call$0();\n      this.$indexSet(0, key, t1);\n      return t1;\n    },\n    get$entries: function(_) {\n      var _this = this;\n      return J.map$1$1$ax(_this.get$keys(_this), new P.MapMixin_entries_closure(_this), H._instanceType(_this)._eval$1(\"MapEntry<MapMixin.K,MapMixin.V>\"));\n    },\n    containsKey$1: function(key) {\n      return J.contains$1$asx(this.get$keys(this), key);\n    },\n    get$length: function(_) {\n      return J.get$length$asx(this.get$keys(this));\n    },\n    get$isEmpty: function(_) {\n      return J.get$isEmpty$asx(this.get$keys(this));\n    },\n    get$isNotEmpty: function(_) {\n      return J.get$isNotEmpty$asx(this.get$keys(this));\n    },\n    get$values: function(_) {\n      var t1 = H._instanceType(this);\n      return new P._MapBaseValueIterable(this, t1._eval$1(\"@<MapMixin.K>\")._bind$1(t1._eval$1(\"MapMixin.V\"))._eval$1(\"_MapBaseValueIterable<1,2>\"));\n    },\n    toString$0: function(_) {\n      return P.MapBase_mapToString(this);\n    },\n    $isMap: 1\n  };\n  P.MapMixin_entries_closure.prototype = {\n    call$1: function(key) {\n      var t1 = this.$this,\n        t2 = H._instanceType(t1);\n      return new P.MapEntry(key, t1.$index(0, key), t2._eval$1(\"@<MapMixin.K>\")._bind$1(t2._eval$1(\"MapMixin.V\"))._eval$1(\"MapEntry<1,2>\"));\n    },\n    $signature: function() {\n      return H._instanceType(this.$this)._eval$1(\"MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)\");\n    }\n  };\n  P.UnmodifiableMapBase.prototype = {};\n  P._MapBaseValueIterable.prototype = {\n    get$length: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$isNotEmpty(t1);\n    },\n    get$first: function(_) {\n      var t1 = this._collection$_map;\n      return t1.$index(0, J.get$first$ax(t1.get$keys(t1)));\n    },\n    get$single: function(_) {\n      var t1 = this._collection$_map;\n      return t1.$index(0, J.get$single$ax(t1.get$keys(t1)));\n    },\n    get$last: function(_) {\n      var t1 = this._collection$_map;\n      return t1.$index(0, J.get$last$ax(t1.get$keys(t1)));\n    },\n    get$iterator: function(_) {\n      var t1 = this._collection$_map;\n      return new P._MapBaseValueIterator(J.get$iterator$ax(t1.get$keys(t1)), t1);\n    }\n  };\n  P._MapBaseValueIterator.prototype = {\n    moveNext$0: function() {\n      var _this = this,\n        t1 = _this._keys;\n      if (t1.moveNext$0()) {\n        _this._collection$_current = _this._collection$_map.$index(0, t1.get$current(t1));\n        return true;\n      }\n      _this._collection$_current = null;\n      return false;\n    },\n    get$current: function(_) {\n      var cur = this._collection$_current;\n      return cur;\n    }\n  };\n  P._UnmodifiableMapMixin.prototype = {\n    $indexSet: function(_, key, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify unmodifiable map\"));\n    },\n    addAll$1: function(_, other) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify unmodifiable map\"));\n    },\n    remove$1: function(_, key) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify unmodifiable map\"));\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot modify unmodifiable map\"));\n    }\n  };\n  P.MapView.prototype = {\n    $index: function(_, key) {\n      return this._collection$_map.$index(0, key);\n    },\n    $indexSet: function(_, key, value) {\n      this._collection$_map.$indexSet(0, key, value);\n    },\n    addAll$1: function(_, other) {\n      this._collection$_map.addAll$1(0, other);\n    },\n    putIfAbsent$2: function(key, ifAbsent) {\n      return this._collection$_map.putIfAbsent$2(key, ifAbsent);\n    },\n    containsKey$1: function(key) {\n      return this._collection$_map.containsKey$1(key);\n    },\n    forEach$1: function(_, action) {\n      this._collection$_map.forEach$1(0, action);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$isNotEmpty(t1);\n    },\n    get$length: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$length(t1);\n    },\n    get$keys: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$keys(t1);\n    },\n    remove$1: function(_, key) {\n      return this._collection$_map.remove$1(0, key);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this._collection$_map);\n    },\n    get$values: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$values(t1);\n    },\n    get$entries: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$entries(t1);\n    },\n    $isMap: 1\n  };\n  P.UnmodifiableMapView.prototype = {};\n  P.ListQueue.prototype = {\n    cast$1$0: function(_, $R) {\n      return new H.CastQueue(this, this.$ti._eval$1(\"@<1>\")._bind$1($R)._eval$1(\"CastQueue<1,2>\"));\n    },\n    get$iterator: function(_) {\n      var _this = this;\n      return new P._ListQueueIterator(_this, _this._collection$_tail, _this._modificationCount, _this._collection$_head);\n    },\n    get$isEmpty: function(_) {\n      return this._collection$_head === this._collection$_tail;\n    },\n    get$length: function(_) {\n      return (this._collection$_tail - this._collection$_head & this._collection$_table.length - 1) >>> 0;\n    },\n    get$first: function(_) {\n      var t1 = this._collection$_head;\n      if (t1 === this._collection$_tail)\n        throw H.wrapException(H.IterableElementError_noElement());\n      return this._collection$_table[t1];\n    },\n    get$last: function(_) {\n      var t1 = this._collection$_head,\n        t2 = this._collection$_tail;\n      if (t1 === t2)\n        throw H.wrapException(H.IterableElementError_noElement());\n      t1 = this._collection$_table;\n      return t1[(t2 - 1 & t1.length - 1) >>> 0];\n    },\n    get$single: function(_) {\n      var _this = this;\n      if (_this._collection$_head === _this._collection$_tail)\n        throw H.wrapException(H.IterableElementError_noElement());\n      if (_this.get$length(_this) > 1)\n        throw H.wrapException(H.IterableElementError_tooMany());\n      return _this._collection$_table[_this._collection$_head];\n    },\n    elementAt$1: function(_, index) {\n      var t1;\n      P.RangeError_checkValidIndex(index, this, null);\n      t1 = this._collection$_table;\n      return t1[(this._collection$_head + index & t1.length - 1) >>> 0];\n    },\n    toList$1$growable: function(_, growable) {\n      var t1, list, t2, i, _this = this,\n        mask = _this._collection$_table.length - 1,\n        $length = (_this._collection$_tail - _this._collection$_head & mask) >>> 0;\n      if ($length === 0) {\n        t1 = _this.$ti._precomputed1;\n        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);\n      }\n      list = P.List_List$filled($length, _this.get$first(_this), growable, _this.$ti._precomputed1);\n      for (t1 = _this._collection$_table, t2 = _this._collection$_head, i = 0; i < $length; ++i)\n        list[i] = t1[(t2 + i & mask) >>> 0];\n      return list;\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    add$1: function(_, value) {\n      this._add$1(value);\n    },\n    addAll$1: function(_, elements) {\n      var addCount, $length, t2, t3, t4, newTable, endSpace, preSpace, _this = this,\n        t1 = _this.$ti;\n      if (t1._eval$1(\"List<1>\")._is(elements)) {\n        addCount = J.get$length$asx(elements);\n        $length = _this.get$length(_this);\n        t2 = $length + addCount;\n        t3 = _this._collection$_table;\n        t4 = t3.length;\n        if (t2 >= t4) {\n          newTable = P.List_List$filled(P.ListQueue__nextPowerOf2(t2 + C.JSInt_methods._shrOtherPositive$1(t2, 1)), null, false, t1._eval$1(\"1?\"));\n          _this._collection$_tail = _this._collection$_writeToList$1(newTable);\n          _this._collection$_table = newTable;\n          _this._collection$_head = 0;\n          C.JSArray_methods.setRange$4(newTable, $length, t2, elements, 0);\n          _this._collection$_tail += addCount;\n        } else {\n          t1 = _this._collection$_tail;\n          endSpace = t4 - t1;\n          if (addCount < endSpace) {\n            C.JSArray_methods.setRange$4(t3, t1, t1 + addCount, elements, 0);\n            _this._collection$_tail += addCount;\n          } else {\n            preSpace = addCount - endSpace;\n            C.JSArray_methods.setRange$4(t3, t1, t1 + endSpace, elements, 0);\n            C.JSArray_methods.setRange$4(_this._collection$_table, 0, preSpace, elements, endSpace);\n            _this._collection$_tail = preSpace;\n          }\n        }\n        ++_this._modificationCount;\n      } else\n        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)\n          _this._add$1(t1.get$current(t1));\n    },\n    clear$0: function(_) {\n      var t2, t3, _this = this,\n        i = _this._collection$_head,\n        t1 = _this._collection$_tail;\n      if (i !== t1) {\n        for (t2 = _this._collection$_table, t3 = t2.length - 1; i !== t1; i = (i + 1 & t3) >>> 0)\n          t2[i] = null;\n        _this._collection$_head = _this._collection$_tail = 0;\n        ++_this._modificationCount;\n      }\n    },\n    toString$0: function(_) {\n      return P.IterableBase_iterableToFullString(this, \"{\", \"}\");\n    },\n    addFirst$1: function(value) {\n      var _this = this,\n        t1 = _this._collection$_head,\n        t2 = _this._collection$_table;\n      t1 = _this._collection$_head = (t1 - 1 & t2.length - 1) >>> 0;\n      t2[t1] = value;\n      if (t1 === _this._collection$_tail)\n        _this._collection$_grow$0();\n      ++_this._modificationCount;\n    },\n    removeFirst$0: function() {\n      var t2, result, _this = this,\n        t1 = _this._collection$_head;\n      if (t1 === _this._collection$_tail)\n        throw H.wrapException(H.IterableElementError_noElement());\n      ++_this._modificationCount;\n      t2 = _this._collection$_table;\n      result = t2[t1];\n      t2[t1] = null;\n      _this._collection$_head = (t1 + 1 & t2.length - 1) >>> 0;\n      return result;\n    },\n    removeLast$0: function(_) {\n      var result, _this = this,\n        t1 = _this._collection$_head,\n        t2 = _this._collection$_tail;\n      if (t1 === t2)\n        throw H.wrapException(H.IterableElementError_noElement());\n      ++_this._modificationCount;\n      t1 = _this._collection$_table;\n      t2 = _this._collection$_tail = (t2 - 1 & t1.length - 1) >>> 0;\n      result = t1[t2];\n      t1[t2] = null;\n      return result;\n    },\n    _add$1: function(element) {\n      var _this = this,\n        t1 = _this._collection$_table,\n        t2 = _this._collection$_tail;\n      t1[t2] = element;\n      t1 = (t2 + 1 & t1.length - 1) >>> 0;\n      _this._collection$_tail = t1;\n      if (_this._collection$_head === t1)\n        _this._collection$_grow$0();\n      ++_this._modificationCount;\n    },\n    _collection$_grow$0: function() {\n      var _this = this,\n        newTable = P.List_List$filled(_this._collection$_table.length * 2, null, false, _this.$ti._eval$1(\"1?\")),\n        t1 = _this._collection$_table,\n        t2 = _this._collection$_head,\n        split = t1.length - t2;\n      C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);\n      C.JSArray_methods.setRange$4(newTable, split, split + _this._collection$_head, _this._collection$_table, 0);\n      _this._collection$_head = 0;\n      _this._collection$_tail = _this._collection$_table.length;\n      _this._collection$_table = newTable;\n    },\n    _collection$_writeToList$1: function(target) {\n      var $length, firstPartSize, _this = this,\n        t1 = _this._collection$_head,\n        t2 = _this._collection$_tail,\n        t3 = _this._collection$_table;\n      if (t1 <= t2) {\n        $length = t2 - t1;\n        C.JSArray_methods.setRange$4(target, 0, $length, t3, t1);\n        return $length;\n      } else {\n        firstPartSize = t3.length - t1;\n        C.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);\n        C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._collection$_tail, _this._collection$_table, 0);\n        return _this._collection$_tail + firstPartSize;\n      }\n    },\n    $isQueue: 1\n  };\n  P._ListQueueIterator.prototype = {\n    get$current: function(_) {\n      var cur = this._collection$_current;\n      return cur;\n    },\n    moveNext$0: function() {\n      var t2, _this = this,\n        t1 = _this._queue;\n      if (_this._modificationCount !== t1._modificationCount)\n        H.throwExpression(P.ConcurrentModificationError$(t1));\n      t2 = _this._collection$_position;\n      if (t2 === _this._collection$_end) {\n        _this._collection$_current = null;\n        return false;\n      }\n      t1 = t1._collection$_table;\n      _this._collection$_current = t1[t2];\n      _this._collection$_position = (t2 + 1 & t1.length - 1) >>> 0;\n      return true;\n    }\n  };\n  P._SetBase.prototype = {\n    cast$1$0: function(_, $R) {\n      return P.Set_castFrom(this, this.get$_newSimilarSet(), H._instanceType(this)._precomputed1, $R);\n    },\n    difference$1: function(other) {\n      var t1, element,\n        result = this._newSet$0();\n      for (t1 = this.get$iterator(this); t1.moveNext$0();) {\n        element = t1.get$current(t1);\n        if (!other.contains$1(0, element))\n          result.add$1(0, element);\n      }\n      return result;\n    },\n    intersection$1: function(other) {\n      var t1, t2, element,\n        result = this._newSet$0();\n      for (t1 = this.get$iterator(this), t2 = other._baseMap; t1.moveNext$0();) {\n        element = t1.get$current(t1);\n        if (t2.containsKey$1(element))\n          result.add$1(0, element);\n      }\n      return result;\n    },\n    toSet$0: function(_) {\n      var t1 = this._newSet$0();\n      t1.addAll$1(0, this);\n      return t1;\n    },\n    get$isEmpty: function(_) {\n      return this.get$length(this) === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this.get$length(this) !== 0;\n    },\n    addAll$1: function(_, elements) {\n      var t1;\n      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)\n        this.add$1(0, t1.get$current(t1));\n    },\n    removeAll$1: function(elements) {\n      var t1;\n      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)\n        this.remove$1(0, t1.get$current(t1));\n    },\n    toList$1$growable: function(_, growable) {\n      return P.List_List$from(this, growable, H._instanceType(this)._precomputed1);\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    map$1$1: function(_, f, $T) {\n      return new H.EfficientLengthMappedIterable(this, f, H._instanceType(this)._eval$1(\"@<1>\")._bind$1($T)._eval$1(\"EfficientLengthMappedIterable<1,2>\"));\n    },\n    get$single: function(_) {\n      var it, _this = this;\n      if (_this.get$length(_this) > 1)\n        throw H.wrapException(H.IterableElementError_tooMany());\n      it = _this.get$iterator(_this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      return it.get$current(it);\n    },\n    toString$0: function(_) {\n      return P.IterableBase_iterableToFullString(this, \"{\", \"}\");\n    },\n    where$1: function(_, f) {\n      return new H.WhereIterable(this, f, H._instanceType(this)._eval$1(\"WhereIterable<1>\"));\n    },\n    join$1: function(_, separator) {\n      var t1,\n        iterator = this.get$iterator(this);\n      if (!iterator.moveNext$0())\n        return \"\";\n      if (separator === \"\") {\n        t1 = \"\";\n        do\n          t1 += H.S(iterator.get$current(iterator));\n        while (iterator.moveNext$0());\n      } else {\n        t1 = H.S(iterator.get$current(iterator));\n        for (; iterator.moveNext$0();)\n          t1 = t1 + separator + H.S(iterator.get$current(iterator));\n      }\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    any$1: function(_, test) {\n      var t1;\n      for (t1 = this.get$iterator(this); t1.moveNext$0();)\n        if (test.call$1(t1.get$current(t1)))\n          return true;\n      return false;\n    },\n    take$1: function(_, n) {\n      return H.TakeIterable_TakeIterable(this, n, H._instanceType(this)._precomputed1);\n    },\n    skip$1: function(_, n) {\n      return H.SkipIterable_SkipIterable(this, n, H._instanceType(this)._precomputed1);\n    },\n    get$first: function(_) {\n      var it = this.get$iterator(this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      return it.get$current(it);\n    },\n    get$last: function(_) {\n      var result,\n        it = this.get$iterator(this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      do\n        result = it.get$current(it);\n      while (it.moveNext$0());\n      return result;\n    },\n    elementAt$1: function(_, index) {\n      var t1, elementIndex, element, _s5_ = \"index\";\n      P.ArgumentError_checkNotNull(index, _s5_);\n      P.RangeError_checkNotNegative(index, _s5_);\n      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {\n        element = t1.get$current(t1);\n        if (index === elementIndex)\n          return element;\n        ++elementIndex;\n      }\n      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));\n    },\n    $isEfficientLengthIterable: 1,\n    $isIterable: 1,\n    $isSet: 1\n  };\n  P._UnmodifiableSet.prototype = {\n    _newSet$0: function() {\n      return P.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);\n    },\n    _newSimilarSet$1$0: function($R) {\n      return P.LinkedHashSet_LinkedHashSet($R);\n    },\n    _newSimilarSet$0: function() {\n      return this._newSimilarSet$1$0(type$.dynamic);\n    },\n    contains$1: function(_, element) {\n      return this._collection$_map.containsKey$1(element);\n    },\n    get$iterator: function(_) {\n      var t1 = this._collection$_map;\n      return J.get$iterator$ax(t1.get$keys(t1));\n    },\n    get$length: function(_) {\n      var t1 = this._collection$_map;\n      return t1.get$length(t1);\n    },\n    add$1: function(_, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot change unmodifiable set\"));\n    },\n    addAll$1: function(_, elements) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot change unmodifiable set\"));\n    },\n    remove$1: function(_, value) {\n      throw H.wrapException(P.UnsupportedError$(\"Cannot change unmodifiable set\"));\n    }\n  };\n  P._ListBase_Object_ListMixin.prototype = {};\n  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};\n  P.Utf8Decoder_closure.prototype = {\n    call$0: function() {\n      var t1, exception;\n      try {\n        t1 = new TextDecoder(\"utf-8\", {fatal: true});\n        return t1;\n      } catch (exception) {\n        H.unwrapException(exception);\n      }\n      return null;\n    },\n    $signature: 74\n  };\n  P.Utf8Decoder_closure0.prototype = {\n    call$0: function() {\n      var t1, exception;\n      try {\n        t1 = new TextDecoder(\"utf-8\", {fatal: false});\n        return t1;\n      } catch (exception) {\n        H.unwrapException(exception);\n      }\n      return null;\n    },\n    $signature: 74\n  };\n  P.AsciiCodec.prototype = {\n    encode$1: function(source) {\n      return C.AsciiEncoder_127.convert$1(source);\n    },\n    get$encoder: function() {\n      return C.AsciiEncoder_127;\n    }\n  };\n  P._UnicodeSubsetEncoder.prototype = {\n    convert$1: function(string) {\n      var t1, t2, i, codeUnit,\n        end = P.RangeError_checkValidRange(0, null, string.length),\n        $length = end - 0,\n        result = new Uint8Array($length);\n      for (t1 = ~this._subsetMask, t2 = J.getInterceptor$s(string), i = 0; i < $length; ++i) {\n        codeUnit = t2._codeUnitAt$1(string, i);\n        if ((codeUnit & t1) !== 0)\n          throw H.wrapException(P.ArgumentError$value(string, \"string\", \"Contains invalid characters.\"));\n        result[i] = codeUnit;\n      }\n      return result;\n    }\n  };\n  P.AsciiEncoder.prototype = {};\n  P.Base64Codec.prototype = {\n    get$encoder: function() {\n      return C.C_Base64Encoder;\n    },\n    normalize$3: function(source, start, end) {\n      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length,\n        _s31_ = \"Invalid base64 encoding length \";\n      end = P.RangeError_checkValidRange(start, end, source.length);\n      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();\n      for (i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {\n        i0 = i + 1;\n        char = C.JSString_methods._codeUnitAt$1(source, i);\n        if (char === 37) {\n          i1 = i0 + 2;\n          if (i1 <= end) {\n            digit1 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0));\n            digit2 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0 + 1));\n            char0 = digit1 * 16 + digit2 - (digit2 & 256);\n            if (char0 === 37)\n              char0 = -1;\n            i0 = i1;\n          } else\n            char0 = -1;\n        } else\n          char0 = char;\n        if (0 <= char0 && char0 <= 127) {\n          value = inverseAlphabet[char0];\n          if (value >= 0) {\n            char0 = C.JSString_methods.codeUnitAt$1(string$.ABCDEF, value);\n            if (char0 === char)\n              continue;\n            char = char0;\n          } else {\n            if (value === -1) {\n              if (firstPadding < 0) {\n                t1 = buffer == null ? null : buffer._contents.length;\n                if (t1 == null)\n                  t1 = 0;\n                firstPadding = t1 + (i - sliceStart);\n                firstPaddingSourceIndex = i;\n              }\n              ++paddingCount;\n              if (char === 61)\n                continue;\n            }\n            char = char0;\n          }\n          if (value !== -2) {\n            if (buffer == null) {\n              buffer = new P.StringBuffer(\"\");\n              t1 = buffer;\n            } else\n              t1 = buffer;\n            t1._contents += C.JSString_methods.substring$2(source, sliceStart, i);\n            t1._contents += H.Primitives_stringFromCharCode(char);\n            sliceStart = i0;\n            continue;\n          }\n        }\n        throw H.wrapException(P.FormatException$(\"Invalid base64 data\", source, i));\n      }\n      if (buffer != null) {\n        t1 = buffer._contents += C.JSString_methods.substring$2(source, sliceStart, end);\n        t2 = t1.length;\n        if (firstPadding >= 0)\n          P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);\n        else {\n          endLength = C.JSInt_methods.$mod(t2 - 1, 4) + 1;\n          if (endLength === 1)\n            throw H.wrapException(P.FormatException$(_s31_, source, end));\n          for (; endLength < 4;) {\n            t1 += \"=\";\n            buffer._contents = t1;\n            ++endLength;\n          }\n        }\n        t1 = buffer._contents;\n        return C.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);\n      }\n      $length = end - start;\n      if (firstPadding >= 0)\n        P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);\n      else {\n        endLength = C.JSInt_methods.$mod($length, 4);\n        if (endLength === 1)\n          throw H.wrapException(P.FormatException$(_s31_, source, end));\n        if (endLength > 1)\n          source = C.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? \"==\" : \"=\");\n      }\n      return source;\n    }\n  };\n  P.Base64Encoder.prototype = {\n    convert$1: function(input) {\n      var t1 = J.getInterceptor$asx(input);\n      if (t1.get$isEmpty(input))\n        return \"\";\n      t1 = new P._Base64Encoder(string$.ABCDEF).encode$4(input, 0, t1.get$length(input), true);\n      t1.toString;\n      return P.String_String$fromCharCodes(t1, 0, null);\n    },\n    startChunkedConversion$1: function(sink) {\n      var t1,\n        _s64_ = string$.ABCDEF;\n      if (type$.StringConversionSink._is(sink)) {\n        t1 = sink.asUtf8Sink$1(false);\n        return new P._Utf8Base64EncoderSink(t1, new P._Base64Encoder(_s64_));\n      }\n      return new P._AsciiBase64EncoderSink(sink, new P._BufferCachingBase64Encoder(_s64_));\n    }\n  };\n  P._Base64Encoder.prototype = {\n    createBuffer$1: function(bufferLength) {\n      return new Uint8Array(bufferLength);\n    },\n    encode$4: function(bytes, start, end, isLast) {\n      var output, _this = this,\n        byteCount = (_this._convert$_state & 3) + (end - start),\n        fullChunks = C.JSInt_methods._tdivFast$1(byteCount, 3),\n        bufferLength = fullChunks * 4;\n      if (isLast && byteCount - fullChunks * 3 > 0)\n        bufferLength += 4;\n      output = _this.createBuffer$1(bufferLength);\n      _this._convert$_state = P._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state);\n      if (bufferLength > 0)\n        return output;\n      return null;\n    }\n  };\n  P._BufferCachingBase64Encoder.prototype = {\n    createBuffer$1: function(bufferLength) {\n      var buffer = this.bufferCache;\n      if (buffer == null || buffer.length < bufferLength)\n        buffer = this.bufferCache = new Uint8Array(bufferLength);\n      if (buffer == null)\n        throw H.wrapException(\"unreachable\");\n      return H.NativeUint8List_NativeUint8List$view(buffer.buffer, buffer.byteOffset, bufferLength);\n    }\n  };\n  P._Base64EncoderSink.prototype = {\n    add$1: function(_, source) {\n      this._convert$_add$4(source, 0, J.get$length$asx(source), false);\n    },\n    close$0: function(_) {\n      this._convert$_add$4(C.List_empty1, 0, 0, true);\n    },\n    addSlice$4: function(source, start, end, isLast) {\n      P.RangeError_checkValidRange(start, end, source.length);\n      this._convert$_add$4(source, start, end, isLast);\n    }\n  };\n  P._AsciiBase64EncoderSink.prototype = {\n    _convert$_add$4: function(source, start, end, isLast) {\n      var buffer = this._encoder.encode$4(source, start, end, isLast);\n      if (buffer != null)\n        this._sink.add$1(0, P.String_String$fromCharCodes(buffer, 0, null));\n      if (isLast)\n        this._sink.close$0(0);\n    }\n  };\n  P._Utf8Base64EncoderSink.prototype = {\n    _convert$_add$4: function(source, start, end, isLast) {\n      var buffer = this._encoder.encode$4(source, start, end, isLast);\n      if (buffer != null)\n        this._sink.addSlice$4(buffer, 0, buffer.length, isLast);\n    }\n  };\n  P.ByteConversionSink.prototype = {};\n  P.ByteConversionSinkBase.prototype = {};\n  P.ChunkedConversionSink.prototype = {};\n  P.Codec.prototype = {\n    encode$1: function(input) {\n      return this.get$encoder().convert$1(input);\n    }\n  };\n  P.Converter.prototype = {};\n  P.Encoding.prototype = {};\n  P.JsonUnsupportedObjectError.prototype = {\n    toString$0: function(_) {\n      var safeString = P.Error_safeToString(this.unsupportedObject);\n      return (this.cause != null ? \"Converting object to an encodable object failed:\" : \"Converting object did not return an encodable object:\") + \" \" + safeString;\n    }\n  };\n  P.JsonCyclicError.prototype = {\n    toString$0: function(_) {\n      return \"Cyclic error in JSON stringify\";\n    }\n  };\n  P.JsonCodec.prototype = {\n    encode$2$toEncodable: function(value, toEncodable) {\n      var t1 = P._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);\n      return t1;\n    },\n    get$encoder: function() {\n      return C.JsonEncoder_null;\n    }\n  };\n  P.JsonEncoder.prototype = {\n    convert$1: function(object) {\n      var t1,\n        output = new P.StringBuffer(\"\");\n      P._JsonStringStringifier_printOn(object, output, this._toEncodable, null);\n      t1 = output._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  P._JsonStringifier.prototype = {\n    writeStringContent$1: function(s) {\n      var t1, offset, i, charCode, t2, t3, _this = this,\n        $length = s.length;\n      for (t1 = J.getInterceptor$s(s), offset = 0, i = 0; i < $length; ++i) {\n        charCode = t1._codeUnitAt$1(s, i);\n        if (charCode > 92) {\n          if (charCode >= 55296) {\n            t2 = charCode & 64512;\n            if (t2 === 55296) {\n              t3 = i + 1;\n              t3 = !(t3 < $length && (C.JSString_methods._codeUnitAt$1(s, t3) & 64512) === 56320);\n            } else\n              t3 = false;\n            if (!t3)\n              if (t2 === 56320) {\n                t2 = i - 1;\n                t2 = !(t2 >= 0 && (C.JSString_methods.codeUnitAt$1(s, t2) & 64512) === 55296);\n              } else\n                t2 = false;\n            else\n              t2 = true;\n            if (t2) {\n              if (i > offset)\n                _this.writeStringSlice$3(s, offset, i);\n              offset = i + 1;\n              _this.writeCharCode$1(92);\n              _this.writeCharCode$1(117);\n              _this.writeCharCode$1(100);\n              t2 = charCode >>> 8 & 15;\n              _this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n              t2 = charCode >>> 4 & 15;\n              _this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n              t2 = charCode & 15;\n              _this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n            }\n          }\n          continue;\n        }\n        if (charCode < 32) {\n          if (i > offset)\n            _this.writeStringSlice$3(s, offset, i);\n          offset = i + 1;\n          _this.writeCharCode$1(92);\n          switch (charCode) {\n            case 8:\n              _this.writeCharCode$1(98);\n              break;\n            case 9:\n              _this.writeCharCode$1(116);\n              break;\n            case 10:\n              _this.writeCharCode$1(110);\n              break;\n            case 12:\n              _this.writeCharCode$1(102);\n              break;\n            case 13:\n              _this.writeCharCode$1(114);\n              break;\n            default:\n              _this.writeCharCode$1(117);\n              _this.writeCharCode$1(48);\n              _this.writeCharCode$1(48);\n              t2 = charCode >>> 4 & 15;\n              _this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n              t2 = charCode & 15;\n              _this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n              break;\n          }\n        } else if (charCode === 34 || charCode === 92) {\n          if (i > offset)\n            _this.writeStringSlice$3(s, offset, i);\n          offset = i + 1;\n          _this.writeCharCode$1(92);\n          _this.writeCharCode$1(charCode);\n        }\n      }\n      if (offset === 0)\n        _this.writeString$1(s);\n      else if (offset < $length)\n        _this.writeStringSlice$3(s, offset, $length);\n    },\n    _checkCycle$1: function(object) {\n      var t1, t2, i, t3;\n      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {\n        t3 = t1[i];\n        if (object == null ? t3 == null : object === t3)\n          throw H.wrapException(new P.JsonCyclicError(object, null));\n      }\n      t1.push(object);\n    },\n    writeObject$1: function(object) {\n      var customJson, e, t1, exception, _this = this;\n      if (_this.writeJsonValue$1(object))\n        return;\n      _this._checkCycle$1(object);\n      try {\n        customJson = _this._toEncodable.call$1(object);\n        if (!_this.writeJsonValue$1(customJson)) {\n          t1 = P.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());\n          throw H.wrapException(t1);\n        }\n        _this._seen.pop();\n      } catch (exception) {\n        e = H.unwrapException(exception);\n        t1 = P.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());\n        throw H.wrapException(t1);\n      }\n    },\n    writeJsonValue$1: function(object) {\n      var success, _this = this;\n      if (typeof object == \"number\") {\n        if (!isFinite(object))\n          return false;\n        _this.writeNumber$1(object);\n        return true;\n      } else if (object === true) {\n        _this.writeString$1(\"true\");\n        return true;\n      } else if (object === false) {\n        _this.writeString$1(\"false\");\n        return true;\n      } else if (object == null) {\n        _this.writeString$1(\"null\");\n        return true;\n      } else if (typeof object == \"string\") {\n        _this.writeString$1('\"');\n        _this.writeStringContent$1(object);\n        _this.writeString$1('\"');\n        return true;\n      } else if (type$.List_dynamic._is(object)) {\n        _this._checkCycle$1(object);\n        _this.writeList$1(object);\n        _this._seen.pop();\n        return true;\n      } else if (type$.Map_dynamic_dynamic._is(object)) {\n        _this._checkCycle$1(object);\n        success = _this.writeMap$1(object);\n        _this._seen.pop();\n        return success;\n      } else\n        return false;\n    },\n    writeList$1: function(list) {\n      var t1, i, _this = this;\n      _this.writeString$1(\"[\");\n      t1 = J.getInterceptor$asx(list);\n      if (t1.get$isNotEmpty(list)) {\n        _this.writeObject$1(t1.$index(list, 0));\n        for (i = 1; i < t1.get$length(list); ++i) {\n          _this.writeString$1(\",\");\n          _this.writeObject$1(t1.$index(list, i));\n        }\n      }\n      _this.writeString$1(\"]\");\n    },\n    writeMap$1: function(map) {\n      var keyValueList, i, separator, _this = this, _box_0 = {};\n      if (map.get$isEmpty(map)) {\n        _this.writeString$1(\"{}\");\n        return true;\n      }\n      keyValueList = P.List_List$filled(map.get$length(map) * 2, null, false, type$.nullable_Object);\n      i = _box_0.i = 0;\n      _box_0.allStringKeys = true;\n      map.forEach$1(0, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));\n      if (!_box_0.allStringKeys)\n        return false;\n      _this.writeString$1(\"{\");\n      for (separator = '\"'; i < keyValueList.length; i += 2, separator = ',\"') {\n        _this.writeString$1(separator);\n        _this.writeStringContent$1(H._asStringS(keyValueList[i]));\n        _this.writeString$1('\":');\n        _this.writeObject$1(keyValueList[i + 1]);\n      }\n      _this.writeString$1(\"}\");\n      return true;\n    }\n  };\n  P._JsonStringifier_writeMap_closure.prototype = {\n    call$2: function(key, value) {\n      var t1, t2, t3, i;\n      if (typeof key != \"string\")\n        this._box_0.allStringKeys = false;\n      t1 = this.keyValueList;\n      t2 = this._box_0;\n      t3 = t2.i;\n      i = t2.i = t3 + 1;\n      t1[t3] = key;\n      t2.i = i + 1;\n      t1[i] = value;\n    },\n    $signature: 208\n  };\n  P._JsonStringStringifier.prototype = {\n    get$_partialResult: function() {\n      var t1 = this._sink;\n      return type$.StringBuffer._is(t1) ? t1.toString$0(0) : null;\n    },\n    writeNumber$1: function(number) {\n      this._sink.write$1(0, C.JSNumber_methods.toString$0(number));\n    },\n    writeString$1: function(string) {\n      this._sink.write$1(0, string);\n    },\n    writeStringSlice$3: function(string, start, end) {\n      this._sink.write$1(0, C.JSString_methods.substring$2(string, start, end));\n    },\n    writeCharCode$1: function(charCode) {\n      this._sink.writeCharCode$1(charCode);\n    }\n  };\n  P.StringConversionSinkBase.prototype = {};\n  P.StringConversionSinkMixin.prototype = {\n    add$1: function(_, str) {\n      this.addSlice$4(str, 0, str.length, false);\n    },\n    asUtf8Sink$1: function(allowMalformed) {\n      return new P._Utf8ConversionSink(new P._Utf8Decoder(allowMalformed), this, new P.StringBuffer(\"\"));\n    },\n    $isStringConversionSink: 1\n  };\n  P._StringSinkConversionSink.prototype = {\n    close$0: function(_) {\n    },\n    addSlice$4: function(str, start, end, isLast) {\n      var t1, t2, i;\n      if (start !== 0 || end !== str.length)\n        for (t1 = this._stringSink, t2 = J.getInterceptor$s(str), i = start; i < end; ++i)\n          t1._contents += H.Primitives_stringFromCharCode(t2._codeUnitAt$1(str, i));\n      else\n        this._stringSink._contents += H.S(str);\n      if (isLast)\n        this.close$0(0);\n    },\n    add$1: function(_, str) {\n      this._stringSink._contents += H.S(str);\n    },\n    asUtf8Sink$1: function(allowMalformed) {\n      return new P._Utf8StringSinkAdapter(new P._Utf8Decoder(allowMalformed), this, this._stringSink);\n    }\n  };\n  P._StringCallbackSink.prototype = {\n    close$0: function(_) {\n      var t1 = this._stringSink,\n        t2 = t1._contents;\n      t1._contents = \"\";\n      this._convert$_callback.call$1(t2.charCodeAt(0) == 0 ? t2 : t2);\n    },\n    asUtf8Sink$1: function(allowMalformed) {\n      return new P._Utf8StringSinkAdapter(new P._Utf8Decoder(allowMalformed), this, this._stringSink);\n    }\n  };\n  P._StringAdapterSink.prototype = {\n    add$1: function(_, str) {\n      this._sink.add$1(0, str);\n    },\n    addSlice$4: function(str, start, end, isLast) {\n      var t1 = start === 0 && end === str.length,\n        t2 = this._sink;\n      if (t1)\n        t2.add$1(0, str);\n      else\n        t2.add$1(0, J.substring$2$s(str, start, end));\n      if (isLast)\n        t2.close$0(0);\n    },\n    close$0: function(_) {\n      this._sink.close$0(0);\n    }\n  };\n  P._Utf8StringSinkAdapter.prototype = {\n    close$0: function(_) {\n      this._decoder.flush$1(this._stringSink);\n      this._sink.close$0(0);\n    },\n    add$1: function(_, chunk) {\n      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);\n    },\n    addSlice$4: function(codeUnits, startIndex, endIndex, isLast) {\n      this._stringSink._contents += this._decoder.convertGeneral$4(codeUnits, startIndex, endIndex, false);\n      if (isLast)\n        this.close$0(0);\n    }\n  };\n  P._Utf8ConversionSink.prototype = {\n    close$0: function(_) {\n      var t2, t3, accumulated,\n        t1 = this._convert$_buffer;\n      this._decoder.flush$1(t1);\n      t2 = t1._contents;\n      t3 = this._chunkedSink;\n      if (t2.length !== 0) {\n        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;\n        t1._contents = \"\";\n        t3.addSlice$4(accumulated, 0, accumulated.length, true);\n      } else\n        t3.close$0(0);\n    },\n    add$1: function(_, chunk) {\n      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);\n    },\n    addSlice$4: function(chunk, startIndex, endIndex, isLast) {\n      var accumulated, _this = this,\n        t1 = _this._convert$_buffer,\n        t2 = t1._contents += _this._decoder.convertGeneral$4(chunk, startIndex, endIndex, false);\n      if (t2.length !== 0) {\n        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;\n        _this._chunkedSink.addSlice$4(accumulated, 0, accumulated.length, isLast);\n        t1._contents = \"\";\n        return;\n      }\n      if (isLast)\n        _this.close$0(0);\n    }\n  };\n  P.Utf8Codec.prototype = {\n    get$encoder: function() {\n      return C.C_Utf8Encoder;\n    }\n  };\n  P.Utf8Encoder.prototype = {\n    convert$1: function(string) {\n      var t1, encoder,\n        end = P.RangeError_checkValidRange(0, null, string.length),\n        $length = end - 0;\n      if ($length === 0)\n        return new Uint8Array(0);\n      t1 = new Uint8Array($length * 3);\n      encoder = new P._Utf8Encoder(t1);\n      if (encoder._fillBuffer$3(string, 0, end) !== end) {\n        J.codeUnitAt$1$s(string, end - 1);\n        encoder._writeReplacementCharacter$0();\n      }\n      return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);\n    }\n  };\n  P._Utf8Encoder.prototype = {\n    _writeReplacementCharacter$0: function() {\n      var _this = this,\n        t1 = _this._convert$_buffer,\n        t2 = _this._bufferIndex,\n        t3 = _this._bufferIndex = t2 + 1;\n      t1[t2] = 239;\n      t2 = _this._bufferIndex = t3 + 1;\n      t1[t3] = 191;\n      _this._bufferIndex = t2 + 1;\n      t1[t2] = 189;\n    },\n    _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {\n      var rune, t1, t2, t3, _this = this;\n      if ((nextCodeUnit & 64512) === 56320) {\n        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;\n        t1 = _this._convert$_buffer;\n        t2 = _this._bufferIndex;\n        t3 = _this._bufferIndex = t2 + 1;\n        t1[t2] = 240 | rune >>> 18;\n        t2 = _this._bufferIndex = t3 + 1;\n        t1[t3] = 128 | rune >>> 12 & 63;\n        t3 = _this._bufferIndex = t2 + 1;\n        t1[t2] = 128 | rune >>> 6 & 63;\n        _this._bufferIndex = t3 + 1;\n        t1[t3] = 128 | rune & 63;\n        return true;\n      } else {\n        _this._writeReplacementCharacter$0();\n        return false;\n      }\n    },\n    _fillBuffer$3: function(str, start, end) {\n      var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5, _this = this;\n      if (start !== end && (J.codeUnitAt$1$s(str, end - 1) & 64512) === 55296)\n        --end;\n      for (t1 = _this._convert$_buffer, t2 = t1.length, t3 = J.getInterceptor$s(str), stringIndex = start; stringIndex < end; ++stringIndex) {\n        codeUnit = t3._codeUnitAt$1(str, stringIndex);\n        if (codeUnit <= 127) {\n          t4 = _this._bufferIndex;\n          if (t4 >= t2)\n            break;\n          _this._bufferIndex = t4 + 1;\n          t1[t4] = codeUnit;\n        } else {\n          t4 = codeUnit & 64512;\n          if (t4 === 55296) {\n            if (_this._bufferIndex + 4 > t2)\n              break;\n            stringIndex0 = stringIndex + 1;\n            if (_this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))\n              stringIndex = stringIndex0;\n          } else if (t4 === 56320) {\n            if (_this._bufferIndex + 3 > t2)\n              break;\n            _this._writeReplacementCharacter$0();\n          } else if (codeUnit <= 2047) {\n            t4 = _this._bufferIndex;\n            t5 = t4 + 1;\n            if (t5 >= t2)\n              break;\n            _this._bufferIndex = t5;\n            t1[t4] = 192 | codeUnit >>> 6;\n            _this._bufferIndex = t5 + 1;\n            t1[t5] = 128 | codeUnit & 63;\n          } else {\n            t4 = _this._bufferIndex;\n            if (t4 + 2 >= t2)\n              break;\n            t5 = _this._bufferIndex = t4 + 1;\n            t1[t4] = 224 | codeUnit >>> 12;\n            t4 = _this._bufferIndex = t5 + 1;\n            t1[t5] = 128 | codeUnit >>> 6 & 63;\n            _this._bufferIndex = t4 + 1;\n            t1[t4] = 128 | codeUnit & 63;\n          }\n        }\n      }\n      return stringIndex;\n    }\n  };\n  P.Utf8Decoder.prototype = {\n    convert$1: function(codeUnits) {\n      var t1 = this._allowMalformed,\n        result = P.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);\n      if (result != null)\n        return result;\n      return new P._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);\n    },\n    startChunkedConversion$1: function(sink) {\n      var stringSink = type$.StringConversionSink._is(sink) ? sink : new P._StringAdapterSink(sink);\n      return stringSink.asUtf8Sink$1(this._allowMalformed);\n    }\n  };\n  P._Utf8Decoder.prototype = {\n    convertGeneral$4: function(codeUnits, start, maybeEnd, single) {\n      var bytes, errorOffset, result, t1, message, _this = this,\n        end = P.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));\n      if (start === end)\n        return \"\";\n      if (type$.Uint8List._is(codeUnits)) {\n        bytes = codeUnits;\n        errorOffset = 0;\n      } else {\n        bytes = P._Utf8Decoder__makeUint8List(codeUnits, start, end);\n        end -= start;\n        errorOffset = start;\n        start = 0;\n      }\n      result = _this._convertRecursive$4(bytes, start, end, single);\n      t1 = _this._convert$_state;\n      if ((t1 & 1) !== 0) {\n        message = P._Utf8Decoder_errorDescription(t1);\n        _this._convert$_state = 0;\n        throw H.wrapException(P.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));\n      }\n      return result;\n    },\n    _convertRecursive$4: function(bytes, start, end, single) {\n      var mid, s1, _this = this;\n      if (end - start > 1000) {\n        mid = C.JSInt_methods._tdivFast$1(start + end, 2);\n        s1 = _this._convertRecursive$4(bytes, start, mid, false);\n        if ((_this._convert$_state & 1) !== 0)\n          return s1;\n        return s1 + _this._convertRecursive$4(bytes, mid, end, single);\n      }\n      return _this.decodeGeneral$4(bytes, start, end, single);\n    },\n    flush$1: function(sink) {\n      var state = this._convert$_state;\n      this._convert$_state = 0;\n      if (state <= 32)\n        return;\n      if (this.allowMalformed)\n        sink._contents += H.Primitives_stringFromCharCode(65533);\n      else\n        throw H.wrapException(P.FormatException$(P._Utf8Decoder_errorDescription(77), null, null));\n    },\n    decodeGeneral$4: function(bytes, start, end, single) {\n      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,\n        state = _this._convert$_state,\n        char = _this._charOrIndex,\n        buffer = new P.StringBuffer(\"\"),\n        i = start + 1,\n        byte = bytes[start];\n      $label0$0:\n        for (t1 = _this.allowMalformed; true;) {\n          for (; true; i = i0) {\n            type = C.JSString_methods._codeUnitAt$1(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE\", byte) & 31;\n            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;\n            state = C.JSString_methods._codeUnitAt$1(\" \\x000:XECCCCCN:lDb \\x000:XECCCCCNvlDb \\x000:XECCCCCN:lDb AAAAA\\x00\\x00\\x00\\x00\\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\\x800AAAAA\\x00\\x00\\x00\\x00 AAAAA\", state + type);\n            if (state === 0) {\n              buffer._contents += H.Primitives_stringFromCharCode(char);\n              if (i === end)\n                break $label0$0;\n              break;\n            } else if ((state & 1) !== 0) {\n              if (t1)\n                switch (state) {\n                  case 69:\n                  case 67:\n                    buffer._contents += H.Primitives_stringFromCharCode(_65533);\n                    break;\n                  case 65:\n                    buffer._contents += H.Primitives_stringFromCharCode(_65533);\n                    --i;\n                    break;\n                  default:\n                    t2 = buffer._contents += H.Primitives_stringFromCharCode(_65533);\n                    buffer._contents = t2 + H.Primitives_stringFromCharCode(_65533);\n                    break;\n                }\n              else {\n                _this._convert$_state = state;\n                _this._charOrIndex = i - 1;\n                return \"\";\n              }\n              state = 0;\n            }\n            if (i === end)\n              break $label0$0;\n            i0 = i + 1;\n            byte = bytes[i];\n          }\n          i0 = i + 1;\n          byte = bytes[i];\n          if (byte < 128) {\n            while (true) {\n              if (!(i0 < end)) {\n                markEnd = end;\n                break;\n              }\n              i1 = i0 + 1;\n              byte = bytes[i0];\n              if (byte >= 128) {\n                markEnd = i1 - 1;\n                i0 = i1;\n                break;\n              }\n              i0 = i1;\n            }\n            if (markEnd - i < 20)\n              for (m = i; m < markEnd; ++m)\n                buffer._contents += H.Primitives_stringFromCharCode(bytes[m]);\n            else\n              buffer._contents += P.String_String$fromCharCodes(bytes, i, markEnd);\n            if (markEnd === end)\n              break $label0$0;\n            i = i0;\n          } else\n            i = i0;\n        }\n      if (single && state > 32)\n        if (t1)\n          buffer._contents += H.Primitives_stringFromCharCode(_65533);\n        else {\n          _this._convert$_state = 77;\n          _this._charOrIndex = end;\n          return \"\";\n        }\n      _this._convert$_state = state;\n      _this._charOrIndex = char;\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  P.NoSuchMethodError_toString_closure.prototype = {\n    call$2: function(key, value) {\n      var t3,\n        t1 = this.sb,\n        t2 = this._box_0;\n      t1._contents += t2.comma;\n      t3 = t1._contents += H.S(key.__internal$_name);\n      t1._contents = t3 + \": \";\n      t1._contents += P.Error_safeToString(value);\n      t2.comma = \", \";\n    },\n    $signature: 299\n  };\n  P.DateTime.prototype = {\n    add$1: function(_, duration) {\n      return P.DateTime$_withValue(C.JSInt_methods.$add(this._value, duration.get$inMilliseconds()), false);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof P.DateTime && this._value === other._value && true;\n    },\n    compareTo$1: function(_, other) {\n      return C.JSInt_methods.compareTo$1(this._value, other._value);\n    },\n    get$hashCode: function(_) {\n      var t1 = this._value;\n      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;\n    },\n    toString$0: function(_) {\n      var _this = this,\n        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),\n        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),\n        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),\n        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),\n        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),\n        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),\n        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this)),\n        t1 = y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + min + \":\" + sec + \".\" + ms;\n      return t1;\n    },\n    $isComparable: 1\n  };\n  P.Duration.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof P.Duration && this._duration === other._duration;\n    },\n    get$hashCode: function(_) {\n      return C.JSInt_methods.get$hashCode(this._duration);\n    },\n    compareTo$1: function(_, other) {\n      return C.JSInt_methods.compareTo$1(this._duration, other._duration);\n    },\n    toString$0: function(_) {\n      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,\n        t1 = new P.Duration_toString_twoDigits(),\n        t2 = this._duration;\n      if (t2 < 0)\n        return \"-\" + new P.Duration(0 - t2).toString$0(0);\n      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);\n      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);\n      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);\n      return \"\" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + \":\" + H.S(twoDigitMinutes) + \":\" + H.S(twoDigitSeconds) + \".\" + H.S(sixDigitUs);\n    },\n    $isComparable: 1\n  };\n  P.Duration_toString_sixDigits.prototype = {\n    call$1: function(n) {\n      if (n >= 100000)\n        return \"\" + n;\n      if (n >= 10000)\n        return \"0\" + n;\n      if (n >= 1000)\n        return \"00\" + n;\n      if (n >= 100)\n        return \"000\" + n;\n      if (n >= 10)\n        return \"0000\" + n;\n      return \"00000\" + n;\n    },\n    $signature: 206\n  };\n  P.Duration_toString_twoDigits.prototype = {\n    call$1: function(n) {\n      if (n >= 10)\n        return \"\" + n;\n      return \"0\" + n;\n    },\n    $signature: 206\n  };\n  P.Error.prototype = {\n    get$stackTrace: function() {\n      return H.getTraceFromException(this.$thrownJsError);\n    }\n  };\n  P.AssertionError.prototype = {\n    toString$0: function(_) {\n      var t1 = this.message;\n      if (t1 != null)\n        return \"Assertion failed: \" + P.Error_safeToString(t1);\n      return \"Assertion failed\";\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.TypeError.prototype = {};\n  P.NullThrownError.prototype = {\n    toString$0: function(_) {\n      return \"Throw of null.\";\n    }\n  };\n  P.ArgumentError.prototype = {\n    get$_errorName: function() {\n      return \"Invalid argument\" + (!this._hasValue ? \"(s)\" : \"\");\n    },\n    get$_errorExplanation: function() {\n      return \"\";\n    },\n    toString$0: function(_) {\n      var explanation, errorValue, _this = this,\n        $name = _this.name,\n        nameString = $name == null ? \"\" : \" (\" + $name + \")\",\n        message = _this.message,\n        messageString = message == null ? \"\" : \": \" + H.S(message),\n        prefix = _this.get$_errorName() + nameString + messageString;\n      if (!_this._hasValue)\n        return prefix;\n      explanation = _this.get$_errorExplanation();\n      errorValue = P.Error_safeToString(_this.invalidValue);\n      return prefix + explanation + \": \" + errorValue;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.RangeError.prototype = {\n    get$_errorName: function() {\n      return \"RangeError\";\n    },\n    get$_errorExplanation: function() {\n      var explanation,\n        start = this.start,\n        end = this.end;\n      if (start == null)\n        explanation = end != null ? \": Not less than or equal to \" + H.S(end) : \"\";\n      else if (end == null)\n        explanation = \": Not greater than or equal to \" + H.S(start);\n      else if (end > start)\n        explanation = \": Not in inclusive range \" + H.S(start) + \"..\" + H.S(end);\n      else\n        explanation = end < start ? \": Valid value range is empty\" : \": Only valid value is \" + H.S(start);\n      return explanation;\n    }\n  };\n  P.IndexError.prototype = {\n    get$_errorName: function() {\n      return \"RangeError\";\n    },\n    get$_errorExplanation: function() {\n      if (this.invalidValue < 0)\n        return \": index must not be negative\";\n      var t1 = this.length;\n      if (t1 === 0)\n        return \": no indices are valid\";\n      return \": index should be less than \" + H.S(t1);\n    },\n    $isRangeError: 1,\n    get$length: function(receiver) {\n      return this.length;\n    }\n  };\n  P.NoSuchMethodError.prototype = {\n    toString$0: function(_) {\n      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},\n        sb = new P.StringBuffer(\"\");\n      _box_0.comma = \"\";\n      $arguments = _this._core$_arguments;\n      for (t1 = $arguments.length, _i = 0, t2 = \"\", t3 = \"\"; _i < t1; ++_i, t3 = \", \") {\n        argument = $arguments[_i];\n        sb._contents = t2 + t3;\n        t2 = sb._contents += P.Error_safeToString(argument);\n        _box_0.comma = \", \";\n      }\n      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));\n      receiverText = P.Error_safeToString(_this._core$_receiver);\n      actualParameters = sb.toString$0(0);\n      t1 = \"NoSuchMethodError: method not found: '\" + H.S(_this._memberName.__internal$_name) + \"'\\nReceiver: \" + receiverText + \"\\nArguments: [\" + actualParameters + \"]\";\n      return t1;\n    }\n  };\n  P.UnsupportedError.prototype = {\n    toString$0: function(_) {\n      return \"Unsupported operation: \" + this.message;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.UnimplementedError.prototype = {\n    toString$0: function(_) {\n      var message = this.message;\n      return message != null ? \"UnimplementedError: \" + message : \"UnimplementedError\";\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.StateError.prototype = {\n    toString$0: function(_) {\n      return \"Bad state: \" + this.message;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.ConcurrentModificationError.prototype = {\n    toString$0: function(_) {\n      var t1 = this.modifiedObject;\n      if (t1 == null)\n        return \"Concurrent modification during iteration.\";\n      return \"Concurrent modification during iteration: \" + P.Error_safeToString(t1) + \".\";\n    }\n  };\n  P.OutOfMemoryError.prototype = {\n    toString$0: function(_) {\n      return \"Out of Memory\";\n    },\n    get$stackTrace: function() {\n      return null;\n    },\n    $isError: 1\n  };\n  P.StackOverflowError.prototype = {\n    toString$0: function(_) {\n      return \"Stack Overflow\";\n    },\n    get$stackTrace: function() {\n      return null;\n    },\n    $isError: 1\n  };\n  P.CyclicInitializationError.prototype = {\n    toString$0: function(_) {\n      var variableName = this.variableName;\n      return variableName == null ? \"Reading static variable during its initialization\" : \"Reading static variable '\" + variableName + \"' during its initialization\";\n    }\n  };\n  P._Exception.prototype = {\n    toString$0: function(_) {\n      return \"Exception: \" + this.message;\n    },\n    $isException: 1,\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  P.FormatException.prototype = {\n    toString$0: function(_) {\n      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,\n        message = this.message,\n        report = message != null && \"\" !== message ? \"FormatException: \" + H.S(message) : \"FormatException\",\n        offset = this.offset,\n        source = this.source;\n      if (typeof source == \"string\") {\n        if (offset != null)\n          t1 = offset < 0 || offset > source.length;\n        else\n          t1 = false;\n        if (t1)\n          offset = null;\n        if (offset == null) {\n          if (source.length > 78)\n            source = C.JSString_methods.substring$2(source, 0, 75) + \"...\";\n          return report + \"\\n\" + source;\n        }\n        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {\n          char = C.JSString_methods._codeUnitAt$1(source, i);\n          if (char === 10) {\n            if (lineStart !== i || !previousCharWasCR)\n              ++lineNum;\n            lineStart = i + 1;\n            previousCharWasCR = false;\n          } else if (char === 13) {\n            ++lineNum;\n            lineStart = i + 1;\n            previousCharWasCR = true;\n          }\n        }\n        report = lineNum > 1 ? report + (\" (at line \" + lineNum + \", character \" + (offset - lineStart + 1) + \")\\n\") : report + (\" (at character \" + (offset + 1) + \")\\n\");\n        lineEnd = source.length;\n        for (i = offset; i < lineEnd; ++i) {\n          char = C.JSString_methods.codeUnitAt$1(source, i);\n          if (char === 10 || char === 13) {\n            lineEnd = i;\n            break;\n          }\n        }\n        if (lineEnd - lineStart > 78)\n          if (offset - lineStart < 75) {\n            end = lineStart + 75;\n            start = lineStart;\n            prefix = \"\";\n            postfix = \"...\";\n          } else {\n            if (lineEnd - offset < 75) {\n              start = lineEnd - 75;\n              end = lineEnd;\n              postfix = \"\";\n            } else {\n              start = offset - 36;\n              end = offset + 36;\n              postfix = \"...\";\n            }\n            prefix = \"...\";\n          }\n        else {\n          end = lineEnd;\n          start = lineStart;\n          prefix = \"\";\n          postfix = \"\";\n        }\n        slice = C.JSString_methods.substring$2(source, start, end);\n        return report + prefix + slice + postfix + \"\\n\" + C.JSString_methods.$mul(\" \", offset - start + prefix.length) + \"^\\n\";\n      } else\n        return offset != null ? report + (\" (at offset \" + H.S(offset) + \")\") : report;\n    },\n    $isException: 1,\n    get$message: function(receiver) {\n      return this.message;\n    },\n    get$source: function() {\n      return this.source;\n    }\n  };\n  P.Iterable.prototype = {\n    cast$1$0: function(_, $R) {\n      return H.CastIterable_CastIterable(this, H._instanceType(this)._eval$1(\"Iterable.E\"), $R);\n    },\n    followedBy$1: function(_, other) {\n      var _this = this,\n        t1 = H._instanceType(_this);\n      if (t1._eval$1(\"EfficientLengthIterable<Iterable.E>\")._is(_this))\n        return H.FollowedByIterable_FollowedByIterable$firstEfficient(_this, other, t1._eval$1(\"Iterable.E\"));\n      return new H.FollowedByIterable(_this, other, t1._eval$1(\"FollowedByIterable<Iterable.E>\"));\n    },\n    map$1$1: function(_, f, $T) {\n      return H.MappedIterable_MappedIterable(this, f, H._instanceType(this)._eval$1(\"Iterable.E\"), $T);\n    },\n    where$1: function(_, test) {\n      return new H.WhereIterable(this, test, H._instanceType(this)._eval$1(\"WhereIterable<Iterable.E>\"));\n    },\n    expand$1$1: function(_, f, $T) {\n      return new H.ExpandIterable(this, f, H._instanceType(this)._eval$1(\"@<Iterable.E>\")._bind$1($T)._eval$1(\"ExpandIterable<1,2>\"));\n    },\n    contains$1: function(_, element) {\n      var t1;\n      for (t1 = this.get$iterator(this); t1.moveNext$0();)\n        if (J.$eq$(t1.get$current(t1), element))\n          return true;\n      return false;\n    },\n    fold$1$2: function(_, initialValue, combine) {\n      var t1, value;\n      for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)\n        value = combine.call$2(value, t1.get$current(t1));\n      return value;\n    },\n    fold$2: function($receiver, initialValue, combine) {\n      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);\n    },\n    join$1: function(_, separator) {\n      var t1,\n        iterator = this.get$iterator(this);\n      if (!iterator.moveNext$0())\n        return \"\";\n      if (separator === \"\") {\n        t1 = \"\";\n        do\n          t1 += H.S(J.toString$0$(iterator.get$current(iterator)));\n        while (iterator.moveNext$0());\n      } else {\n        t1 = H.S(J.toString$0$(iterator.get$current(iterator)));\n        for (; iterator.moveNext$0();)\n          t1 = t1 + separator + H.S(J.toString$0$(iterator.get$current(iterator)));\n      }\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    any$1: function(_, test) {\n      var t1;\n      for (t1 = this.get$iterator(this); t1.moveNext$0();)\n        if (test.call$1(t1.get$current(t1)))\n          return true;\n      return false;\n    },\n    toList$1$growable: function(_, growable) {\n      return P.List_List$from(this, growable, H._instanceType(this)._eval$1(\"Iterable.E\"));\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(_) {\n      return P.LinkedHashSet_LinkedHashSet$of(this, H._instanceType(this)._eval$1(\"Iterable.E\"));\n    },\n    get$length: function(_) {\n      var count,\n        it = this.get$iterator(this);\n      for (count = 0; it.moveNext$0();)\n        ++count;\n      return count;\n    },\n    get$isEmpty: function(_) {\n      return !this.get$iterator(this).moveNext$0();\n    },\n    get$isNotEmpty: function(_) {\n      return !this.get$isEmpty(this);\n    },\n    take$1: function(_, count) {\n      return H.TakeIterable_TakeIterable(this, count, H._instanceType(this)._eval$1(\"Iterable.E\"));\n    },\n    skip$1: function(_, count) {\n      return H.SkipIterable_SkipIterable(this, count, H._instanceType(this)._eval$1(\"Iterable.E\"));\n    },\n    skipWhile$1: function(_, test) {\n      return new H.SkipWhileIterable(this, test, H._instanceType(this)._eval$1(\"SkipWhileIterable<Iterable.E>\"));\n    },\n    get$first: function(_) {\n      var it = this.get$iterator(this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      return it.get$current(it);\n    },\n    get$last: function(_) {\n      var result,\n        it = this.get$iterator(this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      do\n        result = it.get$current(it);\n      while (it.moveNext$0());\n      return result;\n    },\n    get$single: function(_) {\n      var result,\n        it = this.get$iterator(this);\n      if (!it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_noElement());\n      result = it.get$current(it);\n      if (it.moveNext$0())\n        throw H.wrapException(H.IterableElementError_tooMany());\n      return result;\n    },\n    firstWhere$2$orElse: function(_, test, orElse) {\n      var t1, element;\n      for (t1 = this.get$iterator(this); t1.moveNext$0();) {\n        element = t1.get$current(t1);\n        if (test.call$1(element))\n          return element;\n      }\n      return orElse.call$0();\n    },\n    elementAt$1: function(_, index) {\n      var t1, elementIndex, element;\n      P.RangeError_checkNotNegative(index, \"index\");\n      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {\n        element = t1.get$current(t1);\n        if (index === elementIndex)\n          return element;\n        ++elementIndex;\n      }\n      throw H.wrapException(P.IndexError$(index, this, \"index\", null, elementIndex));\n    },\n    toString$0: function(_) {\n      return P.IterableBase_iterableToShortString(this, \"(\", \")\");\n    }\n  };\n  P._GeneratorIterable.prototype = {\n    elementAt$1: function(_, index) {\n      P.RangeError_checkValidIndex(index, this, null);\n      return this._generator.call$1(index);\n    },\n    get$length: function(receiver) {\n      return this.length;\n    }\n  };\n  P.Iterator.prototype = {};\n  P.MapEntry.prototype = {\n    toString$0: function(_) {\n      return \"MapEntry(\" + H.S(J.toString$0$(this.key)) + \": \" + H.S(J.toString$0$(this.value)) + \")\";\n    }\n  };\n  P.Null.prototype = {\n    get$hashCode: function(_) {\n      return P.Object.prototype.get$hashCode.call(C.JSNull_methods, this);\n    },\n    toString$0: function(_) {\n      return \"null\";\n    }\n  };\n  P.Object.prototype = {constructor: P.Object, $isObject: 1,\n    $eq: function(_, other) {\n      return this === other;\n    },\n    get$hashCode: function(_) {\n      return H.Primitives_objectHashCode(this);\n    },\n    toString$0: function(_) {\n      return \"Instance of '\" + H.S(H.Primitives_objectTypeName(this)) + \"'\";\n    },\n    noSuchMethod$1: function(_, invocation) {\n      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));\n    },\n    get$runtimeType: function(_) {\n      var rti = this instanceof H.Closure ? H.closureFunctionType(this) : null;\n      return H.createRuntimeType(rti == null ? H.instanceType(this) : rti);\n    },\n    toString: function() {\n      return this.toString$0(this);\n    }\n  };\n  P._StringStackTrace.prototype = {\n    toString$0: function(_) {\n      return this._stackTrace;\n    },\n    $isStackTrace: 1\n  };\n  P.Runes.prototype = {\n    get$iterator: function(_) {\n      return new P.RuneIterator(this.string);\n    },\n    get$last: function(_) {\n      var code, previousCode,\n        t1 = this.string,\n        t2 = t1.length;\n      if (t2 === 0)\n        throw H.wrapException(P.StateError$(\"No elements.\"));\n      code = C.JSString_methods.codeUnitAt$1(t1, t2 - 1);\n      if ((code & 64512) === 56320 && t2 > 1) {\n        previousCode = C.JSString_methods.codeUnitAt$1(t1, t2 - 2);\n        if ((previousCode & 64512) === 55296)\n          return P._combineSurrogatePair(previousCode, code);\n      }\n      return code;\n    }\n  };\n  P.RuneIterator.prototype = {\n    get$current: function(_) {\n      return this._currentCodePoint;\n    },\n    moveNext$0: function() {\n      var codeUnit, nextPosition, nextCodeUnit, _this = this,\n        t1 = _this._position = _this._nextPosition,\n        t2 = _this.string,\n        t3 = t2.length;\n      if (t1 === t3) {\n        _this._currentCodePoint = -1;\n        return false;\n      }\n      codeUnit = C.JSString_methods._codeUnitAt$1(t2, t1);\n      nextPosition = t1 + 1;\n      if ((codeUnit & 64512) === 55296 && nextPosition < t3) {\n        nextCodeUnit = C.JSString_methods._codeUnitAt$1(t2, nextPosition);\n        if ((nextCodeUnit & 64512) === 56320) {\n          _this._nextPosition = nextPosition + 1;\n          _this._currentCodePoint = P._combineSurrogatePair(codeUnit, nextCodeUnit);\n          return true;\n        }\n      }\n      _this._nextPosition = nextPosition;\n      _this._currentCodePoint = codeUnit;\n      return true;\n    }\n  };\n  P.StringBuffer.prototype = {\n    get$length: function(_) {\n      return this._contents.length;\n    },\n    write$1: function(_, obj) {\n      this._contents += H.S(obj);\n    },\n    writeCharCode$1: function(charCode) {\n      this._contents += H.Primitives_stringFromCharCode(charCode);\n    },\n    toString$0: function(_) {\n      var t1 = this._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  P.Uri__parseIPv4Address_error.prototype = {\n    call$2: function(msg, position) {\n      throw H.wrapException(P.FormatException$(\"Illegal IPv4 address, \" + msg, this.host, position));\n    },\n    $signature: 301\n  };\n  P.Uri_parseIPv6Address_error.prototype = {\n    call$2: function(msg, position) {\n      throw H.wrapException(P.FormatException$(\"Illegal IPv6 address, \" + msg, this.host, position));\n    },\n    call$1: function(msg) {\n      return this.call$2(msg, null);\n    },\n    $signature: 304\n  };\n  P.Uri_parseIPv6Address_parseHex.prototype = {\n    call$2: function(start, end) {\n      var value;\n      if (end - start > 4)\n        this.error.call$2(\"an IPv6 part can only contain a maximum of 4 hex digits\", start);\n      value = P.int_parse(C.JSString_methods.substring$2(this.host, start, end), 16);\n      if (value < 0 || value > 65535)\n        this.error.call$2(\"each part must be in the range of `0x0..0xFFFF`\", start);\n      return value;\n    },\n    $signature: 313\n  };\n  P._Uri.prototype = {\n    get$_text: function() {\n      var t2, t3, t4, _this = this,\n        t1 = _this.___Uri__text;\n      if (t1 == null) {\n        t1 = _this.scheme;\n        t2 = t1.length !== 0 ? t1 + \":\" : \"\";\n        t3 = _this._host;\n        t4 = t3 == null;\n        if (!t4 || t1 === \"file\") {\n          t1 = t2 + \"//\";\n          t2 = _this._userInfo;\n          if (t2.length !== 0)\n            t1 = t1 + t2 + \"@\";\n          if (!t4)\n            t1 += t3;\n          t2 = _this._port;\n          if (t2 != null)\n            t1 = t1 + \":\" + H.S(t2);\n        } else\n          t1 = t2;\n        t1 += _this.path;\n        t2 = _this._query;\n        if (t2 != null)\n          t1 = t1 + \"?\" + t2;\n        t2 = _this._fragment;\n        if (t2 != null)\n          t1 = t1 + \"#\" + t2;\n        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;\n        if (_this.___Uri__text == null)\n          _this.___Uri__text = t1;\n        else\n          t1 = H.throwExpression(H.LateInitializationErrorImpl$(\"Field '_text' has been assigned during initialization.\"));\n      }\n      return t1;\n    },\n    get$pathSegments: function() {\n      var pathToSplit, _this = this,\n        t1 = _this.___Uri_pathSegments;\n      if (t1 == null) {\n        pathToSplit = _this.path;\n        if (pathToSplit.length !== 0 && C.JSString_methods._codeUnitAt$1(pathToSplit, 0) === 47)\n          pathToSplit = C.JSString_methods.substring$1(pathToSplit, 1);\n        t1 = pathToSplit.length === 0 ? C.List_empty : P.List_List$unmodifiable(new H.MappedListIterable(H.setRuntimeTypeInfo(pathToSplit.split(\"/\"), type$.JSArray_String), P.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);\n        if (_this.___Uri_pathSegments == null)\n          _this.___Uri_pathSegments = t1;\n        else\n          t1 = H.throwExpression(H.LateInitializationErrorImpl$(\"Field 'pathSegments' has been assigned during initialization.\"));\n      }\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var _this = this,\n        t1 = _this.___Uri_hashCode;\n      if (t1 == null) {\n        t1 = C.JSString_methods.get$hashCode(_this.get$_text());\n        if (_this.___Uri_hashCode == null)\n          _this.___Uri_hashCode = t1;\n        else\n          t1 = H.throwExpression(H.LateInitializationErrorImpl$(\"Field 'hashCode' has been assigned during initialization.\"));\n      }\n      return t1;\n    },\n    get$userInfo: function() {\n      return this._userInfo;\n    },\n    get$host: function() {\n      var host = this._host;\n      if (host == null)\n        return \"\";\n      if (C.JSString_methods.startsWith$1(host, \"[\"))\n        return C.JSString_methods.substring$2(host, 1, host.length - 1);\n      return host;\n    },\n    get$port: function(_) {\n      var t1 = this._port;\n      return t1 == null ? P._Uri__defaultPort(this.scheme) : t1;\n    },\n    get$query: function() {\n      var t1 = this._query;\n      return t1 == null ? \"\" : t1;\n    },\n    get$fragment: function() {\n      var t1 = this._fragment;\n      return t1 == null ? \"\" : t1;\n    },\n    _mergePaths$2: function(base, reference) {\n      var backCount, refStart, baseEnd, newEnd, delta, t1;\n      for (backCount = 0, refStart = 0; C.JSString_methods.startsWith$2(reference, \"../\", refStart);) {\n        refStart += 3;\n        ++backCount;\n      }\n      baseEnd = C.JSString_methods.lastIndexOf$1(base, \"/\");\n      while (true) {\n        if (!(baseEnd > 0 && backCount > 0))\n          break;\n        newEnd = C.JSString_methods.lastIndexOf$2(base, \"/\", baseEnd - 1);\n        if (newEnd < 0)\n          break;\n        delta = baseEnd - newEnd;\n        t1 = delta !== 2;\n        if (!t1 || delta === 3)\n          if (C.JSString_methods.codeUnitAt$1(base, newEnd + 1) === 46)\n            t1 = !t1 || C.JSString_methods.codeUnitAt$1(base, newEnd + 2) === 46;\n          else\n            t1 = false;\n        else\n          t1 = false;\n        if (t1)\n          break;\n        --backCount;\n        baseEnd = newEnd;\n      }\n      return C.JSString_methods.replaceRange$3(base, baseEnd + 1, null, C.JSString_methods.substring$1(reference, refStart - 3 * backCount));\n    },\n    resolve$1: function(reference) {\n      return this.resolveUri$1(P.Uri_parse(reference));\n    },\n    resolveUri$1: function(reference) {\n      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, t1, mergedPath, t2, _this = this, _null = null;\n      if (reference.get$scheme().length !== 0) {\n        targetScheme = reference.get$scheme();\n        if (reference.get$hasAuthority()) {\n          targetUserInfo = reference.get$userInfo();\n          targetHost = reference.get$host();\n          targetPort = reference.get$hasPort() ? reference.get$port(reference) : _null;\n        } else {\n          targetPort = _null;\n          targetHost = targetPort;\n          targetUserInfo = \"\";\n        }\n        targetPath = P._Uri__removeDotSegments(reference.get$path(reference));\n        targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;\n      } else {\n        targetScheme = _this.scheme;\n        if (reference.get$hasAuthority()) {\n          targetUserInfo = reference.get$userInfo();\n          targetHost = reference.get$host();\n          targetPort = P._Uri__makePort(reference.get$hasPort() ? reference.get$port(reference) : _null, targetScheme);\n          targetPath = P._Uri__removeDotSegments(reference.get$path(reference));\n          targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;\n        } else {\n          targetUserInfo = _this._userInfo;\n          targetHost = _this._host;\n          targetPort = _this._port;\n          if (reference.get$path(reference) === \"\") {\n            targetPath = _this.path;\n            targetQuery = reference.get$hasQuery() ? reference.get$query() : _this._query;\n          } else {\n            if (reference.get$hasAbsolutePath())\n              targetPath = P._Uri__removeDotSegments(reference.get$path(reference));\n            else {\n              t1 = _this.path;\n              if (t1.length === 0)\n                if (targetHost == null)\n                  targetPath = targetScheme.length === 0 ? reference.get$path(reference) : P._Uri__removeDotSegments(reference.get$path(reference));\n                else\n                  targetPath = P._Uri__removeDotSegments(\"/\" + reference.get$path(reference));\n              else {\n                mergedPath = _this._mergePaths$2(t1, reference.get$path(reference));\n                t2 = targetScheme.length === 0;\n                if (!t2 || targetHost != null || C.JSString_methods.startsWith$1(t1, \"/\"))\n                  targetPath = P._Uri__removeDotSegments(mergedPath);\n                else\n                  targetPath = P._Uri__normalizeRelativePath(mergedPath, !t2 || targetHost != null);\n              }\n            }\n            targetQuery = reference.get$hasQuery() ? reference.get$query() : _null;\n          }\n        }\n      }\n      return new P._Uri(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, reference.get$hasFragment() ? reference.get$fragment() : _null);\n    },\n    get$hasAuthority: function() {\n      return this._host != null;\n    },\n    get$hasPort: function() {\n      return this._port != null;\n    },\n    get$hasQuery: function() {\n      return this._query != null;\n    },\n    get$hasFragment: function() {\n      return this._fragment != null;\n    },\n    get$hasAbsolutePath: function() {\n      return C.JSString_methods.startsWith$1(this.path, \"/\");\n    },\n    toFilePath$0: function() {\n      var pathSegments, _this = this,\n        t1 = _this.scheme;\n      if (t1 !== \"\" && t1 !== \"file\")\n        throw H.wrapException(P.UnsupportedError$(\"Cannot extract a file path from a \" + t1 + \" URI\"));\n      if (_this.get$query() !== \"\")\n        throw H.wrapException(P.UnsupportedError$(string$.Cannotefq));\n      if (_this.get$fragment() !== \"\")\n        throw H.wrapException(P.UnsupportedError$(string$.Cannoteff));\n      t1 = $.$get$_Uri__isWindowsCached();\n      if (t1)\n        t1 = P._Uri__toWindowsFilePath(_this);\n      else {\n        if (_this._host != null && _this.get$host() !== \"\")\n          H.throwExpression(P.UnsupportedError$(string$.Cannoten));\n        pathSegments = _this.get$pathSegments();\n        P._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);\n        t1 = P.StringBuffer__writeAll(C.JSString_methods.startsWith$1(_this.path, \"/\") ? \"/\" : \"\", pathSegments, \"/\");\n        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;\n      }\n      return t1;\n    },\n    toString$0: function(_) {\n      return this.get$_text();\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      if (_this === other)\n        return true;\n      return type$.Uri._is(other) && _this.scheme === other.get$scheme() && _this._host != null === other.get$hasAuthority() && _this._userInfo === other.get$userInfo() && _this.get$host() === other.get$host() && _this.get$port(_this) === other.get$port(other) && _this.path === other.get$path(other) && _this._query != null === other.get$hasQuery() && _this.get$query() === other.get$query() && _this._fragment != null === other.get$hasFragment() && _this.get$fragment() === other.get$fragment();\n    },\n    $isUri: 1,\n    get$scheme: function() {\n      return this.scheme;\n    },\n    get$path: function(receiver) {\n      return this.path;\n    }\n  };\n  P._Uri__makePath_closure.prototype = {\n    call$1: function(s) {\n      return P._Uri__uriEncode(C.List_qg40, s, C.C_Utf8Codec, false);\n    },\n    $signature: 197\n  };\n  P.UriData.prototype = {\n    get$uri: function() {\n      var t2, queryIndex, end, query, _this = this, _null = null,\n        t1 = _this._uriCache;\n      if (t1 == null) {\n        t1 = _this._text;\n        t2 = _this._separatorIndices[0] + 1;\n        queryIndex = C.JSString_methods.indexOf$2(t1, \"?\", t2);\n        end = t1.length;\n        if (queryIndex >= 0) {\n          query = P._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, C.List_CVk, false);\n          end = queryIndex;\n        } else\n          query = _null;\n        t1 = _this._uriCache = new P._DataUri(\"data\", \"\", _null, _null, P._Uri__normalizeOrSubstring(t1, t2, end, C.List_qg4, false), query, _null);\n      }\n      return t1;\n    },\n    toString$0: function(_) {\n      var t1 = this._text;\n      return this._separatorIndices[0] === -1 ? \"data:\" + t1 : t1;\n    }\n  };\n  P._createTables_closure.prototype = {\n    call$1: function(_) {\n      return new Uint8Array(96);\n    },\n    $signature: 315\n  };\n  P._createTables_build.prototype = {\n    call$2: function(state, defaultTransition) {\n      var t1 = this.tables[state];\n      J.fillRange$3$ax(t1, 0, 96, defaultTransition);\n      return t1;\n    },\n    $signature: 316\n  };\n  P._createTables_setChars.prototype = {\n    call$3: function(target, chars, transition) {\n      var t1, i;\n      for (t1 = chars.length, i = 0; i < t1; ++i)\n        target[C.JSString_methods._codeUnitAt$1(chars, i) ^ 96] = transition;\n    },\n    $signature: 196\n  };\n  P._createTables_setRange.prototype = {\n    call$3: function(target, range, transition) {\n      var i, n;\n      for (i = C.JSString_methods._codeUnitAt$1(range, 0), n = C.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i)\n        target[(i ^ 96) >>> 0] = transition;\n    },\n    $signature: 196\n  };\n  P._SimpleUri.prototype = {\n    get$hasAuthority: function() {\n      return this._hostStart > 0;\n    },\n    get$hasPort: function() {\n      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;\n    },\n    get$hasQuery: function() {\n      return this._queryStart < this._fragmentStart;\n    },\n    get$hasFragment: function() {\n      return this._fragmentStart < this._uri.length;\n    },\n    get$_isFile: function() {\n      return this._schemeEnd === 4 && C.JSString_methods.startsWith$1(this._uri, \"file\");\n    },\n    get$_isHttp: function() {\n      return this._schemeEnd === 4 && C.JSString_methods.startsWith$1(this._uri, \"http\");\n    },\n    get$_isHttps: function() {\n      return this._schemeEnd === 5 && C.JSString_methods.startsWith$1(this._uri, \"https\");\n    },\n    get$hasAbsolutePath: function() {\n      return C.JSString_methods.startsWith$2(this._uri, \"/\", this._pathStart);\n    },\n    get$scheme: function() {\n      var t1 = this._schemeCache;\n      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;\n    },\n    _computeScheme$0: function() {\n      var _this = this,\n        t1 = _this._schemeEnd;\n      if (t1 <= 0)\n        return \"\";\n      if (_this.get$_isHttp())\n        return \"http\";\n      if (_this.get$_isHttps())\n        return \"https\";\n      if (_this.get$_isFile())\n        return \"file\";\n      if (t1 === 7 && C.JSString_methods.startsWith$1(_this._uri, \"package\"))\n        return \"package\";\n      return C.JSString_methods.substring$2(_this._uri, 0, t1);\n    },\n    get$userInfo: function() {\n      var t1 = this._hostStart,\n        t2 = this._schemeEnd + 3;\n      return t1 > t2 ? C.JSString_methods.substring$2(this._uri, t2, t1 - 1) : \"\";\n    },\n    get$host: function() {\n      var t1 = this._hostStart;\n      return t1 > 0 ? C.JSString_methods.substring$2(this._uri, t1, this._portStart) : \"\";\n    },\n    get$port: function(_) {\n      var _this = this;\n      if (_this.get$hasPort())\n        return P.int_parse(C.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);\n      if (_this.get$_isHttp())\n        return 80;\n      if (_this.get$_isHttps())\n        return 443;\n      return 0;\n    },\n    get$path: function(_) {\n      return C.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);\n    },\n    get$query: function() {\n      var t1 = this._queryStart,\n        t2 = this._fragmentStart;\n      return t1 < t2 ? C.JSString_methods.substring$2(this._uri, t1 + 1, t2) : \"\";\n    },\n    get$fragment: function() {\n      var t1 = this._fragmentStart,\n        t2 = this._uri;\n      return t1 < t2.length ? C.JSString_methods.substring$1(t2, t1 + 1) : \"\";\n    },\n    get$pathSegments: function() {\n      var parts, i,\n        start = this._pathStart,\n        end = this._queryStart,\n        t1 = this._uri;\n      if (C.JSString_methods.startsWith$2(t1, \"/\", start))\n        ++start;\n      if (start === end)\n        return C.List_empty;\n      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);\n      for (i = start; i < end; ++i)\n        if (C.JSString_methods.codeUnitAt$1(t1, i) === 47) {\n          parts.push(C.JSString_methods.substring$2(t1, start, i));\n          start = i + 1;\n        }\n      parts.push(C.JSString_methods.substring$2(t1, start, end));\n      return P.List_List$unmodifiable(parts, type$.String);\n    },\n    _isPort$1: function(port) {\n      var portDigitStart = this._portStart + 1;\n      return portDigitStart + port.length === this._pathStart && C.JSString_methods.startsWith$2(this._uri, port, portDigitStart);\n    },\n    removeFragment$0: function() {\n      var _this = this,\n        t1 = _this._fragmentStart,\n        t2 = _this._uri;\n      if (t1 >= t2.length)\n        return _this;\n      return new P._SimpleUri(C.JSString_methods.substring$2(t2, 0, t1), _this._schemeEnd, _this._hostStart, _this._portStart, _this._pathStart, _this._queryStart, t1, _this._schemeCache);\n    },\n    resolve$1: function(reference) {\n      return this.resolveUri$1(P.Uri_parse(reference));\n    },\n    resolveUri$1: function(reference) {\n      if (reference instanceof P._SimpleUri)\n        return this._simpleMerge$2(this, reference);\n      return this._toNonSimple$0().resolveUri$1(reference);\n    },\n    _simpleMerge$2: function(base, ref) {\n      var t2, t3, isSimple, delta, refStart, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert,\n        t1 = ref._schemeEnd;\n      if (t1 > 0)\n        return ref;\n      t2 = ref._hostStart;\n      if (t2 > 0) {\n        t3 = base._schemeEnd;\n        if (t3 <= 0)\n          return ref;\n        if (base.get$_isFile())\n          isSimple = ref._pathStart !== ref._queryStart;\n        else if (base.get$_isHttp())\n          isSimple = !ref._isPort$1(\"80\");\n        else\n          isSimple = !base.get$_isHttps() || !ref._isPort$1(\"443\");\n        if (isSimple) {\n          delta = t3 + 1;\n          return new P._SimpleUri(C.JSString_methods.substring$2(base._uri, 0, delta) + C.JSString_methods.substring$1(ref._uri, t1 + 1), t3, t2 + delta, ref._portStart + delta, ref._pathStart + delta, ref._queryStart + delta, ref._fragmentStart + delta, base._schemeCache);\n        } else\n          return this._toNonSimple$0().resolveUri$1(ref);\n      }\n      refStart = ref._pathStart;\n      t1 = ref._queryStart;\n      if (refStart === t1) {\n        t2 = ref._fragmentStart;\n        if (t1 < t2) {\n          t3 = base._queryStart;\n          delta = t3 - t1;\n          return new P._SimpleUri(C.JSString_methods.substring$2(base._uri, 0, t3) + C.JSString_methods.substring$1(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);\n        }\n        t1 = ref._uri;\n        if (t2 < t1.length) {\n          t3 = base._fragmentStart;\n          return new P._SimpleUri(C.JSString_methods.substring$2(base._uri, 0, t3) + C.JSString_methods.substring$1(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);\n        }\n        return base.removeFragment$0();\n      }\n      t2 = ref._uri;\n      if (C.JSString_methods.startsWith$2(t2, \"/\", refStart)) {\n        t3 = base._pathStart;\n        delta = t3 - refStart;\n        return new P._SimpleUri(C.JSString_methods.substring$2(base._uri, 0, t3) + C.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, t3, t1 + delta, ref._fragmentStart + delta, base._schemeCache);\n      }\n      baseStart = base._pathStart;\n      baseEnd = base._queryStart;\n      if (baseStart === baseEnd && base._hostStart > 0) {\n        for (; C.JSString_methods.startsWith$2(t2, \"../\", refStart);)\n          refStart += 3;\n        delta = baseStart - refStart + 1;\n        return new P._SimpleUri(C.JSString_methods.substring$2(base._uri, 0, baseStart) + \"/\" + C.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);\n      }\n      baseUri = base._uri;\n      for (baseStart0 = baseStart; C.JSString_methods.startsWith$2(baseUri, \"../\", baseStart0);)\n        baseStart0 += 3;\n      backCount = 0;\n      while (true) {\n        refStart0 = refStart + 3;\n        if (!(refStart0 <= t1 && C.JSString_methods.startsWith$2(t2, \"../\", refStart)))\n          break;\n        ++backCount;\n        refStart = refStart0;\n      }\n      for (insert = \"\"; baseEnd > baseStart0;) {\n        --baseEnd;\n        if (C.JSString_methods.codeUnitAt$1(baseUri, baseEnd) === 47) {\n          if (backCount === 0) {\n            insert = \"/\";\n            break;\n          }\n          --backCount;\n          insert = \"/\";\n        }\n      }\n      if (baseEnd === baseStart0 && base._schemeEnd <= 0 && !C.JSString_methods.startsWith$2(baseUri, \"/\", baseStart)) {\n        refStart -= backCount * 3;\n        insert = \"\";\n      }\n      delta = baseEnd - refStart + insert.length;\n      return new P._SimpleUri(C.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + C.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);\n    },\n    toFilePath$0: function() {\n      var t1, t2, t3, _this = this;\n      if (_this._schemeEnd >= 0 && !_this.get$_isFile())\n        throw H.wrapException(P.UnsupportedError$(\"Cannot extract a file path from a \" + _this.get$scheme() + \" URI\"));\n      t1 = _this._queryStart;\n      t2 = _this._uri;\n      if (t1 < t2.length) {\n        if (t1 < _this._fragmentStart)\n          throw H.wrapException(P.UnsupportedError$(string$.Cannotefq));\n        throw H.wrapException(P.UnsupportedError$(string$.Cannoteff));\n      }\n      t3 = $.$get$_Uri__isWindowsCached();\n      if (t3)\n        t1 = P._Uri__toWindowsFilePath(_this);\n      else {\n        if (_this._hostStart < _this._portStart)\n          H.throwExpression(P.UnsupportedError$(string$.Cannoten));\n        t1 = C.JSString_methods.substring$2(t2, _this._pathStart, t1);\n      }\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var t1 = this._hashCodeCache;\n      return t1 == null ? this._hashCodeCache = C.JSString_methods.get$hashCode(this._uri) : t1;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      if (this === other)\n        return true;\n      return type$.Uri._is(other) && this._uri === other.toString$0(0);\n    },\n    _toNonSimple$0: function() {\n      var _this = this, _null = null,\n        t1 = _this.get$scheme(),\n        t2 = _this.get$userInfo(),\n        t3 = _this._hostStart > 0 ? _this.get$host() : _null,\n        t4 = _this.get$hasPort() ? _this.get$port(_this) : _null,\n        t5 = _this._uri,\n        t6 = _this._queryStart,\n        t7 = C.JSString_methods.substring$2(t5, _this._pathStart, t6),\n        t8 = _this._fragmentStart;\n      t6 = t6 < t8 ? _this.get$query() : _null;\n      return new P._Uri(t1, t2, t3, t4, t7, t6, t8 < t5.length ? _this.get$fragment() : _null);\n    },\n    toString$0: function(_) {\n      return this._uri;\n    },\n    $isUri: 1\n  };\n  P._DataUri.prototype = {};\n  P._JSRandom.prototype = {\n    nextInt$1: function(max) {\n      if (max <= 0 || max > 4294967296)\n        throw H.wrapException(P.RangeError$(\"max must be in range 0 < max \\u2264 2^32, was \" + max));\n      return Math.random() * max >>> 0;\n    },\n    nextDouble$0: function() {\n      return Math.random();\n    }\n  };\n  N.ArgParser.prototype = {\n    addFlag$6$abbr$defaultsTo$help$hide$negatable: function($name, abbr, defaultsTo, help, hide, negatable) {\n      var _null = null;\n      this._addOption$11$hide$negatable($name, abbr, help, _null, _null, _null, defaultsTo, _null, C.OptionType_nMZ, hide, negatable);\n    },\n    addFlag$2$hide: function($name, hide) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, null, false, null, hide, true);\n    },\n    addFlag$2$help: function($name, help) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, null, false, help, false, true);\n    },\n    addFlag$3$defaultsTo$help: function($name, defaultsTo, help) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, null, defaultsTo, help, false, true);\n    },\n    addFlag$3$help$negatable: function($name, help, negatable) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, null, false, help, false, negatable);\n    },\n    addFlag$4$abbr$help$negatable: function($name, abbr, help, negatable) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, abbr, false, help, false, negatable);\n    },\n    addFlag$3$abbr$help: function($name, abbr, help) {\n      return this.addFlag$6$abbr$defaultsTo$help$hide$negatable($name, abbr, false, help, false, true);\n    },\n    addOption$7$abbr$allowed$defaultsTo$help$hide$valueHelp: function($name, abbr, allowed, defaultsTo, help, hide, valueHelp) {\n      this._addOption$11$hide$splitCommas($name, abbr, help, valueHelp, allowed, null, defaultsTo, null, C.OptionType_YwU, hide, null);\n    },\n    addOption$2$hide: function($name, hide) {\n      return this.addOption$7$abbr$allowed$defaultsTo$help$hide$valueHelp($name, null, null, null, null, hide, null);\n    },\n    addOption$6$abbr$allowed$defaultsTo$help$valueHelp: function($name, abbr, allowed, defaultsTo, help, valueHelp) {\n      return this.addOption$7$abbr$allowed$defaultsTo$help$hide$valueHelp($name, abbr, allowed, defaultsTo, help, false, valueHelp);\n    },\n    addOption$4$allowed$defaultsTo$help: function($name, allowed, defaultsTo, help) {\n      return this.addOption$7$abbr$allowed$defaultsTo$help$hide$valueHelp($name, null, allowed, defaultsTo, help, false, null);\n    },\n    addMultiOption$5$abbr$help$splitCommas$valueHelp: function($name, abbr, help, splitCommas, valueHelp) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      this._addOption$11$hide$splitCommas($name, abbr, help, valueHelp, null, null, t1, null, C.OptionType_qyr, false, false);\n    },\n    _addOption$12$hide$negatable$splitCommas: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable, splitCommas) {\n      var t2, existing, t3, option,\n        t1 = this._arg_parser$_options;\n      if (t1.containsKey$1($name))\n        throw H.wrapException(P.ArgumentError$('Duplicate option \"' + $name + '\".'));\n      t2 = abbr != null;\n      if (t2) {\n        existing = this.findByAbbreviation$1(abbr);\n        if (existing != null)\n          throw H.wrapException(P.ArgumentError$('Abbreviation \"' + abbr + '\" is already used by \"' + existing.name + '\".'));\n      }\n      t3 = allowed == null ? null : P.List_List$unmodifiable(allowed, type$.legacy_String);\n      option = new G.Option($name, abbr, help, valueHelp, t3, null, defaultsTo, negatable, callback, type, splitCommas == null ? type === C.OptionType_qyr : splitCommas, hide);\n      if ($name.length === 0)\n        H.throwExpression(P.ArgumentError$(\"Name cannot be empty.\"));\n      else if (C.JSString_methods.startsWith$1($name, \"-\"))\n        H.throwExpression(P.ArgumentError$(\"Name \" + $name + ' cannot start with \"-\".'));\n      t3 = $.$get$Option__invalidChars()._nativeRegExp;\n      if (t3.test($name))\n        H.throwExpression(P.ArgumentError$('Name \"' + $name + '\" contains invalid characters.'));\n      if (t2) {\n        if (abbr.length !== 1)\n          H.throwExpression(P.ArgumentError$(\"Abbreviation must be null or have length 1.\"));\n        else if (abbr === \"-\")\n          H.throwExpression(P.ArgumentError$('Abbreviation cannot be \"-\".'));\n        if (t3.test(abbr))\n          H.throwExpression(P.ArgumentError$(\"Abbreviation is an invalid character.\"));\n      }\n      t1.$indexSet(0, $name, option);\n      this._optionsAndSeparators.push(option);\n    },\n    _addOption$11$hide$splitCommas: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, splitCommas) {\n      return this._addOption$12$hide$negatable$splitCommas($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, false, splitCommas);\n    },\n    _addOption$11$hide$negatable: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable) {\n      return this._addOption$12$hide$negatable$splitCommas($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable, null);\n    },\n    findByAbbreviation$1: function(abbr) {\n      var t1 = this.options._collection$_map;\n      return t1.get$values(t1).firstWhere$2$orElse(0, new N.ArgParser_findByAbbreviation_closure(abbr), new N.ArgParser_findByAbbreviation_closure0());\n    }\n  };\n  N.ArgParser_findByAbbreviation_closure.prototype = {\n    call$1: function(option) {\n      return option.abbr === this.abbr;\n    },\n    $signature: 328\n  };\n  N.ArgParser_findByAbbreviation_closure0.prototype = {\n    call$0: function() {\n      return null;\n    },\n    $signature: 0\n  };\n  Z.ArgParserException.prototype = {};\n  V.ArgResults.prototype = {\n    $index: function(_, $name) {\n      var t1 = this._parser.options._collection$_map;\n      if (!t1.containsKey$1($name))\n        throw H.wrapException(P.ArgumentError$('Could not find an option named \"' + $name + '\".'));\n      return t1.$index(0, $name).getOrDefault$1(this._parsed.$index(0, $name));\n    },\n    wasParsed$1: function($name) {\n      if (this._parser.options._collection$_map.$index(0, $name) == null)\n        throw H.wrapException(P.ArgumentError$('Could not find an option named \"' + H.S($name) + '\".'));\n      return this._parsed.containsKey$1($name);\n    }\n  };\n  G.Option.prototype = {\n    getOrDefault$1: function(value) {\n      var t1;\n      if (value != null)\n        return value;\n      if (this.type === C.OptionType_qyr) {\n        t1 = this.defaultsTo;\n        return t1 == null ? H.setRuntimeTypeInfo([], type$.JSArray_legacy_String) : t1;\n      }\n      return this.defaultsTo;\n    }\n  };\n  G.OptionType.prototype = {};\n  G.Parser0.prototype = {\n    parse$0: function() {\n      var commandResults, commandName, commandParser, error, t1, t2, t4, t5, t6, t7, t8, t9, command, exception, _i, _this = this,\n        t3 = _this.args;\n      t3.toList$0(0);\n      commandResults = null;\n      for (t4 = _this.rest, t5 = _this.grammar, t6 = !t5.allowTrailingOptions, t7 = t5.commands; !t3.get$isEmpty(t3);) {\n        t8 = t3._collection$_head;\n        t9 = t8 === t3._collection$_tail;\n        if (t9)\n          H.throwExpression(H.IterableElementError_noElement());\n        t8 = t3._collection$_table[t8];\n        if (t8 === \"--\") {\n          t3.removeFirst$0();\n          break;\n        }\n        if (t9)\n          H.throwExpression(H.IterableElementError_noElement());\n        command = t7._collection$_map.$index(0, t8);\n        if (command != null) {\n          if (t4.length !== 0)\n            H.throwExpression(Z.ArgParserException$(\"Cannot specify arguments before a command.\", null));\n          commandName = t3.removeFirst$0();\n          t6 = type$.JSArray_legacy_String;\n          t7 = H.setRuntimeTypeInfo([], t6);\n          C.JSArray_methods.addAll$1(t7, t4);\n          commandParser = new G.Parser0(commandName, _this, command, t3, t7, P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.dynamic));\n          try {\n            commandResults = commandParser.parse$0();\n          } catch (exception) {\n            t3 = H.unwrapException(exception);\n            if (t3 instanceof Z.ArgParserException) {\n              error = t3;\n              if (commandName == null)\n                throw exception;\n              t3 = error.message;\n              t1 = H.setRuntimeTypeInfo([], t6);\n              J.add$1$ax(t1, commandName);\n              for (t4 = error.commands, t5 = t4.length, _i = 0; _i < t5; ++_i) {\n                t2 = t4[_i];\n                J.add$1$ax(t1, t2);\n              }\n              throw H.wrapException(Z.ArgParserException$(t3, t1));\n            } else\n              throw exception;\n          }\n          C.JSArray_methods.set$length(t4, 0);\n          break;\n        }\n        if (_this.parseSoloOption$0())\n          continue;\n        if (_this.parseAbbreviation$1(_this))\n          continue;\n        if (_this.parseLongOption$0())\n          continue;\n        if (t6)\n          break;\n        t4.push(t3.removeFirst$0());\n      }\n      t5.options._collection$_map.forEach$1(0, new G.Parser_parse_closure(_this));\n      C.JSArray_methods.addAll$1(t4, t3);\n      t3.clear$0(0);\n      return new V.ArgResults(t5, _this.results, _this.commandName, new P.UnmodifiableListView(t4, type$.UnmodifiableListView_legacy_String));\n    },\n    readNextArgAsValue$1: function(option) {\n      var t1 = this.args,\n        t2 = t1.get$isEmpty(t1),\n        t3 = 'Missing argument for \"' + option.name + '\".';\n      if (t2)\n        H.throwExpression(Z.ArgParserException$(t3, null));\n      this.setOption$3(this.results, option, t1.get$first(t1));\n      t1.removeFirst$0();\n    },\n    parseSoloOption$0: function() {\n      var opt, option, t2, _this = this,\n        t1 = _this.args;\n      if (t1.get$first(t1).length !== 2)\n        return false;\n      if (!J.startsWith$1$s(t1.get$first(t1), \"-\"))\n        return false;\n      opt = t1.get$first(t1)[1];\n      if (!G._isLetterOrDigit(C.JSString_methods._codeUnitAt$1(opt, 0)))\n        return false;\n      option = _this.grammar.findByAbbreviation$1(opt);\n      if (option == null) {\n        t1 = _this.parent;\n        t2 = 'Could not find an option or flag \"-' + opt + '\".';\n        if (t1 == null)\n          H.throwExpression(Z.ArgParserException$(t2, null));\n        return t1.parseSoloOption$0();\n      }\n      t1.removeFirst$0();\n      if (option.type === C.OptionType_nMZ)\n        _this.results.$indexSet(0, option.name, true);\n      else\n        _this.readNextArgAsValue$1(option);\n      return true;\n    },\n    parseAbbreviation$1: function(innermostCommand) {\n      var index, t2, t3, lettersAndDigits, rest, c, first, i, i0, _this = this,\n        t1 = _this.args;\n      if (t1.get$first(t1).length < 2)\n        return false;\n      if (!J.startsWith$1$s(t1.get$first(t1), \"-\"))\n        return false;\n      index = 1;\n      while (true) {\n        t2 = t1._collection$_head;\n        t3 = t2 === t1._collection$_tail;\n        if (t3)\n          H.throwExpression(H.IterableElementError_noElement());\n        t2 = t1._collection$_table[t2];\n        if (index < t2.length) {\n          if (t3)\n            H.throwExpression(H.IterableElementError_noElement());\n          t2 = J._codeUnitAt$1$s(t2, index);\n          if (!(t2 >= 65 && t2 <= 90))\n            if (!(t2 >= 97 && t2 <= 122))\n              t2 = t2 >= 48 && t2 <= 57;\n            else\n              t2 = true;\n          else\n            t2 = true;\n        } else\n          t2 = false;\n        if (!t2)\n          break;\n        ++index;\n      }\n      if (index === 1)\n        return false;\n      lettersAndDigits = J.substring$2$s(t1.get$first(t1), 1, index);\n      rest = J.substring$1$s(t1.get$first(t1), index);\n      if (C.JSString_methods.contains$1(rest, \"\\n\") || C.JSString_methods.contains$1(rest, \"\\r\"))\n        return false;\n      c = C.JSString_methods.substring$2(lettersAndDigits, 0, 1);\n      first = _this.grammar.findByAbbreviation$1(c);\n      if (first == null) {\n        t1 = _this.parent;\n        t2 = string$.Could_ + c + '\".';\n        if (t1 == null)\n          H.throwExpression(Z.ArgParserException$(t2, null));\n        return t1.parseAbbreviation$1(innermostCommand);\n      } else if (first.type !== C.OptionType_nMZ)\n        _this.setOption$3(_this.results, first, C.JSString_methods.substring$1(lettersAndDigits, 1) + rest);\n      else {\n        t2 = 'Option \"-' + c + '\" is a flag and cannot handle value \"' + C.JSString_methods.substring$1(lettersAndDigits, 1) + rest + '\".';\n        if (rest !== \"\")\n          H.throwExpression(Z.ArgParserException$(t2, null));\n        for (t2 = lettersAndDigits.length, i = 0; i < t2; i = i0) {\n          i0 = i + 1;\n          innermostCommand.parseShortFlag$1(C.JSString_methods.substring$2(lettersAndDigits, i, i0));\n        }\n      }\n      t1.removeFirst$0();\n      return true;\n    },\n    parseShortFlag$1: function(c) {\n      var t1, t2,\n        option = this.grammar.findByAbbreviation$1(c);\n      if (option == null) {\n        t1 = this.parent;\n        t2 = string$.Could_ + c + '\".';\n        if (t1 == null)\n          H.throwExpression(Z.ArgParserException$(t2, null));\n        t1.parseShortFlag$1(c);\n        return;\n      }\n      t1 = option.type;\n      t2 = 'Option \"-' + c + '\" must be a flag to be in a collapsed \"-\".';\n      if (t1 !== C.OptionType_nMZ)\n        H.throwExpression(Z.ArgParserException$(t2, null));\n      this.results.$indexSet(0, option.name, true);\n    },\n    parseLongOption$0: function() {\n      var index, t2, $name, t3, i, t4, t5, value, option, _this = this, _null = null,\n        _s32_ = 'Could not find an option named \"',\n        t1 = _this.args;\n      if (!J.startsWith$1$s(t1.get$first(t1), \"--\"))\n        return false;\n      index = J.indexOf$1$asx(t1.get$first(t1), \"=\");\n      t2 = index === -1;\n      $name = t2 ? J.substring$1$s(t1.get$first(t1), 2) : J.substring$2$s(t1.get$first(t1), 2, index);\n      for (t3 = $name.length, i = 0; i !== t3; ++i) {\n        t4 = C.JSString_methods._codeUnitAt$1($name, i);\n        if (!(t4 >= 65 && t4 <= 90))\n          if (!(t4 >= 97 && t4 <= 122))\n            t5 = t4 >= 48 && t4 <= 57;\n          else\n            t5 = true;\n        else\n          t5 = true;\n        if (!(t5 || t4 === 45 || t4 === 95))\n          return false;\n      }\n      value = t2 ? _null : J.substring$1$s(t1.get$first(t1), index + 1);\n      t2 = value != null;\n      if (t2)\n        t3 = C.JSString_methods.contains$1(value, \"\\n\") || C.JSString_methods.contains$1(value, \"\\r\");\n      else\n        t3 = false;\n      if (t3)\n        return false;\n      t3 = _this.grammar.options._collection$_map;\n      option = t3.$index(0, $name);\n      if (option != null) {\n        t1.removeFirst$0();\n        if (option.type === C.OptionType_nMZ) {\n          t1 = 'Flag option \"' + $name + '\" should not be given a value.';\n          if (t2)\n            H.throwExpression(Z.ArgParserException$(t1, _null));\n          _this.results.$indexSet(0, option.name, true);\n        } else if (t2)\n          _this.setOption$3(_this.results, option, value);\n        else\n          _this.readNextArgAsValue$1(option);\n      } else if (C.JSString_methods.startsWith$1($name, \"no-\")) {\n        $name = C.JSString_methods.substring$1($name, 3);\n        option = t3.$index(0, $name);\n        if (option == null) {\n          t1 = _this.parent;\n          t2 = _s32_ + $name + '\".';\n          if (t1 == null)\n            H.throwExpression(Z.ArgParserException$(t2, _null));\n          return t1.parseLongOption$0();\n        }\n        t1.removeFirst$0();\n        t1 = option.type;\n        t2 = 'Cannot negate non-flag option \"' + $name + '\".';\n        if (t1 !== C.OptionType_nMZ)\n          H.throwExpression(Z.ArgParserException$(t2, _null));\n        t1 = option.negatable;\n        t2 = 'Cannot negate option \"' + $name + '\".';\n        if (!t1)\n          H.throwExpression(Z.ArgParserException$(t2, _null));\n        _this.results.$indexSet(0, option.name, false);\n      } else {\n        t1 = _this.parent;\n        t2 = _s32_ + $name + '\".';\n        if (t1 == null)\n          H.throwExpression(Z.ArgParserException$(t2, _null));\n        return t1.parseLongOption$0();\n      }\n      return true;\n    },\n    setOption$3: function(results, option, value) {\n      var list, t1, t2, t3, _i, element;\n      if (option.type !== C.OptionType_qyr) {\n        this._validateAllowed$2(option, value);\n        results.$indexSet(0, option.name, value);\n        return;\n      }\n      list = results.putIfAbsent$2(option.name, new G.Parser_setOption_closure());\n      if (option.splitCommas)\n        for (t1 = value.split(\",\"), t2 = t1.length, t3 = J.getInterceptor$ax(list), _i = 0; _i < t2; ++_i) {\n          element = t1[_i];\n          this._validateAllowed$2(option, element);\n          t3.add$1(list, element);\n        }\n      else {\n        this._validateAllowed$2(option, value);\n        J.add$1$ax(list, value);\n      }\n    },\n    _validateAllowed$2: function(option, value) {\n      var t2,\n        t1 = option.allowed;\n      if (t1 == null)\n        return;\n      t1 = C.JSArray_methods.contains$1(t1, value);\n      t2 = '\"' + H.S(value) + '\" is not an allowed value for option \"' + option.name + '\".';\n      if (!t1)\n        H.throwExpression(Z.ArgParserException$(t2, null));\n    }\n  };\n  G.Parser_parse_closure.prototype = {\n    call$2: function($name, option) {\n      var t1 = option.callback;\n      if (t1 == null)\n        return;\n      t1.call$1(option.getOrDefault$1(this.$this.results.$index(0, $name)));\n    },\n    $signature: 333\n  };\n  G.Parser_setOption_closure.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n    },\n    $signature: 42\n  };\n  G.Usage.prototype = {\n    generate$0: function() {\n      var t1, t2, t3, t4, _i, optionOrSeparator, t5, t6, allowedNames, t7, t8, _i0, $name, isDefault, t9, _this = this;\n      _this.buffer = new P.StringBuffer(\"\");\n      _this.calculateColumnWidths$0();\n      for (t1 = _this.optionsAndSeparators, t2 = t1.length, t3 = type$.legacy_Option, t4 = type$.legacy_List_dynamic, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        optionOrSeparator = t1[_i];\n        if (typeof optionOrSeparator == \"string\") {\n          t5 = _this.buffer;\n          t6 = t5._contents;\n          t5._contents = (t6.length !== 0 ? t5._contents = t6 + \"\\n\\n\" : t6) + optionOrSeparator;\n          _this.newlinesNeeded = 1;\n          continue;\n        }\n        t3._as(optionOrSeparator);\n        if (optionOrSeparator.hide)\n          continue;\n        t5 = optionOrSeparator.abbr;\n        _this.write$2(0, 0, t5 == null ? \"\" : \"-\" + t5 + \", \");\n        _this.write$2(0, 1, _this.getLongOption$1(optionOrSeparator));\n        t5 = optionOrSeparator.help;\n        if (t5 != null)\n          _this.write$2(0, 2, t5);\n        t5 = optionOrSeparator.allowedHelp;\n        if (t5 != null) {\n          allowedNames = J.toList$1$growable$ax(t5.get$keys(t5), false);\n          if (!!allowedNames.immutable$list)\n            H.throwExpression(P.UnsupportedError$(\"sort\"));\n          t6 = allowedNames.length - 1;\n          if (t6 - 0 <= 32)\n            H.Sort__insertionSort(allowedNames, 0, t6, J._interceptors_JSArray__compareAny$closure());\n          else\n            H.Sort__dualPivotQuicksort(allowedNames, 0, t6, J._interceptors_JSArray__compareAny$closure());\n          ++_this.newlinesNeeded;\n          _this.numHelpLines = _this.currentColumn = 0;\n          for (t6 = allowedNames.length, t7 = optionOrSeparator.defaultsTo, t8 = t4._is(t7), _i0 = 0; _i0 < allowedNames.length; allowedNames.length === t6 || (0, H.throwConcurrentModificationError)(allowedNames), ++_i0) {\n            $name = allowedNames[_i0];\n            isDefault = t8 ? C.JSArray_methods.contains$1(t7, $name) : t7 == null ? $name == null : t7 === $name;\n            t9 = \"      [\" + H.S($name) + \"]\";\n            _this.write$2(0, 1, t9 + (isDefault ? \" (default)\" : \"\"));\n            _this.write$2(0, 2, t5.$index(0, $name));\n          }\n          ++_this.newlinesNeeded;\n          _this.numHelpLines = _this.currentColumn = 0;\n        } else if (optionOrSeparator.allowed != null)\n          _this.write$2(0, 2, _this.buildAllowedList$1(optionOrSeparator));\n        else {\n          t5 = optionOrSeparator.type;\n          if (t5 === C.OptionType_nMZ) {\n            if (optionOrSeparator.defaultsTo === true)\n              _this.write$2(0, 2, \"(defaults to on)\");\n          } else if (t5 === C.OptionType_qyr) {\n            t5 = optionOrSeparator.defaultsTo;\n            if (t5 != null && J.get$isNotEmpty$asx(t5))\n              _this.write$2(0, 2, \"(defaults to \" + J.map$1$ax(t5, new G.Usage_generate_closure()).join$1(0, \", \") + \")\");\n          } else {\n            t5 = optionOrSeparator.defaultsTo;\n            if (t5 != null)\n              _this.write$2(0, 2, '(defaults to \"' + H.S(t5) + '\")');\n          }\n        }\n      }\n      return J.toString$0$(_this.buffer);\n    },\n    getLongOption$1: function(option) {\n      var t1 = option.name,\n        result = option.negatable ? \"--[no-]\" + t1 : \"--\" + t1;\n      t1 = option.valueHelp;\n      return t1 != null ? result + (\"=<\" + t1 + \">\") : result;\n    },\n    calculateColumnWidths$0: function() {\n      var t1, t2, t3, abbr, title, _i, option, t4, t5, t6, allowed, isDefault, t7;\n      for (t1 = this.optionsAndSeparators, t2 = t1.length, t3 = type$.legacy_List_dynamic, abbr = 0, title = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        option = t1[_i];\n        if (!(option instanceof G.Option))\n          continue;\n        if (option.hide)\n          continue;\n        t4 = option.abbr;\n        abbr = Math.max(abbr, (t4 == null ? \"\" : \"-\" + t4 + \", \").length);\n        title = Math.max(title, this.getLongOption$1(option).length);\n        t4 = option.allowedHelp;\n        if (t4 != null)\n          for (t4 = J.get$iterator$ax(t4.get$keys(t4)), t5 = option.defaultsTo, t6 = t3._is(t5); t4.moveNext$0();) {\n            allowed = t4.get$current(t4);\n            isDefault = t6 ? C.JSArray_methods.contains$1(t5, allowed) : t5 == null ? allowed == null : t5 === allowed;\n            t7 = \"      [\" + H.S(allowed) + \"]\";\n            title = Math.max(title, (t7 + (isDefault ? \" (default)\" : \"\")).length);\n          }\n      }\n      this.columnWidths = H.setRuntimeTypeInfo([abbr, title + 4], type$.JSArray_legacy_int);\n    },\n    write$2: function(_, column, text) {\n      var t1, _i,\n        lines = H.setRuntimeTypeInfo(text.split(\"\\n\"), type$.JSArray_String);\n      this.columnWidths.length;\n      while (true) {\n        if (!(lines.length !== 0 && J.trim$0$s(lines[0]) === \"\"))\n          break;\n        if (!!lines.fixed$length)\n          H.throwExpression(P.UnsupportedError$(\"removeRange\"));\n        P.RangeError_checkValidRange(0, 1, lines.length);\n        lines.splice(0, 1);\n      }\n      while (true) {\n        t1 = lines.length;\n        if (!(t1 !== 0 && J.trim$0$s(lines[t1 - 1]) === \"\"))\n          break;\n        lines.pop();\n      }\n      for (t1 = lines.length, _i = 0; _i < lines.length; lines.length === t1 || (0, H.throwConcurrentModificationError)(lines), ++_i)\n        this.writeLine$2(column, lines[_i]);\n    },\n    writeLine$2: function(column, text) {\n      var t1, t2, _this = this;\n      for (; t1 = _this.newlinesNeeded, t1 > 0;) {\n        _this.buffer._contents += \"\\n\";\n        _this.newlinesNeeded = t1 - 1;\n      }\n      for (; t1 = _this.currentColumn, t1 !== column;) {\n        t2 = _this.buffer;\n        if (t1 < 2)\n          t2._contents += C.JSString_methods.$mul(\" \", _this.columnWidths[t1]);\n        else\n          t2._contents += \"\\n\";\n        _this.currentColumn = (_this.currentColumn + 1) % 3;\n      }\n      t1 = _this.columnWidths;\n      t1.length;\n      t2 = _this.buffer;\n      if (column < 2)\n        t2._contents += J.padRight$1$s(text, t1[column]);\n      else {\n        t2.toString;\n        t2._contents += H.S(text);\n      }\n      _this.currentColumn = (_this.currentColumn + 1) % 3;\n      t1 = column === 2;\n      if (t1)\n        ++_this.newlinesNeeded;\n      if (t1)\n        ++_this.numHelpLines;\n      else\n        _this.numHelpLines = 0;\n    },\n    buildAllowedList$1: function(option) {\n      var t2, first, _i, t3, allowed,\n        t1 = option.defaultsTo,\n        isDefault = type$.legacy_List_dynamic._is(t1) ? C.JSArray_methods.get$contains(t1) : new G.Usage_buildAllowedList_closure(option);\n      for (t1 = option.allowed, t2 = t1.length, first = true, _i = 0, t3 = \"[\"; _i < t2; ++_i, first = false) {\n        allowed = t1[_i];\n        if (!first)\n          t3 += \", \";\n        t3 += H.S(allowed);\n        if (isDefault.call$1(allowed))\n          t3 += \" (default)\";\n      }\n      t1 = t3 + \"]\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  G.Usage_generate_closure.prototype = {\n    call$1: function(value) {\n      return '\"' + H.S(value) + '\"';\n    },\n    $signature: 99\n  };\n  G.Usage_buildAllowedList_closure.prototype = {\n    call$1: function(value) {\n      var t1 = this.option.defaultsTo;\n      return value == null ? t1 == null : value === t1;\n    },\n    $signature: 195\n  };\n  V.ErrorResult.prototype = {\n    complete$1: function(completer) {\n      completer.completeError$2(this.error, this.stackTrace);\n    },\n    get$hashCode: function(_) {\n      return (J.get$hashCode$(this.error) ^ J.get$hashCode$(this.stackTrace) ^ 492929599) >>> 0;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof V.ErrorResult && J.$eq$(this.error, other.error) && this.stackTrace == other.stackTrace;\n    },\n    $isResult: 1\n  };\n  F.ValueResult.prototype = {\n    complete$1: function(completer) {\n      completer.complete$1(this.value);\n    },\n    get$hashCode: function(_) {\n      return (J.get$hashCode$(this.value) ^ 842997089) >>> 0;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.ValueResult && J.$eq$(this.value, other.value);\n    },\n    $isResult: 1\n  };\n  Y.StreamCompleter.prototype = {\n    setSourceStream$1: function(sourceStream) {\n      var t1 = this._stream_completer$_stream;\n      if (t1._sourceStream != null)\n        throw H.wrapException(P.StateError$(\"Source stream already set\"));\n      t1._sourceStream = sourceStream;\n      if (t1._stream_completer$_controller != null)\n        t1._linkStreamToController$0();\n    },\n    setError$2: function(error, stackTrace) {\n      var t1 = this.$ti._eval$1(\"1*\");\n      this.setSourceStream$1(P.Stream_Stream$fromFuture(P.Future_Future$error(error, stackTrace, t1), t1));\n    },\n    setError$1: function(error) {\n      return this.setError$2(error, null);\n    }\n  };\n  Y._CompleterStream.prototype = {\n    listen$4$cancelOnError$onDone$onError: function(_, onData, cancelOnError, onDone, onError) {\n      var t1, _this = this, _null = null;\n      if (_this._stream_completer$_controller == null) {\n        t1 = _this._sourceStream;\n        if (t1 != null && !t1.get$isBroadcast())\n          return _this._sourceStream.listen$4$cancelOnError$onDone$onError(0, onData, cancelOnError, onDone, onError);\n        _this._stream_completer$_controller = P.StreamController_StreamController(_null, _null, _null, _null, true, _this.$ti._eval$1(\"1*\"));\n        if (_this._sourceStream != null)\n          _this._linkStreamToController$0();\n      }\n      t1 = _this._stream_completer$_controller;\n      t1.toString;\n      return new P._ControllerStream(t1, H._instanceType(t1)._eval$1(\"_ControllerStream<1>\")).listen$4$cancelOnError$onDone$onError(0, onData, cancelOnError, onDone, onError);\n    },\n    listen$3$onDone$onError: function($receiver, onData, onDone, onError) {\n      return this.listen$4$cancelOnError$onDone$onError($receiver, onData, null, onDone, onError);\n    },\n    listen$1: function($receiver, onData) {\n      return this.listen$4$cancelOnError$onDone$onError($receiver, onData, null, null, null);\n    },\n    _linkStreamToController$0: function() {\n      var t1 = this._stream_completer$_controller.addStream$2$cancelOnError(this._sourceStream, false),\n        t2 = this._stream_completer$_controller;\n      t1.whenComplete$1(t2.get$close(t2));\n    }\n  };\n  L.StreamGroup.prototype = {\n    add$1: function(_, stream) {\n      var t1, _this = this;\n      if (_this._closed)\n        throw H.wrapException(P.StateError$(\"Can't add a Stream to a closed StreamGroup.\"));\n      t1 = _this._stream_group$_state;\n      if (t1 === C._StreamGroupState_dormant)\n        _this._subscriptions.putIfAbsent$2(stream, new L.StreamGroup_add_closure());\n      else if (t1 === C._StreamGroupState_canceled)\n        return stream.listen$1(0, null).cancel$0();\n      else\n        _this._subscriptions.putIfAbsent$2(stream, new L.StreamGroup_add_closure0(_this, stream));\n      return null;\n    },\n    remove$1: function(_, stream) {\n      var t1 = this._subscriptions,\n        subscription = t1.remove$1(0, stream),\n        future = subscription == null ? null : subscription.cancel$0();\n      if (this._closed && t1.get$isEmpty(t1))\n        this._controller.close$0(0);\n      return future;\n    },\n    _onListen$0: function() {\n      this._stream_group$_state = C._StreamGroupState_listening;\n      this._subscriptions.forEach$1(0, new L.StreamGroup__onListen_closure(this));\n    },\n    _onPause$0: function() {\n      this._stream_group$_state = C._StreamGroupState_paused;\n      for (var t1 = this._subscriptions, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        t1.get$current(t1).pause$0(0);\n    },\n    _onResume$0: function() {\n      this._stream_group$_state = C._StreamGroupState_listening;\n      for (var t1 = this._subscriptions, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        t1.get$current(t1).resume$0(0);\n    },\n    _onCancel$0: function() {\n      var t1, t2, t3, futures;\n      this._stream_group$_state = C._StreamGroupState_canceled;\n      t1 = this._subscriptions;\n      t2 = t1.get$values(t1);\n      t2 = H.MappedIterable_MappedIterable(t2, new L.StreamGroup__onCancel_closure(this), H._instanceType(t2)._eval$1(\"Iterable.E\"), type$.legacy_Future_void);\n      t3 = H._instanceType(t2)._eval$1(\"WhereIterable<Iterable.E>\");\n      futures = P.List_List$from(new H.WhereIterable(t2, new L.StreamGroup__onCancel_closure0(), t3), true, t3._eval$1(\"Iterable.E\"));\n      t1.clear$0(0);\n      return futures.length === 0 ? null : P.Future_wait(futures, type$.void);\n    },\n    _listenToStream$1: function(stream) {\n      var t1 = this._controller,\n        subscription = stream.listen$3$onDone$onError(0, t1.get$add(t1), new L.StreamGroup__listenToStream_closure(this, stream), t1.get$addError());\n      if (this._stream_group$_state === C._StreamGroupState_paused)\n        subscription.pause$0(0);\n      return subscription;\n    }\n  };\n  L.StreamGroup_add_closure.prototype = {\n    call$0: function() {\n      return null;\n    },\n    $signature: 0\n  };\n  L.StreamGroup_add_closure0.prototype = {\n    call$0: function() {\n      return this.$this._listenToStream$1(this.stream);\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"StreamSubscription<1*>*()\");\n    }\n  };\n  L.StreamGroup__onListen_closure.prototype = {\n    call$2: function(stream, subscription) {\n      var t1;\n      if (subscription != null)\n        return;\n      t1 = this.$this;\n      t1._subscriptions.$indexSet(0, stream, t1._listenToStream$1(stream));\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Null(Stream<1*>*,StreamSubscription<1*>*)\");\n    }\n  };\n  L.StreamGroup__onCancel_closure.prototype = {\n    call$1: function(subscription) {\n      return subscription.cancel$0();\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Future<~>*(StreamSubscription<1*>*)\");\n    }\n  };\n  L.StreamGroup__onCancel_closure0.prototype = {\n    call$1: function(future) {\n      return future != null;\n    },\n    $signature: 452\n  };\n  L.StreamGroup__listenToStream_closure.prototype = {\n    call$0: function() {\n      return this.$this.remove$1(0, this.stream);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 191\n  };\n  L._StreamGroupState.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  G.StreamQueue.prototype = {\n    get$next: function() {\n      var t1 = this.$ti,\n        t2 = new P._Future($.Zone__current, t1._eval$1(\"_Future<1*>\"));\n      this._addRequest$1(new G._NextRequest(new P._AsyncCompleter(t2, t1._eval$1(\"_AsyncCompleter<1*>\")), t1._eval$1(\"_NextRequest<1*>\")));\n      return t2;\n    },\n    _updateRequests$0: function() {\n      var t1, t2, t3, _this = this;\n      for (t1 = _this._requestQueue, t2 = _this._eventQueue; !t1.get$isEmpty(t1);) {\n        t3 = t1._collection$_head;\n        if (t3 === t1._collection$_tail)\n          H.throwExpression(H.IterableElementError_noElement());\n        if (t1._collection$_table[t3].update$2(t2, _this._isDone))\n          t1.removeFirst$0();\n        else\n          return;\n      }\n      if (!_this._isDone)\n        _this._stream_queue$_subscription.pause$0(0);\n    },\n    _ensureListening$0: function() {\n      var t1, _this = this;\n      if (_this._isDone)\n        return;\n      t1 = _this._stream_queue$_subscription;\n      if (t1 == null)\n        _this._stream_queue$_subscription = _this._stream_queue$_source.listen$3$onDone$onError(0, new G.StreamQueue__ensureListening_closure(_this), new G.StreamQueue__ensureListening_closure0(_this), new G.StreamQueue__ensureListening_closure1(_this));\n      else\n        t1.resume$0(0);\n    },\n    _addResult$1: function(result) {\n      ++this._eventsReceived;\n      this._eventQueue._queue_list$_add$1(result);\n      this._updateRequests$0();\n    },\n    _addRequest$1: function(request) {\n      var _this = this,\n        t1 = _this._requestQueue;\n      if (t1._collection$_head === t1._collection$_tail) {\n        if (request.update$2(_this._eventQueue, _this._isDone))\n          return;\n        _this._ensureListening$0();\n      }\n      t1._add$1(request);\n    }\n  };\n  G.StreamQueue__ensureListening_closure.prototype = {\n    call$1: function(data) {\n      var t1 = this.$this;\n      t1._addResult$1(new F.ValueResult(data, t1.$ti._eval$1(\"ValueResult<1*>\")));\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"Null(1*)\");\n    }\n  };\n  G.StreamQueue__ensureListening_closure1.prototype = {\n    call$2: function(error, stackTrace) {\n      this.$this._addResult$1(new V.ErrorResult(error, stackTrace));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 189\n  };\n  G.StreamQueue__ensureListening_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._stream_queue$_subscription = null;\n      t1._isDone = true;\n      t1._updateRequests$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  G._NextRequest.prototype = {\n    update$2: function(events, isDone) {\n      if (!events.get$isEmpty(events)) {\n        events.removeFirst$0().complete$1(this._completer);\n        return true;\n      }\n      if (isDone) {\n        this._completer.completeError$2(new P.StateError(\"No elements\"), P.StackTrace_current());\n        return true;\n      }\n      return false;\n    },\n    $is_EventRequest: 1\n  };\n  Q.Repl.prototype = {};\n  Q.closure113.prototype = {\n    call$1: function(text) {\n      return true;\n    },\n    $signature: 5\n  };\n  B.ReplAdapter.prototype = {\n    runAsync$0: function() {\n      var $async$runAsync$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        switch ($async$errorCode) {\n          case 2:\n            $async$next = $async$nextWhenCanceled;\n            $async$goto = $async$next.pop();\n            break;\n          case 1:\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.get$isTTY$x(self.process.stdin);\n              output = (t1 == null ? false : t1) ? self.process.stdout : null;\n              t1 = $async$self.repl;\n              $prompt = t1.prompt;\n              $async$self.rl = J.createInterface$1$x($.$get$readline(), {input: self.process.stdin, output: output, prompt: $prompt});\n              controller = P.StreamController_StreamController(null, null, null, null, false, type$.legacy_String);\n              queue = new G.StreamQueue(new P._ControllerStream(controller, H._instanceType(controller)._eval$1(\"_ControllerStream<1>\")), Q.QueueList$(null, type$.legacy_Result_legacy_String), P.ListQueue$(type$.legacy__EventRequest_dynamic), type$.StreamQueue_legacy_String);\n              J.on$2$x($async$self.rl, \"line\", P.allowInterop(new B.ReplAdapter_runAsync_closure(controller)));\n              prompt0 = t1.continuation, prompt1 = $prompt, statement = \"\";\n            case 3:\n              // for condition\n              // trivial condition\n              t2 = J.get$isTTY$x(self.process.stdin);\n              if (t2 == null ? false : t2)\n                J.write$1$x(self.process.stdout, prompt1);\n              $async$goto = 5;\n              return P._asyncStarHelper(queue.get$next(), $async$runAsync$0, $async$controller);\n            case 5:\n              // returning from await.\n              line = $async$result;\n              t2 = J.get$isTTY$x(self.process.stdin);\n              if (!(t2 == null ? false : t2)) {\n                line0 = prompt1 + H.S(line);\n                toZone = $.printToZone;\n                if (toZone == null)\n                  H.printString(line0);\n                else\n                  toZone.call$1(line0);\n              }\n              statement = C.JSString_methods.$add(statement, line);\n              $async$goto = t1.validator.call$1(statement) ? 6 : 8;\n              break;\n            case 6:\n              // then\n              $async$goto = 9;\n              $async$nextWhenCanceled = [1];\n              return P._asyncStarHelper(P._IterationMarker_yieldSingle(statement), $async$runAsync$0, $async$controller);\n            case 9:\n              // after yield\n              J.setPrompt$1$x($async$self.rl, $prompt);\n              prompt1 = $prompt;\n              statement = \"\";\n              // goto join\n              $async$goto = 7;\n              break;\n            case 8:\n              // else\n              statement += \"\\n\";\n              J.setPrompt$1$x($async$self.rl, prompt0);\n              prompt1 = prompt0;\n            case 7:\n              // join\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 4:\n              // after for\n            case 1:\n              // return\n              return P._asyncStarHelper(null, 0, $async$controller);\n            case 2:\n              // rethrow\n              return P._asyncStarHelper($async$currentError, 1, $async$controller);\n          }\n      });\n      var $async$goto = 0,\n        $async$controller = P._makeAsyncStarStreamController($async$runAsync$0, type$.legacy_String),\n        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, $prompt, controller, queue, prompt0, prompt1, statement, t2, line, line0, toZone, t1, output;\n      return P._streamOfController($async$controller);\n    }\n  };\n  B.ReplAdapter_runAsync_closure.prototype = {\n    call$1: function(value) {\n      this.controller.add$1(0, value);\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 90\n  };\n  B.Stdin.prototype = {};\n  B.Stdout.prototype = {};\n  B.ReadlineModule.prototype = {};\n  B.ReadlineOptions.prototype = {};\n  B.ReadlineInterface.prototype = {};\n  O.EmptyUnmodifiableSet.prototype = {\n    get$iterator: function(_) {\n      return C.C_EmptyIterator;\n    },\n    get$length: function(_) {\n      return 0;\n    },\n    cast$1$0: function(_, $T) {\n      return new O.EmptyUnmodifiableSet($T._eval$1(\"EmptyUnmodifiableSet<0*>\"));\n    },\n    contains$1: function(_, element) {\n      return false;\n    },\n    toSet$0: function(_) {\n      return P.LinkedHashSet_LinkedHashSet$_empty(this.$ti._eval$1(\"1*\"));\n    },\n    add$1: function(_, value) {\n      return O.EmptyUnmodifiableSet__throw();\n    },\n    addAll$1: function(_, elements) {\n      return O.EmptyUnmodifiableSet__throw();\n    },\n    $isEfficientLengthIterable: 1,\n    $isSet: 1\n  };\n  U.DefaultEquality.prototype = {};\n  U.IterableEquality.prototype = {\n    equals$2: function(_, elements1, elements2) {\n      var it1, it2, hasNext;\n      if (elements1 === elements2)\n        return true;\n      it1 = J.get$iterator$ax(elements1);\n      it2 = J.get$iterator$ax(elements2);\n      for (; true;) {\n        hasNext = it1.moveNext$0();\n        if (hasNext !== it2.moveNext$0())\n          return false;\n        if (!hasNext)\n          return true;\n        if (!J.$eq$(it1.get$current(it1), it2.get$current(it2)))\n          return false;\n      }\n    }\n  };\n  U.ListEquality.prototype = {\n    equals$2: function(_, list1, list2) {\n      var t1, $length, t2, i;\n      if (list1 == null ? list2 == null : list1 === list2)\n        return true;\n      if (list1 == null || list2 == null)\n        return false;\n      t1 = J.getInterceptor$asx(list1);\n      $length = t1.get$length(list1);\n      t2 = J.getInterceptor$asx(list2);\n      if ($length !== t2.get$length(list2))\n        return false;\n      for (i = 0; i < $length; ++i)\n        if (!J.$eq$(t1.$index(list1, i), t2.$index(list2, i)))\n          return false;\n      return true;\n    },\n    hash$1: function(list) {\n      var t1, hash, i;\n      for (t1 = list.length, hash = 0, i = 0; i < t1; ++i) {\n        hash = hash + J.get$hashCode$(list[i]) & 2147483647;\n        hash = hash + (hash << 10 >>> 0) & 2147483647;\n        hash ^= hash >>> 6;\n      }\n      hash = hash + (hash << 3 >>> 0) & 2147483647;\n      hash ^= hash >>> 11;\n      return hash + (hash << 15 >>> 0) & 2147483647;\n    }\n  };\n  U._MapEntry.prototype = {\n    get$hashCode: function(_) {\n      return 3 * J.get$hashCode$(this.key) + 7 * J.get$hashCode$(this.value) & 2147483647;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof U._MapEntry && J.$eq$(this.key, other.key) && J.$eq$(this.value, other.value);\n    }\n  };\n  U.MapEquality.prototype = {\n    equals$2: function(_, map1, map2) {\n      var equalElementCounts, t1, key, entry, count;\n      if (map1 === map2)\n        return true;\n      if (map1.get$length(map1) !== map2.get$length(map2))\n        return false;\n      equalElementCounts = P.HashMap_HashMap(type$.legacy__MapEntry, type$.legacy_int);\n      for (t1 = J.get$iterator$ax(map1.get$keys(map1)); t1.moveNext$0();) {\n        key = t1.get$current(t1);\n        entry = new U._MapEntry(this, key, map1.$index(0, key));\n        count = equalElementCounts.$index(0, entry);\n        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);\n      }\n      for (t1 = J.get$iterator$ax(map2.get$keys(map2)); t1.moveNext$0();) {\n        key = t1.get$current(t1);\n        entry = new U._MapEntry(this, key, map2.$index(0, key));\n        count = equalElementCounts.$index(0, entry);\n        if (count == null || count === 0)\n          return false;\n        equalElementCounts.$indexSet(0, entry, count - 1);\n      }\n      return true;\n    },\n    hash$1: function(map) {\n      var t1, hash, key;\n      for (t1 = J.get$iterator$ax(map.get$keys(map)), hash = 0; t1.moveNext$0();) {\n        key = t1.get$current(t1);\n        hash = hash + 3 * J.get$hashCode$(key) + 7 * J.get$hashCode$(map.$index(0, key)) & 2147483647;\n      }\n      hash = hash + (hash << 3 >>> 0) & 2147483647;\n      hash ^= hash >>> 11;\n      return hash + (hash << 15 >>> 0) & 2147483647;\n    }\n  };\n  Q.QueueList.prototype = {\n    QueueList$1: function(initialCapacity, $E) {\n      var t1;\n      if (initialCapacity == null || initialCapacity < 8)\n        initialCapacity = 8;\n      else if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)\n        initialCapacity = Q.QueueList__nextPowerOf2(initialCapacity);\n      t1 = new Array(initialCapacity);\n      t1.fixed$length = Array;\n      this._table = H.setRuntimeTypeInfo(t1, $E._eval$1(\"JSArray<0*>\"));\n    },\n    add$1: function(_, element) {\n      this._queue_list$_add$1(element);\n    },\n    addAll$1: function(_, iterable) {\n      var addCount, $length, t1, endSpace, preSpace, _this = this;\n      if (type$.legacy_List_dynamic._is(iterable)) {\n        addCount = J.get$length$asx(iterable);\n        $length = _this.get$length(_this);\n        t1 = $length + addCount;\n        if (t1 >= J.get$length$asx(_this._table)) {\n          _this._preGrow$1(t1);\n          J.setRange$4$ax(_this._table, $length, t1, iterable, 0);\n          _this.set$_tail(_this.get$_tail() + addCount);\n        } else {\n          endSpace = J.get$length$asx(_this._table) - _this.get$_tail();\n          t1 = _this._table;\n          if (addCount < endSpace) {\n            J.setRange$4$ax(t1, _this.get$_tail(), _this.get$_tail() + addCount, iterable, 0);\n            _this.set$_tail(_this.get$_tail() + addCount);\n          } else {\n            preSpace = addCount - endSpace;\n            J.setRange$4$ax(t1, _this.get$_tail(), _this.get$_tail() + endSpace, iterable, 0);\n            J.setRange$4$ax(_this._table, 0, preSpace, iterable, endSpace);\n            _this.set$_tail(preSpace);\n          }\n        }\n      } else\n        for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)\n          _this._queue_list$_add$1(t1.get$current(t1));\n    },\n    cast$1$0: function(_, $T) {\n      var t1 = $T._eval$1(\"0*\"),\n        t2 = new Q._CastQueueList(this, null, null, H._instanceType(this)._eval$1(\"@<QueueList.E*>\")._bind$1(t1)._eval$1(\"_CastQueueList<1,2>\"));\n      t2._table = J.cast$1$0$ax(this._table, t1);\n      return t2;\n    },\n    toString$0: function(_) {\n      return P.IterableBase_iterableToFullString(this, \"{\", \"}\");\n    },\n    addFirst$1: function(element) {\n      var _this = this;\n      _this.set$_head((_this.get$_head() - 1 & J.get$length$asx(_this._table) - 1) >>> 0);\n      J.$indexSet$ax(_this._table, _this.get$_head(), element);\n      if (_this.get$_head() == _this.get$_tail())\n        _this._grow$0();\n    },\n    removeFirst$0: function() {\n      var result, _this = this;\n      if (_this.get$_head() == _this.get$_tail())\n        throw H.wrapException(P.StateError$(\"No element\"));\n      result = J.$index$asx(_this._table, _this.get$_head());\n      J.$indexSet$ax(_this._table, _this.get$_head(), null);\n      _this.set$_head((_this.get$_head() + 1 & J.get$length$asx(_this._table) - 1) >>> 0);\n      return result;\n    },\n    get$length: function(_) {\n      return (this.get$_tail() - this.get$_head() & J.get$length$asx(this._table) - 1) >>> 0;\n    },\n    set$length: function(_, value) {\n      var delta, newTail, t1, t2, _this = this;\n      if (value < 0)\n        throw H.wrapException(P.RangeError$(\"Length \" + value + \" may not be negative.\"));\n      delta = value - _this.get$length(_this);\n      if (delta >= 0) {\n        if (J.get$length$asx(_this._table) <= value)\n          _this._preGrow$1(value);\n        _this.set$_tail((_this.get$_tail() + delta & J.get$length$asx(_this._table) - 1) >>> 0);\n        return;\n      }\n      newTail = _this.get$_tail() + delta;\n      t1 = _this._table;\n      if (newTail >= 0)\n        J.fillRange$3$ax(t1, newTail, _this.get$_tail(), null);\n      else {\n        newTail += J.get$length$asx(t1);\n        J.fillRange$3$ax(_this._table, 0, _this.get$_tail(), null);\n        t1 = _this._table;\n        t2 = J.getInterceptor$asx(t1);\n        t2.fillRange$3(t1, newTail, t2.get$length(t1), null);\n      }\n      _this.set$_tail(newTail);\n    },\n    $index: function(_, index) {\n      var _this = this;\n      if (index < 0 || index >= _this.get$length(_this))\n        throw H.wrapException(P.RangeError$(\"Index \" + H.S(index) + \" must be in the range [0..\" + _this.get$length(_this) + \").\"));\n      return J.$index$asx(_this._table, (_this.get$_head() + index & J.get$length$asx(_this._table) - 1) >>> 0);\n    },\n    $indexSet: function(_, index, value) {\n      var _this = this;\n      if (index < 0 || index >= _this.get$length(_this))\n        throw H.wrapException(P.RangeError$(\"Index \" + H.S(index) + \" must be in the range [0..\" + _this.get$length(_this) + \").\"));\n      J.$indexSet$ax(_this._table, (_this.get$_head() + index & J.get$length$asx(_this._table) - 1) >>> 0, value);\n    },\n    _queue_list$_add$1: function(element) {\n      var _this = this;\n      J.$indexSet$ax(_this._table, _this.get$_tail(), element);\n      _this.set$_tail((_this.get$_tail() + 1 & J.get$length$asx(_this._table) - 1) >>> 0);\n      if (_this.get$_head() == _this.get$_tail())\n        _this._grow$0();\n    },\n    _grow$0: function() {\n      var newTable, split, _this = this,\n        t1 = new Array(J.get$length$asx(_this._table) * 2);\n      t1.fixed$length = Array;\n      newTable = H.setRuntimeTypeInfo(t1, H._instanceType(_this)._eval$1(\"JSArray<QueueList.E*>\"));\n      split = J.get$length$asx(_this._table) - _this.get$_head();\n      C.JSArray_methods.setRange$4(newTable, 0, split, _this._table, _this.get$_head());\n      C.JSArray_methods.setRange$4(newTable, split, split + _this.get$_head(), _this._table, 0);\n      _this.set$_head(0);\n      _this.set$_tail(J.get$length$asx(_this._table));\n      _this._table = newTable;\n    },\n    _writeToList$1: function(target) {\n      var $length, firstPartSize, _this = this;\n      if (_this.get$_head() <= _this.get$_tail()) {\n        $length = _this.get$_tail() - _this.get$_head();\n        C.JSArray_methods.setRange$4(target, 0, $length, _this._table, _this.get$_head());\n        return $length;\n      } else {\n        firstPartSize = J.get$length$asx(_this._table) - _this.get$_head();\n        C.JSArray_methods.setRange$4(target, 0, firstPartSize, _this._table, _this.get$_head());\n        C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this.get$_tail(), _this._table, 0);\n        return _this.get$_tail() + firstPartSize;\n      }\n    },\n    _preGrow$1: function(newElementCount) {\n      var newTable, _this = this,\n        t1 = new Array(Q.QueueList__nextPowerOf2(newElementCount + C.JSInt_methods._shrOtherPositive$1(newElementCount, 1)));\n      t1.fixed$length = Array;\n      newTable = H.setRuntimeTypeInfo(t1, H._instanceType(_this)._eval$1(\"JSArray<QueueList.E*>\"));\n      _this.set$_tail(_this._writeToList$1(newTable));\n      _this._table = newTable;\n      _this.set$_head(0);\n    },\n    $isEfficientLengthIterable: 1,\n    $isQueue: 1,\n    $isIterable: 1,\n    $isList: 1,\n    get$_head: function() {\n      return this._head;\n    },\n    get$_tail: function() {\n      return this._tail;\n    },\n    set$_head: function(val) {\n      return this._head = val;\n    },\n    set$_tail: function(val) {\n      return this._tail = val;\n    }\n  };\n  Q._CastQueueList.prototype = {\n    get$_head: function() {\n      return this._queue_list$_delegate.get$_head();\n    },\n    set$_head: function(value) {\n      this._queue_list$_delegate.set$_head(value);\n    },\n    get$_tail: function() {\n      return this._queue_list$_delegate.get$_tail();\n    },\n    set$_tail: function(value) {\n      this._queue_list$_delegate.set$_tail(value);\n    }\n  };\n  Q._QueueList_Object_ListMixin.prototype = {};\n  L.UnmodifiableSetView.prototype = {};\n  L.UnmodifiableSetMixin.prototype = {\n    add$1: function(_, value) {\n      return L.UnmodifiableSetMixin__throw();\n    },\n    addAll$1: function(_, elements) {\n      return L.UnmodifiableSetMixin__throw();\n    }\n  };\n  L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin.prototype = {};\n  B.defaultCompare_closure.prototype = {\n    call$2: function(value1, value2) {\n      return J.compareTo$1$ns(type$.legacy_Comparable_dynamic._as(value1), value2);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"int*(0*,0*)\");\n    }\n  };\n  M._DelegatingIterableBase.prototype = {\n    cast$1$0: function(_, $T) {\n      return J.cast$1$0$ax(this.get$_base(), $T._eval$1(\"0*\"));\n    },\n    contains$1: function(_, element) {\n      return J.contains$1$asx(this.get$_base(), element);\n    },\n    elementAt$1: function(_, index) {\n      return J.elementAt$1$ax(this.get$_base(), index);\n    },\n    get$first: function(_) {\n      return J.get$first$ax(this.get$_base());\n    },\n    get$isEmpty: function(_) {\n      return J.get$isEmpty$asx(this.get$_base());\n    },\n    get$isNotEmpty: function(_) {\n      return J.get$isNotEmpty$asx(this.get$_base());\n    },\n    get$iterator: function(_) {\n      return J.get$iterator$ax(this.get$_base());\n    },\n    join$1: function(_, separator) {\n      return J.join$1$ax(this.get$_base(), separator);\n    },\n    join$0: function($receiver) {\n      return this.join$1($receiver, \"\");\n    },\n    get$last: function(_) {\n      return J.get$last$ax(this.get$_base());\n    },\n    get$length: function(_) {\n      return J.get$length$asx(this.get$_base());\n    },\n    map$1$1: function(_, f, $T) {\n      return J.map$1$1$ax(this.get$_base(), f, $T._eval$1(\"0*\"));\n    },\n    get$single: function(_) {\n      return J.get$single$ax(this.get$_base());\n    },\n    skip$1: function(_, n) {\n      return J.skip$1$ax(this.get$_base(), n);\n    },\n    take$1: function(_, n) {\n      return J.take$1$ax(this.get$_base(), n);\n    },\n    toList$1$growable: function(_, growable) {\n      return J.toList$1$growable$ax(this.get$_base(), growable);\n    },\n    toList$0: function($receiver) {\n      return this.toList$1$growable($receiver, true);\n    },\n    toSet$0: function(_) {\n      return J.toSet$0$ax(this.get$_base());\n    },\n    where$1: function(_, test) {\n      return J.where$1$ax(this.get$_base(), test);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.get$_base());\n    },\n    $isIterable: 1\n  };\n  M.DelegatingIterable.prototype = {\n    get$_base: function() {\n      return this._base;\n    }\n  };\n  M.DelegatingSet.prototype = {\n    add$1: function(_, value) {\n      return this._base.add$1(0, value);\n    },\n    addAll$1: function(_, elements) {\n      this._base.addAll$1(0, elements);\n    },\n    cast$1$0: function(_, $T) {\n      var t1 = this._base;\n      return P.Set_castFrom(t1, t1.get$_newSimilarSet(), H._instanceType(t1)._precomputed1, $T._eval$1(\"0*\"));\n    },\n    toSet$0: function(_) {\n      return new M.DelegatingSet(this._base.toSet$0(0), H._instanceType(this)._eval$1(\"DelegatingSet<DelegatingSet.E*>\"));\n    },\n    $isEfficientLengthIterable: 1,\n    $isSet: 1\n  };\n  M.MapKeySet.prototype = {\n    get$_base: function() {\n      var t1 = this._baseMap;\n      return t1.get$keys(t1);\n    },\n    cast$1$0: function(_, $T) {\n      var _this = this,\n        t1 = $T._eval$1(\"MapKeySet<0*>*\");\n      if (t1._is(_this))\n        return t1._as(_this);\n      return P.Set_castFrom(_this, null, _this.$ti._eval$1(\"1*\"), $T._eval$1(\"0*\"));\n    },\n    contains$1: function(_, element) {\n      return this._baseMap.containsKey$1(element);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._baseMap;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._baseMap;\n      return t1.get$isNotEmpty(t1);\n    },\n    get$length: function(_) {\n      var t1 = this._baseMap;\n      return t1.get$length(t1);\n    },\n    toString$0: function(_) {\n      var t1 = this._baseMap;\n      return \"{\" + J.join$1$ax(t1.get$keys(t1), \", \") + \"}\";\n    },\n    $isEfficientLengthIterable: 1,\n    $isSet: 1\n  };\n  M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin.prototype = {};\n  V.BufferModule.prototype = {};\n  V.BufferConstants.prototype = {};\n  V.Buffer.prototype = {};\n  F.ConsoleModule.prototype = {};\n  F.Console.prototype = {};\n  F.EventEmitter.prototype = {};\n  D.FS.prototype = {};\n  D.FSConstants.prototype = {};\n  D.FSWatcher.prototype = {};\n  D.ReadStream.prototype = {};\n  D.ReadStreamOptions.prototype = {};\n  D.WriteStream.prototype = {};\n  D.WriteStreamOptions.prototype = {};\n  D.Stats.prototype = {};\n  E.Promise.prototype = {};\n  E.Date.prototype = {};\n  E.JsError.prototype = {};\n  E.Atomics.prototype = {};\n  Y.Modules.prototype = {};\n  Y.Module1.prototype = {};\n  Y.Net.prototype = {};\n  Y.Socket.prototype = {};\n  Y.NetAddress.prototype = {};\n  Y.NetServer.prototype = {};\n  X.NodeJsError.prototype = {};\n  X.JsAssertionError.prototype = {};\n  X.JsRangeError.prototype = {};\n  X.JsReferenceError.prototype = {};\n  X.JsSyntaxError.prototype = {};\n  X.JsTypeError.prototype = {};\n  X.JsSystemError.prototype = {};\n  X.Process.prototype = {};\n  X.CPUUsage.prototype = {};\n  X.Release.prototype = {};\n  D.StreamModule.prototype = {};\n  D.Readable.prototype = {};\n  D.Writable.prototype = {};\n  D.Duplex.prototype = {};\n  D.Transform.prototype = {};\n  D.WritableOptions.prototype = {};\n  D.ReadableOptions.prototype = {};\n  L.Immediate.prototype = {};\n  L.Timeout.prototype = {};\n  N.TTY.prototype = {};\n  N.TTYReadStream.prototype = {};\n  N.TTYWriteStream.prototype = {};\n  M.Util.prototype = {};\n  M.futureToPromise_closure.prototype = {\n    call$2: function(resolve, reject) {\n      this.future.then$1$2$onError(0, resolve, reject, type$.dynamic);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 263\n  };\n  M.Context.prototype = {\n    absolute$7: function(part1, part2, part3, part4, part5, part6, part7) {\n      var t1;\n      M._validateArgList(\"absolute\", H.setRuntimeTypeInfo([part1, part2, part3, part4, part5, part6, part7], type$.JSArray_legacy_String));\n      t1 = this.style;\n      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);\n      if (t1)\n        return part1;\n      t1 = this._context$_current;\n      return this.join$8(0, t1 == null ? D.current() : t1, part1, part2, part3, part4, part5, part6, part7);\n    },\n    absolute$1: function(part1) {\n      return this.absolute$7(part1, null, null, null, null, null, null);\n    },\n    dirname$1: function(path) {\n      var t1, t2,\n        parsed = X.ParsedPath_ParsedPath$parse(path, this.style);\n      parsed.removeTrailingSeparators$0();\n      t1 = parsed.parts;\n      t2 = t1.length;\n      if (t2 === 0) {\n        t1 = parsed.root;\n        return t1 == null ? \".\" : t1;\n      }\n      if (t2 === 1) {\n        t1 = parsed.root;\n        return t1 == null ? \".\" : t1;\n      }\n      C.JSArray_methods.removeLast$0(t1);\n      C.JSArray_methods.removeLast$0(parsed.separators);\n      parsed.removeTrailingSeparators$0();\n      return parsed.toString$0(0);\n    },\n    join$8: function(_, part1, part2, part3, part4, part5, part6, part7, part8) {\n      var parts = H.setRuntimeTypeInfo([part1, part2, part3, part4, part5, part6, part7, part8], type$.JSArray_legacy_String);\n      M._validateArgList(\"join\", parts);\n      return this.joinAll$1(new H.WhereIterable(parts, new M.Context_join_closure(), type$.WhereIterable_legacy_String));\n    },\n    join$2: function($receiver, part1, part2) {\n      return this.join$8($receiver, part1, part2, null, null, null, null, null, null);\n    },\n    joinAll$1: function(parts) {\n      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path;\n      for (t1 = parts.get$iterator(parts), t2 = new H.WhereIterator(t1, new M.Context_joinAll_closure()), t3 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = \"\"; t2.moveNext$0();) {\n        t5 = t1.get$current(t1);\n        if (t3.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {\n          parsed = X.ParsedPath_ParsedPath$parse(t5, t3);\n          path = t4.charCodeAt(0) == 0 ? t4 : t4;\n          t4 = C.JSString_methods.substring$2(path, 0, t3.rootLength$2$withDrive(path, true));\n          parsed.root = t4;\n          if (t3.needsSeparator$1(t4))\n            parsed.separators[0] = t3.get$separator();\n          t4 = parsed.toString$0(0);\n        } else if (t3.rootLength$1(t5) > 0) {\n          isAbsoluteAndNotRootRelative = !t3.isRootRelative$1(t5);\n          t4 = H.S(t5);\n        } else {\n          if (!(t5.length !== 0 && t3.containsSeparator$1(t5[0])))\n            if (needsSeparator)\n              t4 += t3.get$separator();\n          t4 += t5;\n        }\n        needsSeparator = t3.needsSeparator$1(t5);\n      }\n      return t4.charCodeAt(0) == 0 ? t4 : t4;\n    },\n    split$1: function(_, path) {\n      var parsed = X.ParsedPath_ParsedPath$parse(path, this.style),\n        t1 = parsed.parts,\n        t2 = H._arrayInstanceType(t1)._eval$1(\"WhereIterable<1>\");\n      t2 = P.List_List$from(new H.WhereIterable(t1, new M.Context_split_closure(), t2), true, t2._eval$1(\"Iterable.E\"));\n      parsed.parts = t2;\n      t1 = parsed.root;\n      if (t1 != null)\n        C.JSArray_methods.insert$2(t2, 0, t1);\n      return parsed.parts;\n    },\n    canonicalize$1: function(path) {\n      var t1, parsed;\n      path = this.absolute$1(path);\n      t1 = this.style;\n      if (t1 != $.$get$Style_windows() && !this._needsNormalization$1(path))\n        return path;\n      parsed = X.ParsedPath_ParsedPath$parse(path, t1);\n      parsed.normalize$1$canonicalize(true);\n      return parsed.toString$0(0);\n    },\n    normalize$1: function(path) {\n      var parsed;\n      if (!this._needsNormalization$1(path))\n        return path;\n      parsed = X.ParsedPath_ParsedPath$parse(path, this.style);\n      parsed.normalize$0();\n      return parsed.toString$0(0);\n    },\n    _needsNormalization$1: function(path) {\n      var t1, root, i, start, previous, t2, t3, previousPrevious, codeUnit, t4;\n      path.toString;\n      t1 = this.style;\n      root = t1.rootLength$1(path);\n      if (root !== 0) {\n        if (t1 === $.$get$Style_windows())\n          for (i = 0; i < root; ++i)\n            if (C.JSString_methods._codeUnitAt$1(path, i) === 47)\n              return true;\n        start = root;\n        previous = 47;\n      } else {\n        start = 0;\n        previous = null;\n      }\n      for (t2 = new H.CodeUnits(path)._string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {\n        codeUnit = C.JSString_methods.codeUnitAt$1(t2, i);\n        if (t1.isSeparator$1(codeUnit)) {\n          if (t1 === $.$get$Style_windows() && codeUnit === 47)\n            return true;\n          if (previous != null && t1.isSeparator$1(previous))\n            return true;\n          if (previous === 46)\n            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);\n          else\n            t4 = false;\n          if (t4)\n            return true;\n        }\n      }\n      if (previous == null)\n        return true;\n      if (t1.isSeparator$1(previous))\n        return true;\n      if (previous === 46)\n        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;\n      else\n        t1 = false;\n      if (t1)\n        return true;\n      return false;\n    },\n    relative$2$from: function(path, from) {\n      var fromParsed, pathParsed, t2, t3, _this = this,\n        _s26_ = 'Unable to find a path to \"',\n        t1 = from == null;\n      if (t1 && _this.style.rootLength$1(path) <= 0)\n        return _this.normalize$1(path);\n      if (t1) {\n        t1 = _this._context$_current;\n        from = t1 == null ? D.current() : t1;\n      } else\n        from = _this.absolute$1(from);\n      t1 = _this.style;\n      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)\n        return _this.normalize$1(path);\n      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))\n        path = _this.absolute$1(path);\n      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)\n        throw H.wrapException(X.PathException$(_s26_ + H.S(path) + '\" from \"' + H.S(from) + '\".'));\n      fromParsed = X.ParsedPath_ParsedPath$parse(from, t1);\n      fromParsed.normalize$0();\n      pathParsed = X.ParsedPath_ParsedPath$parse(path, t1);\n      pathParsed.normalize$0();\n      t2 = fromParsed.parts;\n      if (t2.length !== 0 && J.$eq$(t2[0], \".\"))\n        return pathParsed.toString$0(0);\n      t2 = fromParsed.root;\n      t3 = pathParsed.root;\n      if (t2 != t3)\n        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);\n      else\n        t2 = false;\n      if (t2)\n        return pathParsed.toString$0(0);\n      while (true) {\n        t2 = fromParsed.parts;\n        if (t2.length !== 0) {\n          t3 = pathParsed.parts;\n          t2 = t3.length !== 0 && t1.pathsEqual$2(t2[0], t3[0]);\n        } else\n          t2 = false;\n        if (!t2)\n          break;\n        C.JSArray_methods.removeAt$1(fromParsed.parts, 0);\n        C.JSArray_methods.removeAt$1(fromParsed.separators, 1);\n        C.JSArray_methods.removeAt$1(pathParsed.parts, 0);\n        C.JSArray_methods.removeAt$1(pathParsed.separators, 1);\n      }\n      t2 = fromParsed.parts;\n      if (t2.length !== 0 && J.$eq$(t2[0], \"..\"))\n        throw H.wrapException(X.PathException$(_s26_ + H.S(path) + '\" from \"' + H.S(from) + '\".'));\n      t2 = type$.legacy_String;\n      C.JSArray_methods.insertAll$2(pathParsed.parts, 0, P.List_List$filled(fromParsed.parts.length, \"..\", false, t2));\n      t3 = pathParsed.separators;\n      t3[0] = \"\";\n      C.JSArray_methods.insertAll$2(t3, 1, P.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));\n      t1 = pathParsed.parts;\n      t2 = t1.length;\n      if (t2 === 0)\n        return \".\";\n      if (t2 > 1 && J.$eq$(C.JSArray_methods.get$last(t1), \".\")) {\n        C.JSArray_methods.removeLast$0(pathParsed.parts);\n        t1 = pathParsed.separators;\n        C.JSArray_methods.removeLast$0(t1);\n        C.JSArray_methods.removeLast$0(t1);\n        C.JSArray_methods.add$1(t1, \"\");\n      }\n      pathParsed.root = \"\";\n      pathParsed.removeTrailingSeparators$0();\n      return pathParsed.toString$0(0);\n    },\n    relative$1: function(path) {\n      return this.relative$2$from(path, null);\n    },\n    _isWithinOrEquals$2: function($parent, child) {\n      var relative, t1, parentIsAbsolute, childIsAbsolute, childIsRootRelative, parentIsRootRelative, result, exception, _this = this;\n      $parent = $parent;\n      child = child;\n      t1 = _this.style;\n      parentIsAbsolute = t1.rootLength$1($parent) > 0;\n      childIsAbsolute = t1.rootLength$1(child) > 0;\n      if (parentIsAbsolute && !childIsAbsolute) {\n        child = _this.absolute$1(child);\n        if (t1.isRootRelative$1($parent))\n          $parent = _this.absolute$1($parent);\n      } else if (childIsAbsolute && !parentIsAbsolute) {\n        $parent = _this.absolute$1($parent);\n        if (t1.isRootRelative$1(child))\n          child = _this.absolute$1(child);\n      } else if (childIsAbsolute && parentIsAbsolute) {\n        childIsRootRelative = t1.isRootRelative$1(child);\n        parentIsRootRelative = t1.isRootRelative$1($parent);\n        if (childIsRootRelative && !parentIsRootRelative)\n          child = _this.absolute$1(child);\n        else if (parentIsRootRelative && !childIsRootRelative)\n          $parent = _this.absolute$1($parent);\n      }\n      result = _this._isWithinOrEqualsFast$2($parent, child);\n      if (result !== C._PathRelation_inconclusive)\n        return result;\n      relative = null;\n      try {\n        relative = _this.relative$2$from(child, $parent);\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof X.PathException)\n          return C._PathRelation_different;\n        else\n          throw exception;\n      }\n      if (t1.rootLength$1(relative) > 0)\n        return C._PathRelation_different;\n      if (J.$eq$(relative, \".\"))\n        return C._PathRelation_equal;\n      if (J.$eq$(relative, \"..\"))\n        return C._PathRelation_different;\n      return J.get$length$asx(relative) >= 3 && J.startsWith$1$s(relative, \"..\") && t1.isSeparator$1(J.codeUnitAt$1$s(relative, 2)) ? C._PathRelation_different : C._PathRelation_within;\n    },\n    _isWithinOrEqualsFast$2: function($parent, child) {\n      var t1, parentRootLength, childRootLength, t2, t3, i, childIndex, parentIndex, lastCodeUnit, lastParentSeparator, parentCodeUnit, childCodeUnit, parentIndex0, t4, direction, _this = this;\n      if ($parent === \".\")\n        $parent = \"\";\n      t1 = _this.style;\n      parentRootLength = t1.rootLength$1($parent);\n      childRootLength = t1.rootLength$1(child);\n      if (parentRootLength !== childRootLength)\n        return C._PathRelation_different;\n      for (t2 = J.getInterceptor$s($parent), t3 = J.getInterceptor$s(child), i = 0; i < parentRootLength; ++i)\n        if (!t1.codeUnitsEqual$2(t2._codeUnitAt$1($parent, i), t3._codeUnitAt$1(child, i)))\n          return C._PathRelation_different;\n      t2 = $parent.length;\n      childIndex = childRootLength;\n      parentIndex = parentRootLength;\n      lastCodeUnit = 47;\n      lastParentSeparator = null;\n      while (true) {\n        if (!(parentIndex < t2 && childIndex < child.length))\n          break;\n        c$0: {\n          parentCodeUnit = C.JSString_methods.codeUnitAt$1($parent, parentIndex);\n          childCodeUnit = t3.codeUnitAt$1(child, childIndex);\n          if (t1.codeUnitsEqual$2(parentCodeUnit, childCodeUnit)) {\n            if (t1.isSeparator$1(parentCodeUnit))\n              lastParentSeparator = parentIndex;\n            ++parentIndex;\n            ++childIndex;\n            lastCodeUnit = parentCodeUnit;\n            break c$0;\n          }\n          if (t1.isSeparator$1(parentCodeUnit) && t1.isSeparator$1(lastCodeUnit)) {\n            parentIndex0 = parentIndex + 1;\n            lastParentSeparator = parentIndex;\n            parentIndex = parentIndex0;\n            break c$0;\n          } else if (t1.isSeparator$1(childCodeUnit) && t1.isSeparator$1(lastCodeUnit)) {\n            ++childIndex;\n            break c$0;\n          }\n          if (parentCodeUnit === 46 && t1.isSeparator$1(lastCodeUnit)) {\n            ++parentIndex;\n            if (parentIndex === t2)\n              break;\n            parentCodeUnit = C.JSString_methods.codeUnitAt$1($parent, parentIndex);\n            if (t1.isSeparator$1(parentCodeUnit)) {\n              parentIndex0 = parentIndex + 1;\n              lastParentSeparator = parentIndex;\n              parentIndex = parentIndex0;\n              break c$0;\n            }\n            if (parentCodeUnit === 46) {\n              ++parentIndex;\n              if (parentIndex === t2 || t1.isSeparator$1(C.JSString_methods.codeUnitAt$1($parent, parentIndex)))\n                return C._PathRelation_inconclusive;\n            }\n          }\n          if (childCodeUnit === 46 && t1.isSeparator$1(lastCodeUnit)) {\n            ++childIndex;\n            t4 = child.length;\n            if (childIndex === t4)\n              break;\n            childCodeUnit = C.JSString_methods.codeUnitAt$1(child, childIndex);\n            if (t1.isSeparator$1(childCodeUnit)) {\n              ++childIndex;\n              break c$0;\n            }\n            if (childCodeUnit === 46) {\n              ++childIndex;\n              if (childIndex === t4 || t1.isSeparator$1(C.JSString_methods.codeUnitAt$1(child, childIndex)))\n                return C._PathRelation_inconclusive;\n            }\n          }\n          if (_this._pathDirection$2(child, childIndex) !== C._PathDirection_988)\n            return C._PathRelation_inconclusive;\n          if (_this._pathDirection$2($parent, parentIndex) !== C._PathDirection_988)\n            return C._PathRelation_inconclusive;\n          return C._PathRelation_different;\n        }\n      }\n      if (childIndex === child.length) {\n        if (parentIndex === t2 || t1.isSeparator$1(C.JSString_methods.codeUnitAt$1($parent, parentIndex)))\n          lastParentSeparator = parentIndex;\n        else if (lastParentSeparator == null)\n          lastParentSeparator = Math.max(0, parentRootLength - 1);\n        direction = _this._pathDirection$2($parent, lastParentSeparator);\n        if (direction === C._PathDirection_8Gl)\n          return C._PathRelation_equal;\n        return direction === C._PathDirection_ZGD ? C._PathRelation_inconclusive : C._PathRelation_different;\n      }\n      direction = _this._pathDirection$2(child, childIndex);\n      if (direction === C._PathDirection_8Gl)\n        return C._PathRelation_equal;\n      if (direction === C._PathDirection_ZGD)\n        return C._PathRelation_inconclusive;\n      return t1.isSeparator$1(C.JSString_methods.codeUnitAt$1(child, childIndex)) || t1.isSeparator$1(lastCodeUnit) ? C._PathRelation_within : C._PathRelation_different;\n    },\n    _pathDirection$2: function(path, index) {\n      var t1, t2, i, depth, reachedRoot, i0, t3;\n      for (t1 = path.length, t2 = this.style, i = index, depth = 0, reachedRoot = false; i < t1;) {\n        while (true) {\n          if (!(i < t1 && t2.isSeparator$1(C.JSString_methods.codeUnitAt$1(path, i))))\n            break;\n          ++i;\n        }\n        if (i === t1)\n          break;\n        i0 = i;\n        while (true) {\n          if (!(i0 < t1 && !t2.isSeparator$1(C.JSString_methods.codeUnitAt$1(path, i0))))\n            break;\n          ++i0;\n        }\n        t3 = i0 - i;\n        if (!(t3 === 1 && C.JSString_methods.codeUnitAt$1(path, i) === 46))\n          if (t3 === 2 && C.JSString_methods.codeUnitAt$1(path, i) === 46 && C.JSString_methods.codeUnitAt$1(path, i + 1) === 46) {\n            --depth;\n            if (depth < 0)\n              break;\n            if (depth === 0)\n              reachedRoot = true;\n          } else\n            ++depth;\n        if (i0 === t1)\n          break;\n        i = i0 + 1;\n      }\n      if (depth < 0)\n        return C._PathDirection_ZGD;\n      if (depth === 0)\n        return C._PathDirection_8Gl;\n      if (reachedRoot)\n        return C._PathDirection_FIw;\n      return C._PathDirection_988;\n    },\n    hash$1: function(path) {\n      var result, parsed, _this = this;\n      path = _this.absolute$1(path);\n      result = _this._hashFast$1(path);\n      if (result != null)\n        return result;\n      parsed = X.ParsedPath_ParsedPath$parse(path, _this.style);\n      parsed.normalize$0();\n      return _this._hashFast$1(parsed.toString$0(0));\n    },\n    _hashFast$1: function(path) {\n      var t1, t2, hash, beginning, wasSeparator, i, codeUnit, t3, next;\n      for (t1 = path.length, t2 = this.style, hash = 4603, beginning = true, wasSeparator = true, i = 0; i < t1; ++i) {\n        codeUnit = t2.canonicalizeCodeUnit$1(C.JSString_methods._codeUnitAt$1(path, i));\n        if (t2.isSeparator$1(codeUnit)) {\n          wasSeparator = true;\n          continue;\n        }\n        if (codeUnit === 46 && wasSeparator) {\n          t3 = i + 1;\n          if (t3 === t1)\n            break;\n          next = C.JSString_methods._codeUnitAt$1(path, t3);\n          if (t2.isSeparator$1(next))\n            continue;\n          if (!beginning)\n            if (next === 46) {\n              t3 = i + 2;\n              t3 = t3 === t1 || t2.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, t3));\n            } else\n              t3 = false;\n          else\n            t3 = false;\n          if (t3)\n            return null;\n        }\n        hash = ((hash & 67108863) * 33 ^ codeUnit) >>> 0;\n        beginning = false;\n        wasSeparator = false;\n      }\n      return hash;\n    },\n    withoutExtension$1: function(path) {\n      var i, t1,\n        parsed = X.ParsedPath_ParsedPath$parse(path, this.style);\n      for (i = parsed.parts.length - 1; i >= 0; --i) {\n        t1 = parsed.parts[i];\n        t1.toString;\n        if (J.get$length$asx(t1) !== 0) {\n          parsed.parts[i] = parsed._splitExtension$0()[0];\n          break;\n        }\n      }\n      return parsed.toString$0(0);\n    },\n    toUri$1: function(path) {\n      var t2,\n        t1 = this.style;\n      if (t1.rootLength$1(path) <= 0)\n        return t1.relativePathToUri$1(path);\n      else {\n        t2 = this._context$_current;\n        return t1.absolutePathToUri$1(this.join$2(0, t2 == null ? D.current() : t2, path));\n      }\n    },\n    prettyUri$1: function(uri) {\n      var path, rel, _this = this,\n        typedUri = M._parseUri(uri);\n      if (typedUri.get$scheme() === \"file\" && _this.style == $.$get$Style_url())\n        return typedUri.toString$0(0);\n      else if (typedUri.get$scheme() !== \"file\" && typedUri.get$scheme() !== \"\" && _this.style != $.$get$Style_url())\n        return typedUri.toString$0(0);\n      path = _this.normalize$1(_this.style.pathFromUri$1(M._parseUri(typedUri)));\n      rel = _this.relative$1(path);\n      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;\n    }\n  };\n  M.Context_join_closure.prototype = {\n    call$1: function(part) {\n      return part != null;\n    },\n    $signature: 5\n  };\n  M.Context_joinAll_closure.prototype = {\n    call$1: function(part) {\n      return part !== \"\";\n    },\n    $signature: 5\n  };\n  M.Context_split_closure.prototype = {\n    call$1: function(part) {\n      return part.length !== 0;\n    },\n    $signature: 5\n  };\n  M._validateArgList_closure.prototype = {\n    call$1: function(arg) {\n      return arg == null ? \"null\" : '\"' + arg + '\"';\n    },\n    $signature: 8\n  };\n  M._PathDirection.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  M._PathRelation.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  B.InternalStyle.prototype = {\n    getRoot$1: function(path) {\n      var $length = this.rootLength$1(path);\n      if ($length > 0)\n        return J.substring$2$s(path, 0, $length);\n      return this.isRootRelative$1(path) ? path[0] : null;\n    },\n    relativePathToUri$1: function(path) {\n      var segments = M.Context_Context(this).split$1(0, path);\n      if (this.isSeparator$1(J.codeUnitAt$1$s(path, path.length - 1)))\n        C.JSArray_methods.add$1(segments, \"\");\n      return P._Uri__Uri(null, null, segments, null);\n    },\n    codeUnitsEqual$2: function(codeUnit1, codeUnit2) {\n      return codeUnit1 === codeUnit2;\n    },\n    pathsEqual$2: function(path1, path2) {\n      return path1 == path2;\n    },\n    canonicalizeCodeUnit$1: function(codeUnit) {\n      return codeUnit;\n    },\n    canonicalizePart$1: function(part) {\n      return part;\n    }\n  };\n  X.ParsedPath.prototype = {\n    get$basename: function() {\n      var _this = this,\n        t1 = type$.legacy_String,\n        copy = new X.ParsedPath(_this.style, _this.root, _this.isRootRelative, P.List_List$from(_this.parts, true, t1), P.List_List$from(_this.separators, true, t1));\n      copy.removeTrailingSeparators$0();\n      t1 = copy.parts;\n      if (t1.length === 0) {\n        t1 = _this.root;\n        return t1 == null ? \"\" : t1;\n      }\n      return C.JSArray_methods.get$last(t1);\n    },\n    get$hasTrailingSeparator: function() {\n      var t1 = this.parts;\n      if (t1.length !== 0)\n        t1 = J.$eq$(C.JSArray_methods.get$last(t1), \"\") || !J.$eq$(C.JSArray_methods.get$last(this.separators), \"\");\n      else\n        t1 = false;\n      return t1;\n    },\n    removeTrailingSeparators$0: function() {\n      var t1, t2, _this = this;\n      while (true) {\n        t1 = _this.parts;\n        if (!(t1.length !== 0 && J.$eq$(C.JSArray_methods.get$last(t1), \"\")))\n          break;\n        C.JSArray_methods.removeLast$0(_this.parts);\n        C.JSArray_methods.removeLast$0(_this.separators);\n      }\n      t1 = _this.separators;\n      t2 = t1.length;\n      if (t2 !== 0)\n        t1[t2 - 1] = \"\";\n    },\n    normalize$1$canonicalize: function(canonicalize) {\n      var t1, t2, t3, leadingDoubles, _i, part, t4, newSeparators, _this = this,\n        newParts = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      for (t1 = _this.parts, t2 = t1.length, t3 = _this.style, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        part = t1[_i];\n        t4 = J.getInterceptor$(part);\n        if (!(t4.$eq(part, \".\") || t4.$eq(part, \"\")))\n          if (t4.$eq(part, \"..\"))\n            if (newParts.length !== 0)\n              newParts.pop();\n            else\n              ++leadingDoubles;\n          else\n            newParts.push(canonicalize ? t3.canonicalizePart$1(part) : part);\n      }\n      if (_this.root == null)\n        C.JSArray_methods.insertAll$2(newParts, 0, P.List_List$filled(leadingDoubles, \"..\", false, type$.legacy_String));\n      if (newParts.length === 0 && _this.root == null)\n        newParts.push(\".\");\n      newSeparators = P.List_List$generate(newParts.length, new X.ParsedPath_normalize_closure(_this), true, type$.legacy_String);\n      t1 = _this.root;\n      C.JSArray_methods.insert$2(newSeparators, 0, t1 != null && newParts.length !== 0 && t3.needsSeparator$1(t1) ? t3.get$separator() : \"\");\n      _this.parts = newParts;\n      _this.separators = newSeparators;\n      t1 = _this.root;\n      if (t1 != null && t3 === $.$get$Style_windows()) {\n        if (canonicalize)\n          t1 = _this.root = t1.toLowerCase();\n        t1.toString;\n        _this.root = H.stringReplaceAllUnchecked(t1, \"/\", \"\\\\\");\n      }\n      _this.removeTrailingSeparators$0();\n    },\n    normalize$0: function() {\n      return this.normalize$1$canonicalize(false);\n    },\n    toString$0: function(_) {\n      var i, _this = this,\n        t1 = _this.root;\n      t1 = t1 != null ? t1 : \"\";\n      for (i = 0; i < _this.parts.length; ++i)\n        t1 = t1 + H.S(_this.separators[i]) + H.S(_this.parts[i]);\n      t1 += H.S(C.JSArray_methods.get$last(_this.separators));\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _kthLastIndexOf$3: function(path, character, k) {\n      var index, count, leftMostIndexedCharacter;\n      for (index = path.length - 1, count = 0, leftMostIndexedCharacter = 0; index >= 0; --index)\n        if (path[index] === character) {\n          ++count;\n          if (count === k)\n            return index;\n          leftMostIndexedCharacter = index;\n        }\n      return leftMostIndexedCharacter;\n    },\n    _splitExtension$1: function(level) {\n      var file, lastDot;\n      if (level <= 0)\n        throw H.wrapException(P.RangeError$value(level, \"level\", \"level's value must be greater than 0\"));\n      file = C.JSArray_methods.lastWhere$2$orElse(this.parts, new X.ParsedPath__splitExtension_closure(), new X.ParsedPath__splitExtension_closure0());\n      if (file == null)\n        return H.setRuntimeTypeInfo([\"\", \"\"], type$.JSArray_legacy_String);\n      if (file === \"..\")\n        return H.setRuntimeTypeInfo([\"..\", \"\"], type$.JSArray_legacy_String);\n      lastDot = this._kthLastIndexOf$3(file, \".\", level);\n      if (lastDot <= 0)\n        return H.setRuntimeTypeInfo([file, \"\"], type$.JSArray_legacy_String);\n      return H.setRuntimeTypeInfo([C.JSString_methods.substring$2(file, 0, lastDot), C.JSString_methods.substring$1(file, lastDot)], type$.JSArray_legacy_String);\n    },\n    _splitExtension$0: function() {\n      return this._splitExtension$1(1);\n    }\n  };\n  X.ParsedPath_normalize_closure.prototype = {\n    call$1: function(_) {\n      return this.$this.style.get$separator();\n    },\n    $signature: 94\n  };\n  X.ParsedPath__splitExtension_closure.prototype = {\n    call$1: function(p) {\n      return p !== \"\";\n    },\n    $signature: 5\n  };\n  X.ParsedPath__splitExtension_closure0.prototype = {\n    call$0: function() {\n      return null;\n    },\n    $signature: 0\n  };\n  X.PathException.prototype = {\n    toString$0: function(_) {\n      return \"PathException: \" + this.message;\n    },\n    $isException: 1,\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  K.PathMap.prototype = {};\n  K.PathMap__create_closure.prototype = {\n    call$2: function(path1, path2) {\n      if (path1 == null)\n        return path2 == null;\n      if (path2 == null)\n        return false;\n      return this._box_0.context._isWithinOrEquals$2(path1, path2) === C._PathRelation_equal;\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 274\n  };\n  K.PathMap__create_closure0.prototype = {\n    call$1: function(path) {\n      return path == null ? 0 : this._box_0.context.hash$1(path);\n    },\n    $signature: 277\n  };\n  K.PathMap__create_closure1.prototype = {\n    call$1: function(path) {\n      return typeof path == \"string\" || path == null;\n    },\n    $signature: 195\n  };\n  O.Style.prototype = {\n    toString$0: function(_) {\n      return this.get$name(this);\n    }\n  };\n  E.PosixStyle.prototype = {\n    containsSeparator$1: function(path) {\n      return C.JSString_methods.contains$1(path, \"/\");\n    },\n    isSeparator$1: function(codeUnit) {\n      return codeUnit === 47;\n    },\n    needsSeparator$1: function(path) {\n      var t1 = path.length;\n      return t1 !== 0 && C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47;\n    },\n    rootLength$2$withDrive: function(path, withDrive) {\n      if (path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47)\n        return 1;\n      return 0;\n    },\n    rootLength$1: function(path) {\n      return this.rootLength$2$withDrive(path, false);\n    },\n    isRootRelative$1: function(path) {\n      return false;\n    },\n    pathFromUri$1: function(uri) {\n      var t1;\n      if (uri.get$scheme() === \"\" || uri.get$scheme() === \"file\") {\n        t1 = uri.get$path(uri);\n        return P._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);\n      }\n      throw H.wrapException(P.ArgumentError$(\"Uri \" + uri.toString$0(0) + \" must have scheme 'file:'.\"));\n    },\n    absolutePathToUri$1: function(path) {\n      var parsed = X.ParsedPath_ParsedPath$parse(path, this),\n        t1 = parsed.parts;\n      if (t1.length === 0)\n        C.JSArray_methods.addAll$1(t1, H.setRuntimeTypeInfo([\"\", \"\"], type$.JSArray_legacy_String));\n      else if (parsed.get$hasTrailingSeparator())\n        C.JSArray_methods.add$1(parsed.parts, \"\");\n      return P._Uri__Uri(null, null, parsed.parts, \"file\");\n    },\n    get$name: function() {\n      return \"posix\";\n    },\n    get$separator: function() {\n      return \"/\";\n    }\n  };\n  F.UrlStyle.prototype = {\n    containsSeparator$1: function(path) {\n      return C.JSString_methods.contains$1(path, \"/\");\n    },\n    isSeparator$1: function(codeUnit) {\n      return codeUnit === 47;\n    },\n    needsSeparator$1: function(path) {\n      var t1 = path.length;\n      if (t1 === 0)\n        return false;\n      if (C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47)\n        return true;\n      return C.JSString_methods.endsWith$1(path, \"://\") && this.rootLength$1(path) === t1;\n    },\n    rootLength$2$withDrive: function(path, withDrive) {\n      var i, codeUnit, index, t2,\n        t1 = path.length;\n      if (t1 === 0)\n        return 0;\n      if (C.JSString_methods._codeUnitAt$1(path, 0) === 47)\n        return 1;\n      for (i = 0; i < t1; ++i) {\n        codeUnit = C.JSString_methods._codeUnitAt$1(path, i);\n        if (codeUnit === 47)\n          return 0;\n        if (codeUnit === 58) {\n          if (i === 0)\n            return 0;\n          index = C.JSString_methods.indexOf$2(path, \"/\", C.JSString_methods.startsWith$2(path, \"//\", i + 1) ? i + 3 : i);\n          if (index <= 0)\n            return t1;\n          if (!withDrive || t1 < index + 3)\n            return index;\n          if (!C.JSString_methods.startsWith$1(path, \"file://\"))\n            return index;\n          if (!B.isDriveLetter(path, index + 1))\n            return index;\n          t2 = index + 3;\n          return t1 === t2 ? t2 : index + 4;\n        }\n      }\n      return 0;\n    },\n    rootLength$1: function(path) {\n      return this.rootLength$2$withDrive(path, false);\n    },\n    isRootRelative$1: function(path) {\n      return path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47;\n    },\n    pathFromUri$1: function(uri) {\n      return uri.toString$0(0);\n    },\n    relativePathToUri$1: function(path) {\n      return P.Uri_parse(path);\n    },\n    absolutePathToUri$1: function(path) {\n      return P.Uri_parse(path);\n    },\n    get$name: function() {\n      return \"url\";\n    },\n    get$separator: function() {\n      return \"/\";\n    }\n  };\n  L.WindowsStyle.prototype = {\n    containsSeparator$1: function(path) {\n      return C.JSString_methods.contains$1(path, \"/\");\n    },\n    isSeparator$1: function(codeUnit) {\n      return codeUnit === 47 || codeUnit === 92;\n    },\n    needsSeparator$1: function(path) {\n      var t1 = path.length;\n      if (t1 === 0)\n        return false;\n      t1 = C.JSString_methods.codeUnitAt$1(path, t1 - 1);\n      return !(t1 === 47 || t1 === 92);\n    },\n    rootLength$2$withDrive: function(path, withDrive) {\n      var t2, index,\n        t1 = path.length;\n      if (t1 === 0)\n        return 0;\n      t2 = C.JSString_methods._codeUnitAt$1(path, 0);\n      if (t2 === 47)\n        return 1;\n      if (t2 === 92) {\n        if (t1 < 2 || C.JSString_methods._codeUnitAt$1(path, 1) !== 92)\n          return 1;\n        index = C.JSString_methods.indexOf$2(path, \"\\\\\", 2);\n        if (index > 0) {\n          index = C.JSString_methods.indexOf$2(path, \"\\\\\", index + 1);\n          if (index > 0)\n            return index;\n        }\n        return t1;\n      }\n      if (t1 < 3)\n        return 0;\n      if (!B.isAlphabetic(t2))\n        return 0;\n      if (C.JSString_methods._codeUnitAt$1(path, 1) !== 58)\n        return 0;\n      t1 = C.JSString_methods._codeUnitAt$1(path, 2);\n      if (!(t1 === 47 || t1 === 92))\n        return 0;\n      return 3;\n    },\n    rootLength$1: function(path) {\n      return this.rootLength$2$withDrive(path, false);\n    },\n    isRootRelative$1: function(path) {\n      return this.rootLength$1(path) === 1;\n    },\n    pathFromUri$1: function(uri) {\n      var path, t1;\n      if (uri.get$scheme() !== \"\" && uri.get$scheme() !== \"file\")\n        throw H.wrapException(P.ArgumentError$(\"Uri \" + uri.toString$0(0) + \" must have scheme 'file:'.\"));\n      path = uri.get$path(uri);\n      if (uri.get$host() === \"\") {\n        if (path.length >= 3 && C.JSString_methods.startsWith$1(path, \"/\") && B.isDriveLetter(path, 1))\n          path = C.JSString_methods.replaceFirst$2(path, \"/\", \"\");\n      } else\n        path = \"\\\\\\\\\" + uri.get$host() + path;\n      t1 = H.stringReplaceAllUnchecked(path, \"/\", \"\\\\\");\n      return P._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);\n    },\n    absolutePathToUri$1: function(path) {\n      var rootParts, t2,\n        parsed = X.ParsedPath_ParsedPath$parse(path, this),\n        t1 = parsed.root;\n      if (J.startsWith$1$s(t1, \"\\\\\\\\\")) {\n        rootParts = new H.WhereIterable(H.setRuntimeTypeInfo(t1.split(\"\\\\\"), type$.JSArray_String), new L.WindowsStyle_absolutePathToUri_closure(), type$.WhereIterable_String);\n        C.JSArray_methods.insert$2(parsed.parts, 0, rootParts.get$last(rootParts));\n        if (parsed.get$hasTrailingSeparator())\n          C.JSArray_methods.add$1(parsed.parts, \"\");\n        return P._Uri__Uri(rootParts.get$first(rootParts), null, parsed.parts, \"file\");\n      } else {\n        if (parsed.parts.length === 0 || parsed.get$hasTrailingSeparator())\n          C.JSArray_methods.add$1(parsed.parts, \"\");\n        t1 = parsed.parts;\n        t2 = parsed.root;\n        t2.toString;\n        t2 = H.stringReplaceAllUnchecked(t2, \"/\", \"\");\n        C.JSArray_methods.insert$2(t1, 0, H.stringReplaceAllUnchecked(t2, \"\\\\\", \"\"));\n        return P._Uri__Uri(null, null, parsed.parts, \"file\");\n      }\n    },\n    codeUnitsEqual$2: function(codeUnit1, codeUnit2) {\n      var upperCase1;\n      if (codeUnit1 === codeUnit2)\n        return true;\n      if (codeUnit1 === 47)\n        return codeUnit2 === 92;\n      if (codeUnit1 === 92)\n        return codeUnit2 === 47;\n      if ((codeUnit1 ^ codeUnit2) !== 32)\n        return false;\n      upperCase1 = codeUnit1 | 32;\n      return upperCase1 >= 97 && upperCase1 <= 122;\n    },\n    pathsEqual$2: function(path1, path2) {\n      var t1, t2, i;\n      if (path1 == path2)\n        return true;\n      t1 = path1.length;\n      if (t1 !== path2.length)\n        return false;\n      for (t2 = J.getInterceptor$s(path2), i = 0; i < t1; ++i)\n        if (!this.codeUnitsEqual$2(C.JSString_methods._codeUnitAt$1(path1, i), t2._codeUnitAt$1(path2, i)))\n          return false;\n      return true;\n    },\n    canonicalizeCodeUnit$1: function(codeUnit) {\n      if (codeUnit === 47)\n        return 92;\n      if (codeUnit < 65)\n        return codeUnit;\n      if (codeUnit > 90)\n        return codeUnit;\n      return codeUnit | 32;\n    },\n    canonicalizePart$1: function(part) {\n      return part.toLowerCase();\n    },\n    get$name: function() {\n      return \"windows\";\n    },\n    get$separator: function() {\n      return \"\\\\\";\n    }\n  };\n  L.WindowsStyle_absolutePathToUri_closure.prototype = {\n    call$1: function(part) {\n      return part !== \"\";\n    },\n    $signature: 5\n  };\n  F.CssMediaQuery.prototype = {\n    merge$1: function(other) {\n      var _i, t8, negativeFeatures, features, type, modifier, fewerFeatures, fewerFeatures0, moreFeatures, _this = this, _null = null, _s3_ = \"all\",\n        t1 = _this.modifier,\n        ourModifier = t1 == null ? _null : t1.toLowerCase(),\n        t2 = _this.type,\n        t3 = t2 == null,\n        ourType = t3 ? _null : t2.toLowerCase(),\n        t4 = other.modifier,\n        theirModifier = t4 == null ? _null : t4.toLowerCase(),\n        t5 = other.type,\n        t6 = t5 == null,\n        theirType = t6 ? _null : t5.toLowerCase(),\n        t7 = ourType == null;\n      if (t7 && theirType == null) {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n        for (t2 = _this.features, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t1.push(t2[_i]);\n        for (t2 = other.features, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t1.push(t2[_i]);\n        return new F.MediaQuerySuccessfulMergeResult(new F.CssMediaQuery(_null, _null, P.List_List$unmodifiable(t1, type$.legacy_String)));\n      }\n      t8 = ourModifier === \"not\";\n      if (t8 !== (theirModifier === \"not\")) {\n        if (ourType == theirType) {\n          negativeFeatures = t8 ? _this.features : other.features;\n          if (C.JSArray_methods.every$1(negativeFeatures, C.JSArray_methods.get$contains(t8 ? other.features : _this.features)))\n            return C._SingletonCssMediaQueryMergeResult_empty;\n          else\n            return C._SingletonCssMediaQueryMergeResult_unrepresentable;\n        } else if (t3 || B.equalsIgnoreCase(t2, _s3_) || t6 || B.equalsIgnoreCase(t5, _s3_))\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable;\n        if (t8) {\n          features = other.features;\n          type = theirType;\n          modifier = theirModifier;\n        } else {\n          features = _this.features;\n          type = ourType;\n          modifier = ourModifier;\n        }\n      } else if (t8) {\n        if (ourType != theirType)\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable;\n        fewerFeatures = _this.features;\n        fewerFeatures0 = other.features;\n        t3 = fewerFeatures.length > fewerFeatures0.length;\n        moreFeatures = t3 ? fewerFeatures : fewerFeatures0;\n        if (t3)\n          fewerFeatures = fewerFeatures0;\n        if (!C.JSArray_methods.every$1(fewerFeatures, C.JSArray_methods.get$contains(moreFeatures)))\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable;\n        features = moreFeatures;\n        type = ourType;\n        modifier = ourModifier;\n      } else if (t3 || B.equalsIgnoreCase(t2, _s3_)) {\n        type = (t6 || B.equalsIgnoreCase(t5, _s3_)) && t7 ? _null : theirType;\n        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n        for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n          t3.push(t6[_i]);\n        for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n          t3.push(t6[_i]);\n        features = t3;\n        modifier = theirModifier;\n      } else {\n        if (t6 || B.equalsIgnoreCase(t5, _s3_)) {\n          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n          for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n            t3.push(t6[_i]);\n          for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n            t3.push(t6[_i]);\n          features = t3;\n          modifier = ourModifier;\n        } else {\n          if (ourType != theirType)\n            return C._SingletonCssMediaQueryMergeResult_empty;\n          else {\n            modifier = ourModifier == null ? theirModifier : ourModifier;\n            t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n            for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n              t3.push(t6[_i]);\n            for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n              t3.push(t6[_i]);\n          }\n          features = t3;\n        }\n        type = ourType;\n      }\n      t2 = type == ourType ? t2 : t5;\n      t1 = modifier == ourModifier ? t1 : t4;\n      t3 = P.List_List$unmodifiable(features, type$.legacy_String);\n      return new F.MediaQuerySuccessfulMergeResult(new F.CssMediaQuery(t1, t2, t3));\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.CssMediaQuery && other.modifier == this.modifier && other.type == this.type && C.C_ListEquality.equals$2(0, other.features, this.features);\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.modifier) ^ J.get$hashCode$(this.type) ^ C.C_ListEquality.hash$1(this.features);\n    },\n    toString$0: function(_) {\n      var t2, _this = this,\n        t1 = _this.modifier;\n      t1 = t1 != null ? t1 + \" \" : \"\";\n      t2 = _this.type;\n      if (t2 != null) {\n        t1 += t2;\n        if (_this.features.length !== 0)\n          t1 += \" and \";\n      }\n      t1 += C.JSArray_methods.join$1(_this.features, \" and \");\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  F._SingletonCssMediaQueryMergeResult.prototype = {\n    toString$0: function(_) {\n      return this._media_query$_name;\n    }\n  };\n  F.MediaQuerySuccessfulMergeResult.prototype = {};\n  U.ModifiableCssAtRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssAtRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      var _this = this;\n      return U.ModifiableCssAtRule$(_this.name, _this.span, _this.isChildless, _this.value);\n    },\n    addChild$1: function(child) {\n      this.super$ModifiableCssParentNode$addChild(child);\n    },\n    $isCssAtRule: 1,\n    get$isChildless: function() {\n      return this.isChildless;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  R.ModifiableCssComment.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $isCssComment: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.ModifiableCssDeclaration.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return H.S(this.name) + \": \" + this.value.toString$0(0) + \";\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.ModifiableCssImport.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssImport$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $isCssImport: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.ModifiableCssKeyframeBlock.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssKeyframeBlock$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return U.ModifiableCssKeyframeBlock$(this.selector, this.span);\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  G.ModifiableCssMediaRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssMediaRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return G.ModifiableCssMediaRule$(this.queries, this.span);\n    },\n    $isCssMediaRule: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ModifiableCssNode.prototype = {\n    get$hasFollowingSibling: function() {\n      var siblings, i, t2,\n        t1 = this._parent;\n      if (t1 == null)\n        return false;\n      siblings = t1.children;\n      for (i = this._indexInParent + 1, t1 = siblings._collection$_source, t2 = J.getInterceptor$asx(t1); i < t2.get$length(t1); ++i)\n        if (!this._node0$_isInvisible$1(t2.elementAt$1(t1, i)))\n          return true;\n      return false;\n    },\n    _node0$_isInvisible$1: function(node) {\n      if (type$.legacy_CssParentNode._is(node)) {\n        if (type$.legacy_CssAtRule._is(node))\n          return false;\n        if (type$.legacy_CssStyleRule._is(node) && node.selector.value.get$isInvisible())\n          return true;\n        return J.every$1$ax(node.get$children(node), this.get$_node0$_isInvisible());\n      } else\n        return false;\n    },\n    get$isGroupEnd: function() {\n      return this.isGroupEnd;\n    }\n  };\n  B.ModifiableCssParentNode.prototype = {\n    get$isChildless: function() {\n      return false;\n    },\n    addChild$1: function(child) {\n      var t1;\n      child._parent = this;\n      t1 = this._children;\n      child._indexInParent = t1.length;\n      t1.push(child);\n    },\n    $isCssParentNode: 1,\n    get$children: function(receiver) {\n      return this.children;\n    }\n  };\n  X.ModifiableCssStyleRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStyleRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return X.ModifiableCssStyleRule$(this.selector, this.span, this.originalSelector);\n    },\n    $isCssStyleRule: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.ModifiableCssStylesheet.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return V.ModifiableCssStylesheet$(this.span);\n    },\n    $isCssStylesheet: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ModifiableCssSupportsRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssSupportsRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return B.ModifiableCssSupportsRule$(this.condition, this.span);\n    },\n    $isCssSupportsRule: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.ModifiableCssValue.prototype = {\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isCssValue: 1,\n    $isAstNode: 1,\n    get$value: function(receiver) {\n      return this.value;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.CssNode.prototype = {\n    toString$0: function(_) {\n      return N.serialize(this, true, null, true, null, false, null, true).css;\n    }\n  };\n  B.CssParentNode.prototype = {};\n  V.CssStylesheet.prototype = {\n    get$isGroupEnd: function() {\n      return false;\n    },\n    get$isChildless: function() {\n      return false;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    get$children: function(receiver) {\n      return this.children;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.CssValue.prototype = {\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isAstNode: 1,\n    get$value: function(receiver) {\n      return this.value;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.AstNode.prototype = {};\n  B._FakeAstNode.prototype = {\n    get$span: function() {\n      return this._callback.call$0();\n    },\n    $isAstNode: 1\n  };\n  Z.Argument.prototype = {\n    toString$0: function(_) {\n      var t1 = this.defaultValue,\n        t2 = this.name;\n      return t1 == null ? t2 : t2 + \": \" + t1.toString$0(0);\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ArgumentDeclaration.prototype = {\n    get$spanWithName: function() {\n      var t3, t4,\n        t1 = this.span,\n        t2 = t1.file,\n        text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2._decodedChars, 0, null), 0, null),\n        i = Y.FileLocation$_(t2, t1._file$_start).offset - 1;\n      while (true) {\n        if (i > 0) {\n          t3 = C.JSString_methods.codeUnitAt$1(text, i);\n          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        --i;\n      }\n      t3 = C.JSString_methods.codeUnitAt$1(text, i);\n      if (!(t3 === 95 || T.isAlphabetic0(t3) || t3 >= 128 || T.isDigit(t3) || t3 === 45))\n        return t1;\n      --i;\n      while (true) {\n        if (i >= 0) {\n          t3 = C.JSString_methods.codeUnitAt$1(text, i);\n          if (t3 !== 95) {\n            if (!(t3 >= 97 && t3 <= 122))\n              t4 = t3 >= 65 && t3 <= 90;\n            else\n              t4 = true;\n            t4 = t4 || t3 >= 128;\n          } else\n            t4 = true;\n          if (!t4) {\n            t4 = t3 >= 48 && t3 <= 57;\n            t3 = t4 || t3 === 45;\n          } else\n            t3 = true;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        --i;\n      }\n      t3 = i + 1;\n      t4 = C.JSString_methods.codeUnitAt$1(text, t3);\n      if (!(t4 === 95 || T.isAlphabetic0(t4) || t4 >= 128))\n        return t1;\n      return B.SpanExtensions_trim(t2.span$2(t3, Y.FileLocation$_(t2, t1._end).offset));\n    },\n    get$originalRestArgument: function() {\n      var t1, text;\n      if (this.restArgument == null)\n        return null;\n      t1 = this.span;\n      text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);\n      return C.JSString_methods.substring$2(C.JSString_methods.substring$1(text, C.JSString_methods.lastIndexOf$1(text, \"$\")), 0, C.JSString_methods.indexOf$1(text, \".\"));\n    },\n    verify$2: function(positional, names) {\n      var t1, t2, t3, namedUsed, i, argument, t4, unknownNames, _this = this,\n        _s10_ = \"invocation\",\n        _s8_ = \"argument\";\n      for (t1 = _this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {\n        argument = t1[i];\n        if (i < positional) {\n          t4 = argument.name;\n          if (t3.containsKey$1(t4))\n            throw H.wrapException(E.SassScriptException$(\"Argument \" + H.S(_this._originalArgumentName$1(t4)) + string$.x20was_p));\n        } else {\n          t4 = argument.name;\n          if (t3.containsKey$1(t4))\n            ++namedUsed;\n          else if (argument.defaultValue == null)\n            throw H.wrapException(E.MultiSpanSassScriptException$(\"Missing argument \" + H.S(_this._originalArgumentName$1(t4)) + \".\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String)));\n        }\n      }\n      if (_this.restArgument != null)\n        return;\n      if (positional > t2) {\n        t1 = \"Only \" + t2 + \" \";\n        throw H.wrapException(E.MultiSpanSassScriptException$(t1 + (names.get$isEmpty(names) ? \"\" : \"positional \") + B.pluralize(_s8_, t2, null) + \" allowed, but \" + positional + \" \" + B.pluralize(\"was\", positional, \"were\") + \" passed.\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      if (namedUsed < t3.get$length(t3)) {\n        t2 = type$.legacy_String;\n        unknownNames = P.LinkedHashSet_LinkedHashSet$of(names, t2);\n        unknownNames.removeAll$1(new H.MappedListIterable(t1, new B.ArgumentDeclaration_verify_closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Object*>\")));\n        throw H.wrapException(E.MultiSpanSassScriptException$(\"No \" + B.pluralize(_s8_, unknownNames._collection$_length, null) + \" named \" + H.S(B.toSentence(unknownNames.map$1$1(0, new B.ArgumentDeclaration_verify_closure0(), type$.legacy_Object), \"or\")) + \".\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, t2)));\n      }\n    },\n    _originalArgumentName$1: function($name) {\n      var t1, t2, _i, argument, t3, t4, text, end;\n      if ($name === this.restArgument)\n        return this.get$originalRestArgument();\n      for (t1 = this.$arguments, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        argument = t1[_i];\n        if (argument.name === $name) {\n          t1 = argument.defaultValue;\n          t2 = argument.span;\n          t3 = t2.file;\n          t4 = t2._file$_start;\n          t2 = t2._end;\n          if (t1 == null) {\n            t1 = t3._decodedChars;\n            t1 = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);\n          } else {\n            t1 = t3._decodedChars;\n            text = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);\n            t1 = C.JSString_methods.substring$2(text, 0, C.JSString_methods.indexOf$1(text, \":\"));\n            end = B._lastNonWhitespace(t1, false);\n            t1 = end == null ? \"\" : C.JSString_methods.substring$2(t1, 0, end + 1);\n          }\n          return t1;\n        }\n      }\n      throw H.wrapException(P.ArgumentError$(string$.This_d + $name + '\".'));\n    },\n    matches$2: function(positional, names) {\n      var t1, t2, t3, namedUsed, i, argument;\n      for (t1 = this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {\n        argument = t1[i];\n        if (i < positional) {\n          if (t3.containsKey$1(argument.name))\n            return false;\n        } else if (t3.containsKey$1(argument.name))\n          ++namedUsed;\n        else if (argument.defaultValue == null)\n          return false;\n      }\n      if (this.restArgument != null)\n        return true;\n      if (positional > t2)\n        return false;\n      if (namedUsed < t3.get$length(t3))\n        return false;\n      return true;\n    },\n    toString$0: function(_) {\n      var t2, t3, _i,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      for (t2 = this.$arguments, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(J.toString$0$(t2[_i]));\n      t2 = this.restArgument;\n      if (t2 != null)\n        t1.push(t2 + \"...\");\n      return C.JSArray_methods.join$1(t1, \", \");\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ArgumentDeclaration_verify_closure.prototype = {\n    call$1: function(argument) {\n      return argument.name;\n    },\n    $signature: 279\n  };\n  B.ArgumentDeclaration_verify_closure0.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  X.ArgumentInvocation.prototype = {\n    get$isEmpty: function(_) {\n      var t1;\n      if (this.positional.length === 0) {\n        t1 = this.named;\n        t1 = t1.get$isEmpty(t1) && this.rest == null;\n      } else\n        t1 = false;\n      return t1;\n    },\n    toString$0: function(_) {\n      var t2, t3, _i, t4, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n      for (t2 = _this.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i]);\n      for (t2 = _this.named, t3 = J.get$iterator$ax(t2.get$keys(t2)); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t1.push(H.S(t4) + \": \" + H.S(t2.$index(0, t4)));\n      }\n      t2 = _this.rest;\n      if (t2 != null)\n        t1.push(t2.toString$0(0) + \"...\");\n      t2 = _this.keywordRest;\n      if (t2 != null)\n        t1.push(t2.toString$0(0) + \"...\");\n      return \"(\" + C.JSArray_methods.join$1(t1, \", \") + \")\";\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.AtRootQuery.prototype = {\n    excludes$1: function(node) {\n      var t1, _this = this;\n      if (_this._all)\n        return !_this.include;\n      if (type$.legacy_CssStyleRule._is(node))\n        return _this._at_root_query$_rule !== _this.include;\n      if (type$.legacy_CssMediaRule._is(node))\n        return _this.excludesName$1(\"media\");\n      if (type$.legacy_CssSupportsRule._is(node))\n        return _this.excludesName$1(\"supports\");\n      if (type$.legacy_CssAtRule._is(node)) {\n        t1 = node.name;\n        return _this.excludesName$1(t1.get$value(t1).toLowerCase());\n      }\n      return false;\n    },\n    excludesName$1: function($name) {\n      var t1 = this._all || this.names.contains$1(0, $name);\n      return t1 !== this.include;\n    }\n  };\n  Z.ConfiguredVariable.prototype = {\n    toString$0: function(_) {\n      var t1 = \"$\" + this.name + \": \" + H.S(this.expression);\n      return t1 + (this.isGuarded ? \" !default\" : \"\");\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.BinaryOperationExpression.prototype = {\n    get$span: function() {\n      var right,\n        left = this.left;\n      for (; left instanceof V.BinaryOperationExpression;)\n        left = left.left;\n      right = this.right;\n      for (; right instanceof V.BinaryOperationExpression;)\n        right = right.right;\n      return B.spanForList(H.setRuntimeTypeInfo([left, right], type$.JSArray_legacy_AstNode));\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitBinaryOperationExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, right, rightNeedsParens, _this = this,\n        left = _this.left,\n        leftNeedsParens = left instanceof V.BinaryOperationExpression && left.operator.precedence < _this.operator.precedence,\n        t1 = leftNeedsParens ? H.Primitives_stringFromCharCode(40) : \"\";\n      t1 += H.S(left);\n      if (leftNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(41);\n      t2 = _this.operator;\n      t1 = t1 + H.Primitives_stringFromCharCode(32) + t2.operator + H.Primitives_stringFromCharCode(32);\n      right = _this.right;\n      rightNeedsParens = right instanceof V.BinaryOperationExpression && right.operator.precedence <= t2.precedence;\n      if (rightNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(40);\n      t1 += H.S(right);\n      if (rightNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(41);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isExpression: 1\n  };\n  V.BinaryOperator.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  Z.BooleanExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitBooleanExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return String(this.value);\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  K.ColorExpression.prototype = {\n    get$span: function() {\n      return this.value.originalSpan;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitColorExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return N.serializeValue0(this.value, true, true);\n    },\n    $isAstNode: 1,\n    $isExpression: 1\n  };\n  F.FunctionExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitFunctionExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? t1 + \".\" : \"\";\n      t1 += this.name.toString$0(0) + this.$arguments.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.IfExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitIfExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"if\" + this.$arguments.toString$0(0);\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  D.ListExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitListExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = _this.hasBrackets,\n        t2 = t1 ? H.Primitives_stringFromCharCode(91) : \"\",\n        t3 = _this.contents,\n        t4 = _this.separator === C.ListSeparator_comma ? \", \" : \" \";\n      t4 = t2 + new H.MappedListIterable(t3, new D.ListExpression_toString_closure(_this), H._arrayInstanceType(t3)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, t4);\n      t1 = t1 ? t4 + H.Primitives_stringFromCharCode(93) : t4;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _list0$_elementNeedsParens$1: function(expression) {\n      var t1, t2;\n      if (expression instanceof D.ListExpression) {\n        if (expression.contents.length < 2)\n          return false;\n        if (expression.hasBrackets)\n          return false;\n        t1 = this.separator;\n        t2 = t1 === C.ListSeparator_comma;\n        return t2 ? t2 : t1 !== C.ListSeparator_undecided;\n      }\n      if (this.separator !== C.ListSeparator_space)\n        return false;\n      if (expression instanceof X.UnaryOperationExpression) {\n        t1 = expression.operator;\n        return t1 === C.UnaryOperator_j2w || t1 === C.UnaryOperator_U4G;\n      }\n      return false;\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  D.ListExpression_toString_closure.prototype = {\n    call$1: function(element) {\n      return this.$this._list0$_elementNeedsParens$1(element) ? \"(\" + H.S(element) + \")\" : J.toString$0$(element);\n    },\n    $signature: 280\n  };\n  A.MapExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMapExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.pairs;\n      return \"(\" + new H.MappedListIterable(t1, new A.MapExpression_toString_closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \", \") + \")\";\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  A.MapExpression_toString_closure.prototype = {\n    call$1: function(pair) {\n      return H.S(pair.item1) + \": \" + H.S(pair.item2);\n    },\n    $signature: 281\n  };\n  O.NullExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitNullExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"null\";\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.NumberExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitNumberExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = H.S(this.value),\n        t2 = this.unit;\n      return t1 + (t2 == null ? \"\" : t2);\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.ParenthesizedExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitParenthesizedExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.expression);\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.SelectorExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSelectorExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"&\";\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  D.StringExpression.prototype = {\n    get$span: function() {\n      return this.text.span;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitStringExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    asInterpolation$1$static: function($static) {\n      var quote, t1, t2, buffer, t3, t4, t5, t6, _i, value, t7, t8, i, codeUnit, next, t9, _this = this;\n      if (!_this.hasQuotes)\n        return _this.text;\n      quote = _this._bestQuote$0();\n      t1 = new P.StringBuffer(\"\");\n      t2 = [];\n      buffer = new Z.InterpolationBuffer(t1, t2);\n      t1._contents += H.Primitives_stringFromCharCode(quote);\n      for (t3 = _this.text, t4 = t3.contents, t5 = t4.length, t6 = type$.legacy_Expression, _i = 0; _i < t5; ++_i) {\n        value = t4[_i];\n        if (t6._is(value)) {\n          buffer._flushText$0();\n          t2.push(value);\n        } else if (typeof value == \"string\")\n          for (t7 = value.length, t8 = t7 - 1, i = 0; i < t7; ++i) {\n            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);\n            if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12) {\n              t1._contents += H.Primitives_stringFromCharCode(92);\n              t1._contents += H.Primitives_stringFromCharCode(97);\n              if (i !== t8) {\n                next = C.JSString_methods._codeUnitAt$1(value, i + 1);\n                if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12 || T.isHex(next))\n                  t1._contents += H.Primitives_stringFromCharCode(32);\n              }\n            } else {\n              if (codeUnit !== quote)\n                if (codeUnit !== 92)\n                  t9 = $static && codeUnit === 35 && i < t8 && C.JSString_methods._codeUnitAt$1(value, i + 1) === 123;\n                else\n                  t9 = true;\n              else\n                t9 = true;\n              if (t9)\n                t1._contents += H.Primitives_stringFromCharCode(92);\n              t1._contents += H.Primitives_stringFromCharCode(codeUnit);\n            }\n          }\n      }\n      t1._contents += H.Primitives_stringFromCharCode(quote);\n      return buffer.interpolation$1(t3.span);\n    },\n    asInterpolation$0: function() {\n      return this.asInterpolation$1$static(false);\n    },\n    _bestQuote$0: function() {\n      var t1, t2, containsDoubleQuote, _i, value, t3, i, codeUnit;\n      for (t1 = this.text.contents, t2 = t1.length, containsDoubleQuote = false, _i = 0; _i < t2; ++_i) {\n        value = t1[_i];\n        if (typeof value == \"string\")\n          for (t3 = value.length, i = 0; i < t3; ++i) {\n            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);\n            if (codeUnit === 39)\n              return 34;\n            if (codeUnit === 34)\n              containsDoubleQuote = true;\n          }\n      }\n      return containsDoubleQuote ? 39 : 34;\n    },\n    toString$0: function(_) {\n      return this.asInterpolation$0().toString$0(0);\n    },\n    $isAstNode: 1,\n    $isExpression: 1\n  };\n  X.UnaryOperationExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitUnaryOperationExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.operator,\n        t2 = t1.operator;\n      t1 = t1 === C.UnaryOperator_not_not ? t2 + H.Primitives_stringFromCharCode(32) : t2;\n      t1 += H.S(this.operand);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.UnaryOperator.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  F.ValueExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitValueExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  S.VariableExpression.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitVariableExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? \"$\" + (t1 + \".\") : \"$\";\n      t1 += this.name;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isExpression: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.DynamicImport.prototype = {\n    toString$0: function(_) {\n      return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([this.url], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain();\n    },\n    $isAstNode: 1,\n    $isImport: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Q.StaticImport.prototype = {\n    toString$0: function(_) {\n      var t1 = this.url.toString$0(0),\n        t2 = this.supports;\n      if (t2 != null)\n        t1 += \" supports(\" + t2.toString$0(0) + \")\";\n      t2 = this.media;\n      if (t2 != null)\n        t1 += \" \" + t2.toString$0(0);\n      t1 += H.Primitives_stringFromCharCode(59);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isImport: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.Interpolation.prototype = {\n    get$asPlain: function() {\n      var first,\n        t1 = this.contents,\n        t2 = t1.length;\n      if (t2 === 0)\n        return \"\";\n      if (t2 > 1)\n        return null;\n      first = C.JSArray_methods.get$first(t1);\n      return typeof first == \"string\" ? first : null;\n    },\n    get$initialPlain: function() {\n      var first = C.JSArray_methods.get$first(this.contents);\n      return typeof first == \"string\" ? first : \"\";\n    },\n    Interpolation$2: function(contents, span) {\n      var t1, t2, t3, i, t4, t5,\n        _s8_ = \"contents\";\n      for (t1 = this.contents, t2 = t1.length, t3 = type$.legacy_Expression, i = 0; i < t2; ++i) {\n        t4 = t1[i];\n        t5 = typeof t4 == \"string\";\n        if (!t5 && !t3._is(t4))\n          throw H.wrapException(P.ArgumentError$value(t1, _s8_, string$.May_on));\n        if (i !== 0 && typeof t1[i - 1] == \"string\" && t5)\n          throw H.wrapException(P.ArgumentError$value(t1, _s8_, \"May not contain adjacent Strings.\"));\n      }\n    },\n    toString$0: function(_) {\n      var t1 = this.contents;\n      return new H.MappedListIterable(t1, new X.Interpolation_toString_closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.Interpolation_toString_closure.prototype = {\n    call$1: function(value) {\n      return typeof value == \"string\" ? value : \"#{\" + H.S(value) + \"}\";\n    },\n    $signature: 44\n  };\n  V.AtRootRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitAtRootRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var buffer = new P.StringBuffer(\"@at-root \"),\n        t1 = this.query;\n      if (t1 != null)\n        buffer._contents = \"@at-root \" + (t1.toString$0(0) + \" \");\n      t1 = this.children;\n      return buffer.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.AtRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitAtRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = \"@\" + this.name.toString$0(0),\n        buffer = new P.StringBuffer(t1),\n        t2 = this.value;\n      if (t2 != null)\n        buffer._contents = t1 + (\" \" + t2.toString$0(0));\n      t1 = this.children;\n      return t1 == null ? buffer.toString$0(0) + \";\" : buffer.toString$0(0) + \" {\" + C.JSArray_methods.join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.CallableDeclaration.prototype = {\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.ContentBlock.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitContentBlock$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2,\n        t1 = this.$arguments;\n      t1 = t1.$arguments.length === 0 && t1.restArgument == null ? \"\" : \" using (\" + t1.toString$0(0) + \")\";\n      t2 = this.children;\n      return t1 + (\" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\");\n    }\n  };\n  Q.ContentRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitContentRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.$arguments;\n      return t1.get$isEmpty(t1) ? \"@content;\" : \"@content(\" + t1.toString$0(0) + \");\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Q.DebugRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitDebugRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@debug \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.Declaration.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.EachRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitEachRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.variables,\n        t2 = this.children;\n      return \"@each \" + new H.MappedListIterable(t1, new V.EachRule_toString_closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \", \") + \" in \" + H.S(this.list) + \" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.EachRule_toString_closure.prototype = {\n    call$1: function(variable) {\n      return C.JSString_methods.$add(\"$\", variable);\n    },\n    $signature: 8\n  };\n  D.ErrorRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitErrorRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@error \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.ExtendRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitExtendRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@extend \" + this.selector.toString$0(0);\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ForRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitForRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = \"@for $\" + _this.variable + \" from \" + H.S(_this.from) + \" \",\n        t2 = _this.children;\n      return t1 + (_this.isExclusive ? \"to\" : \"through\") + \" \" + H.S(_this.to) + \" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.ForwardRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitForwardRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t3, _this = this,\n        t1 = \"@forward \" + H.S(new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([J.toString$0$(_this.url)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),\n        t2 = _this.shownMixinsAndFunctions;\n      if (t2 != null)\n        t1 = t1 + \" show \" + _this._forward_rule$_memberList$2(t2, _this.shownVariables);\n      else {\n        t2 = _this.hiddenMixinsAndFunctions;\n        if (t2 != null) {\n          t3 = t2._base;\n          t3 = t3.get$isNotEmpty(t3);\n        } else\n          t3 = false;\n        if (t3)\n          t1 = t1 + \" hide \" + _this._forward_rule$_memberList$2(t2, _this.hiddenVariables);\n      }\n      t2 = _this.prefix;\n      if (t2 != null)\n        t1 += \" as \" + t2 + \"*\";\n      t2 = _this.configuration;\n      t1 = (t2.length !== 0 ? t1 + (\" with (\" + C.JSArray_methods.join$1(t2, \", \") + \")\") : t1) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _forward_rule$_memberList$2: function(mixinsAndFunctions, variables) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),\n        t2 = this.shownMixinsAndFunctions;\n      if (t2 != null)\n        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)\n          t1.push(t2.get$current(t2));\n      t2 = this.shownVariables;\n      if (t2 != null)\n        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)\n          t1.push(\"$\" + H.S(t2.get$current(t2)));\n      return C.JSArray_methods.join$1(t1, \", \");\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.FunctionRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitFunctionRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@function \" + H.S(this.name) + \"(\" + H.S(this.$arguments) + \") {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    }\n  };\n  V.IfRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitIfRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, t1 = {};\n      t1.first = true;\n      t2 = this.clauses;\n      return new H.MappedListIterable(t2, new V.IfRule_toString_closure(t1), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \" \");\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.IfRule_toString_closure.prototype = {\n    call$1: function(clause) {\n      var t1 = this._box_0,\n        $name = t1.first ? \"if\" : \"else\";\n      t1.first = false;\n      return \"@\" + $name + \" \" + H.S(clause.expression) + \" {\" + C.JSArray_methods.join$1(clause.children, \" \") + \"}\";\n    },\n    $signature: 284\n  };\n  V.IfClause.prototype = {\n    toString$0: function(_) {\n      var t1 = this.expression;\n      t1 = t1 == null ? \"@else\" : \"@if \" + t1.toString$0(0);\n      return t1 + (\" {\" + C.JSArray_methods.join$1(this.children, \" \") + \"}\");\n    }\n  };\n  V.IfClause$__closure.prototype = {\n    call$1: function(child) {\n      var t1;\n      if (!(child instanceof Z.VariableDeclaration))\n        if (!(child instanceof M.FunctionRule))\n          if (!(child instanceof T.MixinRule))\n            t1 = child instanceof B.ImportRule && C.JSArray_methods.any$1(child.imports, new V.IfClause$___closure());\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 188\n  };\n  V.IfClause$___closure.prototype = {\n    call$1: function($import) {\n      return $import instanceof B.DynamicImport;\n    },\n    $signature: 187\n  };\n  B.ImportRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitImportRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@import \" + C.JSArray_methods.join$1(this.imports, \", \") + \";\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  A.IncludeRule.prototype = {\n    get$spanWithoutContent: function() {\n      var t2, t3,\n        t1 = this.span;\n      if (!(this.content == null)) {\n        t2 = t1.file;\n        t3 = this.$arguments.span;\n        t3 = B.SpanExtensions_trim(t2.span$2(Y.FileLocation$_(t2, t1._file$_start).offset, Y.FileLocation$_(t3.file, t3._end).offset));\n        t1 = t3;\n      }\n      return t1;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitIncludeRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, _this = this,\n        t1 = _this.namespace;\n      t1 = t1 != null ? \"@include \" + (t1 + \".\") : \"@include \";\n      t1 += _this.name;\n      t2 = _this.$arguments;\n      if (!t2.get$isEmpty(t2))\n        t1 += \"(\" + t2.toString$0(0) + \")\";\n      t2 = _this.content;\n      t1 += t2 == null ? \";\" : \" \" + t2.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.LoudComment.prototype = {\n    get$span: function() {\n      return this.text.span;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitLoudComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return this.text.toString$0(0);\n    },\n    $isAstNode: 1,\n    $isStatement: 1\n  };\n  G.MediaRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMediaRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@media \" + this.query.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.MixinRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMixinRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = \"@mixin \" + H.S(this.name),\n        t2 = this.$arguments;\n      if (!(t2.$arguments.length === 0 && t2.restArgument == null))\n        t1 += \"(\" + t2.toString$0(0) + \")\";\n      t2 = this.children;\n      t2 = t1 + (\" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\");\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    }\n  };\n  M.ParentStatement.prototype = {$isAstNode: 1, $isStatement: 1};\n  M.ParentStatement_closure.prototype = {\n    call$1: function(child) {\n      var t1;\n      if (!(child instanceof Z.VariableDeclaration))\n        if (!(child instanceof M.FunctionRule))\n          if (!(child instanceof T.MixinRule))\n            t1 = child instanceof B.ImportRule && C.JSArray_methods.any$1(child.imports, new M.ParentStatement__closure());\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 188\n  };\n  M.ParentStatement__closure.prototype = {\n    call$1: function($import) {\n      return $import instanceof B.DynamicImport;\n    },\n    $signature: 187\n  };\n  B.ReturnRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitReturnRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@return \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.SilentComment.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSilentComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return this.text;\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.StyleRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitStyleRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return this.selector.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.Stylesheet.prototype = {\n    Stylesheet$3$plainCss: function(children, span, plainCss) {\n      var t1, t2, t3, t4, _i, child;\n      for (t1 = this.children, t2 = t1.length, t3 = this._forwards, t4 = this._uses, _i = 0; _i < t2; ++_i) {\n        child = t1[_i];\n        if (child instanceof T.UseRule)\n          t4.push(child);\n        else if (child instanceof L.ForwardRule)\n          t3.push(child);\n        else if (!(child instanceof B.SilentComment) && !(child instanceof L.LoudComment) && !(child instanceof Z.VariableDeclaration))\n          break;\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return (t1 && C.JSArray_methods).join$1(t1, \" \");\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.SupportsRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSupportsRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@supports \" + this.condition.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.UseRule.prototype = {\n    UseRule$4$configuration: function(url, namespace, span, configuration) {\n      var t1, t2, _i, variable;\n      for (t1 = this.configuration, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        variable = t1[_i];\n        if (variable.isGuarded)\n          throw H.wrapException(P.ArgumentError$value(variable, \"configured variable\", \"can't be guarded in a @use rule.\"));\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitUseRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.url,\n        t2 = \"@use \" + H.S(new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([J.toString$0$(t1)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),\n        basename = t1.get$pathSegments().length === 0 ? \"\" : C.JSArray_methods.get$last(t1.get$pathSegments()),\n        dot = J.getInterceptor$asx(basename).indexOf$1(basename, \".\");\n      t1 = this.namespace;\n      if (t1 !== C.JSString_methods.substring$2(basename, 0, dot === -1 ? basename.length : dot))\n        t1 = t2 + (\" as \" + (t1 == null ? \"*\" : t1));\n      else\n        t1 = t2;\n      t2 = this.configuration;\n      t1 = (t2.length !== 0 ? t1 + (\" with (\" + C.JSArray_methods.join$1(t2, \", \") + \")\") : t1) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Z.VariableDeclaration.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitVariableDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? \"$\" + (t1 + \".\") : \"$\";\n      t1 += this.name + \": \" + H.S(this.expression) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.WarnRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitWarnRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@warn \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode: 1,\n    $isStatement: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  G.WhileRule.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitWhileRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@while \" + H.S(this.condition) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.SupportsAnything.prototype = {\n    toString$0: function(_) {\n      return \"(\" + this.contents.toString$0(0) + \")\";\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.SupportsDeclaration.prototype = {\n    toString$0: function(_) {\n      return \"(\" + H.S(this.name) + \": \" + H.S(this.value) + \")\";\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.SupportsFunction.prototype = {\n    toString$0: function(_) {\n      return this.name.toString$0(0) + \"(\" + this.$arguments.toString$0(0) + \")\";\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.SupportsInterpolation.prototype = {\n    toString$0: function(_) {\n      return \"#{\" + H.S(this.expression) + \"}\";\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.SupportsNegation.prototype = {\n    toString$0: function(_) {\n      var t1 = this.condition;\n      if (t1 instanceof M.SupportsNegation || t1 instanceof U.SupportsOperation)\n        return \"not (\" + t1.toString$0(0) + \")\";\n      else\n        return \"not \" + t1.toString$0(0);\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.SupportsOperation.prototype = {\n    toString$0: function(_) {\n      var _this = this;\n      return _this._operation$_parenthesize$1(_this.left) + \" \" + _this.operator + \" \" + _this._operation$_parenthesize$1(_this.right);\n    },\n    _operation$_parenthesize$1: function(condition) {\n      var t1;\n      if (!(condition instanceof M.SupportsNegation))\n        t1 = condition instanceof U.SupportsOperation && condition.operator === this.operator;\n      else\n        t1 = true;\n      return t1 ? \"(\" + condition.toString$0(0) + \")\" : condition.toString$0(0);\n    },\n    $isAstNode: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.Selector.prototype = {\n    get$isInvisible: function() {\n      return false;\n    },\n    toString$0: function(_) {\n      var visitor = N._SerializeVisitor$0(null, true, null, true, false, null, true);\n      this.accept$1(visitor);\n      return visitor._serialize$_buffer.toString$0(0);\n    }\n  };\n  N.AttributeSelector.prototype = {\n    accept$1$1: function(visitor) {\n      var t2, _this = this,\n        t1 = visitor._serialize$_buffer;\n      t1.writeCharCode$1(91);\n      t1.write$1(0, _this.name);\n      t2 = _this.op;\n      if (t2 != null) {\n        t1.write$1(0, t2);\n        t2 = _this.value;\n        if (G.Parser_isIdentifier(t2) && !J.startsWith$1$s(t2, \"--\")) {\n          t1.write$1(0, t2);\n          t2 = _this.modifier;\n          if (t2 != null)\n            t1.writeCharCode$1(32);\n        } else {\n          visitor._visitQuotedString$1(t2);\n          t2 = _this.modifier;\n          if (t2 != null)\n            if (visitor._style !== C.OutputStyle_compressed)\n              t1.writeCharCode$1(32);\n        }\n        if (t2 != null)\n          t1.write$1(0, t2);\n      }\n      t1.writeCharCode$1(93);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof N.AttributeSelector && other.name.$eq(0, _this.name) && other.op == _this.op && other.value == _this.value && other.modifier == _this.modifier;\n    },\n    get$hashCode: function(_) {\n      var _this = this,\n        t1 = _this.name;\n      return (C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace) ^ J.get$hashCode$(_this.op) ^ J.get$hashCode$(_this.value) ^ J.get$hashCode$(_this.modifier)) >>> 0;\n    }\n  };\n  N.AttributeOperator.prototype = {\n    toString$0: function(_) {\n      return this._attribute$_text;\n    }\n  };\n  X.ClassSelector.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof X.ClassSelector && other.name === this.name;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._serialize$_buffer;\n      t1.writeCharCode$1(46);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new X.ClassSelector(this.name + suffix);\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  S.ComplexSelector.prototype = {\n    get$minSpecificity: function() {\n      if (this._minSpecificity == null)\n        this._computeSpecificity$0();\n      return this._minSpecificity;\n    },\n    get$maxSpecificity: function() {\n      if (this._maxSpecificity == null)\n        this._computeSpecificity$0();\n      return this._maxSpecificity;\n    },\n    get$isInvisible: function() {\n      var t1 = this._complex$_isInvisible;\n      if (t1 != null)\n        return t1;\n      return this._complex$_isInvisible = C.JSArray_methods.any$1(this.components, new S.ComplexSelector_isInvisible_closure());\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitComplexSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    _computeSpecificity$0: function() {\n      var t1, t2, component, t3, _this = this,\n        _i = _this._maxSpecificity = _this._minSpecificity = 0;\n      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {\n        component = t1[_i];\n        if (component instanceof X.CompoundSelector) {\n          t3 = _this._minSpecificity;\n          if (component._compound$_minSpecificity == null)\n            component._compound$_computeSpecificity$0();\n          _this._minSpecificity = t3 + component._compound$_minSpecificity;\n          t3 = _this._maxSpecificity;\n          if (component._compound$_maxSpecificity == null)\n            component._compound$_computeSpecificity$0();\n          _this._maxSpecificity = t3 + component._compound$_maxSpecificity;\n        }\n      }\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof S.ComplexSelector && C.C_ListEquality.equals$2(0, this.components, other.components);\n    }\n  };\n  S.ComplexSelector_isInvisible_closure.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector && component.get$isInvisible();\n    },\n    $signature: 84\n  };\n  S.Combinator.prototype = {\n    toString$0: function(_) {\n      return this._complex$_text;\n    },\n    $isComplexSelectorComponent: 1\n  };\n  X.CompoundSelector.prototype = {\n    get$isInvisible: function() {\n      return C.JSArray_methods.any$1(this.components, new X.CompoundSelector_isInvisible_closure());\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitCompoundSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    _compound$_computeSpecificity$0: function() {\n      var t1, t2, simple, _this = this,\n        _i = _this._compound$_maxSpecificity = _this._compound$_minSpecificity = 0;\n      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {\n        simple = t1[_i];\n        _this._compound$_minSpecificity = _this._compound$_minSpecificity + simple.get$minSpecificity();\n        _this._compound$_maxSpecificity = _this._compound$_maxSpecificity + simple.get$maxSpecificity();\n      }\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof X.CompoundSelector && C.C_ListEquality.equals$2(0, this.components, other.components);\n    },\n    $isComplexSelectorComponent: 1\n  };\n  X.CompoundSelector_isInvisible_closure.prototype = {\n    call$1: function(component) {\n      return component.get$isInvisible();\n    },\n    $signature: 19\n  };\n  N.IDSelector.prototype = {\n    get$minSpecificity: function() {\n      return H._asIntS(Math.pow(M.SimpleSelector.prototype.get$minSpecificity.call(this), 2));\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._serialize$_buffer;\n      t1.writeCharCode$1(35);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new N.IDSelector(this.name + suffix);\n    },\n    unify$1: function(compound) {\n      if (C.JSArray_methods.any$1(compound, new N.IDSelector_unify_closure(this)))\n        return null;\n      return this.super$SimpleSelector$unify(compound);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.IDSelector && other.name === this.name;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  N.IDSelector_unify_closure.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (simple instanceof N.IDSelector) {\n        t1 = simple.name;\n        t1 = this.$this.name !== t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 19\n  };\n  D.SelectorList.prototype = {\n    get$isInvisible: function() {\n      return C.JSArray_methods.every$1(this.components, new D.SelectorList_isInvisible_closure());\n    },\n    get$asSassList: function() {\n      var t1 = this.components;\n      return D.SassList$(new H.MappedListIterable(t1, new D.SelectorList_asSassList_closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value*>\")), C.ListSeparator_comma, false);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitSelectorList$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(other) {\n      var t1 = this.components,\n        t2 = H._arrayInstanceType(t1)._eval$1(\"ExpandIterable<1,ComplexSelector*>\"),\n        contents = P.List_List$from(new H.ExpandIterable(t1, new D.SelectorList_unify_closure(other), t2), true, t2._eval$1(\"Iterable.E\"));\n      return contents.length === 0 ? null : D.SelectorList$(contents);\n    },\n    resolveParentSelectors$2$implicitParent: function($parent, implicitParent) {\n      var t1, _this = this;\n      if ($parent == null) {\n        if (!C.JSArray_methods.any$1(_this.components, _this.get$_complexContainsParentSelector()))\n          return _this;\n        throw H.wrapException(E.SassScriptException$(string$.Top_le));\n      }\n      t1 = _this.components;\n      return D.SelectorList$(B.flattenVertically(new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors_closure(_this, implicitParent, $parent), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelector*>*>\")), type$.legacy_ComplexSelector));\n    },\n    resolveParentSelectors$1: function($parent) {\n      return this.resolveParentSelectors$2$implicitParent($parent, true);\n    },\n    _complexContainsParentSelector$1: function(complex) {\n      return C.JSArray_methods.any$1(complex.components, new D.SelectorList__complexContainsParentSelector_closure());\n    },\n    _resolveParentSelectorsCompound$2: function(compound, $parent) {\n      var resolvedMembers0, parentSelector, t1,\n        resolvedMembers = compound.components,\n        containsSelectorPseudo = C.JSArray_methods.any$1(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure());\n      if (!containsSelectorPseudo && !(C.JSArray_methods.get$first(resolvedMembers) instanceof M.ParentSelector))\n        return null;\n      resolvedMembers0 = containsSelectorPseudo ? new H.MappedListIterable(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure0($parent), H._arrayInstanceType(resolvedMembers)._eval$1(\"MappedListIterable<1,SimpleSelector*>\")) : resolvedMembers;\n      parentSelector = C.JSArray_methods.get$first(resolvedMembers);\n      if (parentSelector instanceof M.ParentSelector) {\n        if (resolvedMembers.length === 1 && parentSelector.suffix == null)\n          return $parent.components;\n      } else\n        return H.setRuntimeTypeInfo([S.ComplexSelector$(H.setRuntimeTypeInfo([X.CompoundSelector$(resolvedMembers0)], type$.JSArray_legacy_ComplexSelectorComponent), false)], type$.JSArray_legacy_ComplexSelector);\n      t1 = $parent.components;\n      return new H.MappedListIterable(t1, new D.SelectorList__resolveParentSelectorsCompound_closure1(compound, resolvedMembers0), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector*>\"));\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.SelectorList && C.C_ListEquality.equals$2(0, this.components, other.components);\n    }\n  };\n  D.SelectorList_isInvisible_closure.prototype = {\n    call$1: function(complex) {\n      return complex.get$isInvisible();\n    },\n    $signature: 15\n  };\n  D.SelectorList_asSassList_closure.prototype = {\n    call$1: function(complex) {\n      var t1 = complex.components;\n      return D.SassList$(new H.MappedListIterable(t1, new D.SelectorList_asSassList__closure(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value*>\")), C.ListSeparator_space, false);\n    },\n    $signature: 296\n  };\n  D.SelectorList_asSassList__closure.prototype = {\n    call$1: function(component) {\n      return new D.SassString(J.toString$0$(component), false);\n    },\n    $signature: 298\n  };\n  D.SelectorList_unify_closure.prototype = {\n    call$1: function(complex1) {\n      var t1 = this.other.components;\n      return new H.ExpandIterable(t1, new D.SelectorList_unify__closure(complex1), H._arrayInstanceType(t1)._eval$1(\"ExpandIterable<1,ComplexSelector*>\"));\n    },\n    $signature: 89\n  };\n  D.SelectorList_unify__closure.prototype = {\n    call$1: function(complex2) {\n      var unified = Y.unifyComplex(H.setRuntimeTypeInfo([this.complex1.components, complex2.components], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n      if (unified == null)\n        return C.List_empty4;\n      return J.map$1$1$ax(unified, new D.SelectorList_unify___closure(), type$.legacy_ComplexSelector);\n    },\n    $signature: 89\n  };\n  D.SelectorList_unify___closure.prototype = {\n    call$1: function(complex) {\n      return S.ComplexSelector$(complex, false);\n    },\n    $signature: 71\n  };\n  D.SelectorList_resolveParentSelectors_closure.prototype = {\n    call$1: function(complex) {\n      var t2, t3, newComplexes, t4, t5, t6, t7, _i, component, resolved, t8, _i0, previousLineBreaks, newComplexes0, t9, i, newComplex, i0, lineBreak, t10, t11, t12, t13, t14, t15, _i1, _this = this, _box_0 = {},\n        t1 = _this.$this;\n      if (!t1._complexContainsParentSelector$1(complex)) {\n        if (!_this.implicitParent)\n          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n        t1 = _this.parent.components;\n        return new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors__closure(complex), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector*>\"));\n      }\n      t2 = type$.JSArray_legacy_ComplexSelectorComponent;\n      t3 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent;\n      newComplexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([], t2)], t3);\n      t4 = type$.JSArray_legacy_bool;\n      _box_0.lineBreaks = H.setRuntimeTypeInfo([false], t4);\n      for (t5 = complex.components, t6 = t5.length, t7 = _this.parent, _i = 0; _i < t6; ++_i) {\n        component = t5[_i];\n        if (component instanceof X.CompoundSelector) {\n          resolved = t1._resolveParentSelectorsCompound$2(component, t7);\n          if (resolved == null) {\n            for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)\n              newComplexes[_i0].push(component);\n            continue;\n          }\n          previousLineBreaks = _box_0.lineBreaks;\n          newComplexes0 = H.setRuntimeTypeInfo([], t3);\n          _box_0.lineBreaks = H.setRuntimeTypeInfo([], t4);\n          for (t8 = newComplexes.length, t9 = J.getInterceptor$ax(resolved), i = 0, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0, i = i0) {\n            newComplex = newComplexes[_i0];\n            i0 = i + 1;\n            lineBreak = previousLineBreaks[i];\n            for (t10 = t9.get$iterator(resolved), t11 = !lineBreak; t10.moveNext$0();) {\n              t12 = t10.get$current(t10);\n              t13 = H.setRuntimeTypeInfo([], t2);\n              for (t14 = C.JSArray_methods.get$iterator(newComplex); t14.moveNext$0();)\n                t13.push(t14.get$current(t14));\n              for (t14 = t12.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1)\n                t13.push(t14[_i1]);\n              newComplexes0.push(t13);\n              t13 = _box_0.lineBreaks;\n              t13.push(!t11 || t12.lineBreak);\n            }\n          }\n          newComplexes = newComplexes0;\n        } else\n          for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)\n            newComplexes[_i0].push(component);\n      }\n      _box_0.i = 0;\n      return new H.MappedListIterable(newComplexes, new D.SelectorList_resolveParentSelectors__closure0(_box_0), H._arrayInstanceType(newComplexes)._eval$1(\"MappedListIterable<1,ComplexSelector*>\"));\n    },\n    $signature: 89\n  };\n  D.SelectorList_resolveParentSelectors__closure.prototype = {\n    call$1: function(parentComplex) {\n      var t2, t3, _i, t4,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);\n      for (t2 = parentComplex.components, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i]);\n      for (t2 = this.complex, t3 = t2.components, t4 = t3.length, _i = 0; _i < t4; ++_i)\n        t1.push(t3[_i]);\n      return S.ComplexSelector$(t1, t2.lineBreak || parentComplex.lineBreak);\n    },\n    $signature: 91\n  };\n  D.SelectorList_resolveParentSelectors__closure0.prototype = {\n    call$1: function(newComplex) {\n      var t1 = this._box_0;\n      return S.ComplexSelector$(newComplex, t1.lineBreaks[t1.i++]);\n    },\n    $signature: 71\n  };\n  D.SelectorList__complexContainsParentSelector_closure.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector && C.JSArray_methods.any$1(component.components, new D.SelectorList__complexContainsParentSelector__closure());\n    },\n    $signature: 84\n  };\n  D.SelectorList__complexContainsParentSelector__closure.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (!(simple instanceof M.ParentSelector))\n        if (simple instanceof D.PseudoSelector) {\n          t1 = simple.selector;\n          t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_complexContainsParentSelector());\n        } else\n          t1 = false;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 19\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (simple instanceof D.PseudoSelector) {\n        t1 = simple.selector;\n        t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_complexContainsParentSelector());\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 19\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure0.prototype = {\n    call$1: function(simple) {\n      var t1, t2, t3;\n      if (simple instanceof D.PseudoSelector) {\n        t1 = simple.selector;\n        if (t1 == null)\n          return simple;\n        if (!C.JSArray_methods.any$1(t1.components, t1.get$_complexContainsParentSelector()))\n          return simple;\n        t1 = t1.resolveParentSelectors$2$implicitParent(this.parent, false);\n        t2 = simple.name;\n        t3 = simple.isClass;\n        return D.PseudoSelector$(t2, simple.argument, !t3, t1);\n      } else\n        return simple;\n    },\n    $signature: 303\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure1.prototype = {\n    call$1: function(complex) {\n      var suffix, t2, t3, t4, cur, last, _i,\n        t1 = complex.components,\n        lastComponent = C.JSArray_methods.get$last(t1);\n      if (!(lastComponent instanceof X.CompoundSelector))\n        throw H.wrapException(E.SassScriptException$('Parent \"' + complex.toString$0(0) + '\" is incompatible with this selector.'));\n      suffix = type$.legacy_ParentSelector._as(C.JSArray_methods.get$first(this.compound.components)).suffix;\n      t2 = type$.JSArray_legacy_SimpleSelector;\n      if (suffix != null) {\n        t2 = H.setRuntimeTypeInfo([], t2);\n        for (t3 = lastComponent.components, t4 = H.SubListIterable$(t3, 0, t3.length - 1, H._arrayInstanceType(t3)._precomputed1), t4 = new H.ListIterator(t4, t4.get$length(t4)); t4.moveNext$0();) {\n          cur = t4.__internal$_current;\n          t2.push(cur);\n        }\n        t2.push(C.JSArray_methods.get$last(t3).addSuffix$1(suffix));\n        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {\n          cur = t3.__internal$_current;\n          t2.push(cur);\n        }\n        last = X.CompoundSelector$(t2);\n      } else {\n        t2 = H.setRuntimeTypeInfo([], t2);\n        for (t3 = lastComponent.components, t4 = t3.length, _i = 0; _i < t4; ++_i)\n          t2.push(t3[_i]);\n        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {\n          cur = t3.__internal$_current;\n          t2.push(cur);\n        }\n        last = X.CompoundSelector$(t2);\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);\n      for (t1 = H.SubListIterable$(t1, 0, t1.length - 1, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2.push(cur);\n      }\n      t2.push(last);\n      return S.ComplexSelector$(t2, complex.lineBreak);\n    },\n    $signature: 91\n  };\n  M.ParentSelector.prototype = {\n    accept$1$1: function(visitor) {\n      var t2,\n        t1 = visitor._serialize$_buffer;\n      t1.writeCharCode$1(38);\n      t2 = this.suffix;\n      if (t2 != null)\n        t1.write$1(0, t2);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(compound) {\n      return H.throwExpression(P.UnsupportedError$(\"& doesn't support unification.\"));\n    }\n  };\n  N.PlaceholderSelector.prototype = {\n    get$isInvisible: function() {\n      return true;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._serialize$_buffer;\n      t1.writeCharCode$1(37);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new N.PlaceholderSelector(this.name + suffix);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.PlaceholderSelector && other.name === this.name;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  D.PseudoSelector.prototype = {\n    get$minSpecificity: function() {\n      if (this._pseudo$_minSpecificity == null)\n        this._pseudo$_computeSpecificity$0();\n      return this._pseudo$_minSpecificity;\n    },\n    get$maxSpecificity: function() {\n      if (this._pseudo$_maxSpecificity == null)\n        this._pseudo$_computeSpecificity$0();\n      return this._pseudo$_maxSpecificity;\n    },\n    get$isInvisible: function() {\n      var t1 = this.selector;\n      if (t1 == null)\n        return false;\n      return this.name !== \"not\" && t1.get$isInvisible();\n    },\n    addSuffix$1: function(suffix) {\n      var _this = this;\n      if (_this.argument != null || _this.selector != null)\n        _this.super$SimpleSelector$addSuffix(suffix);\n      return D.PseudoSelector$(_this.name + suffix, null, !_this.isClass, null);\n    },\n    unify$1: function(compound) {\n      var result, t1, t2, addedThis, _i, simple, _this = this;\n      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector)\n        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector));\n      if (C.JSArray_methods.contains$1(compound, _this))\n        return compound;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n      for (t1 = compound.length, t2 = !_this.isClass, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {\n        simple = compound[_i];\n        if (simple instanceof D.PseudoSelector && !simple.isClass) {\n          if (t2)\n            return null;\n          result.push(_this);\n          addedThis = true;\n        }\n        result.push(simple);\n      }\n      if (!addedThis)\n        result.push(_this);\n      return result;\n    },\n    _pseudo$_computeSpecificity$0: function() {\n      var t1, _i, t2, complex, t3, t4, _this = this;\n      if (!_this.isClass) {\n        _this._pseudo$_maxSpecificity = _this._pseudo$_minSpecificity = 1;\n        return;\n      }\n      t1 = _this.selector;\n      if (t1 == null) {\n        _this._pseudo$_minSpecificity = M.SimpleSelector.prototype.get$minSpecificity.call(_this);\n        _this._pseudo$_maxSpecificity = M.SimpleSelector.prototype.get$maxSpecificity.call(_this);\n        return;\n      }\n      if (_this.name === \"not\") {\n        _i = _this._pseudo$_maxSpecificity = _this._pseudo$_minSpecificity = 0;\n        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {\n          complex = t1[_i];\n          t3 = _this._pseudo$_minSpecificity;\n          if (complex._minSpecificity == null)\n            complex._computeSpecificity$0();\n          t4 = complex._minSpecificity;\n          _this._pseudo$_minSpecificity = Math.max(H.checkNum(t3), H.checkNum(t4));\n          t4 = _this._pseudo$_maxSpecificity;\n          if (complex._maxSpecificity == null)\n            complex._computeSpecificity$0();\n          t3 = complex._maxSpecificity;\n          _this._pseudo$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));\n        }\n      } else {\n        _this._pseudo$_minSpecificity = H._asIntS(Math.pow(M.SimpleSelector.prototype.get$minSpecificity.call(_this), 3));\n        _i = _this._pseudo$_maxSpecificity = 0;\n        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {\n          complex = t1[_i];\n          t3 = _this._pseudo$_minSpecificity;\n          if (complex._minSpecificity == null)\n            complex._computeSpecificity$0();\n          t4 = complex._minSpecificity;\n          _this._pseudo$_minSpecificity = Math.min(H.checkNum(t3), H.checkNum(t4));\n          t4 = _this._pseudo$_maxSpecificity;\n          if (complex._maxSpecificity == null)\n            complex._computeSpecificity$0();\n          t3 = complex._maxSpecificity;\n          _this._pseudo$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));\n        }\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitPseudoSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof D.PseudoSelector && other.name === _this.name && other.isClass === _this.isClass && other.argument == _this.argument && J.$eq$(other.selector, _this.selector);\n    },\n    get$hashCode: function(_) {\n      var _this = this;\n      return (C.JSString_methods.get$hashCode(_this.name) ^ C.JSBool_methods.get$hashCode(!_this.isClass) ^ J.get$hashCode$(_this.argument) ^ J.get$hashCode$(_this.selector)) >>> 0;\n    }\n  };\n  D.QualifiedName.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.QualifiedName && other.name === this.name && other.namespace == this.namespace;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name) ^ J.get$hashCode$(this.namespace);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace,\n        t2 = this.name;\n      return t1 == null ? t2 : t1 + \"|\" + t2;\n    }\n  };\n  M.SimpleSelector.prototype = {\n    get$minSpecificity: function() {\n      return 1000;\n    },\n    get$maxSpecificity: function() {\n      return this.get$minSpecificity();\n    },\n    addSuffix$1: function(suffix) {\n      return H.throwExpression(E.SassScriptException$('Invalid parent selector \"' + this.toString$0(0) + '\"'));\n    },\n    unify$1: function(compound) {\n      var result, t1, addedThis, _i, simple, _this = this;\n      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector)\n        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector));\n      if (C.JSArray_methods.contains$1(compound, _this))\n        return compound;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n      for (t1 = compound.length, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {\n        simple = compound[_i];\n        if (!addedThis && simple instanceof D.PseudoSelector) {\n          result.push(_this);\n          addedThis = true;\n        }\n        result.push(simple);\n      }\n      if (!addedThis)\n        result.push(_this);\n      return result;\n    }\n  };\n  F.TypeSelector.prototype = {\n    get$minSpecificity: function() {\n      return 1;\n    },\n    accept$1$1: function(visitor) {\n      visitor._serialize$_buffer.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      var t1 = this.name;\n      return new F.TypeSelector(new D.QualifiedName(t1.name + suffix, t1.namespace));\n    },\n    unify$1: function(compound) {\n      var unified, t1, t2, cur, _i;\n      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector) {\n        unified = Y.unifyUniversalAndElement(this, C.JSArray_methods.get$first(compound));\n        if (unified == null)\n          return null;\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t1.push(unified);\n        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          t1.push(cur);\n        }\n        return t1;\n      } else {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t1.push(this);\n        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)\n          t1.push(compound[_i]);\n        return t1;\n      }\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.TypeSelector && other.name.$eq(0, this.name);\n    },\n    get$hashCode: function(_) {\n      var t1 = this.name;\n      return C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace);\n    }\n  };\n  N.UniversalSelector.prototype = {\n    get$minSpecificity: function() {\n      return 0;\n    },\n    accept$1$1: function(visitor) {\n      var t2,\n        t1 = this.namespace;\n      if (t1 != null) {\n        t2 = visitor._serialize$_buffer;\n        t2.write$1(0, t1);\n        t2.writeCharCode$1(124);\n      }\n      visitor._serialize$_buffer.writeCharCode$1(42);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(compound) {\n      var unified, t1, t2, cur, _i, _this = this;\n      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector) {\n        unified = Y.unifyUniversalAndElement(_this, C.JSArray_methods.get$first(compound));\n        if (unified == null)\n          return null;\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t1.push(unified);\n        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          t1.push(cur);\n        }\n        return t1;\n      }\n      t1 = _this.namespace;\n      if (t1 != null && t1 !== \"*\") {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector);\n        t1.push(_this);\n        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)\n          t1.push(compound[_i]);\n        return t1;\n      }\n      if (compound.length !== 0)\n        return compound;\n      return H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.UniversalSelector && other.namespace == this.namespace;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.namespace);\n    }\n  };\n  X._compileStylesheet_closure0.prototype = {\n    call$1: function(url) {\n      var t1, t2, _null = null;\n      if (url === \"\")\n        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();\n      else {\n        t1 = P.Uri_parse(url);\n        t2 = this.importCache._async_import_cache$_resultsCache.$index(0, t1);\n        t2 = t2 == null ? _null : t2.get$sourceMapUrl();\n        t1 = (t2 == null ? t1 : t2).toString$0(0);\n      }\n      return t1;\n    },\n    $signature: 8\n  };\n  X.CompileResult.prototype = {};\n  Q.AsyncEnvironment.prototype = {\n    closure$0: function() {\n      var t5, t6, t7, _this = this,\n        t1 = _this._async_environment$_forwardedModules,\n        t2 = _this._async_environment$_forwardedModuleNodes,\n        t3 = _this._async_environment$_nestedForwardedModules,\n        t4 = _this._async_environment$_variables;\n      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));\n      t5 = _this._async_environment$_variableNodes;\n      if (t5 == null)\n        t5 = null;\n      else\n        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));\n      t6 = _this._async_environment$_functions;\n      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));\n      t7 = _this._async_environment$_mixins;\n      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));\n      return Q.AsyncEnvironment$_(_this._async_environment$_modules, _this._async_environment$_namespaceNodes, _this._async_environment$_globalModules, _this._async_environment$_globalModuleNodes, t1, t2, t3, _this._async_environment$_allModules, t4, t5, t6, t7, _this._async_environment$_content);\n    },\n    addModule$3$namespace: function(module, nodeWithSpan, namespace) {\n      var t1, t2, _this = this;\n      if (namespace == null) {\n        _this._async_environment$_globalModules.add$1(0, module);\n        _this._async_environment$_globalModuleNodes.$indexSet(0, module, nodeWithSpan);\n        _this._async_environment$_allModules.push(module);\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._async_environment$_variables))); t1.moveNext$0();) {\n          t2 = t1.get$current(t1);\n          if (module.get$variables().containsKey$1(t2))\n            throw H.wrapException(E.SassScriptException$(string$.This_ma + H.S(t2) + '\".'));\n        }\n      } else {\n        t1 = _this._async_environment$_modules;\n        if (t1.containsKey$1(namespace))\n          throw H.wrapException(E.MultiSpanSassScriptException$(string$.There_ + namespace + '\".', \"new @use\", P.LinkedHashMap_LinkedHashMap$_literal([_this._async_environment$_namespaceNodes.$index(0, namespace).get$span(), \"original @use\"], type$.legacy_FileSpan, type$.legacy_String)));\n        t1.$indexSet(0, namespace, module);\n        _this._async_environment$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);\n        _this._async_environment$_allModules.push(module);\n      }\n    },\n    forwardModule$2: function(module, rule) {\n      var view, t1, t2, _this = this;\n      if (_this._async_environment$_forwardedModules == null)\n        _this._async_environment$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable);\n      if (_this._async_environment$_forwardedModuleNodes == null)\n        _this._async_environment$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable, type$.legacy_AstNode);\n      view = R.ForwardedModuleView_ifNecessary(module, rule, type$.legacy_AsyncCallable);\n      for (t1 = _this._async_environment$_forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        t2 = t1._collection$_current;\n        _this._async_environment$_assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, \"variable\", rule);\n        _this._async_environment$_assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, \"function\", rule);\n        _this._async_environment$_assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, \"mixin\", rule);\n      }\n      _this._async_environment$_allModules.push(module);\n      _this._async_environment$_forwardedModules.add$1(0, view);\n      _this._async_environment$_forwardedModuleNodes.$indexSet(0, view, rule);\n    },\n    _async_environment$_assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {\n      var larger, smaller, t1, t2, $name;\n      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {\n        larger = oldMembers;\n        smaller = newMembers;\n      } else {\n        larger = newMembers;\n        smaller = oldMembers;\n      }\n      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === \"variable\"; t1.moveNext$0();) {\n        $name = t1.get$current(t1);\n        if (!larger.containsKey$1($name))\n          continue;\n        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))\n          continue;\n        if (t2)\n          $name = \"$\" + H.S($name);\n        throw H.wrapException(E.MultiSpanSassScriptException$(\"Two forwarded modules both define a \" + type + \" named \" + H.S($name) + \".\", \"new @forward\", P.LinkedHashMap_LinkedHashMap$_literal([this._async_environment$_forwardedModuleNodes.$index(0, oldModule).get$span(), \"original @forward\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n    },\n    importForwards$1: function(module) {\n      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,\n        t1 = module._async_environment$_environment,\n        forwarded = t1._async_environment$_forwardedModules;\n      if (forwarded == null)\n        return;\n      if (_this._async_environment$_forwardedModules != null) {\n        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_AsyncCallable);\n        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._async_environment$_globalModules; t3.moveNext$0();) {\n          t5 = t3._collection$_current;\n          if (!_this._async_environment$_forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))\n            t2.add$1(0, t5);\n        }\n        forwarded = t2;\n      }\n      if (_this._async_environment$_forwardedModules == null)\n        _this._async_environment$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable);\n      if (_this._async_environment$_forwardedModuleNodes == null)\n        _this._async_environment$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable, type$.legacy_AstNode);\n      t2 = H._instanceType(forwarded)._eval$1(\"ExpandIterable<1,String*>\");\n      t3 = t2._eval$1(\"Iterable.E\");\n      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure(), t2), t3);\n      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure0(), t2), t3);\n      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure1(), t2), t3);\n      t2 = _this._async_environment$_variables;\n      t3 = t2.length;\n      if (t3 === 1) {\n        for (t3 = _this._async_environment$_globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_AsyncCallable, t7 = _this._async_environment$_globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            t3.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              t3.add$1(0, shadowed);\n              t7.$indexSet(0, shadowed, t7.remove$1(0, module));\n            }\n          }\n        }\n        t4 = _this._async_environment$_forwardedModules;\n        t4.toString;\n        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);\n        t5 = t4.length;\n        _i = 0;\n        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            _this._async_environment$_forwardedModules.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              _this._async_environment$_forwardedModules.add$1(0, shadowed);\n              t8 = _this._async_environment$_forwardedModuleNodes;\n              t8.$indexSet(0, shadowed, t8.remove$1(0, module));\n            }\n          }\n        }\n        t3.addAll$1(0, forwarded);\n        t7.addAll$1(0, t1._async_environment$_forwardedModuleNodes);\n        _this._async_environment$_forwardedModules.addAll$1(0, forwarded);\n        _this._async_environment$_forwardedModuleNodes.addAll$1(0, t1._async_environment$_forwardedModuleNodes);\n      } else {\n        t1 = _this._async_environment$_nestedForwardedModules;\n        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._async_environment$_nestedForwardedModules = P.List_List$generate(t3 - 1, new Q.AsyncEnvironment_importForwards_closure2(), true, type$.legacy_List_legacy_Module_legacy_AsyncCallable) : t1), forwarded);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._async_environment$_variableNodes, t4 = t3 != null, t5 = _this._async_environment$_variableIndices; t1.moveNext$0();) {\n        t6 = t1._collection$_current;\n        t5.remove$1(0, t6);\n        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);\n        if (t4)\n          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._async_environment$_functionIndices, t3 = _this._async_environment$_functions; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._async_environment$_mixinIndices, t3 = _this._async_environment$_mixins; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n    },\n    getVariable$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment$_getModule$1(namespace).get$variables().$index(0, $name);\n      if (_this._async_environment$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._async_environment$_variables[_this._async_environment$_lastVariableIndex], $name);\n        return t1 == null ? _this._async_environment$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._async_environment$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._async_environment$_lastVariableName = $name;\n        _this._async_environment$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._async_environment$_variables[index], $name);\n        return t1 == null ? _this._async_environment$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment$_variableIndex$1($name);\n      if (index == null)\n        return _this._async_environment$_getVariableFromGlobalModule$1($name);\n      _this._async_environment$_lastVariableName = $name;\n      _this._async_environment$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment$_variables[index], $name);\n      return t1 == null ? _this._async_environment$_getVariableFromGlobalModule$1($name) : t1;\n    },\n    getVariable$1: function($name) {\n      return this.getVariable$2$namespace($name, null);\n    },\n    _async_environment$_getVariableFromGlobalModule$1: function($name) {\n      return this._async_environment$_fromOneModule$3($name, \"variable\", new Q.AsyncEnvironment__getVariableFromGlobalModule_closure($name));\n    },\n    getVariableNode$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment$_getModule$1(namespace).get$variableNodes().$index(0, $name);\n      if (_this._async_environment$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._async_environment$_variableNodes[_this._async_environment$_lastVariableIndex], $name);\n        return t1 == null ? _this._async_environment$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._async_environment$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._async_environment$_lastVariableName = $name;\n        _this._async_environment$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._async_environment$_variableNodes[index], $name);\n        return t1 == null ? _this._async_environment$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment$_variableIndex$1($name);\n      if (index == null)\n        return _this._async_environment$_getVariableNodeFromGlobalModule$1($name);\n      _this._async_environment$_lastVariableName = $name;\n      _this._async_environment$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment$_variableNodes[index], $name);\n      return t1 == null ? _this._async_environment$_getVariableNodeFromGlobalModule$1($name) : t1;\n    },\n    _async_environment$_getVariableNodeFromGlobalModule$1: function($name) {\n      var t1, value;\n      for (t1 = this._async_environment$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        value = t1._collection$_current.get$variableNodes().$index(0, $name);\n        if (value != null)\n          return value;\n      }\n      return null;\n    },\n    globalVariableExists$2$namespace: function($name, namespace) {\n      if (namespace != null)\n        return this._async_environment$_getModule$1(namespace).get$variables().containsKey$1($name);\n      if (C.JSArray_methods.get$first(this._async_environment$_variables).containsKey$1($name))\n        return true;\n      return this._async_environment$_getVariableFromGlobalModule$1($name) != null;\n    },\n    globalVariableExists$1: function($name) {\n      return this.globalVariableExists$2$namespace($name, null);\n    },\n    _async_environment$_variableIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment$_variables, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {\n      var t1, moduleWithName, cur, t2, index, _this = this;\n      if (namespace != null) {\n        _this._async_environment$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      if (global || _this._async_environment$_variables.length === 1) {\n        _this._async_environment$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure(_this, $name));\n        t1 = _this._async_environment$_variables;\n        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {\n          moduleWithName = _this._async_environment$_fromOneModule$3($name, \"variable\", new Q.AsyncEnvironment_setVariable_closure0($name));\n          if (moduleWithName != null) {\n            moduleWithName.setVariable$3($name, value, nodeWithSpan);\n            return;\n          }\n        }\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);\n        t1 = _this._async_environment$_variableNodes;\n        if (t1 != null)\n          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n        return;\n      }\n      if (_this._async_environment$_nestedForwardedModules != null && !_this._async_environment$_variableIndices.containsKey$1($name) && _this._async_environment$_variableIndex$1($name) == null) {\n        t1 = _this._async_environment$_nestedForwardedModules;\n        t1.toString;\n        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\"));\n        t1 = new H.ListIterator(t1, t1.get$length(t1));\n        for (; t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            if (cur.get$variables().containsKey$1($name)) {\n              cur.setVariable$3($name, value, nodeWithSpan);\n              return;\n            }\n          }\n        }\n      }\n      index = _this._async_environment$_lastVariableName === $name ? _this._async_environment$_lastVariableIndex : _this._async_environment$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure1(_this, $name));\n      if (!_this._async_environment$_inSemiGlobalScope && index === 0) {\n        index = _this._async_environment$_variables.length - 1;\n        _this._async_environment$_variableIndices.$indexSet(0, $name, index);\n      }\n      _this._async_environment$_lastVariableName = $name;\n      _this._async_environment$_lastVariableIndex = index;\n      J.$indexSet$ax(_this._async_environment$_variables[index], $name, value);\n      t1 = _this._async_environment$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    setVariable$4$global: function($name, value, nodeWithSpan, global) {\n      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);\n    },\n    setLocalVariable$3: function($name, value, nodeWithSpan) {\n      var index, _this = this,\n        t1 = _this._async_environment$_variables,\n        t2 = t1.length;\n      _this._async_environment$_lastVariableName = $name;\n      index = _this._async_environment$_lastVariableIndex = t2 - 1;\n      _this._async_environment$_variableIndices.$indexSet(0, $name, index);\n      J.$indexSet$ax(t1[index], $name, value);\n      t1 = _this._async_environment$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    getFunction$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null) {\n        t1 = _this._async_environment$_getModule$1(namespace);\n        return t1.get$functions(t1).$index(0, $name);\n      }\n      t1 = _this._async_environment$_functionIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._async_environment$_functions[index], $name);\n        return t1 == null ? _this._async_environment$_getFunctionFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment$_functionIndex$1($name);\n      if (index == null)\n        return _this._async_environment$_getFunctionFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment$_functions[index], $name);\n      return t1 == null ? _this._async_environment$_getFunctionFromGlobalModule$1($name) : t1;\n    },\n    _async_environment$_getFunctionFromGlobalModule$1: function($name) {\n      return this._async_environment$_fromOneModule$3($name, \"function\", new Q.AsyncEnvironment__getFunctionFromGlobalModule_closure($name));\n    },\n    _async_environment$_functionIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment$_functions, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    getMixin$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment$_getModule$1(namespace).get$mixins().$index(0, $name);\n      t1 = _this._async_environment$_mixinIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._async_environment$_mixins[index], $name);\n        return t1 == null ? _this._async_environment$_getMixinFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment$_mixinIndex$1($name);\n      if (index == null)\n        return _this._async_environment$_getMixinFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment$_mixins[index], $name);\n      return t1 == null ? _this._async_environment$_getMixinFromGlobalModule$1($name) : t1;\n    },\n    _async_environment$_getMixinFromGlobalModule$1: function($name) {\n      return this._async_environment$_fromOneModule$3($name, \"mixin\", new Q.AsyncEnvironment__getMixinFromGlobalModule_closure($name));\n    },\n    _async_environment$_mixinIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment$_mixins, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    withContent$2: function($content, callback) {\n      return this.withContent$body$AsyncEnvironment($content, callback);\n    },\n    withContent$body$AsyncEnvironment: function($content, callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, oldContent;\n      var $async$withContent$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldContent = $async$self._async_environment$_content;\n              $async$self._async_environment$_content = $content;\n              $async$goto = 2;\n              return P._asyncAwait(callback.call$0(), $async$withContent$2);\n            case 2:\n              // returning from await.\n              $async$self._async_environment$_content = oldContent;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$withContent$2, $async$completer);\n    },\n    asMixin$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, oldInMixin;\n      var $async$asMixin$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldInMixin = $async$self._async_environment$_inMixin;\n              $async$self._async_environment$_inMixin = true;\n              $async$goto = 2;\n              return P._asyncAwait(callback.call$0(), $async$asMixin$1);\n            case 2:\n              // returning from await.\n              $async$self._async_environment$_inMixin = oldInMixin;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$asMixin$1, $async$completer);\n    },\n    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when, $T) {\n      return this.scope$body$AsyncEnvironment(callback, semiGlobal, when, $T, $T._eval$1(\"0*\"));\n    },\n    scope$1$1: function(callback, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);\n    },\n    scope$1$2$when: function(callback, when, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);\n    },\n    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);\n    },\n    scope$body$AsyncEnvironment: function(callback, semiGlobal, when, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5;\n      var $async$scope$1$3$semiGlobal$when = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = !when ? 3 : 4;\n              break;\n            case 3:\n              // then\n              wasInSemiGlobalScope = $async$self._async_environment$_inSemiGlobalScope;\n              $async$self._async_environment$_inSemiGlobalScope = semiGlobal;\n              $async$handler = 5;\n              $async$goto = 8;\n              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);\n            case 8:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              $async$next = [1];\n              // goto finally\n              $async$goto = 6;\n              break;\n              $async$next.push(7);\n              // goto finally\n              $async$goto = 6;\n              break;\n            case 5:\n              // uncaught\n              $async$next = [2];\n            case 6:\n              // finally\n              $async$handler = 2;\n              $async$self._async_environment$_inSemiGlobalScope = wasInSemiGlobalScope;\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 7:\n              // after finally\n            case 4:\n              // join\n              semiGlobal = semiGlobal && $async$self._async_environment$_inSemiGlobalScope;\n              wasInSemiGlobalScope0 = $async$self._async_environment$_inSemiGlobalScope;\n              $async$self._async_environment$_inSemiGlobalScope = semiGlobal;\n              t1 = $async$self._async_environment$_variables;\n              t2 = type$.legacy_String;\n              C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value));\n              t3 = $async$self._async_environment$_variableNodes;\n              if (t3 != null)\n                C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode));\n              t3 = $async$self._async_environment$_functions;\n              t4 = type$.legacy_AsyncCallable;\n              C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n              t5 = $async$self._async_environment$_mixins;\n              C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n              t4 = $async$self._async_environment$_nestedForwardedModules;\n              if (t4 != null)\n                C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable));\n              $async$handler = 9;\n              $async$goto = 12;\n              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);\n            case 12:\n              // returning from await.\n              t2 = $async$result;\n              $async$returnValue = t2;\n              $async$next = [1];\n              // goto finally\n              $async$goto = 10;\n              break;\n              $async$next.push(11);\n              // goto finally\n              $async$goto = 10;\n              break;\n            case 9:\n              // uncaught\n              $async$next = [2];\n            case 10:\n              // finally\n              $async$handler = 2;\n              $async$self._async_environment$_inSemiGlobalScope = wasInSemiGlobalScope0;\n              $async$self._async_environment$_lastVariableIndex = $async$self._async_environment$_lastVariableName = null;\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = $async$self._async_environment$_variableIndices; t1.moveNext$0();) {\n                $name = t1.get$current(t1);\n                t2.remove$1(0, $name);\n              }\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = $async$self._async_environment$_functionIndices; t1.moveNext$0();) {\n                name0 = t1.get$current(t1);\n                t2.remove$1(0, name0);\n              }\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = $async$self._async_environment$_mixinIndices; t1.moveNext$0();) {\n                name1 = t1.get$current(t1);\n                t2.remove$1(0, name1);\n              }\n              t1 = $async$self._async_environment$_nestedForwardedModules;\n              if (t1 != null)\n                C.JSArray_methods.removeLast$0(t1);\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 11:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$scope$1$3$semiGlobal$when, $async$completer);\n    },\n    toImplicitConfiguration$0: function() {\n      var t2, t3, t4, t5, i, values, nodes, t6, t7,\n        t1 = type$.legacy_String,\n        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue);\n      for (t2 = this._async_environment$_variables, t3 = this._async_environment$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode, i = 0; i < t2.length; ++i) {\n        values = t2[i];\n        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];\n        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {\n          t7 = t6.get$current(t6);\n          configuration.$indexSet(0, t7, new Z.ConfiguredValue(values.$index(0, t7), null, nodes.$index(0, t7)));\n        }\n      }\n      return new A.Configuration(configuration, null, true);\n    },\n    _async_environment$_getModule$1: function(namespace) {\n      var module = this._async_environment$_modules.$index(0, namespace);\n      if (module != null)\n        return module;\n      throw H.wrapException(E.SassScriptException$('There is no module with the namespace \"' + namespace + '\".'));\n    },\n    _async_environment$_fromOneModule$1$3: function($name, type, callback) {\n      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,\n        t1 = this._async_environment$_nestedForwardedModules;\n      if (t1 != null)\n        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            value = callback.call$1(cur);\n            if (value != null)\n              return value;\n          }\n        }\n      for (t1 = this._async_environment$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_AsyncCallable, value = null, identity = null; t1.moveNext$0();) {\n        t3 = t1._collection$_current;\n        valueInModule = callback.call$1(t3);\n        if (valueInModule == null)\n          continue;\n        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);\n        if (identityFromModule.$eq(0, identity))\n          continue;\n        if (value != null) {\n          t1 = \"This \" + type + string$.x20is_av;\n          t2 = type + \" use\";\n          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          for (t4 = this._async_environment$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            if (callback.call$1(t5.key) != null)\n              t3.$indexSet(0, t5.value.get$span(), \"includes \" + type);\n          }\n          throw H.wrapException(E.MultiSpanSassScriptException$(t1, t2, t3));\n        }\n        identity = identityFromModule;\n        value = valueInModule;\n      }\n      return value;\n    },\n    _async_environment$_fromOneModule$3: function($name, type, callback) {\n      return this._async_environment$_fromOneModule$1$3($name, type, callback, type$.dynamic);\n    }\n  };\n  Q.AsyncEnvironment_importForwards_closure.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$variables();\n      return t1.get$keys(t1);\n    },\n    $signature: 81\n  };\n  Q.AsyncEnvironment_importForwards_closure0.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$functions(module);\n      return t1.get$keys(t1);\n    },\n    $signature: 81\n  };\n  Q.AsyncEnvironment_importForwards_closure1.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$mixins();\n      return t1.get$keys(t1);\n    },\n    $signature: 81\n  };\n  Q.AsyncEnvironment_importForwards_closure2.prototype = {\n    call$1: function(_) {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable);\n    },\n    $signature: 311\n  };\n  Q.AsyncEnvironment__getVariableFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$variables().$index(0, this.name);\n    },\n    $signature: 238\n  };\n  Q.AsyncEnvironment_setVariable_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._async_environment$_lastVariableName = this.name;\n      return t1._async_environment$_lastVariableIndex = 0;\n    },\n    $signature: 11\n  };\n  Q.AsyncEnvironment_setVariable_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$variables().containsKey$1(this.name) ? module : null;\n    },\n    $signature: 215\n  };\n  Q.AsyncEnvironment_setVariable_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._async_environment$_variableIndex$1(this.name);\n      return t2 == null ? t1._async_environment$_variables.length - 1 : t2;\n    },\n    $signature: 11\n  };\n  Q.AsyncEnvironment__getFunctionFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module).$index(0, this.name);\n    },\n    $signature: 184\n  };\n  Q.AsyncEnvironment__getMixinFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$mixins().$index(0, this.name);\n    },\n    $signature: 184\n  };\n  Q._EnvironmentModule0.prototype = {\n    get$url: function() {\n      return this.css.get$span().file.url;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var t1, t2,\n        module = this._async_environment$_modulesByVariable.$index(0, $name);\n      if (module != null) {\n        module.setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      t1 = this._async_environment$_environment;\n      t2 = t1._async_environment$_variables;\n      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$(\"Undefined variable.\"));\n      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);\n      t1 = t1._async_environment$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n      return;\n    },\n    variableIdentity$1: function($name) {\n      var module = this._async_environment$_modulesByVariable.$index(0, $name);\n      return module == null ? this : module.variableIdentity$1($name);\n    },\n    cloneCss$0: function() {\n      var newCssAndExtender, _this = this,\n        t1 = _this.css;\n      if (J.get$isEmpty$asx(t1.get$children(t1)))\n        return _this;\n      newCssAndExtender = V.cloneCssStylesheet(t1, _this.extender);\n      return Q._EnvironmentModule$_0(_this._async_environment$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._async_environment$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);\n    },\n    toString$0: function(_) {\n      var t1 = this.css;\n      if (t1.get$span().file.url == null)\n        t1 = \"<unknown url>\";\n      else {\n        t1 = t1.get$span().file;\n        t1 = $.$get$context().prettyUri$1(t1.url);\n      }\n      return t1;\n    },\n    $isModule: 1,\n    get$upstream: function() {\n      return this.upstream;\n    },\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$extender: function() {\n      return this.extender;\n    },\n    get$css: function(receiver) {\n      return this.css;\n    },\n    get$transitivelyContainsCss: function() {\n      return this.transitivelyContainsCss;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this.transitivelyContainsExtensions;\n    }\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure5.prototype = {\n    call$1: function(module) {\n      return module.get$variables();\n    },\n    $signature: 319\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure6.prototype = {\n    call$1: function(module) {\n      return module.get$variableNodes();\n    },\n    $signature: 321\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure7.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module);\n    },\n    $signature: 182\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure8.prototype = {\n    call$1: function(module) {\n      return module.get$mixins();\n    },\n    $signature: 182\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure9.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 100\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure10.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsExtensions();\n    },\n    $signature: 100\n  };\n  O.AsyncImportCache.prototype = {\n    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      return this.canonicalize$body$AsyncImportCache(url, baseImporter, baseUrl, forImport);\n    },\n    canonicalize$body$AsyncImportCache: function(url, baseImporter, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2),\n        $async$returnValue, $async$self = this, resolvedUrl, canonicalUrl;\n      var $async$canonicalize$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = baseImporter != null ? 3 : 4;\n              break;\n            case 3:\n              // then\n              resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;\n              $async$goto = 5;\n              return P._asyncAwait($async$self._async_import_cache$_canonicalize$3(baseImporter, resolvedUrl, forImport), $async$canonicalize$4$baseImporter$baseUrl$forImport);\n            case 5:\n              // returning from await.\n              canonicalUrl = $async$result;\n              if (canonicalUrl != null) {\n                $async$returnValue = new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // join\n              $async$goto = 6;\n              return P._asyncAwait(B.putIfAbsentAsync($async$self._async_import_cache$_canonicalizeCache, new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new O.AsyncImportCache_canonicalize_closure($async$self, url, forImport), type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2), $async$canonicalize$4$baseImporter$baseUrl$forImport);\n            case 6:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$canonicalize$4$baseImporter$baseUrl$forImport, $async$completer);\n    },\n    _async_import_cache$_canonicalize$3: function(importer, url, forImport) {\n      return this._canonicalize$body$AsyncImportCache(importer, url, forImport);\n    },\n    _canonicalize$body$AsyncImportCache: function(importer, url, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Uri),\n        $async$returnValue, $async$self = this, result;\n      var $async$_async_import_cache$_canonicalize$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(forImport ? B.inImportRule(new O.AsyncImportCache__canonicalize_closure(importer, url)) : importer.canonicalize$1(url), $async$_async_import_cache$_canonicalize$3);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if ((result == null ? null : result.get$scheme()) === \"\")\n                $async$self._async_import_cache$_logger.warn$2$deprecation(0, \"Importer \" + H.S(importer) + \" canonicalized \" + url.toString$0(0) + \" to \" + H.S(result) + string$.x2ex0aRela, true);\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_import_cache$_canonicalize$3, $async$completer);\n    },\n    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      return this.import$body$AsyncImportCache(url, baseImporter, baseUrl, forImport);\n    },\n    import$body$AsyncImportCache: function(url, baseImporter, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet),\n        $async$returnValue, $async$self = this, t1, stylesheet, tuple;\n      var $async$import$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport), $async$import$4$baseImporter$baseUrl$forImport);\n            case 3:\n              // returning from await.\n              tuple = $async$result;\n              if (tuple == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = tuple.item1;\n              $async$goto = 4;\n              return P._asyncAwait($async$self.importCanonical$3(t1, tuple.item2, tuple.item3), $async$import$4$baseImporter$baseUrl$forImport);\n            case 4:\n              // returning from await.\n              stylesheet = $async$result;\n              if (stylesheet == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$import$4$baseImporter$baseUrl$forImport, $async$completer);\n    },\n    importCanonical$3: function(importer, canonicalUrl, originalUrl) {\n      return this.importCanonical$body$AsyncImportCache(importer, canonicalUrl, originalUrl);\n    },\n    importCanonical$body$AsyncImportCache: function(importer, canonicalUrl, originalUrl) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet_2),\n        $async$returnValue, $async$self = this;\n      var $async$importCanonical$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(B.putIfAbsentAsync($async$self._async_import_cache$_importCache, canonicalUrl, new O.AsyncImportCache_importCanonical_closure($async$self, importer, canonicalUrl, originalUrl), type$.legacy_Uri, type$.legacy_Stylesheet_2), $async$importCanonical$3);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$importCanonical$3, $async$completer);\n    },\n    humanize$1: function(canonicalUrl) {\n      var t2, url,\n        t1 = this._async_import_cache$_canonicalizeCache;\n      t1 = t1.get$values(t1);\n      t2 = H._instanceType(t1);\n      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new O.AsyncImportCache_humanize_closure(canonicalUrl), t2._eval$1(\"WhereIterable<Iterable.E>\")), new O.AsyncImportCache_humanize_closure0(), t2._eval$1(\"MappedIterable<Iterable.E,Uri*>\")), new O.AsyncImportCache_humanize_closure1(), type$.legacy_Uri, type$.dynamic);\n      if (url == null)\n        return canonicalUrl;\n      t1 = $.$get$url();\n      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());\n    }\n  };\n  O.AsyncImportCache_canonicalize_closure.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, t4, t5, _i, importer, canonicalUrl;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this, t2 = t1._async_import_cache$_importers, t3 = t2.length, t4 = $async$self.url, t5 = $async$self.forImport, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2.length)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              importer = t2[_i];\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_import_cache$_canonicalize$3(importer, t4, t5), $async$call$0);\n            case 6:\n              // returning from await.\n              canonicalUrl = $async$result;\n              if (canonicalUrl != null) {\n                $async$returnValue = new S.Tuple3(importer, canonicalUrl, t4, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 332\n  };\n  O.AsyncImportCache__canonicalize_closure.prototype = {\n    call$0: function() {\n      return this.importer.canonicalize$1(this.url);\n    },\n    $signature: 181\n  };\n  O.AsyncImportCache_importCanonical_closure.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet_2),\n        $async$returnValue, $async$self = this, t2, t3, t4, t5, t1, result;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.canonicalUrl;\n              $async$goto = 3;\n              return P._asyncAwait($async$self.importer.load$1(0, t1), $async$call$0);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if (result == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t2 = $async$self.$this;\n              t2._async_import_cache$_resultsCache.$indexSet(0, t1, result);\n              t3 = result.contents;\n              t4 = result.syntax;\n              t5 = $async$self.originalUrl;\n              t1 = t5 == null ? t1 : t5.resolveUri$1(t1);\n              $async$returnValue = V.Stylesheet_Stylesheet$parse(t3, t4, t2._async_import_cache$_logger, t1);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 334\n  };\n  O.AsyncImportCache_humanize_closure.prototype = {\n    call$1: function(tuple) {\n      var t1 = tuple == null ? null : tuple.item2;\n      return J.$eq$(t1, this.canonicalUrl);\n    },\n    $signature: 338\n  };\n  O.AsyncImportCache_humanize_closure0.prototype = {\n    call$1: function(tuple) {\n      return tuple.item3;\n    },\n    $signature: 349\n  };\n  O.AsyncImportCache_humanize_closure1.prototype = {\n    call$1: function(url) {\n      return J.get$length$asx(J.get$path$x(url));\n    },\n    $signature: 41\n  };\n  S.AsyncBuiltInCallable.prototype = {\n    callbackFor$2: function(positional, names) {\n      return new S.Tuple2(this._async_built_in$_arguments, this._async_built_in$_callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value);\n    },\n    $isAsyncCallable: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  S.AsyncBuiltInCallable$mixin_closure.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$AsyncBuiltInCallable$mixin_closure($arguments);\n    },\n    $call$body$AsyncBuiltInCallable$mixin_closure: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.callback.call$1($arguments), $async$call$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 178\n  };\n  Q.BuiltInCallable.prototype = {\n    callbackFor$2: function(positional, names) {\n      var t1, t2, fuzzyMatch, minMismatchDistance, _i, overload, t3, mismatchDistance, t4;\n      for (t1 = this._overloads, t2 = t1.length, fuzzyMatch = null, minMismatchDistance = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        overload = t1[_i];\n        t3 = overload.item1;\n        if (t3.matches$2(positional, names))\n          return overload;\n        mismatchDistance = t3.$arguments.length - positional;\n        if (minMismatchDistance != null) {\n          t3 = Math.abs(mismatchDistance);\n          t4 = Math.abs(minMismatchDistance);\n          if (t3 > t4)\n            continue;\n          if (t3 === t4 && mismatchDistance < 0)\n            continue;\n        }\n        minMismatchDistance = mismatchDistance;\n        fuzzyMatch = overload;\n      }\n      return fuzzyMatch;\n    },\n    withName$1: function($name) {\n      return new Q.BuiltInCallable($name, this._overloads);\n    },\n    $isCallable: 1,\n    $isAsyncCallable: 1,\n    $isAsyncBuiltInCallable: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  Q.BuiltInCallable$mixin_closure.prototype = {\n    call$1: function($arguments) {\n      this.callback.call$1($arguments);\n      return null;\n    },\n    $signature: 104\n  };\n  L.PlainCssCallable.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof L.PlainCssCallable && this.name == other.name;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.name);\n    },\n    $isCallable: 1,\n    $isAsyncCallable: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  E.UserDefinedCallable.prototype = {\n    get$name: function(_) {\n      return this.declaration.name;\n    },\n    $isCallable: 1,\n    $isAsyncCallable: 1\n  };\n  U._compileStylesheet_closure.prototype = {\n    call$1: function(url) {\n      var t1, t2, _null = null;\n      if (url === \"\")\n        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();\n      else {\n        t1 = P.Uri_parse(url);\n        t2 = this.importCache._resultsCache.$index(0, t1);\n        t2 = t2 == null ? _null : t2.get$sourceMapUrl();\n        t1 = (t2 == null ? t1 : t2).toString$0(0);\n      }\n      return t1;\n    },\n    $signature: 8\n  };\n  A.Configuration.prototype = {\n    throughForward$1: function($forward) {\n      var t1, t2,\n        newValues = this._values;\n      if (newValues.get$isEmpty(newValues))\n        return C.Configuration_Map_empty_null_true;\n      t1 = $forward.prefix;\n      if (t1 != null)\n        newValues = new R.UnprefixedMapView(newValues, t1, type$.UnprefixedMapView_legacy_ConfiguredValue);\n      t1 = $forward.shownVariables;\n      if (t1 != null)\n        newValues = new K.LimitedMapView(newValues, t1._base.intersection$1(new M.MapKeySet(newValues, type$.MapKeySet_legacy_Object)), type$.LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue);\n      else {\n        t1 = $forward.hiddenVariables;\n        if (t1 == null)\n          t2 = null;\n        else {\n          t2 = t1._base;\n          t2 = t2.get$isNotEmpty(t2);\n        }\n        if (t2 === true)\n          newValues = K.LimitedMapView$blocklist(newValues, t1, type$.legacy_String, type$.legacy_ConfiguredValue);\n      }\n      return this.isImplicit ? new A.Configuration(newValues, null, true) : new A.Configuration(newValues, this.nodeWithSpan, false);\n    }\n  };\n  Z.ConfiguredValue.prototype = {};\n  O.Environment.prototype = {\n    closure$0: function() {\n      var t5, t6, t7, _this = this,\n        t1 = _this._forwardedModules,\n        t2 = _this._forwardedModuleNodes,\n        t3 = _this._nestedForwardedModules,\n        t4 = _this._variables;\n      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));\n      t5 = _this._variableNodes;\n      if (t5 == null)\n        t5 = null;\n      else\n        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));\n      t6 = _this._functions;\n      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));\n      t7 = _this._mixins;\n      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));\n      return O.Environment$_(_this._environment$_modules, _this._namespaceNodes, _this._globalModules, _this._globalModuleNodes, t1, t2, t3, _this._allModules, t4, t5, t6, t7, _this._content);\n    },\n    addModule$3$namespace: function(module, nodeWithSpan, namespace) {\n      var t1, t2, _this = this;\n      if (namespace == null) {\n        _this._globalModules.add$1(0, module);\n        _this._globalModuleNodes.$indexSet(0, module, nodeWithSpan);\n        _this._allModules.push(module);\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._variables))); t1.moveNext$0();) {\n          t2 = t1.get$current(t1);\n          if (module.get$variables().containsKey$1(t2))\n            throw H.wrapException(E.SassScriptException$(string$.This_ma + H.S(t2) + '\".'));\n        }\n      } else {\n        t1 = _this._environment$_modules;\n        if (t1.containsKey$1(namespace))\n          throw H.wrapException(E.MultiSpanSassScriptException$(string$.There_ + namespace + '\".', \"new @use\", P.LinkedHashMap_LinkedHashMap$_literal([_this._namespaceNodes.$index(0, namespace).get$span(), \"original @use\"], type$.legacy_FileSpan, type$.legacy_String)));\n        t1.$indexSet(0, namespace, module);\n        _this._namespaceNodes.$indexSet(0, namespace, nodeWithSpan);\n        _this._allModules.push(module);\n      }\n    },\n    forwardModule$2: function(module, rule) {\n      var view, t1, t2, _this = this;\n      if (_this._forwardedModules == null)\n        _this._forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable);\n      if (_this._forwardedModuleNodes == null)\n        _this._forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable, type$.legacy_AstNode);\n      view = R.ForwardedModuleView_ifNecessary(module, rule, type$.legacy_Callable);\n      for (t1 = _this._forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        t2 = t1._collection$_current;\n        _this._assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, \"variable\", rule);\n        _this._assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, \"function\", rule);\n        _this._assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, \"mixin\", rule);\n      }\n      _this._allModules.push(module);\n      _this._forwardedModules.add$1(0, view);\n      _this._forwardedModuleNodes.$indexSet(0, view, rule);\n    },\n    _assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {\n      var larger, smaller, t1, t2, $name;\n      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {\n        larger = oldMembers;\n        smaller = newMembers;\n      } else {\n        larger = newMembers;\n        smaller = oldMembers;\n      }\n      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === \"variable\"; t1.moveNext$0();) {\n        $name = t1.get$current(t1);\n        if (!larger.containsKey$1($name))\n          continue;\n        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))\n          continue;\n        if (t2)\n          $name = \"$\" + H.S($name);\n        throw H.wrapException(E.MultiSpanSassScriptException$(\"Two forwarded modules both define a \" + type + \" named \" + H.S($name) + \".\", \"new @forward\", P.LinkedHashMap_LinkedHashMap$_literal([this._forwardedModuleNodes.$index(0, oldModule).get$span(), \"original @forward\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n    },\n    importForwards$1: function(module) {\n      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,\n        t1 = module._environment,\n        forwarded = t1._forwardedModules;\n      if (forwarded == null)\n        return;\n      if (_this._forwardedModules != null) {\n        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_Callable);\n        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._globalModules; t3.moveNext$0();) {\n          t5 = t3._collection$_current;\n          if (!_this._forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))\n            t2.add$1(0, t5);\n        }\n        forwarded = t2;\n      }\n      if (_this._forwardedModules == null)\n        _this._forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable);\n      if (_this._forwardedModuleNodes == null)\n        _this._forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable, type$.legacy_AstNode);\n      t2 = H._instanceType(forwarded)._eval$1(\"ExpandIterable<1,String*>\");\n      t3 = t2._eval$1(\"Iterable.E\");\n      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure(), t2), t3);\n      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure0(), t2), t3);\n      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure1(), t2), t3);\n      t2 = _this._variables;\n      t3 = t2.length;\n      if (t3 === 1) {\n        for (t3 = _this._globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_Callable, t7 = _this._globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            t3.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              t3.add$1(0, shadowed);\n              t7.$indexSet(0, shadowed, t7.remove$1(0, module));\n            }\n          }\n        }\n        t4 = _this._forwardedModules;\n        t4.toString;\n        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);\n        t5 = t4.length;\n        _i = 0;\n        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            _this._forwardedModules.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              _this._forwardedModules.add$1(0, shadowed);\n              t8 = _this._forwardedModuleNodes;\n              t8.$indexSet(0, shadowed, t8.remove$1(0, module));\n            }\n          }\n        }\n        t3.addAll$1(0, forwarded);\n        t7.addAll$1(0, t1._forwardedModuleNodes);\n        _this._forwardedModules.addAll$1(0, forwarded);\n        _this._forwardedModuleNodes.addAll$1(0, t1._forwardedModuleNodes);\n      } else {\n        t1 = _this._nestedForwardedModules;\n        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._nestedForwardedModules = P.List_List$generate(t3 - 1, new O.Environment_importForwards_closure2(), true, type$.legacy_List_legacy_Module_legacy_Callable) : t1), forwarded);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._variableNodes, t4 = t3 != null, t5 = _this._variableIndices; t1.moveNext$0();) {\n        t6 = t1._collection$_current;\n        t5.remove$1(0, t6);\n        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);\n        if (t4)\n          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._functionIndices, t3 = _this._functions; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._mixinIndices, t3 = _this._mixins; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n    },\n    getVariable$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._getModule$1(namespace).get$variables().$index(0, $name);\n      if (_this._lastVariableName === $name) {\n        t1 = J.$index$asx(_this._variables[_this._lastVariableIndex], $name);\n        return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._lastVariableName = $name;\n        _this._lastVariableIndex = index;\n        t1 = J.$index$asx(_this._variables[index], $name);\n        return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;\n      }\n      index = _this._variableIndex$1($name);\n      if (index == null)\n        return _this._getVariableFromGlobalModule$1($name);\n      _this._lastVariableName = $name;\n      _this._lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._variables[index], $name);\n      return t1 == null ? _this._getVariableFromGlobalModule$1($name) : t1;\n    },\n    getVariable$1: function($name) {\n      return this.getVariable$2$namespace($name, null);\n    },\n    _getVariableFromGlobalModule$1: function($name) {\n      return this._fromOneModule$3($name, \"variable\", new O.Environment__getVariableFromGlobalModule_closure($name));\n    },\n    getVariableNode$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._getModule$1(namespace).get$variableNodes().$index(0, $name);\n      if (_this._lastVariableName === $name) {\n        t1 = J.$index$asx(_this._variableNodes[_this._lastVariableIndex], $name);\n        return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._lastVariableName = $name;\n        _this._lastVariableIndex = index;\n        t1 = J.$index$asx(_this._variableNodes[index], $name);\n        return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      index = _this._variableIndex$1($name);\n      if (index == null)\n        return _this._getVariableNodeFromGlobalModule$1($name);\n      _this._lastVariableName = $name;\n      _this._lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._variableNodes[index], $name);\n      return t1 == null ? _this._getVariableNodeFromGlobalModule$1($name) : t1;\n    },\n    _getVariableNodeFromGlobalModule$1: function($name) {\n      var t1, value;\n      for (t1 = this._globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        value = t1._collection$_current.get$variableNodes().$index(0, $name);\n        if (value != null)\n          return value;\n      }\n      return null;\n    },\n    globalVariableExists$2$namespace: function($name, namespace) {\n      if (namespace != null)\n        return this._getModule$1(namespace).get$variables().containsKey$1($name);\n      if (C.JSArray_methods.get$first(this._variables).containsKey$1($name))\n        return true;\n      return this._getVariableFromGlobalModule$1($name) != null;\n    },\n    globalVariableExists$1: function($name) {\n      return this.globalVariableExists$2$namespace($name, null);\n    },\n    _variableIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._variables, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {\n      var t1, moduleWithName, cur, t2, index, _this = this;\n      if (namespace != null) {\n        _this._getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      if (global || _this._variables.length === 1) {\n        _this._variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure(_this, $name));\n        t1 = _this._variables;\n        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {\n          moduleWithName = _this._fromOneModule$3($name, \"variable\", new O.Environment_setVariable_closure0($name));\n          if (moduleWithName != null) {\n            moduleWithName.setVariable$3($name, value, nodeWithSpan);\n            return;\n          }\n        }\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);\n        t1 = _this._variableNodes;\n        if (t1 != null)\n          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n        return;\n      }\n      if (_this._nestedForwardedModules != null && !_this._variableIndices.containsKey$1($name) && _this._variableIndex$1($name) == null) {\n        t1 = _this._nestedForwardedModules;\n        t1.toString;\n        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\"));\n        t1 = new H.ListIterator(t1, t1.get$length(t1));\n        for (; t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            if (cur.get$variables().containsKey$1($name)) {\n              cur.setVariable$3($name, value, nodeWithSpan);\n              return;\n            }\n          }\n        }\n      }\n      index = _this._lastVariableName === $name ? _this._lastVariableIndex : _this._variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure1(_this, $name));\n      if (!_this._inSemiGlobalScope && index === 0) {\n        index = _this._variables.length - 1;\n        _this._variableIndices.$indexSet(0, $name, index);\n      }\n      _this._lastVariableName = $name;\n      _this._lastVariableIndex = index;\n      J.$indexSet$ax(_this._variables[index], $name, value);\n      t1 = _this._variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    setVariable$4$global: function($name, value, nodeWithSpan, global) {\n      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);\n    },\n    setLocalVariable$3: function($name, value, nodeWithSpan) {\n      var index, _this = this,\n        t1 = _this._variables,\n        t2 = t1.length;\n      _this._lastVariableName = $name;\n      index = _this._lastVariableIndex = t2 - 1;\n      _this._variableIndices.$indexSet(0, $name, index);\n      J.$indexSet$ax(t1[index], $name, value);\n      t1 = _this._variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    getFunction$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null) {\n        t1 = _this._getModule$1(namespace);\n        return t1.get$functions(t1).$index(0, $name);\n      }\n      t1 = _this._functionIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._functions[index], $name);\n        return t1 == null ? _this._getFunctionFromGlobalModule$1($name) : t1;\n      }\n      index = _this._functionIndex$1($name);\n      if (index == null)\n        return _this._getFunctionFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._functions[index], $name);\n      return t1 == null ? _this._getFunctionFromGlobalModule$1($name) : t1;\n    },\n    _getFunctionFromGlobalModule$1: function($name) {\n      return this._fromOneModule$3($name, \"function\", new O.Environment__getFunctionFromGlobalModule_closure($name));\n    },\n    _functionIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._functions, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    getMixin$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._getModule$1(namespace).get$mixins().$index(0, $name);\n      t1 = _this._mixinIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._mixins[index], $name);\n        return t1 == null ? _this._getMixinFromGlobalModule$1($name) : t1;\n      }\n      index = _this._mixinIndex$1($name);\n      if (index == null)\n        return _this._getMixinFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._mixins[index], $name);\n      return t1 == null ? _this._getMixinFromGlobalModule$1($name) : t1;\n    },\n    _getMixinFromGlobalModule$1: function($name) {\n      return this._fromOneModule$3($name, \"mixin\", new O.Environment__getMixinFromGlobalModule_closure($name));\n    },\n    _mixinIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._mixins, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when) {\n      var wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5, _this = this;\n      if (!when) {\n        wasInSemiGlobalScope = _this._inSemiGlobalScope;\n        _this._inSemiGlobalScope = semiGlobal;\n        try {\n          t1 = callback.call$0();\n          return t1;\n        } finally {\n          _this._inSemiGlobalScope = wasInSemiGlobalScope;\n        }\n      }\n      semiGlobal = semiGlobal && _this._inSemiGlobalScope;\n      wasInSemiGlobalScope0 = _this._inSemiGlobalScope;\n      _this._inSemiGlobalScope = semiGlobal;\n      t1 = _this._variables;\n      t2 = type$.legacy_String;\n      C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value));\n      t3 = _this._variableNodes;\n      if (t3 != null)\n        C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode));\n      t3 = _this._functions;\n      t4 = type$.legacy_Callable;\n      C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n      t5 = _this._mixins;\n      C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n      t4 = _this._nestedForwardedModules;\n      if (t4 != null)\n        C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable));\n      try {\n        t2 = callback.call$0();\n        return t2;\n      } finally {\n        _this._inSemiGlobalScope = wasInSemiGlobalScope0;\n        _this._lastVariableIndex = _this._lastVariableName = null;\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = _this._variableIndices; t1.moveNext$0();) {\n          $name = t1.get$current(t1);\n          t2.remove$1(0, $name);\n        }\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = _this._functionIndices; t1.moveNext$0();) {\n          name0 = t1.get$current(t1);\n          t2.remove$1(0, name0);\n        }\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = _this._mixinIndices; t1.moveNext$0();) {\n          name1 = t1.get$current(t1);\n          t2.remove$1(0, name1);\n        }\n        t1 = _this._nestedForwardedModules;\n        if (t1 != null)\n          C.JSArray_methods.removeLast$0(t1);\n      }\n    },\n    scope$1$1: function(callback, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);\n    },\n    scope$1$2$when: function(callback, when, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);\n    },\n    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);\n    },\n    toImplicitConfiguration$0: function() {\n      var t2, t3, t4, t5, i, values, nodes, t6, t7,\n        t1 = type$.legacy_String,\n        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue);\n      for (t2 = this._variables, t3 = this._variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode, i = 0; i < t2.length; ++i) {\n        values = t2[i];\n        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];\n        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {\n          t7 = t6.get$current(t6);\n          configuration.$indexSet(0, t7, new Z.ConfiguredValue(values.$index(0, t7), null, nodes.$index(0, t7)));\n        }\n      }\n      return new A.Configuration(configuration, null, true);\n    },\n    _getModule$1: function(namespace) {\n      var module = this._environment$_modules.$index(0, namespace);\n      if (module != null)\n        return module;\n      throw H.wrapException(E.SassScriptException$('There is no module with the namespace \"' + namespace + '\".'));\n    },\n    _fromOneModule$1$3: function($name, type, callback) {\n      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,\n        t1 = this._nestedForwardedModules;\n      if (t1 != null)\n        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            value = callback.call$1(cur);\n            if (value != null)\n              return value;\n          }\n        }\n      for (t1 = this._globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_Callable, value = null, identity = null; t1.moveNext$0();) {\n        t3 = t1._collection$_current;\n        valueInModule = callback.call$1(t3);\n        if (valueInModule == null)\n          continue;\n        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);\n        if (identityFromModule.$eq(0, identity))\n          continue;\n        if (value != null) {\n          t1 = \"This \" + type + string$.x20is_av;\n          t2 = type + \" use\";\n          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          for (t4 = this._globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            if (callback.call$1(t5.key) != null)\n              t3.$indexSet(0, t5.value.get$span(), \"includes \" + type);\n          }\n          throw H.wrapException(E.MultiSpanSassScriptException$(t1, t2, t3));\n        }\n        identity = identityFromModule;\n        value = valueInModule;\n      }\n      return value;\n    },\n    _fromOneModule$3: function($name, type, callback) {\n      return this._fromOneModule$1$3($name, type, callback, type$.dynamic);\n    }\n  };\n  O.Environment_importForwards_closure.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$variables();\n      return t1.get$keys(t1);\n    },\n    $signature: 105\n  };\n  O.Environment_importForwards_closure0.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$functions(module);\n      return t1.get$keys(t1);\n    },\n    $signature: 105\n  };\n  O.Environment_importForwards_closure1.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$mixins();\n      return t1.get$keys(t1);\n    },\n    $signature: 105\n  };\n  O.Environment_importForwards_closure2.prototype = {\n    call$1: function(_) {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable);\n    },\n    $signature: 401\n  };\n  O.Environment__getVariableFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$variables().$index(0, this.name);\n    },\n    $signature: 426\n  };\n  O.Environment_setVariable_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._lastVariableName = this.name;\n      return t1._lastVariableIndex = 0;\n    },\n    $signature: 11\n  };\n  O.Environment_setVariable_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$variables().containsKey$1(this.name) ? module : null;\n    },\n    $signature: 174\n  };\n  O.Environment_setVariable_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._variableIndex$1(this.name);\n      return t2 == null ? t1._variables.length - 1 : t2;\n    },\n    $signature: 11\n  };\n  O.Environment__getFunctionFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module).$index(0, this.name);\n    },\n    $signature: 173\n  };\n  O.Environment__getMixinFromGlobalModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$mixins().$index(0, this.name);\n    },\n    $signature: 173\n  };\n  O._EnvironmentModule.prototype = {\n    get$url: function() {\n      return this.css.get$span().file.url;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var t1, t2,\n        module = this._modulesByVariable.$index(0, $name);\n      if (module != null) {\n        module.setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      t1 = this._environment;\n      t2 = t1._variables;\n      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$(\"Undefined variable.\"));\n      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);\n      t1 = t1._variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n      return;\n    },\n    variableIdentity$1: function($name) {\n      var module = this._modulesByVariable.$index(0, $name);\n      return module == null ? this : module.variableIdentity$1($name);\n    },\n    cloneCss$0: function() {\n      var newCssAndExtender, _this = this,\n        t1 = _this.css;\n      if (J.get$isEmpty$asx(t1.get$children(t1)))\n        return _this;\n      newCssAndExtender = V.cloneCssStylesheet(t1, _this.extender);\n      return O._EnvironmentModule$_(_this._environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);\n    },\n    toString$0: function(_) {\n      var t1 = this.css;\n      if (t1.get$span().file.url == null)\n        t1 = \"<unknown url>\";\n      else {\n        t1 = t1.get$span().file;\n        t1 = $.$get$context().prettyUri$1(t1.url);\n      }\n      return t1;\n    },\n    $isModule: 1,\n    get$upstream: function() {\n      return this.upstream;\n    },\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$extender: function() {\n      return this.extender;\n    },\n    get$css: function(receiver) {\n      return this.css;\n    },\n    get$transitivelyContainsCss: function() {\n      return this.transitivelyContainsCss;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this.transitivelyContainsExtensions;\n    }\n  };\n  O._EnvironmentModule__EnvironmentModule_closure.prototype = {\n    call$1: function(module) {\n      return module.get$variables();\n    },\n    $signature: 437\n  };\n  O._EnvironmentModule__EnvironmentModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$variableNodes();\n    },\n    $signature: 439\n  };\n  O._EnvironmentModule__EnvironmentModule_closure1.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module);\n    },\n    $signature: 172\n  };\n  O._EnvironmentModule__EnvironmentModule_closure2.prototype = {\n    call$1: function(module) {\n      return module.get$mixins();\n    },\n    $signature: 172\n  };\n  O._EnvironmentModule__EnvironmentModule_closure3.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 115\n  };\n  O._EnvironmentModule__EnvironmentModule_closure4.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsExtensions();\n    },\n    $signature: 115\n  };\n  E.SassException.prototype = {\n    get$trace: function(_) {\n      return new Y.Trace(P.List_List$unmodifiable(H.setRuntimeTypeInfo([B.frameForSpan(G.SourceSpanException.prototype.get$span.call(this), \"root stylesheet\", null)], type$.JSArray_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    get$span: function() {\n      return G.SourceSpanException.prototype.get$span.call(this);\n    },\n    toString$1$color: function(_, color) {\n      var t2, _i, frame, t3, _this = this,\n        buffer = new P.StringBuffer(\"\"),\n        t1 = \"Error: \" + H.S(_this._span_exception$_message) + \"\\n\";\n      buffer._contents = t1;\n      buffer._contents = t1 + G.SourceSpanException.prototype.get$span.call(_this).highlight$1$color(color);\n      for (t1 = _this.get$trace(_this).toString$0(0).split(\"\\n\"), t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        frame = t1[_i];\n        frame.toString;\n        if (J.get$length$asx(frame) === 0)\n          continue;\n        t3 = buffer._contents += \"\\n\";\n        buffer._contents = t3 + (\"  \" + H.S(frame));\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    toString$0: function($receiver) {\n      return this.toString$1$color($receiver, null);\n    },\n    toCssString$0: function() {\n      var stringMessage, rune,\n        t1 = $._glyphs,\n        t2 = $._glyphs = C.C_AsciiGlyphSet,\n        t3 = this.toString$1$color(0, false),\n        commentMessage = H.stringReplaceAllUnchecked(t3, \"*/\", \"*\\u2215\");\n      $._glyphs = t1 === C.C_AsciiGlyphSet ? t2 : C.C_UnicodeGlyphSet;\n      stringMessage = new P.StringBuffer(\"\");\n      for (t1 = P.RuneIterator$(N.serializeValue0(new D.SassString(this.toString$1$color(0, false), true), true, true)); t1.moveNext$0();) {\n        rune = t1._currentCodePoint;\n        if (rune > 255) {\n          stringMessage._contents += H.Primitives_stringFromCharCode(92);\n          stringMessage._contents += C.JSInt_methods.toRadixString$1(rune, 16);\n          t2 = stringMessage._contents += H.Primitives_stringFromCharCode(32);\n        } else\n          t2 = stringMessage._contents += H.Primitives_stringFromCharCode(rune);\n      }\n      return \"/* \" + C.JSArray_methods.join$1(H.setRuntimeTypeInfo(commentMessage.split(\"\\n\"), type$.JSArray_String), \"\\n * \") + ' */\\n\\nbody::before {\\n  font-family: \"Source Code Pro\", \"SF Mono\", Monaco, Inconsolata, \"Fira Mono\",\\n      \"Droid Sans Mono\", monospace, monospace;\\n  white-space: pre;\\n  display: block;\\n  padding: 1em;\\n  margin-bottom: 1em;\\n  border-bottom: 2px solid black;\\n  content: ' + stringMessage.toString$0(0) + \";\\n}\";\n    }\n  };\n  E.MultiSpanSassException.prototype = {\n    toString$1$color: function(_, color) {\n      var t2, _i, frame, t3, _this = this,\n        useColor = color === true && true,\n        buffer = new P.StringBuffer(\"\"),\n        t1 = \"Error: \" + H.S(_this._span_exception$_message) + \"\\n\";\n      buffer._contents = t1;\n      buffer._contents = t1 + U.Highlighter$multiple(G.SourceSpanException.prototype.get$span.call(_this), _this.primaryLabel, _this.secondarySpans, useColor, null, null).highlight$0();\n      for (t1 = _this.get$trace(_this).toString$0(0).split(\"\\n\"), t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        frame = t1[_i];\n        frame.toString;\n        if (J.get$length$asx(frame) === 0)\n          continue;\n        t3 = buffer._contents += \"\\n\";\n        buffer._contents = t3 + (\"  \" + H.S(frame));\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    toString$0: function($receiver) {\n      return this.toString$1$color($receiver, null);\n    }\n  };\n  E.SassRuntimeException.prototype = {\n    get$trace: function(receiver) {\n      return this.trace;\n    }\n  };\n  E.MultiSpanSassRuntimeException.prototype = {$isSassRuntimeException: 1,\n    get$trace: function(receiver) {\n      return this.trace;\n    }\n  };\n  E.SassFormatException.prototype = {\n    get$source: function() {\n      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(this).file._decodedChars, 0, null), 0, null);\n    },\n    $isFormatException: 1,\n    $isSourceSpanFormatException: 1\n  };\n  E.SassScriptException.prototype = {\n    toString$0: function(_) {\n      return this.message + string$.x0a_BUG_;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  E.MultiSpanSassScriptException.prototype = {};\n  D._writeSourceMap_closure.prototype = {\n    call$1: function(url) {\n      return this.options.sourceMapUrl$2(P.Uri_parse(url), this.destination).toString$0(0);\n    },\n    $signature: 8\n  };\n  B.ExecutableOptions.prototype = {\n    get$interactive: function() {\n      var t2, invalidOptions, _i, option,\n        t1 = this._interactive;\n      if (t1 != null)\n        return t1;\n      t1 = this._options;\n      t2 = H._asBoolS(t1.$index(0, \"interactive\"));\n      this._interactive = t2;\n      if (!t2)\n        return false;\n      invalidOptions = [\"stdin\", \"indented\", \"style\", \"source-map\", \"source-map-urls\", \"embed-sources\", \"embed-source-map\", \"update\", \"watch\"];\n      for (t2 = t1._parser.options._collection$_map, _i = 0; _i < 9; ++_i) {\n        option = invalidOptions[_i];\n        if (t2.$index(0, option) == null)\n          H.throwExpression(P.ArgumentError$('Could not find an option named \"' + option + '\".'));\n        if (t1._parsed.containsKey$1(option))\n          throw H.wrapException(B.UsageException$(\"--\" + option + \" isn't allowed with --interactive.\"));\n      }\n      return true;\n    },\n    get$color: function() {\n      var t1 = this._options;\n      return t1.wasParsed$1(\"color\") ? H._asBoolS(t1.$index(0, \"color\")) : B.hasTerminal();\n    },\n    get$emitErrorCss: function() {\n      var t1 = H._asBoolS(this._options.$index(0, \"error-css\"));\n      if (t1 == null) {\n        this._ensureSources$0();\n        t1 = this._sourcesToDestinations;\n        t1 = t1.get$values(t1).any$1(0, new B.ExecutableOptions_emitErrorCss_closure());\n      }\n      return t1;\n    },\n    _ensureSources$0: function() {\n      var t1, stdin, t2, t3, $directories, t4, colonArgs, positionalArgs, cur, t5, t6, message, target, source, destination, seen, i, t7, _this = this, _null = null,\n        _s18_ = 'Duplicate source \"';\n      if (_this._sourcesToDestinations != null)\n        return;\n      t1 = _this._options;\n      stdin = H._asBoolS(t1.$index(0, \"stdin\"));\n      t2 = t1.rest;\n      if (t2.get$length(t2) === 0 && !stdin)\n        B.ExecutableOptions__fail(\"Compile Sass to CSS.\");\n      t3 = type$.legacy_String;\n      $directories = P.LinkedHashSet_LinkedHashSet$_empty(t3);\n      for (t4 = new H.ListIterator(t2, t2.get$length(t2)), colonArgs = false, positionalArgs = false; t4.moveNext$0();) {\n        cur = t4.__internal$_current;\n        t5 = cur.length;\n        if (t5 === 0)\n          B.ExecutableOptions__fail('Invalid argument \"\".');\n        if (H.stringContainsUnchecked(cur, \":\", 0)) {\n          if (t5 > 2) {\n            t6 = C.JSString_methods._codeUnitAt$1(cur, 0);\n            if (!(t6 >= 97 && t6 <= 122))\n              t6 = t6 >= 65 && t6 <= 90;\n            else\n              t6 = true;\n            t6 = t6 && C.JSString_methods._codeUnitAt$1(cur, 1) === 58;\n          } else\n            t6 = false;\n          if (t6) {\n            if (2 > t5)\n              H.throwExpression(P.RangeError$range(2, 0, t5, _null, _null));\n            t5 = H.stringContainsUnchecked(cur, \":\", 2);\n          } else\n            t5 = true;\n        } else\n          t5 = false;\n        if (t5)\n          colonArgs = true;\n        else if (B.dirExists(cur))\n          $directories.add$1(0, cur);\n        else\n          positionalArgs = true;\n      }\n      if (positionalArgs || t2.get$length(t2) === 0) {\n        if (colonArgs)\n          B.ExecutableOptions__fail('Positional and \":\" arguments may not both be used.');\n        else if (stdin) {\n          if (J.get$length$asx(t2._collection$_source) > 1)\n            B.ExecutableOptions__fail(\"Only one argument is allowed with --stdin.\");\n          else if (H._asBoolS(t1.$index(0, \"update\")))\n            B.ExecutableOptions__fail(\"--update is not allowed with --stdin.\");\n          else if (H._asBoolS(t1.$index(0, \"watch\")))\n            B.ExecutableOptions__fail(\"--watch is not allowed with --stdin.\");\n          t1 = t2.get$length(t2) === 0 ? _null : t2.get$first(t2);\n          t2 = type$.dynamic;\n          _this._sourcesToDestinations = H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_literal([null, t1], t2, t2), t3, t3);\n        } else {\n          t4 = t2._collection$_source;\n          t5 = J.getInterceptor$asx(t4);\n          if (t5.get$length(t4) > 2)\n            B.ExecutableOptions__fail(\"Only two positional args may be passed.\");\n          else if ($directories._collection$_length !== 0) {\n            message = 'Directory \"' + H.S($directories.get$first($directories)) + '\" may not be a positional arg.';\n            target = t2.get$last(t2);\n            B.ExecutableOptions__fail(J.$eq$($directories.get$first($directories), t2.get$first(t2)) && !B.fileExists(target) ? message + ('\\nTo compile all CSS in \"' + H.S($directories.get$first($directories)) + '\" to \"' + H.S(target) + '\", use `sass ' + H.S($directories.get$first($directories)) + \":\" + H.S(target) + \"`.\") : message);\n          } else {\n            source = J.$eq$(t2.get$first(t2), \"-\") ? _null : t2.get$first(t2);\n            destination = t5.get$length(t4) === 1 ? _null : t2.get$last(t2);\n            if (destination == null)\n              if (H._asBoolS(t1.$index(0, \"update\")))\n                B.ExecutableOptions__fail(\"--update is not allowed when printing to stdout.\");\n              else if (H._asBoolS(t1.$index(0, \"watch\")))\n                B.ExecutableOptions__fail(\"--watch is not allowed when printing to stdout.\");\n            t1 = P.LinkedHashMap_LinkedHashMap$_literal([source, destination], t3, t3);\n            t3 = K.PathMap__create(_null, t3);\n            t3.addAll$1(0, t1);\n            _this._sourcesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t3, type$.PathMap_legacy_String), type$.UnmodifiableMapView_of_legacy_String_and_legacy_String);\n          }\n        }\n        _this._sourceDirectoriesToDestinations = C.Map_empty5;\n        return;\n      }\n      if (stdin)\n        B.ExecutableOptions__fail('--stdin may not be used with \":\" arguments.');\n      seen = P.LinkedHashSet_LinkedHashSet$_empty(t3);\n      t1 = K.PathMap__create(_null, t3);\n      t4 = type$.PathMap_legacy_String;\n      t3 = K.PathMap__create(_null, t3);\n      for (t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        if ($directories.contains$1(0, cur)) {\n          if (!seen.add$1(0, cur))\n            B.ExecutableOptions__fail(_s18_ + H.S(cur) + '\".');\n          t3.$indexSet(0, cur, cur);\n          t1.addAll$1(0, _this._listSourceDirectory$2(cur, cur));\n          continue;\n        }\n        for (t5 = cur.length, destination = _null, source = destination, i = 0; i < t5; ++i) {\n          if (i === 1) {\n            t6 = i - 1;\n            if (t5 > t6 + 2) {\n              t7 = C.JSString_methods.codeUnitAt$1(cur, t6);\n              if (!(t7 >= 97 && t7 <= 122))\n                t7 = t7 >= 65 && t7 <= 90;\n              else\n                t7 = true;\n              t6 = t7 && C.JSString_methods.codeUnitAt$1(cur, t6 + 1) === 58;\n            } else\n              t6 = false;\n          } else\n            t6 = false;\n          if (t6)\n            continue;\n          if (C.JSString_methods._codeUnitAt$1(cur, i) === 58)\n            if (source == null) {\n              source = C.JSString_methods.substring$2(cur, 0, i);\n              destination = C.JSString_methods.substring$1(cur, i + 1);\n            } else {\n              if (i === source.length + 2) {\n                t6 = i - 1;\n                if (t5 > t6 + 2) {\n                  t7 = C.JSString_methods.codeUnitAt$1(cur, t6);\n                  if (!(t7 >= 97 && t7 <= 122))\n                    t7 = t7 >= 65 && t7 <= 90;\n                  else\n                    t7 = true;\n                  t6 = t7 && C.JSString_methods.codeUnitAt$1(cur, t6 + 1) === 58;\n                } else\n                  t6 = false;\n                t6 = !t6;\n              } else\n                t6 = true;\n              if (t6)\n                B.ExecutableOptions__fail('\"' + cur + '\" may only contain one \":\".');\n            }\n        }\n        if (!seen.add$1(0, source))\n          B.ExecutableOptions__fail(_s18_ + H.S(source) + '\".');\n        if (source === \"-\")\n          t1.$indexSet(0, _null, destination);\n        else if (B.dirExists(source)) {\n          t3.$indexSet(0, source, destination);\n          t1.addAll$1(0, _this._listSourceDirectory$2(source, destination));\n        } else\n          t1.$indexSet(0, source, destination);\n      }\n      t2 = type$.UnmodifiableMapView_of_legacy_String_and_legacy_String;\n      _this._sourcesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t1, t4), t2);\n      _this._sourceDirectoriesToDestinations = new P.UnmodifiableMapView(new K.PathMap(t3, t4), t2);\n    },\n    _listSourceDirectory$2: function(source, destination) {\n      var t2, t3, t4, t5, _null = null,\n        t1 = type$.legacy_String;\n      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t2 = J.get$iterator$ax(B.listDir(source, true)), t3 = source == destination; t2.moveNext$0();) {\n        t4 = t2.get$current(t2);\n        if (this._isEntrypoint$1(t4))\n          t5 = !(t3 && X.ParsedPath_ParsedPath$parse(t4, $.$get$context().style)._splitExtension$1(1)[1] === \".css\");\n        else\n          t5 = false;\n        if (t5) {\n          t5 = $.$get$context();\n          t1.$indexSet(0, t4, t5.join$8(0, destination, t5.withoutExtension$1(t5.relative$2$from(t4, source)) + \".css\", _null, _null, _null, _null, _null, _null));\n        }\n      }\n      return t1;\n    },\n    _isEntrypoint$1: function(path) {\n      var extension,\n        t1 = $.$get$context().style;\n      if (J.startsWith$1$s(X.ParsedPath_ParsedPath$parse(path, t1).get$basename(), \"_\"))\n        return false;\n      extension = X.ParsedPath_ParsedPath$parse(path, t1)._splitExtension$1(1)[1];\n      return extension === \".scss\" || extension === \".sass\" || extension === \".css\";\n    },\n    get$_writeToStdout: function() {\n      var t1, _this = this;\n      _this._ensureSources$0();\n      t1 = _this._sourcesToDestinations;\n      if (t1.get$length(t1) === 1) {\n        _this._ensureSources$0();\n        t1 = _this._sourcesToDestinations;\n        t1 = t1.get$values(t1);\n        t1 = t1.get$single(t1) == null;\n      } else\n        t1 = false;\n      return t1;\n    },\n    get$emitSourceMap: function() {\n      var _this = this,\n        _s10_ = \"source-map\",\n        _s15_ = \"source-map-urls\",\n        _s13_ = \"embed-sources\",\n        _s16_ = \"embed-source-map\",\n        t1 = _this._options;\n      if (!H._asBoolS(t1.$index(0, _s10_)))\n        if (t1.wasParsed$1(_s15_))\n          B.ExecutableOptions__fail(\"--source-map-urls isn't allowed with --no-source-map.\");\n        else if (t1.wasParsed$1(_s13_))\n          B.ExecutableOptions__fail(\"--embed-sources isn't allowed with --no-source-map.\");\n        else if (t1.wasParsed$1(_s16_))\n          B.ExecutableOptions__fail(\"--embed-source-map isn't allowed with --no-source-map.\");\n      if (!_this.get$_writeToStdout())\n        return H._asBoolS(t1.$index(0, _s10_));\n      if (J.$eq$(_this._ifParsed$1(_s15_), \"relative\"))\n        B.ExecutableOptions__fail(\"--source-map-urls=relative isn't allowed when printing to stdout.\");\n      if (H._asBoolS(t1.$index(0, _s16_)))\n        return H._asBoolS(t1.$index(0, _s10_));\n      else if (J.$eq$(_this._ifParsed$1(_s10_), true))\n        B.ExecutableOptions__fail(\"When printing to stdout, --source-map requires --embed-source-map.\");\n      else if (t1.wasParsed$1(_s15_))\n        B.ExecutableOptions__fail(\"When printing to stdout, --source-map-urls requires --embed-source-map.\");\n      else if (H._asBoolS(t1.$index(0, _s13_)))\n        B.ExecutableOptions__fail(\"When printing to stdout, --embed-sources requires --embed-source-map.\");\n      else\n        return false;\n    },\n    sourceMapUrl$2: function(url, destination) {\n      var t1, path;\n      if (url.get$scheme().length !== 0 && url.get$scheme() !== \"file\")\n        return url;\n      t1 = $.$get$context();\n      path = t1.style.pathFromUri$1(M._parseUri(url));\n      return t1.toUri$1(J.$eq$(this._options.$index(0, \"source-map-urls\"), \"relative\") && !this.get$_writeToStdout() ? t1.relative$2$from(path, t1.dirname$1(destination)) : D.absolute(path));\n    },\n    _ifParsed$1: function($name) {\n      var t1 = this._options;\n      return t1.wasParsed$1($name) ? t1.$index(0, $name) : null;\n    }\n  };\n  B.ExecutableOptions_closure.prototype = {\n    call$0: function() {\n      var t1 = type$.legacy_String,\n        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Option),\n        t3 = [],\n        parser = new N.ArgParser(t2, new P.UnmodifiableMapView(t2, type$.UnmodifiableMapView_of_legacy_String_and_legacy_Option), new P.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ArgParser), type$.UnmodifiableMapView_of_legacy_String_and_legacy_ArgParser), t3, true, null);\n      parser.addOption$2$hide(\"precision\", true);\n      parser.addFlag$2$hide(\"async\", true);\n      t3.push(B.ExecutableOptions__separator(\"Input and Output\"));\n      parser.addFlag$2$help(\"stdin\", \"Read the stylesheet from stdin.\");\n      parser.addFlag$2$help(\"indented\", \"Use the indented syntax for input from stdin.\");\n      parser.addMultiOption$5$abbr$help$splitCommas$valueHelp(\"load-path\", \"I\", \"A path to use when resolving imports.\\nMay be passed multiple times.\", false, \"PATH\");\n      t1 = type$.JSArray_legacy_String;\n      parser.addOption$6$abbr$allowed$defaultsTo$help$valueHelp(\"style\", \"s\", H.setRuntimeTypeInfo([\"expanded\", \"compressed\"], t1), \"expanded\", \"Output style.\", \"NAME\");\n      parser.addFlag$3$defaultsTo$help(\"charset\", true, \"Emit a @charset or BOM for CSS with non-ASCII characters.\");\n      parser.addFlag$3$defaultsTo$help(\"error-css\", null, \"When an error occurs, emit a stylesheet describing it.\\nDefaults to true when compiling to a file.\");\n      parser.addFlag$3$help$negatable(\"update\", \"Only compile out-of-date stylesheets.\", false);\n      t3.push(B.ExecutableOptions__separator(\"Source Maps\"));\n      parser.addFlag$3$defaultsTo$help(\"source-map\", true, \"Whether to generate source maps.\");\n      parser.addOption$4$allowed$defaultsTo$help(\"source-map-urls\", H.setRuntimeTypeInfo([\"relative\", \"absolute\"], t1), \"relative\", \"How to link from source maps to source files.\");\n      parser.addFlag$3$defaultsTo$help(\"embed-sources\", false, \"Embed source file contents in source maps.\");\n      parser.addFlag$3$defaultsTo$help(\"embed-source-map\", false, \"Embed source map contents in CSS.\");\n      t3.push(B.ExecutableOptions__separator(\"Other\"));\n      parser.addFlag$3$help$negatable(\"watch\", \"Watch stylesheets and recompile when they change.\", false);\n      parser.addFlag$2$help(\"poll\", \"Manually check for changes rather than using a native watcher.\\nOnly valid with --watch.\");\n      parser.addFlag$2$help(\"stop-on-error\", \"Don't compile more files once an error is encountered.\");\n      parser.addFlag$4$abbr$help$negatable(\"interactive\", \"i\", \"Run an interactive SassScript shell.\", false);\n      parser.addFlag$3$abbr$help(\"color\", \"c\", \"Whether to use terminal colors for messages.\");\n      parser.addFlag$2$help(\"unicode\", \"Whether to use Unicode characters for messages.\");\n      parser.addFlag$3$abbr$help(\"quiet\", \"q\", \"Don't print warnings.\");\n      parser.addFlag$2$help(\"trace\", \"Print full Dart stack traces for exceptions.\");\n      parser.addFlag$4$abbr$help$negatable(\"help\", \"h\", \"Print this usage information.\", false);\n      parser.addFlag$3$help$negatable(\"version\", \"Print the version of Dart Sass.\", false);\n      return parser;\n    },\n    $signature: 468\n  };\n  B.ExecutableOptions_emitErrorCss_closure.prototype = {\n    call$1: function(destination) {\n      return destination != null;\n    },\n    $signature: 5\n  };\n  B.UsageException.prototype = {$isException: 1,\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  A.watch_closure.prototype = {\n    call$1: function(dir) {\n      for (; !B.dirExists(dir);)\n        dir = $.$get$context().dirname$1(dir);\n      return this.dirWatcher.watch$1(0, dir);\n    },\n    $signature: 476\n  };\n  A._Watcher.prototype = {\n    compile$3$ifModified: function(source, destination, ifModified) {\n      return this.compile$body$_Watcher(source, destination, ifModified);\n    },\n    compile$2: function(source, destination) {\n      return this.compile$3$ifModified(source, destination, false);\n    },\n    compile$body$_Watcher: function(source, destination, ifModified) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, stackTrace, error0, stackTrace0, exception, t1, $async$exception;\n      var $async$compile$3$ifModified = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$goto = 7;\n              return P._asyncAwait(D.compileStylesheet($async$self._watch$_options, $async$self._graph, source, destination, ifModified), $async$compile$3$ifModified);\n            case 7:\n              // returning from await.\n              $async$returnValue = true;\n              // goto return\n              $async$goto = 1;\n              break;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.SassException) {\n                error = t1;\n                stackTrace = H.getTraceFromException($async$exception);\n                t1 = $async$self._watch$_options;\n                if (!t1.get$emitErrorCss())\n                  $async$self._delete$1(destination);\n                $async$self._printError$2(J.toString$1$color$(error, t1.get$color()), stackTrace);\n                J.set$exitCode$x(self.process, 65);\n                $async$returnValue = false;\n                // goto return\n                $async$goto = 1;\n                break;\n              } else if (t1 instanceof B.FileSystemException) {\n                error0 = t1;\n                stackTrace0 = H.getTraceFromException($async$exception);\n                t1 = error0.path;\n                $async$self._printError$2(\"Error reading \" + H.S($.$get$context().relative$2$from(t1, null)) + \": \" + error0.message + \".\", stackTrace0);\n                J.set$exitCode$x(self.process, 66);\n                $async$returnValue = false;\n                // goto return\n                $async$goto = 1;\n                break;\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$compile$3$ifModified, $async$completer);\n    },\n    _delete$1: function(path) {\n      var buffer, t1, exception;\n      try {\n        B.deleteFile(path);\n        buffer = new P.StringBuffer(\"\");\n        t1 = this._watch$_options;\n        if (t1.get$color())\n          buffer._contents += \"\\x1b[33m\";\n        buffer._contents += \"Deleted \" + H.S(path) + \".\";\n        if (t1.get$color())\n          buffer._contents += \"\\x1b[0m\";\n        P.print(buffer);\n      } catch (exception) {\n        if (!(H.unwrapException(exception) instanceof B.FileSystemException))\n          throw exception;\n      }\n    },\n    _printError$2: function(message, stackTrace) {\n      var t2,\n        t1 = $.$get$stderr();\n      t1.writeln$1(message);\n      t2 = this._watch$_options._options;\n      if (H._asBoolS(t2.$index(0, \"trace\"))) {\n        t1.writeln$0();\n        t1.writeln$1(C.JSString_methods.trimRight$0(Y.Trace_Trace$from(stackTrace).get$terse().toString$0(0)));\n      }\n      if (!H._asBoolS(t2.$index(0, \"stop-on-error\")))\n        t1.writeln$0();\n    },\n    watch$1: function(_, watcher) {\n      return this.watch$body$_Watcher(_, watcher);\n    },\n    watch$body$_Watcher: function(_, watcher) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, $event, extension, success, success0, success1, t2, t1;\n      var $async$watch$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = watcher._group._controller;\n              t1.toString;\n              t1 = $async$self._debounceEvents$1(new P._ControllerStream(t1, H._instanceType(t1)._eval$1(\"_ControllerStream<1>\")));\n              t2 = new P._StreamIterator(t1);\n              P.ArgumentError_checkNotNull(t1, \"stream\");\n              $async$handler = 3;\n              t1 = $async$self._watch$_options._options;\n            case 6:\n              // for condition\n              $async$goto = 8;\n              return P._asyncAwait(t2.moveNext$0(), $async$watch$1);\n            case 8:\n              // returning from await.\n              if (!$async$result) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $event = t2.get$current(t2);\n              extension = X.ParsedPath_ParsedPath$parse($event.path, $.$get$context().style)._splitExtension$1(1)[1];\n              if (!J.$eq$(extension, \".sass\") && !J.$eq$(extension, \".scss\") && !J.$eq$(extension, \".css\")) {\n                // goto for condition\n                $async$goto = 6;\n                break;\n              }\n            case 9:\n              // switch\n              switch ($event.type) {\n                case C.ChangeType_modify:\n                  // goto case\n                  $async$goto = 11;\n                  break;\n                case C.ChangeType_add:\n                  // goto case\n                  $async$goto = 12;\n                  break;\n                case C.ChangeType_remove:\n                  // goto case\n                  $async$goto = 13;\n                  break;\n                default:\n                  // goto after switch\n                  $async$goto = 10;\n                  break;\n              }\n              break;\n            case 11:\n              // case\n              $async$goto = 14;\n              return P._asyncAwait($async$self._handleModify$1($event.path), $async$watch$1);\n            case 14:\n              // returning from await.\n              success = $async$result;\n              if (!success && H._asBoolS(t1.$index(0, \"stop-on-error\"))) {\n                $async$next = [1];\n                // goto finally\n                $async$goto = 4;\n                break;\n              }\n              // goto after switch\n              $async$goto = 10;\n              break;\n            case 12:\n              // case\n              $async$goto = 15;\n              return P._asyncAwait($async$self._handleAdd$1($event.path), $async$watch$1);\n            case 15:\n              // returning from await.\n              success0 = $async$result;\n              if (!success0 && H._asBoolS(t1.$index(0, \"stop-on-error\"))) {\n                $async$next = [1];\n                // goto finally\n                $async$goto = 4;\n                break;\n              }\n              // goto after switch\n              $async$goto = 10;\n              break;\n            case 13:\n              // case\n              $async$goto = 16;\n              return P._asyncAwait($async$self._handleRemove$1($event.path), $async$watch$1);\n            case 16:\n              // returning from await.\n              success1 = $async$result;\n              if (!success1 && H._asBoolS(t1.$index(0, \"stop-on-error\"))) {\n                $async$next = [1];\n                // goto finally\n                $async$goto = 4;\n                break;\n              }\n              // goto after switch\n              $async$goto = 10;\n              break;\n            case 10:\n              // after switch\n              // goto for condition\n              $async$goto = 6;\n              break;\n            case 7:\n              // after for\n              $async$next.push(5);\n              // goto finally\n              $async$goto = 4;\n              break;\n            case 3:\n              // uncaught\n              $async$next = [2];\n            case 4:\n              // finally\n              $async$handler = 2;\n              $async$goto = 17;\n              return P._asyncAwait(t2.cancel$0(), $async$watch$1);\n            case 17:\n              // returning from await.\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 5:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$watch$1, $async$completer);\n    },\n    _handleModify$1: function(path) {\n      return this._handleModify$body$_Watcher(path);\n    },\n    _handleModify$body$_Watcher: function(path) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$self = this, t2, node, t1, url;\n      var $async$_handleModify$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $.$get$context();\n              url = t1.toUri$1(t1.canonicalize$1(path));\n              t1 = $async$self._graph;\n              t2 = t1._nodes;\n              if (!t2.containsKey$1(url)) {\n                $async$returnValue = $async$self._handleAdd$1(path);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              node = t2.$index(0, url);\n              t1.reload$1(url);\n              $async$goto = 3;\n              return P._asyncAwait($async$self._recompileDownstream$1(H.setRuntimeTypeInfo([node], type$.JSArray_legacy_StylesheetNode)), $async$_handleModify$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_handleModify$1, $async$completer);\n    },\n    _handleAdd$1: function(path) {\n      return this._handleAdd$body$_Watcher(path);\n    },\n    _handleAdd$body$_Watcher: function(path) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$self = this, destination, success, t1, t2, $async$temp1;\n      var $async$_handleAdd$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              destination = $async$self._destinationFor$1(path);\n              $async$temp1 = destination == null;\n              if ($async$temp1)\n                $async$result = $async$temp1;\n              else {\n                // goto then\n                $async$goto = 3;\n                break;\n              }\n              // goto join\n              $async$goto = 4;\n              break;\n            case 3:\n              // then\n              $async$goto = 5;\n              return P._asyncAwait($async$self.compile$2(path, destination), $async$_handleAdd$1);\n            case 5:\n              // returning from await.\n            case 4:\n              // join\n              success = $async$result;\n              t1 = D.absolute(\".\");\n              t2 = $.$get$context();\n              $async$goto = 6;\n              return P._asyncAwait($async$self._recompileDownstream$1($async$self._graph.addCanonical$3(new F.FilesystemImporter(t1), t2.toUri$1(t2.canonicalize$1(path)), t2.toUri$1(path))), $async$_handleAdd$1);\n            case 6:\n              // returning from await.\n              $async$returnValue = $async$result && success;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_handleAdd$1, $async$completer);\n    },\n    _handleRemove$1: function(path) {\n      return this._handleRemove$body$_Watcher(path);\n    },\n    _handleRemove$body$_Watcher: function(path) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$self = this, t2, destination, t3, node, toRecompile, t1, url;\n      var $async$_handleRemove$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $.$get$context();\n              url = t1.toUri$1(t1.canonicalize$1(path));\n              t1 = $async$self._graph;\n              t2 = t1._nodes;\n              if (t2.containsKey$1(url)) {\n                destination = $async$self._destinationFor$1(path);\n                if (destination != null)\n                  $async$self._delete$1(destination);\n              }\n              t3 = D.absolute(\".\");\n              node = t2.remove$1(0, url);\n              t2 = node != null;\n              if (t2) {\n                t1._transitiveModificationTimes.clear$0(0);\n                t1.importCache.clearImport$1(url);\n                node._stylesheet_graph$_remove$0();\n              }\n              toRecompile = t1._recanonicalizeImports$2(new F.FilesystemImporter(t3), url);\n              if (t2)\n                toRecompile.addAll$1(0, node._downstream);\n              $async$goto = 3;\n              return P._asyncAwait($async$self._recompileDownstream$1(toRecompile), $async$_handleRemove$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_handleRemove$1, $async$completer);\n    },\n    _debounceEvents$1: function(events) {\n      var t1 = type$.legacy_WatchEvent;\n      t1 = R._debounceAggregate(P.Duration$(25), H.instantiate1(R.rate_limit___collectToList$closure(), t1), false, true, t1, type$.legacy_List_legacy_WatchEvent).bind$1(events);\n      return new P._ExpandStream(new A._Watcher__debounceEvents_closure(), t1, H._instanceType(t1)._eval$1(\"_ExpandStream<Stream.T,WatchEvent*>\"));\n    },\n    _recompileDownstream$1: function(nodes) {\n      return this._recompileDownstream$body$_Watcher(nodes);\n    },\n    _recompileDownstream$body$_Watcher: function(nodes) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$self = this, t2, allSucceeded, node, success, t1, seen, toRecompile;\n      var $async$_recompileDownstream$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = type$.legacy_StylesheetNode;\n              seen = P.LinkedHashSet_LinkedHashSet$_empty(t1);\n              toRecompile = P.ListQueue_ListQueue$of(nodes, t1);\n              t1 = type$.UnmodifiableSetView_legacy_StylesheetNode, t2 = $async$self._watch$_options._options, allSucceeded = true;\n            case 3:\n              // for condition\n              if (!!toRecompile.get$isEmpty(toRecompile)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              node = toRecompile.removeFirst$0();\n              if (!seen.add$1(0, node)) {\n                // goto for condition\n                $async$goto = 3;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait($async$self._compileIfEntrypoint$1(node.canonicalUrl), $async$_recompileDownstream$1);\n            case 5:\n              // returning from await.\n              success = $async$result;\n              allSucceeded = allSucceeded && success;\n              if (!success && H._asBoolS(t2.$index(0, \"stop-on-error\"))) {\n                $async$returnValue = false;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              toRecompile.addAll$1(0, new L.UnmodifiableSetView(node._downstream, t1));\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 4:\n              // after for\n              $async$returnValue = allSucceeded;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_recompileDownstream$1, $async$completer);\n    },\n    _compileIfEntrypoint$1: function(url) {\n      return this._compileIfEntrypoint$body$_Watcher(url);\n    },\n    _compileIfEntrypoint$body$_Watcher: function(url) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_bool),\n        $async$returnValue, $async$self = this, source, destination;\n      var $async$_compileIfEntrypoint$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (url.get$scheme() !== \"file\") {\n                $async$returnValue = true;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              source = $.$get$context().style.pathFromUri$1(M._parseUri(url));\n              destination = $async$self._destinationFor$1(source);\n              if (destination == null) {\n                $async$returnValue = true;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait($async$self.compile$2(source, destination), $async$_compileIfEntrypoint$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_compileIfEntrypoint$1, $async$completer);\n    },\n    _destinationFor$1: function(source) {\n      var destination, t2, t3, t4, _null = null,\n        t1 = this._watch$_options;\n      t1._ensureSources$0();\n      destination = t1._sourcesToDestinations.$index(0, source);\n      if (destination != null)\n        return destination;\n      t2 = $.$get$context();\n      if (J.startsWith$1$s(X.ParsedPath_ParsedPath$parse(source, t2.style).get$basename(), \"_\"))\n        return _null;\n      for (t1._ensureSources$0(), t3 = t1._sourceDirectoriesToDestinations, t3 = J.get$iterator$ax(t3.get$keys(t3)); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        if (t2._isWithinOrEquals$2(t4, source) !== C._PathRelation_within)\n          continue;\n        t1._ensureSources$0();\n        destination = t2.join$8(0, t1._sourceDirectoriesToDestinations.$index(0, t4), t2.withoutExtension$1(t2.relative$2$from(source, t4)) + \".css\", _null, _null, _null, _null, _null, _null);\n        if (t2._isWithinOrEquals$2(destination, source) !== C._PathRelation_equal)\n          return destination;\n      }\n      return _null;\n    }\n  };\n  A._Watcher__debounceEvents_closure.prototype = {\n    call$1: function(buffer) {\n      var t2, t3, t4, oldType,\n        t1 = K.PathMap__create(null, type$.legacy_ChangeType);\n      for (t2 = J.get$iterator$ax(buffer); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t4 = t3.path;\n        oldType = t1.$index(0, t4);\n        if (oldType == null)\n          t1.$indexSet(0, t4, t3.type);\n        else if (t3.type === C.ChangeType_remove)\n          t1.$indexSet(0, t4, C.ChangeType_remove);\n        else if (oldType !== C.ChangeType_add)\n          t1.$indexSet(0, t4, C.ChangeType_modify);\n      }\n      return t1.get$keys(t1).map$1$1(0, new A._Watcher__debounceEvents__closure(new K.PathMap(t1, type$.PathMap_legacy_ChangeType)), type$.legacy_WatchEvent);\n    },\n    $signature: 217\n  };\n  A._Watcher__debounceEvents__closure.prototype = {\n    call$1: function(path) {\n      return new E.WatchEvent(this.typeForPath._collection$_map.$index(0, path), path);\n    },\n    $signature: 218\n  };\n  T.EmptyExtender.prototype = {\n    get$isEmpty: function(_) {\n      return true;\n    },\n    get$simpleSelectors: function() {\n      return C.C_EmptyUnmodifiableSet;\n    },\n    extensionsWhereTarget$1: function(callback) {\n      return C.List_empty2;\n    },\n    addExtensions$1: function(extenders) {\n      throw H.wrapException(P.UnsupportedError$(string$.addExt));\n    },\n    clone$0: function() {\n      return C.Tuple2_EmptyExtender_Map_empty;\n    },\n    $isExtender: 1\n  };\n  F.Extender.prototype = {\n    get$isEmpty: function(_) {\n      var t1 = this._extensions;\n      return t1.get$isEmpty(t1);\n    },\n    get$simpleSelectors: function() {\n      return new M.MapKeySet(this._selectors, type$.MapKeySet_legacy_SimpleSelector);\n    },\n    extensionsWhereTarget$1: function($async$callback) {\n      var $async$self = this;\n      return P._makeSyncStarIterable(function() {\n        var callback = $async$callback;\n        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;\n        return function $async$extensionsWhereTarget$1($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                t1 = $async$self._extensions, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2);\n              case 2:\n                // for condition\n                if (!t2.moveNext$0()) {\n                  // goto after for\n                  $async$goto = 3;\n                  break;\n                }\n                t3 = t2.get$current(t2);\n                if (!callback.call$1(t3)) {\n                  // goto for condition\n                  $async$goto = 2;\n                  break;\n                }\n                t3 = J.get$values$z(t1.$index(0, t3)), t3 = t3.get$iterator(t3);\n              case 4:\n                // for condition\n                if (!t3.moveNext$0()) {\n                  // goto after for\n                  $async$goto = 5;\n                  break;\n                }\n                t4 = t3.get$current(t3);\n                $async$goto = t4 instanceof A.MergedExtension ? 6 : 8;\n                break;\n              case 6:\n                // then\n                t4 = t4.unmerge$0();\n                $async$goto = 9;\n                return P._IterationMarker_yieldStar(new H.WhereIterable(t4, new F.Extender_extensionsWhereTarget_closure(), t4.$ti._eval$1(\"WhereIterable<Iterable.E>\")));\n              case 9:\n                // after yield\n                // goto join\n                $async$goto = 7;\n                break;\n              case 8:\n                // else\n                $async$goto = !t4.isOptional ? 10 : 11;\n                break;\n              case 10:\n                // then\n                $async$goto = 12;\n                return t4;\n              case 12:\n                // after yield\n              case 11:\n                // join\n              case 7:\n                // join\n                // goto for condition\n                $async$goto = 4;\n                break;\n              case 5:\n                // after for\n                // goto for condition\n                $async$goto = 2;\n                break;\n              case 3:\n                // after for\n                // implicit return\n                return P._IterationMarker_endOfIteration();\n              case 1:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, type$.legacy_Extension);\n    },\n    addSelector$3: function(selector, span, mediaContext) {\n      var originalSelector, error, t1, t2, t3, _i, exception, modifiableSelector, _this = this;\n      selector = selector;\n      originalSelector = selector;\n      if (!originalSelector.get$isInvisible())\n        for (t1 = originalSelector.components, t2 = t1.length, t3 = _this._originals, _i = 0; _i < t2; ++_i)\n          t3.add$1(0, t1[_i]);\n      t1 = _this._extensions;\n      if (t1.get$isNotEmpty(t1))\n        try {\n          selector = _this._extendList$3(originalSelector, t1, mediaContext);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException) {\n            error = t1;\n            throw H.wrapException(E.SassException$(\"From \" + error.get$span().message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), span));\n          } else\n            throw exception;\n        }\n      modifiableSelector = new F.ModifiableCssValue(selector, span, type$.ModifiableCssValue_legacy_SelectorList);\n      if (mediaContext != null)\n        _this._mediaContexts.$indexSet(0, modifiableSelector, mediaContext);\n      _this._registerSelector$2(selector, modifiableSelector);\n      return modifiableSelector;\n    },\n    _registerSelector$2: function(list, selector) {\n      var t1, t2, t3, _i, t4, t5, _i0, component, t6, t7, _i1, simple;\n      for (t1 = list.components, t2 = t1.length, t3 = this._selectors, _i = 0; _i < t2; ++_i)\n        for (t4 = t1[_i].components, t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {\n          component = t4[_i0];\n          if (component instanceof X.CompoundSelector)\n            for (t6 = component.components, t7 = t6.length, _i1 = 0; _i1 < t7; ++_i1) {\n              simple = t6[_i1];\n              J.add$1$ax(t3.putIfAbsent$2(simple, new F.Extender__registerSelector_closure()), selector);\n              if (simple instanceof D.PseudoSelector && simple.selector != null)\n                this._registerSelector$2(simple.selector, selector);\n            }\n        }\n    },\n    addExtension$4: function(extender, target, extend, mediaContext) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, newExtensions, _i, complex, t12, state, existingState, t13, _i0, component, t14, t15, _i1, simple, newExtensionsByTarget, additionalExtensions, _this = this,\n        selectors = _this._selectors.$index(0, target),\n        t1 = _this._extensionsByExtender,\n        existingExtensions = t1.$index(0, target),\n        sources = _this._extensions.putIfAbsent$2(target, new F.Extender_addExtension_closure());\n      for (t2 = extender.value.components, t3 = t2.length, t4 = selectors == null, t5 = _this._sourceSpecificity, t6 = extender.span, t7 = extend.span, t8 = extend.isOptional, t9 = existingExtensions != null, t10 = type$.legacy_ComplexSelector, t11 = type$.legacy_Extension, newExtensions = null, _i = 0; _i < t3; ++_i) {\n        complex = t2[_i];\n        if (complex._maxSpecificity == null)\n          complex._computeSpecificity$0();\n        t12 = complex._maxSpecificity;\n        state = new S.Extension(complex, target, t12, t8, false, mediaContext, t6, t7);\n        existingState = sources.$index(0, complex);\n        if (existingState != null) {\n          sources.$indexSet(0, complex, A.MergedExtension_merge(existingState, state));\n          continue;\n        }\n        sources.$indexSet(0, complex, state);\n        for (t12 = complex.components, t13 = t12.length, _i0 = 0; _i0 < t13; ++_i0) {\n          component = t12[_i0];\n          if (component instanceof X.CompoundSelector)\n            for (t14 = component.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1) {\n              simple = t14[_i1];\n              J.add$1$ax(t1.putIfAbsent$2(simple, new F.Extender_addExtension_closure0()), state);\n              t5.putIfAbsent$2(simple, new F.Extender_addExtension_closure1(complex));\n            }\n        }\n        if (!t4 || t9) {\n          if (newExtensions == null)\n            newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t10, t11);\n          newExtensions.$indexSet(0, complex, state);\n        }\n      }\n      if (newExtensions == null)\n        return;\n      t1 = type$.legacy_SimpleSelector;\n      newExtensionsByTarget = P.LinkedHashMap_LinkedHashMap$_literal([target, newExtensions], t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension);\n      if (t9) {\n        additionalExtensions = _this._extendExistingExtensions$2(existingExtensions, newExtensionsByTarget);\n        if (additionalExtensions != null)\n          B.mapAddAll2(newExtensionsByTarget, additionalExtensions, t1, t10, t11);\n      }\n      if (!t4)\n        _this._extendExistingSelectors$2(selectors, newExtensionsByTarget);\n    },\n    _extendExistingExtensions$2: function(extensions, newExtensions) {\n      var extension, selectors, error, t1, t2, t3, t4, t5, t6, additionalExtensions, _i, sources, exception, containsExtension, t7, t8, first, _i0, complex, t9, t10, t11, t12, t13, t14, withExtender, existingExtension, _i1, component, _i2;\n      for (t1 = J.toList$0$ax(extensions), t2 = t1.length, t3 = this._extensionsByExtender, t4 = type$.legacy_SimpleSelector, t5 = type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension, t6 = this._extensions, additionalExtensions = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        extension = t1[_i];\n        sources = t6.$index(0, extension.target);\n        selectors = null;\n        try {\n          selectors = this._extendComplex$3(extension.extender, newExtensions, extension.mediaContext);\n          if (selectors == null)\n            continue;\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException) {\n            error = t1;\n            throw H.wrapException(E.SassException$(\"From \" + extension.extenderSpan.message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), error.get$span()));\n          } else\n            throw exception;\n        }\n        containsExtension = J.$eq$(J.get$first$ax(selectors), extension.extender);\n        for (t7 = selectors, t8 = t7.length, first = false, _i0 = 0; _i0 < t7.length; t7.length === t8 || (0, H.throwConcurrentModificationError)(t7), ++_i0) {\n          complex = t7[_i0];\n          if (containsExtension && first) {\n            first = false;\n            continue;\n          }\n          t9 = extension;\n          t10 = t9.target;\n          t11 = t9.extenderSpan;\n          t12 = t9.span;\n          t13 = t9.mediaContext;\n          t14 = t9.specificity;\n          t9 = t9.isOptional;\n          if (t14 == null) {\n            if (complex._maxSpecificity == null)\n              complex._computeSpecificity$0();\n            t14 = complex._maxSpecificity;\n          }\n          withExtender = new S.Extension(complex, t10, t14, t9, false, t13, t11, t12);\n          existingExtension = sources.$index(0, complex);\n          if (existingExtension != null)\n            sources.$indexSet(0, complex, A.MergedExtension_merge(existingExtension, withExtender));\n          else {\n            sources.$indexSet(0, complex, withExtender);\n            for (t9 = complex.components, t10 = t9.length, _i1 = 0; _i1 < t10; ++_i1) {\n              component = t9[_i1];\n              if (component instanceof X.CompoundSelector)\n                for (t11 = component.components, t12 = t11.length, _i2 = 0; _i2 < t12; ++_i2)\n                  J.add$1$ax(t3.putIfAbsent$2(t11[_i2], new F.Extender__extendExistingExtensions_closure()), withExtender);\n            }\n            if (newExtensions.containsKey$1(extension.target)) {\n              if (additionalExtensions == null)\n                additionalExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n              additionalExtensions.putIfAbsent$2(extension.target, new F.Extender__extendExistingExtensions_closure0()).$indexSet(0, complex, withExtender);\n            }\n          }\n        }\n        if (!containsExtension)\n          sources.remove$1(0, extension.extender);\n      }\n      return additionalExtensions;\n    },\n    _extendExistingSelectors$2: function(selectors, newExtensions) {\n      var selector, error, t1, t2, oldValue, exception;\n      for (t1 = selectors.get$iterator(selectors), t2 = this._mediaContexts; t1.moveNext$0();) {\n        selector = t1.get$current(t1);\n        oldValue = selector.value;\n        try {\n          selector.value = this._extendList$3(selector.value, newExtensions, t2.$index(0, selector));\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException) {\n            error = t1;\n            throw H.wrapException(E.SassException$(\"From \" + selector.span.message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), error.get$span()));\n          } else\n            throw exception;\n        }\n        if (oldValue == selector.value)\n          continue;\n        this._registerSelector$2(selector.value, selector);\n      }\n    },\n    addExtensions$1: function(extenders) {\n      var t1, t2, t3, _this = this, _box_0 = {};\n      _box_0.newExtensions = _box_0.selectorsToExtend = _box_0.extensionsToExtend = null;\n      for (t1 = J.get$iterator$ax(extenders), t2 = _this._sourceSpecificity; t1.moveNext$0();) {\n        t3 = t1.get$current(t1);\n        if (t3.get$isEmpty(t3))\n          continue;\n        t2.addAll$1(0, t3.get$_sourceSpecificity());\n        t3.get$_extensions().forEach$1(0, new F.Extender_addExtensions_closure(_box_0, _this, t3));\n      }\n      t1 = _box_0.newExtensions;\n      if (t1 == null)\n        return;\n      t2 = _box_0.extensionsToExtend;\n      if (t2 != null)\n        _this._extendExistingExtensions$2(t2, t1);\n      t1 = _box_0.selectorsToExtend;\n      if (t1 != null)\n        _this._extendExistingSelectors$2(t1, _box_0.newExtensions);\n    },\n    _extendList$3: function(list, extensions, mediaQueryContext) {\n      var t1, t2, t3, extended, i, complex, result, t4;\n      for (t1 = list.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector, extended = null, i = 0; i < t2; ++i) {\n        complex = t1[i];\n        result = this._extendComplex$3(complex, extensions, mediaQueryContext);\n        if (result == null) {\n          if (extended != null)\n            extended.push(complex);\n        } else {\n          if (extended == null)\n            if (i === 0)\n              extended = H.setRuntimeTypeInfo([], t3);\n            else {\n              t4 = C.JSArray_methods.sublist$2(t1, 0, i);\n              extended = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4)._eval$1(\"JSArray<1>\"));\n            }\n          C.JSArray_methods.addAll$1(extended, result);\n        }\n      }\n      if (extended == null)\n        return list;\n      t1 = this._originals;\n      return D.SelectorList$(J.where$1$ax(this._trim$2(extended, t1.get$contains(t1)), new F.Extender__extendList_closure()));\n    },\n    _extendComplex$3: function(complex, extensions, mediaQueryContext) {\n      var t1, t2, t3, t4, t5, t6, t7, t8, t9, extendedNotExpanded, i, component, extended, result, t10,\n        _s28_ = \"components may not be empty.\",\n        _box_0 = {},\n        isOriginal = this._originals.contains$1(0, complex);\n      for (t1 = complex.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector, t4 = type$.JSArray_legacy_ComplexSelectorComponent, t5 = type$.legacy_ComplexSelectorComponent, t6 = H._arrayInstanceType(t1), t7 = t6._precomputed1, t6 = t6._eval$1(\"SubListIterable<1>\"), t8 = t6._eval$1(\"MappedListIterable<ListIterable.E,List<ComplexSelector*>*>\"), t9 = t8._eval$1(\"ListIterable.E\"), extendedNotExpanded = null, i = 0; i < t2; ++i) {\n        component = t1[i];\n        if (component instanceof X.CompoundSelector) {\n          extended = this._extendCompound$4$inOriginal(component, extensions, mediaQueryContext, isOriginal);\n          if (extended == null) {\n            if (extendedNotExpanded != null) {\n              result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t10 = result;\n              if (t10.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector(t10, false)], t3));\n            }\n          } else {\n            if (extendedNotExpanded == null) {\n              t10 = new H.SubListIterable(t1, 0, i, t6);\n              t10.SubListIterable$3(t1, 0, i, t7);\n              extendedNotExpanded = P.List_List$from(new H.MappedListIterable(t10, new F.Extender__extendComplex_closure(complex), t8), true, t9);\n            }\n            C.JSArray_methods.add$1(extendedNotExpanded, extended);\n          }\n        } else if (extendedNotExpanded != null) {\n          result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          t10 = result;\n          if (t10.length === 0)\n            H.throwExpression(P.ArgumentError$(_s28_));\n          C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector(t10, false)], t3));\n        }\n      }\n      if (extendedNotExpanded == null)\n        return null;\n      _box_0.first = true;\n      t1 = type$.legacy_ComplexSelector;\n      t1 = J.expand$1$1$ax(Y.paths(extendedNotExpanded, t1), new F.Extender__extendComplex_closure0(_box_0, this, complex), t1);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    _extendCompound$4$inOriginal: function(compound, extensions, mediaQueryContext, inOriginal) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, options, i, simple, extended, result, t13, t14, unifiedPaths, isOriginal, _this = this, _null = null,\n        _s28_ = \"components may not be empty.\",\n        _box_1 = {},\n        t1 = _this._mode,\n        targetsUsed = t1 === C.ExtendMode_normal || extensions.get$length(extensions) < 2 ? _null : P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_SimpleSelector);\n      for (t2 = compound.components, t3 = t2.length, t4 = type$.JSArray_legacy_List_legacy_Extension, t5 = type$.JSArray_legacy_Extension, t6 = type$.JSArray_legacy_ComplexSelectorComponent, t7 = type$.legacy_ComplexSelectorComponent, t8 = H._arrayInstanceType(t2), t9 = t8._precomputed1, t8 = t8._eval$1(\"SubListIterable<1>\"), t10 = type$.legacy_SimpleSelector, t11 = _this._sourceSpecificity, t12 = type$.JSArray_legacy_SimpleSelector, options = _null, i = 0; i < t3; ++i) {\n        simple = t2[i];\n        extended = _this._extendSimple$4(simple, extensions, mediaQueryContext, targetsUsed);\n        if (extended == null) {\n          if (options != null) {\n            result = P.List_List$from(H.setRuntimeTypeInfo([simple], t12), false, t10);\n            result.fixed$length = Array;\n            result.immutable$list = Array;\n            t13 = result;\n            if (t13.length === 0)\n              H.throwExpression(P.ArgumentError$(_s28_));\n            result = P.List_List$from(H.setRuntimeTypeInfo([new X.CompoundSelector(t13)], t6), false, t7);\n            result.fixed$length = Array;\n            result.immutable$list = Array;\n            t13 = result;\n            if (t13.length === 0)\n              H.throwExpression(P.ArgumentError$(_s28_));\n            t14 = t11.$index(0, simple);\n            if (t14 == null)\n              t14 = 0;\n            options.push(H.setRuntimeTypeInfo([new S.Extension(new S.ComplexSelector(t13, false), _null, t14, true, true, _null, _null, _null)], t5));\n          }\n        } else {\n          if (options == null) {\n            options = H.setRuntimeTypeInfo([], t4);\n            if (i !== 0) {\n              t13 = new H.SubListIterable(t2, 0, i, t8);\n              t13.SubListIterable$3(t2, 0, i, t9);\n              result = P.List_List$from(t13, false, t10);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t13 = result;\n              compound = new X.CompoundSelector(t13);\n              if (t13.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              result = P.List_List$from(H.setRuntimeTypeInfo([compound], t6), false, t7);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t13 = result;\n              if (t13.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              t14 = _this._sourceSpecificityFor$1(compound);\n              options.push(H.setRuntimeTypeInfo([new S.Extension(new S.ComplexSelector(t13, false), _null, t14, true, true, _null, _null, _null)], t5));\n            }\n          }\n          C.JSArray_methods.addAll$1(options, extended);\n        }\n      }\n      if (options == null)\n        return _null;\n      if (targetsUsed != null && targetsUsed._collection$_length !== extensions.get$length(extensions))\n        return _null;\n      if (options.length === 1)\n        return J.map$1$1$ax(C.JSArray_methods.get$first(options), new F.Extender__extendCompound_closure(mediaQueryContext), type$.legacy_ComplexSelector).toList$0(0);\n      t1 = _box_1.first = t1 !== C.ExtendMode_replace;\n      unifiedPaths = J.map$1$1$ax(Y.paths(options, type$.legacy_Extension), new F.Extender__extendCompound_closure0(_box_1, mediaQueryContext), type$.legacy_List_legacy_ComplexSelector);\n      isOriginal = new F.Extender__extendCompound_closure1();\n      if (inOriginal && t1)\n        isOriginal = new F.Extender__extendCompound_closure2(J.get$first$ax(unifiedPaths.get$first(unifiedPaths)));\n      t1 = unifiedPaths.where$1(0, new F.Extender__extendCompound_closure3());\n      t2 = t1.$ti._eval$1(\"ExpandIterable<Iterable.E,ComplexSelector*>\");\n      return _this._trim$2(P.List_List$from(new H.ExpandIterable(t1, new F.Extender__extendCompound_closure4(), t2), true, t2._eval$1(\"Iterable.E\")), isOriginal);\n    },\n    _extendSimple$4: function(simple, extensions, mediaQueryContext, targetsUsed) {\n      var extended, result,\n        t1 = new F.Extender__extendSimple_withoutPseudo(this, extensions, targetsUsed);\n      if (simple instanceof D.PseudoSelector && simple.selector != null) {\n        extended = this._extendPseudo$3(simple, extensions, mediaQueryContext);\n        if (extended != null)\n          return new H.MappedListIterable(extended, new F.Extender__extendSimple_closure(this, t1), H._arrayInstanceType(extended)._eval$1(\"MappedListIterable<1,List<Extension*>*>\"));\n      }\n      result = t1.call$1(simple);\n      return result == null ? null : H.setRuntimeTypeInfo([result], type$.JSArray_legacy_List_legacy_Extension);\n    },\n    _extensionForSimple$1: function(simple) {\n      var t1 = S.ComplexSelector$(H.setRuntimeTypeInfo([X.CompoundSelector$(H.setRuntimeTypeInfo([simple], type$.JSArray_legacy_SimpleSelector))], type$.JSArray_legacy_ComplexSelectorComponent), false),\n        t2 = this._sourceSpecificity.$index(0, simple);\n      return S.Extension$oneOff(t1, true, t2 == null ? 0 : t2);\n    },\n    _extendPseudo$3: function(pseudo, extensions, mediaQueryContext) {\n      var complexes, t2, result,\n        t1 = pseudo.selector,\n        extended = this._extendList$3(t1, extensions, mediaQueryContext);\n      if (extended == t1)\n        return null;\n      complexes = extended.components;\n      t2 = pseudo.normalizedName === \"not\";\n      if (t2 && !C.JSArray_methods.any$1(t1.components, new F.Extender__extendPseudo_closure()) && C.JSArray_methods.any$1(complexes, new F.Extender__extendPseudo_closure0()))\n        complexes = new H.WhereIterable(complexes, new F.Extender__extendPseudo_closure1(), H._arrayInstanceType(complexes)._eval$1(\"WhereIterable<1>\"));\n      complexes = J.expand$1$1$ax(complexes, new F.Extender__extendPseudo_closure2(pseudo), type$.legacy_ComplexSelector);\n      if (t2 && t1.components.length === 1) {\n        t1 = H.MappedIterable_MappedIterable(complexes, new F.Extender__extendPseudo_closure3(pseudo), complexes.$ti._eval$1(\"Iterable.E\"), type$.legacy_PseudoSelector);\n        result = P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n        return result.length === 0 ? null : result;\n      } else\n        return H.setRuntimeTypeInfo([D.PseudoSelector$(pseudo.name, pseudo.argument, !pseudo.isClass, D.SelectorList$(complexes))], type$.JSArray_legacy_PseudoSelector);\n    },\n    _trim$2: function(selectors, isOriginal) {\n      var result, i, t1, t2, numOriginals, _box_0, complex1, j, t3, t4, _i, component;\n      if (selectors.length > 100)\n        return selectors;\n      result = Q.QueueList$(null, type$.legacy_ComplexSelector);\n      $label0$0:\n        for (i = selectors.length - 1, t1 = H._arrayInstanceType(selectors), t2 = t1._precomputed1, t1 = t1._eval$1(\"SubListIterable<1>\"), numOriginals = 0; i >= 0; --i) {\n          _box_0 = {};\n          complex1 = selectors[i];\n          if (isOriginal.call$1(complex1)) {\n            for (j = 0; j < numOriginals; ++j)\n              if (J.$eq$(result.$index(0, j), complex1)) {\n                B.rotateSlice(result, 0, j + 1);\n                continue $label0$0;\n              }\n            ++numOriginals;\n            result.addFirst$1(complex1);\n            continue $label0$0;\n          }\n          _box_0.maxSpecificity = 0;\n          for (t3 = complex1.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {\n            component = t3[_i];\n            if (component instanceof X.CompoundSelector)\n              _box_0.maxSpecificity = Math.max(_box_0.maxSpecificity, this._sourceSpecificityFor$1(component));\n          }\n          if (result.any$1(result, new F.Extender__trim_closure(_box_0, complex1)))\n            continue $label0$0;\n          t3 = new H.SubListIterable(selectors, 0, i, t1);\n          t3.SubListIterable$3(selectors, 0, i, t2);\n          if (t3.any$1(0, new F.Extender__trim_closure0(_box_0, complex1)))\n            continue $label0$0;\n          result.addFirst$1(complex1);\n        }\n      return result;\n    },\n    _sourceSpecificityFor$1: function(compound) {\n      var t1, t2, t3, specificity, _i, t4;\n      for (t1 = compound.components, t2 = t1.length, t3 = this._sourceSpecificity, specificity = 0, _i = 0; _i < t2; ++_i) {\n        t4 = t3.$index(0, t1[_i]);\n        specificity = Math.max(specificity, H.checkNum(t4 == null ? 0 : t4));\n      }\n      return specificity;\n    },\n    clone$0: function() {\n      var t3, t4, _this = this,\n        t1 = type$.legacy_SimpleSelector,\n        newSelectors = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList),\n        t2 = type$.legacy_ModifiableCssValue_legacy_SelectorList,\n        newMediaContexts = P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_List_legacy_CssMediaQuery),\n        oldToNewSelectors = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_CssValue_legacy_SelectorList, t2);\n      _this._selectors.forEach$1(0, new F.Extender_clone_closure(_this, newSelectors, oldToNewSelectors, newMediaContexts));\n      t2 = type$.legacy_Extension;\n      t3 = B.copyMapOfMap(_this._extensions, t1, type$.legacy_ComplexSelector, t2);\n      t2 = B.copyMapOfList(_this._extensionsByExtender, t1, t2);\n      t1 = P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int);\n      t1.addAll$1(0, _this._sourceSpecificity);\n      t4 = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector);\n      t4.addAll$1(0, _this._originals);\n      return new S.Tuple2(new F.Extender(newSelectors, t3, t2, newMediaContexts, t1, t4, C.ExtendMode_normal), oldToNewSelectors, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList);\n    },\n    get$_extensions: function() {\n      return this._extensions;\n    },\n    get$_sourceSpecificity: function() {\n      return this._sourceSpecificity;\n    }\n  };\n  F.Extender_extensionsWhereTarget_closure.prototype = {\n    call$1: function(extension) {\n      return !extension.isOptional;\n    },\n    $signature: 219\n  };\n  F.Extender__registerSelector_closure.prototype = {\n    call$0: function() {\n      return P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList);\n    },\n    $signature: 220\n  };\n  F.Extender_addExtension_closure.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);\n    },\n    $signature: 116\n  };\n  F.Extender_addExtension_closure0.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);\n    },\n    $signature: 171\n  };\n  F.Extender_addExtension_closure1.prototype = {\n    call$0: function() {\n      return this.complex.get$maxSpecificity();\n    },\n    $signature: 11\n  };\n  F.Extender__extendExistingExtensions_closure.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);\n    },\n    $signature: 171\n  };\n  F.Extender__extendExistingExtensions_closure0.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);\n    },\n    $signature: 116\n  };\n  F.Extender_addExtensions_closure.prototype = {\n    call$2: function(target, newSources) {\n      var t1, extensionsForTarget, t2, t3, t4, selectorsForTarget, t5, existingSources, _this = this;\n      if (target instanceof N.PlaceholderSelector && T.isPrivate(target.name))\n        return;\n      t1 = _this.$this;\n      extensionsForTarget = t1._extensionsByExtender.$index(0, target);\n      t2 = extensionsForTarget == null;\n      if (!t2) {\n        t3 = _this._box_0;\n        t4 = t3.extensionsToExtend;\n        C.JSArray_methods.addAll$1(t4 == null ? t3.extensionsToExtend = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension) : t4, extensionsForTarget);\n      }\n      selectorsForTarget = t1._selectors.$index(0, target);\n      t3 = selectorsForTarget != null;\n      if (t3) {\n        t4 = _this._box_0;\n        t5 = t4.selectorsToExtend;\n        (t5 == null ? t4.selectorsToExtend = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList) : t5).addAll$1(0, selectorsForTarget);\n      }\n      t1 = t1._extensions;\n      existingSources = t1.$index(0, target);\n      if (existingSources == null) {\n        t4 = _this.extender;\n        t1.$indexSet(0, target, t4.get$_extensions().$index(0, target));\n        if (!t2 || t3) {\n          t1 = _this._box_0;\n          t2 = t1.newExtensions;\n          t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension) : t2;\n          t1.$indexSet(0, target, t4.get$_extensions().$index(0, target));\n        }\n      } else\n        newSources.forEach$1(0, new F.Extender_addExtensions__closure(_this._box_0, existingSources, extensionsForTarget, selectorsForTarget, target));\n    },\n    $signature: 224\n  };\n  F.Extender_addExtensions__closure.prototype = {\n    call$2: function(extender, extension) {\n      var t2, _this = this,\n        t1 = _this.existingSources;\n      if (t1.containsKey$1(extender))\n        return;\n      t1.$indexSet(0, extender, extension);\n      if (_this.extensionsForTarget != null || _this.selectorsForTarget != null) {\n        t1 = _this._box_0;\n        t2 = t1.newExtensions;\n        t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension) : t2;\n        t1.putIfAbsent$2(_this.target, new F.Extender_addExtensions___closure()).putIfAbsent$2(extender, new F.Extender_addExtensions___closure0(extension));\n      }\n    },\n    $signature: 225\n  };\n  F.Extender_addExtensions___closure.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector, type$.legacy_Extension);\n    },\n    $signature: 116\n  };\n  F.Extender_addExtensions___closure0.prototype = {\n    call$0: function() {\n      return this.extension;\n    },\n    $signature: 226\n  };\n  F.Extender__extendList_closure.prototype = {\n    call$1: function(complex) {\n      return complex != null;\n    },\n    $signature: 15\n  };\n  F.Extender__extendComplex_closure.prototype = {\n    call$1: function(component) {\n      return H.setRuntimeTypeInfo([S.ComplexSelector$(H.setRuntimeTypeInfo([component], type$.JSArray_legacy_ComplexSelectorComponent), this.complex.lineBreak)], type$.JSArray_legacy_ComplexSelector);\n    },\n    $signature: 227\n  };\n  F.Extender__extendComplex_closure0.prototype = {\n    call$1: function(path) {\n      var t1 = Y.weave(J.map$1$1$ax(path, new F.Extender__extendComplex__closure(), type$.legacy_List_legacy_ComplexSelectorComponent).toList$0(0));\n      return new H.MappedListIterable(t1, new F.Extender__extendComplex__closure0(this._box_0, this.$this, this.complex, path), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector*>\"));\n    },\n    $signature: 228\n  };\n  F.Extender__extendComplex__closure.prototype = {\n    call$1: function(complex) {\n      return complex.components;\n    },\n    $signature: 230\n  };\n  F.Extender__extendComplex__closure0.prototype = {\n    call$1: function(components) {\n      var _this = this,\n        t1 = _this.complex,\n        outputComplex = S.ComplexSelector$(components, t1.lineBreak || J.any$1$ax(_this.path, new F.Extender__extendComplex___closure())),\n        t2 = _this._box_0;\n      if (t2.first && _this.$this._originals.contains$1(0, t1))\n        _this.$this._originals.add$1(0, outputComplex);\n      t2.first = false;\n      return outputComplex;\n    },\n    $signature: 71\n  };\n  F.Extender__extendComplex___closure.prototype = {\n    call$1: function(inputComplex) {\n      return inputComplex.lineBreak;\n    },\n    $signature: 15\n  };\n  F.Extender__extendCompound_closure.prototype = {\n    call$1: function(state) {\n      state.assertCompatibleMediaContext$1(this.mediaQueryContext);\n      return state.extender;\n    },\n    $signature: 231\n  };\n  F.Extender__extendCompound_closure0.prototype = {\n    call$1: function(path) {\n      var complexes, toUnify, t2, t3, originals, t4, _box_0 = {},\n        t1 = this._box_1;\n      if (t1.first) {\n        t1.first = false;\n        complexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([X.CompoundSelector$(J.expand$1$1$ax(path, new F.Extender__extendCompound__closure(), type$.legacy_SimpleSelector))], type$.JSArray_legacy_ComplexSelectorComponent)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent);\n      } else {\n        toUnify = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent);\n        for (t1 = J.get$iterator$ax(path), t2 = type$.legacy_CompoundSelector, t3 = type$.JSArray_legacy_SimpleSelector, originals = null; t1.moveNext$0();) {\n          t4 = t1.get$current(t1);\n          if (t4.isOriginal) {\n            if (originals == null)\n              originals = H.setRuntimeTypeInfo([], t3);\n            C.JSArray_methods.addAll$1(originals, t2._as(C.JSArray_methods.get$last(t4.extender.components)).components);\n          } else\n            toUnify._queue_list$_add$1(t4.extender.components);\n        }\n        if (originals != null)\n          toUnify.addFirst$1(H.setRuntimeTypeInfo([X.CompoundSelector$(originals)], type$.JSArray_legacy_ComplexSelectorComponent));\n        complexes = Y.unifyComplex(toUnify);\n        if (complexes == null)\n          return null;\n      }\n      _box_0.lineBreak = false;\n      for (t1 = J.get$iterator$ax(path), t2 = this.mediaQueryContext; t1.moveNext$0();) {\n        t3 = t1.get$current(t1);\n        t3.assertCompatibleMediaContext$1(t2);\n        _box_0.lineBreak = _box_0.lineBreak || t3.extender.lineBreak;\n      }\n      t1 = J.map$1$1$ax(complexes, new F.Extender__extendCompound__closure0(_box_0), type$.legacy_ComplexSelector);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"ListIterable.E\"));\n    },\n    $signature: 232\n  };\n  F.Extender__extendCompound__closure.prototype = {\n    call$1: function(state) {\n      return type$.legacy_CompoundSelector._as(C.JSArray_methods.get$last(state.extender.components)).components;\n    },\n    $signature: 233\n  };\n  F.Extender__extendCompound__closure0.prototype = {\n    call$1: function(components) {\n      return S.ComplexSelector$(components, this._box_0.lineBreak);\n    },\n    $signature: 71\n  };\n  F.Extender__extendCompound_closure1.prototype = {\n    call$1: function(_) {\n      return false;\n    },\n    $signature: 15\n  };\n  F.Extender__extendCompound_closure2.prototype = {\n    call$1: function(complex) {\n      return J.$eq$(complex, this.original);\n    },\n    $signature: 15\n  };\n  F.Extender__extendCompound_closure3.prototype = {\n    call$1: function(complexes) {\n      return complexes != null;\n    },\n    $signature: 234\n  };\n  F.Extender__extendCompound_closure4.prototype = {\n    call$1: function(l) {\n      return l;\n    },\n    $signature: 235\n  };\n  F.Extender__extendSimple_withoutPseudo.prototype = {\n    call$1: function(simple) {\n      var t1, t2,\n        extenders = this.extensions.$index(0, simple);\n      if (extenders == null)\n        return null;\n      t1 = this.targetsUsed;\n      if (t1 != null)\n        t1.add$1(0, simple);\n      t1 = this.$this;\n      if (t1._mode === C.ExtendMode_replace) {\n        t1 = extenders.get$values(extenders);\n        return P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension);\n      t2.push(t1._extensionForSimple$1(simple));\n      for (t1 = extenders.get$values(extenders), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        t2.push(t1.get$current(t1));\n      return t2;\n    },\n    $signature: 237\n  };\n  F.Extender__extendSimple_closure.prototype = {\n    call$1: function(pseudo) {\n      var t1 = this.withoutPseudo.call$1(pseudo);\n      return t1 == null ? H.setRuntimeTypeInfo([this.$this._extensionForSimple$1(pseudo)], type$.JSArray_legacy_Extension) : t1;\n    },\n    $signature: 239\n  };\n  F.Extender__extendPseudo_closure.prototype = {\n    call$1: function(complex) {\n      return complex.components.length > 1;\n    },\n    $signature: 15\n  };\n  F.Extender__extendPseudo_closure0.prototype = {\n    call$1: function(complex) {\n      return complex.components.length === 1;\n    },\n    $signature: 15\n  };\n  F.Extender__extendPseudo_closure1.prototype = {\n    call$1: function(complex) {\n      return complex.components.length <= 1;\n    },\n    $signature: 15\n  };\n  F.Extender__extendPseudo_closure2.prototype = {\n    call$1: function(complex) {\n      var innerPseudo, t2,\n        t1 = complex.components;\n      if (t1.length !== 1)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n      if (!(C.JSArray_methods.get$first(t1) instanceof X.CompoundSelector))\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n      t1 = type$.legacy_CompoundSelector._as(C.JSArray_methods.get$first(t1)).components;\n      if (t1.length !== 1)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n      if (!(C.JSArray_methods.get$first(t1) instanceof D.PseudoSelector))\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n      innerPseudo = type$.legacy_PseudoSelector._as(C.JSArray_methods.get$first(t1));\n      t1 = innerPseudo.selector;\n      if (t1 == null)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n      t2 = this.pseudo;\n      switch (t2.normalizedName) {\n        case \"not\":\n          if (innerPseudo.normalizedName !== \"matches\")\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);\n          return t1.components;\n        case \"matches\":\n        case \"any\":\n        case \"current\":\n        case \"nth-child\":\n        case \"nth-last-child\":\n          if (innerPseudo.name !== t2.name)\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);\n          if (innerPseudo.argument != t2.argument)\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);\n          return t1.components;\n        case \"has\":\n        case \"host\":\n        case \"host-context\":\n        case \"slotted\":\n          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector);\n        default:\n          return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector);\n      }\n    },\n    $signature: 240\n  };\n  F.Extender__extendPseudo_closure3.prototype = {\n    call$1: function(complex) {\n      var t1 = this.pseudo;\n      return D.PseudoSelector$(t1.name, t1.argument, !t1.isClass, D.SelectorList$(H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector)));\n    },\n    $signature: 243\n  };\n  F.Extender__trim_closure.prototype = {\n    call$1: function(complex2) {\n      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector(complex2.components, this.complex1.components);\n    },\n    $signature: 15\n  };\n  F.Extender__trim_closure0.prototype = {\n    call$1: function(complex2) {\n      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector(complex2.components, this.complex1.components);\n    },\n    $signature: 15\n  };\n  F.Extender_clone_closure.prototype = {\n    call$2: function(simple, selectors) {\n      var t1, t2, t3, t4, t5, t6, newSelector, mediaContext, _this = this,\n        newSelectorSet = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList);\n      _this.newSelectors.$indexSet(0, simple, newSelectorSet);\n      for (t1 = selectors.get$iterator(selectors), t2 = type$.ModifiableCssValue_legacy_SelectorList, t3 = _this.oldToNewSelectors, t4 = _this.$this._mediaContexts, t5 = _this.newMediaContexts; t1.moveNext$0();) {\n        t6 = t1.get$current(t1);\n        newSelector = new F.ModifiableCssValue(t6.value, t6.span, t2);\n        newSelectorSet.add$1(0, newSelector);\n        t3.$indexSet(0, t6, newSelector);\n        mediaContext = t4.$index(0, t6);\n        if (mediaContext != null)\n          t5.$indexSet(0, newSelector, mediaContext);\n      }\n    },\n    $signature: 249\n  };\n  S.Extension.prototype = {\n    assertCompatibleMediaContext$1: function(mediaContext) {\n      var t1 = this.mediaContext;\n      if (t1 == null)\n        return;\n      if (mediaContext != null && C.C_ListEquality.equals$2(0, t1, mediaContext))\n        return;\n      throw H.wrapException(E.SassException$(string$.You_ma, this.span));\n    },\n    toString$0: function(_) {\n      var t1 = H.S(this.extender) + \" {@extend \" + H.S(this.target);\n      return t1 + (this.isOptional ? \" !optional\" : \"\") + \"}\";\n    },\n    get$target: function() {\n      return this.target;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.unifyComplex_closure.prototype = {\n    call$1: function(complex) {\n      var t1 = J.getInterceptor$asx(complex);\n      return t1.sublist$2(complex, 0, t1.get$length(complex) - 1);\n    },\n    $signature: 118\n  };\n  Y._weaveParents_closure.prototype = {\n    call$2: function(group1, group2) {\n      var unified, t1, _null = null;\n      if (C.C_ListEquality.equals$2(0, group1, group2))\n        return group1;\n      if (!(J.get$first$ax(group1) instanceof X.CompoundSelector) || !(J.get$first$ax(group2) instanceof X.CompoundSelector))\n        return _null;\n      if (Y.complexIsParentSuperselector(group1, group2))\n        return group2;\n      if (Y.complexIsParentSuperselector(group2, group1))\n        return group1;\n      if (!Y._mustUnify(group1, group2))\n        return _null;\n      unified = Y.unifyComplex(H.setRuntimeTypeInfo([group1, group2], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent));\n      if (unified == null)\n        return _null;\n      t1 = J.getInterceptor$asx(unified);\n      if (t1.get$length(unified) > 1)\n        return _null;\n      return t1.get$first(unified);\n    },\n    $signature: 258\n  };\n  Y._weaveParents_closure0.prototype = {\n    call$1: function(sequence) {\n      return Y.complexIsParentSuperselector(sequence.get$first(sequence), this.group);\n    },\n    $signature: 260\n  };\n  Y._weaveParents_closure1.prototype = {\n    call$1: function(chunk) {\n      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure1(), type$.legacy_ComplexSelectorComponent);\n    },\n    $signature: 170\n  };\n  Y._weaveParents__closure1.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 118\n  };\n  Y._weaveParents_closure2.prototype = {\n    call$1: function(sequence) {\n      return sequence.get$length(sequence) === 0;\n    },\n    $signature: 169\n  };\n  Y._weaveParents_closure3.prototype = {\n    call$1: function(chunk) {\n      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure0(), type$.legacy_ComplexSelectorComponent);\n    },\n    $signature: 170\n  };\n  Y._weaveParents__closure0.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 118\n  };\n  Y._weaveParents_closure4.prototype = {\n    call$1: function(choice) {\n      return J.get$isNotEmpty$asx(choice);\n    },\n    $signature: 264\n  };\n  Y._weaveParents_closure5.prototype = {\n    call$1: function(path) {\n      var t1 = J.expand$1$1$ax(path, new Y._weaveParents__closure(), type$.legacy_ComplexSelectorComponent);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    $signature: 265\n  };\n  Y._weaveParents__closure.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 269\n  };\n  Y._mustUnify_closure.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector && C.JSArray_methods.any$1(component.components, new Y._mustUnify__closure(this.uniqueSelectors));\n    },\n    $signature: 84\n  };\n  Y._mustUnify__closure.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (!(simple instanceof N.IDSelector))\n        t1 = simple instanceof D.PseudoSelector && !simple.isClass;\n      else\n        t1 = true;\n      return t1 && this.uniqueSelectors.contains$1(0, simple);\n    },\n    $signature: 19\n  };\n  Y.paths_closure.prototype = {\n    call$2: function(paths, choice) {\n      var t1 = this.T;\n      t1 = J.expand$1$1$ax(choice, new Y.paths__closure(paths, t1), t1._eval$1(\"List<0*>*\"));\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<List<0*>*>*(List<List<0*>*>*,List<0*>*)\");\n    }\n  };\n  Y.paths__closure.prototype = {\n    call$1: function(option) {\n      var t1 = this.T;\n      return J.map$1$1$ax(this.paths, new Y.paths___closure(option, t1), t1._eval$1(\"List<0*>*\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"Iterable<List<0*>*>*(0*)\");\n    }\n  };\n  Y.paths___closure.prototype = {\n    call$1: function(path) {\n      var t2,\n        t1 = H.setRuntimeTypeInfo([], this.T._eval$1(\"JSArray<0*>\"));\n      for (t2 = J.get$iterator$ax(path); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(this.option);\n      return t1;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(List<0*>*)\");\n    }\n  };\n  Y._hasRoot_closure.prototype = {\n    call$1: function(simple) {\n      return simple instanceof D.PseudoSelector && simple.isClass && simple.normalizedName === \"root\";\n    },\n    $signature: 19\n  };\n  Y.listIsSuperselector_closure.prototype = {\n    call$1: function(complex1) {\n      return C.JSArray_methods.any$1(this.list1, new Y.listIsSuperselector__closure(complex1));\n    },\n    $signature: 15\n  };\n  Y.listIsSuperselector__closure.prototype = {\n    call$1: function(complex2) {\n      return Y.complexIsSuperselector(complex2.components, this.complex1.components);\n    },\n    $signature: 15\n  };\n  Y._simpleIsSuperselectorOfCompound_closure.prototype = {\n    call$1: function(theirSimple) {\n      var t1 = this.simple;\n      if (J.$eq$(t1, theirSimple))\n        return true;\n      if (theirSimple instanceof D.PseudoSelector && theirSimple.selector != null && $._subselectorPseudos.contains$1(0, theirSimple.normalizedName))\n        return C.JSArray_methods.every$1(theirSimple.selector.components, new Y._simpleIsSuperselectorOfCompound__closure(t1));\n      else\n        return false;\n    },\n    $signature: 19\n  };\n  Y._simpleIsSuperselectorOfCompound__closure.prototype = {\n    call$1: function(complex) {\n      var t1 = complex.components;\n      if (t1.length !== 1)\n        return false;\n      return C.JSArray_methods.contains$1(type$.legacy_CompoundSelector._as(C.JSArray_methods.get$single(t1)).components, this.simple);\n    },\n    $signature: 15\n  };\n  Y._selectorPseudoIsSuperselector_closure.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 52\n  };\n  Y._selectorPseudoIsSuperselector_closure0.prototype = {\n    call$1: function(complex1) {\n      var t1 = complex1.components,\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent),\n        t3 = this.parents;\n      if (t3 != null)\n        for (t3 = t3.get$iterator(t3); t3.moveNext$0();)\n          t2.push(t3.get$current(t3));\n      t2.push(this.compound2);\n      return Y.complexIsSuperselector(t1, t2);\n    },\n    $signature: 15\n  };\n  Y._selectorPseudoIsSuperselector_closure1.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 52\n  };\n  Y._selectorPseudoIsSuperselector_closure2.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 52\n  };\n  Y._selectorPseudoIsSuperselector_closure3.prototype = {\n    call$1: function(complex) {\n      return C.JSArray_methods.any$1(this.compound2.components, new Y._selectorPseudoIsSuperselector__closure(complex, this.pseudo1));\n    },\n    $signature: 15\n  };\n  Y._selectorPseudoIsSuperselector__closure.prototype = {\n    call$1: function(simple2) {\n      var compound1, _this = this;\n      if (simple2 instanceof F.TypeSelector) {\n        compound1 = C.JSArray_methods.get$last(_this.complex.components);\n        return compound1 instanceof X.CompoundSelector && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure(simple2));\n      } else if (simple2 instanceof N.IDSelector) {\n        compound1 = C.JSArray_methods.get$last(_this.complex.components);\n        return compound1 instanceof X.CompoundSelector && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure0(simple2));\n      } else if (simple2 instanceof D.PseudoSelector && simple2.name === _this.pseudo1.name && simple2.selector != null)\n        return Y.listIsSuperselector(simple2.selector.components, H.setRuntimeTypeInfo([_this.complex], type$.JSArray_legacy_ComplexSelector));\n      else\n        return false;\n    },\n    $signature: 19\n  };\n  Y._selectorPseudoIsSuperselector___closure.prototype = {\n    call$1: function(simple1) {\n      var t1;\n      if (simple1 instanceof F.TypeSelector) {\n        t1 = this.simple2.name.$eq(0, simple1.name);\n        t1 = !t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 19\n  };\n  Y._selectorPseudoIsSuperselector___closure0.prototype = {\n    call$1: function(simple1) {\n      var t1;\n      if (simple1 instanceof N.IDSelector) {\n        t1 = simple1.name;\n        t1 = this.simple2.name !== t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 19\n  };\n  Y._selectorPseudoIsSuperselector_closure4.prototype = {\n    call$1: function(pseudo2) {\n      return J.$eq$(this.pseudo1.selector, pseudo2.selector);\n    },\n    $signature: 52\n  };\n  Y._selectorPseudoIsSuperselector_closure5.prototype = {\n    call$1: function(pseudo2) {\n      var t1, t2;\n      if (pseudo2 instanceof D.PseudoSelector) {\n        t1 = this.pseudo1;\n        if (pseudo2.name === t1.name)\n          if (pseudo2.argument == t1.argument) {\n            t2 = pseudo2.selector;\n            t2 = Y.listIsSuperselector(t1.selector.components, t2.components);\n            t1 = t2;\n          } else\n            t1 = false;\n        else\n          t1 = false;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 19\n  };\n  Y._selectorPseudosNamed_closure.prototype = {\n    call$1: function(pseudo) {\n      return pseudo.isClass === this.isClass && pseudo.selector != null && pseudo.name === this.name;\n    },\n    $signature: 52\n  };\n  A.MergedExtension.prototype = {\n    unmerge$0: function() {\n      var $async$self = this;\n      return P._makeSyncStarIterable(function() {\n        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;\n        return function $async$unmerge$0($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                t1 = $async$self.left;\n                $async$goto = t1 instanceof A.MergedExtension ? 2 : 4;\n                break;\n              case 2:\n                // then\n                $async$goto = 5;\n                return P._IterationMarker_yieldStar(t1.unmerge$0());\n              case 5:\n                // after yield\n                // goto join\n                $async$goto = 3;\n                break;\n              case 4:\n                // else\n                $async$goto = 6;\n                return t1;\n              case 6:\n                // after yield\n              case 3:\n                // join\n                $async$goto = 7;\n                return $async$self.right;\n              case 7:\n                // after yield\n                // implicit return\n                return P._IterationMarker_endOfIteration();\n              case 1:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, type$.legacy_Extension);\n    }\n  };\n  L.ExtendMode.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  Y.closure.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return t1.$index($arguments, 0).get$isTruthy() ? t1.$index($arguments, 1) : t1.$index($arguments, 2);\n    },\n    $signature: 4\n  };\n  K.closure44.prototype = {\n    call$1: function($arguments) {\n      return K._rgb(\"rgb\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure45.prototype = {\n    call$1: function($arguments) {\n      return K._rgb(\"rgb\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure46.prototype = {\n    call$1: function($arguments) {\n      return K._rgbTwoArg(\"rgb\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure47.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels(\"rgb\", H.setRuntimeTypeInfo([\"$red\", \"$green\", \"$blue\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString ? parsed : K._rgb(\"rgb\", type$.legacy_List_legacy_Value._as(parsed));\n    },\n    $signature: 4\n  };\n  K.closure48.prototype = {\n    call$1: function($arguments) {\n      return K._rgb(\"rgba\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure49.prototype = {\n    call$1: function($arguments) {\n      return K._rgb(\"rgba\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure50.prototype = {\n    call$1: function($arguments) {\n      return K._rgbTwoArg(\"rgba\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure51.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels(\"rgba\", H.setRuntimeTypeInfo([\"$red\", \"$green\", \"$blue\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString ? parsed : K._rgb(\"rgba\", type$.legacy_List_legacy_Value._as(parsed));\n    },\n    $signature: 4\n  };\n  K.closure52.prototype = {\n    call$1: function($arguments) {\n      var color, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        weight = t1.$index($arguments, 1).assertNumber$1(\"weight\");\n      if (t1.$index($arguments, 0) instanceof T.SassNumber) {\n        if (weight.value !== 100 || !weight.hasUnit$1(\"%\"))\n          throw H.wrapException(string$.Only_oa);\n        return K._functionString(\"invert\", t1.take$1($arguments, 1));\n      }\n      color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      t1 = color.get$red();\n      t2 = color.get$green();\n      return K._mixColors(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);\n    },\n    $signature: 4\n  };\n  K.closure53.prototype = {\n    call$1: function($arguments) {\n      return K._hsl(\"hsl\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure54.prototype = {\n    call$1: function($arguments) {\n      return K._hsl(\"hsl\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure55.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())\n        return K._functionString(\"hsl\", $arguments);\n      else\n        throw H.wrapException(E.SassScriptException$(\"Missing argument $lightness.\"));\n    },\n    $signature: 16\n  };\n  K.closure56.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels(\"hsl\", H.setRuntimeTypeInfo([\"$hue\", \"$saturation\", \"$lightness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString ? parsed : K._hsl(\"hsl\", type$.legacy_List_legacy_Value._as(parsed));\n    },\n    $signature: 4\n  };\n  K.closure57.prototype = {\n    call$1: function($arguments) {\n      return K._hsl(\"hsla\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure58.prototype = {\n    call$1: function($arguments) {\n      return K._hsl(\"hsla\", $arguments);\n    },\n    $signature: 4\n  };\n  K.closure59.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())\n        return K._functionString(\"hsla\", $arguments);\n      else\n        throw H.wrapException(E.SassScriptException$(\"Missing argument $lightness.\"));\n    },\n    $signature: 16\n  };\n  K.closure60.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels(\"hsla\", H.setRuntimeTypeInfo([\"$hue\", \"$saturation\", \"$lightness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString ? parsed : K._hsl(\"hsla\", type$.legacy_List_legacy_Value._as(parsed));\n    },\n    $signature: 4\n  };\n  K.closure61.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber)\n        return K._functionString(\"grayscale\", $arguments);\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeHsl$1$saturation(0);\n    },\n    $signature: 4\n  };\n  K.closure62.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        degrees = t1.$index($arguments, 1).assertNumber$1(\"degrees\");\n      return color.changeHsl$1$hue(color.get$hue() + degrees.value);\n    },\n    $signature: 26\n  };\n  K.closure63.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() + amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 26\n  };\n  K.closure64.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() - amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 26\n  };\n  K.closure65.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString(\"saturate(\" + N.serializeValue0(J.$index$asx($arguments, 0).assertNumber$1(\"amount\"), false, true) + \")\", false);\n    },\n    $signature: 16\n  };\n  K.closure66.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() + amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 26\n  };\n  K.closure67.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() - amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 26\n  };\n  K.closure68.prototype = {\n    call$1: function($arguments) {\n      var argument = J.$index$asx($arguments, 0);\n      if (argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart()))\n        return K._functionString(\"alpha\", $arguments);\n      return T.SassNumber$(argument.assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 4\n  };\n  K.closure69.prototype = {\n    call$1: function($arguments) {\n      var t1,\n        argList = J.$index$asx($arguments, 0).get$asList();\n      if (argList.length !== 0 && C.JSArray_methods.every$1(argList, new K._closure8()))\n        return K._functionString(\"alpha\", $arguments);\n      t1 = argList.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$(\"Missing argument $color.\"));\n      else\n        throw H.wrapException(E.SassScriptException$(\"Only 1 argument allowed, but \" + t1 + \" were passed.\"));\n    },\n    $signature: 16\n  };\n  K._closure8.prototype = {\n    call$1: function(argument) {\n      return argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart());\n    },\n    $signature: 51\n  };\n  K.closure70.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber)\n        return K._functionString(\"opacity\", $arguments);\n      return T.SassNumber$(t1.$index($arguments, 0).assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 4\n  };\n  K.closure99.prototype = {\n    call$1: function($arguments) {\n      var result, color, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        weight = t1.$index($arguments, 1).assertNumber$1(\"weight\");\n      if (t1.$index($arguments, 0) instanceof T.SassNumber) {\n        if (weight.value !== 100 || !weight.hasUnit$1(\"%\"))\n          throw H.wrapException(string$.Only_oa);\n        result = K._functionString(\"invert\", t1.take$1($arguments, 1));\n        N.warn(string$.Passinni + result.toString$0(0), false);\n        return result;\n      }\n      color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      t1 = color.get$red();\n      t2 = color.get$green();\n      return K._mixColors(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);\n    },\n    $signature: 4\n  };\n  K.closure100.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber) {\n        result = K._functionString(\"grayscale\", t1.take$1($arguments, 1));\n        N.warn(string$.Passinng + result.toString$0(0), false);\n        return result;\n      }\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeHsl$1$saturation(0);\n    },\n    $signature: 4\n  };\n  K.closure101.prototype = {\n    call$1: function($arguments) {\n      return K._hwb($arguments);\n    },\n    $signature: 4\n  };\n  K.closure102.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels(\"hwb\", H.setRuntimeTypeInfo([\"$hue\", \"$whiteness\", \"$blackness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      if (parsed instanceof D.SassString)\n        throw H.wrapException(E.SassScriptException$('Expected numeric channels, got \"' + parsed.toString$0(0) + '\".'));\n      else\n        return K._hwb(type$.legacy_List_legacy_Value._as(parsed));\n    },\n    $signature: 4\n  };\n  K.closure103.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$whiteness(), \"%\");\n    },\n    $signature: 10\n  };\n  K.closure104.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$blackness(), \"%\");\n    },\n    $signature: 10\n  };\n  K.closure105.prototype = {\n    call$1: function($arguments) {\n      var result,\n        argument = J.$index$asx($arguments, 0);\n      if (argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart())) {\n        result = K._functionString(\"alpha\", $arguments);\n        N.warn(string$.Using_ + result.toString$0(0), false);\n        return result;\n      }\n      return T.SassNumber$(argument.assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 4\n  };\n  K.closure106.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (C.JSArray_methods.every$1(t1.$index($arguments, 0).get$asList(), new K._closure13())) {\n        result = K._functionString(\"alpha\", $arguments);\n        N.warn(string$.Using_ + result.toString$0(0), false);\n        return result;\n      }\n      throw H.wrapException(E.SassScriptException$(\"Only 1 argument allowed, but \" + t1.get$length($arguments) + \" were passed.\"));\n    },\n    $signature: 16\n  };\n  K._closure13.prototype = {\n    call$1: function(argument) {\n      return argument instanceof D.SassString && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart());\n    },\n    $signature: 51\n  };\n  K.closure107.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber) {\n        result = K._functionString(\"opacity\", $arguments);\n        N.warn(string$.Passinno + result.toString$0(0), false);\n        return result;\n      }\n      return T.SassNumber$(t1.$index($arguments, 0).assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 4\n  };\n  K.closure82.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$red(), null);\n    },\n    $signature: 10\n  };\n  K.closure81.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$green(), null);\n    },\n    $signature: 10\n  };\n  K.closure80.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$blue(), null);\n    },\n    $signature: 10\n  };\n  K.closure79.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return K._mixColors(t1.$index($arguments, 0).assertColor$1(\"color1\"), t1.$index($arguments, 1).assertColor$1(\"color2\"), t1.$index($arguments, 2).assertNumber$1(\"weight\"));\n    },\n    $signature: 26\n  };\n  K.closure78.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$hue(), \"deg\");\n    },\n    $signature: 10\n  };\n  K.closure77.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$saturation(), \"%\");\n    },\n    $signature: 10\n  };\n  K.closure76.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.get$first$ax($arguments).assertColor$1(\"color\").get$lightness(), \"%\");\n    },\n    $signature: 10\n  };\n  K.closure75.prototype = {\n    call$1: function($arguments) {\n      var color = J.$index$asx($arguments, 0).assertColor$1(\"color\");\n      return color.changeHsl$1$hue(color.get$hue() + 180);\n    },\n    $signature: 26\n  };\n  K.closure73.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents($arguments, true, false, false);\n    },\n    $signature: 26\n  };\n  K.closure72.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents($arguments, false, false, true);\n    },\n    $signature: 26\n  };\n  K.closure71.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents($arguments, false, true, false);\n    },\n    $signature: 26\n  };\n  K.closure74.prototype = {\n    call$1: function($arguments) {\n      var color = J.$index$asx($arguments, 0).assertColor$1(\"color\"),\n        t1 = new K.closure_hexString();\n      return new D.SassString(\"#\" + H.S(t1.call$1(T.fuzzyRound(color.alpha * 255))) + H.S(t1.call$1(color.get$red())) + H.S(t1.call$1(color.get$green())) + H.S(t1.call$1(color.get$blue())), false);\n    },\n    $signature: 16\n  };\n  K.closure_hexString.prototype = {\n    call$1: function(component) {\n      return C.JSString_methods.padLeft$2(J.toRadixString$1$n(component, 16), 2, \"0\").toUpperCase();\n    },\n    $signature: 94\n  };\n  K._updateComponents_getParam.prototype = {\n    call$3$assertPercent: function($name, max, assertPercent) {\n      var t1 = this.keywords.remove$1(0, $name),\n        number = t1 == null ? null : t1.assertNumber$1($name);\n      if (number == null)\n        return null;\n      t1 = this.scale;\n      if (t1 || assertPercent)\n        number.assertUnit$2(\"%\", $name);\n      if (t1)\n        max = 100;\n      return number.valueInRange$3(this.change ? 0 : -max, max, $name);\n    },\n    call$2: function($name, max) {\n      return this.call$3$assertPercent($name, max, false);\n    },\n    $signature: 168\n  };\n  K._updateComponents_closure.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  K._updateComponents_updateValue.prototype = {\n    call$3: function(current, param, max) {\n      var t1;\n      if (param == null)\n        return current;\n      if (this.change)\n        return param;\n      if (this.adjust)\n        return C.JSNumber_methods.clamp$2(current + param, 0, max);\n      t1 = param > 0 ? max - current : current;\n      return current + t1 * (param / 100);\n    },\n    $signature: 167\n  };\n  K._updateComponents_updateRgb.prototype = {\n    call$2: function(current, param) {\n      return T.fuzzyRound(this.updateValue.call$3(current, param, 255));\n    },\n    $signature: 166\n  };\n  K._functionString_closure.prototype = {\n    call$1: function(argument) {\n      argument.toString;\n      return N.serializeValue0(argument, false, true);\n    },\n    $signature: 283\n  };\n  K._removedColorFunction_closure.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.name,\n        t2 = J.getInterceptor$asx($arguments),\n        t3 = \"The function \" + t1 + string$.x28__isn + H.S(t2.$index($arguments, 0)) + \", $\" + this.argument + \": \";\n      throw H.wrapException(E.SassScriptException$(t3 + (this.negative ? \"-\" : \"\") + H.S(t2.$index($arguments, 1)) + string$.x29__Mor + t1));\n    },\n    $signature: 104\n  };\n  K._parseChannels_closure.prototype = {\n    call$1: function(value) {\n      return value.get$isVar();\n    },\n    $signature: 51\n  };\n  D.closure43.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.$index$asx($arguments, 0).get$asList().length, null);\n    },\n    $signature: 10\n  };\n  D.closure42.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        index = t1.$index($arguments, 1);\n      return list.get$asList()[list.sassIndexToListIndex$2(index, \"n\")];\n    },\n    $signature: 4\n  };\n  D.closure41.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        index = t1.$index($arguments, 1),\n        value = t1.$index($arguments, 2),\n        t2 = list.get$asList(),\n        newList = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));\n      newList[list.sassIndexToListIndex$2(index, \"n\")] = value;\n      return t1.$index($arguments, 0).changeListContents$1(newList);\n    },\n    $signature: 25\n  };\n  D.closure40.prototype = {\n    call$1: function($arguments) {\n      var separator, bracketed, t2, t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        list1 = t1.$index($arguments, 0),\n        list2 = t1.$index($arguments, 1),\n        separatorParam = t1.$index($arguments, 2).assertString$1(\"separator\"),\n        bracketedParam = t1.$index($arguments, 3);\n      t1 = separatorParam.text;\n      if (t1 === \"auto\")\n        if (list1.get$separator() !== C.ListSeparator_undecided)\n          separator = list1.get$separator();\n        else\n          separator = list2.get$separator() !== C.ListSeparator_undecided ? list2.get$separator() : C.ListSeparator_space;\n      else if (t1 === \"space\")\n        separator = C.ListSeparator_space;\n      else {\n        if (t1 !== \"comma\")\n          throw H.wrapException(E.SassScriptException$(string$.x24separ));\n        separator = C.ListSeparator_comma;\n      }\n      bracketed = bracketedParam instanceof D.SassString && bracketedParam.text === \"auto\" ? list1.get$hasBrackets() : bracketedParam.get$isTruthy();\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      for (t2 = list1.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      for (t2 = list2.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      return D.SassList$(t1, separator, bracketed);\n    },\n    $signature: 25\n  };\n  D.closure39.prototype = {\n    call$1: function($arguments) {\n      var separator, t2, t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        value = t1.$index($arguments, 1);\n      t1 = t1.$index($arguments, 2).assertString$1(\"separator\").text;\n      if (t1 === \"auto\")\n        separator = list.get$separator() === C.ListSeparator_undecided ? C.ListSeparator_space : list.get$separator();\n      else if (t1 === \"space\")\n        separator = C.ListSeparator_space;\n      else {\n        if (t1 !== \"comma\")\n          throw H.wrapException(E.SassScriptException$(string$.x24separ));\n        separator = C.ListSeparator_comma;\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      for (t2 = list.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      t1.push(value);\n      return list.changeListContents$2$separator(t1, separator);\n    },\n    $signature: 25\n  };\n  D.closure38.prototype = {\n    call$1: function($arguments) {\n      var results, result, _box_0 = {},\n        t1 = J.$index$asx($arguments, 0).get$asList(),\n        t2 = H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,List<Value*>*>\"),\n        lists = P.List_List$from(new H.MappedListIterable(t1, new D._closure5(), t2), true, t2._eval$1(\"ListIterable.E\"));\n      if (lists.length === 0)\n        return C.SassList_lmy;\n      _box_0.i = 0;\n      results = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SassList);\n      for (t1 = H._arrayInstanceType(lists)._eval$1(\"MappedListIterable<1,Value*>\"), t2 = type$.legacy_Value; C.JSArray_methods.every$1(lists, new D._closure6(_box_0));) {\n        result = P.List_List$from(new H.MappedListIterable(lists, new D._closure7(_box_0), t1), false, t2);\n        result.fixed$length = Array;\n        result.immutable$list = Array;\n        results.push(new D.SassList(result, C.ListSeparator_space, false));\n        ++_box_0.i;\n      }\n      return D.SassList$(results, C.ListSeparator_comma, false);\n    },\n    $signature: 25\n  };\n  D._closure5.prototype = {\n    call$1: function(list) {\n      return list.get$asList();\n    },\n    $signature: 285\n  };\n  D._closure6.prototype = {\n    call$1: function(list) {\n      return this._box_0.i !== J.get$length$asx(list);\n    },\n    $signature: 287\n  };\n  D._closure7.prototype = {\n    call$1: function(list) {\n      return J.$index$asx(list, this._box_0.i);\n    },\n    $signature: 4\n  };\n  D.closure37.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        index = C.JSArray_methods.indexOf$1(t1.$index($arguments, 0).get$asList(), t1.$index($arguments, 1));\n      return index === -1 ? C.C_SassNull0 : T.SassNumber$(index + 1, null);\n    },\n    $signature: 4\n  };\n  D.closure35.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).get$separator() === C.ListSeparator_comma ? new D.SassString(\"comma\", false) : new D.SassString(\"space\", false);\n    },\n    $signature: 16\n  };\n  D.closure36.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).get$hasBrackets() ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  A.closure34.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, cur, value,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {\n        cur = t1.__internal$_current;\n        value = map.contents.$index(0, cur);\n        if (!(value instanceof A.SassMap))\n          return C.C_SassNull0;\n      }\n      t1 = map.contents.$index(0, C.JSArray_methods.get$last(t2));\n      return t1 == null ? C.C_SassNull0 : t1;\n    },\n    $signature: 4\n  };\n  A.closure97.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return A._modify(t1.$index($arguments, 0).assertMap$1(\"map\"), H.setRuntimeTypeInfo([t1.$index($arguments, 1)], type$.JSArray_legacy_Value), new A._closure12($arguments));\n    },\n    $signature: 4\n  };\n  A._closure12.prototype = {\n    call$1: function(_) {\n      return J.$index$asx(this.$arguments, 2);\n    },\n    $signature: 64\n  };\n  A.closure98.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        args = t1.$index($arguments, 1).get$asList();\n      t1 = args.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$(\"Expected $args to contain a key.\"));\n      else if (t1 === 1)\n        throw H.wrapException(E.SassScriptException$(\"Expected $args to contain a value.\"));\n      return A._modify(map, C.JSArray_methods.sublist$2(args, 0, t1 - 1), new A._closure11(args));\n    },\n    $signature: 4\n  };\n  A._closure11.prototype = {\n    call$1: function(_) {\n      return C.JSArray_methods.get$last(this.args);\n    },\n    $signature: 64\n  };\n  A.closure32.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        map1 = t1.$index($arguments, 0).assertMap$1(\"map1\"),\n        map2 = t1.$index($arguments, 1).assertMap$1(\"map2\");\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = map1.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      for (t3 = map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 38\n  };\n  A.closure33.prototype = {\n    call$1: function($arguments) {\n      var map2,\n        t1 = J.getInterceptor$asx($arguments),\n        map1 = t1.$index($arguments, 0).assertMap$1(\"map1\"),\n        args = t1.$index($arguments, 1).get$asList();\n      t1 = args.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$(\"Expected $args to contain a key.\"));\n      else if (t1 === 1)\n        throw H.wrapException(E.SassScriptException$(\"Expected $args to contain a map.\"));\n      map2 = C.JSArray_methods.get$last(args).assertMap$1(\"map2\");\n      return A._modify(map1, H.SubListIterable$(args, 0, args.length - 1, H._arrayInstanceType(args)._precomputed1), new A._closure4(map2));\n    },\n    $signature: 4\n  };\n  A._closure4.prototype = {\n    call$1: function(oldValue) {\n      var t1, t2, t3, t4,\n        nestedMap = oldValue == null ? null : oldValue.tryMap$0();\n      if (nestedMap == null)\n        return this.map2;\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = nestedMap.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      for (t3 = this.map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 291\n  };\n  A.closure96.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return A._deepMergeImpl(t1.$index($arguments, 0).assertMap$1(\"map1\"), t1.$index($arguments, 1).assertMap$1(\"map2\"));\n    },\n    $signature: 38\n  };\n  A.closure95.prototype = {\n    call$1: function($arguments) {\n      var t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      return A._modify(map, H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), new A._closure10(t2));\n    },\n    $signature: 4\n  };\n  A._closure10.prototype = {\n    call$1: function(value) {\n      var t2,\n        nestedMap = value == null ? null : value.tryMap$0(),\n        t1 = nestedMap == null ? null : nestedMap.contents;\n      t1 = t1 == null ? null : t1.containsKey$1(C.JSArray_methods.get$last(this.keys));\n      if (t1 === true) {\n        t1 = type$.legacy_Value;\n        t2 = P.LinkedHashMap_LinkedHashMap$of(nestedMap.contents, t1, t1);\n        t2.remove$1(0, C.JSArray_methods.get$last(this.keys));\n        return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n      }\n      return value;\n    },\n    $signature: 64\n  };\n  A.closure30.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).assertMap$1(\"map\");\n    },\n    $signature: 38\n  };\n  A.closure31.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, mutableMap,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      t1 = type$.legacy_Value;\n      mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1);\n      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        mutableMap.remove$1(0, t2[_i]);\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n    },\n    $signature: 38\n  };\n  A.closure29.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertMap$1(\"map\").contents;\n      return D.SassList$(t1.get$keys(t1), C.ListSeparator_comma, false);\n    },\n    $signature: 25\n  };\n  A.closure28.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertMap$1(\"map\").contents;\n      return D.SassList$(t1.get$values(t1), C.ListSeparator_comma, false);\n    },\n    $signature: 25\n  };\n  A.closure27.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, cur, value,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {\n        cur = t1.__internal$_current;\n        value = map.contents.$index(0, cur);\n        if (!(value instanceof A.SassMap))\n          return C.SassBoolean_false0;\n      }\n      return map.contents.containsKey$1(C.JSArray_methods.get$last(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  A._modify__modifyNestedMap.prototype = {\n    call$2: function(map, newValue) {\n      var nestedMap, _this = this,\n        t1 = type$.legacy_Value,\n        mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1),\n        t2 = _this.keyIterator,\n        key = t2.get$current(t2);\n      if (!t2.moveNext$0()) {\n        mutableMap.$indexSet(0, key, newValue == null ? _this.modify.call$1(mutableMap.$index(0, key)) : newValue);\n        return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n      }\n      t2 = mutableMap.$index(0, key);\n      nestedMap = t2 == null ? null : t2.tryMap$0();\n      t2 = nestedMap == null;\n      if (t2) {\n        newValue = _this.modify.call$1(null);\n        if (newValue == null)\n          return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n      }\n      mutableMap.$indexSet(0, key, _this.call$2(t2 ? C.SassMap_Map_empty : nestedMap, newValue));\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n    },\n    call$1: function(map) {\n      return this.call$2(map, null);\n    },\n    $signature: 292\n  };\n  A._deepMergeImpl__ensureMutable.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      if (t1.mutable)\n        return;\n      t1.mutable = true;\n      t2 = type$.legacy_Value;\n      t1.result = P.LinkedHashMap_LinkedHashMap$of(t1.result, t2, t2);\n    },\n    $signature: 1\n  };\n  A._deepMergeImpl_closure.prototype = {\n    call$2: function(key, value) {\n      var resultMap, valueMap, merged,\n        t1 = this._box_0,\n        resultValue = t1.result.$index(0, key);\n      if (resultValue == null) {\n        this._ensureMutable.call$0();\n        t1.result.$indexSet(0, key, value);\n      } else {\n        resultMap = resultValue.tryMap$0();\n        valueMap = value.tryMap$0();\n        if (resultMap != null && valueMap != null) {\n          merged = A._deepMergeImpl(valueMap, resultMap);\n          if (merged === resultMap)\n            return;\n          this._ensureMutable.call$0();\n          t1.result.$indexSet(0, key, merged);\n        }\n      }\n    },\n    $signature: 47\n  };\n  K.closure25.prototype = {\n    call$1: function(value) {\n      return J.ceil$0$n(value);\n    },\n    $signature: 39\n  };\n  K.closure90.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, arg2, arg2Name, unit1, unit2,\n        _s11_ = \"is unitless\",\n        t1 = J.getInterceptor$asx($arguments),\n        min = t1.$index($arguments, 0).assertNumber$1(\"min\"),\n        number = t1.$index($arguments, 1).assertNumber$1(\"number\"),\n        max = t1.$index($arguments, 2).assertNumber$1(\"max\");\n      t1 = min.numeratorUnits.length === 0;\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      t3 = number.numeratorUnits.length === 0;\n      if (t2 === (!t3 || number.denominatorUnits.length !== 0)) {\n        t2 = !t3 || number.denominatorUnits.length !== 0;\n        t2 = t2 === (max.numeratorUnits.length !== 0 || max.denominatorUnits.length !== 0);\n      } else\n        t2 = false;\n      if (t2) {\n        if (min.greaterThanOrEquals$1(max).value)\n          return min;\n        if (min.greaterThanOrEquals$1(number).value)\n          return min;\n        if (number.greaterThanOrEquals$1(max).value)\n          return max;\n        return number;\n      }\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      arg2 = t2 !== (!t3 || number.denominatorUnits.length !== 0) ? number : max;\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      arg2Name = t2 !== (!t3 || number.denominatorUnits.length !== 0) ? \"$number\" : \"$max\";\n      unit1 = !t1 || min.denominatorUnits.length !== 0 ? \"has unit \" + min.get$unitString() : _s11_;\n      unit2 = arg2.numeratorUnits.length !== 0 || arg2.denominatorUnits.length !== 0 ? \"has unit \" + arg2.get$unitString() : _s11_;\n      throw H.wrapException(E.SassScriptException$(\"$min \" + unit1 + \" but \" + arg2Name + \" \" + unit2 + string$.x2ex20Argu));\n    },\n    $signature: 10\n  };\n  K.closure24.prototype = {\n    call$1: function(value) {\n      return J.floor$0$n(value);\n    },\n    $signature: 39\n  };\n  K.closure23.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, max, _i, number;\n      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, max = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        number = t1[_i].assertNumber$0();\n        if (max == null || max.lessThan$1(number).value)\n          max = number;\n      }\n      if (max != null)\n        return max;\n      throw H.wrapException(E.SassScriptException$(\"At least one argument must be passed.\"));\n    },\n    $signature: 10\n  };\n  K.closure22.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, min, _i, number;\n      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, min = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        number = t1[_i].assertNumber$0();\n        if (min == null || min.greaterThan$1(number).value)\n          min = number;\n      }\n      if (min != null)\n        return min;\n      throw H.wrapException(E.SassScriptException$(\"At least one argument must be passed.\"));\n    },\n    $signature: 10\n  };\n  K.closure26.prototype = {\n    call$1: function(value) {\n      return Math.abs(value);\n    },\n    $signature: 179\n  };\n  K.closure88.prototype = {\n    call$1: function($arguments) {\n      var numeratorUnits, denominatorUnits, subtotal, i, number, t3, t4, t5, t6, t7, result, unit1, unit2,\n        _s11_ = \"is unitless\",\n        t1 = J.$index$asx($arguments, 0).get$asList(),\n        t2 = H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,SassNumber*>\"),\n        numbers = P.List_List$from(new H.MappedListIterable(t1, new K._closure9(), t2), true, t2._eval$1(\"ListIterable.E\"));\n      if (numbers.length === 0)\n        throw H.wrapException(E.SassScriptException$(\"At least one argument must be passed.\"));\n      t1 = numbers[0];\n      numeratorUnits = t1.numeratorUnits;\n      denominatorUnits = t1.denominatorUnits;\n      for (t1 = type$.legacy_String, subtotal = 0, i = 0; i < numbers.length; ++i) {\n        number = numbers[i];\n        t2 = number.numeratorUnits;\n        t3 = t2.length === 0;\n        t4 = !t3 || number.denominatorUnits.length !== 0;\n        t5 = numbers[0];\n        t6 = t5.numeratorUnits;\n        t7 = t6.length === 0;\n        if (t4 === (!t7 || t5.denominatorUnits.length !== 0)) {\n          t2 = number.valueInUnits$2(numeratorUnits, denominatorUnits);\n          result = P.List_List$from(numeratorUnits, false, t1);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          result = P.List_List$from(denominatorUnits, false, t1);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          H.checkNum(t2);\n          subtotal += Math.pow(t2, 2);\n        } else {\n          if (!t7 || t5.denominatorUnits.length !== 0)\n            unit1 = \"has unit \" + (!t7 || t5.denominatorUnits.length !== 0 ? t5._unitString$2(t6, t5.denominatorUnits) : \"\");\n          else\n            unit1 = _s11_;\n          if (!t3 || number.denominatorUnits.length !== 0)\n            unit2 = \"has unit \" + (!t3 || number.denominatorUnits.length !== 0 ? number._unitString$2(t2, number.denominatorUnits) : \"\");\n          else\n            unit2 = _s11_;\n          throw H.wrapException(E.SassScriptException$(\"Argument 1 \" + unit1 + \" but argument \" + (i + 1) + \" \" + unit2 + string$.x2ex20Argu));\n        }\n      }\n      return T.SassNumber$withUnits(Math.sqrt(subtotal), denominatorUnits, numeratorUnits);\n    },\n    $signature: 10\n  };\n  K._closure9.prototype = {\n    call$1: function(argument) {\n      return argument.assertNumber$0();\n    },\n    $signature: 297\n  };\n  K.closure87.prototype = {\n    call$1: function($arguments) {\n      var numberValue, base, baseValue,\n        _s18_ = \" to have no units.\",\n        t1 = J.getInterceptor$asx($arguments),\n        number = t1.$index($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + _s18_));\n      numberValue = K._fuzzyRoundIfZero(number.value);\n      if (J.$eq$(t1.$index($arguments, 1), C.C_SassNull0))\n        return T.SassNumber$(Math.log(H.checkNum(numberValue)), null);\n      base = t1.$index($arguments, 1).assertNumber$1(\"base\");\n      if (base.numeratorUnits.length !== 0 || base.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$base: Expected \" + base.toString$0(0) + _s18_));\n      t1 = base.value;\n      baseValue = Math.abs(t1 - 1) < $.$get$epsilon() ? T.fuzzyRound(t1) : K._fuzzyRoundIfZero(t1);\n      return T.SassNumber$(Math.log(H.checkNum(numberValue)) / Math.log(H.checkNum(baseValue)), null);\n    },\n    $signature: 10\n  };\n  K.closure86.prototype = {\n    call$1: function($arguments) {\n      var baseValue, exponentValue, t2, t3, _null = null,\n        _s18_ = \" to have no units.\",\n        t1 = J.getInterceptor$asx($arguments),\n        base = t1.$index($arguments, 0).assertNumber$1(\"base\"),\n        exponent = t1.$index($arguments, 1).assertNumber$1(\"exponent\");\n      if (base.numeratorUnits.length !== 0 || base.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$base: Expected \" + base.toString$0(0) + _s18_));\n      else if (exponent.numeratorUnits.length !== 0 || exponent.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$exponent: Expected \" + exponent.toString$0(0) + _s18_));\n      baseValue = K._fuzzyRoundIfZero(base.value);\n      exponentValue = K._fuzzyRoundIfZero(exponent.value);\n      t1 = $.$get$epsilon();\n      if (Math.abs(Math.abs(baseValue) - 1) < t1) {\n        exponentValue.toString;\n        t2 = exponentValue == 1 / 0 || exponentValue == -1 / 0;\n      } else\n        t2 = false;\n      if (t2)\n        return T.SassNumber$(0 / 0, _null);\n      else {\n        t2 = Math.abs(baseValue - 0);\n        if (t2 < t1) {\n          exponentValue.toString;\n          if (isFinite(exponentValue))\n            if (T.fuzzyIsInt(exponentValue))\n              t1 = C.JSInt_methods.$mod(T.fuzzyIsInt(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;\n            else\n              t1 = false;\n          else\n            t1 = false;\n          if (t1)\n            exponentValue = T.fuzzyRound(exponentValue);\n        } else {\n          if (isFinite(baseValue))\n            if (baseValue < 0 && !(t2 < t1)) {\n              exponentValue.toString;\n              t3 = isFinite(exponentValue) && T.fuzzyIsInt(exponentValue);\n            } else\n              t3 = false;\n          else\n            t3 = false;\n          if (t3)\n            exponentValue = T.fuzzyRound(exponentValue);\n          else {\n            if (baseValue == 1 / 0 || baseValue == -1 / 0)\n              if (baseValue < 0 && !(t2 < t1)) {\n                exponentValue.toString;\n                if (isFinite(exponentValue))\n                  if (T.fuzzyIsInt(exponentValue))\n                    t1 = C.JSInt_methods.$mod(T.fuzzyIsInt(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;\n                  else\n                    t1 = false;\n                else\n                  t1 = false;\n              } else\n                t1 = false;\n            else\n              t1 = false;\n            if (t1)\n              exponentValue = T.fuzzyRound(exponentValue);\n          }\n        }\n      }\n      H.checkNum(exponentValue);\n      return T.SassNumber$(Math.pow(baseValue, exponentValue), _null);\n    },\n    $signature: 10\n  };\n  K.closure84.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      return T.SassNumber$(Math.sqrt(H.checkNum(K._fuzzyRoundIfZero(number.value))), null);\n    },\n    $signature: 10\n  };\n  K.closure94.prototype = {\n    call$1: function($arguments) {\n      var numberValue,\n        number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      numberValue = number.value;\n      if (Math.abs(Math.abs(numberValue) - 1) < $.$get$epsilon())\n        numberValue = T.fuzzyRound(numberValue);\n      return T.SassNumber$withUnits(Math.acos(numberValue) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 10\n  };\n  K.closure93.prototype = {\n    call$1: function($arguments) {\n      var t1,\n        number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      t1 = number.value;\n      return T.SassNumber$withUnits(Math.asin(H.checkNum(Math.abs(Math.abs(t1) - 1) < $.$get$epsilon() ? T.fuzzyRound(t1) : K._fuzzyRoundIfZero(t1))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 10\n  };\n  K.closure92.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      return T.SassNumber$withUnits(Math.atan(H.checkNum(K._fuzzyRoundIfZero(number.value))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 10\n  };\n  K.closure91.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4, unit1, unit2, xValue,\n        _s11_ = \"is unitless\",\n        t1 = J.getInterceptor$asx($arguments),\n        y = t1.$index($arguments, 0).assertNumber$1(\"y\"),\n        x = t1.$index($arguments, 1).assertNumber$1(\"x\");\n      t1 = y.numeratorUnits;\n      t2 = t1.length === 0;\n      t3 = !t2 || y.denominatorUnits.length !== 0;\n      t4 = x.numeratorUnits.length === 0;\n      if (t3 !== (!t4 || x.denominatorUnits.length !== 0)) {\n        unit1 = !t2 || y.denominatorUnits.length !== 0 ? \"has unit \" + y.get$unitString() : _s11_;\n        unit2 = !t4 || x.denominatorUnits.length !== 0 ? \"has unit \" + x.get$unitString() : _s11_;\n        throw H.wrapException(E.SassScriptException$(\"$y \" + unit1 + \" but $x \" + unit2 + string$.x2ex20Argu));\n      }\n      t2 = y.denominatorUnits;\n      xValue = K._fuzzyRoundIfZero(T.SassNumber$withUnits(x.valueInUnits$2(t1, t2), t2, t1).value);\n      return T.SassNumber$withUnits(Math.atan2(H.checkNum(K._fuzzyRoundIfZero(y.value)), H.checkNum(xValue)) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 10\n  };\n  K.closure89.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(Math.cos(H.checkNum(K._coerceToRad(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value)), null);\n    },\n    $signature: 10\n  };\n  K.closure85.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(Math.sin(H.checkNum(K._fuzzyRoundIfZero(K._coerceToRad(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value))), null);\n    },\n    $signature: 10\n  };\n  K.closure83.prototype = {\n    call$1: function($arguments) {\n      var t1 = K._coerceToRad(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value,\n        t2 = C.JSNumber_methods.$mod(t1 - 1.5707963267948966, 6.283185307179586),\n        t3 = $.$get$epsilon();\n      if (Math.abs(t2 - 0) < t3)\n        return T.SassNumber$(1 / 0, null);\n      else if (Math.abs(C.JSNumber_methods.$mod(t1 + 1.5707963267948966, 6.283185307179586) - 0) < t3)\n        return T.SassNumber$(-1 / 0, null);\n      else\n        return T.SassNumber$(Math.tan(H.checkNum(K._fuzzyRoundIfZero(t1))), null);\n    },\n    $signature: 10\n  };\n  K.closure18.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return t1.$index($arguments, 0).assertNumber$1(\"number1\").isComparableTo$1(t1.$index($arguments, 1).assertNumber$1(\"number2\")) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  K.closure17.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      return !(number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  K.closure19.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString(J.$index$asx($arguments, 0).assertNumber$1(\"number\").get$unitString(), true);\n    },\n    $signature: 16\n  };\n  K.closure21.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      number.assertNoUnits$1(\"number\");\n      return T.SassNumber$(number.value * 100, \"%\");\n    },\n    $signature: 10\n  };\n  K.closure20.prototype = {\n    call$1: function($arguments) {\n      var limit,\n        t1 = J.getInterceptor$asx($arguments);\n      if (J.$eq$(t1.$index($arguments, 0), C.C_SassNull0))\n        return T.SassNumber$($.$get$_random0().nextDouble$0(), null);\n      limit = t1.$index($arguments, 0).assertNumber$1(\"limit\").assertInt$1(\"limit\");\n      if (limit < 1)\n        throw H.wrapException(E.SassScriptException$(\"$limit: Must be greater than 0, was \" + limit + \".\"));\n      return T.SassNumber$($.$get$_random0().nextInt$1(limit) + 1, null);\n    },\n    $signature: 10\n  };\n  K._numberFunction_closure.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      return T.SassNumber$withUnits(this.transform.call$1(number.value), number.denominatorUnits, number.numeratorUnits);\n    },\n    $signature: 10\n  };\n  Q.closure108.prototype = {\n    call$1: function($arguments) {\n      return $._features.contains$1(0, J.$index$asx($arguments, 0).assertString$1(\"feature\").text) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  Q.closure109.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString(J.toString$0$(J.get$first$ax($arguments)), false);\n    },\n    $signature: 16\n  };\n  Q.closure110.prototype = {\n    call$1: function($arguments) {\n      var value = J.$index$asx($arguments, 0);\n      if (value instanceof D.SassArgumentList)\n        return new D.SassString(\"arglist\", false);\n      if (value instanceof Z.SassBoolean)\n        return new D.SassString(\"bool\", false);\n      if (value instanceof K.SassColor)\n        return new D.SassString(\"color\", false);\n      if (value instanceof D.SassList)\n        return new D.SassString(\"list\", false);\n      if (value instanceof A.SassMap)\n        return new D.SassString(\"map\", false);\n      if (value instanceof O.SassNull)\n        return new D.SassString(\"null\", false);\n      if (value instanceof T.SassNumber)\n        return new D.SassString(\"number\", false);\n      if (value instanceof F.SassFunction)\n        return new D.SassString(\"function\", false);\n      return new D.SassString(\"string\", false);\n    },\n    $signature: 16\n  };\n  Q.closure111.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, t4,\n        argumentList = J.$index$asx($arguments, 0);\n      if (argumentList instanceof D.SassArgumentList) {\n        t1 = type$.legacy_Value;\n        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n        for (argumentList._wereKeywordsAccessed = true, t3 = argumentList._keywords, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n          t4 = t3.get$current(t3);\n          t2.$indexSet(0, new D.SassString(t4.key, false), t4.value);\n        }\n        return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n      } else\n        throw H.wrapException(\"$args: \" + H.S(argumentList) + \" is not an argument list.\");\n    },\n    $signature: 38\n  };\n  T.closure13.prototype = {\n    call$1: function($arguments) {\n      var t1 = {},\n        selectors = J.$index$asx($arguments, 0).get$asList();\n      if (selectors.length === 0)\n        throw H.wrapException(E.SassScriptException$(string$.x24selec));\n      t1.first = true;\n      return new H.MappedListIterable(selectors, new T._closure1(t1), H._arrayInstanceType(selectors)._eval$1(\"MappedListIterable<1,SelectorList*>\")).reduce$1(0, new T._closure2()).get$asSassList();\n    },\n    $signature: 25\n  };\n  T._closure1.prototype = {\n    call$1: function(selector) {\n      var t1 = this._box_0,\n        result = selector.assertSelector$1$allowParent(!t1.first);\n      t1.first = false;\n      return result;\n    },\n    $signature: 165\n  };\n  T._closure2.prototype = {\n    call$2: function($parent, child) {\n      return child.resolveParentSelectors$1($parent);\n    },\n    $signature: 162\n  };\n  T.closure12.prototype = {\n    call$1: function($arguments) {\n      var selectors = J.$index$asx($arguments, 0).get$asList();\n      if (selectors.length === 0)\n        throw H.wrapException(E.SassScriptException$(string$.x24selec));\n      return new H.MappedListIterable(selectors, new T._closure(), H._arrayInstanceType(selectors)._eval$1(\"MappedListIterable<1,SelectorList*>\")).reduce$1(0, new T._closure0()).get$asSassList();\n    },\n    $signature: 25\n  };\n  T._closure.prototype = {\n    call$1: function(selector) {\n      return selector.assertSelector$0();\n    },\n    $signature: 165\n  };\n  T._closure0.prototype = {\n    call$2: function($parent, child) {\n      var t1 = child.components;\n      return D.SelectorList$(new H.MappedListIterable(t1, new T.__closure($parent), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector*>\"))).resolveParentSelectors$1($parent);\n    },\n    $signature: 162\n  };\n  T.__closure.prototype = {\n    call$1: function(complex) {\n      var newCompound, t2, cur,\n        t1 = complex.components,\n        compound = C.JSArray_methods.get$first(t1);\n      if (compound instanceof X.CompoundSelector) {\n        newCompound = T._prependParent(compound);\n        if (newCompound == null)\n          throw H.wrapException(E.SassScriptException$(\"Can't append \" + complex.toString$0(0) + \" to \" + H.S(this.parent) + \".\"));\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);\n        t2.push(newCompound);\n        for (t1 = H.SubListIterable$(t1, 1, null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          t2.push(cur);\n        }\n        return S.ComplexSelector$(t2, false);\n      } else\n        throw H.wrapException(E.SassScriptException$(\"Can't append \" + complex.toString$0(0) + \" to \" + H.S(this.parent) + \".\"));\n    },\n    $signature: 91\n  };\n  T.closure11.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector = t1.$index($arguments, 0).assertSelector$1$name(\"selector\"),\n        target = t1.$index($arguments, 1).assertSelector$1$name(\"extendee\");\n      return F.Extender__extendOrReplace(selector, t1.$index($arguments, 2).assertSelector$1$name(\"extender\"), target, C.ExtendMode_allTargets).get$asSassList();\n    },\n    $signature: 25\n  };\n  T.closure10.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector = t1.$index($arguments, 0).assertSelector$1$name(\"selector\"),\n        target = t1.$index($arguments, 1).assertSelector$1$name(\"original\");\n      return F.Extender__extendOrReplace(selector, t1.$index($arguments, 2).assertSelector$1$name(\"replacement\"), target, C.ExtendMode_replace).get$asSassList();\n    },\n    $signature: 25\n  };\n  T.closure9.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        result = t1.$index($arguments, 0).assertSelector$1$name(\"selector1\").unify$1(t1.$index($arguments, 1).assertSelector$1$name(\"selector2\"));\n      return result == null ? C.C_SassNull0 : result.get$asSassList();\n    },\n    $signature: 4\n  };\n  T.closure16.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector1 = t1.$index($arguments, 0).assertSelector$1$name(\"super\"),\n        selector2 = t1.$index($arguments, 1).assertSelector$1$name(\"sub\");\n      return Y.listIsSuperselector(selector1.components, selector2.components) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  T.closure15.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertCompoundSelector$1$name(\"selector\").components;\n      return D.SassList$(new H.MappedListIterable(t1, new T._closure3(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value*>\")), C.ListSeparator_comma, false);\n    },\n    $signature: 25\n  };\n  T._closure3.prototype = {\n    call$1: function(simple) {\n      return new D.SassString(J.toString$0$(simple), false);\n    },\n    $signature: 216\n  };\n  T.closure14.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).assertSelector$1$name(\"selector\").get$asSassList();\n    },\n    $signature: 25\n  };\n  D.closure8.prototype = {\n    call$1: function($arguments) {\n      var string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      if (!string.hasQuotes)\n        return string;\n      return new D.SassString(string.text, false);\n    },\n    $signature: 16\n  };\n  D.closure7.prototype = {\n    call$1: function($arguments) {\n      var string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      if (string.hasQuotes)\n        return string;\n      return new D.SassString(string.text, true);\n    },\n    $signature: 16\n  };\n  D.closure3.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$(J.$index$asx($arguments, 0).assertString$1(\"string\").get$sassLength(), null);\n    },\n    $signature: 10\n  };\n  D.closure2.prototype = {\n    call$1: function($arguments) {\n      var indexInt, codeUnitIndex, _s5_ = \"index\",\n        t1 = J.getInterceptor$asx($arguments),\n        string = t1.$index($arguments, 0).assertString$1(\"string\"),\n        insert = t1.$index($arguments, 1).assertString$1(\"insert\"),\n        index = t1.$index($arguments, 2).assertNumber$1(_s5_);\n      index.assertNoUnits$1(_s5_);\n      indexInt = index.assertInt$1(_s5_);\n      if (indexInt < 0)\n        indexInt = string.get$sassLength() + indexInt + 2;\n      t1 = string.text;\n      codeUnitIndex = B.codepointIndexToCodeUnitIndex(t1, D._codepointForIndex(indexInt, string.get$sassLength(), false));\n      return new D.SassString(J.replaceRange$3$asx(t1, codeUnitIndex, codeUnitIndex, insert.text), string.hasQuotes);\n    },\n    $signature: 16\n  };\n  D.closure1.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        t2 = t1.$index($arguments, 0).assertString$1(\"string\").text,\n        codeUnitIndex = J.indexOf$1$asx(t2, t1.$index($arguments, 1).assertString$1(\"substring\").text);\n      if (codeUnitIndex === -1)\n        return C.C_SassNull0;\n      return T.SassNumber$(B.codeUnitIndexToCodepointIndex(t2, codeUnitIndex) + 1, null);\n    },\n    $signature: 4\n  };\n  D.closure0.prototype = {\n    call$1: function($arguments) {\n      var lengthInCodepoints, endInt, startCodepoint, endCodepoint,\n        t1 = J.getInterceptor$asx($arguments),\n        string = t1.$index($arguments, 0).assertString$1(\"string\"),\n        start = t1.$index($arguments, 1).assertNumber$1(\"start-at\"),\n        end = t1.$index($arguments, 2).assertNumber$1(\"end-at\");\n      start.assertNoUnits$1(\"start\");\n      end.assertNoUnits$1(\"end\");\n      lengthInCodepoints = string.get$sassLength();\n      endInt = end.assertInt$0();\n      if (endInt === 0)\n        return string.hasQuotes ? $.$get$_emptyQuoted() : $.$get$_emptyUnquoted();\n      startCodepoint = D._codepointForIndex(start.assertInt$0(), lengthInCodepoints, false);\n      endCodepoint = D._codepointForIndex(endInt, lengthInCodepoints, true);\n      if (endCodepoint === lengthInCodepoints)\n        --endCodepoint;\n      if (endCodepoint < startCodepoint)\n        return string.hasQuotes ? $.$get$_emptyQuoted() : $.$get$_emptyUnquoted();\n      t1 = string.text;\n      return new D.SassString(J.substring$2$s(t1, B.codepointIndexToCodeUnitIndex(t1, startCodepoint), B.codepointIndexToCodeUnitIndex(t1, endCodepoint + 1)), string.hasQuotes);\n    },\n    $signature: 16\n  };\n  D.closure6.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, i, t4, t5,\n        string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = \"\"; i < t2; ++i) {\n        t5 = t3._codeUnitAt$1(t1, i);\n        t4 += H.Primitives_stringFromCharCode(t5 >= 97 && t5 <= 122 ? t5 & 4294967263 : t5);\n      }\n      return new D.SassString(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);\n    },\n    $signature: 16\n  };\n  D.closure5.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, i, t4, t5,\n        string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = \"\"; i < t2; ++i) {\n        t5 = t3._codeUnitAt$1(t1, i);\n        t4 += H.Primitives_stringFromCharCode(t5 >= 65 && t5 <= 90 ? t5 | 32 : t5);\n      }\n      return new D.SassString(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);\n    },\n    $signature: 16\n  };\n  D.closure4.prototype = {\n    call$1: function($arguments) {\n      var t1 = $.$get$_previousUniqueId() + ($.$get$_random().nextInt$1(36) + 1);\n      $._previousUniqueId = t1;\n      if (t1 > Math.pow(36, 6))\n        $._previousUniqueId = C.JSInt_methods.$mod($.$get$_previousUniqueId(), H._asIntS(Math.pow(36, 6)));\n      return new D.SassString(\"u\" + C.JSString_methods.padLeft$2(J.toRadixString$1$n($.$get$_previousUniqueId(), 36), 6, \"0\"), false);\n    },\n    $signature: 16\n  };\n  R.ImportCache.prototype = {\n    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      var resolvedUrl, canonicalUrl;\n      if (baseImporter != null) {\n        resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;\n        canonicalUrl = this._canonicalize$3(baseImporter, resolvedUrl, forImport);\n        if (canonicalUrl != null)\n          return new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri);\n      }\n      return this._canonicalizeCache.putIfAbsent$2(new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new R.ImportCache_canonicalize_closure(this, url, forImport));\n    },\n    canonicalize$3$baseImporter$baseUrl: function(url, baseImporter, baseUrl) {\n      return this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, false);\n    },\n    _canonicalize$3: function(importer, url, forImport) {\n      var result = forImport ? B.inImportRule(new R.ImportCache__canonicalize_closure(importer, url)) : importer.canonicalize$1(url);\n      if ((result == null ? null : result.get$scheme()) === \"\")\n        this._logger.warn$2$deprecation(0, \"Importer \" + H.S(importer) + \" canonicalized \" + H.S(url) + \" to \" + H.S(result) + string$.x2ex0aRela, true);\n      return result;\n    },\n    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      var t1, stylesheet,\n        tuple = this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport);\n      if (tuple == null)\n        return null;\n      t1 = tuple.item1;\n      stylesheet = this.importCanonical$3(t1, tuple.item2, tuple.item3);\n      if (stylesheet == null)\n        return null;\n      return new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet);\n    },\n    importCanonical$3: function(importer, canonicalUrl, originalUrl) {\n      return this._importCache.putIfAbsent$2(canonicalUrl, new R.ImportCache_importCanonical_closure(this, importer, canonicalUrl, originalUrl));\n    },\n    importCanonical$2: function(importer, canonicalUrl) {\n      return this.importCanonical$3(importer, canonicalUrl, null);\n    },\n    humanize$1: function(canonicalUrl) {\n      var t2, url,\n        t1 = this._canonicalizeCache;\n      t1 = t1.get$values(t1);\n      t2 = H._instanceType(t1);\n      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new R.ImportCache_humanize_closure(canonicalUrl), t2._eval$1(\"WhereIterable<Iterable.E>\")), new R.ImportCache_humanize_closure0(), t2._eval$1(\"MappedIterable<Iterable.E,Uri*>\")), new R.ImportCache_humanize_closure1(), type$.legacy_Uri, type$.dynamic);\n      if (url == null)\n        return canonicalUrl;\n      t1 = $.$get$url();\n      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());\n    },\n    clearImport$1: function(canonicalUrl) {\n      this._resultsCache.remove$1(0, canonicalUrl);\n      this._importCache.remove$1(0, canonicalUrl);\n    }\n  };\n  R.ImportCache_canonicalize_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, t5, _i, importer, canonicalUrl;\n      for (t1 = this.$this, t2 = t1._importers, t3 = t2.length, t4 = this.url, t5 = this.forImport, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        importer = t2[_i];\n        canonicalUrl = t1._canonicalize$3(importer, t4, t5);\n        if (canonicalUrl != null)\n          return new S.Tuple3(importer, canonicalUrl, t4, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri);\n      }\n      return null;\n    },\n    $signature: 112\n  };\n  R.ImportCache__canonicalize_closure.prototype = {\n    call$0: function() {\n      return this.importer.canonicalize$1(this.url);\n    },\n    $signature: 161\n  };\n  R.ImportCache_importCanonical_closure.prototype = {\n    call$0: function() {\n      var t3, _this = this,\n        t1 = _this.canonicalUrl,\n        result = _this.importer.load$1(0, t1),\n        t2 = _this.$this;\n      t2._resultsCache.$indexSet(0, t1, result);\n      t3 = _this.originalUrl;\n      t1 = t3 == null ? t1 : t3.resolveUri$1(t1);\n      return V.Stylesheet_Stylesheet$parse(result.contents, result.syntax, t2._logger, t1);\n    },\n    $signature: 60\n  };\n  R.ImportCache_humanize_closure.prototype = {\n    call$1: function(tuple) {\n      var t1 = tuple == null ? null : tuple.item2;\n      return J.$eq$(t1, this.canonicalUrl);\n    },\n    $signature: 305\n  };\n  R.ImportCache_humanize_closure0.prototype = {\n    call$1: function(tuple) {\n      return tuple.item3;\n    },\n    $signature: 310\n  };\n  R.ImportCache_humanize_closure1.prototype = {\n    call$1: function(url) {\n      return J.get$length$asx(J.get$path$x(url));\n    },\n    $signature: 41\n  };\n  M.Importer.prototype = {\n    modificationTime$1: function(url) {\n      return new P.DateTime(Date.now(), false);\n    },\n    couldCanonicalize$2: function(url, canonicalUrl) {\n      return true;\n    }\n  };\n  B.AsyncImporter.prototype = {};\n  F.FilesystemImporter.prototype = {\n    canonicalize$1: function(url) {\n      var t1, resolved;\n      if (url.get$scheme() !== \"file\" && url.get$scheme() !== \"\")\n        return null;\n      t1 = $.$get$context();\n      resolved = B.resolveImportPath(D.join(this._loadPath, t1.style.pathFromUri$1(M._parseUri(url)), null));\n      return resolved == null ? null : t1.toUri$1(t1.canonicalize$1(resolved));\n    },\n    load$1: function(_, url) {\n      var t3, t4,\n        t1 = $.$get$context(),\n        path = t1.style.pathFromUri$1(M._parseUri(url)),\n        t2 = B.readFile(path);\n      t1 = J.$eq$(J.get$platform$x(self.process), \"win32\") || J.$eq$(J.get$platform$x(self.process), \"darwin\") ? t1.toUri$1(F.realCasePath(path)) : url;\n      t3 = M.Syntax_forPath(path);\n      t4 = t1.get$scheme();\n      if (t4 === \"\")\n        H.throwExpression(P.ArgumentError$value(t1, \"sourceMapUrl\", \"must be absolute\"));\n      return new E.ImporterResult(t2, t1, t3);\n    },\n    modificationTime$1: function(url) {\n      return B.modificationTime($.$get$context().style.pathFromUri$1(M._parseUri(url)));\n    },\n    couldCanonicalize$2: function(url, canonicalUrl) {\n      var t1, t2, t3, basename, canonicalBasename;\n      if (url.get$scheme() !== \"file\" && url.get$scheme() !== \"\")\n        return false;\n      if (canonicalUrl.get$scheme() !== \"file\")\n        return false;\n      t1 = $.$get$url();\n      t2 = url.get$path(url);\n      t3 = t1.style;\n      basename = X.ParsedPath_ParsedPath$parse(t2, t3).get$basename();\n      canonicalBasename = X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t3).get$basename();\n      if (!J.startsWith$1$s(basename, \"_\") && J.startsWith$1$s(canonicalBasename, \"_\"))\n        canonicalBasename = J.substring$1$s(canonicalBasename, 1);\n      return basename === canonicalBasename || basename === t1.withoutExtension$1(canonicalBasename);\n    },\n    toString$0: function(_) {\n      return this._loadPath;\n    }\n  };\n  E.ImporterResult.prototype = {\n    get$sourceMapUrl: function() {\n      return this._sourceMapUrl;\n    }\n  };\n  B.resolveImportPath_closure.prototype = {\n    call$0: function() {\n      return B._exactlyOne(B._tryPath($.$get$context().withoutExtension$1(this.path) + \".import\" + this.extension));\n    },\n    $signature: 13\n  };\n  B.resolveImportPath_closure0.prototype = {\n    call$0: function() {\n      return B._exactlyOne(B._tryPathWithExtensions(this.path + \".import\"));\n    },\n    $signature: 13\n  };\n  B._tryPathAsDirectory_closure.prototype = {\n    call$0: function() {\n      return B._exactlyOne(B._tryPathWithExtensions(D.join(this.path, \"index.import\", null)));\n    },\n    $signature: 13\n  };\n  B._exactlyOne_closure.prototype = {\n    call$1: function(path) {\n      var t1 = $.$get$context();\n      return C.JSString_methods.$add(\"  \", t1.prettyUri$1(t1.toUri$1(path)));\n    },\n    $signature: 8\n  };\n  Z.InterpolationBuffer.prototype = {\n    add$1: function(_, expression) {\n      this._flushText$0();\n      this._interpolation_buffer$_contents.push(expression);\n    },\n    addInterpolation$1: function(interpolation) {\n      var first, t1, _this = this,\n        toAdd = interpolation.contents;\n      if (toAdd.length === 0)\n        return;\n      first = C.JSArray_methods.get$first(toAdd);\n      if (typeof first == \"string\") {\n        _this._interpolation_buffer$_text._contents += first;\n        toAdd = H.SubListIterable$(toAdd, 1, null, H._arrayInstanceType(toAdd)._precomputed1);\n      }\n      _this._flushText$0();\n      t1 = _this._interpolation_buffer$_contents;\n      C.JSArray_methods.addAll$1(t1, toAdd);\n      if (typeof C.JSArray_methods.get$last(t1) == \"string\")\n        _this._interpolation_buffer$_text._contents += H.S(t1.pop());\n    },\n    _flushText$0: function() {\n      var t1 = this._interpolation_buffer$_text,\n        t2 = t1._contents;\n      if (t2.length === 0)\n        return;\n      this._interpolation_buffer$_contents.push(t2.charCodeAt(0) == 0 ? t2 : t2);\n      t1._contents = \"\";\n    },\n    interpolation$1: function(span) {\n      var t2, t3, _i,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n      for (t2 = this._interpolation_buffer$_contents, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      t2 = this._interpolation_buffer$_text._contents;\n      if (t2.length !== 0)\n        t1.push(t2.charCodeAt(0) == 0 ? t2 : t2);\n      return X.Interpolation$(t1, span);\n    },\n    toString$0: function(_) {\n      var t1, t2, _i, t3, element;\n      for (t1 = this._interpolation_buffer$_contents, t2 = t1.length, _i = 0, t3 = \"\"; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        element = t1[_i];\n        t3 = typeof element == \"string\" ? t3 + element : t3 + \"#{\" + H.S(element) + H.Primitives_stringFromCharCode(125);\n      }\n      t1 = t3 + this._interpolation_buffer$_text.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  F.realCasePath_closure.prototype = {\n    call$1: function(realPath) {\n      return B.equalsIgnoreCase(X.ParsedPath_ParsedPath$parse(realPath, $.$get$context().style).get$basename(), this.basename);\n    },\n    $signature: 5\n  };\n  B.FileSystemException.prototype = {\n    toString$0: function(_) {\n      var t1 = $.$get$context();\n      return H.S(t1.prettyUri$1(t1.toUri$1(this.path))) + \": \" + this.message;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    },\n    get$path: function(receiver) {\n      return this.path;\n    }\n  };\n  B.Stderr.prototype = {\n    writeln$1: function(object) {\n      J.write$1$x(this._stderr, H.S(object == null ? \"\" : object) + \"\\n\");\n    },\n    writeln$0: function() {\n      return this.writeln$1(null);\n    }\n  };\n  B._readFile_closure.prototype = {\n    call$0: function() {\n      return J.readFileSync$2$x(D.fs(), this.path, this.encoding);\n    },\n    $signature: 74\n  };\n  B.writeFile_closure.prototype = {\n    call$0: function() {\n      return J.writeFileSync$2$x(D.fs(), this.path, this.contents);\n    },\n    $signature: 1\n  };\n  B.deleteFile_closure.prototype = {\n    call$0: function() {\n      return J.unlinkSync$1$x(D.fs(), this.path);\n    },\n    $signature: 1\n  };\n  B.readStdin_closure.prototype = {\n    call$1: function(result) {\n      this._box_0.contents = result;\n      this.completer.complete$1(result);\n    },\n    $signature: 312\n  };\n  B.readStdin_closure0.prototype = {\n    call$1: function(chunk) {\n      this.sink.add$1(0, type$.legacy_List_legacy_int._as(chunk));\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 62\n  };\n  B.readStdin_closure1.prototype = {\n    call$1: function(_) {\n      this.sink.close$0(0);\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 62\n  };\n  B.readStdin_closure2.prototype = {\n    call$1: function(e) {\n      var t1 = $.$get$stderr();\n      t1.writeln$1(\"Failed to read from stdin\");\n      t1.writeln$1(e);\n      this.completer.completeError$1(e);\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 62\n  };\n  B.fileExists_closure.prototype = {\n    call$0: function() {\n      var error, systemError, exception,\n        t1 = this.path;\n      if (!J.existsSync$1$x(D.fs(), t1))\n        return false;\n      try {\n        t1 = J.isFile$0$x(J.statSync$1$x(D.fs(), t1));\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        if (J.$eq$(J.get$code$x(systemError), \"ENOENT\"))\n          return false;\n        throw exception;\n      }\n    },\n    $signature: 34\n  };\n  B.dirExists_closure.prototype = {\n    call$0: function() {\n      var error, systemError, exception,\n        t1 = this.path;\n      if (!J.existsSync$1$x(D.fs(), t1))\n        return false;\n      try {\n        t1 = J.isDirectory$0$x(J.statSync$1$x(D.fs(), t1));\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        if (J.$eq$(J.get$code$x(systemError), \"ENOENT\"))\n          return false;\n        throw exception;\n      }\n    },\n    $signature: 34\n  };\n  B.ensureDir_closure.prototype = {\n    call$0: function() {\n      var error, systemError, exception, t1;\n      try {\n        J.mkdirSync$1$x(D.fs(), this.path);\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        if (J.$eq$(J.get$code$x(systemError), \"EEXIST\"))\n          return;\n        if (!J.$eq$(J.get$code$x(systemError), \"ENOENT\"))\n          throw exception;\n        t1 = this.path;\n        B.ensureDir($.$get$context().dirname$1(t1));\n        J.mkdirSync$1$x(D.fs(), t1);\n      }\n    },\n    $signature: 0\n  };\n  B.listDir_closure.prototype = {\n    call$0: function() {\n      var t1 = this.path;\n      if (!this.recursive)\n        return J.map$1$1$ax(J.readdirSync$1$x(D.fs(), t1), new B.listDir__closure(t1), type$.legacy_String).where$1(0, new B.listDir__closure0());\n      else\n        return new B.listDir_closure_list().call$1(t1);\n    },\n    $signature: 160\n  };\n  B.listDir__closure.prototype = {\n    call$1: function(child) {\n      return D.join(this.path, H._asStringS(child), null);\n    },\n    $signature: 99\n  };\n  B.listDir__closure0.prototype = {\n    call$1: function(child) {\n      return !B.dirExists(child);\n    },\n    $signature: 5\n  };\n  B.listDir_closure_list.prototype = {\n    call$1: function($parent) {\n      return J.expand$1$1$ax(J.readdirSync$1$x(D.fs(), $parent), new B.listDir__list_closure($parent, this), type$.legacy_String);\n    },\n    $signature: 159\n  };\n  B.listDir__list_closure.prototype = {\n    call$1: function(child) {\n      var path = D.join(this.parent, H._asStringS(child), null);\n      return B.dirExists(path) ? this.list.call$1(path) : H.setRuntimeTypeInfo([path], type$.JSArray_legacy_String);\n    },\n    $signature: 157\n  };\n  B.modificationTime_closure.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = J.getTime$0$x(J.get$mtime$x(J.statSync$1$x(D.fs(), this.path)));\n      if (Math.abs(t1) <= 864e13)\n        t2 = false;\n      else\n        t2 = true;\n      if (t2)\n        H.throwExpression(P.ArgumentError$(\"DateTime is outside valid range: \" + H.S(t1)));\n      P.ArgumentError_checkNotNull(false, \"isUtc\");\n      return new P.DateTime(t1, false);\n    },\n    $signature: 125\n  };\n  B.watchDir_closure.prototype = {\n    call$2: function(path, _) {\n      var t1 = this._box_0.controller;\n      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_add, path));\n    },\n    call$1: function(path) {\n      return this.call$2(path, null);\n    },\n    \"call*\": \"call$2\",\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 154\n  };\n  B.watchDir_closure0.prototype = {\n    call$2: function(path, _) {\n      var t1 = this._box_0.controller;\n      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_modify, path));\n    },\n    call$1: function(path) {\n      return this.call$2(path, null);\n    },\n    \"call*\": \"call$2\",\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 154\n  };\n  B.watchDir_closure1.prototype = {\n    call$1: function(path) {\n      var t1 = this._box_0.controller;\n      return t1 == null ? null : t1.add$1(0, new E.WatchEvent(C.ChangeType_remove, path));\n    },\n    $signature: 325\n  };\n  B.watchDir_closure2.prototype = {\n    call$1: function(error) {\n      var t1 = this._box_0.controller;\n      return t1 == null ? null : t1.addError$1(error);\n    },\n    $signature: 46\n  };\n  B.watchDir_closure3.prototype = {\n    call$0: function() {\n      var controller = P.StreamController_StreamController(new B.watchDir__closure(this.watcher), null, null, null, false, type$.legacy_WatchEvent);\n      this._box_0.controller = controller;\n      this.completer.complete$1(new P._ControllerStream(controller, H._instanceType(controller)._eval$1(\"_ControllerStream<1>\")));\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  B.watchDir__closure.prototype = {\n    call$0: function() {\n      J.close$0$x(this.watcher);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  F._QuietLogger.prototype = {\n    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {\n    },\n    warn$2$span: function($receiver, message, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);\n    },\n    warn$2$deprecation: function($receiver, message, deprecation) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);\n    },\n    warn$3$deprecation$span: function($receiver, message, deprecation, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);\n    },\n    warn$2$trace: function($receiver, message, trace) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);\n    },\n    debug$2: function(_, message, span) {\n    }\n  };\n  S.StderrLogger.prototype = {\n    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {\n      var t2, t3,\n        t1 = this.color;\n      if (t1) {\n        t2 = $.$get$stderr();\n        t3 = t2._stderr;\n        J.write$1$x(t3, \"\\x1b[33m\\x1b[1m\");\n        if (deprecation)\n          J.write$1$x(t3, \"Deprecation \");\n        J.write$1$x(t3, \"Warning\\x1b[0m\");\n      } else {\n        if (deprecation)\n          J.write$1$x($.$get$stderr()._stderr, \"DEPRECATION \");\n        t2 = $.$get$stderr();\n        J.write$1$x(t2._stderr, \"WARNING\");\n      }\n      if (span == null)\n        t2.writeln$1(\": \" + H.S(message));\n      else if (trace != null)\n        t2.writeln$1(\": \" + H.S(message) + \"\\n\\n\" + span.highlight$1$color(t1));\n      else\n        t2.writeln$1(\" on \" + span.message$2$color(0, C.JSString_methods.$add(\"\\n\", message), t1));\n      if (trace != null)\n        t2.writeln$1(B.indent(C.JSString_methods.trimRight$0(trace.toString$0(0)), 4));\n      t2.writeln$0();\n    },\n    warn$2$span: function($receiver, message, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);\n    },\n    warn$2$deprecation: function($receiver, message, deprecation) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);\n    },\n    warn$3$deprecation$span: function($receiver, message, deprecation, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);\n    },\n    warn$2$trace: function($receiver, message, trace) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);\n    },\n    debug$2: function(_, message, span) {\n      var url, t3, t4,\n        t1 = span.file,\n        t2 = span._file$_start;\n      if (Y.FileLocation$_(t1, t2).file.url == null)\n        url = \"-\";\n      else {\n        t3 = Y.FileLocation$_(t1, t2);\n        url = $.$get$context().prettyUri$1(t3.file.url);\n      }\n      t3 = $.$get$stderr();\n      t4 = H.S(url) + \":\";\n      t2 = Y.FileLocation$_(t1, t2);\n      t2 = t4 + (t2.file.getLine$1(t2.offset) + 1) + \" \";\n      t4 = t3._stderr;\n      J.write$1$x(t4, t2);\n      J.write$1$x(t4, this.color ? \"\\x1b[1mDebug\\x1b[0m\" : \"DEBUG\");\n      t3.writeln$1(\": \" + H.S(message));\n    }\n  };\n  T.TrackingLogger.prototype = {\n    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {\n      this._emittedWarning = true;\n      this._tracking$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, trace);\n    },\n    warn$2$span: function($receiver, message, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);\n    },\n    warn$2$deprecation: function($receiver, message, deprecation) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);\n    },\n    warn$3$deprecation$span: function($receiver, message, deprecation, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);\n    },\n    warn$2$trace: function($receiver, message, trace) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);\n    },\n    debug$2: function(_, message, span) {\n      this._emittedDebug = true;\n      this._tracking$_logger.debug$2(0, message, span);\n    }\n  };\n  Q.BuiltInModule.prototype = {\n    get$upstream: function() {\n      return C.List_empty3;\n    },\n    get$variableNodes: function() {\n      return C.Map_empty1;\n    },\n    get$extender: function() {\n      return C.C_EmptyExtender;\n    },\n    get$css: function(_) {\n      return new V.CssStylesheet(C.List_empty0, Y.SourceFile$decoded(C.List_empty1, this.url).span$2(0, 0));\n    },\n    get$transitivelyContainsCss: function() {\n      return false;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return false;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      if (!this.variables.containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$(\"Undefined variable.\"));\n      throw H.wrapException(E.SassScriptException$(\"Cannot modify built-in variable.\"));\n    },\n    variableIdentity$1: function($name) {\n      return this;\n    },\n    cloneCss$0: function() {\n      return this;\n    },\n    $isModule: 1,\n    get$url: function() {\n      return this.url;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$variables: function() {\n      return this.variables;\n    }\n  };\n  R.ForwardedModuleView.prototype = {\n    get$url: function() {\n      return this._forwarded_view$_inner.get$url();\n    },\n    get$upstream: function() {\n      return this._forwarded_view$_inner.get$upstream();\n    },\n    get$extender: function() {\n      return this._forwarded_view$_inner.get$extender();\n    },\n    get$css: function(_) {\n      var t1 = this._forwarded_view$_inner;\n      return t1.get$css(t1);\n    },\n    get$transitivelyContainsCss: function() {\n      return this._forwarded_view$_inner.get$transitivelyContainsCss();\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this._forwarded_view$_inner.get$transitivelyContainsExtensions();\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var _s19_ = \"Undefined variable.\",\n        t1 = this._rule,\n        t2 = t1.shownVariables;\n      if (t2 != null && !t2._base.contains$1(0, $name))\n        throw H.wrapException(E.SassScriptException$(_s19_));\n      else {\n        t2 = t1.hiddenVariables;\n        if (t2 != null && t2._base.contains$1(0, $name))\n          throw H.wrapException(E.SassScriptException$(_s19_));\n      }\n      t1 = t1.prefix;\n      if (t1 != null) {\n        if (!C.JSString_methods.startsWith$1($name, t1))\n          throw H.wrapException(E.SassScriptException$(_s19_));\n        $name = C.JSString_methods.substring$1($name, t1.length);\n      }\n      return this._forwarded_view$_inner.setVariable$3($name, value, nodeWithSpan);\n    },\n    variableIdentity$1: function($name) {\n      var t1 = this._rule.prefix;\n      if (t1 != null)\n        $name = J.substring$1$s($name, t1.length);\n      return this._forwarded_view$_inner.variableIdentity$1($name);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof R.ForwardedModuleView && J.$eq$(this._forwarded_view$_inner, other._forwarded_view$_inner) && this._rule === other._rule;\n    },\n    get$hashCode: function(_) {\n      return (J.get$hashCode$(this._forwarded_view$_inner) ^ H.Primitives_objectHashCode(this._rule)) >>> 0;\n    },\n    cloneCss$0: function() {\n      return R.ForwardedModuleView$(this._forwarded_view$_inner.cloneCss$0(), this._rule, this.$ti._eval$1(\"1*\"));\n    },\n    toString$0: function(_) {\n      return \"forwarded \" + H.S(this._forwarded_view$_inner);\n    },\n    $isModule: 1,\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    }\n  };\n  B.ShadowedModuleView.prototype = {\n    get$url: function() {\n      return this._shadowed_view$_inner.get$url();\n    },\n    get$upstream: function() {\n      return this._shadowed_view$_inner.get$upstream();\n    },\n    get$extender: function() {\n      return this._shadowed_view$_inner.get$extender();\n    },\n    get$css: function(_) {\n      var t1 = this._shadowed_view$_inner;\n      return t1.get$css(t1);\n    },\n    get$transitivelyContainsCss: function() {\n      return this._shadowed_view$_inner.get$transitivelyContainsCss();\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this._shadowed_view$_inner.get$transitivelyContainsExtensions();\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      if (!this.variables.containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$(\"Undefined variable.\"));\n      else\n        return this._shadowed_view$_inner.setVariable$3($name, value, nodeWithSpan);\n    },\n    variableIdentity$1: function($name) {\n      return this._shadowed_view$_inner.variableIdentity$1($name);\n    },\n    $eq: function(_, other) {\n      var t1, t2, _this = this;\n      if (other == null)\n        return false;\n      if (other instanceof B.ShadowedModuleView)\n        if (_this._shadowed_view$_inner.$eq(0, other._shadowed_view$_inner)) {\n          t1 = _this.variables;\n          t1 = t1.get$keys(t1);\n          t2 = other.variables;\n          if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {\n            t1 = _this.functions;\n            t1 = t1.get$keys(t1);\n            t2 = other.functions;\n            if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {\n              t1 = _this.mixins;\n              t1 = t1.get$keys(t1);\n              t2 = other.mixins;\n              t2 = C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2));\n              t1 = t2;\n            } else\n              t1 = false;\n          } else\n            t1 = false;\n        } else\n          t1 = false;\n      else\n        t1 = false;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var t1 = this._shadowed_view$_inner;\n      return t1.get$hashCode(t1);\n    },\n    cloneCss$0: function() {\n      var _this = this;\n      return new B.ShadowedModuleView(_this._shadowed_view$_inner.cloneCss$0(), _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.$ti._eval$1(\"ShadowedModuleView<1*>\"));\n    },\n    toString$0: function(_) {\n      return \"shadowed \" + this._shadowed_view$_inner.toString$0(0);\n    },\n    $isModule: 1,\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    }\n  };\n  Y.Chokidar.prototype = {};\n  Y.ChokidarOptions.prototype = {};\n  Y.ChokidarWatcher.prototype = {};\n  F.JSFunction.prototype = {};\n  F.NodeImporterResult.prototype = {};\n  B._PropertyDescriptor.prototype = {};\n  V.AtRootQueryParser.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new V.AtRootQueryParser_parse_closure(this));\n    }\n  };\n  V.AtRootQueryParser_parse_closure.prototype = {\n    call$0: function() {\n      var include, atRules,\n        t1 = this.$this,\n        t2 = t1.scanner;\n      t2.expectChar$1(40);\n      t1.whitespace$0();\n      include = t1.scanIdentifier$1(\"with\");\n      if (!include)\n        t1.expectIdentifier$2$name(\"without\", '\"with\" or \"without\"');\n      t1.whitespace$0();\n      t2.expectChar$1(58);\n      t1.whitespace$0();\n      atRules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      do {\n        atRules.add$1(0, t1.identifier$0().toLowerCase());\n        t1.whitespace$0();\n      } while (t1.lookingAtIdentifier$0());\n      t2.expectChar$1(41);\n      t2.expectDone$0();\n      return new V.AtRootQuery(include, atRules, atRules.contains$1(0, \"all\"), atRules.contains$1(0, \"rule\"));\n    },\n    $signature: 86\n  };\n  Q.closure112.prototype = {\n    call$1: function($function) {\n      return $function.name;\n    },\n    $signature: 329\n  };\n  Q.CssParser.prototype = {\n    get$plainCss: function() {\n      return true;\n    },\n    silentComment$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      this.super$Parser$silentComment();\n      this.error$2(0, string$.Silent, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    atRule$2$root: function(child, root) {\n      var $name, urlStart, next, url, urlSpan, queries, t2, t3, t4, t5, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(64);\n      $name = _this.interpolatedIdentifier$0();\n      _this.whitespace$0();\n      switch ($name.get$asPlain()) {\n        case \"at-root\":\n        case \"content\":\n        case \"debug\":\n        case \"each\":\n        case \"error\":\n        case \"extend\":\n        case \"for\":\n        case \"function\":\n        case \"if\":\n        case \"include\":\n        case \"mixin\":\n        case \"return\":\n        case \"warn\":\n        case \"while\":\n          _this.almostAnyValue$0();\n          _this.error$2(0, \"This at-rule isn't allowed in plain CSS.\", t1.spanFrom$1(start));\n          break;\n        case \"charset\":\n          _this.string$0();\n          if (!root)\n            _this.error$2(0, \"This at-rule is not allowed here.\", t1.spanFrom$1(start));\n          return null;\n        case \"import\":\n          urlStart = new S._SpanScannerState(t1, t1._string_scanner$_position);\n          next = t1.peekChar$0();\n          url = next === 117 || next === 85 ? _this.dynamicUrl$0() : new D.StringExpression(_this.interpolatedString$0().asInterpolation$1$static(true), false);\n          urlSpan = t1.spanFrom$1(urlStart);\n          _this.whitespace$0();\n          queries = _this.tryImportQueries$0();\n          _this.expectStatementSeparator$1(\"@import rule\");\n          t2 = X.Interpolation$(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), urlSpan);\n          t3 = t1.spanFrom$1(urlStart);\n          t4 = queries == null;\n          t5 = t4 ? null : queries.item1;\n          t2 = H.setRuntimeTypeInfo([new Q.StaticImport(t2, t5, t4 ? null : queries.item2, t3)], type$.JSArray_legacy_Import);\n          t1 = t1.spanFrom$1(start);\n          return new B.ImportRule(P.List_List$unmodifiable(t2, type$.legacy_Import), t1);\n        case \"media\":\n          return _this.mediaRule$1(start);\n        case \"-moz-document\":\n          return _this.mozDocumentRule$2(start, $name);\n        case \"supports\":\n          return _this.supportsRule$1(start);\n        default:\n          return _this.unknownAtRule$2(start, $name);\n      }\n    },\n    identifierLike$0: function() {\n      var t2, $arguments, t3, t4, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        identifier = _this.interpolatedIdentifier$0(),\n        plain = identifier.get$asPlain(),\n        specialFunction = _this.trySpecialFunction$2(plain.toLowerCase(), start);\n      if (specialFunction != null)\n        return specialFunction;\n      t2 = t1._string_scanner$_position;\n      if (!t1.scanChar$1(40))\n        return new D.StringExpression(identifier, false);\n      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n      if (!t1.scanChar$1(41)) {\n        do {\n          _this.whitespace$0();\n          $arguments.push(_this.expression$1$singleEquals(true));\n          _this.whitespace$0();\n        } while (t1.scanChar$1(44));\n        t1.expectChar$1(41);\n      }\n      if ($.$get$_disallowedFunctionNames().contains$1(0, plain))\n        _this.error$2(0, string$.This_f, t1.spanFrom$1(start));\n      t3 = X.Interpolation$(H.setRuntimeTypeInfo([new D.StringExpression(identifier, false)], type$.JSArray_legacy_Object), identifier.span);\n      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      t4 = type$.legacy_Expression;\n      return new F.FunctionExpression(null, t3, new X.ArgumentInvocation(P.List_List$unmodifiable($arguments, t4), H.ConstantMap_ConstantMap$from(C.Map_empty3, type$.legacy_String, t4), null, null, t2), t1.spanFrom$1(start));\n    }\n  };\n  E.KeyframeSelectorParser.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new E.KeyframeSelectorParser_parse_closure(this));\n    },\n    _percentage$0: function() {\n      var t3, next,\n        t1 = this.scanner,\n        t2 = t1.scanChar$1(43) ? H.Primitives_stringFromCharCode(43) : \"\",\n        second = t1.peekChar$0();\n      if (!T.isDigit(second) && second !== 46)\n        t1.error$1(0, \"Expected number.\");\n      while (true) {\n        t3 = t1.peekChar$0();\n        if (!(t3 != null && t3 >= 48 && t3 <= 57))\n          break;\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      if (t1.peekChar$0() === 46) {\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n      }\n      if (this.scanIdentifier$1(\"e\")) {\n        t2 += t1.readChar$0();\n        next = t1.peekChar$0();\n        if (next === 43 || next === 45)\n          t2 += t1.readChar$0();\n        if (!T.isDigit(t1.peekChar$0()))\n          t1.error$1(0, \"Expected digit.\");\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n      }\n      t1.expectChar$1(37);\n      t2 += H.Primitives_stringFromCharCode(37);\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    }\n  };\n  E.KeyframeSelectorParser_parse_closure.prototype = {\n    call$0: function() {\n      var selectors = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),\n        t1 = this.$this,\n        t2 = t1.scanner;\n      do {\n        t1.whitespace$0();\n        if (t1.lookingAtIdentifier$0())\n          if (t1.scanIdentifier$1(\"from\"))\n            selectors.push(\"from\");\n          else {\n            t1.expectIdentifier$2$name(\"to\", '\"to\" or \"from\"');\n            selectors.push(\"to\");\n          }\n        else\n          selectors.push(t1._percentage$0());\n        t1.whitespace$0();\n      } while (t2.scanChar$1(44));\n      t2.expectDone$0();\n      return selectors;\n    },\n    $signature: 42\n  };\n  F.MediaQueryParser.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new F.MediaQueryParser_parse_closure(this));\n    },\n    _mediaQuery$0: function() {\n      var identifier1, identifier2, type, modifier, features, _this = this, _null = null,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() !== 40) {\n        identifier1 = _this.identifier$0();\n        _this.whitespace$0();\n        if (!_this.lookingAtIdentifier$0())\n          return new F.CssMediaQuery(_null, identifier1, C.List_empty);\n        identifier2 = _this.identifier$0();\n        _this.whitespace$0();\n        if (B.equalsIgnoreCase(identifier2, \"and\")) {\n          type = identifier1;\n          modifier = _null;\n        } else {\n          if (_this.scanIdentifier$1(\"and\"))\n            _this.whitespace$0();\n          else\n            return new F.CssMediaQuery(identifier1, identifier2, C.List_empty);\n          type = identifier2;\n          modifier = identifier1;\n        }\n      } else {\n        type = _null;\n        modifier = type;\n      }\n      features = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      do {\n        _this.whitespace$0();\n        t1.expectChar$1(40);\n        features.push(\"(\" + _this.declarationValue$0() + \")\");\n        t1.expectChar$1(41);\n        _this.whitespace$0();\n      } while (_this.scanIdentifier$1(\"and\"));\n      if (type == null)\n        return new F.CssMediaQuery(_null, _null, P.List_List$unmodifiable(features, type$.legacy_String));\n      else {\n        t1 = P.List_List$unmodifiable(features, type$.legacy_String);\n        return new F.CssMediaQuery(modifier, type, t1);\n      }\n    }\n  };\n  F.MediaQueryParser_parse_closure.prototype = {\n    call$0: function() {\n      var queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery),\n        t1 = this.$this,\n        t2 = t1.scanner;\n      do {\n        t1.whitespace$0();\n        queries.push(t1._mediaQuery$0());\n      } while (t2.scanChar$1(44));\n      t2.expectDone$0();\n      return queries;\n    },\n    $signature: 87\n  };\n  G.Parser.prototype = {\n    _parseIdentifier$0: function() {\n      return this.wrapSpanFormatException$1(new G.Parser__parseIdentifier_closure(this));\n    },\n    _isVariableDeclarationLike$0: function() {\n      var _this = this,\n        t1 = _this.scanner;\n      if (!t1.scanChar$1(36))\n        return false;\n      if (!_this.lookingAtIdentifier$0())\n        return false;\n      _this.identifier$0();\n      _this.whitespace$0();\n      return t1.scanChar$1(58);\n    },\n    whitespace$0: function() {\n      do\n        this.whitespaceWithoutComments$0();\n      while (this.scanComment$0());\n    },\n    whitespaceWithoutComments$0: function() {\n      var t3,\n        t1 = this.scanner,\n        t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    spaces$0: function() {\n      var t3,\n        t1 = this.scanner,\n        t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = t3 === 32 || t3 === 9;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    scanComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      if (t1.peekChar$0() !== 47)\n        return false;\n      next = t1.peekChar$1(1);\n      if (next === 47) {\n        this.silentComment$0();\n        return true;\n      } else if (next === 42) {\n        this.loudComment$0();\n        return true;\n      } else\n        return false;\n    },\n    silentComment$0: function() {\n      var t2, t3,\n        t1 = this.scanner;\n      t1.expect$1(\"//\");\n      t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = !(t3 === 10 || t3 === 13 || t3 === 12);\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    loudComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      t1.expect$1(\"/*\");\n      for (; true;) {\n        if (t1.readChar$0() !== 42)\n          continue;\n        do\n          next = t1.readChar$0();\n        while (next === 42);\n        if (next === 47)\n          break;\n      }\n    },\n    identifier$2$normalize$unit: function(normalize, unit) {\n      var t2, first, _this = this,\n        _s20_ = \"Expected identifier.\",\n        text = new P.StringBuffer(\"\"),\n        t1 = _this.scanner;\n      if (t1.scanChar$1(45)) {\n        t2 = text._contents = H.Primitives_stringFromCharCode(45);\n        if (t1.scanChar$1(45)) {\n          text._contents = t2 + H.Primitives_stringFromCharCode(45);\n          _this._identifierBody$3$normalize$unit(text, normalize, unit);\n          t1 = text._contents;\n          return t1.charCodeAt(0) == 0 ? t1 : t1;\n        }\n      } else\n        t2 = \"\";\n      first = t1.peekChar$0();\n      if (first == null)\n        t1.error$1(0, _s20_);\n      else if (normalize && first === 95) {\n        t1.readChar$0();\n        text._contents = t2 + H.Primitives_stringFromCharCode(45);\n      } else if (first === 95 || T.isAlphabetic0(first) || first >= 128)\n        text._contents = t2 + H.Primitives_stringFromCharCode(t1.readChar$0());\n      else if (first === 92)\n        text._contents = t2 + H.S(_this.escape$1$identifierStart(true));\n      else\n        t1.error$1(0, _s20_);\n      _this._identifierBody$3$normalize$unit(text, normalize, unit);\n      t1 = text._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    identifier$0: function() {\n      return this.identifier$2$normalize$unit(false, false);\n    },\n    identifier$1$normalize: function(normalize) {\n      return this.identifier$2$normalize$unit(normalize, false);\n    },\n    identifier$1$unit: function(unit) {\n      return this.identifier$2$normalize$unit(false, unit);\n    },\n    _identifierBody$3$normalize$unit: function(text, normalize, unit) {\n      var t1, next, second, t2;\n      for (t1 = this.scanner; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else if (unit && next === 45) {\n          second = t1.peekChar$1(1);\n          if (second != null)\n            if (second !== 46)\n              t2 = second >= 48 && second <= 57;\n            else\n              t2 = true;\n          else\n            t2 = false;\n          if (t2)\n            break;\n          text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n        } else if (normalize && next === 95) {\n          t1.readChar$0();\n          text._contents += H.Primitives_stringFromCharCode(45);\n        } else {\n          if (next !== 95) {\n            if (!(next >= 97 && next <= 122))\n              t2 = next >= 65 && next <= 90;\n            else\n              t2 = true;\n            t2 = t2 || next >= 128;\n          } else\n            t2 = true;\n          if (!t2) {\n            t2 = next >= 48 && next <= 57;\n            t2 = t2 || next === 45;\n          } else\n            t2 = true;\n          if (t2)\n            text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            text._contents += H.S(this.escape$0());\n          else\n            break;\n        }\n      }\n    },\n    _identifierBody$1: function(text) {\n      return this._identifierBody$3$normalize$unit(text, false, false);\n    },\n    string$0: function() {\n      var t2, buffer, next,\n        t1 = this.scanner,\n        quote = t1.readChar$0();\n      if (quote !== 39 && quote !== 34) {\n        t2 = t1._string_scanner$_position;\n        t1.error$2$position(0, \"Expected string.\", t2 - 1);\n      }\n      buffer = new P.StringBuffer(\"\");\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next === quote) {\n          t1.readChar$0();\n          break;\n        } else if (next == null || next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"Expected \" + H.Primitives_stringFromCharCode(quote) + \".\");\n        else if (next === 92) {\n          t2 = t1.peekChar$1(1);\n          if (t2 === 10 || t2 === 13 || t2 === 12) {\n            t1.readChar$0();\n            t1.readChar$0();\n          } else\n            buffer._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());\n        } else\n          buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    naturalNumber$0: function() {\n      var number, t2,\n        t1 = this.scanner,\n        first = t1.readChar$0();\n      if (!T.isDigit(first))\n        t1.error$2$position(0, \"Expected digit.\", t1._string_scanner$_position - 1);\n      number = first - 48;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        number = number * 10 + (t1.readChar$0() - 48);\n      }\n      return number;\n    },\n    declarationValue$1$allowEmpty: function(allowEmpty) {\n      var t1, t2, wroteNewline, next, start, end, t3, url, _this = this,\n        buffer = new P.StringBuffer(\"\"),\n        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);\n      $label0$1:\n        for (t1 = _this.scanner, t2 = _this.get$string(), wroteNewline = false; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              buffer._contents += H.S(_this.escape$1$identifierStart(true));\n              wroteNewline = false;\n              break;\n            case 34:\n            case 39:\n              start = t1._string_scanner$_position;\n              t2.call$0();\n              end = t1._string_scanner$_position;\n              buffer._contents += J.substring$2$s(t1.string, start, end);\n              wroteNewline = false;\n              break;\n            case 47:\n              if (t1.peekChar$1(1) === 42) {\n                t3 = _this.get$loudComment();\n                start = t1._string_scanner$_position;\n                t3.call$0();\n                end = t1._string_scanner$_position;\n                buffer._contents += J.substring$2$s(t1.string, start, end);\n              } else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 32:\n            case 9:\n              if (!wroteNewline) {\n                t3 = t1.peekChar$1(1);\n                t3 = !(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12);\n              } else\n                t3 = true;\n              if (t3)\n                buffer._contents += H.Primitives_stringFromCharCode(32);\n              t1.readChar$0();\n              break;\n            case 10:\n            case 13:\n            case 12:\n              t3 = t1.peekChar$1(-1);\n              if (!(t3 === 10 || t3 === 13 || t3 === 12))\n                buffer._contents += \"\\n\";\n              t1.readChar$0();\n              wroteNewline = true;\n              break;\n            case 40:\n            case 123:\n            case 91:\n              buffer._contents += H.Primitives_stringFromCharCode(next);\n              brackets.push(T.opposite(t1.readChar$0()));\n              wroteNewline = false;\n              break;\n            case 41:\n            case 125:\n            case 93:\n              if (brackets.length === 0)\n                break $label0$1;\n              buffer._contents += H.Primitives_stringFromCharCode(next);\n              t1.expectChar$1(brackets.pop());\n              wroteNewline = false;\n              break;\n            case 59:\n              if (brackets.length === 0)\n                break $label0$1;\n              buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 117:\n            case 85:\n              url = _this.tryUrl$0();\n              if (url != null)\n                buffer._contents += url;\n              else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                buffer._contents += _this.identifier$0();\n              else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n          }\n        }\n      if (brackets.length !== 0)\n        t1.expectChar$1(C.JSArray_methods.get$last(brackets));\n      if (!allowEmpty && buffer._contents.length === 0)\n        t1.error$1(0, \"Expected token.\");\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    declarationValue$0: function() {\n      return this.declarationValue$1$allowEmpty(false);\n    },\n    tryUrl$0: function() {\n      var buffer, next, t2, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (!_this.scanIdentifier$1(\"url\"))\n        return null;\n      if (!t1.scanChar$1(40)) {\n        t1.set$state(start);\n        return null;\n      }\n      _this.whitespace$0();\n      buffer = new P.StringBuffer(\"\");\n      buffer._contents = \"url(\";\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 37)\n            if (next !== 38)\n              if (next !== 35)\n                t2 = next >= 42 && next <= 126 || next >= 128;\n              else\n                t2 = true;\n            else\n              t2 = true;\n          else\n            t2 = true;\n          if (t2)\n            buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            buffer._contents += H.S(_this.escape$0());\n          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {\n            _this.whitespace$0();\n            if (t1.peekChar$0() !== 41)\n              break;\n          } else if (next === 41) {\n            t2 = buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            return t2.charCodeAt(0) == 0 ? t2 : t2;\n          } else\n            break;\n        }\n      }\n      t1.set$state(start);\n      return null;\n    },\n    variableName$0: function() {\n      this.scanner.expectChar$1(36);\n      return this.identifier$1$normalize(true);\n    },\n    escape$1$identifierStart: function(identifierStart) {\n      var value, first, i, next, t2, exception,\n        t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      t1.expectChar$1(92);\n      value = 0;\n      first = t1.peekChar$0();\n      if (first == null)\n        return \"\";\n      else if (T.isNewline(first))\n        t1.error$1(0, \"Expected escape sequence.\");\n      else if (T.isHex(first)) {\n        for (i = 0; i < 6; ++i) {\n          next = t1.peekChar$0();\n          if (next == null || !T.isHex(next))\n            break;\n          value *= 16;\n          value += T.asHex(t1.readChar$0());\n        }\n        this.scanCharIf$1(T.character__isWhitespace$closure());\n      } else\n        value = t1.readChar$0();\n      if (identifierStart) {\n        t2 = value;\n        t2 = t2 === 95 || T.isAlphabetic0(t2) || t2 >= 128;\n      } else {\n        t2 = value;\n        t2 = t2 === 95 || T.isAlphabetic0(t2) || t2 >= 128 || T.isDigit(t2) || t2 === 45;\n      }\n      if (t2)\n        try {\n          t2 = H.Primitives_stringFromCharCode(value);\n          return t2;\n        } catch (exception) {\n          if (type$.legacy_RangeError._is(H.unwrapException(exception)))\n            t1.error$3$length$position(0, \"Invalid Unicode code point.\", t1._string_scanner$_position - start, start);\n          else\n            throw exception;\n        }\n      else {\n        if (!(value <= 31))\n          if (!J.$eq$(value, 127))\n            t1 = identifierStart && T.isDigit(value);\n          else\n            t1 = true;\n        else\n          t1 = true;\n        if (t1) {\n          t1 = H.Primitives_stringFromCharCode(92);\n          if (value > 15)\n            t1 += H.Primitives_stringFromCharCode(T.hexCharFor(C.JSNumber_methods._shrOtherPositive$1(value, 4)));\n          t1 = t1 + H.Primitives_stringFromCharCode(T.hexCharFor(value & 15)) + H.Primitives_stringFromCharCode(32);\n          return t1.charCodeAt(0) == 0 ? t1 : t1;\n        } else\n          return P.String_String$fromCharCodes(H.setRuntimeTypeInfo([92, value], type$.JSArray_legacy_int), 0, null);\n      }\n    },\n    escape$0: function() {\n      return this.escape$1$identifierStart(false);\n    },\n    escapeCharacter$0: function() {\n      var first, value, i, next, t2,\n        t1 = this.scanner;\n      t1.expectChar$1(92);\n      first = t1.peekChar$0();\n      if (first == null)\n        return 65533;\n      else if (T.isNewline(first))\n        t1.error$1(0, \"Expected escape sequence.\");\n      else if (T.isHex(first)) {\n        for (value = 0, i = 0; i < 6; ++i) {\n          next = t1.peekChar$0();\n          if (next == null || !T.isHex(next))\n            break;\n          value = (value << 4 >>> 0) + T.asHex(t1.readChar$0());\n        }\n        t2 = t1.peekChar$0();\n        if (t2 === 32 || t2 === 9 || T.isNewline(t2))\n          t1.readChar$0();\n        if (value !== 0)\n          t1 = value >= 55296 && value <= 57343 || value >= 1114111;\n        else\n          t1 = true;\n        if (t1)\n          return 65533;\n        else\n          return value;\n      } else\n        return t1.readChar$0();\n    },\n    scanCharIf$1: function(condition) {\n      var t1 = this.scanner;\n      if (!condition.call$1(t1.peekChar$0()))\n        return false;\n      t1.readChar$0();\n      return true;\n    },\n    scanIdentChar$2$caseSensitive: function(char, caseSensitive) {\n      var t3,\n        t1 = new G.Parser_scanIdentChar_matches(caseSensitive, char),\n        t2 = this.scanner,\n        next = t2.peekChar$0();\n      if (next != null && t1.call$1(next)) {\n        t2.readChar$0();\n        return true;\n      } else if (next === 92) {\n        t3 = t2._string_scanner$_position;\n        if (t1.call$1(this.escapeCharacter$0()))\n          return true;\n        t2.set$state(new S._SpanScannerState(t2, t3));\n      }\n      return false;\n    },\n    scanIdentChar$1: function(char) {\n      return this.scanIdentChar$2$caseSensitive(char, false);\n    },\n    expectIdentChar$1: function(letter) {\n      var t1;\n      if (this.scanIdentChar$2$caseSensitive(letter, false))\n        return;\n      t1 = this.scanner;\n      t1.error$2$position(0, 'Expected \"' + H.Primitives_stringFromCharCode(letter) + '\".', t1._string_scanner$_position);\n    },\n    lookingAtNumber$0: function() {\n      var second, third,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (T.isDigit(first))\n        return true;\n      if (first === 46) {\n        second = t1.peekChar$1(1);\n        return second != null && T.isDigit(second);\n      } else if (first === 43 || first === 45) {\n        second = t1.peekChar$1(1);\n        if (second == null)\n          return false;\n        if (T.isDigit(second))\n          return true;\n        if (second !== 46)\n          return false;\n        third = t1.peekChar$1(2);\n        return third != null && T.isDigit(third);\n      } else\n        return false;\n    },\n    lookingAtIdentifier$1: function($forward) {\n      var t1, first, second;\n      if ($forward == null)\n        $forward = 0;\n      t1 = this.scanner;\n      first = t1.peekChar$1($forward);\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || first === 92)\n        return true;\n      if (first !== 45)\n        return false;\n      second = t1.peekChar$1($forward + 1);\n      if (second == null)\n        return false;\n      return second === 95 || T.isAlphabetic0(second) || second >= 128 || second === 92 || second === 45;\n    },\n    lookingAtIdentifier$0: function() {\n      return this.lookingAtIdentifier$1(null);\n    },\n    lookingAtIdentifierBody$0: function() {\n      var t1,\n        next = this.scanner.peekChar$0();\n      if (next != null)\n        t1 = next === 95 || T.isAlphabetic0(next) || next >= 128 || T.isDigit(next) || next === 45 || next === 92;\n      else\n        t1 = false;\n      return t1;\n    },\n    scanIdentifier$2$caseSensitive: function(text, caseSensitive) {\n      var t1, start, t2, cur, _this = this;\n      if (!_this.lookingAtIdentifier$0())\n        return false;\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        if (_this.scanIdentChar$2$caseSensitive(cur, caseSensitive))\n          continue;\n        if (start._scanner !== t1)\n          H.throwExpression(P.ArgumentError$(string$.The_gi));\n        t2 = start.position;\n        if (t2 < 0 || t2 > t1.string.length)\n          H.throwExpression(P.ArgumentError$(\"Invalid position \" + t2));\n        t1._string_scanner$_position = t2;\n        t1._lastMatch = null;\n        return false;\n      }\n      if (!_this.lookingAtIdentifierBody$0())\n        return true;\n      t1.set$state(start);\n      return false;\n    },\n    scanIdentifier$1: function(text) {\n      return this.scanIdentifier$2$caseSensitive(text, false);\n    },\n    expectIdentifier$2$name: function(text, $name) {\n      var t1, start, t2, cur;\n      if ($name == null)\n        $name = '\"' + text + '\"';\n      t1 = this.scanner;\n      start = t1._string_scanner$_position;\n      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        if (this.scanIdentChar$2$caseSensitive(cur, false))\n          continue;\n        t1.error$2$position(0, \"Expected \" + $name + \".\", start);\n      }\n      if (!this.lookingAtIdentifierBody$0())\n        return;\n      t1.error$2$position(0, \"Expected \" + $name, start);\n    },\n    expectIdentifier$1: function(text) {\n      return this.expectIdentifier$2$name(text, null);\n    },\n    rawText$1: function(consumer) {\n      var t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      consumer.call$0();\n      return t1.substring$1(0, start);\n    },\n    error$2: function(_, message, span) {\n      return H.throwExpression(E.StringScannerException$(message, span, this.scanner.string));\n    },\n    withErrorMessage$1$2: function(message, callback) {\n      var error, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SourceSpanFormatException._is(t1)) {\n          error = t1;\n          throw H.wrapException(G.SourceSpanFormatException$(message, error.get$span(), error.get$source()));\n        } else\n          throw exception;\n      }\n    },\n    withErrorMessage$2: function(message, callback) {\n      return this.withErrorMessage$1$2(message, callback, type$.dynamic);\n    },\n    wrapSpanFormatException$1$1: function(callback) {\n      var error, span, startPosition, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SourceSpanFormatException._is(t1)) {\n          error = t1;\n          span = error.get$span();\n          if (B.startsWithIgnoreCase(error._span_exception$_message, \"expected\")) {\n            t1 = span;\n            t1 = t1._end - t1._file$_start === 0;\n          } else\n            t1 = false;\n          if (t1) {\n            t1 = span;\n            startPosition = this._firstNewlineBefore$1(Y.FileLocation$_(t1.file, t1._file$_start).offset);\n            t1 = span;\n            if (!J.$eq$(startPosition, Y.FileLocation$_(t1.file, t1._file$_start).offset))\n              span = span.file.span$2(startPosition, startPosition);\n          }\n          throw H.wrapException(E.SassFormatException$(error._span_exception$_message, span));\n        } else\n          throw exception;\n      }\n    },\n    wrapSpanFormatException$1: function(callback) {\n      return this.wrapSpanFormatException$1$1(callback, type$.dynamic);\n    },\n    _firstNewlineBefore$1: function(position) {\n      var t1, t2, lastNewline, codeUnit,\n        index = position - 1;\n      for (t1 = this.scanner.string, t2 = J.getInterceptor$s(t1), lastNewline = null; index >= 0;) {\n        codeUnit = t2.codeUnitAt$1(t1, index);\n        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))\n          return lastNewline == null ? position : lastNewline;\n        if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12)\n          lastNewline = index;\n        --index;\n      }\n      return position;\n    }\n  };\n  G.Parser__parseIdentifier_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        result = t1.identifier$0();\n      t1.scanner.expectDone$0();\n      return result;\n    },\n    $signature: 13\n  };\n  G.Parser_scanIdentChar_matches.prototype = {\n    call$1: function(actual) {\n      var t1 = this.char;\n      return this.caseSensitive ? actual === t1 : T.characterEqualsIgnoreCase(t1, actual);\n    },\n    $signature: 24\n  };\n  U.SassParser.prototype = {\n    get$currentIndentation: function() {\n      return this._currentIndentation;\n    },\n    get$indented: function() {\n      return true;\n    },\n    styleRuleSelector$0: function() {\n      var t4,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer(t3, []);\n      do {\n        buffer.addInterpolation$1(this.almostAnyValue$1$omitComments(true));\n        t4 = t3._contents += H.Primitives_stringFromCharCode(10);\n      } while (C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), \",\") && this.scanCharIf$1(T.character__isNewline$closure()));\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    expectStatementSeparator$1: function($name) {\n      var _this = this;\n      if (!_this.atEndOfStatement$0())\n        _this._expectNewline$0();\n      if (_this._peekIndentation$0() <= _this._currentIndentation)\n        return;\n      _this.scanner.error$2$position(0, \"Nothing may be indented \" + ($name == null ? \"here\" : \"beneath a \" + $name) + \".\", _this._nextIndentationEnd.position);\n    },\n    expectStatementSeparator$0: function() {\n      return this.expectStatementSeparator$1(null);\n    },\n    atEndOfStatement$0: function() {\n      var next = this.scanner.peekChar$0();\n      return next == null || T.isNewline(next);\n    },\n    lookingAtChildren$0: function() {\n      return this.atEndOfStatement$0() && this._peekIndentation$0() > this._currentIndentation;\n    },\n    importArgument$0: function() {\n      var url, span, innerError, start, next, t2, exception, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 117:\n        case 85:\n          start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n          if (_this.scanIdentifier$1(\"url\"))\n            if (t1.scanChar$1(40)) {\n              t1.set$state(start);\n              return _this.super$StylesheetParser$importArgument();\n            } else\n              t1.set$state(start);\n          break;\n        case 39:\n        case 34:\n          return _this.super$StylesheetParser$importArgument();\n      }\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      next = t1.peekChar$0();\n      while (true) {\n        if (next != null)\n          if (next !== 44)\n            if (next !== 59)\n              t2 = !(next === 10 || next === 13 || next === 12);\n            else\n              t2 = false;\n          else\n            t2 = false;\n        else\n          t2 = false;\n        if (!t2)\n          break;\n        t1.readChar$0();\n        next = t1.peekChar$0();\n      }\n      url = t1.substring$1(0, start.position);\n      span = t1.spanFrom$1(start);\n      if (_this.isPlainImportUrl$1(url))\n        return new Q.StaticImport(X.Interpolation$(H.setRuntimeTypeInfo([N.serializeValue0(new D.SassString(url, true), true, true)], type$.JSArray_legacy_Object), span), null, null, span);\n      else\n        try {\n          t1 = _this.parseImportUrl$1(url);\n          return new B.DynamicImport(t1, span);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (type$.legacy_FormatException._is(t1)) {\n            innerError = t1;\n            _this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), span);\n          } else\n            throw exception;\n        }\n    },\n    scanElse$1: function(ifIndentation) {\n      var t1, t2, startIndentation, startNextIndentation, startNextIndentationEnd, _this = this;\n      if (_this._peekIndentation$0() != ifIndentation)\n        return false;\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      startIndentation = _this._currentIndentation;\n      startNextIndentation = _this._nextIndentation;\n      startNextIndentationEnd = _this._nextIndentationEnd;\n      _this._readIndentation$0();\n      if (t1.scanChar$1(64) && _this.scanIdentifier$1(\"else\"))\n        return true;\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      _this._currentIndentation = startIndentation;\n      _this._nextIndentation = startNextIndentation;\n      _this._nextIndentationEnd = startNextIndentationEnd;\n      return false;\n    },\n    children$1: function(_, child) {\n      var children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);\n      this._whileIndentedLower$1(new U.SassParser_children_closure(this, children, child));\n      return children;\n    },\n    statements$1: function(statement) {\n      var statements, t2, child,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first === 9 || first === 32)\n        t1.error$3$length$position(0, string$.Indent, t1._string_scanner$_position, 0);\n      statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);\n      for (t2 = t1.string.length; t1._string_scanner$_position !== t2;) {\n        child = this._child$1(statement);\n        if (child != null)\n          statements.push(child);\n        this._readIndentation$0();\n      }\n      return statements;\n    },\n    _child$1: function(child) {\n      var _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 13:\n        case 10:\n        case 12:\n          return null;\n        case 36:\n          return _this.variableDeclarationWithoutNamespace$0();\n        case 47:\n          switch (t1.peekChar$1(1)) {\n            case 47:\n              return _this._silentComment$0();\n            case 42:\n              return _this._loudComment$0();\n            default:\n              return child.call$0();\n          }\n        default:\n          return child.call$0();\n      }\n    },\n    _silentComment$0: function() {\n      var buffer, parentIndentation, t3, commentPrefix, i, t4, i0, t5, t6, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"//\");\n      buffer = new P.StringBuffer(\"\");\n      parentIndentation = _this._currentIndentation;\n      t3 = t1.string;\n      $label0$0:\n        do {\n          commentPrefix = t1.scanChar$1(47) ? \"///\" : \"//\";\n          for (i = commentPrefix.length; true;) {\n            t4 = buffer._contents += commentPrefix;\n            for (i0 = i; i0 < _this._currentIndentation - parentIndentation; ++i0) {\n              t4 += H.Primitives_stringFromCharCode(32);\n              buffer._contents = t4;\n            }\n            t5 = t3.length;\n            while (true) {\n              if (t1._string_scanner$_position !== t5) {\n                t6 = t1.peekChar$0();\n                t6 = !(t6 === 10 || t6 === 13 || t6 === 12);\n              } else\n                t6 = false;\n              if (!t6)\n                break;\n              t4 += H.Primitives_stringFromCharCode(t1.readChar$0());\n              buffer._contents = t4;\n            }\n            buffer._contents = t4 + \"\\n\";\n            if (_this._peekIndentation$0() < parentIndentation)\n              break $label0$0;\n            if (_this._peekIndentation$0() === parentIndentation) {\n              if (t1.peekChar$1(1 + parentIndentation) === 47 && t1.peekChar$1(2 + parentIndentation) === 47)\n                _this._readIndentation$0();\n              break;\n            }\n            _this._readIndentation$0();\n          }\n        } while (t1.scan$1(\"//\"));\n      t3 = buffer._contents;\n      return _this.lastSilentComment = new B.SilentComment(t3.charCodeAt(0) == 0 ? t3 : t3, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _loudComment$0: function() {\n      var t3, t4, buffer, parentIndentation, t5, first, beginningOfComment, t6, end, i, t7, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"/*\");\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      t3._contents = \"/*\";\n      parentIndentation = _this._currentIndentation;\n      for (t5 = t1.string, first = true; true; first = false) {\n        if (first) {\n          beginningOfComment = t1._string_scanner$_position;\n          _this.spaces$0();\n          t6 = t1.peekChar$0();\n          if (t6 === 10 || t6 === 13 || t6 === 12) {\n            _this._readIndentation$0();\n            t3._contents += H.Primitives_stringFromCharCode(32);\n          } else {\n            end = t1._string_scanner$_position;\n            t3._contents += J.substring$2$s(t5, beginningOfComment, end);\n          }\n        } else {\n          t6 = t3._contents += \"\\n\";\n          t3._contents = t6 + \" * \";\n        }\n        for (i = 3; i < _this._currentIndentation - parentIndentation; ++i)\n          t3._contents += H.Primitives_stringFromCharCode(32);\n        $label0$1:\n          for (t6 = t5.length; t1._string_scanner$_position !== t6;)\n            switch (t1.peekChar$0()) {\n              case 10:\n              case 13:\n              case 12:\n                break $label0$1;\n              case 35:\n                if (t1.peekChar$1(1) === 123) {\n                  t7 = _this.singleInterpolation$0();\n                  buffer._flushText$0();\n                  t4.push(t7);\n                } else\n                  t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n              default:\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n            }\n        if (_this._peekIndentation$0() <= parentIndentation)\n          break;\n        for (; _this._lookingAtDoubleNewline$0();) {\n          _this._expectNewline$0();\n          t6 = t3._contents += \"\\n\";\n          t3._contents = t6 + \" *\";\n        }\n        _this._readIndentation$0();\n      }\n      t4 = t3._contents;\n      if (!C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), \"*/\"))\n        t3._contents += \" */\";\n      return new L.LoudComment(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))));\n    },\n    whitespaceWithoutComments$0: function() {\n      var t1, t2, next;\n      for (t1 = this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;) {\n        next = t1.peekChar$0();\n        if (next !== 9 && next !== 32)\n          break;\n        t1.readChar$0();\n      }\n    },\n    loudComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      t1.expect$1(\"/*\");\n      for (; true;) {\n        next = t1.readChar$0();\n        if (next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"expected */.\");\n        if (next !== 42)\n          continue;\n        do\n          next = t1.readChar$0();\n        while (next === 42);\n        if (next === 47)\n          break;\n      }\n    },\n    _expectNewline$0: function() {\n      var t1 = this.scanner;\n      switch (t1.peekChar$0()) {\n        case 59:\n          t1.error$1(0, string$.semico);\n          break;\n        case 13:\n          t1.readChar$0();\n          if (t1.peekChar$0() === 10)\n            t1.readChar$0();\n          return;\n        case 10:\n        case 12:\n          t1.readChar$0();\n          return;\n        default:\n          t1.error$1(0, \"expected newline.\");\n      }\n    },\n    _lookingAtDoubleNewline$0: function() {\n      var nextChar,\n        t1 = this.scanner;\n      switch (t1.peekChar$0()) {\n        case 13:\n          nextChar = t1.peekChar$1(1);\n          if (nextChar === 10)\n            return T.isNewline(t1.peekChar$1(2));\n          return nextChar === 13 || nextChar === 12;\n        case 10:\n        case 12:\n          return T.isNewline(t1.peekChar$1(1));\n        default:\n          return false;\n      }\n    },\n    _whileIndentedLower$1: function(body) {\n      var t1, t2, childIndentation, indentation, t3, t4, t5, _this = this,\n        parentIndentation = _this._currentIndentation;\n      for (t1 = _this.scanner, t2 = t1._sourceFile, childIndentation = null; _this._peekIndentation$0() > parentIndentation;) {\n        indentation = _this._readIndentation$0();\n        if (childIndentation == null)\n          childIndentation = indentation;\n        if (childIndentation != indentation) {\n          t3 = \"Inconsistent indentation, expected \" + H.S(childIndentation) + \" spaces.\";\n          t4 = t1._string_scanner$_position;\n          t5 = t2.getColumn$1(t4);\n          t1.error$3$length$position(0, t3, t2.getColumn$1(t1._string_scanner$_position), t4 - t5);\n        }\n        body.call$0();\n      }\n    },\n    _readIndentation$0: function() {\n      var _this = this;\n      if (_this._nextIndentation == null)\n        _this._peekIndentation$0();\n      _this._currentIndentation = _this._nextIndentation;\n      _this.scanner.set$state(_this._nextIndentationEnd);\n      _this._nextIndentationEnd = _this._nextIndentation = null;\n      return _this._currentIndentation;\n    },\n    _peekIndentation$0: function() {\n      var t2, t3, start, containsTab, containsSpace, next, t4, _this = this,\n        t1 = _this._nextIndentation;\n      if (t1 != null)\n        return t1;\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      t3 = t1.string.length;\n      if (t2 === t3) {\n        _this._nextIndentation = 0;\n        _this._nextIndentationEnd = new S._SpanScannerState(t1, t2);\n        return 0;\n      }\n      start = new S._SpanScannerState(t1, t2);\n      if (!_this.scanCharIf$1(T.character__isNewline$closure()))\n        t1.error$2$position(0, \"Expected newline.\", t1._string_scanner$_position);\n      do {\n        _this._nextIndentation = 0;\n        for (containsTab = false, containsSpace = false; true;) {\n          next = t1.peekChar$0();\n          if (next === 32)\n            containsSpace = true;\n          else {\n            if (next !== 9)\n              break;\n            containsTab = true;\n          }\n          _this._nextIndentation = _this._nextIndentation + 1;\n          t1.readChar$0();\n        }\n        t2 = t1._string_scanner$_position;\n        if (t2 === t3) {\n          _this._nextIndentation = 0;\n          _this._nextIndentationEnd = new S._SpanScannerState(t1, t2);\n          t1.set$state(start);\n          return 0;\n        }\n      } while (_this.scanCharIf$1(T.character__isNewline$closure()));\n      if (containsTab) {\n        if (containsSpace) {\n          t2 = t1._string_scanner$_position;\n          t3 = t1._sourceFile;\n          t4 = t3.getColumn$1(t2);\n          t1.error$3$length$position(0, \"Tabs and spaces may not be mixed.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n        } else if (_this._spaces === true) {\n          t2 = t1._string_scanner$_position;\n          t3 = t1._sourceFile;\n          t4 = t3.getColumn$1(t2);\n          t1.error$3$length$position(0, \"Expected spaces, was tabs.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n        }\n      } else if (containsSpace && _this._spaces === false) {\n        t2 = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        t4 = t3.getColumn$1(t2);\n        t1.error$3$length$position(0, \"Expected tabs, was spaces.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n      }\n      if (_this._nextIndentation > 0)\n        if (_this._spaces == null)\n          _this._spaces = containsSpace;\n      _this._nextIndentationEnd = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.set$state(start);\n      return _this._nextIndentation;\n    }\n  };\n  U.SassParser_children_closure.prototype = {\n    call$0: function() {\n      this.children.push(this.$this._child$1(this.child));\n    },\n    $signature: 0\n  };\n  L.ScssParser.prototype = {\n    get$indented: function() {\n      return false;\n    },\n    get$currentIndentation: function() {\n      return null;\n    },\n    styleRuleSelector$0: function() {\n      return this.almostAnyValue$0();\n    },\n    expectStatementSeparator$1: function($name) {\n      var t1, next;\n      this.whitespaceWithoutComments$0();\n      t1 = this.scanner;\n      if (t1._string_scanner$_position === t1.string.length)\n        return;\n      next = t1.peekChar$0();\n      if (next === 59 || next === 125)\n        return;\n      t1.expectChar$1(59);\n    },\n    expectStatementSeparator$0: function() {\n      return this.expectStatementSeparator$1(null);\n    },\n    atEndOfStatement$0: function() {\n      var next = this.scanner.peekChar$0();\n      return next == null || next === 59 || next === 125 || next === 123;\n    },\n    lookingAtChildren$0: function() {\n      return this.scanner.peekChar$0() === 123;\n    },\n    scanElse$1: function(_) {\n      var t3, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      _this.whitespace$0();\n      t3 = t1._string_scanner$_position;\n      if (t1.scanChar$1(64)) {\n        if (_this.scanIdentifier$2$caseSensitive(\"else\", true))\n          return true;\n        if (_this.scanIdentifier$2$caseSensitive(\"elseif\", true)) {\n          _this.logger.warn$3$deprecation$span(0, string$.x40elsei, true, t1.spanFrom$1(new S._SpanScannerState(t1, t3)));\n          t1.set$position(t1._string_scanner$_position - 2);\n          return true;\n        }\n      }\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      return false;\n    },\n    children$1: function(_, child) {\n      var children, _this = this,\n        t1 = _this.scanner;\n      t1.expectChar$1(123);\n      _this.whitespaceWithoutComments$0();\n      children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);\n      for (; true;)\n        switch (t1.peekChar$0()) {\n          case 36:\n            children.push(_this.variableDeclarationWithoutNamespace$0());\n            break;\n          case 47:\n            switch (t1.peekChar$1(1)) {\n              case 47:\n                children.push(_this._scss$_silentComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              case 42:\n                children.push(_this._scss$_loudComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              default:\n                children.push(child.call$0());\n                break;\n            }\n            break;\n          case 59:\n            t1.readChar$0();\n            _this.whitespaceWithoutComments$0();\n            break;\n          case 125:\n            t1.expectChar$1(125);\n            return children;\n          default:\n            children.push(child.call$0());\n            break;\n        }\n    },\n    statements$1: function(statement) {\n      var t1, t2, child, _this = this,\n        statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement);\n      _this.whitespaceWithoutComments$0();\n      for (t1 = _this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;)\n        switch (t1.peekChar$0()) {\n          case 36:\n            statements.push(_this.variableDeclarationWithoutNamespace$0());\n            break;\n          case 47:\n            switch (t1.peekChar$1(1)) {\n              case 47:\n                statements.push(_this._scss$_silentComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              case 42:\n                statements.push(_this._scss$_loudComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              default:\n                child = statement.call$0();\n                if (child != null)\n                  statements.push(child);\n                break;\n            }\n            break;\n          case 59:\n            t1.readChar$0();\n            _this.whitespaceWithoutComments$0();\n            break;\n          default:\n            child = statement.call$0();\n            if (child != null)\n              statements.push(child);\n            break;\n        }\n      return statements;\n    },\n    _scss$_silentComment$0: function() {\n      var t2, t3, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expect$1(\"//\");\n      t2 = t1.string.length;\n      do {\n        while (true) {\n          if (t1._string_scanner$_position !== t2) {\n            t3 = t1.readChar$0();\n            t3 = !(t3 === 10 || t3 === 13 || t3 === 12);\n          } else\n            t3 = false;\n          if (!t3)\n            break;\n        }\n        if (t1._string_scanner$_position === t2)\n          break;\n        _this.whitespaceWithoutComments$0();\n      } while (t1.scan$1(\"//\"));\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Silent, t1.spanFrom$1(start));\n      return _this.lastSilentComment = new B.SilentComment(t1.substring$1(0, start.position), t1.spanFrom$1(start));\n    },\n    _scss$_loudComment$0: function() {\n      var t3, t4, buffer, t5, endPosition,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"/*\");\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      t3._contents = \"/*\";\n      for (; true;)\n        switch (t1.peekChar$0()) {\n          case 35:\n            if (t1.peekChar$1(1) === 123) {\n              t5 = this.singleInterpolation$0();\n              buffer._flushText$0();\n              t4.push(t5);\n            } else\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            break;\n          case 42:\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            if (t1.peekChar$0() !== 47)\n              break;\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            endPosition = t1._string_scanner$_position;\n            t3 = t1._sourceFile;\n            t4 = new S._SpanScannerState(t1, t2).position;\n            t1 = new Y._FileSpan(t3, t4, endPosition);\n            t1._FileSpan$3(t3, t4, endPosition);\n            return new L.LoudComment(buffer.interpolation$1(t1));\n          case 13:\n            t1.readChar$0();\n            if (t1.peekChar$0() !== 10)\n              t3._contents += H.Primitives_stringFromCharCode(10);\n            break;\n          case 12:\n            t1.readChar$0();\n            t3._contents += H.Primitives_stringFromCharCode(10);\n            break;\n          default:\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            break;\n        }\n    }\n  };\n  T.SelectorParser.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new T.SelectorParser_parse_closure(this));\n    },\n    parseCompoundSelector$0: function() {\n      return this.wrapSpanFormatException$1(new T.SelectorParser_parseCompoundSelector_closure(this));\n    },\n    _selectorList$0: function() {\n      var t3, t4, lineBreak, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._sourceFile,\n        previousLine = t2.getLine$1(t1._string_scanner$_position),\n        components = H.setRuntimeTypeInfo([_this._complexSelector$0()], type$.JSArray_legacy_ComplexSelector);\n      _this.whitespace$0();\n      for (t3 = t1.string; t1.scanChar$1(44);) {\n        _this.whitespace$0();\n        if (t1.peekChar$0() === 44)\n          continue;\n        t4 = t1._string_scanner$_position;\n        if (t4 === t3.length)\n          break;\n        lineBreak = t2.getLine$1(t4) != previousLine;\n        if (lineBreak)\n          previousLine = t2.getLine$1(t1._string_scanner$_position);\n        components.push(_this._complexSelector$1$lineBreak(lineBreak));\n      }\n      return D.SelectorList$(components);\n    },\n    _complexSelector$1$lineBreak: function(lineBreak) {\n      var t1, next, _this = this,\n        _s58_ = string$.x22x26__ma,\n        components = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent);\n      $label0$1:\n        for (t1 = _this.scanner; true;) {\n          _this.whitespace$0();\n          next = t1.peekChar$0();\n          switch (next) {\n            case 43:\n              t1.readChar$0();\n              components.push(C.Combinator_uzg);\n              break;\n            case 62:\n              t1.readChar$0();\n              components.push(C.Combinator_sgq);\n              break;\n            case 126:\n              t1.readChar$0();\n              components.push(C.Combinator_CzM);\n              break;\n            case 91:\n            case 46:\n            case 35:\n            case 37:\n            case 58:\n            case 38:\n            case 42:\n            case 124:\n              components.push(_this._compoundSelector$0());\n              if (t1.peekChar$0() === 38)\n                t1.error$1(0, _s58_);\n              break;\n            default:\n              if (next == null || !_this.lookingAtIdentifier$0())\n                break $label0$1;\n              components.push(_this._compoundSelector$0());\n              if (t1.peekChar$0() === 38)\n                t1.error$1(0, _s58_);\n              break;\n          }\n        }\n      if (components.length === 0)\n        t1.error$1(0, \"expected selector.\");\n      return S.ComplexSelector$(components, lineBreak);\n    },\n    _complexSelector$0: function() {\n      return this._complexSelector$1$lineBreak(false);\n    },\n    _compoundSelector$0: function() {\n      var t2,\n        components = H.setRuntimeTypeInfo([this._simpleSelector$0()], type$.JSArray_legacy_SimpleSelector),\n        t1 = this.scanner;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 === 42 || t2 === 91 || t2 === 46 || t2 === 35 || t2 === 37 || t2 === 58))\n          break;\n        components.push(this._simpleSelector$1$allowParent(false));\n      }\n      return X.CompoundSelector$(components);\n    },\n    _simpleSelector$1$allowParent: function(allowParent) {\n      var $name, text, t2, suffix, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (allowParent == null)\n        allowParent = _this._allowParent;\n      switch (t1.peekChar$0()) {\n        case 91:\n          return _this._attributeSelector$0();\n        case 46:\n          t1.expectChar$1(46);\n          return new X.ClassSelector(_this.identifier$0());\n        case 35:\n          t1.expectChar$1(35);\n          return new N.IDSelector(_this.identifier$0());\n        case 37:\n          t1.expectChar$1(37);\n          $name = _this.identifier$0();\n          if (!_this._allowPlaceholder)\n            _this.error$2(0, string$.Placeh, t1.spanFrom$1(start));\n          return new N.PlaceholderSelector($name);\n        case 58:\n          return _this._pseudoSelector$0();\n        case 38:\n          t1.expectChar$1(38);\n          if (_this.lookingAtIdentifierBody$0()) {\n            text = new P.StringBuffer(\"\");\n            _this._identifierBody$1(text);\n            if (text._contents.length === 0)\n              t1.error$1(0, \"Expected identifier body.\");\n            t2 = text._contents;\n            suffix = t2.charCodeAt(0) == 0 ? t2 : t2;\n          } else\n            suffix = null;\n          if (!allowParent)\n            _this.error$2(0, \"Parent selectors aren't allowed here.\", t1.spanFrom$1(start));\n          return new M.ParentSelector(suffix);\n        default:\n          return _this._typeOrUniversalSelector$0();\n      }\n    },\n    _simpleSelector$0: function() {\n      return this._simpleSelector$1$allowParent(null);\n    },\n    _attributeSelector$0: function() {\n      var $name, operator, next, value, modifier, _this = this, _null = null,\n        t1 = _this.scanner;\n      t1.expectChar$1(91);\n      _this.whitespace$0();\n      $name = _this._attributeName$0();\n      _this.whitespace$0();\n      if (t1.scanChar$1(93))\n        return new N.AttributeSelector($name, _null, _null, _null);\n      operator = _this._attributeOperator$0();\n      _this.whitespace$0();\n      next = t1.peekChar$0();\n      value = next === 39 || next === 34 ? _this.string$0() : _this.identifier$0();\n      _this.whitespace$0();\n      modifier = T.isAlphabetic0(t1.peekChar$0()) ? H.Primitives_stringFromCharCode(t1.readChar$0()) : _null;\n      t1.expectChar$1(93);\n      return new N.AttributeSelector($name, operator, value, modifier);\n    },\n    _attributeName$0: function() {\n      var nameOrNamespace, _this = this,\n        t1 = _this.scanner;\n      if (t1.scanChar$1(42)) {\n        t1.expectChar$1(124);\n        return new D.QualifiedName(_this.identifier$0(), \"*\");\n      }\n      nameOrNamespace = _this.identifier$0();\n      if (t1.peekChar$0() !== 124 || t1.peekChar$1(1) === 61)\n        return new D.QualifiedName(nameOrNamespace, null);\n      t1.readChar$0();\n      return new D.QualifiedName(_this.identifier$0(), nameOrNamespace);\n    },\n    _attributeOperator$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      switch (t1.readChar$0()) {\n        case 61:\n          return C.AttributeOperator_sEs;\n        case 126:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_fz1;\n        case 124:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_AuK;\n        case 94:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_4L5;\n        case 36:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_mOX;\n        case 42:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_gqZ;\n        default:\n          t1.error$2$position(0, 'Expected \"]\".', t2);\n      }\n    },\n    _pseudoSelector$0: function() {\n      var element, $name, unvendored, selector, argument, t2, _this = this, _null = null,\n        t1 = _this.scanner;\n      t1.expectChar$1(58);\n      element = t1.scanChar$1(58);\n      $name = _this.identifier$0();\n      if (!t1.scanChar$1(40))\n        return D.PseudoSelector$($name, _null, element, _null);\n      _this.whitespace$0();\n      unvendored = B.unvendor($name);\n      if (element)\n        if ($._selectorPseudoElements.contains$1(0, unvendored)) {\n          selector = _this._selectorList$0();\n          argument = _null;\n        } else {\n          argument = _this.declarationValue$1$allowEmpty(true);\n          selector = _null;\n        }\n      else if ($._selectorPseudoClasses.contains$1(0, unvendored)) {\n        selector = _this._selectorList$0();\n        argument = _null;\n      } else if (unvendored === \"nth-child\" || unvendored === \"nth-last-child\") {\n        argument = _this._aNPlusB$0();\n        _this.whitespace$0();\n        t2 = t1.peekChar$1(-1);\n        if ((t2 === 32 || t2 === 9 || T.isNewline(t2)) && t1.peekChar$0() !== 41) {\n          _this.expectIdentifier$1(\"of\");\n          argument += \" of\";\n          _this.whitespace$0();\n          selector = _this._selectorList$0();\n        } else\n          selector = _null;\n      } else {\n        argument = C.JSString_methods.trimRight$0(_this.declarationValue$1$allowEmpty(true));\n        selector = _null;\n      }\n      t1.expectChar$1(41);\n      return D.PseudoSelector$($name, argument, element, selector);\n    },\n    _aNPlusB$0: function() {\n      var t2, first, t3, next, last, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 101:\n        case 69:\n          _this.expectIdentifier$1(\"even\");\n          return \"even\";\n        case 111:\n        case 79:\n          _this.expectIdentifier$1(\"odd\");\n          return \"odd\";\n        case 43:\n        case 45:\n          t2 = H.Primitives_stringFromCharCode(t1.readChar$0());\n          break;\n        default:\n          t2 = \"\";\n      }\n      first = t1.peekChar$0();\n      if (first != null && T.isDigit(first)) {\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n        _this.whitespace$0();\n        if (!_this.scanIdentChar$1(110))\n          return t2.charCodeAt(0) == 0 ? t2 : t2;\n      } else\n        _this.expectIdentChar$1(110);\n      t2 += H.Primitives_stringFromCharCode(110);\n      _this.whitespace$0();\n      next = t1.peekChar$0();\n      if (next !== 43 && next !== 45)\n        return t2.charCodeAt(0) == 0 ? t2 : t2;\n      t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      _this.whitespace$0();\n      last = t1.peekChar$0();\n      if (last == null || !T.isDigit(last))\n        t1.error$1(0, \"Expected a number.\");\n      while (true) {\n        t3 = t1.peekChar$0();\n        if (!(t3 != null && t3 >= 48 && t3 <= 57))\n          break;\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    },\n    _typeOrUniversalSelector$0: function() {\n      var nameOrNamespace, _this = this,\n        t1 = _this.scanner,\n        first = t1.peekChar$0();\n      if (first === 42) {\n        t1.readChar$0();\n        if (!t1.scanChar$1(124))\n          return new N.UniversalSelector(null);\n        if (t1.scanChar$1(42))\n          return new N.UniversalSelector(\"*\");\n        else\n          return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), \"*\"));\n      } else if (first === 124) {\n        t1.readChar$0();\n        if (t1.scanChar$1(42))\n          return new N.UniversalSelector(\"\");\n        else\n          return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), \"\"));\n      }\n      nameOrNamespace = _this.identifier$0();\n      if (!t1.scanChar$1(124))\n        return new F.TypeSelector(new D.QualifiedName(nameOrNamespace, null));\n      else if (t1.scanChar$1(42))\n        return new N.UniversalSelector(nameOrNamespace);\n      else\n        return new F.TypeSelector(new D.QualifiedName(_this.identifier$0(), nameOrNamespace));\n    }\n  };\n  T.SelectorParser_parse_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        selector = t1._selectorList$0();\n      t1 = t1.scanner;\n      if (t1._string_scanner$_position !== t1.string.length)\n        t1.error$1(0, \"expected selector.\");\n      return selector;\n    },\n    $signature: 40\n  };\n  T.SelectorParser_parseCompoundSelector_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        compound = t1._compoundSelector$0();\n      t1 = t1.scanner;\n      if (t1._string_scanner$_position !== t1.string.length)\n        t1.error$1(0, \"expected selector.\");\n      return compound;\n    },\n    $signature: 335\n  };\n  V.StylesheetParser.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new V.StylesheetParser_parse_closure(this));\n    },\n    parseArgumentDeclaration$0: function() {\n      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseArgumentDeclaration_closure(this), type$.legacy_ArgumentDeclaration);\n    },\n    parseVariableDeclaration$0: function() {\n      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseVariableDeclaration_closure(this), type$.legacy_VariableDeclaration);\n    },\n    parseUseRule$0: function() {\n      return this._parseSingleProduction$1$1(new V.StylesheetParser_parseUseRule_closure(this), type$.legacy_UseRule);\n    },\n    _parseSingleProduction$1$1: function(production, $T) {\n      return this.wrapSpanFormatException$1(new V.StylesheetParser__parseSingleProduction_closure(this, production, $T));\n    },\n    _statement$1$root: function(root) {\n      var t2, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 64:\n          return _this.atRule$2$root(new V.StylesheetParser__statement_closure(_this), root);\n        case 43:\n          if (!_this.get$indented() || !_this.lookingAtIdentifier$1(1))\n            return _this._stylesheet$_styleRule$0();\n          _this._isUseAllowed = false;\n          t2 = t1._string_scanner$_position;\n          t1.readChar$0();\n          return _this._includeRule$1(new S._SpanScannerState(t1, t2));\n        case 61:\n          if (!_this.get$indented())\n            return _this._stylesheet$_styleRule$0();\n          _this._isUseAllowed = false;\n          t2 = t1._string_scanner$_position;\n          t1.readChar$0();\n          _this.whitespace$0();\n          return _this._mixinRule$1(new S._SpanScannerState(t1, t2));\n        case 125:\n          t1.error$2$length(0, 'unmatched \"}\".', 1);\n          break;\n        default:\n          return _this._inStyleRule || _this._stylesheet$_inUnknownAtRule || _this._stylesheet$_inMixin || _this._inContentBlock ? _this._declarationOrStyleRule$0() : _this._variableDeclarationOrStyleRule$0();\n      }\n    },\n    _statement$0: function() {\n      return this._statement$1$root(false);\n    },\n    _variableDeclarationWithNamespace$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        namespace = this.identifier$0();\n      t1.expectChar$1(46);\n      return this.variableDeclarationWithoutNamespace$2(namespace, new S._SpanScannerState(t1, t2));\n    },\n    variableDeclarationWithoutNamespace$2: function(namespace, start) {\n      var precedingComment, t1, $name, t2, value, flagStart, guarded, global, flag, endPosition, t3, t4, t5, declaration, _this = this, _box_0 = {};\n      _box_0.start = start;\n      precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      if (start == null) {\n        t1 = _this.scanner;\n        _box_0.start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      }\n      $name = _this.variableName$0();\n      t1 = namespace != null;\n      if (t1)\n        _this._assertPublic$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure(_box_0, _this));\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Sass_v, _this.scanner.spanFrom$1(_box_0.start));\n      _this.whitespace$0();\n      t2 = _this.scanner;\n      t2.expectChar$1(58);\n      _this.whitespace$0();\n      value = _this.expression$0();\n      flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      for (guarded = false, global = false; t2.scanChar$1(33);) {\n        flag = _this.identifier$0();\n        if (flag === \"default\")\n          guarded = true;\n        else if (flag === \"global\") {\n          if (t1) {\n            endPosition = t2._string_scanner$_position;\n            t3 = t2._sourceFile;\n            t4 = flagStart.position;\n            t5 = new Y._FileSpan(t3, t4, endPosition);\n            t5._FileSpan$3(t3, t4, endPosition);\n            _this.error$2(0, string$.x21globa, t5);\n          }\n          global = true;\n        } else {\n          endPosition = t2._string_scanner$_position;\n          t3 = t2._sourceFile;\n          t4 = flagStart.position;\n          t5 = new Y._FileSpan(t3, t4, endPosition);\n          t5._FileSpan$3(t3, t4, endPosition);\n          _this.error$2(0, \"Invalid flag name.\", t5);\n        }\n        _this.whitespace$0();\n        flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      }\n      _this.expectStatementSeparator$1(\"variable declaration\");\n      declaration = Z.VariableDeclaration$($name, value, t2.spanFrom$1(_box_0.start), precedingComment, global, guarded, namespace);\n      if (global)\n        _this._globalVariables.putIfAbsent$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure0(declaration));\n      return declaration;\n    },\n    variableDeclarationWithoutNamespace$0: function() {\n      return this.variableDeclarationWithoutNamespace$2(null, null);\n    },\n    _variableDeclarationOrStyleRule$0: function() {\n      var t1, t2, variableOrInterpolation, t3, _this = this;\n      if (_this.get$plainCss())\n        return _this._stylesheet$_styleRule$0();\n      if (_this.get$indented() && _this.scanner.scanChar$1(92))\n        return _this._stylesheet$_styleRule$0();\n      if (!_this.lookingAtIdentifier$0())\n        return _this._stylesheet$_styleRule$0();\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      variableOrInterpolation = _this._variableDeclarationOrInterpolation$0();\n      if (variableOrInterpolation instanceof Z.VariableDeclaration)\n        return variableOrInterpolation;\n      else {\n        t3 = new Z.InterpolationBuffer(new P.StringBuffer(\"\"), []);\n        t3.addInterpolation$1(type$.legacy_Interpolation._as(variableOrInterpolation));\n        return _this._stylesheet$_styleRule$2(t3, new S._SpanScannerState(t1, t2));\n      }\n    },\n    _declarationOrStyleRule$0: function() {\n      var t1, t2, declarationOrBuffer, _this = this;\n      if (_this.get$plainCss() && _this._inStyleRule && !_this._stylesheet$_inUnknownAtRule)\n        return _this._propertyOrVariableDeclaration$0();\n      if (_this.get$indented() && _this.scanner.scanChar$1(92))\n        return _this._stylesheet$_styleRule$0();\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      declarationOrBuffer = _this._declarationOrBuffer$0();\n      return type$.legacy_Statement._is(declarationOrBuffer) ? declarationOrBuffer : _this._stylesheet$_styleRule$2(type$.legacy_InterpolationBuffer._as(declarationOrBuffer), new S._SpanScannerState(t1, t2));\n    },\n    _declarationOrBuffer$0: function() {\n      var midBuffer, couldBeSelector, beforeDeclaration, additional, t3, startsWithPunctuation, variableOrInterpolation, t4, $name, postColonWhitespace, t5, value, exception, _this = this, t1 = {},\n        t2 = _this.scanner,\n        start = new S._SpanScannerState(t2, t2._string_scanner$_position),\n        nameBuffer = new Z.InterpolationBuffer(new P.StringBuffer(\"\"), []),\n        first = t2.peekChar$0();\n      if (first !== 58)\n        if (first !== 42)\n          if (first !== 46)\n            t3 = first === 35 && t2.peekChar$1(1) !== 123;\n          else\n            t3 = true;\n        else\n          t3 = true;\n      else\n        t3 = true;\n      if (t3) {\n        t3 = t2.readChar$0();\n        nameBuffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(t3);\n        t3 = _this.rawText$1(_this.get$whitespace());\n        nameBuffer._interpolation_buffer$_text._contents += t3;\n        startsWithPunctuation = true;\n      } else\n        startsWithPunctuation = false;\n      if (!_this._lookingAtInterpolatedIdentifier$0())\n        return nameBuffer;\n      variableOrInterpolation = startsWithPunctuation ? _this.interpolatedIdentifier$0() : _this._variableDeclarationOrInterpolation$0();\n      if (variableOrInterpolation instanceof Z.VariableDeclaration)\n        return variableOrInterpolation;\n      else\n        nameBuffer.addInterpolation$1(type$.legacy_Interpolation._as(variableOrInterpolation));\n      _this._isUseAllowed = false;\n      if (t2.matches$1(\"/*\")) {\n        t3 = _this.rawText$1(_this.get$loudComment());\n        nameBuffer._interpolation_buffer$_text._contents += t3;\n      }\n      midBuffer = new P.StringBuffer(\"\");\n      t3 = _this.get$whitespace();\n      midBuffer._contents += _this.rawText$1(t3);\n      t4 = t2._string_scanner$_position;\n      if (!t2.scanChar$1(58)) {\n        if (midBuffer._contents.length !== 0)\n          nameBuffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(32);\n        return nameBuffer;\n      }\n      midBuffer._contents += H.Primitives_stringFromCharCode(58);\n      $name = nameBuffer.interpolation$1(t2.spanFrom$2(start, new S._SpanScannerState(t2, t4)));\n      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), \"--\")) {\n        t1 = _this._interpolatedDeclarationValue$0();\n        _this.expectStatementSeparator$1(\"custom property\");\n        return L.Declaration$($name, t2.spanFrom$1(start), null, new D.StringExpression(t1, false));\n      }\n      if (t2.scanChar$1(58)) {\n        t1 = nameBuffer;\n        t2 = t1._interpolation_buffer$_text;\n        t2._contents += H.S(midBuffer);\n        t2._contents += H.Primitives_stringFromCharCode(58);\n        return t1;\n      } else if (_this.get$indented() && _this._lookingAtInterpolatedIdentifier$0()) {\n        t1 = nameBuffer;\n        t1._interpolation_buffer$_text._contents += H.S(midBuffer);\n        return t1;\n      }\n      postColonWhitespace = _this.rawText$1(t3);\n      if (_this.lookingAtChildren$0())\n        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure($name));\n      midBuffer._contents += postColonWhitespace;\n      couldBeSelector = postColonWhitespace.length === 0 && _this._lookingAtInterpolatedIdentifier$0();\n      beforeDeclaration = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      t1.value = null;\n      try {\n        if (_this.lookingAtChildren$0()) {\n          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n          t4 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n          t5 = t4.offset;\n          value = new D.StringExpression(X.Interpolation$(t3, Y._FileSpan$(t4.file, t5, t5)), true);\n        } else\n          value = _this.expression$0();\n        t3 = t1.value = value;\n        if (_this.lookingAtChildren$0()) {\n          if (couldBeSelector)\n            _this.expectStatementSeparator$0();\n        } else if (!_this.atEndOfStatement$0())\n          _this.expectStatementSeparator$0();\n      } catch (exception) {\n        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {\n          if (!couldBeSelector)\n            throw exception;\n          t2.set$state(beforeDeclaration);\n          additional = _this.almostAnyValue$0();\n          if (!_this.get$indented() && t2.peekChar$0() === 59)\n            throw exception;\n          nameBuffer._interpolation_buffer$_text._contents += H.S(midBuffer);\n          nameBuffer.addInterpolation$1(additional);\n          return nameBuffer;\n        } else\n          throw exception;\n      }\n      if (_this.lookingAtChildren$0())\n        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure0(t1, $name));\n      else {\n        _this.expectStatementSeparator$0();\n        return L.Declaration$($name, t2.spanFrom$1(start), null, t3);\n      }\n    },\n    _variableDeclarationOrInterpolation$0: function() {\n      var t1, start, identifier, t2, buffer, _this = this;\n      if (!_this.lookingAtIdentifier$0())\n        return _this.interpolatedIdentifier$0();\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      identifier = _this.identifier$0();\n      if (t1.matches$1(\".$\")) {\n        t1.readChar$0();\n        return _this.variableDeclarationWithoutNamespace$2(identifier, start);\n      } else {\n        t2 = new P.StringBuffer(\"\");\n        buffer = new Z.InterpolationBuffer(t2, []);\n        t2._contents = identifier;\n        if (_this._lookingAtInterpolatedIdentifierBody$0())\n          buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        return buffer.interpolation$1(t1.spanFrom$1(start));\n      }\n    },\n    _stylesheet$_styleRule$2: function(buffer, start) {\n      var t2, interpolation, t3, wasInStyleRule, _this = this, t1 = {};\n      t1.start = start;\n      _this._isUseAllowed = false;\n      if (start == null) {\n        t2 = _this.scanner;\n        t2 = t1.start = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      } else\n        t2 = start;\n      interpolation = t1.interpolation = _this.styleRuleSelector$0();\n      if (buffer != null) {\n        buffer.addInterpolation$1(interpolation);\n        t3 = t1.interpolation = buffer.interpolation$1(_this.scanner.spanFrom$1(t2));\n      } else\n        t3 = interpolation;\n      if (t3.contents.length === 0)\n        _this.scanner.error$1(0, 'expected \"}\".');\n      wasInStyleRule = _this._inStyleRule;\n      _this._inStyleRule = true;\n      return _this._withChildren$3(_this.get$_statement(), t2, new V.StylesheetParser__styleRule_closure(t1, _this, wasInStyleRule));\n    },\n    _stylesheet$_styleRule$0: function() {\n      return this._stylesheet$_styleRule$2(null, null);\n    },\n    _propertyOrVariableDeclaration$1$parseCustomProperties: function(parseCustomProperties) {\n      var first, t3, nameBuffer, variableOrInterpolation, $name, value, _this = this,\n        _s48_ = string$.Nested,\n        t1 = {},\n        t2 = _this.scanner,\n        start = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      t1.name = null;\n      first = t2.peekChar$0();\n      if (first !== 58)\n        if (first !== 42)\n          if (first !== 46)\n            t3 = first === 35 && t2.peekChar$1(1) !== 123;\n          else\n            t3 = true;\n        else\n          t3 = true;\n      else\n        t3 = true;\n      if (t3) {\n        t3 = new P.StringBuffer(\"\");\n        nameBuffer = new Z.InterpolationBuffer(t3, []);\n        t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());\n        t3._contents += _this.rawText$1(_this.get$whitespace());\n        nameBuffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        t3 = t1.name = nameBuffer.interpolation$1(t2.spanFrom$1(start));\n      } else if (!_this.get$plainCss()) {\n        variableOrInterpolation = _this._variableDeclarationOrInterpolation$0();\n        if (variableOrInterpolation instanceof Z.VariableDeclaration)\n          return variableOrInterpolation;\n        else {\n          type$.legacy_Interpolation._as(variableOrInterpolation);\n          t1.name = variableOrInterpolation;\n        }\n        t3 = variableOrInterpolation;\n      } else {\n        $name = _this.interpolatedIdentifier$0();\n        t1.name = $name;\n        t3 = $name;\n      }\n      _this.whitespace$0();\n      t2.expectChar$1(58);\n      if (parseCustomProperties && C.JSString_methods.startsWith$1(t3.get$initialPlain(), \"--\")) {\n        t1 = _this._interpolatedDeclarationValue$0();\n        _this.expectStatementSeparator$1(\"custom property\");\n        return L.Declaration$(t3, t2.spanFrom$1(start), null, new D.StringExpression(t1, false));\n      }\n      _this.whitespace$0();\n      if (_this.lookingAtChildren$0()) {\n        if (_this.get$plainCss())\n          t2.error$1(0, _s48_);\n        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure(t1));\n      }\n      value = _this.expression$0();\n      if (_this.lookingAtChildren$0()) {\n        if (_this.get$plainCss())\n          t2.error$1(0, _s48_);\n        return _this._withChildren$3(_this.get$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure0(t1, value));\n      } else {\n        _this.expectStatementSeparator$0();\n        return L.Declaration$(t3, t2.spanFrom$1(start), null, value);\n      }\n    },\n    _propertyOrVariableDeclaration$0: function() {\n      return this._propertyOrVariableDeclaration$1$parseCustomProperties(true);\n    },\n    _declarationChild$0: function() {\n      if (this.scanner.peekChar$0() === 64)\n        return this._declarationAtRule$0();\n      return this._propertyOrVariableDeclaration$1$parseCustomProperties(false);\n    },\n    atRule$2$root: function(child, root) {\n      var $name, wasUseAllowed, value, optional, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$2$name(64, \"@-rule\");\n      $name = _this.interpolatedIdentifier$0();\n      _this.whitespace$0();\n      wasUseAllowed = _this._isUseAllowed;\n      _this._isUseAllowed = false;\n      switch ($name.get$asPlain()) {\n        case \"at-root\":\n          return _this._atRootRule$1(start);\n        case \"charset\":\n          _this._isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._disallowedAtRule$1(start);\n          _this.string$0();\n          return null;\n        case \"content\":\n          return _this._contentRule$1(start);\n        case \"debug\":\n          return _this._debugRule$1(start);\n        case \"each\":\n          return _this._eachRule$2(start, child);\n        case \"else\":\n          return _this._disallowedAtRule$1(start);\n        case \"error\":\n          return _this._errorRule$1(start);\n        case \"extend\":\n          if (!_this._inStyleRule && !_this._stylesheet$_inMixin && !_this._inContentBlock)\n            _this.error$2(0, string$.x40exten, t1.spanFrom$1(start));\n          value = _this.almostAnyValue$0();\n          optional = t1.scanChar$1(33);\n          if (optional)\n            _this.expectIdentifier$1(\"optional\");\n          _this.expectStatementSeparator$1(\"@extend rule\");\n          return new X.ExtendRule(value, optional, t1.spanFrom$1(start));\n        case \"for\":\n          return _this._forRule$2(start, child);\n        case \"forward\":\n          _this._isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._disallowedAtRule$1(start);\n          return _this._forwardRule$1(start);\n        case \"function\":\n          return _this._functionRule$1(start);\n        case \"if\":\n          return _this._ifRule$2(start, child);\n        case \"import\":\n          return _this._importRule$1(start);\n        case \"include\":\n          return _this._includeRule$1(start);\n        case \"media\":\n          return _this.mediaRule$1(start);\n        case \"mixin\":\n          return _this._mixinRule$1(start);\n        case \"-moz-document\":\n          return _this.mozDocumentRule$2(start, $name);\n        case \"return\":\n          return _this._disallowedAtRule$1(start);\n        case \"supports\":\n          return _this.supportsRule$1(start);\n        case \"use\":\n          _this._isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._disallowedAtRule$1(start);\n          return _this._useRule$1(start);\n        case \"warn\":\n          return _this._warnRule$1(start);\n        case \"while\":\n          return _this._whileRule$2(start, child);\n        default:\n          return _this.unknownAtRule$2(start, $name);\n      }\n    },\n    _declarationAtRule$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      switch (_this._plainAtRuleName$0()) {\n        case \"content\":\n          return _this._contentRule$1(start);\n        case \"debug\":\n          return _this._debugRule$1(start);\n        case \"each\":\n          return _this._eachRule$2(start, _this.get$_declarationChild());\n        case \"else\":\n          return _this._disallowedAtRule$1(start);\n        case \"error\":\n          return _this._errorRule$1(start);\n        case \"for\":\n          return _this._forRule$2(start, _this.get$_declarationAtRule());\n        case \"if\":\n          return _this._ifRule$2(start, _this.get$_declarationChild());\n        case \"include\":\n          return _this._includeRule$1(start);\n        case \"warn\":\n          return _this._warnRule$1(start);\n        case \"while\":\n          return _this._whileRule$2(start, _this.get$_declarationChild());\n        default:\n          return _this._disallowedAtRule$1(start);\n      }\n    },\n    _functionChild$0: function() {\n      var state, variableDeclarationError, statement, t2, exception, t3, start, value, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() !== 64) {\n        state = new S._SpanScannerState(t1, t1._string_scanner$_position);\n        try {\n          t2 = _this._variableDeclarationWithNamespace$0();\n          return t2;\n        } catch (exception) {\n          t2 = H.unwrapException(exception);\n          t3 = type$.legacy_SourceSpanFormatException;\n          if (t3._is(t2)) {\n            variableDeclarationError = t2;\n            t1.set$state(state);\n            statement = null;\n            try {\n              statement = _this._declarationOrStyleRule$0();\n            } catch (exception) {\n              if (t3._is(H.unwrapException(exception)))\n                throw H.wrapException(variableDeclarationError);\n              else\n                throw exception;\n            }\n            _this.error$2(0, \"@function rules may not contain \" + (statement instanceof X.StyleRule ? \"style rules\" : \"declarations\") + \".\", statement.get$span());\n          } else\n            throw exception;\n        }\n      }\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      switch (_this._plainAtRuleName$0()) {\n        case \"debug\":\n          return _this._debugRule$1(start);\n        case \"each\":\n          return _this._eachRule$2(start, _this.get$_functionChild());\n        case \"else\":\n          return _this._disallowedAtRule$1(start);\n        case \"error\":\n          return _this._errorRule$1(start);\n        case \"for\":\n          return _this._forRule$2(start, _this.get$_functionChild());\n        case \"if\":\n          return _this._ifRule$2(start, _this.get$_functionChild());\n        case \"return\":\n          value = _this.expression$0();\n          _this.expectStatementSeparator$1(\"@return rule\");\n          return new B.ReturnRule(value, t1.spanFrom$1(start));\n        case \"warn\":\n          return _this._warnRule$1(start);\n        case \"while\":\n          return _this._whileRule$2(start, _this.get$_functionChild());\n        default:\n          return _this._disallowedAtRule$1(start);\n      }\n    },\n    _plainAtRuleName$0: function() {\n      this.scanner.expectChar$2$name(64, \"@-rule\");\n      var $name = this.identifier$0();\n      this.whitespace$0();\n      return $name;\n    },\n    _atRootRule$1: function(start) {\n      var query, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 40) {\n        query = _this._atRootQuery$0();\n        _this.whitespace$0();\n        return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__atRootRule_closure(query));\n      } else if (_this.lookingAtChildren$0())\n        return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__atRootRule_closure0());\n      else\n        return V.AtRootRule$(H.setRuntimeTypeInfo([_this._stylesheet$_styleRule$0()], type$.JSArray_legacy_Statement), t1.spanFrom$1(start), null);\n    },\n    _atRootQuery$0: function() {\n      var interpolation, t2, t3, t4, buffer, t5, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 35) {\n        interpolation = _this.singleInterpolation$0();\n        return X.Interpolation$(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());\n      }\n      t2 = t1._string_scanner$_position;\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      t1.expectChar$1(40);\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      _this.whitespace$0();\n      t5 = _this.expression$0();\n      buffer._flushText$0();\n      t4.push(t5);\n      if (t1.scanChar$1(58)) {\n        _this.whitespace$0();\n        t3._contents += H.Primitives_stringFromCharCode(58);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n        t5 = _this.expression$0();\n        buffer._flushText$0();\n        t4.push(t5);\n      }\n      t1.expectChar$1(41);\n      _this.whitespace$0();\n      t3._contents += H.Primitives_stringFromCharCode(41);\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _contentRule$1: function(start) {\n      var t1, $arguments, t2, t3, _this = this;\n      if (!_this._stylesheet$_inMixin)\n        _this.error$2(0, string$.x40conte, _this.scanner.spanFrom$1(start));\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      if (t1.peekChar$0() === 40)\n        $arguments = _this._argumentInvocation$1$mixin(true);\n      else {\n        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);\n        t3 = t2.offset;\n        $arguments = X.ArgumentInvocation$empty(Y._FileSpan$(t2.file, t3, t3));\n      }\n      _this._mixinHasContent = true;\n      _this.expectStatementSeparator$1(\"@content rule\");\n      return new Q.ContentRule(t1.spanFrom$1(start), $arguments);\n    },\n    _debugRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@debug rule\");\n      return new Q.DebugRule(value, this.scanner.spanFrom$1(start));\n    },\n    _eachRule$2: function(start, child) {\n      var variables, t1, _this = this,\n        wasInControlDirective = _this._inControlDirective;\n      _this._inControlDirective = true;\n      variables = H.setRuntimeTypeInfo([_this.variableName$0()], type$.JSArray_legacy_String);\n      _this.whitespace$0();\n      for (t1 = _this.scanner; t1.scanChar$1(44);) {\n        _this.whitespace$0();\n        t1.expectChar$1(36);\n        variables.push(_this.identifier$1$normalize(true));\n        _this.whitespace$0();\n      }\n      _this.expectIdentifier$1(\"in\");\n      _this.whitespace$0();\n      return _this._withChildren$3(child, start, new V.StylesheetParser__eachRule_closure(_this, wasInControlDirective, variables, _this.expression$0()));\n    },\n    _errorRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@error rule\");\n      return new D.ErrorRule(value, this.scanner.spanFrom$1(start));\n    },\n    _functionRule$1: function(start) {\n      var $name, $arguments, _this = this,\n        precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      $name = _this.identifier$1$normalize(true);\n      _this.whitespace$0();\n      $arguments = _this._argumentDeclaration$0();\n      if (_this._stylesheet$_inMixin || _this._inContentBlock)\n        _this.error$2(0, string$.Mixinscf, _this.scanner.spanFrom$1(start));\n      else if (_this._inControlDirective)\n        _this.error$2(0, string$.Functi, _this.scanner.spanFrom$1(start));\n      switch (B.unvendor($name)) {\n        case \"calc\":\n        case \"element\":\n        case \"expression\":\n        case \"url\":\n        case \"and\":\n        case \"or\":\n        case \"not\":\n          _this.error$2(0, \"Invalid function name.\", _this.scanner.spanFrom$1(start));\n          break;\n      }\n      _this.whitespace$0();\n      return _this._withChildren$3(_this.get$_functionChild(), start, new V.StylesheetParser__functionRule_closure($name, $arguments, precedingComment));\n    },\n    _forRule$2: function(start, child) {\n      var variable, from, _this = this, t1 = {},\n        wasInControlDirective = _this._inControlDirective;\n      _this._inControlDirective = true;\n      variable = _this.variableName$0();\n      _this.whitespace$0();\n      _this.expectIdentifier$1(\"from\");\n      _this.whitespace$0();\n      t1.exclusive = null;\n      from = _this.expression$1$until(new V.StylesheetParser__forRule_closure(t1, _this));\n      if (t1.exclusive == null)\n        _this.scanner.error$1(0, 'Expected \"to\" or \"through\".');\n      _this.whitespace$0();\n      return _this._withChildren$3(child, start, new V.StylesheetParser__forRule_closure0(t1, _this, wasInControlDirective, variable, from, _this.expression$0()));\n    },\n    _forwardRule$1: function(start) {\n      var prefix, members, shownMixinsAndFunctions, shownVariables, hiddenVariables, hiddenMixinsAndFunctions, configuration, span, t1, t2, t3, t4, _this = this, _null = null,\n        url = _this._urlString$0();\n      _this.whitespace$0();\n      if (_this.scanIdentifier$1(\"as\")) {\n        _this.whitespace$0();\n        prefix = _this.identifier$1$normalize(true);\n        _this.scanner.expectChar$1(42);\n        _this.whitespace$0();\n      } else\n        prefix = _null;\n      if (_this.scanIdentifier$1(\"show\")) {\n        members = _this._memberList$0();\n        shownMixinsAndFunctions = members.item1;\n        shownVariables = members.item2;\n        hiddenVariables = _null;\n        hiddenMixinsAndFunctions = hiddenVariables;\n      } else {\n        if (_this.scanIdentifier$1(\"hide\")) {\n          members = _this._memberList$0();\n          hiddenMixinsAndFunctions = members.item1;\n          hiddenVariables = members.item2;\n        } else {\n          hiddenVariables = _null;\n          hiddenMixinsAndFunctions = hiddenVariables;\n        }\n        shownVariables = _null;\n        shownMixinsAndFunctions = shownVariables;\n      }\n      configuration = _this._stylesheet$_configuration$1$allowGuarded(true);\n      _this.expectStatementSeparator$1(\"@forward rule\");\n      span = _this.scanner.spanFrom$1(start);\n      if (!_this._isUseAllowed)\n        _this.error$2(0, string$.x40forwa, span);\n      if (shownMixinsAndFunctions != null) {\n        t1 = type$.legacy_String;\n        t2 = P.LinkedHashSet_LinkedHashSet$of(shownMixinsAndFunctions, t1);\n        t3 = type$.UnmodifiableSetView_legacy_String;\n        t1 = P.LinkedHashSet_LinkedHashSet$of(shownVariables, t1);\n        t4 = configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable);\n        return new L.ForwardRule(url, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), _null, _null, prefix, t4, span);\n      } else if (hiddenMixinsAndFunctions != null) {\n        t1 = type$.legacy_String;\n        t2 = P.LinkedHashSet_LinkedHashSet$of(hiddenMixinsAndFunctions, t1);\n        t3 = type$.UnmodifiableSetView_legacy_String;\n        t1 = P.LinkedHashSet_LinkedHashSet$of(hiddenVariables, t1);\n        t4 = configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable);\n        return new L.ForwardRule(url, _null, _null, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), prefix, t4, span);\n      } else\n        return new L.ForwardRule(url, _null, _null, _null, _null, prefix, configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable), span);\n    },\n    _memberList$0: function() {\n      var _this = this,\n        t1 = type$.legacy_String,\n        identifiers = P.LinkedHashSet_LinkedHashSet$_empty(t1),\n        variables = P.LinkedHashSet_LinkedHashSet$_empty(t1);\n      t1 = _this.scanner;\n      do {\n        _this.whitespace$0();\n        _this.withErrorMessage$2(string$.Expect, new V.StylesheetParser__memberList_closure(_this, variables, identifiers));\n        _this.whitespace$0();\n      } while (t1.scanChar$1(44));\n      return new S.Tuple2(identifiers, variables, type$.Tuple2_of_legacy_Set_legacy_String_and_legacy_Set_legacy_String);\n    },\n    _ifRule$2: function(start, child) {\n      var condition, children, clauses, lastClause, span, _this = this,\n        ifIndentation = _this.get$currentIndentation(),\n        wasInControlDirective = _this._inControlDirective;\n      _this._inControlDirective = true;\n      condition = _this.expression$0();\n      children = _this.children$1(0, child);\n      _this.whitespaceWithoutComments$0();\n      clauses = H.setRuntimeTypeInfo([V.IfClause$(condition, children)], type$.JSArray_legacy_IfClause);\n      while (true) {\n        if (!_this.scanElse$1(ifIndentation)) {\n          lastClause = null;\n          break;\n        }\n        _this.whitespace$0();\n        if (_this.scanIdentifier$1(\"if\")) {\n          _this.whitespace$0();\n          clauses.push(V.IfClause$(_this.expression$0(), _this.children$1(0, child)));\n        } else {\n          lastClause = V.IfClause$last(_this.children$1(0, child));\n          break;\n        }\n      }\n      _this._inControlDirective = wasInControlDirective;\n      span = _this.scanner.spanFrom$1(start);\n      _this.whitespaceWithoutComments$0();\n      return new V.IfRule(P.List_List$unmodifiable(clauses, type$.legacy_IfClause), lastClause, span);\n    },\n    _importRule$1: function(start) {\n      var argument, _this = this,\n        imports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Import),\n        t1 = _this.scanner;\n      do {\n        _this.whitespace$0();\n        argument = _this.importArgument$0();\n        if ((_this._inControlDirective || _this._stylesheet$_inMixin) && argument instanceof B.DynamicImport)\n          _this._disallowedAtRule$1(start);\n        imports.push(argument);\n        _this.whitespace$0();\n      } while (t1.scanChar$1(44));\n      _this.expectStatementSeparator$1(\"@import rule\");\n      t1 = t1.spanFrom$1(start);\n      return new B.ImportRule(P.List_List$unmodifiable(imports, type$.legacy_Import), t1);\n    },\n    importArgument$0: function() {\n      var url, urlSpan, innerError, queries, t2, t3, t4, exception, _this = this, _null = null,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        next = t1.peekChar$0();\n      if (next === 117 || next === 85) {\n        url = _this.dynamicUrl$0();\n        _this.whitespace$0();\n        queries = _this.tryImportQueries$0();\n        t2 = X.Interpolation$(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), t1.spanFrom$1(start));\n        t1 = t1.spanFrom$1(start);\n        t3 = queries == null;\n        t4 = t3 ? _null : queries.item1;\n        return new Q.StaticImport(t2, t4, t3 ? _null : queries.item2, t1);\n      }\n      url = _this.string$0();\n      urlSpan = t1.spanFrom$1(start);\n      _this.whitespace$0();\n      queries = _this.tryImportQueries$0();\n      if (_this.isPlainImportUrl$1(url) || queries != null) {\n        t2 = urlSpan;\n        t2 = X.Interpolation$(H.setRuntimeTypeInfo([P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, _null)], type$.JSArray_legacy_Object), urlSpan);\n        t1 = t1.spanFrom$1(start);\n        t3 = queries == null;\n        t4 = t3 ? _null : queries.item1;\n        return new Q.StaticImport(t2, t4, t3 ? _null : queries.item2, t1);\n      } else\n        try {\n          t1 = _this.parseImportUrl$1(url);\n          return new B.DynamicImport(t1, urlSpan);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (type$.legacy_FormatException._is(t1)) {\n            innerError = t1;\n            _this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), urlSpan);\n          } else\n            throw exception;\n        }\n    },\n    parseImportUrl$1: function(url) {\n      var t1 = $.$get$windows();\n      if (t1.style.rootLength$1(url) > 0)\n        return t1.toUri$1(url).toString$0(0);\n      P.Uri_parse(url);\n      return url;\n    },\n    isPlainImportUrl$1: function(url) {\n      var first;\n      if (url.length < 5)\n        return false;\n      if (C.JSString_methods.endsWith$1(url, \".css\"))\n        return true;\n      first = C.JSString_methods._codeUnitAt$1(url, 0);\n      if (first === 47)\n        return C.JSString_methods._codeUnitAt$1(url, 1) === 47;\n      if (first !== 104)\n        return false;\n      return C.JSString_methods.startsWith$1(url, \"http://\") || C.JSString_methods.startsWith$1(url, \"https://\");\n    },\n    tryImportQueries$0: function() {\n      var t1, start, supports, $name, media, _this = this;\n      if (_this.scanIdentifier$1(\"supports\")) {\n        t1 = _this.scanner;\n        t1.expectChar$1(40);\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n        if (_this.scanIdentifier$1(\"not\")) {\n          _this.whitespace$0();\n          supports = new M.SupportsNegation(_this._supportsConditionInParens$0(), t1.spanFrom$1(start));\n        } else if (t1.peekChar$0() === 40)\n          supports = _this._supportsCondition$0();\n        else {\n          $name = _this.expression$0();\n          t1.expectChar$1(58);\n          _this.whitespace$0();\n          supports = new L.SupportsDeclaration($name, _this.expression$0(), t1.spanFrom$1(start));\n        }\n        t1.expectChar$1(41);\n        _this.whitespace$0();\n      } else\n        supports = null;\n      media = _this._lookingAtInterpolatedIdentifier$0() || _this.scanner.peekChar$0() === 40 ? _this._mediaQueryList$0() : null;\n      if (supports == null && media == null)\n        return null;\n      return new S.Tuple2(supports, media, type$.Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation);\n    },\n    _includeRule$1: function(start) {\n      var name0, namespace, $arguments, t3, t4, wasInContentBlock, $content, _this = this, _null = null, t1 = {},\n        $name = _this.identifier$0(),\n        t2 = _this.scanner;\n      if (t2.scanChar$1(46)) {\n        name0 = _this._publicIdentifier$0();\n        namespace = $name;\n        $name = name0;\n      } else {\n        $name = H.stringReplaceAllUnchecked($name, \"_\", \"-\");\n        namespace = _null;\n      }\n      _this.whitespace$0();\n      if (t2.peekChar$0() === 40)\n        $arguments = _this._argumentInvocation$1$mixin(true);\n      else {\n        t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n        t4 = t3.offset;\n        $arguments = X.ArgumentInvocation$empty(Y._FileSpan$(t3.file, t4, t4));\n      }\n      _this.whitespace$0();\n      t1.contentArguments = null;\n      if (_this.scanIdentifier$1(\"using\")) {\n        _this.whitespace$0();\n        t3 = t1.contentArguments = _this._argumentDeclaration$0();\n        _this.whitespace$0();\n      } else\n        t3 = _null;\n      t3 = t3 == null;\n      if (!t3 || _this.lookingAtChildren$0()) {\n        if (t3) {\n          t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n          t4 = t3.offset;\n          t1.contentArguments = new B.ArgumentDeclaration(C.List_empty8, _null, Y._FileSpan$(t3.file, t4, t4));\n        }\n        wasInContentBlock = _this._inContentBlock;\n        _this._inContentBlock = true;\n        $content = _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__includeRule_closure(t1));\n        _this._inContentBlock = wasInContentBlock;\n      } else {\n        _this.expectStatementSeparator$0();\n        $content = _null;\n      }\n      t1 = t2.spanFrom$2(start, start);\n      return new A.IncludeRule(namespace, $name, $arguments, $content, t1.expand$1(0, ($content == null ? $arguments : $content).get$span()));\n    },\n    mediaRule$1: function(start) {\n      return this._withChildren$3(this.get$_statement(), start, new V.StylesheetParser_mediaRule_closure(this._mediaQueryList$0()));\n    },\n    _mixinRule$1: function(start) {\n      var $name, t1, $arguments, t2, t3, _this = this,\n        precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      $name = _this.identifier$1$normalize(true);\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      if (t1.peekChar$0() === 40)\n        $arguments = _this._argumentDeclaration$0();\n      else {\n        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);\n        t3 = t2.offset;\n        $arguments = new B.ArgumentDeclaration(C.List_empty8, null, Y._FileSpan$(t2.file, t3, t3));\n      }\n      if (_this._stylesheet$_inMixin || _this._inContentBlock)\n        _this.error$2(0, string$.Mixinscm, t1.spanFrom$1(start));\n      else if (_this._inControlDirective)\n        _this.error$2(0, string$.Mixinsb, t1.spanFrom$1(start));\n      _this.whitespace$0();\n      _this._stylesheet$_inMixin = true;\n      _this._mixinHasContent = false;\n      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser__mixinRule_closure(_this, $name, $arguments, precedingComment));\n    },\n    mozDocumentRule$2: function(start, $name) {\n      var t5, t6, identifier, contents, argument, trailing, endPosition, t7, t8, start0, end, _this = this, _box_0 = {},\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        t4 = [],\n        buffer = new Z.InterpolationBuffer(t3, t4);\n      _box_0.needsDeprecationWarning = false;\n      for (t5 = _this.get$whitespace(); true;) {\n        if (t1.peekChar$0() === 35) {\n          t6 = _this.singleInterpolation$0();\n          buffer._flushText$0();\n          t4.push(t6);\n          _box_0.needsDeprecationWarning = true;\n        } else {\n          t6 = t1._string_scanner$_position;\n          identifier = _this.identifier$0();\n          switch (identifier) {\n            case \"url\":\n            case \"url-prefix\":\n            case \"domain\":\n              contents = _this._tryUrlContents$2$name(new S._SpanScannerState(t1, t6), identifier);\n              if (contents != null)\n                buffer.addInterpolation$1(contents);\n              else {\n                t1.expectChar$1(40);\n                _this.whitespace$0();\n                argument = _this.interpolatedString$0();\n                t1.expectChar$1(41);\n                t3._contents += identifier;\n                t3._contents += H.Primitives_stringFromCharCode(40);\n                buffer.addInterpolation$1(argument.asInterpolation$0());\n                t3._contents += H.Primitives_stringFromCharCode(41);\n              }\n              t6 = t3._contents;\n              trailing = t6.charCodeAt(0) == 0 ? t6 : t6;\n              if (!C.JSString_methods.endsWith$1(trailing, \"url-prefix()\") && !C.JSString_methods.endsWith$1(trailing, \"url-prefix('')\") && !C.JSString_methods.endsWith$1(trailing, 'url-prefix(\"\")'))\n                _box_0.needsDeprecationWarning = true;\n              break;\n            case \"regexp\":\n              t3._contents += \"regexp(\";\n              t1.expectChar$1(40);\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              t1.expectChar$1(41);\n              t3._contents += H.Primitives_stringFromCharCode(41);\n              _box_0.needsDeprecationWarning = true;\n              break;\n            default:\n              endPosition = t1._string_scanner$_position;\n              t7 = t1._sourceFile;\n              t8 = new Y._FileSpan(t7, t6, endPosition);\n              t8._FileSpan$3(t7, t6, endPosition);\n              _this.error$2(0, \"Invalid function name.\", t8);\n          }\n        }\n        _this.whitespace$0();\n        if (!t1.scanChar$1(44))\n          break;\n        t3._contents += H.Primitives_stringFromCharCode(44);\n        start0 = t1._string_scanner$_position;\n        t5.call$0();\n        end = t1._string_scanner$_position;\n        t3._contents += J.substring$2$s(t1.string, start0, end);\n      }\n      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_mozDocumentRule_closure(_box_0, _this, $name, buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)))));\n    },\n    supportsRule$1: function(start) {\n      var _this = this,\n        condition = _this._supportsCondition$0();\n      _this.whitespace$0();\n      return _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_supportsRule_closure(condition));\n    },\n    _useRule$1: function(start) {\n      var namespace, configuration, span, t1, _this = this,\n        _s9_ = \"@use rule\",\n        url = _this._urlString$0();\n      _this.whitespace$0();\n      namespace = _this._useNamespace$2(url, start);\n      _this.whitespace$0();\n      configuration = _this._stylesheet$_configuration$0();\n      _this.expectStatementSeparator$1(_s9_);\n      span = _this.scanner.spanFrom$1(start);\n      if (!_this._isUseAllowed)\n        _this.error$2(0, string$.x40use_r, span);\n      _this.expectStatementSeparator$1(_s9_);\n      t1 = new T.UseRule(url, namespace, configuration == null ? C.List_empty6 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable), span);\n      t1.UseRule$4$configuration(url, namespace, span, configuration);\n      return t1;\n    },\n    _useNamespace$2: function(url, start) {\n      var namespace, basename, dot, t1, exception, _this = this;\n      if (_this.scanIdentifier$1(\"as\")) {\n        _this.whitespace$0();\n        return _this.scanner.scanChar$1(42) ? null : _this.identifier$0();\n      }\n      basename = url.get$pathSegments().length === 0 ? \"\" : C.JSArray_methods.get$last(url.get$pathSegments());\n      dot = J.getInterceptor$asx(basename).indexOf$1(basename, \".\");\n      t1 = C.JSString_methods.startsWith$1(basename, \"_\") ? 1 : 0;\n      namespace = C.JSString_methods.substring$2(basename, t1, dot === -1 ? basename.length : dot);\n      try {\n        t1 = S.SpanScanner$(namespace, null);\n        t1 = new G.Parser(t1, _this.logger)._parseIdentifier$0();\n        return t1;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassFormatException)\n          _this.error$2(0, 'Invalid Sass identifier \"' + H.S(namespace) + '\"', _this.scanner.spanFrom$1(start));\n        else\n          throw exception;\n      }\n    },\n    _stylesheet$_configuration$1$allowGuarded: function(allowGuarded) {\n      var variableNames, configuration, t1, t2, $name, expression, t3, guarded, endPosition, t4, t5, span, _this = this;\n      if (!_this.scanIdentifier$1(\"with\"))\n        return null;\n      variableNames = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      configuration = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ConfiguredVariable);\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      t1.expectChar$1(40);\n      for (; true;) {\n        _this.whitespace$0();\n        t2 = t1._string_scanner$_position;\n        t1.expectChar$1(36);\n        $name = _this.identifier$1$normalize(true);\n        _this.whitespace$0();\n        t1.expectChar$1(58);\n        _this.whitespace$0();\n        expression = _this._expressionUntilComma$0();\n        t3 = t1._string_scanner$_position;\n        if (allowGuarded && t1.scanChar$1(33))\n          if (_this.identifier$0() === \"default\")\n            guarded = true;\n          else {\n            endPosition = t1._string_scanner$_position;\n            t4 = t1._sourceFile;\n            t5 = new Y._FileSpan(t4, t3, endPosition);\n            t5._FileSpan$3(t4, t3, endPosition);\n            _this.error$2(0, \"Invalid flag name.\", t5);\n            guarded = false;\n          }\n        else\n          guarded = false;\n        endPosition = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        span = new Y._FileSpan(t3, t2, endPosition);\n        span._FileSpan$3(t3, t2, endPosition);\n        if (variableNames.contains$1(0, $name))\n          _this.error$2(0, string$.The_sa, span);\n        variableNames.add$1(0, $name);\n        configuration.push(new Z.ConfiguredVariable($name, expression, guarded, span));\n        if (!t1.scanChar$1(44))\n          break;\n        _this.whitespace$0();\n        if (!_this._lookingAtExpression$0())\n          break;\n      }\n      t1.expectChar$1(41);\n      return configuration;\n    },\n    _stylesheet$_configuration$0: function() {\n      return this._stylesheet$_configuration$1$allowGuarded(false);\n    },\n    _warnRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@warn rule\");\n      return new Y.WarnRule(value, this.scanner.spanFrom$1(start));\n    },\n    _whileRule$2: function(start, child) {\n      var _this = this,\n        wasInControlDirective = _this._inControlDirective;\n      _this._inControlDirective = true;\n      return _this._withChildren$3(child, start, new V.StylesheetParser__whileRule_closure(_this, wasInControlDirective, _this.expression$0()));\n    },\n    unknownAtRule$2: function(start, $name) {\n      var t2, t3, rule, _this = this, t1 = {},\n        wasInUnknownAtRule = _this._stylesheet$_inUnknownAtRule;\n      _this._stylesheet$_inUnknownAtRule = true;\n      t1.value = null;\n      t2 = _this.scanner;\n      t3 = t2.peekChar$0() !== 33 && !_this.atEndOfStatement$0() ? t1.value = _this.almostAnyValue$0() : null;\n      if (_this.lookingAtChildren$0())\n        rule = _this._withChildren$3(_this.get$_statement(), start, new V.StylesheetParser_unknownAtRule_closure(t1, $name));\n      else {\n        _this.expectStatementSeparator$0();\n        rule = U.AtRule$($name, t2.spanFrom$1(start), null, t3);\n      }\n      _this._stylesheet$_inUnknownAtRule = wasInUnknownAtRule;\n      return rule;\n    },\n    _disallowedAtRule$1: function(start) {\n      this.almostAnyValue$0();\n      this.error$2(0, \"This at-rule is not allowed here.\", this.scanner.spanFrom$1(start));\n    },\n    _argumentDeclaration$0: function() {\n      var $arguments, named, restArgument, t3, $name, defaultValue, endPosition, t4, t5, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Argument);\n      named = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      while (true) {\n        if (!(t1.peekChar$0() === 36)) {\n          restArgument = null;\n          break;\n        }\n        t3 = t1._string_scanner$_position;\n        t1.expectChar$1(36);\n        $name = _this.identifier$1$normalize(true);\n        _this.whitespace$0();\n        if (t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          defaultValue = _this._expressionUntilComma$0();\n        } else {\n          if (t1.scanChar$1(46)) {\n            t1.expectChar$1(46);\n            t1.expectChar$1(46);\n            _this.whitespace$0();\n            restArgument = $name;\n            break;\n          }\n          defaultValue = null;\n        }\n        endPosition = t1._string_scanner$_position;\n        t4 = t1._sourceFile;\n        t5 = new Y._FileSpan(t4, t3, endPosition);\n        t5._FileSpan$3(t4, t3, endPosition);\n        $arguments.push(new Z.Argument($name, defaultValue, t5));\n        if (!named.add$1(0, $name))\n          _this.error$2(0, \"Duplicate argument.\", C.JSArray_methods.get$last($arguments).span);\n        if (!t1.scanChar$1(44)) {\n          restArgument = null;\n          break;\n        }\n        _this.whitespace$0();\n      }\n      t1.expectChar$1(41);\n      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new B.ArgumentDeclaration(P.List_List$unmodifiable($arguments, type$.legacy_Argument), restArgument, t1);\n    },\n    _argumentInvocation$1$mixin: function(mixin) {\n      var positional, t3, t4, named, keywordRest, t5, rest, expression, t6, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      positional = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n      t3 = type$.legacy_String;\n      t4 = type$.legacy_Expression;\n      named = P.LinkedHashMap_LinkedHashMap$_empty(t3, t4);\n      t5 = !mixin;\n      rest = null;\n      while (true) {\n        if (!_this._lookingAtExpression$0()) {\n          keywordRest = null;\n          break;\n        }\n        expression = _this._expressionUntilComma$1$singleEquals(t5);\n        _this.whitespace$0();\n        if (expression instanceof S.VariableExpression && t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          t6 = expression.name;\n          if (named.containsKey$1(t6))\n            _this.error$2(0, \"Duplicate argument.\", expression.span);\n          named.$indexSet(0, t6, _this._expressionUntilComma$1$singleEquals(t5));\n        } else if (t1.scanChar$1(46)) {\n          t1.expectChar$1(46);\n          t1.expectChar$1(46);\n          if (rest != null) {\n            _this.whitespace$0();\n            keywordRest = expression;\n            break;\n          }\n          rest = expression;\n        } else if (named.get$isNotEmpty(named))\n          _this.error$2(0, string$.Positi, expression.get$span());\n        else\n          positional.push(expression);\n        _this.whitespace$0();\n        if (!t1.scanChar$1(44)) {\n          keywordRest = null;\n          break;\n        }\n        _this.whitespace$0();\n      }\n      t1.expectChar$1(41);\n      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new X.ArgumentInvocation(P.List_List$unmodifiable(positional, t4), H.ConstantMap_ConstantMap$from(named, t3, t4), rest, keywordRest, t1);\n    },\n    _argumentInvocation$0: function() {\n      return this._argumentInvocation$1$mixin(false);\n    },\n    expression$3$bracketList$singleEquals$until: function(bracketList, singleEquals, until) {\n      var t2, beforeBracket, t3, wasInParentheses, resetState, resolveOneOperation, resolveOperations, addSingleExpression, addOperator, resolveSpaceExpressions, first, next, t4, _this = this,\n        _s20_ = \"Expected expression.\",\n        _box_0 = {},\n        t1 = until != null;\n      if (t1 && until.call$0())\n        _this.scanner.error$1(0, _s20_);\n      if (bracketList) {\n        t2 = _this.scanner;\n        beforeBracket = new S._SpanScannerState(t2, t2._string_scanner$_position);\n        t2.expectChar$1(91);\n        _this.whitespace$0();\n        if (t2.scanChar$1(93))\n          return D.ListExpression$(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression), C.ListSeparator_undecided, true, t2.spanFrom$1(beforeBracket));\n      } else\n        beforeBracket = null;\n      t2 = _this.scanner;\n      t3 = t2._string_scanner$_position;\n      wasInParentheses = _this._inParentheses;\n      _box_0.operands = _box_0.operators = _box_0.spaceExpressions = _box_0.commaExpressions = null;\n      _box_0.allowSlash = _this.lookingAtNumber$0();\n      _box_0.singleExpression = _this._singleExpression$0();\n      resetState = new V.StylesheetParser_expression_resetState(_box_0, _this, new S._SpanScannerState(t2, t3));\n      resolveOneOperation = new V.StylesheetParser_expression_resolveOneOperation(_box_0, _this);\n      resolveOperations = new V.StylesheetParser_expression_resolveOperations(_box_0, resolveOneOperation);\n      addSingleExpression = new V.StylesheetParser_expression_addSingleExpression(_box_0, _this, resetState, resolveOperations);\n      addOperator = new V.StylesheetParser_expression_addOperator(_box_0, _this, resolveOneOperation);\n      resolveSpaceExpressions = new V.StylesheetParser_expression_resolveSpaceExpressions(_box_0, resolveOperations);\n      $label0$0:\n        for (t3 = type$.JSArray_legacy_Expression; true;) {\n          _this.whitespace$0();\n          if (t1 && until.call$0())\n            break $label0$0;\n          first = t2.peekChar$0();\n          switch (first) {\n            case 40:\n              addSingleExpression.call$1(_this._parentheses$0());\n              break;\n            case 91:\n              addSingleExpression.call$1(_this.expression$1$bracketList(true));\n              break;\n            case 36:\n              addSingleExpression.call$1(_this._variable$0());\n              break;\n            case 38:\n              addSingleExpression.call$1(_this._selector$0());\n              break;\n            case 39:\n            case 34:\n              addSingleExpression.call$1(_this.interpolatedString$0());\n              break;\n            case 35:\n              addSingleExpression.call$1(_this._hashExpression$0());\n              break;\n            case 61:\n              t2.readChar$0();\n              if (singleEquals && t2.peekChar$0() !== 61)\n                addOperator.call$1(C.BinaryOperator_kjl);\n              else {\n                t2.expectChar$1(61);\n                addOperator.call$1(C.BinaryOperator_YlX);\n              }\n              break;\n            case 33:\n              next = t2.peekChar$1(1);\n              if (next === 61) {\n                t2.readChar$0();\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_i5H);\n              } else {\n                if (next != null)\n                  if ((next | 32) !== 105)\n                    t4 = next === 32 || next === 9 || next === 10 || next === 13 || next === 12;\n                  else\n                    t4 = true;\n                else\n                  t4 = true;\n                if (t4)\n                  addSingleExpression.call$1(_this._importantExpression$0());\n                else\n                  break $label0$0;\n              }\n              break;\n            case 60:\n              t2.readChar$0();\n              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_33h : C.BinaryOperator_8qt);\n              break;\n            case 62:\n              t2.readChar$0();\n              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_1da : C.BinaryOperator_AcR);\n              break;\n            case 42:\n              t2.readChar$0();\n              addOperator.call$1(C.BinaryOperator_O1M);\n              break;\n            case 43:\n              if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_AcR0);\n              }\n              break;\n            case 45:\n              next = t2.peekChar$1(1);\n              if (next != null && next >= 48 && next <= 57 || next === 46)\n                if (_box_0.singleExpression != null) {\n                  t4 = t2.peekChar$1(-1);\n                  t4 = t4 === 32 || t4 === 9 || t4 === 10 || t4 === 13 || t4 === 12;\n                } else\n                  t4 = true;\n              else\n                t4 = false;\n              if (t4)\n                addSingleExpression.call$2$number(_this._number$0(), true);\n              else if (_this._lookingAtInterpolatedIdentifier$0())\n                addSingleExpression.call$1(_this.identifierLike$0());\n              else if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_iyO);\n              }\n              break;\n            case 47:\n              if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_RTB);\n              }\n              break;\n            case 37:\n              t2.readChar$0();\n              addOperator.call$1(C.BinaryOperator_2ad);\n              break;\n            case 48:\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n              addSingleExpression.call$2$number(_this._number$0(), true);\n              break;\n            case 46:\n              if (t2.peekChar$1(1) === 46)\n                break $label0$0;\n              addSingleExpression.call$2$number(_this._number$0(), true);\n              break;\n            case 97:\n              if (!_this.get$plainCss() && _this.scanIdentifier$1(\"and\"))\n                addOperator.call$1(C.BinaryOperator_and_and_2);\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 111:\n              if (!_this.get$plainCss() && _this.scanIdentifier$1(\"or\"))\n                addOperator.call$1(C.BinaryOperator_or_or_1);\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 117:\n            case 85:\n              if (t2.peekChar$1(1) === 43)\n                addSingleExpression.call$1(_this._unicodeRange$0());\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 98:\n            case 99:\n            case 100:\n            case 101:\n            case 102:\n            case 103:\n            case 104:\n            case 105:\n            case 106:\n            case 107:\n            case 108:\n            case 109:\n            case 110:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 118:\n            case 119:\n            case 120:\n            case 121:\n            case 122:\n            case 65:\n            case 66:\n            case 67:\n            case 68:\n            case 69:\n            case 70:\n            case 71:\n            case 72:\n            case 73:\n            case 74:\n            case 75:\n            case 76:\n            case 77:\n            case 78:\n            case 79:\n            case 80:\n            case 81:\n            case 82:\n            case 83:\n            case 84:\n            case 86:\n            case 87:\n            case 88:\n            case 89:\n            case 90:\n            case 95:\n            case 92:\n              addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 44:\n              if (_this._inParentheses) {\n                _this._inParentheses = false;\n                if (_box_0.allowSlash) {\n                  resetState.call$0();\n                  break;\n                }\n              }\n              if (_box_0.commaExpressions == null)\n                _box_0.commaExpressions = H.setRuntimeTypeInfo([], t3);\n              if (_box_0.singleExpression == null)\n                t2.error$1(0, _s20_);\n              resolveSpaceExpressions.call$0();\n              _box_0.commaExpressions.push(_box_0.singleExpression);\n              t2.readChar$0();\n              _box_0.allowSlash = true;\n              _box_0.singleExpression = null;\n              break;\n            default:\n              if (first != null && first >= 128) {\n                addSingleExpression.call$1(_this.identifierLike$0());\n                break;\n              } else\n                break $label0$0;\n          }\n        }\n      if (bracketList)\n        t2.expectChar$1(93);\n      if (_box_0.commaExpressions != null) {\n        resolveSpaceExpressions.call$0();\n        _this._inParentheses = wasInParentheses;\n        t1 = _box_0.singleExpression;\n        if (t1 != null)\n          _box_0.commaExpressions.push(t1);\n        t1 = _box_0.commaExpressions;\n        return D.ListExpression$(t1, C.ListSeparator_comma, bracketList, bracketList ? t2.spanFrom$1(beforeBracket) : null);\n      } else if (bracketList && _box_0.spaceExpressions != null) {\n        resolveOperations.call$0();\n        t1 = _box_0.spaceExpressions;\n        t1.push(_box_0.singleExpression);\n        return D.ListExpression$(t1, C.ListSeparator_space, true, t2.spanFrom$1(beforeBracket));\n      } else {\n        resolveSpaceExpressions.call$0();\n        if (bracketList)\n          _box_0.singleExpression = D.ListExpression$(H.setRuntimeTypeInfo([_box_0.singleExpression], t3), C.ListSeparator_undecided, true, t2.spanFrom$1(beforeBracket));\n        return _box_0.singleExpression;\n      }\n    },\n    expression$0: function() {\n      return this.expression$3$bracketList$singleEquals$until(false, false, null);\n    },\n    expression$2$singleEquals$until: function(singleEquals, until) {\n      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, until);\n    },\n    expression$1$bracketList: function(bracketList) {\n      return this.expression$3$bracketList$singleEquals$until(bracketList, false, null);\n    },\n    expression$1$singleEquals: function(singleEquals) {\n      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, null);\n    },\n    expression$1$until: function(until) {\n      return this.expression$3$bracketList$singleEquals$until(false, false, until);\n    },\n    _expressionUntilComma$1$singleEquals: function(singleEquals) {\n      return this.expression$2$singleEquals$until(singleEquals, new V.StylesheetParser__expressionUntilComma_closure(this));\n    },\n    _expressionUntilComma$0: function() {\n      return this._expressionUntilComma$1$singleEquals(false);\n    },\n    _singleExpression$0: function() {\n      var next, _this = this,\n        t1 = _this.scanner,\n        first = t1.peekChar$0();\n      switch (first) {\n        case 40:\n          return _this._parentheses$0();\n        case 47:\n          return _this._unaryOperation$0();\n        case 46:\n          return _this._number$0();\n        case 91:\n          return _this.expression$1$bracketList(true);\n        case 36:\n          return _this._variable$0();\n        case 38:\n          return _this._selector$0();\n        case 39:\n        case 34:\n          return _this.interpolatedString$0();\n        case 35:\n          return _this._hashExpression$0();\n        case 43:\n          next = t1.peekChar$1(1);\n          return T.isDigit(next) || next === 46 ? _this._number$0() : _this._unaryOperation$0();\n        case 45:\n          return _this._minusExpression$0();\n        case 33:\n          return _this._importantExpression$0();\n        case 117:\n        case 85:\n          if (t1.peekChar$1(1) === 43)\n            return _this._unicodeRange$0();\n          else\n            return _this.identifierLike$0();\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          return _this._number$0();\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 95:\n        case 92:\n          return _this.identifierLike$0();\n        default:\n          if (first != null && first >= 128)\n            return _this.identifierLike$0();\n          t1.error$1(0, \"Expected expression.\");\n      }\n    },\n    _parentheses$0: function() {\n      var wasInParentheses, start, first, expressions, t1, _this = this;\n      if (_this.get$plainCss())\n        _this.scanner.error$2$length(0, \"Parentheses aren't allowed in plain CSS.\", 1);\n      wasInParentheses = _this._inParentheses;\n      _this._inParentheses = true;\n      try {\n        t1 = _this.scanner;\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n        t1.expectChar$1(40);\n        _this.whitespace$0();\n        if (!_this._lookingAtExpression$0()) {\n          t1.expectChar$1(41);\n          t1 = D.ListExpression$(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression), C.ListSeparator_undecided, false, t1.spanFrom$1(start));\n          return t1;\n        }\n        first = _this._expressionUntilComma$0();\n        if (t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          t1 = _this._stylesheet$_map$2(first, start);\n          return t1;\n        }\n        if (!t1.scanChar$1(44)) {\n          t1.expectChar$1(41);\n          t1 = t1.spanFrom$1(start);\n          return new T.ParenthesizedExpression(first, t1);\n        }\n        _this.whitespace$0();\n        expressions = H.setRuntimeTypeInfo([first], type$.JSArray_legacy_Expression);\n        for (; true;) {\n          if (!_this._lookingAtExpression$0())\n            break;\n          J.add$1$ax(expressions, _this._expressionUntilComma$0());\n          if (!t1.scanChar$1(44))\n            break;\n          _this.whitespace$0();\n        }\n        t1.expectChar$1(41);\n        t1 = D.ListExpression$(expressions, C.ListSeparator_comma, false, t1.spanFrom$1(start));\n        return t1;\n      } finally {\n        _this._inParentheses = wasInParentheses;\n      }\n    },\n    _stylesheet$_map$2: function(first, start) {\n      var t2, key, _this = this,\n        t1 = type$.Tuple2_of_legacy_Expression_and_legacy_Expression,\n        pairs = H.setRuntimeTypeInfo([new S.Tuple2(first, _this._expressionUntilComma$0(), t1)], type$.JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression);\n      for (t2 = _this.scanner; t2.scanChar$1(44);) {\n        _this.whitespace$0();\n        if (!_this._lookingAtExpression$0())\n          break;\n        key = _this._expressionUntilComma$0();\n        t2.expectChar$1(58);\n        _this.whitespace$0();\n        pairs.push(new S.Tuple2(key, _this._expressionUntilComma$0(), t1));\n      }\n      t2.expectChar$1(41);\n      t1 = t2.spanFrom$1(start);\n      return new A.MapExpression(P.List_List$unmodifiable(pairs, type$.legacy_Tuple2_of_legacy_Expression_and_legacy_Expression), t1);\n    },\n    _hashExpression$0: function() {\n      var start, first, t2, identifier, buffer, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$1(1) === 123)\n        return _this.identifierLike$0();\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(35);\n      first = t1.peekChar$0();\n      if (first != null && T.isDigit(first))\n        return new K.ColorExpression(_this._hexColorContents$1(start));\n      t2 = t1._string_scanner$_position;\n      identifier = _this.interpolatedIdentifier$0();\n      if (_this._isHexColor$1(identifier)) {\n        t1.set$state(new S._SpanScannerState(t1, t2));\n        return new K.ColorExpression(_this._hexColorContents$1(start));\n      }\n      t2 = new P.StringBuffer(\"\");\n      buffer = new Z.InterpolationBuffer(t2, []);\n      t2._contents += H.Primitives_stringFromCharCode(35);\n      buffer.addInterpolation$1(identifier);\n      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n    },\n    _hexColorContents$1: function(start) {\n      var red, green, blue, alpha, digit4, t2, t3, _this = this,\n        digit1 = _this._hexDigit$0(),\n        digit2 = _this._hexDigit$0(),\n        digit3 = _this._hexDigit$0(),\n        t1 = _this.scanner;\n      if (!T.isHex(t1.peekChar$0())) {\n        red = (digit1 << 4 >>> 0) + digit1;\n        green = (digit2 << 4 >>> 0) + digit2;\n        blue = (digit3 << 4 >>> 0) + digit3;\n        alpha = 1;\n      } else {\n        digit4 = _this._hexDigit$0();\n        t2 = digit1 << 4 >>> 0;\n        t3 = digit3 << 4 >>> 0;\n        if (!T.isHex(t1.peekChar$0())) {\n          red = t2 + digit1;\n          green = (digit2 << 4 >>> 0) + digit2;\n          blue = t3 + digit3;\n          alpha = ((digit4 << 4 >>> 0) + digit4) / 255;\n        } else {\n          red = t2 + digit2;\n          green = t3 + digit4;\n          blue = (_this._hexDigit$0() << 4 >>> 0) + _this._hexDigit$0();\n          alpha = T.isHex(t1.peekChar$0()) ? ((_this._hexDigit$0() << 4 >>> 0) + _this._hexDigit$0()) / 255 : 1;\n        }\n      }\n      return K.SassColor$rgb(red, green, blue, alpha, t1.spanFrom$1(start));\n    },\n    _isHexColor$1: function(interpolation) {\n      var t1,\n        plain = interpolation.get$asPlain();\n      if (plain == null)\n        return false;\n      t1 = plain.length;\n      if (t1 !== 3 && t1 !== 4 && t1 !== 6 && t1 !== 8)\n        return false;\n      t1 = new H.CodeUnits(plain);\n      return t1.every$1(t1, T.character__isHex$closure());\n    },\n    _hexDigit$0: function() {\n      var t1 = this.scanner,\n        char = t1.peekChar$0();\n      if (char == null || !T.isHex(char))\n        t1.error$1(0, \"Expected hex digit.\");\n      return T.asHex(t1.readChar$0());\n    },\n    _minusExpression$0: function() {\n      var _this = this,\n        next = _this.scanner.peekChar$1(1);\n      if (T.isDigit(next) || next === 46)\n        return _this._number$0();\n      if (_this._lookingAtInterpolatedIdentifier$0())\n        return _this.identifierLike$0();\n      return _this._unaryOperation$0();\n    },\n    _importantExpression$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.readChar$0();\n      this.whitespace$0();\n      this.expectIdentifier$1(\"important\");\n      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([\"!important\"], type$.JSArray_legacy_Object), t2), false);\n    },\n    _unaryOperation$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        operator = _this._unaryOperatorFor$1(t1.readChar$0());\n      if (operator == null)\n        t1.error$2$position(0, \"Expected unary operator.\", t1._string_scanner$_position - 1);\n      else if (_this.get$plainCss() && operator !== C.UnaryOperator_zDx)\n        t1.error$3$length$position(0, \"Operators aren't allowed in plain CSS.\", 1, t1._string_scanner$_position - 1);\n      _this.whitespace$0();\n      return new X.UnaryOperationExpression(operator, _this._singleExpression$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _unaryOperatorFor$1: function(character) {\n      switch (character) {\n        case 43:\n          return C.UnaryOperator_j2w;\n        case 45:\n          return C.UnaryOperator_U4G;\n        case 47:\n          return C.UnaryOperator_zDx;\n        default:\n          return null;\n      }\n    },\n    _number$0: function() {\n      var number, t4, unit, t5, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        first = t1.peekChar$0(),\n        t3 = first === 45,\n        sign = t3 ? -1 : 1;\n      if (first === 43 || t3)\n        t1.readChar$0();\n      number = t1.peekChar$0() === 46 ? 0 : _this.naturalNumber$0();\n      t3 = _this._tryDecimal$1$allowTrailingDot(t1._string_scanner$_position !== t2);\n      t4 = _this._tryExponent$0();\n      if (t1.scanChar$1(37))\n        unit = \"%\";\n      else {\n        if (_this.lookingAtIdentifier$0())\n          t5 = t1.peekChar$0() !== 45 || t1.peekChar$1(1) !== 45;\n        else\n          t5 = false;\n        unit = t5 ? _this.identifier$1$unit(true) : null;\n      }\n      return new T.NumberExpression(sign * ((number + t3) * t4), unit, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _tryDecimal$1$allowTrailingDot: function(allowTrailingDot) {\n      var t2,\n        t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      if (t1.peekChar$0() !== 46)\n        return 0;\n      if (!T.isDigit(t1.peekChar$1(1))) {\n        if (allowTrailingDot)\n          return 0;\n        t1.error$2$position(0, \"Expected digit.\", t1._string_scanner$_position + 1);\n      }\n      t1.readChar$0();\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        t1.readChar$0();\n      }\n      return P.double_parse(t1.substring$1(0, start));\n    },\n    _tryExponent$0: function() {\n      var next, t2, exponentSign, exponent,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first !== 101 && first !== 69)\n        return 1;\n      next = t1.peekChar$1(1);\n      if (!T.isDigit(next) && next !== 45 && next !== 43)\n        return 1;\n      t1.readChar$0();\n      t2 = next === 45;\n      exponentSign = t2 ? -1 : 1;\n      if (next === 43 || t2)\n        t1.readChar$0();\n      if (!T.isDigit(t1.peekChar$0()))\n        t1.error$1(0, \"Expected digit.\");\n      exponent = 0;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        exponent = exponent * 10 + (t1.readChar$0() - 48);\n      }\n      return Math.pow(10, exponentSign * exponent);\n    },\n    _unicodeRange$0: function() {\n      var i, t2, j, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.expectIdentChar$1(117);\n      t1.expectChar$1(43);\n      for (i = 0; i < 6; ++i)\n        if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure()))\n          break;\n      if (t1.scanChar$1(63)) {\n        ++i;\n        for (; i < 6; ++i)\n          if (!t1.scanChar$1(63))\n            break;\n        t2 = t1.substring$1(0, start.position);\n        t1 = t1.spanFrom$1(start);\n        return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);\n      }\n      if (i === 0)\n        t1.error$1(0, 'Expected hex digit or \"?\".');\n      if (t1.scanChar$1(45)) {\n        for (j = 0; j < 6; ++j)\n          if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure0()))\n            break;\n        if (j === 0)\n          t1.error$1(0, \"Expected hex digit.\");\n      }\n      if (_this._lookingAtInterpolatedIdentifierBody$0())\n        t1.error$1(0, \"Expected end of identifier.\");\n      t2 = t1.substring$1(0, start.position);\n      t1 = t1.spanFrom$1(start);\n      return new D.StringExpression(X.Interpolation$(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);\n    },\n    _variable$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        $name = _this.variableName$0();\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Sass_v, t1.spanFrom$1(start));\n      return new S.VariableExpression(null, $name, t1.spanFrom$1(start));\n    },\n    _selector$0: function() {\n      var t1, start, _this = this;\n      if (_this.get$plainCss())\n        _this.scanner.error$2$length(0, string$.The_pa, 1);\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(38);\n      if (t1.scanChar$1(38)) {\n        _this.logger.warn$2$span(0, string$.In_Sas, t1.spanFrom$1(start));\n        t1.set$position(t1._string_scanner$_position - 1);\n      }\n      return new T.SelectorExpression(t1.spanFrom$1(start));\n    },\n    interpolatedString$0: function() {\n      var t3, t4, buffer, next, second, t5,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        quote = t1.readChar$0();\n      if (quote !== 39 && quote !== 34)\n        t1.error$2$position(0, \"Expected string.\", t2);\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next === quote) {\n          t1.readChar$0();\n          break;\n        } else if (next == null || next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"Expected \" + H.Primitives_stringFromCharCode(quote) + \".\");\n        else if (next === 92) {\n          second = t1.peekChar$1(1);\n          if (second === 10 || second === 13 || second === 12) {\n            t1.readChar$0();\n            t1.readChar$0();\n            if (second === 13)\n              t1.scanChar$1(10);\n          } else\n            t3._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());\n        } else if (next === 35)\n          if (t1.peekChar$1(1) === 123) {\n            t5 = this.singleInterpolation$0();\n            buffer._flushText$0();\n            t4.push(t5);\n          } else\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n        else\n          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))), true);\n    },\n    identifierLike$0: function() {\n      var invocation, lower, color, specialFunction, $name, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        identifier = _this.interpolatedIdentifier$0(),\n        plain = identifier.get$asPlain(),\n        t2 = plain == null;\n      if (!t2) {\n        if (plain === \"if\") {\n          invocation = _this._argumentInvocation$0();\n          return new L.IfExpression(invocation, B.spanForList(H.setRuntimeTypeInfo([identifier, invocation], type$.JSArray_legacy_AstNode)));\n        } else if (plain === \"not\") {\n          _this.whitespace$0();\n          return new X.UnaryOperationExpression(C.UnaryOperator_not_not, _this._singleExpression$0(), identifier.span);\n        }\n        lower = plain.toLowerCase();\n        if (t1.peekChar$0() !== 40) {\n          switch (plain) {\n            case \"false\":\n              return new Z.BooleanExpression(false, identifier.span);\n            case \"null\":\n              return new O.NullExpression(identifier.span);\n            case \"true\":\n              return new Z.BooleanExpression(true, identifier.span);\n          }\n          color = $.$get$colorsByName().$index(0, lower);\n          if (color != null)\n            return new K.ColorExpression(K.SassColor$rgb(color.get$red(), color.get$green(), color.get$blue(), color.alpha, identifier.span));\n        }\n        specialFunction = _this.trySpecialFunction$2(lower, start);\n        if (specialFunction != null)\n          return specialFunction;\n      }\n      switch (t1.peekChar$0()) {\n        case 46:\n          if (t1.peekChar$1(1) === 46)\n            return new D.StringExpression(identifier, false);\n          t1.readChar$0();\n          if (t2)\n            _this.error$2(0, string$.Interpn, identifier.span);\n          if (t1.peekChar$0() === 36) {\n            $name = _this.variableName$0();\n            _this._assertPublic$2($name, new V.StylesheetParser_identifierLike_closure(_this, start));\n            return new S.VariableExpression(plain, $name, t1.spanFrom$1(start));\n          }\n          t2 = t1._string_scanner$_position;\n          return new F.FunctionExpression(plain, X.Interpolation$(H.setRuntimeTypeInfo([_this._publicIdentifier$0()], type$.JSArray_legacy_Object), t1.spanFrom$1(new S._SpanScannerState(t1, t2))), _this._argumentInvocation$0(), t1.spanFrom$1(start));\n        case 40:\n          return new F.FunctionExpression(null, identifier, _this._argumentInvocation$0(), t1.spanFrom$1(start));\n        default:\n          return new D.StringExpression(identifier, false);\n      }\n    },\n    trySpecialFunction$2: function($name, start) {\n      var t1, buffer, t2, t3, next, contents, _this = this, _null = null;\n      switch (B.unvendor($name)) {\n        case \"calc\":\n        case \"element\":\n        case \"expression\":\n          if (!_this.scanner.scanChar$1(40))\n            return _null;\n          t1 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer(t1, []);\n          t1._contents = $name;\n          t1._contents += H.Primitives_stringFromCharCode(40);\n          break;\n        case \"min\":\n        case \"max\":\n          t1 = _this.scanner;\n          t2 = t1._string_scanner$_position;\n          if (!t1.scanChar$1(40))\n            return _null;\n          _this.whitespace$0();\n          t3 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer(t3, []);\n          t3._contents = $name;\n          t3._contents += H.Primitives_stringFromCharCode(40);\n          if (!_this._tryMinMaxContents$1(buffer)) {\n            t1.set$state(new S._SpanScannerState(t1, t2));\n            return _null;\n          }\n          return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n        case \"progid\":\n          t1 = _this.scanner;\n          if (!t1.scanChar$1(58))\n            return _null;\n          t2 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer(t2, []);\n          t2._contents = $name;\n          t2._contents += H.Primitives_stringFromCharCode(58);\n          next = t1.peekChar$0();\n          while (true) {\n            if (next != null) {\n              if (!(next >= 97 && next <= 122))\n                t3 = next >= 65 && next <= 90;\n              else\n                t3 = true;\n              t3 = t3 || next === 46;\n            } else\n              t3 = false;\n            if (!t3)\n              break;\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            next = t1.peekChar$0();\n          }\n          t1.expectChar$1(40);\n          t2._contents += H.Primitives_stringFromCharCode(40);\n          break;\n        case \"url\":\n          contents = _this._tryUrlContents$1(start);\n          return contents == null ? _null : new D.StringExpression(contents, false);\n        default:\n          return _null;\n      }\n      buffer.addInterpolation$1(_this._interpolatedDeclarationValue$1$allowEmpty(true));\n      t1 = _this.scanner;\n      t1.expectChar$1(41);\n      buffer._interpolation_buffer$_text._contents += H.Primitives_stringFromCharCode(41);\n      return new D.StringExpression(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n    },\n    _tryMinMaxContents$2$allowComma: function(buffer, allowComma) {\n      var t1, t2, t3, t4, start, end, exception, t5, _this = this;\n      for (t1 = _this.scanner, t2 = buffer._interpolation_buffer$_text, t3 = !allowComma, t4 = _this.get$_number(); true;) {\n        switch (t1.peekChar$0()) {\n          case 45:\n          case 43:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n            try {\n              start = t1._string_scanner$_position;\n              t4.call$0();\n              end = t1._string_scanner$_position;\n              t2._contents += J.substring$2$s(t1.string, start, end);\n            } catch (exception) {\n              if (type$.legacy_FormatException._is(H.unwrapException(exception)))\n                return false;\n              else\n                throw exception;\n            }\n            break;\n          case 35:\n            if (t1.peekChar$1(1) !== 123)\n              return false;\n            t5 = _this.singleInterpolation$0();\n            buffer._flushText$0();\n            buffer._interpolation_buffer$_contents.push(t5);\n            break;\n          case 99:\n          case 67:\n            if (!_this._tryMinMaxFunction$2(buffer, \"calc\"))\n              return false;\n            break;\n          case 101:\n          case 69:\n            if (!_this._tryMinMaxFunction$2(buffer, \"env\"))\n              return false;\n            break;\n          case 118:\n          case 86:\n            if (!_this._tryMinMaxFunction$2(buffer, \"var\"))\n              return false;\n            break;\n          case 40:\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            if (!_this._tryMinMaxContents$2$allowComma(buffer, false))\n              return false;\n            break;\n          case 109:\n          case 77:\n            t1.readChar$0();\n            if (_this.scanIdentChar$1(105)) {\n              if (!_this.scanIdentChar$1(110))\n                return false;\n              t2._contents += \"min(\";\n            } else if (_this.scanIdentChar$1(97)) {\n              if (!_this.scanIdentChar$1(120))\n                return false;\n              t2._contents += \"max(\";\n            } else\n              return false;\n            if (!t1.scanChar$1(40))\n              return false;\n            if (!_this._tryMinMaxContents$1(buffer))\n              return false;\n            break;\n          default:\n            return false;\n        }\n        _this.whitespace$0();\n        switch (t1.peekChar$0()) {\n          case 41:\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            return true;\n          case 43:\n          case 45:\n          case 42:\n          case 47:\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            break;\n          case 44:\n            if (t3)\n              return false;\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            break;\n          default:\n            return false;\n        }\n        _this.whitespace$0();\n      }\n    },\n    _tryMinMaxContents$1: function(buffer) {\n      return this._tryMinMaxContents$2$allowComma(buffer, true);\n    },\n    _tryMinMaxFunction$2: function(buffer, $name) {\n      var t1, t2;\n      if (!this.scanIdentifier$1($name))\n        return false;\n      t1 = this.scanner;\n      if (!t1.scanChar$1(40))\n        return false;\n      t2 = buffer._interpolation_buffer$_text;\n      t2._contents += $name;\n      t2._contents += H.Primitives_stringFromCharCode(40);\n      buffer.addInterpolation$1(this._interpolatedDeclarationValue$1$allowEmpty(true));\n      t2._contents += H.Primitives_stringFromCharCode(41);\n      if (!t1.scanChar$1(41))\n        return false;\n      return true;\n    },\n    _tryUrlContents$2$name: function(start, $name) {\n      var t3, t4, buffer, next, t5, endPosition, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      if (!t1.scanChar$1(40))\n        return null;\n      _this.whitespaceWithoutComments$0();\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      t3._contents = $name == null ? \"url\" : $name;\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 33)\n            if (next !== 37)\n              if (next !== 38)\n                t5 = next >= 42 && next <= 126 || next >= 128;\n              else\n                t5 = true;\n            else\n              t5 = true;\n          else\n            t5 = true;\n          if (t5)\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            t3._contents += H.S(_this.escape$0());\n          else if (next === 35)\n            if (t1.peekChar$1(1) === 123) {\n              t5 = _this.singleInterpolation$0();\n              buffer._flushText$0();\n              t4.push(t5);\n            } else\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {\n            _this.whitespaceWithoutComments$0();\n            if (t1.peekChar$0() !== 41)\n              break;\n          } else if (next === 41) {\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            endPosition = t1._string_scanner$_position;\n            t2 = t1._sourceFile;\n            t3 = start.position;\n            t1 = new Y._FileSpan(t2, t3, endPosition);\n            t1._FileSpan$3(t2, t3, endPosition);\n            return buffer.interpolation$1(t1);\n          } else\n            break;\n        }\n      }\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      return null;\n    },\n    _tryUrlContents$1: function(start) {\n      return this._tryUrlContents$2$name(start, null);\n    },\n    dynamicUrl$0: function() {\n      var contents, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.expectIdentifier$1(\"url\");\n      contents = _this._tryUrlContents$1(start);\n      if (contents != null)\n        return new D.StringExpression(contents, false);\n      return new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo([\"url\"], type$.JSArray_legacy_Object), t1.spanFrom$1(start)), _this._argumentInvocation$0(), t1.spanFrom$1(start));\n    },\n    almostAnyValue$1$omitComments: function(omitComments) {\n      var t4, t5, next, commentStart, end, t6, contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer(t3, []);\n      $label0$1:\n        for (t4 = t1.string, t5 = !omitComments; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 34:\n            case 39:\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              break;\n            case 47:\n              commentStart = t1._string_scanner$_position;\n              if (_this.scanComment$0()) {\n                if (t5) {\n                  end = t1._string_scanner$_position;\n                  t3._contents += J.substring$2$s(t4, commentStart, end);\n                }\n              } else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 35:\n              if (t1.peekChar$1(1) === 123)\n                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 13:\n            case 10:\n            case 12:\n              if (_this.get$indented())\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 33:\n            case 59:\n            case 123:\n            case 125:\n              break $label0$1;\n            case 117:\n            case 85:\n              t6 = t1._string_scanner$_position;\n              if (!_this.scanIdentifier$1(\"url\")) {\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n              }\n              contents = _this._tryUrlContents$1(new S._SpanScannerState(t1, t6));\n              if (contents == null) {\n                if (t6 < 0 || t6 > t4.length)\n                  H.throwExpression(P.ArgumentError$(\"Invalid position \" + t6));\n                t1._string_scanner$_position = t6;\n                t1._lastMatch = null;\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              } else\n                buffer.addInterpolation$1(contents);\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                t3._contents += _this.identifier$0();\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n          }\n        }\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    almostAnyValue$0: function() {\n      return this.almostAnyValue$1$omitComments(false);\n    },\n    _interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon: function(allowColon, allowEmpty, allowSemicolon) {\n      var t4, t5, t6, wroteNewline, next, t7, start, end, contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer(t3, []),\n        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);\n      $label0$1:\n        for (t4 = t1.string, t5 = !allowColon, t6 = !allowSemicolon, wroteNewline = false; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              t3._contents += H.S(_this.escape$1$identifierStart(true));\n              wroteNewline = false;\n              break;\n            case 34:\n            case 39:\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              wroteNewline = false;\n              break;\n            case 47:\n              if (t1.peekChar$1(1) === 42) {\n                t7 = _this.get$loudComment();\n                start = t1._string_scanner$_position;\n                t7.call$0();\n                end = t1._string_scanner$_position;\n                t3._contents += J.substring$2$s(t4, start, end);\n              } else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 35:\n              if (t1.peekChar$1(1) === 123)\n                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 32:\n            case 9:\n              if (!wroteNewline) {\n                t7 = t1.peekChar$1(1);\n                t7 = !(t7 === 32 || t7 === 9 || t7 === 10 || t7 === 13 || t7 === 12);\n              } else\n                t7 = true;\n              if (t7)\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              else\n                t1.readChar$0();\n              break;\n            case 10:\n            case 13:\n            case 12:\n              if (_this.get$indented())\n                break $label0$1;\n              t7 = t1.peekChar$1(-1);\n              if (!(t7 === 10 || t7 === 13 || t7 === 12))\n                t3._contents += \"\\n\";\n              t1.readChar$0();\n              wroteNewline = true;\n              break;\n            case 40:\n            case 123:\n            case 91:\n              t3._contents += H.Primitives_stringFromCharCode(next);\n              brackets.push(T.opposite(t1.readChar$0()));\n              wroteNewline = false;\n              break;\n            case 41:\n            case 125:\n            case 93:\n              if (brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(next);\n              t1.expectChar$1(brackets.pop());\n              wroteNewline = false;\n              break;\n            case 59:\n              if (t6 && brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 58:\n              if (t5 && brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 117:\n            case 85:\n              t7 = t1._string_scanner$_position;\n              if (!_this.scanIdentifier$1(\"url\")) {\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                wroteNewline = false;\n                break;\n              }\n              contents = _this._tryUrlContents$1(new S._SpanScannerState(t1, t7));\n              if (contents == null) {\n                if (t7 < 0 || t7 > t4.length)\n                  H.throwExpression(P.ArgumentError$(\"Invalid position \" + t7));\n                t1._string_scanner$_position = t7;\n                t1._lastMatch = null;\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              } else\n                buffer.addInterpolation$1(contents);\n              wroteNewline = false;\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                t3._contents += _this.identifier$0();\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n          }\n        }\n      if (brackets.length !== 0)\n        t1.expectChar$1(C.JSArray_methods.get$last(brackets));\n      if (!allowEmpty && buffer._interpolation_buffer$_contents.length === 0 && t3._contents.length === 0)\n        t1.error$1(0, \"Expected token.\");\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _interpolatedDeclarationValue$1$allowEmpty: function(allowEmpty) {\n      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, false);\n    },\n    _interpolatedDeclarationValue$2$allowEmpty$allowSemicolon: function(allowEmpty, allowSemicolon) {\n      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, allowSemicolon);\n    },\n    _interpolatedDeclarationValue$0: function() {\n      return this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, false, false);\n    },\n    interpolatedIdentifier$0: function() {\n      var first, _this = this,\n        _s20_ = \"Expected identifier.\",\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        t2 = new P.StringBuffer(\"\"),\n        t3 = [],\n        buffer = new Z.InterpolationBuffer(t2, t3);\n      if (t1.scanChar$1(45)) {\n        t2._contents += H.Primitives_stringFromCharCode(45);\n        if (t1.scanChar$1(45)) {\n          t2._contents += H.Primitives_stringFromCharCode(45);\n          _this._interpolatedIdentifierBody$1(buffer);\n          return buffer.interpolation$1(t1.spanFrom$1(start));\n        }\n      }\n      first = t1.peekChar$0();\n      if (first == null)\n        t1.error$1(0, _s20_);\n      else if (first === 95 || T.isAlphabetic0(first) || first >= 128)\n        t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      else if (first === 92)\n        t2._contents += H.S(_this.escape$1$identifierStart(true));\n      else if (first === 35 && t1.peekChar$1(1) === 123) {\n        t2 = _this.singleInterpolation$0();\n        buffer._flushText$0();\n        t3.push(t2);\n      } else\n        t1.error$1(0, _s20_);\n      _this._interpolatedIdentifierBody$1(buffer);\n      return buffer.interpolation$1(t1.spanFrom$1(start));\n    },\n    _interpolatedIdentifierBody$1: function(buffer) {\n      var t1, t2, t3, next, t4;\n      for (t1 = buffer._interpolation_buffer$_contents, t2 = this.scanner, t3 = buffer._interpolation_buffer$_text; true;) {\n        next = t2.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 95)\n            if (next !== 45) {\n              if (!(next >= 97 && next <= 122))\n                t4 = next >= 65 && next <= 90;\n              else\n                t4 = true;\n              if (!t4)\n                t4 = next >= 48 && next <= 57;\n              else\n                t4 = true;\n              t4 = t4 || next >= 128;\n            } else\n              t4 = true;\n          else\n            t4 = true;\n          if (t4)\n            t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());\n          else if (next === 92)\n            t3._contents += H.S(this.escape$0());\n          else if (next === 35 && t2.peekChar$1(1) === 123) {\n            t4 = this.singleInterpolation$0();\n            buffer._flushText$0();\n            t1.push(t4);\n          } else\n            break;\n        }\n      }\n    },\n    singleInterpolation$0: function() {\n      var contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"#{\");\n      _this.whitespace$0();\n      contents = _this.expression$0();\n      t1.expectChar$1(125);\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Interpp, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n      return contents;\n    },\n    _mediaQueryList$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer(t3, []);\n      for (; true;) {\n        this.whitespace$0();\n        this._stylesheet$_mediaQuery$1(buffer);\n        if (!t1.scanChar$1(44))\n          break;\n        t3._contents += H.Primitives_stringFromCharCode(44);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n      }\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet$_mediaQuery$1: function(buffer) {\n      var t1, identifier, _this = this;\n      if (_this.scanner.peekChar$0() !== 40) {\n        buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        _this.whitespace$0();\n        if (!_this._lookingAtInterpolatedIdentifier$0())\n          return;\n        t1 = buffer._interpolation_buffer$_text;\n        t1._contents += H.Primitives_stringFromCharCode(32);\n        identifier = _this.interpolatedIdentifier$0();\n        _this.whitespace$0();\n        if (B.equalsIgnoreCase(identifier.get$asPlain(), \"and\"))\n          t1._contents += \" and \";\n        else {\n          buffer.addInterpolation$1(identifier);\n          if (_this.scanIdentifier$1(\"and\")) {\n            _this.whitespace$0();\n            t1._contents += \" and \";\n          } else\n            return;\n        }\n      }\n      for (t1 = buffer._interpolation_buffer$_text; true;) {\n        _this.whitespace$0();\n        buffer.addInterpolation$1(_this._mediaFeature$0());\n        _this.whitespace$0();\n        if (!_this.scanIdentifier$1(\"and\"))\n          break;\n        t1._contents += \" and \";\n      }\n    },\n    _mediaFeature$0: function() {\n      var interpolation, t2, t3, t4, buffer, t5, next, isAngle, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 35) {\n        interpolation = _this.singleInterpolation$0();\n        return X.Interpolation$(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());\n      }\n      t2 = t1._string_scanner$_position;\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer(t3, t4);\n      t1.expectChar$1(40);\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      _this.whitespace$0();\n      t5 = _this._expressionUntilComparison$0();\n      buffer._flushText$0();\n      t4.push(t5);\n      if (t1.scanChar$1(58)) {\n        _this.whitespace$0();\n        t3._contents += H.Primitives_stringFromCharCode(58);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n        t5 = _this.expression$0();\n        buffer._flushText$0();\n        t4.push(t5);\n      } else {\n        next = t1.peekChar$0();\n        isAngle = next === 60 || next === 62;\n        if (isAngle || next === 61) {\n          t3._contents += H.Primitives_stringFromCharCode(32);\n          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          if (isAngle && t1.scanChar$1(61))\n            t3._contents += H.Primitives_stringFromCharCode(61);\n          t3._contents += H.Primitives_stringFromCharCode(32);\n          _this.whitespace$0();\n          t5 = _this._expressionUntilComparison$0();\n          buffer._flushText$0();\n          t4.push(t5);\n          if (isAngle && t1.scanChar$1(next)) {\n            t3._contents += H.Primitives_stringFromCharCode(32);\n            t3._contents += H.Primitives_stringFromCharCode(next);\n            if (t1.scanChar$1(61))\n              t3._contents += H.Primitives_stringFromCharCode(61);\n            t3._contents += H.Primitives_stringFromCharCode(32);\n            _this.whitespace$0();\n            t5 = _this._expressionUntilComparison$0();\n            buffer._flushText$0();\n            t4.push(t5);\n          }\n        }\n      }\n      t1.expectChar$1(41);\n      _this.whitespace$0();\n      t3._contents += H.Primitives_stringFromCharCode(41);\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _expressionUntilComparison$0: function() {\n      return this.expression$1$until(new V.StylesheetParser__expressionUntilComparison_closure(this));\n    },\n    _supportsCondition$0: function() {\n      var condition, operator, right, endPosition, t3, t4, lowerOperator, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      if (_this.scanIdentifier$1(\"not\")) {\n        _this.whitespace$0();\n        return new M.SupportsNegation(_this._supportsConditionInParens$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n      }\n      condition = _this._supportsConditionInParens$0();\n      _this.whitespace$0();\n      for (operator = null; _this.lookingAtIdentifier$0();) {\n        if (operator != null)\n          _this.expectIdentifier$1(operator);\n        else if (_this.scanIdentifier$1(\"or\"))\n          operator = \"or\";\n        else {\n          _this.expectIdentifier$1(\"and\");\n          operator = \"and\";\n        }\n        _this.whitespace$0();\n        right = _this._supportsConditionInParens$0();\n        endPosition = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        t4 = new Y._FileSpan(t3, t2, endPosition);\n        t4._FileSpan$3(t3, t2, endPosition);\n        condition = new U.SupportsOperation(condition, right, operator, t4);\n        lowerOperator = operator.toLowerCase();\n        if (lowerOperator !== \"and\" && lowerOperator !== \"or\")\n          H.throwExpression(P.ArgumentError$value(operator, \"operator\", 'may only be \"and\" or \"or\".'));\n        _this.whitespace$0();\n      }\n      return condition;\n    },\n    _supportsConditionInParens$0: function() {\n      var $name, nameStart, wasInParentheses, identifier, operation, contents, identifier0, t2, $arguments, condition, exception, value, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (_this._lookingAtInterpolatedIdentifier$0()) {\n        identifier0 = _this.interpolatedIdentifier$0();\n        t2 = identifier0.get$asPlain();\n        if ((t2 == null ? null : t2.toLowerCase()) === \"not\")\n          _this.error$2(0, '\"not\" is not a valid identifier here.', identifier0.span);\n        if (t1.scanChar$1(40)) {\n          $arguments = _this._interpolatedDeclarationValue$2$allowEmpty$allowSemicolon(true, true);\n          t1.expectChar$1(41);\n          return new F.SupportsFunction(identifier0, $arguments, t1.spanFrom$1(start));\n        } else {\n          t2 = identifier0.contents;\n          if (t2.length !== 1 || !type$.legacy_Expression._is(C.JSArray_methods.get$first(t2)))\n            _this.error$2(0, \"Expected @supports condition.\", identifier0.span);\n          else\n            return new X.SupportsInterpolation(type$.legacy_Expression._as(C.JSArray_methods.get$first(t2)), t1.spanFrom$1(start));\n        }\n      }\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      if (_this.scanIdentifier$1(\"not\")) {\n        _this.whitespace$0();\n        condition = _this._supportsConditionInParens$0();\n        t1.expectChar$1(41);\n        return new M.SupportsNegation(condition, t1.spanFrom$1(start));\n      } else if (t1.peekChar$0() === 40) {\n        condition = _this._supportsCondition$0();\n        t1.expectChar$1(41);\n        return condition;\n      }\n      $name = null;\n      nameStart = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      wasInParentheses = _this._inParentheses;\n      try {\n        $name = _this.expression$0();\n        t1.expectChar$1(58);\n      } catch (exception) {\n        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {\n          t1.set$state(nameStart);\n          _this._inParentheses = wasInParentheses;\n          identifier = _this.interpolatedIdentifier$0();\n          operation = _this._trySupportsOperation$2(identifier, nameStart);\n          if (operation != null) {\n            t1.expectChar$1(41);\n            return operation;\n          }\n          t2 = new Z.InterpolationBuffer(new P.StringBuffer(\"\"), []);\n          t2.addInterpolation$1(identifier);\n          t2.addInterpolation$1(_this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(false, true, true));\n          contents = t2.interpolation$1(t1.spanFrom$1(nameStart));\n          if (t1.peekChar$0() === 58)\n            throw exception;\n          t1.expectChar$1(41);\n          return new Y.SupportsAnything(contents, t1.spanFrom$1(start));\n        } else\n          throw exception;\n      }\n      _this.whitespace$0();\n      value = _this.expression$0();\n      t1.expectChar$1(41);\n      return new L.SupportsDeclaration($name, value, t1.spanFrom$1(start));\n    },\n    _trySupportsOperation$2: function(interpolation, start) {\n      var expression, beforeWhitespace, t2, t3, operator, operation, right, t4, endPosition, t5, t6, lowerOperator, _this = this, _null = null,\n        t1 = interpolation.contents;\n      if (t1.length !== 1)\n        return _null;\n      expression = C.JSArray_methods.get$first(t1);\n      if (!type$.legacy_Expression._is(expression))\n        return _null;\n      t1 = _this.scanner;\n      beforeWhitespace = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.whitespace$0();\n      for (t2 = start.position, t3 = interpolation.span, operator = _null, operation = operator; _this.lookingAtIdentifier$0();) {\n        if (operator != null)\n          _this.expectIdentifier$1(operator);\n        else if (_this.scanIdentifier$1(\"and\"))\n          operator = \"and\";\n        else {\n          if (!_this.scanIdentifier$1(\"or\")) {\n            if (beforeWhitespace._scanner !== t1)\n              H.throwExpression(P.ArgumentError$(string$.The_gi));\n            t2 = beforeWhitespace.position;\n            if (t2 < 0 || t2 > t1.string.length)\n              H.throwExpression(P.ArgumentError$(\"Invalid position \" + t2));\n            t1._string_scanner$_position = t2;\n            return t1._lastMatch = null;\n          }\n          operator = \"or\";\n        }\n        _this.whitespace$0();\n        right = _this._supportsConditionInParens$0();\n        t4 = operation == null ? new X.SupportsInterpolation(expression, t3) : operation;\n        endPosition = t1._string_scanner$_position;\n        t5 = t1._sourceFile;\n        t6 = new Y._FileSpan(t5, t2, endPosition);\n        t6._FileSpan$3(t5, t2, endPosition);\n        operation = new U.SupportsOperation(t4, right, operator, t6);\n        lowerOperator = operator.toLowerCase();\n        if (lowerOperator !== \"and\" && lowerOperator !== \"or\")\n          H.throwExpression(P.ArgumentError$value(operator, \"operator\", 'may only be \"and\" or \"or\".'));\n        _this.whitespace$0();\n      }\n      return operation;\n    },\n    _lookingAtInterpolatedIdentifier$0: function() {\n      var second,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || first === 92)\n        return true;\n      if (first === 35)\n        return t1.peekChar$1(1) === 123;\n      if (first !== 45)\n        return false;\n      second = t1.peekChar$1(1);\n      if (second == null)\n        return false;\n      if (second === 35)\n        return t1.peekChar$1(2) === 123;\n      return second === 95 || T.isAlphabetic0(second) || second >= 128 || second === 92 || second === 45;\n    },\n    _lookingAtInterpolatedIdentifierBody$0: function() {\n      var t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic0(first) || first >= 128 || T.isDigit(first) || first === 45 || first === 92)\n        return true;\n      return first === 35 && t1.peekChar$1(1) === 123;\n    },\n    _lookingAtExpression$0: function() {\n      var next,\n        t1 = this.scanner,\n        character = t1.peekChar$0();\n      if (character == null)\n        return false;\n      if (character === 46)\n        return t1.peekChar$1(1) !== 46;\n      if (character === 33) {\n        next = t1.peekChar$1(1);\n        if (next != null)\n          if ((next | 32) !== 105)\n            t1 = next === 32 || next === 9 || T.isNewline(next);\n          else\n            t1 = true;\n        else\n          t1 = true;\n        return t1;\n      }\n      if (character !== 40)\n        if (character !== 47)\n          if (character !== 91)\n            if (character !== 39)\n              if (character !== 34)\n                if (character !== 35)\n                  if (character !== 43)\n                    if (character !== 45)\n                      if (character !== 92)\n                        if (character !== 36)\n                          if (character !== 38)\n                            t1 = character === 95 || T.isAlphabetic0(character) || character >= 128 || T.isDigit(character);\n                          else\n                            t1 = true;\n                        else\n                          t1 = true;\n                      else\n                        t1 = true;\n                    else\n                      t1 = true;\n                  else\n                    t1 = true;\n                else\n                  t1 = true;\n              else\n                t1 = true;\n            else\n              t1 = true;\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    _withChildren$1$3: function(child, start, create) {\n      var result = create.call$2(this.children$1(0, child), this.scanner.spanFrom$1(start));\n      this.whitespaceWithoutComments$0();\n      return result;\n    },\n    _withChildren$3: function(child, start, create) {\n      return this._withChildren$1$3(child, start, create, type$.dynamic);\n    },\n    _urlString$0: function() {\n      var innerError, t2, exception,\n        t1 = this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        url = this.string$0();\n      try {\n        t2 = P.Uri_parse(url);\n        return t2;\n      } catch (exception) {\n        t2 = H.unwrapException(exception);\n        if (type$.legacy_FormatException._is(t2)) {\n          innerError = t2;\n          this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), t1.spanFrom$1(start));\n        } else\n          throw exception;\n      }\n    },\n    _publicIdentifier$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        result = _this.identifier$1$normalize(true);\n      _this._assertPublic$2(result, new V.StylesheetParser__publicIdentifier_closure(_this, new S._SpanScannerState(t1, t2)));\n      return result;\n    },\n    _assertPublic$2: function(identifier, span) {\n      if (!T.isPrivate(identifier))\n        return;\n      this.error$2(0, string$.Privat, span.call$0());\n    },\n    get$plainCss: function() {\n      return false;\n    }\n  };\n  V.StylesheetParser_parse_closure.prototype = {\n    call$0: function() {\n      var statements, t4,\n        t1 = this.$this,\n        t2 = t1.scanner,\n        t3 = t2._string_scanner$_position;\n      t2.scanChar$1(65279);\n      statements = t1.statements$1(new V.StylesheetParser_parse__closure(t1));\n      t2.expectDone$0();\n      t4 = t1._globalVariables;\n      t4 = t4.get$values(t4);\n      C.JSArray_methods.addAll$1(statements, H.MappedIterable_MappedIterable(t4, new V.StylesheetParser_parse__closure0(), H._instanceType(t4)._eval$1(\"Iterable.E\"), type$.legacy_Statement));\n      return V.Stylesheet$(statements, t2.spanFrom$1(new S._SpanScannerState(t2, t3)), t1.get$plainCss());\n    },\n    $signature: 60\n  };\n  V.StylesheetParser_parse__closure.prototype = {\n    call$0: function() {\n      return this.$this._statement$1$root(true);\n    },\n    $signature: 54\n  };\n  V.StylesheetParser_parse__closure0.prototype = {\n    call$1: function(declaration) {\n      return Z.VariableDeclaration$(declaration.name, new O.NullExpression(declaration.expression.get$span()), declaration.span, null, false, true, null);\n    },\n    $signature: 344\n  };\n  V.StylesheetParser_parseArgumentDeclaration_closure.prototype = {\n    call$0: function() {\n      var $arguments,\n        t1 = this.$this,\n        t2 = t1.scanner;\n      t2.expectChar$2$name(64, \"@-rule\");\n      t1.identifier$0();\n      t1.whitespace$0();\n      t1.identifier$0();\n      $arguments = t1._argumentDeclaration$0();\n      t1.whitespace$0();\n      t2.expectChar$1(123);\n      return $arguments;\n    },\n    $signature: 345\n  };\n  V.StylesheetParser_parseVariableDeclaration_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      return t1.lookingAtIdentifier$0() ? t1._variableDeclarationWithNamespace$0() : t1.variableDeclarationWithoutNamespace$0();\n    },\n    $signature: 153\n  };\n  V.StylesheetParser_parseUseRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1.scanner,\n        t3 = t2._string_scanner$_position;\n      t2.expectChar$2$name(64, \"@-rule\");\n      t1.expectIdentifier$1(\"use\");\n      t1.whitespace$0();\n      return t1._useRule$1(new S._SpanScannerState(t2, t3));\n    },\n    $signature: 353\n  };\n  V.StylesheetParser__parseSingleProduction_closure.prototype = {\n    call$0: function() {\n      var result = this.production.call$0();\n      this.$this.scanner.expectDone$0();\n      return result;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*()\");\n    }\n  };\n  V.StylesheetParser__statement_closure.prototype = {\n    call$0: function() {\n      return this.$this._statement$0();\n    },\n    $signature: 54\n  };\n  V.StylesheetParser_variableDeclarationWithoutNamespace_closure.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this._box_0.start);\n    },\n    $signature: 32\n  };\n  V.StylesheetParser_variableDeclarationWithoutNamespace_closure0.prototype = {\n    call$0: function() {\n      return this.declaration;\n    },\n    $signature: 153\n  };\n  V.StylesheetParser__declarationOrBuffer_closure.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$(this.name, span, children, null);\n    },\n    $signature: 68\n  };\n  V.StylesheetParser__declarationOrBuffer_closure0.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$(this.name, span, children, this._box_0.value);\n    },\n    $signature: 68\n  };\n  V.StylesheetParser__styleRule_closure.prototype = {\n    call$2: function(children, span) {\n      var t2, _this = this,\n        t1 = _this.$this;\n      if (t1.get$indented() && children.length === 0)\n        t1.logger.warn$2$span(0, string$.This_s, _this._box_0.interpolation.span);\n      t1._inStyleRule = _this.wasInStyleRule;\n      t2 = _this._box_0;\n      return X.StyleRule$(t2.interpolation, children, t1.scanner.spanFrom$1(t2.start));\n    },\n    $signature: 371\n  };\n  V.StylesheetParser__propertyOrVariableDeclaration_closure.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$(this._box_0.name, span, children, null);\n    },\n    $signature: 68\n  };\n  V.StylesheetParser__propertyOrVariableDeclaration_closure0.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$(this._box_0.name, span, children, this.value);\n    },\n    $signature: 68\n  };\n  V.StylesheetParser__atRootRule_closure.prototype = {\n    call$2: function(children, span) {\n      return V.AtRootRule$(children, span, this.query);\n    },\n    $signature: 152\n  };\n  V.StylesheetParser__atRootRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return V.AtRootRule$(children, span, null);\n    },\n    $signature: 152\n  };\n  V.StylesheetParser__eachRule_closure.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      _this.$this._inControlDirective = _this.wasInControlDirective;\n      return V.EachRule$(_this.variables, _this.list, children, span);\n    },\n    $signature: 374\n  };\n  V.StylesheetParser__functionRule_closure.prototype = {\n    call$2: function(children, span) {\n      return M.FunctionRule$(this.name, this.$arguments, children, span, this.precedingComment);\n    },\n    $signature: 376\n  };\n  V.StylesheetParser__forRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if (!t1.lookingAtIdentifier$0())\n        return false;\n      if (t1.scanIdentifier$1(\"to\"))\n        return this._box_0.exclusive = true;\n      else if (t1.scanIdentifier$1(\"through\")) {\n        this._box_0.exclusive = false;\n        return true;\n      } else\n        return false;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__forRule_closure0.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      _this.$this._inControlDirective = _this.wasInControlDirective;\n      return B.ForRule$(_this.variable, _this.from, _this.to, children, span, _this._box_0.exclusive);\n    },\n    $signature: 380\n  };\n  V.StylesheetParser__memberList_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if (t1.scanner.peekChar$0() === 36)\n        this.variables.add$1(0, t1.variableName$0());\n      else\n        this.identifiers.add$1(0, t1.identifier$1$normalize(true));\n    },\n    $signature: 0\n  };\n  V.StylesheetParser__includeRule_closure.prototype = {\n    call$2: function(children, span) {\n      return Y.ContentBlock$(this._box_0.contentArguments, children, span);\n    },\n    $signature: 385\n  };\n  V.StylesheetParser_mediaRule_closure.prototype = {\n    call$2: function(children, span) {\n      return G.MediaRule$(this.query, children, span);\n    },\n    $signature: 386\n  };\n  V.StylesheetParser__mixinRule_closure.prototype = {\n    call$2: function(children, span) {\n      var _this = this,\n        t1 = _this.$this,\n        hadContent = t1._mixinHasContent;\n      t1._stylesheet$_inMixin = false;\n      t1._mixinHasContent = null;\n      return T.MixinRule$(_this.name, _this.$arguments, children, span, _this.precedingComment, hadContent);\n    },\n    $signature: 389\n  };\n  V.StylesheetParser_mozDocumentRule_closure.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      if (_this._box_0.needsDeprecationWarning)\n        _this.$this.logger.warn$3$deprecation$span(0, string$.x40_moz_, true, span);\n      return U.AtRule$(_this.name, span, children, _this.value);\n    },\n    $signature: 151\n  };\n  V.StylesheetParser_supportsRule_closure.prototype = {\n    call$2: function(children, span) {\n      return B.SupportsRule$(this.condition, children, span);\n    },\n    $signature: 403\n  };\n  V.StylesheetParser__whileRule_closure.prototype = {\n    call$2: function(children, span) {\n      this.$this._inControlDirective = this.wasInControlDirective;\n      return G.WhileRule$(this.condition, children, span);\n    },\n    $signature: 409\n  };\n  V.StylesheetParser_unknownAtRule_closure.prototype = {\n    call$2: function(children, span) {\n      return U.AtRule$(this.name, span, children, this._box_0.value);\n    },\n    $signature: 151\n  };\n  V.StylesheetParser_expression_resetState.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      t1.operands = t1.operators = t1.spaceExpressions = t1.commaExpressions = null;\n      t2 = this.$this;\n      t2.scanner.set$state(this.start);\n      t1.allowSlash = t2.lookingAtNumber$0();\n      t1.singleExpression = t2._singleExpression$0();\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_resolveOneOperation.prototype = {\n    call$0: function() {\n      var t2, t3,\n        t1 = this._box_0,\n        operator = t1.operators.pop();\n      if (operator !== C.BinaryOperator_RTB)\n        t1.allowSlash = false;\n      t2 = t1.allowSlash && !this.$this._inParentheses;\n      t3 = t1.operands;\n      if (t2)\n        t1.singleExpression = new V.BinaryOperationExpression(C.BinaryOperator_RTB, t3.pop(), t1.singleExpression, true);\n      else\n        t1.singleExpression = new V.BinaryOperationExpression(operator, t3.pop(), t1.singleExpression, false);\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_resolveOperations.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      if (t1.operators == null)\n        return;\n      for (t2 = this.resolveOneOperation; t1.operators.length !== 0;)\n        t2.call$0();\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_addSingleExpression.prototype = {\n    call$2$number: function(expression, number) {\n      var t2, _this = this,\n        t1 = _this._box_0;\n      if (t1.singleExpression != null) {\n        t2 = _this.$this;\n        if (t2._inParentheses) {\n          t2._inParentheses = false;\n          if (t1.allowSlash) {\n            _this.resetState.call$0();\n            return;\n          }\n        }\n        if (t1.spaceExpressions == null)\n          t1.spaceExpressions = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n        _this.resolveOperations.call$0();\n        t1.spaceExpressions.push(t1.singleExpression);\n        t1.allowSlash = number;\n      } else if (!number)\n        t1.allowSlash = false;\n      t1.singleExpression = expression;\n    },\n    call$1: function(expression) {\n      return this.call$2$number(expression, false);\n    },\n    $signature: 417\n  };\n  V.StylesheetParser_expression_addOperator.prototype = {\n    call$1: function(operator) {\n      var t2, t3, t4, t5, singleExpression,\n        t1 = this.$this;\n      if (t1.get$plainCss() && operator !== C.BinaryOperator_RTB && operator !== C.BinaryOperator_kjl) {\n        t2 = t1.scanner;\n        t3 = operator.operator.length;\n        t2.error$3$length$position(0, \"Operators aren't allowed in plain CSS.\", t3, t2._string_scanner$_position - t3);\n      }\n      t2 = this._box_0;\n      t2.allowSlash = t2.allowSlash && operator === C.BinaryOperator_RTB;\n      if (t2.operators == null)\n        t2.operators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BinaryOperator);\n      if (t2.operands == null)\n        t2.operands = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n      t3 = this.resolveOneOperation;\n      t4 = operator.precedence;\n      while (true) {\n        t5 = t2.operators;\n        if (!(t5.length !== 0 && C.JSArray_methods.get$last(t5).precedence >= t4))\n          break;\n        t3.call$0();\n      }\n      t2.operators.push(operator);\n      t2.operands.push(t2.singleExpression);\n      t1.whitespace$0();\n      t2.allowSlash = t2.allowSlash && t1.lookingAtNumber$0();\n      singleExpression = t1._singleExpression$0();\n      t2.singleExpression = singleExpression;\n      t2.allowSlash = t2.allowSlash && singleExpression instanceof T.NumberExpression;\n    },\n    $signature: 420\n  };\n  V.StylesheetParser_expression_resolveSpaceExpressions.prototype = {\n    call$0: function() {\n      var t1, t2;\n      this.resolveOperations.call$0();\n      t1 = this._box_0;\n      t2 = t1.spaceExpressions;\n      if (t2 != null) {\n        t2.push(t1.singleExpression);\n        t1.singleExpression = D.ListExpression$(t1.spaceExpressions, C.ListSeparator_space, false, null);\n        t1.spaceExpressions = null;\n      }\n    },\n    $signature: 1\n  };\n  V.StylesheetParser__expressionUntilComma_closure.prototype = {\n    call$0: function() {\n      return this.$this.scanner.peekChar$0() === 44;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__unicodeRange_closure.prototype = {\n    call$1: function(char) {\n      return char != null && T.isHex(char);\n    },\n    $signature: 24\n  };\n  V.StylesheetParser__unicodeRange_closure0.prototype = {\n    call$1: function(char) {\n      return char != null && T.isHex(char);\n    },\n    $signature: 24\n  };\n  V.StylesheetParser_identifierLike_closure.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this.start);\n    },\n    $signature: 32\n  };\n  V.StylesheetParser__expressionUntilComparison_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this.scanner,\n        next = t1.peekChar$0();\n      if (next === 61)\n        return t1.peekChar$1(1) !== 61;\n      return next === 60 || next === 62;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__publicIdentifier_closure.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this.start);\n    },\n    $signature: 32\n  };\n  M.StylesheetGraph.prototype = {\n    modifiedSince$3: function(url, since, baseImporter) {\n      var node = this._stylesheet_graph$_add$3(url, baseImporter, null);\n      if (node == null)\n        return true;\n      return new M.StylesheetGraph_modifiedSince_transitiveModificationTime(this).call$1(node)._value > since._value;\n    },\n    _stylesheet_graph$_add$3: function(url, baseImporter, baseUrl) {\n      var t1, t2, _this = this,\n        tuple = _this._ignoreErrors$1(new M.StylesheetGraph__add_closure(_this, url, baseImporter, baseUrl));\n      if (tuple == null)\n        return null;\n      t1 = tuple.item1;\n      t2 = tuple.item2;\n      _this.addCanonical$3(t1, t2, tuple.item3);\n      return _this._nodes.$index(0, t2);\n    },\n    addCanonical$4$recanonicalize: function(importer, canonicalUrl, originalUrl, recanonicalize) {\n      var stylesheet, _this = this,\n        t1 = _this._nodes;\n      if (t1.$index(0, canonicalUrl) != null)\n        return C.Set_empty1;\n      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph_addCanonical_closure(_this, importer, canonicalUrl, originalUrl));\n      if (stylesheet == null)\n        return C.Set_empty1;\n      t1.$indexSet(0, canonicalUrl, M.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl)));\n      return recanonicalize ? _this._recanonicalizeImports$2(importer, canonicalUrl) : C.Set_empty1;\n    },\n    addCanonical$3: function(importer, canonicalUrl, originalUrl) {\n      return this.addCanonical$4$recanonicalize(importer, canonicalUrl, originalUrl, true);\n    },\n    _upstreamNodes$3: function(stylesheet, baseImporter, baseUrl) {\n      var t4, t5, t6, t7,\n        t1 = type$.legacy_Uri,\n        active = P.LinkedHashSet_LinkedHashSet$_literal([baseUrl], t1),\n        t2 = type$.JSArray_legacy_Uri,\n        t3 = H.setRuntimeTypeInfo([], t2);\n      t2 = H.setRuntimeTypeInfo([], t2);\n      new F._FindDependenciesVisitor(t3, t2).visitChildren$1(stylesheet);\n      t4 = type$.legacy_StylesheetNode;\n      t5 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t4);\n      for (t6 = C.JSArray_methods.get$iterator(t3); t6.moveNext$0();) {\n        t7 = t6.get$current(t6);\n        t5.$indexSet(0, t7, this._nodeFor$4(t7, baseImporter, baseUrl, active));\n      }\n      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t4);\n      for (t2 = J.get$iterator$ax(new S.Tuple2(t3, t2, type$.Tuple2_of_legacy_List_legacy_Uri_and_legacy_List_legacy_Uri).item2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, t3, this._nodeFor$5$forImport(t3, baseImporter, baseUrl, active, true));\n      }\n      return new S.Tuple2(t5, t1, type$.Tuple2_of_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode_and_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode);\n    },\n    reload$1: function(canonicalUrl) {\n      var stylesheet, upstream, _this = this,\n        node = _this._nodes.$index(0, canonicalUrl);\n      if (node == null)\n        throw H.wrapException(P.StateError$(canonicalUrl.toString$0(0) + \" is not in the dependency graph.\"));\n      _this._transitiveModificationTimes.clear$0(0);\n      _this.importCache.clearImport$1(canonicalUrl);\n      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph_reload_closure(_this, node, canonicalUrl));\n      if (stylesheet == null)\n        return false;\n      node._stylesheet_graph$_stylesheet = stylesheet;\n      upstream = _this._upstreamNodes$3(stylesheet, node.importer, canonicalUrl);\n      node._replaceUpstream$2(upstream.item1, upstream.item2);\n      return true;\n    },\n    _recanonicalizeImports$2: function(importer, canonicalUrl) {\n      var t2, t3, t4, t5, newUpstream, newUpstreamImports, _this = this,\n        t1 = type$.legacy_StylesheetNode,\n        changed = P.LinkedHashSet_LinkedHashSet$_empty(t1);\n      for (t2 = _this._nodes, t3 = type$.UnmodifiableMapView_of_legacy_Uri_and_legacy_StylesheetNode, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2), t4 = type$.legacy_Uri; t2.moveNext$0();) {\n        t5 = t2.get$current(t2);\n        newUpstream = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, false);\n        newUpstreamImports = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, true);\n        if (newUpstream.get$isNotEmpty(newUpstream) || newUpstreamImports.get$isNotEmpty(newUpstreamImports)) {\n          changed.add$1(0, t5);\n          t5._replaceUpstream$2(Y.mergeMaps(new P.UnmodifiableMapView(t5._upstream, t3), newUpstream, t4, t1), Y.mergeMaps(new P.UnmodifiableMapView(t5._upstreamImports, t3), newUpstreamImports, t4, t1));\n        }\n      }\n      if (changed._collection$_length !== 0)\n        _this._transitiveModificationTimes.clear$0(0);\n      return changed;\n    },\n    _recanonicalizeImportsForNode$4$forImport: function(node, importer, canonicalUrl, forImport) {\n      var t1 = type$.UnmodifiableMapView_of_legacy_Uri_and_legacy_StylesheetNode,\n        map = forImport ? new P.UnmodifiableMapView(node._upstreamImports, t1) : new P.UnmodifiableMapView(node._upstream, t1),\n        newMap = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_StylesheetNode);\n      map._collection$_map.forEach$1(0, new M.StylesheetGraph__recanonicalizeImportsForNode_closure(this, importer, canonicalUrl, node, forImport, newMap));\n      return newMap;\n    },\n    _nodeFor$5$forImport: function(url, baseImporter, baseUrl, active, forImport) {\n      var importer, canonicalUrl, resolvedUrl, t1, stylesheet, node, _this = this,\n        tuple = _this._ignoreErrors$1(new M.StylesheetGraph__nodeFor_closure(_this, url, baseImporter, baseUrl, forImport));\n      if (tuple == null)\n        return null;\n      importer = tuple.item1;\n      canonicalUrl = tuple.item2;\n      resolvedUrl = tuple.item3;\n      t1 = _this._nodes;\n      if (t1.containsKey$1(canonicalUrl))\n        return t1.$index(0, canonicalUrl);\n      if (active.contains$1(0, canonicalUrl))\n        return null;\n      stylesheet = _this._ignoreErrors$1(new M.StylesheetGraph__nodeFor_closure0(_this, importer, canonicalUrl, resolvedUrl));\n      if (stylesheet == null)\n        return null;\n      active.add$1(0, canonicalUrl);\n      node = M.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl));\n      active.remove$1(0, canonicalUrl);\n      t1.$indexSet(0, canonicalUrl, node);\n      return node;\n    },\n    _nodeFor$4: function(url, baseImporter, baseUrl, active) {\n      return this._nodeFor$5$forImport(url, baseImporter, baseUrl, active, false);\n    },\n    _ignoreErrors$1$1: function(callback) {\n      var t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        H.unwrapException(exception);\n        return null;\n      }\n    },\n    _ignoreErrors$1: function(callback) {\n      return this._ignoreErrors$1$1(callback, type$.dynamic);\n    }\n  };\n  M.StylesheetGraph_modifiedSince_transitiveModificationTime.prototype = {\n    call$1: function(node) {\n      return this.$this._transitiveModificationTimes.putIfAbsent$2(node.canonicalUrl, new M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure(node, this));\n    },\n    $signature: 421\n  };\n  M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure.prototype = {\n    call$0: function() {\n      var t2, t3, upstreamTime,\n        t1 = this.node,\n        latest = t1.importer.modificationTime$1(t1.canonicalUrl);\n      for (t2 = t1._upstream, t2 = t2.get$values(t2), t1 = t1._upstreamImports, t1 = t2.followedBy$1(0, t1.get$values(t1)), t1 = new H.FollowedByIterator(J.get$iterator$ax(t1.__internal$_first), t1._second), t2 = this.transitiveModificationTime; t1.moveNext$0();) {\n        t3 = t1._currentIterator;\n        t3 = t3.get$current(t3);\n        upstreamTime = t3 == null ? new P.DateTime(Date.now(), false) : t2.call$1(t3);\n        if (upstreamTime._value > latest._value)\n          latest = upstreamTime;\n      }\n      return latest;\n    },\n    $signature: 125\n  };\n  M.StylesheetGraph__add_closure.prototype = {\n    call$0: function() {\n      var _this = this;\n      return _this.$this.importCache.canonicalize$3$baseImporter$baseUrl(_this.url, _this.baseImporter, _this.baseUrl);\n    },\n    $signature: 112\n  };\n  M.StylesheetGraph_addCanonical_closure.prototype = {\n    call$0: function() {\n      var _this = this;\n      return _this.$this.importCache.importCanonical$3(_this.importer, _this.canonicalUrl, _this.originalUrl);\n    },\n    $signature: 60\n  };\n  M.StylesheetGraph_reload_closure.prototype = {\n    call$0: function() {\n      return this.$this.importCache.importCanonical$2(this.node.importer, this.canonicalUrl);\n    },\n    $signature: 60\n  };\n  M.StylesheetGraph__recanonicalizeImportsForNode_closure.prototype = {\n    call$2: function(url, upstream) {\n      var result, t1, t2, t3, t4, exception, newCanonicalUrl, _this = this;\n      if (!_this.importer.couldCanonicalize$2(url, _this.canonicalUrl))\n        return;\n      t1 = _this.$this;\n      t2 = t1.importCache;\n      t3 = t2._canonicalizeCache;\n      t4 = type$.Tuple2_of_legacy_Uri_and_legacy_bool;\n      t3.remove$1(0, new S.Tuple2(url, false, t4));\n      t3.remove$1(0, new S.Tuple2(url, true, t4));\n      result = null;\n      try {\n        t3 = _this.node;\n        result = t2.canonicalize$4$baseImporter$baseUrl$forImport(url, t3.importer, t3.canonicalUrl, _this.forImport);\n      } catch (exception) {\n        H.unwrapException(exception);\n      }\n      t2 = result;\n      newCanonicalUrl = t2 == null ? null : t2.item2;\n      if (J.$eq$(newCanonicalUrl, upstream == null ? null : upstream.canonicalUrl))\n        return;\n      t1 = result == null ? null : t1._nodes.$index(0, result.item2);\n      _this.newMap.$indexSet(0, url, t1);\n    },\n    $signature: 422\n  };\n  M.StylesheetGraph__nodeFor_closure.prototype = {\n    call$0: function() {\n      var _this = this;\n      return _this.$this.importCache.canonicalize$4$baseImporter$baseUrl$forImport(_this.url, _this.baseImporter, _this.baseUrl, _this.forImport);\n    },\n    $signature: 112\n  };\n  M.StylesheetGraph__nodeFor_closure0.prototype = {\n    call$0: function() {\n      var _this = this;\n      return _this.$this.importCache.importCanonical$3(_this.importer, _this.canonicalUrl, _this.resolvedUrl);\n    },\n    $signature: 60\n  };\n  M.StylesheetNode.prototype = {\n    StylesheetNode$_$4: function(_stylesheet, importer, canonicalUrl, allUpstream) {\n      var t1, t2;\n      for (t1 = this._upstream, t1 = t1.get$values(t1), t2 = this._upstreamImports, t2 = t1.followedBy$1(0, t2.get$values(t2)), t2 = new H.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2._second); t2.moveNext$0();) {\n        t1 = t2._currentIterator;\n        t1 = t1.get$current(t1);\n        if (t1 != null)\n          t1._downstream.add$1(0, this);\n      }\n    },\n    _replaceUpstream$2: function(newUpstream, newUpstreamImports) {\n      var t3, _this = this,\n        t1 = type$.legacy_StylesheetNode,\n        t2 = P.LinkedHashSet_LinkedHashSet(t1);\n      for (t3 = _this._upstream, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)\n        t2.add$1(0, t3.get$current(t3));\n      for (t3 = _this._upstreamImports, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)\n        t2.add$1(0, t3.get$current(t3));\n      t2.remove$1(0, null);\n      t1 = P.LinkedHashSet_LinkedHashSet(t1);\n      for (t3 = newUpstream.get$values(newUpstream), t3 = t3.get$iterator(t3); t3.moveNext$0();)\n        t1.add$1(0, t3.get$current(t3));\n      for (t3 = newUpstreamImports.get$values(newUpstreamImports), t3 = t3.get$iterator(t3); t3.moveNext$0();)\n        t1.add$1(0, t3.get$current(t3));\n      t1.remove$1(0, null);\n      for (t3 = t2.difference$1(t1), t3 = P._LinkedHashSetIterator$(t3, t3._collection$_modifications); t3.moveNext$0();)\n        t3._collection$_current._downstream.remove$1(0, _this);\n      for (t1 = t1.difference$1(t2), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();)\n        t1._collection$_current._downstream.add$1(0, _this);\n      _this._upstream = newUpstream;\n      _this._upstreamImports = newUpstreamImports;\n    },\n    _stylesheet_graph$_remove$0: function() {\n      var t2, t3, t4, _i, url, _this = this,\n        t1 = P.LinkedHashSet_LinkedHashSet(type$.legacy_StylesheetNode);\n      for (t2 = _this._upstream, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.add$1(0, t2.get$current(t2));\n      for (t2 = _this._upstreamImports, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.add$1(0, t2.get$current(t2));\n      t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications);\n      for (; t1.moveNext$0();) {\n        t2 = t1._collection$_current;\n        if (t2 == null)\n          continue;\n        t2._downstream.remove$1(0, _this);\n      }\n      for (t1 = _this._downstream, t1 = t1.get$iterator(t1); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        for (t3 = t2._upstream, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {\n          url = t3[_i];\n          if (J.$eq$(t2._upstream.$index(0, url), _this)) {\n            t2._upstream.$indexSet(0, url, null);\n            break;\n          }\n        }\n        for (t3 = t2._upstreamImports, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {\n          url = t3[_i];\n          if (J.$eq$(t2._upstreamImports.$index(0, url), _this)) {\n            t2._upstreamImports.$indexSet(0, url, null);\n            break;\n          }\n        }\n      }\n    },\n    toString$0: function(_) {\n      var t1 = this._stylesheet_graph$_stylesheet.span.file;\n      return $.$get$context().prettyUri$1(t1.url);\n    }\n  };\n  M.Syntax.prototype = {\n    toString$0: function(_) {\n      return this._syntax$_name;\n    }\n  };\n  G.FixedLengthListBuilder.prototype = {\n    add$1: function(_, element) {\n      var t1, _this = this;\n      _this._checkUnbuilt$0();\n      t1 = _this._fixed_length_list_builder$_index;\n      _this._list[t1] = element;\n      _this._fixed_length_list_builder$_index = t1 + 1;\n    },\n    addAll$1: function(_, elements) {\n      var _this = this;\n      _this._checkUnbuilt$0();\n      C.JSArray_methods.setAll$2(_this._list, _this._fixed_length_list_builder$_index, elements);\n      _this._fixed_length_list_builder$_index = _this._fixed_length_list_builder$_index + elements.length;\n    },\n    addRange$3: function(elements, start, end) {\n      var $length, t1, _this = this;\n      _this._checkUnbuilt$0();\n      $length = (end == null ? J.get$length$asx(elements._collection$_source) : end) - start;\n      t1 = _this._fixed_length_list_builder$_index;\n      C.JSArray_methods.setRange$4(_this._list, t1, t1 + $length, elements, start);\n      _this._fixed_length_list_builder$_index += $length;\n    },\n    addRange$2: function(elements, start) {\n      return this.addRange$3(elements, start, null);\n    },\n    build$0: function() {\n      this._checkUnbuilt$0();\n      this._fixed_length_list_builder$_index = -1;\n      return this._list;\n    },\n    _checkUnbuilt$0: function() {\n      if (this._fixed_length_list_builder$_index === -1)\n        throw H.wrapException(P.StateError$(\"build() has already been called.\"));\n    }\n  };\n  K.LimitedMapView.prototype = {\n    get$keys: function(_) {\n      return this._limited_map_view$_keys;\n    },\n    get$length: function(_) {\n      return this._limited_map_view$_keys._collection$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._limited_map_view$_keys._collection$_length === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this._limited_map_view$_keys._collection$_length !== 0;\n    },\n    $index: function(_, key) {\n      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.$index(0, key) : null;\n    },\n    containsKey$1: function(key) {\n      return this._limited_map_view$_keys.contains$1(0, key);\n    },\n    remove$1: function(_, key) {\n      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.remove$1(0, key) : null;\n    }\n  };\n  Z.MergedMapView.prototype = {\n    get$keys: function(_) {\n      var t1 = this._mapsByKey;\n      return t1.get$keys(t1);\n    },\n    get$length: function(_) {\n      var t1 = this._mapsByKey;\n      return t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._mapsByKey;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._mapsByKey;\n      return t1.get$isNotEmpty(t1);\n    },\n    MergedMapView$1: function(maps, $K, $V) {\n      var t1, t2, t3, _i, map, t4, t5;\n      for (t1 = maps.length, t2 = this._mapsByKey, t3 = $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"MergedMapView<1*,2*>*\"), _i = 0; _i < maps.length; maps.length === t1 || (0, H.throwConcurrentModificationError)(maps), ++_i) {\n        map = maps[_i];\n        if (t3._is(map))\n          for (t4 = map._mapsByKey, t4 = t4.get$values(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            B.setAll(t2, t5.get$keys(t5), t5);\n          }\n        else\n          B.setAll(t2, map.get$keys(map), map);\n      }\n    },\n    $index: function(_, key) {\n      var child = this._mapsByKey.$index(0, key);\n      return child == null ? null : child.$index(0, key);\n    },\n    $indexSet: function(_, key, value) {\n      var child = this._mapsByKey.$index(0, key);\n      if (child == null)\n        throw H.wrapException(P.UnsupportedError$(string$.New_en));\n      child.$indexSet(0, key, value);\n    },\n    remove$1: function(_, key) {\n      throw H.wrapException(P.UnsupportedError$(string$.Entrie));\n    },\n    containsKey$1: function(key) {\n      return this._mapsByKey.containsKey$1(key);\n    }\n  };\n  U.MultiDirWatcher.prototype = {\n    watch$1: function(_, directory) {\n      var t1, t2, t3, t4, isParentOfExistingDir, _i, existingDir, t5, future, completer;\n      for (t1 = this._watchers, t2 = t1.get$keys(t1), t2 = P.List_List$from(t2, true, H._instanceType(t2)._eval$1(\"Iterable.E\")), t3 = t2.length, t4 = this._group, isParentOfExistingDir = false, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        existingDir = t2[_i];\n        if (!isParentOfExistingDir) {\n          t5 = $.$get$context();\n          t5 = t5._isWithinOrEquals$2(existingDir, directory) === C._PathRelation_equal || t5._isWithinOrEquals$2(existingDir, directory) === C._PathRelation_within;\n        } else\n          t5 = false;\n        if (t5) {\n          t1 = new P._Future($.Zone__current, type$._Future_void);\n          t1._asyncComplete$1(null);\n          return t1;\n        }\n        if ($.$get$context()._isWithinOrEquals$2(directory, existingDir) === C._PathRelation_within) {\n          t4.remove$1(0, t1.remove$1(0, existingDir));\n          isParentOfExistingDir = true;\n        }\n      }\n      future = B.watchDir(directory, this._poll);\n      t2 = new Y._CompleterStream(type$._CompleterStream_legacy_WatchEvent);\n      completer = new Y.StreamCompleter(t2, type$.StreamCompleter_legacy_WatchEvent);\n      future.then$1$2$onError(0, completer.get$setSourceStream(), completer.get$setError(), type$.void);\n      t1.$indexSet(0, directory, t2);\n      t4.add$1(0, t2);\n      return future;\n    }\n  };\n  N.NoSourceMapBuffer0.prototype = {\n    get$length: function(_) {\n      return this._no_source_map_buffer0$_buffer._contents.length;\n    },\n    get$sourceFiles: function() {\n      return C.Map_empty;\n    },\n    forSpan$1$2: function(span, callback) {\n      return callback.call$0();\n    },\n    forSpan$2: function(span, callback) {\n      return this.forSpan$1$2(span, callback, type$.dynamic);\n    },\n    write$1: function(_, object) {\n      this._no_source_map_buffer0$_buffer._contents += H.S(object);\n      return null;\n    },\n    writeCharCode$1: function(charCode) {\n      this._no_source_map_buffer0$_buffer._contents += H.Primitives_stringFromCharCode(charCode);\n      return null;\n    },\n    toString$0: function(_) {\n      var t1 = this._no_source_map_buffer0$_buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    buildSourceMap$1$prefix: function(prefix) {\n      return H.throwExpression(P.UnsupportedError$(string$.NoSour));\n    },\n    $isStringBuffer: 1\n  };\n  F.PrefixedMapView.prototype = {\n    get$keys: function(_) {\n      return new F._PrefixedKeys(this);\n    },\n    get$length: function(_) {\n      var t1 = this._prefixed_map_view$_map;\n      return t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._prefixed_map_view$_map;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._prefixed_map_view$_map;\n      return t1.get$isNotEmpty(t1);\n    },\n    $index: function(_, key) {\n      return typeof key == \"string\" && C.JSString_methods.startsWith$1(key, this._prefix) ? this._prefixed_map_view$_map.$index(0, J.substring$1$s(key, this._prefix.length)) : null;\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && C.JSString_methods.startsWith$1(key, this._prefix) && this._prefixed_map_view$_map.containsKey$1(J.substring$1$s(key, this._prefix.length));\n    }\n  };\n  F._PrefixedKeys.prototype = {\n    get$length: function(_) {\n      var t1 = this._view._prefixed_map_view$_map;\n      return t1.get$length(t1);\n    },\n    get$iterator: function(_) {\n      var t1 = this._view._prefixed_map_view$_map;\n      t1 = J.map$1$1$ax(t1.get$keys(t1), new F._PrefixedKeys_iterator_closure(this), type$.legacy_String);\n      return t1.get$iterator(t1);\n    },\n    contains$1: function(_, key) {\n      return this._view.containsKey$1(key);\n    }\n  };\n  F._PrefixedKeys_iterator_closure.prototype = {\n    call$1: function(key) {\n      return this.$this._view._prefix + H.S(key);\n    },\n    $signature: 8\n  };\n  U.PublicMemberMapView.prototype = {\n    get$keys: function(_) {\n      var t1 = this._inner;\n      return J.where$1$ax(t1.get$keys(t1), B.utils__isPublic$closure());\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && B.isPublic(key) && this._inner.containsKey$1(key);\n    },\n    $index: function(_, key) {\n      if (typeof key == \"string\" && B.isPublic(key))\n        return this._inner.$index(0, key);\n      return null;\n    }\n  };\n  D.SourceMapBuffer0.prototype = {\n    get$sourceFiles: function() {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_SourceFile);\n      for (t2 = this._sourceFiles, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, J.toString$0$(t3.key), t3.value);\n      }\n      return new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_SourceFile);\n    },\n    get$_source_map_buffer0$_targetLocation: function() {\n      var t1 = this._source_map_buffer0$_buffer._contents,\n        t2 = this._source_map_buffer0$_line;\n      return V.SourceLocation$(t1.length, this._source_map_buffer0$_column, t2, null);\n    },\n    get$length: function(_) {\n      return this._source_map_buffer0$_buffer._contents.length;\n    },\n    forSpan$1$2: function(span, callback) {\n      var t1, _this = this,\n        wasInSpan = _this._source_map_buffer0$_inSpan;\n      _this._source_map_buffer0$_inSpan = true;\n      _this._addEntry$2(Y.FileLocation$_(span.file, span._file$_start), _this.get$_source_map_buffer0$_targetLocation());\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } finally {\n        _this._source_map_buffer0$_inSpan = wasInSpan;\n      }\n    },\n    forSpan$2: function(span, callback) {\n      return this.forSpan$1$2(span, callback, type$.dynamic);\n    },\n    _addEntry$2: function(source, target) {\n      var entry, t2,\n        t1 = this._source_map_buffer0$_entries;\n      if (t1.length !== 0) {\n        entry = C.JSArray_methods.get$last(t1);\n        t2 = entry.source;\n        if (t2.file.getLine$1(t2.offset) == source.file.getLine$1(source.offset) && entry.target.line === target.line)\n          return;\n        if (entry.target.offset === target.offset)\n          return;\n      }\n      this._sourceFiles.putIfAbsent$2(source.file.url, new D.SourceMapBuffer__addEntry_closure(source));\n      t1.push(new L.Entry(source, target, null));\n    },\n    write$1: function(_, object) {\n      var t1, i,\n        string = J.toString$0$(object);\n      this._source_map_buffer0$_buffer._contents += H.S(string);\n      for (t1 = string.length, i = 0; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1(string, i) === 10)\n          this._source_map_buffer0$_writeLine$0();\n        else\n          ++this._source_map_buffer0$_column;\n    },\n    writeCharCode$1: function(charCode) {\n      this._source_map_buffer0$_buffer._contents += H.Primitives_stringFromCharCode(charCode);\n      if (charCode === 10)\n        this._source_map_buffer0$_writeLine$0();\n      else\n        ++this._source_map_buffer0$_column;\n    },\n    _source_map_buffer0$_writeLine$0: function() {\n      var _this = this,\n        t1 = _this._source_map_buffer0$_entries;\n      if (C.JSArray_methods.get$last(t1).target.line === _this._source_map_buffer0$_line && C.JSArray_methods.get$last(t1).target.column === _this._source_map_buffer0$_column)\n        t1.pop();\n      ++_this._source_map_buffer0$_line;\n      _this._source_map_buffer0$_column = 0;\n      if (_this._source_map_buffer0$_inSpan)\n        t1.push(new L.Entry(C.JSArray_methods.get$last(t1).source, _this.get$_source_map_buffer0$_targetLocation(), null));\n    },\n    toString$0: function(_) {\n      var t1 = this._source_map_buffer0$_buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    buildSourceMap$1$prefix: function(prefix) {\n      var i, t2, prefixColumn, _box_0 = {},\n        t1 = prefix.length;\n      if (t1 === 0)\n        return T.SingleMapping_SingleMapping$fromEntries(this._source_map_buffer0$_entries);\n      _box_0.prefixColumn = _box_0.prefixLines = 0;\n      for (i = 0, t2 = 0; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1(prefix, i) === 10) {\n          ++_box_0.prefixLines;\n          _box_0.prefixColumn = 0;\n          t2 = 0;\n        } else {\n          prefixColumn = t2 + 1;\n          _box_0.prefixColumn = prefixColumn;\n          t2 = prefixColumn;\n        }\n      t2 = this._source_map_buffer0$_entries;\n      return T.SingleMapping_SingleMapping$fromEntries(new H.MappedListIterable(t2, new D.SourceMapBuffer_buildSourceMap_closure(_box_0, t1), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Entry*>\")));\n    },\n    $isStringBuffer: 1\n  };\n  D.SourceMapBuffer__addEntry_closure.prototype = {\n    call$0: function() {\n      return this.source.file;\n    },\n    $signature: 96\n  };\n  D.SourceMapBuffer_buildSourceMap_closure.prototype = {\n    call$1: function(entry) {\n      var t1 = entry.source,\n        t2 = entry.target,\n        t3 = t2.line,\n        t4 = this._box_0,\n        t5 = t4.prefixLines;\n      t4 = t3 === 0 ? t4.prefixColumn : 0;\n      return new L.Entry(t1, V.SourceLocation$(t2.offset + this.prefixLength, t2.column + t4, t3 + t5, null), entry.identifierName);\n    },\n    $signature: 149\n  };\n  R.UnprefixedMapView.prototype = {\n    get$keys: function(_) {\n      return new R._UnprefixedKeys(this);\n    },\n    $index: function(_, key) {\n      return typeof key == \"string\" ? this._unprefixed_map_view$_map.$index(0, J.$add$ansx(this._unprefixed_map_view$_prefix, key)) : null;\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && this._unprefixed_map_view$_map.containsKey$1(J.$add$ansx(this._unprefixed_map_view$_prefix, key));\n    },\n    remove$1: function(_, key) {\n      return typeof key == \"string\" ? this._unprefixed_map_view$_map.remove$1(0, J.$add$ansx(this._unprefixed_map_view$_prefix, key)) : null;\n    }\n  };\n  R._UnprefixedKeys.prototype = {\n    get$iterator: function(_) {\n      var t1 = this._unprefixed_map_view$_view._unprefixed_map_view$_map;\n      t1 = J.where$1$ax(t1.get$keys(t1), new R._UnprefixedKeys_iterator_closure(this)).map$1$1(0, new R._UnprefixedKeys_iterator_closure0(this), type$.legacy_String);\n      return t1.get$iterator(t1);\n    },\n    contains$1: function(_, key) {\n      return this._unprefixed_map_view$_view.containsKey$1(key);\n    }\n  };\n  R._UnprefixedKeys_iterator_closure.prototype = {\n    call$1: function(key) {\n      return J.startsWith$1$s(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix);\n    },\n    $signature: 5\n  };\n  R._UnprefixedKeys_iterator_closure0.prototype = {\n    call$1: function(key) {\n      return J.substring$1$s(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix.length);\n    },\n    $signature: 8\n  };\n  B.indent_closure.prototype = {\n    call$1: function(line) {\n      return C.JSString_methods.$add(C.JSString_methods.$mul(\" \", this.indentation), line);\n    },\n    $signature: 8\n  };\n  B.flattenVertically_closure.prototype = {\n    call$1: function(inner) {\n      return Q.QueueList_QueueList$from(inner, this.T._eval$1(\"0*\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"QueueList<0*>*(Iterable<0*>*)\");\n    }\n  };\n  B.flattenVertically_closure0.prototype = {\n    call$1: function(queue) {\n      this.result.push(queue.removeFirst$0());\n      return queue.get$length(queue) === 0;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"bool*(QueueList<0*>*)\");\n    }\n  };\n  B.longestCommonSubsequence_closure.prototype = {\n    call$2: function(element1, element2) {\n      return J.$eq$(element1, element2) ? element1 : null;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(0*,0*)\");\n    }\n  };\n  B.longestCommonSubsequence_closure0.prototype = {\n    call$1: function(_) {\n      return P.List_List$filled(J.get$length$asx(this.list2) + 1, 0, false, type$.legacy_int);\n    },\n    $signature: 147\n  };\n  B.longestCommonSubsequence_closure1.prototype = {\n    call$1: function(_) {\n      var t1 = new Array(J.get$length$asx(this.list2));\n      t1.fixed$length = Array;\n      return H.setRuntimeTypeInfo(t1, this.T._eval$1(\"JSArray<0*>\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(int*)\");\n    }\n  };\n  B.longestCommonSubsequence_backtrack.prototype = {\n    call$2: function(i, j) {\n      var selection, t1, _this = this;\n      if (i === -1 || j === -1)\n        return H.setRuntimeTypeInfo([], _this.T._eval$1(\"JSArray<0*>\"));\n      selection = J.$index$asx(_this.selections[i], j);\n      if (selection != null) {\n        t1 = _this.call$2(i - 1, j - 1);\n        J.add$1$ax(t1, selection);\n        return t1;\n      }\n      t1 = _this.lengths;\n      return J.$index$asx(t1[i + 1], j) > J.$index$asx(t1[i], j + 1) ? _this.call$2(i, j - 1) : _this.call$2(i - 1, j);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(int*,int*)\");\n    }\n  };\n  B.mapAddAll2_closure.prototype = {\n    call$2: function(key, inner) {\n      var t1 = this.destination;\n      if (t1.containsKey$1(key))\n        t1.$index(0, key).addAll$1(0, inner);\n      else\n        t1.$indexSet(0, key, inner);\n    },\n    $signature: function() {\n      return this.K1._eval$1(\"@<0>\")._bind$1(this.K2)._bind$1(this.V)._eval$1(\"Null(1*,Map<2*,3*>*)\");\n    }\n  };\n  F.Value.prototype = {\n    get$isTruthy: function() {\n      return true;\n    },\n    get$separator: function() {\n      return C.ListSeparator_undecided;\n    },\n    get$hasBrackets: function() {\n      return false;\n    },\n    get$asList: function() {\n      return H.setRuntimeTypeInfo([this], type$.JSArray_legacy_Value);\n    },\n    get$lengthAsList: function() {\n      return 1;\n    },\n    get$isBlank: function() {\n      return false;\n    },\n    get$isSpecialNumber: function() {\n      return false;\n    },\n    get$isVar: function() {\n      return false;\n    },\n    get$realNull: function() {\n      return this;\n    },\n    sassIndexToListIndex$2: function(sassIndex, $name) {\n      var _this = this,\n        index = sassIndex.assertNumber$1($name).assertInt$1($name);\n      if (index === 0)\n        throw H.wrapException(_this._value$_exception$2(\"List index may not be 0.\", $name));\n      if (Math.abs(index) > _this.get$lengthAsList())\n        throw H.wrapException(_this._value$_exception$2(\"Invalid index \" + sassIndex.toString$0(0) + \" for a list with \" + _this.get$lengthAsList() + \" elements.\", $name));\n      return index < 0 ? _this.get$lengthAsList() + index : index - 1;\n    },\n    assertColor$1: function($name) {\n      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + \" is not a color.\", $name));\n    },\n    assertFunction$1: function($name) {\n      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + \" is not a function reference.\", $name));\n    },\n    assertMap$1: function($name) {\n      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + \" is not a map.\", $name));\n    },\n    tryMap$0: function() {\n      return null;\n    },\n    assertNumber$1: function($name) {\n      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + \" is not a number.\", $name));\n    },\n    assertNumber$0: function() {\n      return this.assertNumber$1(null);\n    },\n    assertString$1: function($name) {\n      return H.throwExpression(this._value$_exception$2(this.toString$0(0) + \" is not a string.\", $name));\n    },\n    assertSelector$2$allowParent$name: function(allowParent, $name) {\n      var error, t1, exception,\n        string = this._selectorString$1($name);\n      try {\n        t1 = D.SelectorList_SelectorList$parse(string, allowParent, true, null);\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException) {\n          error = t1;\n          throw H.wrapException(this._value$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), \"Error: \", \"\"), $name));\n        } else\n          throw exception;\n      }\n    },\n    assertSelector$1$name: function($name) {\n      return this.assertSelector$2$allowParent$name(false, $name);\n    },\n    assertSelector$0: function() {\n      return this.assertSelector$2$allowParent$name(false, null);\n    },\n    assertSelector$1$allowParent: function(allowParent) {\n      return this.assertSelector$2$allowParent$name(allowParent, null);\n    },\n    assertCompoundSelector$1$name: function($name) {\n      var error, t1, exception,\n        allowParent = false,\n        string = this._selectorString$1($name);\n      try {\n        t1 = T.SelectorParser$(string, allowParent, true, null, null).parseCompoundSelector$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException) {\n          error = t1;\n          throw H.wrapException(this._value$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), \"Error: \", \"\"), $name));\n        } else\n          throw exception;\n      }\n    },\n    _selectorString$1: function($name) {\n      var string = this._selectorStringOrNull$0();\n      if (string != null)\n        return string;\n      throw H.wrapException(this._value$_exception$2(this.toString$0(0) + string$.x20is_no, $name));\n    },\n    _selectorString$0: function() {\n      return this._selectorString$1(null);\n    },\n    _selectorStringOrNull$0: function() {\n      var t1, t2, result, t3, _i, complex, string, compound, _this = this, _null = null;\n      if (_this instanceof D.SassString)\n        return _this.text;\n      if (!(_this instanceof D.SassList))\n        return _null;\n      t1 = _this._list$_contents;\n      t2 = t1.length;\n      if (t2 === 0)\n        return _null;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      t3 = _this.separator === C.ListSeparator_comma;\n      if (t3)\n        for (_i = 0; _i < t2; ++_i) {\n          complex = t1[_i];\n          if (complex instanceof D.SassString)\n            result.push(complex.text);\n          else if (complex instanceof D.SassList && complex.separator === C.ListSeparator_space) {\n            string = complex._selectorString$0();\n            result.push(string);\n          } else\n            return _null;\n        }\n      else\n        for (_i = 0; _i < t2; ++_i) {\n          compound = t1[_i];\n          if (compound instanceof D.SassString)\n            result.push(compound.text);\n          else\n            return _null;\n        }\n      return C.JSArray_methods.join$1(result, t3 ? \", \" : \" \");\n    },\n    changeListContents$2$separator: function(contents, separator) {\n      var t1 = separator == null ? this.get$separator() : separator,\n        t2 = this.get$hasBrackets();\n      return D.SassList$(contents, t1, t2);\n    },\n    changeListContents$1: function(contents) {\n      return this.changeListContents$2$separator(contents, null);\n    },\n    greaterThan$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" > \" + H.S(other) + '\".'));\n    },\n    greaterThanOrEquals$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" >= \" + H.S(other) + '\".'));\n    },\n    lessThan$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" < \" + H.S(other) + '\".'));\n    },\n    lessThanOrEquals$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" <= \" + H.S(other) + '\".'));\n    },\n    times$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" * \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    plus$1: function(other) {\n      var t1;\n      if (other instanceof D.SassString)\n        return new D.SassString(C.JSString_methods.$add(N.serializeValue0(this, false, true), other.text), other.hasQuotes);\n      else {\n        t1 = N.serializeValue0(this, false, true);\n        other.toString;\n        return new D.SassString(t1 + N.serializeValue0(other, false, true), false);\n      }\n    },\n    minus$1: function(other) {\n      var t1 = N.serializeValue0(this, false, true) + \"-\";\n      other.toString;\n      return new D.SassString(t1 + N.serializeValue0(other, false, true), false);\n    },\n    dividedBy$1: function(other) {\n      var t1 = N.serializeValue0(this, false, true) + \"/\";\n      other.toString;\n      return new D.SassString(t1 + N.serializeValue0(other, false, true), false);\n    },\n    unaryPlus$0: function() {\n      return new D.SassString(\"+\" + N.serializeValue0(this, false, true), false);\n    },\n    unaryMinus$0: function() {\n      return new D.SassString(\"-\" + N.serializeValue0(this, false, true), false);\n    },\n    unaryNot$0: function() {\n      return C.SassBoolean_false0;\n    },\n    withoutSlash$0: function() {\n      return this;\n    },\n    toString$0: function(_) {\n      return N.serializeValue0(this, true, true);\n    },\n    _value$_exception$2: function(message, $name) {\n      return new E.SassScriptException($name == null ? message : \"$\" + $name + \": \" + message);\n    }\n  };\n  D.SassArgumentList.prototype = {};\n  Z.SassBoolean.prototype = {\n    get$isTruthy: function() {\n      return this.value;\n    },\n    accept$1$1: function(visitor) {\n      return visitor._serialize$_buffer.write$1(0, String(this.value));\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unaryNot$0: function() {\n      return this.value ? C.SassBoolean_false0 : C.SassBoolean_true0;\n    }\n  };\n  K.SassColor.prototype = {\n    get$red: function() {\n      if (this._red == null)\n        this._hslToRgb$0();\n      return this._red;\n    },\n    get$green: function() {\n      if (this._green == null)\n        this._hslToRgb$0();\n      return this._green;\n    },\n    get$blue: function() {\n      if (this._blue == null)\n        this._hslToRgb$0();\n      return this._blue;\n    },\n    get$hue: function() {\n      if (this._hue == null)\n        this._rgbToHsl$0();\n      return this._hue;\n    },\n    get$saturation: function() {\n      if (this._saturation == null)\n        this._rgbToHsl$0();\n      return this._saturation;\n    },\n    get$lightness: function() {\n      if (this._lightness == null)\n        this._rgbToHsl$0();\n      return this._lightness;\n    },\n    get$whiteness: function() {\n      var t1 = this.get$red(),\n        t2 = this.get$green();\n      return Math.min(Math.min(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;\n    },\n    get$blackness: function() {\n      var t1 = this.get$red(),\n        t2 = this.get$green();\n      return 100 - Math.max(Math.max(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;\n    },\n    get$original: function() {\n      var t1 = this.originalSpan;\n      return t1 == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitColor$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertColor$1: function($name) {\n      return this;\n    },\n    changeRgb$4$alpha$blue$green$red: function(alpha, blue, green, red) {\n      return K.SassColor$rgb(red, green, blue, alpha == null ? this.alpha : alpha, null);\n    },\n    changeRgb$3$blue$green$red: function(blue, green, red) {\n      return this.changeRgb$4$alpha$blue$green$red(null, blue, green, red);\n    },\n    changeHsl$4$alpha$hue$lightness$saturation: function(alpha, hue, lightness, saturation) {\n      var _this = this,\n        t1 = hue == null ? _this.get$hue() : hue,\n        t2 = saturation == null ? _this.get$saturation() : saturation,\n        t3 = lightness == null ? _this.get$lightness() : lightness;\n      return K.SassColor$hsl(t1, t2, t3, alpha == null ? _this.alpha : alpha);\n    },\n    changeHsl$1$saturation: function(saturation) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, null, saturation);\n    },\n    changeHsl$1$lightness: function(lightness) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, lightness, null);\n    },\n    changeHsl$1$hue: function(hue) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, hue, null, null);\n    },\n    changeAlpha$1: function(alpha) {\n      var _this = this;\n      return new K.SassColor(_this._red, _this._green, _this._blue, _this._hue, _this._saturation, _this._lightness, T.fuzzyAssertRange(alpha, 0, 1, \"alpha\"), null);\n    },\n    plus$1: function(other) {\n      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))\n        return this.super$Value$plus(other);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" + \" + H.S(other) + '\".'));\n    },\n    minus$1: function(other) {\n      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))\n        return this.super$Value$minus(other);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" - \" + H.S(other) + '\".'));\n    },\n    dividedBy$1: function(other) {\n      if (!(other instanceof T.SassNumber) && !(other instanceof K.SassColor))\n        return this.super$Value$dividedBy(other);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" / \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      return H.throwExpression(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof K.SassColor && other.get$red() == _this.get$red() && other.get$green() == _this.get$green() && other.get$blue() == _this.get$blue() && other.alpha === _this.alpha;\n    },\n    get$hashCode: function(_) {\n      var _this = this;\n      return J.get$hashCode$(_this.get$red()) ^ J.get$hashCode$(_this.get$green()) ^ J.get$hashCode$(_this.get$blue()) ^ C.JSNumber_methods.get$hashCode(_this.alpha);\n    },\n    _rgbToHsl$0: function() {\n      var t2, t3, _this = this,\n        scaledRed = _this.get$red() / 255,\n        scaledGreen = _this.get$green() / 255,\n        scaledBlue = _this.get$blue() / 255,\n        max = Math.max(Math.max(scaledRed, scaledGreen), scaledBlue),\n        min = Math.min(Math.min(scaledRed, scaledGreen), scaledBlue),\n        delta = max - min,\n        t1 = max === min;\n      if (t1)\n        _this._hue = 0;\n      else if (max === scaledRed)\n        _this._hue = C.JSDouble_methods.$mod(60 * (scaledGreen - scaledBlue) / delta, 360);\n      else if (max === scaledGreen)\n        _this._hue = C.JSNumber_methods.$mod(120 + 60 * (scaledBlue - scaledRed) / delta, 360);\n      else if (max === scaledBlue)\n        _this._hue = C.JSNumber_methods.$mod(240 + 60 * (scaledRed - scaledGreen) / delta, 360);\n      t2 = max + min;\n      t3 = 50 * t2;\n      _this._lightness = t3;\n      if (t1)\n        _this._saturation = 0;\n      else {\n        t1 = 100 * delta;\n        if (t3 < 50)\n          _this._saturation = t1 / t2;\n        else\n          _this._saturation = t1 / (2 - max - min);\n      }\n    },\n    _hslToRgb$0: function() {\n      var _this = this,\n        scaledHue = _this.get$hue() / 360,\n        scaledSaturation = _this.get$saturation() / 100,\n        scaledLightness = _this.get$lightness() / 100,\n        m2 = scaledLightness <= 0.5 ? scaledLightness * (scaledSaturation + 1) : scaledLightness + scaledSaturation - scaledLightness * scaledSaturation,\n        m1 = scaledLightness * 2 - m2;\n      _this._red = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue + 0.3333333333333333) * 255);\n      _this._green = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue) * 255);\n      _this._blue = T.fuzzyRound(K.SassColor__hueToRgb(m1, m2, scaledHue - 0.3333333333333333) * 255);\n    }\n  };\n  K.SassColor_SassColor$hwb_toRgb.prototype = {\n    call$1: function(hue) {\n      return T.fuzzyRound((K.SassColor__hueToRgb(0, 1, hue) * this.factor + this._box_0.scaledWhiteness) * 255);\n    },\n    $signature: 39\n  };\n  F.SassFunction.prototype = {\n    accept$1$1: function(visitor) {\n      var t1, t2;\n      if (!visitor._serialize$_inspect)\n        H.throwExpression(E.SassScriptException$(this.toString$0(0) + \" isn't a valid CSS value.\"));\n      t1 = visitor._serialize$_buffer;\n      t1.write$1(0, \"get-function(\");\n      t2 = this.callable;\n      visitor._visitQuotedString$1(t2.get$name(t2));\n      t1.writeCharCode$1(41);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertFunction$1: function($name) {\n      return this;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.SassFunction && J.$eq$(this.callable, other.callable);\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.callable);\n    }\n  };\n  D.SassList.prototype = {\n    get$isBlank: function() {\n      return C.JSArray_methods.every$1(this._list$_contents, new D.SassList_isBlank_closure());\n    },\n    get$asList: function() {\n      return this._list$_contents;\n    },\n    get$lengthAsList: function() {\n      return this._list$_contents.length;\n    },\n    SassList$3$brackets: function(contents, separator, brackets) {\n      if (this.separator === C.ListSeparator_undecided && this._list$_contents.length > 1)\n        throw H.wrapException(P.ArgumentError$(string$.A_list));\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitList$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertMap$1: function($name) {\n      return this._list$_contents.length === 0 ? C.SassMap_Map_empty : this.super$Value$assertMap($name);\n    },\n    tryMap$0: function() {\n      return this._list$_contents.length === 0 ? C.SassMap_Map_empty : null;\n    },\n    $eq: function(_, other) {\n      var t1, _this = this;\n      if (other == null)\n        return false;\n      if (!(other instanceof D.SassList && other.separator === _this.separator && other.hasBrackets === _this.hasBrackets && C.C_ListEquality.equals$2(0, other._list$_contents, _this._list$_contents)))\n        t1 = _this._list$_contents.length === 0 && other instanceof A.SassMap && other.get$asList().length === 0;\n      else\n        t1 = true;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this._list$_contents);\n    },\n    get$separator: function() {\n      return this.separator;\n    },\n    get$hasBrackets: function() {\n      return this.hasBrackets;\n    }\n  };\n  D.SassList_isBlank_closure.prototype = {\n    call$1: function(element) {\n      return element.get$isBlank();\n    },\n    $signature: 51\n  };\n  D.ListSeparator.prototype = {\n    toString$0: function(_) {\n      return this._list$_name;\n    }\n  };\n  A.SassMap.prototype = {\n    get$separator: function() {\n      var t1 = this.contents;\n      return t1.get$isEmpty(t1) ? C.ListSeparator_undecided : C.ListSeparator_comma;\n    },\n    get$asList: function() {\n      var result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      this.contents.forEach$1(0, new A.SassMap_asList_closure(result));\n      return result;\n    },\n    get$lengthAsList: function() {\n      var t1 = this.contents;\n      return t1.get$length(t1);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitMap$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertMap$1: function($name) {\n      return this;\n    },\n    tryMap$0: function() {\n      return this;\n    },\n    $eq: function(_, other) {\n      var t1;\n      if (other == null)\n        return false;\n      if (!(other instanceof A.SassMap && C.C_MapEquality.equals$2(0, other.contents, this.contents))) {\n        t1 = this.contents;\n        t1 = t1.get$isEmpty(t1) && other instanceof D.SassList && other._list$_contents.length === 0;\n      } else\n        t1 = true;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var t1 = this.contents;\n      return t1.get$isEmpty(t1) ? C.C_ListEquality.hash$1(C.List_empty5) : C.C_MapEquality.hash$1(t1);\n    }\n  };\n  A.SassMap_asList_closure.prototype = {\n    call$2: function(key, value) {\n      this.result.push(D.SassList$(H.setRuntimeTypeInfo([key, value], type$.JSArray_legacy_Value), C.ListSeparator_space, false));\n    },\n    $signature: 47\n  };\n  O.SassNull.prototype = {\n    get$isTruthy: function() {\n      return false;\n    },\n    get$isBlank: function() {\n      return true;\n    },\n    get$realNull: function() {\n      return null;\n    },\n    accept$1$1: function(visitor) {\n      if (visitor._serialize$_inspect)\n        visitor._serialize$_buffer.write$1(0, \"null\");\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unaryNot$0: function() {\n      return C.SassBoolean_true0;\n    }\n  };\n  T.SassNumber.prototype = {\n    get$unitString: function() {\n      var _this = this,\n        t1 = _this.numeratorUnits;\n      return t1.length !== 0 || _this.denominatorUnits.length !== 0 ? _this._unitString$2(t1, _this.denominatorUnits) : \"\";\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitNumber$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    withoutSlash$0: function() {\n      var _this = this;\n      if (_this.asSlash == null)\n        return _this;\n      return new T.SassNumber(_this.value, _this.numeratorUnits, _this.denominatorUnits, null);\n    },\n    withSlash$2: function(numerator, denominator) {\n      return new T.SassNumber(this.value, this.numeratorUnits, this.denominatorUnits, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber));\n    },\n    assertNumber$1: function($name) {\n      return this;\n    },\n    assertNumber$0: function() {\n      return this.assertNumber$1(null);\n    },\n    assertInt$1: function($name) {\n      var t1 = this.value,\n        integer = T.fuzzyIsInt(t1) ? J.round$0$n(t1) : null;\n      if (integer != null)\n        return integer;\n      throw H.wrapException(this._number$_exception$2(this.toString$0(0) + \" is not an int.\", $name));\n    },\n    assertInt$0: function() {\n      return this.assertInt$1(null);\n    },\n    valueInRange$3: function(min, max, $name) {\n      var _this = this,\n        result = T.fuzzyCheckRange(_this.value, min, max);\n      if (result != null)\n        return result;\n      throw H.wrapException(_this._number$_exception$2(\"Expected \" + _this.toString$0(0) + \" to be within \" + min + _this.get$unitString() + \" and \" + max + _this.get$unitString() + \".\", $name));\n    },\n    hasUnit$1: function(unit) {\n      var t1 = this.numeratorUnits;\n      return t1.length === 1 && this.denominatorUnits.length === 0 && J.$eq$(C.JSArray_methods.get$first(t1), unit);\n    },\n    assertUnit$2: function(unit, $name) {\n      if (this.hasUnit$1(unit))\n        return;\n      throw H.wrapException(this._number$_exception$2(\"Expected \" + this.toString$0(0) + ' to have unit \"' + unit + '\".', $name));\n    },\n    assertNoUnits$1: function($name) {\n      var _this = this;\n      if (!(_this.numeratorUnits.length !== 0 || _this.denominatorUnits.length !== 0))\n        return;\n      throw H.wrapException(_this._number$_exception$2(\"Expected \" + _this.toString$0(0) + \" to have no units.\", $name));\n    },\n    valueInUnits$2: function(newNumerators, newDenominators) {\n      var t1, oldNumerators, t2, _i, oldDenominators, t3, _this = this, _box_0 = {};\n      if (!(newNumerators.length === 0 && newDenominators.length === 0)) {\n        t1 = _this.numeratorUnits;\n        if (!(t1.length === 0 && _this.denominatorUnits.length === 0))\n          t1 = C.C_ListEquality.equals$2(0, t1, newNumerators) && C.C_ListEquality.equals$2(0, _this.denominatorUnits, newDenominators);\n        else\n          t1 = true;\n      } else\n        t1 = true;\n      if (t1)\n        return _this.value;\n      _box_0.value = _this.value;\n      t1 = _this.numeratorUnits;\n      oldNumerators = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1(\"JSArray<1>\"));\n      for (t2 = newNumerators.length, _i = 0; _i < newNumerators.length; newNumerators.length === t2 || (0, H.throwConcurrentModificationError)(newNumerators), ++_i)\n        B.removeFirstWhere(oldNumerators, new T.SassNumber_valueInUnits_closure(_box_0, _this, newNumerators[_i]), new T.SassNumber_valueInUnits_closure0(_this, newNumerators, newDenominators));\n      t2 = _this.denominatorUnits;\n      oldDenominators = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2)._eval$1(\"JSArray<1>\"));\n      for (t3 = newDenominators.length, _i = 0; _i < newDenominators.length; newDenominators.length === t3 || (0, H.throwConcurrentModificationError)(newDenominators), ++_i)\n        B.removeFirstWhere(oldDenominators, new T.SassNumber_valueInUnits_closure1(_box_0, _this, newDenominators[_i]), new T.SassNumber_valueInUnits_closure2(_this, newNumerators, newDenominators));\n      if (oldNumerators.length !== 0 || oldDenominators.length !== 0)\n        throw H.wrapException(E.SassScriptException$(\"Incompatible units \" + _this._unitString$2(t1, t2) + \" and \" + _this._unitString$2(newNumerators, newDenominators) + \".\"));\n      return _box_0.value;\n    },\n    isComparableTo$1: function(other) {\n      var t1, exception;\n      if (this.numeratorUnits.length !== 0 || this.denominatorUnits.length !== 0)\n        t1 = !(other.numeratorUnits.length !== 0 || other.denominatorUnits.length !== 0);\n      else\n        t1 = true;\n      if (t1)\n        return true;\n      try {\n        this.greaterThan$1(other);\n        return true;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassScriptException)\n          return false;\n        else\n          throw exception;\n      }\n    },\n    greaterThan$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceUnits$2(other, T.number0__fuzzyGreaterThan$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" > \" + H.S(other) + '\".'));\n    },\n    greaterThanOrEquals$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceUnits$2(other, T.number0__fuzzyGreaterThanOrEquals$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" >= \" + H.S(other) + '\".'));\n    },\n    lessThan$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceUnits$2(other, T.number0__fuzzyLessThan$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" < \" + H.S(other) + '\".'));\n    },\n    lessThanOrEquals$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceUnits$2(other, T.number0__fuzzyLessThanOrEquals$closure()) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" <= \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceNumber$2(other, new T.SassNumber_modulo_closure());\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    plus$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceNumber$2(other, new T.SassNumber_plus_closure());\n      if (!(other instanceof K.SassColor))\n        return this.super$Value$plus(other);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" + \" + other.toString$0(0) + '\".'));\n    },\n    minus$1: function(other) {\n      if (other instanceof T.SassNumber)\n        return this._coerceNumber$2(other, new T.SassNumber_minus_closure());\n      if (!(other instanceof K.SassColor))\n        return this.super$Value$minus(other);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + this.toString$0(0) + \" - \" + other.toString$0(0) + '\".'));\n    },\n    times$1: function(other) {\n      var _this = this;\n      if (other instanceof T.SassNumber)\n        return _this._multiplyUnits$5(_this.value * other.value, _this.numeratorUnits, _this.denominatorUnits, other.numeratorUnits, other.denominatorUnits);\n      throw H.wrapException(E.SassScriptException$('Undefined operation \"' + _this.toString$0(0) + \" * \" + H.S(other) + '\".'));\n    },\n    dividedBy$1: function(other) {\n      var _this = this;\n      if (other instanceof T.SassNumber)\n        return _this._multiplyUnits$5(_this.value / other.value, _this.numeratorUnits, _this.denominatorUnits, other.denominatorUnits, other.numeratorUnits);\n      return _this.super$Value$dividedBy(other);\n    },\n    unaryPlus$0: function() {\n      return this;\n    },\n    unaryMinus$0: function() {\n      return T.SassNumber$withUnits(-this.value, this.denominatorUnits, this.numeratorUnits);\n    },\n    _coerceNumber$2: function(other, operation) {\n      var _this = this,\n        result = _this._coerceUnits$2(other, operation),\n        t1 = _this.numeratorUnits,\n        t2 = t1.length === 0;\n      t1 = !t2 || _this.denominatorUnits.length !== 0 ? t1 : other.numeratorUnits;\n      return T.SassNumber$withUnits(result, !t2 || _this.denominatorUnits.length !== 0 ? _this.denominatorUnits : other.denominatorUnits, t1);\n    },\n    _coerceUnits$1$2: function(other, operation) {\n      var num1, num2, _this = this,\n        t1 = _this.numeratorUnits;\n      if (t1.length !== 0 || _this.denominatorUnits.length !== 0) {\n        num1 = _this.value;\n        num2 = other.valueInUnits$2(t1, _this.denominatorUnits);\n      } else {\n        num1 = _this.valueInUnits$2(other.numeratorUnits, other.denominatorUnits);\n        num2 = other.value;\n      }\n      return operation.call$2(num1, num2);\n    },\n    _coerceUnits$2: function(other, operation) {\n      return this._coerceUnits$1$2(other, operation, type$.dynamic);\n    },\n    _multiplyUnits$5: function(value, numerators1, denominators1, numerators2, denominators2) {\n      var t1, newNumerators, mutableDenominators2, _i, numerator, mutableDenominators1, _this = this, _box_0 = {};\n      _box_0.value = value;\n      t1 = numerators1.length;\n      if (t1 === 0) {\n        if (denominators2.length === 0 && !_this._areAnyConvertible$2(denominators1, numerators2))\n          return T.SassNumber$withUnits(value, denominators1, numerators2);\n        else if (denominators1.length === 0)\n          return T.SassNumber$withUnits(value, denominators2, numerators2);\n      } else if (numerators2.length === 0)\n        if (denominators2.length === 0)\n          return T.SassNumber$withUnits(value, denominators2, numerators1);\n        else if (denominators1.length === 0 && !_this._areAnyConvertible$2(numerators1, denominators2))\n          return T.SassNumber$withUnits(value, denominators2, numerators1);\n      newNumerators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      mutableDenominators2 = H.setRuntimeTypeInfo(denominators2.slice(0), H._arrayInstanceType(denominators2)._eval$1(\"JSArray<1>\"));\n      for (_i = 0; _i < t1; ++_i) {\n        numerator = numerators1[_i];\n        B.removeFirstWhere(mutableDenominators2, new T.SassNumber__multiplyUnits_closure(_box_0, _this, numerator), new T.SassNumber__multiplyUnits_closure0(newNumerators, numerator));\n      }\n      mutableDenominators1 = H.setRuntimeTypeInfo(denominators1.slice(0), H._arrayInstanceType(denominators1)._eval$1(\"JSArray<1>\"));\n      for (t1 = numerators2.length, _i = 0; _i < t1; ++_i) {\n        numerator = numerators2[_i];\n        B.removeFirstWhere(mutableDenominators1, new T.SassNumber__multiplyUnits_closure1(_box_0, _this, numerator), new T.SassNumber__multiplyUnits_closure2(newNumerators, numerator));\n      }\n      t1 = _box_0.value;\n      C.JSArray_methods.addAll$1(mutableDenominators1, mutableDenominators2);\n      return T.SassNumber$withUnits(t1, mutableDenominators1, newNumerators);\n    },\n    _areAnyConvertible$2: function(units1, units2) {\n      return C.JSArray_methods.any$1(units1, new T.SassNumber__areAnyConvertible_closure(this, units2));\n    },\n    _conversionFactor$2: function(unit1, unit2) {\n      var innerMap;\n      if (unit1 == unit2)\n        return 1;\n      innerMap = $.$get$_conversions().$index(0, unit1);\n      if (innerMap == null)\n        return null;\n      return innerMap.$index(0, unit2);\n    },\n    _unitString$2: function(numerators, denominators) {\n      var t1;\n      if (numerators.length === 0) {\n        t1 = denominators.length;\n        if (t1 === 0)\n          return \"no units\";\n        if (t1 === 1)\n          return J.$add$ansx(C.JSArray_methods.get$single(denominators), \"^-1\");\n        return \"(\" + C.JSArray_methods.join$1(denominators, \"*\") + \")^-1\";\n      }\n      if (denominators.length === 0)\n        return C.JSArray_methods.join$1(numerators, \"*\");\n      return C.JSArray_methods.join$1(numerators, \"*\") + \"/\" + C.JSArray_methods.join$1(denominators, \"*\");\n    },\n    $eq: function(_, other) {\n      var t1, t2, t3, exception, _this = this;\n      if (other == null)\n        return false;\n      other = other;\n      if (other instanceof T.SassNumber) {\n        t1 = _this.numeratorUnits.length === 0;\n        t2 = !t1 || _this.denominatorUnits.length !== 0;\n        t3 = other;\n        if (t2 !== (t3.numeratorUnits.length !== 0 || t3.denominatorUnits.length !== 0))\n          return false;\n        if (!(!t1 || _this.denominatorUnits.length !== 0))\n          return Math.abs(_this.value - other.value) < $.$get$epsilon();\n        try {\n          t1 = _this._coerceUnits$2(other, T.number0__fuzzyEquals$closure());\n          return t1;\n        } catch (exception) {\n          if (H.unwrapException(exception) instanceof E.SassScriptException)\n            return false;\n          else\n            throw exception;\n        }\n      } else\n        return false;\n    },\n    get$hashCode: function(_) {\n      var _this = this,\n        t1 = _this.value * _this._canonicalMultiplier$1(_this.numeratorUnits) / _this._canonicalMultiplier$1(_this.denominatorUnits);\n      return t1 == 1 / 0 || t1 == -1 / 0 || isNaN(t1) ? C.JSDouble_methods.get$hashCode(t1) : C.JSInt_methods.get$hashCode(C.JSDouble_methods.round$0(t1 * $.$get$_inverseEpsilon()));\n    },\n    _canonicalMultiplier$1: function(units) {\n      return C.JSArray_methods.fold$2(units, 1, new T.SassNumber__canonicalMultiplier_closure());\n    },\n    _number$_exception$2: function(message, $name) {\n      return new E.SassScriptException($name == null ? message : \"$\" + $name + \": \" + message);\n    }\n  };\n  T.SassNumber_valueInUnits_closure.prototype = {\n    call$1: function(oldNumerator) {\n      var t1,\n        factor = this.$this._conversionFactor$2(this.newNumerator, oldNumerator);\n      if (factor == null)\n        return false;\n      t1 = this._box_0;\n      t1.value = t1.value * factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber_valueInUnits_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      throw H.wrapException(E.SassScriptException$(\"Incompatible units \" + t1._unitString$2(t1.numeratorUnits, t1.denominatorUnits) + \" and \" + t1._unitString$2(this.newNumerators, this.newDenominators) + \".\"));\n    },\n    $signature: 0\n  };\n  T.SassNumber_valueInUnits_closure1.prototype = {\n    call$1: function(oldDenominator) {\n      var t1,\n        factor = this.$this._conversionFactor$2(this.newDenominator, oldDenominator);\n      if (factor == null)\n        return false;\n      t1 = this._box_0;\n      t1.value = t1.value / factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber_valueInUnits_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      throw H.wrapException(E.SassScriptException$(\"Incompatible units \" + t1._unitString$2(t1.numeratorUnits, t1.denominatorUnits) + \" and \" + t1._unitString$2(this.newNumerators, this.newDenominators) + \".\"));\n    },\n    $signature: 0\n  };\n  T.SassNumber_modulo_closure.prototype = {\n    call$2: function(num1, num2) {\n      var t1;\n      if (num2 > 0)\n        return C.JSNumber_methods.$mod(num1, num2);\n      if (num2 === 0)\n        return 0 / 0;\n      t1 = C.JSNumber_methods.$mod(num1, num2);\n      return t1 === 0 ? 0 : t1 + num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber_plus_closure.prototype = {\n    call$2: function(num1, num2) {\n      return num1 + num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber_minus_closure.prototype = {\n    call$2: function(num1, num2) {\n      return num1 - num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber__multiplyUnits_closure.prototype = {\n    call$1: function(denominator) {\n      var factor = this.$this._conversionFactor$2(this.numerator, denominator);\n      if (factor == null)\n        return false;\n      this._box_0.value /= factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber__multiplyUnits_closure0.prototype = {\n    call$0: function() {\n      this.newNumerators.push(this.numerator);\n      return null;\n    },\n    $signature: 0\n  };\n  T.SassNumber__multiplyUnits_closure1.prototype = {\n    call$1: function(denominator) {\n      var factor = this.$this._conversionFactor$2(this.numerator, denominator);\n      if (factor == null)\n        return false;\n      this._box_0.value /= factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber__multiplyUnits_closure2.prototype = {\n    call$0: function() {\n      this.newNumerators.push(this.numerator);\n      return null;\n    },\n    $signature: 0\n  };\n  T.SassNumber__areAnyConvertible_closure.prototype = {\n    call$1: function(unit1) {\n      var t1 = $.$get$_conversions();\n      if (!t1.containsKey$1(unit1))\n        return C.JSArray_methods.contains$1(this.units2, unit1);\n      return C.JSArray_methods.any$1(this.units2, t1.$index(0, unit1).get$containsKey());\n    },\n    $signature: 5\n  };\n  T.SassNumber__canonicalMultiplier_closure.prototype = {\n    call$2: function(multiplier, unit) {\n      var t1,\n        innerMap = $.$get$_conversions().$index(0, unit);\n      if (innerMap == null)\n        t1 = multiplier;\n      else {\n        t1 = innerMap.get$values(innerMap);\n        t1 = multiplier / t1.get$first(t1);\n      }\n      return t1;\n    },\n    $signature: 145\n  };\n  D.SassString.prototype = {\n    get$sassLength: function() {\n      var t1 = this._sassLength;\n      if (t1 == null) {\n        t1 = this.text;\n        t1.toString;\n        t1 = new P.Runes(t1);\n        t1 = this._sassLength = t1.get$length(t1);\n      }\n      return t1;\n    },\n    get$isSpecialNumber: function() {\n      var t1, t2;\n      if (this.hasQuotes)\n        return false;\n      t1 = this.text;\n      if (t1.length < 6)\n        return false;\n      t2 = J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32;\n      if (t2 === 99) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 108)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 99)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 4) === 40;\n      } else if (t2 === 118) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 114)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n      } else if (t2 === 101) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 110)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 118)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n      } else if (t2 === 109) {\n        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;\n        if (t2 === 97) {\n          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 120)\n            return false;\n          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n        } else if (t2 === 105) {\n          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 110)\n            return false;\n          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n        } else\n          return false;\n      } else\n        return false;\n    },\n    get$isVar: function() {\n      if (this.hasQuotes)\n        return false;\n      var t1 = this.text;\n      if (t1.length < 8)\n        return false;\n      return (J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32) === 118 && (C.JSString_methods._codeUnitAt$1(t1, 1) | 32) === 97 && (C.JSString_methods._codeUnitAt$1(t1, 2) | 32) === 114 && C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n    },\n    get$isBlank: function() {\n      return !this.hasQuotes && this.text.length === 0;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._quote && this.hasQuotes,\n        t2 = this.text;\n      if (t1)\n        visitor._visitQuotedString$1(t2);\n      else\n        visitor._visitUnquotedString$1(t2);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertString$1: function($name) {\n      return this;\n    },\n    plus$1: function(other) {\n      var t1 = this.text,\n        t2 = this.hasQuotes;\n      if (other instanceof D.SassString)\n        return new D.SassString(J.$add$ansx(t1, other.text), t2);\n      else {\n        other.toString;\n        return new D.SassString(J.$add$ansx(t1, N.serializeValue0(other, false, true)), t2);\n      }\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.SassString && this.text == other.text;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.text);\n    }\n  };\n  E._EvaluateVisitor0.prototype = {\n    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap0: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,\n        _s20_ = \"$name, $module: null\",\n        _s9_ = \"sass:meta\",\n        metaFunctions = [Q.BuiltInCallable$function(\"global-variable-exists\", _s20_, new E._EvaluateVisitor_closure9(_this), _s9_), Q.BuiltInCallable$function(\"variable-exists\", \"$name\", new E._EvaluateVisitor_closure10(_this), _s9_), Q.BuiltInCallable$function(\"function-exists\", _s20_, new E._EvaluateVisitor_closure11(_this), _s9_), Q.BuiltInCallable$function(\"mixin-exists\", _s20_, new E._EvaluateVisitor_closure12(_this), _s9_), Q.BuiltInCallable$function(\"content-exists\", \"\", new E._EvaluateVisitor_closure13(_this), _s9_), Q.BuiltInCallable$function(\"module-variables\", \"$module\", new E._EvaluateVisitor_closure14(_this), _s9_), Q.BuiltInCallable$function(\"module-functions\", \"$module\", new E._EvaluateVisitor_closure15(_this), _s9_), Q.BuiltInCallable$function(\"get-function\", \"$name, $css: false, $module: null\", new E._EvaluateVisitor_closure16(_this), _s9_), new S.AsyncBuiltInCallable(\"call\", L.ScssParser$(\"@function call($function, $args...) {\", null, _s9_).parseArgumentDeclaration$0(), new E._EvaluateVisitor_closure17(_this))],\n        t1 = type$.JSArray_legacy_AsyncBuiltInCallable,\n        metaMixins = H.setRuntimeTypeInfo([S.AsyncBuiltInCallable$mixin(\"load-css\", \"$url, $with: null\", new E._EvaluateVisitor_closure18(_this), _s9_)], t1);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t2 = $.$get$global(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      metaModule = Q.BuiltInModule$(\"meta\", t1, metaMixins, null, type$.legacy_AsyncBuiltInCallable);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable);\n      for (t2 = $.$get$coreModules(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      t1.push(metaModule);\n      t2 = t1.length;\n      t3 = _this._async_evaluate$_builtInModules;\n      _i = 0;\n      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        module = t1[_i];\n        t3.$indexSet(0, module.url, module);\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncCallable_2);\n      for (t2 = $.$get$globalFunctions(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      for (t2 = t1.length, t3 = _this._async_evaluate$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        $function = t1[_i];\n        t4 = $function.get$name($function);\n        t4.toString;\n        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, \"_\", \"-\"), $function);\n      }\n    },\n    run$2: function(_, importer, node) {\n      return this.run$body$_EvaluateVisitor(_, importer, node);\n    },\n    run$body$_EvaluateVisitor: function(_, importer, node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult),\n        $async$returnValue, $async$self = this;\n      var $async$run$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = $async$self._async_evaluate$_withWarnCallback$1$1(new E._EvaluateVisitor_run_closure0($async$self, node, importer), type$.legacy_FutureOr_legacy_EvaluateResult);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$run$2, $async$completer);\n    },\n    _async_evaluate$_withWarnCallback$1$1: function(callback, $T) {\n      return N.withWarnCallback(new E._EvaluateVisitor__withWarnCallback_closure0(this), callback, $T._eval$1(\"0*\"));\n    },\n    _async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      return this._loadModule$body$_EvaluateVisitor(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);\n    },\n    _async_evaluate$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {\n      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);\n    },\n    _async_evaluate$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {\n      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);\n    },\n    _loadModule$body$_EvaluateVisitor: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, t1, builtInModule;\n      var $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              builtInModule = $async$self._async_evaluate$_builtInModules.$index(0, url);\n              if (builtInModule != null) {\n                if (configuration != null && !configuration.isImplicit) {\n                  t1 = namesInErrors ? \"Built-in module \" + H.S(url) + \" can't be configured.\" : \"Built-in modules can't be configured.\";\n                  throw H.wrapException($async$self._async_evaluate$_exception$2(t1, nodeWithSpan.get$span()));\n                }\n                $async$self._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__loadModule_closure1(callback, builtInModule));\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_withStackFrame$1$3(stackFrame, nodeWithSpan, new E._EvaluateVisitor__loadModule_closure2($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors);\n            case 3:\n              // returning from await.\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);\n    },\n    _async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      return this._execute$body$_EvaluateVisitor(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);\n    },\n    _async_evaluate$_execute$2: function(importer, stylesheet) {\n      return this._async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);\n    },\n    _execute$body$_EvaluateVisitor: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Module_legacy_AsyncCallable),\n        $async$returnValue, $async$self = this, message, existingNode, environment, extender, module, t1, url, t2, alreadyLoaded;\n      var $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              url = stylesheet.span.file.url;\n              t2 = $async$self._async_evaluate$_modules;\n              alreadyLoaded = t2.$index(0, url);\n              if (alreadyLoaded != null) {\n                t1 = configuration == null;\n                if (!(t1 ? $async$self._async_evaluate$_configuration : configuration).isImplicit) {\n                  message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;\n                  existingNode = $async$self._async_evaluate$_moduleNodes.$index(0, url);\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n                  if (existingNode != null)\n                    t2.$indexSet(0, existingNode.get$span(), \"original load\");\n                  if (t1)\n                    t2.$indexSet(0, $async$self._async_evaluate$_configuration.nodeWithSpan.get$span(), \"configuration\");\n                  throw H.wrapException(t2.get$isEmpty(t2) ? $async$self._async_evaluate$_exception$1(message) : $async$self._async_evaluate$_multiSpanException$3(message, \"new load\", t2));\n                }\n                $async$returnValue = alreadyLoaded;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              environment = Q.AsyncEnvironment$($async$self._async_evaluate$_sourceMap);\n              t1.css = null;\n              extender = F.Extender$();\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_withEnvironment$1$2(environment, new E._EvaluateVisitor__execute_closure0(t1, $async$self, importer, stylesheet, extender, configuration), type$.Null), $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan);\n            case 3:\n              // returning from await.\n              module = Q._EnvironmentModule__EnvironmentModule0(environment, t1.css, extender, environment._async_environment$_forwardedModules);\n              t2.$indexSet(0, url, module);\n              $async$self._async_evaluate$_moduleNodes.$indexSet(0, url, nodeWithSpan);\n              $async$returnValue = module;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);\n    },\n    _async_evaluate$_addOutOfOrderImports$0: function() {\n      var t1, statements, _this = this;\n      if (_this._async_evaluate$_outOfOrderImports == null)\n        return _this._async_evaluate$_root.children;\n      t1 = new Array(J.get$length$asx(_this._async_evaluate$_root.children._collection$_source) + _this._async_evaluate$_outOfOrderImports.length);\n      t1.fixed$length = Array;\n      statements = new G.FixedLengthListBuilder(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode), type$.FixedLengthListBuilder_legacy_ModifiableCssNode);\n      statements.addRange$3(_this._async_evaluate$_root.children, 0, _this._async_evaluate$_endOfImports);\n      statements.addAll$1(0, _this._async_evaluate$_outOfOrderImports);\n      statements.addRange$2(_this._async_evaluate$_root.children, _this._async_evaluate$_endOfImports);\n      return statements.build$0();\n    },\n    _async_evaluate$_combineCss$2$clone: function(root, clone) {\n      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;\n      if (!C.JSArray_methods.any$1(root.get$upstream(), new E._EvaluateVisitor__combineCss_closure2())) {\n        selectors = root.get$extender().get$simpleSelectors();\n        unsatisfiedExtension = B.firstOrNull(root.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__combineCss_closure3(selectors)));\n        if (unsatisfiedExtension != null)\n          _this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);\n        return root.get$css(root);\n      }\n      sortedModules = _this._async_evaluate$_topologicalModules$1(root);\n      if (clone) {\n        t1 = sortedModules.$ti._eval$1(\"MappedListIterable<ListMixin.E,Module<AsyncCallable*>*>\");\n        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new E._EvaluateVisitor__combineCss_closure4(), t1), true, t1._eval$1(\"ListIterable.E\"));\n      }\n      _this._async_evaluate$_extendModules$1(sortedModules);\n      t1 = type$.JSArray_legacy_CssNode;\n      imports = H.setRuntimeTypeInfo([], t1);\n      css = H.setRuntimeTypeInfo([], t1);\n      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2 = cur.get$css(cur);\n        statements = t2.get$children(t2);\n        index = _this._async_evaluate$_indexAfterImports$1(statements);\n        t2 = J.getInterceptor$ax(statements);\n        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));\n        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));\n      }\n      return new V.CssStylesheet(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode), root.get$css(root).get$span());\n    },\n    _async_evaluate$_combineCss$1: function(root) {\n      return this._async_evaluate$_combineCss$2$clone(root, false);\n    },\n    _async_evaluate$_extendModules$1: function(sortedModules) {\n      var t1, t2, originalSelectors, extenders, t3, t4, _i,\n        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender),\n        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension);\n      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);\n        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__extendModules_closure1(originalSelectors)));\n        extenders = downstreamExtenders.$index(0, t2.get$url());\n        if (extenders != null)\n          t2.get$extender().addExtensions$1(extenders);\n        t3 = t2.get$extender();\n        if (t3.get$isEmpty(t3))\n          continue;\n        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)\n          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new E._EvaluateVisitor__extendModules_closure2()), t2.get$extender());\n        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));\n      }\n      if (unsatisfiedExtensions._collection$_length !== 0)\n        this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));\n    },\n    _async_evaluate$_throwForUnsatisfiedExtension$1: function(extension) {\n      throw H.wrapException(E.SassException$(string$.The_ta + H.S(extension.target) + ' !optional\" to avoid this error.', extension.span));\n    },\n    _async_evaluate$_topologicalModules$1: function(root) {\n      var t1 = type$.legacy_Module_legacy_AsyncCallable,\n        sorted = Q.QueueList$(null, t1);\n      new E._EvaluateVisitor__topologicalModules_visitModule0(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);\n      return sorted;\n    },\n    _async_evaluate$_indexAfterImports$1: function(statements) {\n      var t1, t2, t3, lastImport, i, statement;\n      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment, t3 = type$.legacy_CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {\n        statement = t1.$index(statements, i);\n        if (t3._is(statement))\n          lastImport = i;\n        else if (!t2._is(statement))\n          break;\n      }\n      return lastImport + 1;\n    },\n    visitStylesheet$1: function(node) {\n      return this.visitStylesheet$body$_EvaluateVisitor(node);\n    },\n    visitStylesheet$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, _i;\n      var $async$visitStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.children, t2 = t1.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);\n            case 6:\n              // returning from await.\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStylesheet$1, $async$completer);\n    },\n    visitAtRootRule$1: function(node) {\n      return this.visitAtRootRule$body$_EvaluateVisitor(node);\n    },\n    visitAtRootRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, root, innerCopy, outerCopy, cur, copy, t1, query, $parent, included, $async$temp1, $async$temp2;\n      var $async$visitAtRootRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.query;\n              $async$goto = t1 != null ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$temp1 = t1;\n              $async$temp2 = E;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(t1, true), $async$visitAtRootRule$1);\n            case 6:\n              // returning from await.\n              $async$result = $async$self._async_evaluate$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure2($async$self, $async$result));\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$result = C.AtRootQuery_UsS;\n            case 4:\n              // join\n              query = $async$result;\n              $parent = $async$self._async_evaluate$_parent;\n              included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode);\n              for (t1 = type$.legacy_CssStylesheet; !t1._is($parent);) {\n                if (!query.excludes$1($parent))\n                  included.push($parent);\n                $parent = $parent._parent;\n              }\n              root = $async$self._async_evaluate$_trimIncluded$1(included);\n              $async$goto = root == $async$self._async_evaluate$_parent ? 7 : 8;\n              break;\n            case 7:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new E._EvaluateVisitor_visitAtRootRule_closure3($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);\n            case 9:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 8:\n              // join\n              innerCopy = included.length === 0 ? null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();\n              for (t1 = H.SubListIterable$(included, 1, null, type$.legacy_ModifiableCssParentNode), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {\n                cur = t1.__internal$_current;\n                copy = cur.copyWithoutChildren$0();\n                copy.addChild$1(outerCopy);\n              }\n              if (outerCopy != null)\n                root.addChild$1(outerCopy);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new E._EvaluateVisitor_visitAtRootRule_closure4($async$self, node)), $async$visitAtRootRule$1);\n            case 10:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitAtRootRule$1, $async$completer);\n    },\n    _async_evaluate$_trimIncluded$1: function(nodes) {\n      var $parent, innermostContiguous, i, t2, root,\n        t1 = nodes.length;\n      if (t1 === 0)\n        return this._async_evaluate$_root;\n      $parent = this._async_evaluate$_parent;\n      for (innermostContiguous = null, i = 0; i < t1; ++i) {\n        for (; $parent != nodes[i]; innermostContiguous = null)\n          $parent = $parent._parent;\n        if (innermostContiguous == null)\n          innermostContiguous = i;\n        $parent = $parent._parent;\n      }\n      t2 = this._async_evaluate$_root;\n      if ($parent != t2)\n        return t2;\n      root = nodes[innermostContiguous];\n      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);\n      return root;\n    },\n    _async_evaluate$_scopeForAtRoot$4: function(node, newParent, query, included) {\n      var _this = this,\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure5(_this, newParent, node),\n        t1 = query._all || query._at_root_query$_rule;\n      if (t1 !== query.include)\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure6(_this, scope);\n      if (_this._async_evaluate$_mediaQueries != null && query.excludesName$1(\"media\"))\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure7(_this, scope);\n      if (_this._async_evaluate$_inKeyframes && query.excludesName$1(\"keyframes\"))\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure8(_this, scope);\n      return _this._async_evaluate$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new E._EvaluateVisitor__scopeForAtRoot_closure9()) ? new E._EvaluateVisitor__scopeForAtRoot_closure10(_this, scope) : scope;\n    },\n    visitContentBlock$1: function(node) {\n      return H.throwExpression(P.UnsupportedError$(string$.Evalua));\n    },\n    visitContentRule$1: function(node) {\n      return this.visitContentRule$body$_EvaluateVisitor(node);\n    },\n    visitContentRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, $content;\n      var $async$visitContentRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $content = $async$self._async_evaluate$_environment._async_environment$_content;\n              if ($content == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4(node.$arguments, $content, node, new E._EvaluateVisitor_visitContentRule_closure0($async$self, $content)), $async$visitContentRule$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitContentRule$1, $async$completer);\n    },\n    visitDebugRule$1: function(node) {\n      return this.visitDebugRule$body$_EvaluateVisitor(node);\n    },\n    visitDebugRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, value, t1;\n      var $async$visitDebugRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              t1 = value instanceof D.SassString ? value.text : J.toString$0$(value);\n              $async$self._async_evaluate$_logger.debug$2(0, t1, node.span);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitDebugRule$1, $async$completer);\n    },\n    visitDeclaration$1: function(node) {\n      return this.visitDeclaration$body$_EvaluateVisitor(node);\n    },\n    visitDeclaration$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, oldDeclarationName, $async$temp1;\n      var $async$visitDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!($async$self._async_evaluate$_styleRule != null && !$async$self._async_evaluate$_atRootExcludingStyleRule) && !$async$self._async_evaluate$_inUnknownAtRule && !$async$self._async_evaluate$_inKeyframes)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Declarm, node.span));\n              t1 = node.name;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);\n            case 3:\n              // returning from await.\n              $name = $async$result;\n              t2 = $async$self._async_evaluate$_declarationName;\n              if (t2 != null)\n                $name = new F.CssValue(t2 + \"-\" + H.S($name.get$value($name)), $name.get$span(), type$.CssValue_legacy_String);\n              t2 = node.value;\n              $async$goto = t2 == null ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$temp1 = F;\n              $async$goto = 7;\n              return P._asyncAwait(t2.accept$1($async$self), $async$visitDeclaration$1);\n            case 7:\n              // returning from await.\n              $async$result = new $async$temp1.CssValue($async$result, t2.get$span(), type$.CssValue_legacy_Value);\n            case 5:\n              // join\n              cssValue = $async$result;\n              if (cssValue != null) {\n                t3 = cssValue.value;\n                t3 = !t3.get$isBlank() || t3.get$asList().length === 0;\n              } else\n                t3 = false;\n              if (t3) {\n                t3 = $async$self._async_evaluate$_parent;\n                t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), \"--\");\n                t2 = $async$self._async_evaluate$_expressionNode$1(t2);\n                t2 = t2 == null ? null : t2.get$span();\n                t3.addChild$1(L.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));\n              } else if (J.startsWith$1$s($name.get$value($name), \"--\") && node.children == null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(\"Custom property values may not be empty.\", t2.get$span()));\n              $async$goto = node.children != null ? 8 : 9;\n              break;\n            case 8:\n              // then\n              oldDeclarationName = $async$self._async_evaluate$_declarationName;\n              $async$self._async_evaluate$_declarationName = $name.get$value($name);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new E._EvaluateVisitor_visitDeclaration_closure0($async$self, node), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);\n            case 10:\n              // returning from await.\n              $async$self._async_evaluate$_declarationName = oldDeclarationName;\n            case 9:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitDeclaration$1, $async$completer);\n    },\n    visitEachRule$1: function(node) {\n      return this.visitEachRule$body$_EvaluateVisitor(node);\n    },\n    visitEachRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;\n      var $async$visitEachRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.list;\n              $async$goto = 3;\n              return P._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);\n            case 3:\n              // returning from await.\n              list = $async$result;\n              nodeWithSpan = $async$self._async_evaluate$_expressionNode$1(t1);\n              setVariables = node.variables.length === 1 ? new E._EvaluateVisitor_visitEachRule_closure2($async$self, node, nodeWithSpan) : new E._EvaluateVisitor_visitEachRule_closure3($async$self, node, nodeWithSpan);\n              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitEachRule_closure4($async$self, list, setVariables, node), true, type$.legacy_Value);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitEachRule$1, $async$completer);\n    },\n    _async_evaluate$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {\n      var i,\n        list = value.get$asList(),\n        t1 = variables.length,\n        minLength = Math.min(t1, list.length);\n      for (i = 0; i < minLength; ++i)\n        this._async_evaluate$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);\n      for (i = minLength; i < t1; ++i)\n        this._async_evaluate$_environment.setLocalVariable$3(variables[i], C.C_SassNull0, nodeWithSpan);\n    },\n    visitErrorRule$1: function(node) {\n      return this.visitErrorRule$body$_EvaluateVisitor(node);\n    },\n    visitErrorRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$self = this, $async$temp1, $async$temp2;\n      var $async$visitErrorRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = H;\n              $async$temp2 = J;\n              $async$goto = 2;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);\n            case 2:\n              // returning from await.\n              throw $async$temp1.wrapException($async$self._async_evaluate$_exception$2($async$temp2.toString$0$($async$result), node.span));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitErrorRule$1, $async$completer);\n    },\n    visitExtendRule$1: function(node) {\n      return this.visitExtendRule$body$_EvaluateVisitor(node);\n    },\n    visitExtendRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4;\n      var $async$visitExtendRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!($async$self._async_evaluate$_styleRule != null && !$async$self._async_evaluate$_atRootExcludingStyleRule) || $async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.x40exten, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);\n            case 3:\n              // returning from await.\n              targetText = $async$result;\n              for (t1 = $async$self._async_evaluate$_adjustParseError$2(targetText, new E._EvaluateVisitor_visitExtendRule_closure0($async$self, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector, _i = 0; _i < t2; ++_i) {\n                t4 = t1[_i].components;\n                if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector))\n                  throw H.wrapException(E.SassFormatException$(\"complex selectors may not be extended.\", targetText.get$span()));\n                t4 = t3._as(C.JSArray_methods.get$first(t4)).components;\n                if (t4.length !== 1)\n                  throw H.wrapException(E.SassFormatException$(string$.compou + C.JSArray_methods.join$1(t4, \", \") + string$.x60_inst, targetText.get$span()));\n                $async$self._async_evaluate$_extender.addExtension$4($async$self._async_evaluate$_styleRule.selector, C.JSArray_methods.get$first(t4), node, $async$self._async_evaluate$_mediaQueries);\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitExtendRule$1, $async$completer);\n    },\n    visitAtRule$1: function(node) {\n      return this.visitAtRule$body$_EvaluateVisitor(node);\n    },\n    visitAtRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, $name, t1, value, wasInKeyframes, wasInUnknownAtRule;\n      var $async$visitAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.At_rul, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$1(node.name), $async$visitAtRule$1);\n            case 3:\n              // returning from await.\n              $name = $async$result;\n              t1 = node.value;\n              $async$goto = t1 == null ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$3$trim$warnForColor(t1, true, true), $async$visitAtRule$1);\n            case 7:\n              // returning from await.\n            case 5:\n              // join\n              value = $async$result;\n              if (node.children == null) {\n                $async$self._async_evaluate$_parent.addChild$1(U.ModifiableCssAtRule$($name, node.span, true, value));\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              wasInKeyframes = $async$self._async_evaluate$_inKeyframes;\n              wasInUnknownAtRule = $async$self._async_evaluate$_inUnknownAtRule;\n              if (B.unvendor($name.get$value($name)) === \"keyframes\")\n                $async$self._async_evaluate$_inKeyframes = true;\n              else\n                $async$self._async_evaluate$_inUnknownAtRule = true;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$($name, node.span, false, value), new E._EvaluateVisitor_visitAtRule_closure1($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitAtRule_closure2(), type$.legacy_ModifiableCssAtRule, type$.Null), $async$visitAtRule$1);\n            case 8:\n              // returning from await.\n              $async$self._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;\n              $async$self._async_evaluate$_inKeyframes = wasInKeyframes;\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitAtRule$1, $async$completer);\n    },\n    visitForRule$1: function(node) {\n      return this.visitForRule$body$_EvaluateVisitor(node);\n    },\n    visitForRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;\n      var $async$visitForRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              t2 = node.from;\n              t3 = type$.legacy_SassNumber;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(t2, new E._EvaluateVisitor_visitForRule_closure4($async$self, node), t3), $async$visitForRule$1);\n            case 3:\n              // returning from await.\n              fromNumber = $async$result;\n              t4 = node.to;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(t4, new E._EvaluateVisitor_visitForRule_closure5($async$self, node), t3), $async$visitForRule$1);\n            case 4:\n              // returning from await.\n              toNumber = $async$result;\n              from = $async$self._async_evaluate$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitForRule_closure6(fromNumber, toNumber));\n              to = t1.to = $async$self._async_evaluate$_addExceptionSpan$2(t4, new E._EvaluateVisitor_visitForRule_closure7(toNumber));\n              direction = from > to ? -1 : 1;\n              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitForRule_closure8(t1, $async$self, node, from, direction), true, type$.legacy_Value);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitForRule$1, $async$completer);\n    },\n    visitForwardRule$1: function(node) {\n      return this.visitForwardRule$body$_EvaluateVisitor(node);\n    },\n    visitForwardRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, oldConfiguration, adjustedConfiguration, t1, t2, t3;\n      var $async$visitForwardRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldConfiguration = $async$self._async_evaluate$_configuration;\n              adjustedConfiguration = oldConfiguration.throughForward$1(node);\n              t1 = node.configuration;\n              t2 = t1.length;\n              t3 = node.url;\n              $async$goto = t2 !== 0 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);\n            case 6:\n              // returning from await.\n              newConfiguration = $async$result;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_loadModule$5$configuration(t3, \"@forward\", node, new E._EvaluateVisitor_visitForwardRule_closure1($async$self, node), newConfiguration), $async$visitForwardRule$1);\n            case 7:\n              // returning from await.\n              t3 = type$.legacy_String;\n              t4 = P.LinkedHashSet_LinkedHashSet(t3);\n              for (_i = 0; _i < t2; ++_i) {\n                variable = t1[_i];\n                if (!variable.isGuarded)\n                  t4.add$1(0, variable.name);\n              }\n              $async$self._async_evaluate$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);\n              t3 = P.LinkedHashSet_LinkedHashSet(t3);\n              for (_i = 0; _i < t2; ++_i)\n                t3.add$1(0, t1[_i].name);\n              $async$self._async_evaluate$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$self._async_evaluate$_configuration = adjustedConfiguration;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._async_evaluate$_loadModule$4(t3, \"@forward\", node, new E._EvaluateVisitor_visitForwardRule_closure2($async$self, node)), $async$visitForwardRule$1);\n            case 8:\n              // returning from await.\n              $async$self._async_evaluate$_configuration = oldConfiguration;\n            case 4:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitForwardRule$1, $async$completer);\n    },\n    _async_evaluate$_addForwardConfiguration$2: function(configuration, node) {\n      return this._addForwardConfiguration$body$_EvaluateVisitor(configuration, node);\n    },\n    _addForwardConfiguration$body$_EvaluateVisitor: function(configuration, node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Configuration),\n        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, t1, newValues, $async$temp1, $async$temp2, $async$temp3;\n      var $async$_async_evaluate$_addForwardConfiguration$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = configuration._values;\n              newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue), type$.legacy_String, type$.legacy_ConfiguredValue);\n              t2 = node.configuration, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              variable = t2[_i];\n              if (variable.isGuarded) {\n                t4 = variable.name;\n                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);\n                if (t5 != null && !J.$eq$(t5.value, C.C_SassNull0)) {\n                  newValues.$indexSet(0, t4, t5);\n                  // goto for update\n                  $async$goto = 4;\n                  break;\n                }\n              }\n              t4 = variable.name;\n              t5 = variable.expression;\n              $async$temp1 = newValues;\n              $async$temp2 = t4;\n              $async$temp3 = Z;\n              $async$goto = 6;\n              return P._asyncAwait(t5.accept$1($async$self), $async$_async_evaluate$_addForwardConfiguration$2);\n            case 6:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate$_expressionNode$1(t5)));\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = new A.Configuration(newValues, node, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_addForwardConfiguration$2, $async$completer);\n    },\n    _async_evaluate$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {\n      var t1, t2, t3, _i, $name;\n      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        $name = t2[_i];\n        if (except.contains$1(0, $name))\n          continue;\n        if (!downstream._values.containsKey$1($name))\n          if (!t1.get$isEmpty(t1))\n            t1.remove$1(0, $name);\n      }\n    },\n    _async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {\n      configuration._values.forEach$1(0, new E._EvaluateVisitor__assertConfigurationIsEmpty_closure0(this, only, nameInError));\n    },\n    _async_evaluate$_assertConfigurationIsEmpty$1: function(configuration) {\n      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);\n    },\n    _async_evaluate$_assertConfigurationIsEmpty$2$only: function(configuration, only) {\n      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);\n    },\n    _async_evaluate$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {\n      return this._async_evaluate$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);\n    },\n    visitFunctionRule$1: function(node) {\n      return this.visitFunctionRule$body$_EvaluateVisitor(node);\n    },\n    visitFunctionRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;\n      var $async$visitFunctionRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate$_environment;\n              t2 = t1.closure$0();\n              t3 = t1._async_environment$_functions;\n              index = t3.length - 1;\n              t4 = node.name;\n              t1._async_environment$_functionIndices.$indexSet(0, t4, index);\n              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitFunctionRule$1, $async$completer);\n    },\n    visitIfRule$1: function(node) {\n      return this.visitIfRule$body$_EvaluateVisitor(node);\n    },\n    visitIfRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;\n      var $async$visitIfRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              _box_0 = {};\n              _box_0.clause = node.lastClause;\n              t1 = node.clauses, t2 = t1.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              clauseToCheck = t1[_i];\n              $async$goto = 6;\n              return P._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);\n            case 6:\n              // returning from await.\n              if ($async$result.get$isTruthy()) {\n                _box_0.clause = clauseToCheck;\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t1 = _box_0.clause;\n              if (t1 == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitIfRule_closure0(_box_0, $async$self), true, t1.hasDeclarations, type$.legacy_Value), $async$visitIfRule$1);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIfRule$1, $async$completer);\n    },\n    visitImportRule$1: function(node) {\n      return this.visitImportRule$body$_EvaluateVisitor(node);\n    },\n    visitImportRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;\n      var $async$visitImportRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.imports, t2 = t1.length, t3 = type$.legacy_StaticImport, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $import = t1[_i];\n              $async$goto = $import instanceof B.DynamicImport ? 6 : 8;\n              break;\n            case 6:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait($async$self._async_evaluate$_visitDynamicImport$1($import), $async$visitImportRule$1);\n            case 9:\n              // returning from await.\n              // goto join\n              $async$goto = 7;\n              break;\n            case 8:\n              // else\n              $async$goto = 10;\n              return P._asyncAwait($async$self._visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);\n            case 10:\n              // returning from await.\n            case 7:\n              // join\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitImportRule$1, $async$completer);\n    },\n    _async_evaluate$_visitDynamicImport$1: function($import) {\n      return this._async_evaluate$_withStackFrame$1$3(\"@import\", $import, new E._EvaluateVisitor__visitDynamicImport_closure0(this, $import), type$.void);\n    },\n    _async_evaluate$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {\n      return this._loadStylesheet$body$_EvaluateVisitor(url, span, baseUrl, forImport);\n    },\n    _async_evaluate$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {\n      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);\n    },\n    _async_evaluate$_loadStylesheet$3$forImport: function(url, span, forImport) {\n      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);\n    },\n    _loadStylesheet$body$_EvaluateVisitor: function(url, span, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, tuple, error, error0, message, t1, t2, t3, exception, message0, $async$exception;\n      var $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$self._async_evaluate$_importSpan = span;\n              t1 = P.Uri_parse(url);\n              t2 = $async$self._async_evaluate$_importer;\n              if (baseUrl == null) {\n                t3 = $async$self._async_evaluate$_stylesheet;\n                t3 = t3 == null ? null : t3.span;\n                t3 = t3 == null ? null : t3.file.url;\n              } else\n                t3 = baseUrl;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport), $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport);\n            case 7:\n              // returning from await.\n              tuple = $async$result;\n              if (tuple != null) {\n                $async$returnValue = tuple;\n                $async$next = [1];\n                // goto finally\n                $async$goto = 5;\n                break;\n              }\n              if (C.JSString_methods.startsWith$1(url, \"package:\") && true)\n                throw H.wrapException(string$.x22packa);\n              else\n                throw H.wrapException(\"Can't find stylesheet to import.\");\n              $async$next.push(6);\n              // goto finally\n              $async$goto = 5;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.SassException) {\n                error = t1;\n                t1 = $async$self._async_evaluate$_exception$2(error._span_exception$_message, error.get$span());\n                throw H.wrapException(t1);\n              } else {\n                error0 = t1;\n                message = null;\n                try {\n                  message = H._asStringS(J.get$message$x(error0));\n                } catch (exception) {\n                  H.unwrapException($async$exception);\n                  message0 = J.toString$0$(error0);\n                  message = message0;\n                }\n                t1 = $async$self._async_evaluate$_exception$1(message);\n                throw H.wrapException(t1);\n              }\n              $async$next.push(6);\n              // goto finally\n              $async$goto = 5;\n              break;\n            case 3:\n              // uncaught\n              $async$next = [2];\n            case 5:\n              // finally\n              $async$handler = 2;\n              $async$self._async_evaluate$_importSpan = null;\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport, $async$completer);\n    },\n    _visitStaticImport$1: function($import) {\n      return this._visitStaticImport$body$_EvaluateVisitor($import);\n    },\n    _visitStaticImport$body$_EvaluateVisitor: function($import) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, resolvedSupports, t1, mediaQuery, node, t2, url, supports, $async$temp1, $async$temp2;\n      var $async$_visitStaticImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$1($import.url), $async$_visitStaticImport$1);\n            case 3:\n              // returning from await.\n              url = $async$result;\n              supports = $import.supports;\n              $async$goto = supports instanceof L.SupportsDeclaration ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$temp1 = H;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._evaluateToCss$1(supports.name), $async$_visitStaticImport$1);\n            case 7:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \": \";\n              $async$temp2 = H;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._evaluateToCss$1(supports.value), $async$_visitStaticImport$1);\n            case 8:\n              // returning from await.\n              resolvedSupports = $async$temp1 + $async$temp2.S($async$result);\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$goto = supports == null ? 9 : 11;\n              break;\n            case 9:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 10;\n              break;\n            case 11:\n              // else\n              $async$goto = 12;\n              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(supports), $async$_visitStaticImport$1);\n            case 12:\n              // returning from await.\n            case 10:\n              // join\n              resolvedSupports = $async$result;\n            case 5:\n              // join\n              t1 = $import.media;\n              $async$goto = t1 == null ? 13 : 15;\n              break;\n            case 13:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 14;\n              break;\n            case 15:\n              // else\n              $async$goto = 16;\n              return P._asyncAwait($async$self._async_evaluate$_visitMediaQueries$1(t1), $async$_visitStaticImport$1);\n            case 16:\n              // returning from await.\n            case 14:\n              // join\n              mediaQuery = $async$result;\n              t1 = $import.span;\n              node = F.ModifiableCssImport$(url, t1, mediaQuery, resolvedSupports == null ? null : new F.CssValue(\"supports(\" + resolvedSupports + \")\", supports.get$span(), type$.CssValue_legacy_String));\n              t1 = $async$self._async_evaluate$_parent;\n              t2 = $async$self._async_evaluate$_root;\n              if (t1 != t2)\n                t1.addChild$1(node);\n              else if ($async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n                $async$self._async_evaluate$_root.addChild$1(node);\n                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;\n              } else {\n                t1 = $async$self._async_evaluate$_outOfOrderImports;\n                (t1 == null ? $async$self._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(node);\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_visitStaticImport$1, $async$completer);\n    },\n    visitIncludeRule$1: function(node) {\n      return this.visitIncludeRule$body$_EvaluateVisitor(node);\n    },\n    visitIncludeRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, nodeWithSpan, t1, t2, contentCallable, mixin;\n      var $async$visitIncludeRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              mixin = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitIncludeRule_closure2($async$self, node));\n              if (mixin == null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(\"Undefined mixin.\", node.span));\n              nodeWithSpan = new B._FakeAstNode(new E._EvaluateVisitor_visitIncludeRule_closure3(node));\n              $async$goto = type$.legacy_AsyncBuiltInCallable._is(mixin) ? 3 : 5;\n              break;\n            case 3:\n              // then\n              if (node.content != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(\"Mixin doesn't accept a content block.\", node.span));\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan), $async$visitIncludeRule$1);\n            case 6:\n              // returning from await.\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment._is(mixin) ? 7 : 9;\n              break;\n            case 7:\n              // then\n              t1 = node.content;\n              t2 = t1 == null;\n              if (!t2 && !type$.legacy_MixinRule._as(mixin.declaration).hasContent)\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(\"Mixin doesn't accept a content block.\", node.get$spanWithoutContent(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(node.get$spanWithoutContent())));\n              contentCallable = t2 ? null : new E.UserDefinedCallable(t1, $async$self._async_evaluate$_environment.closure$0(), type$.UserDefinedCallable_legacy_AsyncEnvironment);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new E._EvaluateVisitor_visitIncludeRule_closure4($async$self, contentCallable, mixin, nodeWithSpan)), $async$visitIncludeRule$1);\n            case 10:\n              // returning from await.\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              throw H.wrapException(P.UnsupportedError$(\"Unknown callable type \" + mixin.toString$0(0) + \".\"));\n            case 8:\n              // join\n            case 4:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIncludeRule$1, $async$completer);\n    },\n    visitMixinRule$1: function(node) {\n      return this.visitMixinRule$body$_EvaluateVisitor(node);\n    },\n    visitMixinRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;\n      var $async$visitMixinRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate$_environment;\n              t2 = t1.closure$0();\n              t3 = t1._async_environment$_mixins;\n              index = t3.length - 1;\n              t4 = node.name;\n              t1._async_environment$_mixinIndices.$indexSet(0, t4, index);\n              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMixinRule$1, $async$completer);\n    },\n    visitLoudComment$1: function(node) {\n      return this.visitLoudComment$body$_EvaluateVisitor(node);\n    },\n    visitLoudComment$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;\n      var $async$visitLoudComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_inFunction) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = $async$self._async_evaluate$_parent;\n              t2 = $async$self._async_evaluate$_root;\n              if (t1 == t2 && $async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;\n              t1 = node.text;\n              $async$temp1 = $async$self._async_evaluate$_parent;\n              $async$temp2 = R;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(t1), $async$visitLoudComment$1);\n            case 3:\n              // returning from await.\n              $async$temp1.addChild$1(new $async$temp2.ModifiableCssComment($async$result, t1.span));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitLoudComment$1, $async$completer);\n    },\n    visitMediaRule$1: function(node) {\n      return this.visitMediaRule$body$_EvaluateVisitor(node);\n    },\n    visitMediaRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, queries, t1, mergedQueries;\n      var $async$visitMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Media_, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_visitMediaQueries$1(node.query), $async$visitMediaRule$1);\n            case 3:\n              // returning from await.\n              queries = $async$result;\n              t1 = $async$self._async_evaluate$_mediaQueries;\n              mergedQueries = t1 == null ? null : $async$self._async_evaluate$_mergeMediaQueries$2(t1, queries);\n              t1 = mergedQueries == null;\n              if (!t1 && mergedQueries.length === 0) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = t1 ? queries : mergedQueries;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new E._EvaluateVisitor_visitMediaRule_closure1($async$self, mergedQueries, queries, node), node.hasDeclarations, new E._EvaluateVisitor_visitMediaRule_closure2(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null), $async$visitMediaRule$1);\n            case 4:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMediaRule$1, $async$completer);\n    },\n    _async_evaluate$_visitMediaQueries$1: function(interpolation) {\n      return this._visitMediaQueries$body$_EvaluateVisitor(interpolation);\n    },\n    _visitMediaQueries$body$_EvaluateVisitor: function(interpolation) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_List_legacy_CssMediaQuery),\n        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;\n      var $async$_async_evaluate$_visitMediaQueries$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = interpolation;\n              $async$temp2 = E;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(interpolation, true), $async$_async_evaluate$_visitMediaQueries$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$self._async_evaluate$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor__visitMediaQueries_closure0($async$self, $async$result));\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_visitMediaQueries$1, $async$completer);\n    },\n    _async_evaluate$_mergeMediaQueries$2: function(queries1, queries2) {\n      var t1, t2, t3, t4, t5, result,\n        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery);\n      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult; t1.moveNext$0();) {\n        t4 = t1.get$current(t1);\n        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {\n          result = t4.merge$1(t5.get$current(t5));\n          if (result === C._SingletonCssMediaQueryMergeResult_empty)\n            continue;\n          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable)\n            return null;\n          queries.push(t3._as(result).query);\n        }\n      }\n      return queries;\n    },\n    visitReturnRule$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitSilentComment$1: function(node) {\n      return this.visitSilentComment$body$_EvaluateVisitor(node);\n    },\n    visitSilentComment$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue;\n      var $async$visitSilentComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSilentComment$1, $async$completer);\n    },\n    visitStyleRule$1: function(node) {\n      return this.visitStyleRule$body$_EvaluateVisitor(node);\n    },\n    visitStyleRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, t1;\n      var $async$visitStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Style_, node.span));\n              t2 = node.selector;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_interpolationToValue$3$trim$warnForColor(t2, true, true), $async$visitStyleRule$1);\n            case 3:\n              // returning from await.\n              selectorText = $async$result;\n              $async$goto = $async$self._async_evaluate$_inKeyframes ? 4 : 5;\n              break;\n            case 4:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(new F.CssValue(P.List_List$unmodifiable($async$self._async_evaluate$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure6($async$self, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String), node.span), new E._EvaluateVisitor_visitStyleRule_closure7($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure8(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null), $async$visitStyleRule$1);\n            case 6:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // join\n              t1.parsedSelector = $async$self._async_evaluate$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure9($async$self, selectorText));\n              parsedSelector = $async$self._async_evaluate$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitStyleRule_closure10(t1, $async$self));\n              t1.parsedSelector = parsedSelector;\n              rule = X.ModifiableCssStyleRule$($async$self._async_evaluate$_extender.addSelector$3(parsedSelector, t2.span, $async$self._async_evaluate$_mediaQueries), node.span, t1.parsedSelector);\n              oldAtRootExcludingStyleRule = $async$self._async_evaluate$_atRootExcludingStyleRule;\n              $async$self._async_evaluate$_atRootExcludingStyleRule = false;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitStyleRule_closure11($async$self, rule, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure12(), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$visitStyleRule$1);\n            case 7:\n              // returning from await.\n              $async$self._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              if (!($async$self._async_evaluate$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n                t1 = $async$self._async_evaluate$_parent.children;\n                t1 = !t1.get$isEmpty(t1);\n              } else\n                t1 = false;\n              if (t1) {\n                t1 = $async$self._async_evaluate$_parent.children;\n                t1.get$last(t1).isGroupEnd = true;\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStyleRule$1, $async$completer);\n    },\n    visitSupportsRule$1: function(node) {\n      return this.visitSupportsRule$body$_EvaluateVisitor(node);\n    },\n    visitSupportsRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;\n      var $async$visitSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Suppor, node.span));\n              t1 = node.condition;\n              $async$temp1 = B;\n              $async$temp2 = F;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(t1), $async$visitSupportsRule$1);\n            case 4:\n              // returning from await.\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through($async$temp1.ModifiableCssSupportsRule$(new $async$temp2.CssValue($async$result, t1.get$span(), type$.CssValue_legacy_String), node.span), new E._EvaluateVisitor_visitSupportsRule_closure1($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitSupportsRule_closure2(), type$.legacy_ModifiableCssSupportsRule, type$.Null), $async$visitSupportsRule$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSupportsRule$1, $async$completer);\n    },\n    _async_evaluate$_visitSupportsCondition$1: function(condition) {\n      return this._visitSupportsCondition$body$_EvaluateVisitor(condition);\n    },\n    _visitSupportsCondition$body$_EvaluateVisitor: function(condition) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;\n      var $async$_async_evaluate$_visitSupportsCondition$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = condition instanceof U.SupportsOperation ? 3 : 5;\n              break;\n            case 3:\n              // then\n              t1 = condition.operator;\n              $async$temp1 = H;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_parenthesize$2(condition.left, t1), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 6:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \" \" + t1 + \" \";\n              $async$temp2 = H;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_parenthesize$2(condition.right, t1), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = condition instanceof M.SupportsNegation ? 8 : 10;\n              break;\n            case 8:\n              // then\n              $async$temp1 = H;\n              $async$goto = 11;\n              return P._asyncAwait($async$self._async_evaluate$_parenthesize$1(condition.condition), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 11:\n              // returning from await.\n              $async$returnValue = \"not \" + $async$temp1.S($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 9;\n              break;\n            case 10:\n              // else\n              $async$goto = condition instanceof X.SupportsInterpolation ? 12 : 14;\n              break;\n            case 12:\n              // then\n              $async$goto = 15;\n              return P._asyncAwait($async$self._evaluateToCss$2$quote(condition.expression, false), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 15:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 13;\n              break;\n            case 14:\n              // else\n              $async$goto = condition instanceof L.SupportsDeclaration ? 16 : 18;\n              break;\n            case 16:\n              // then\n              $async$temp1 = H;\n              $async$goto = 19;\n              return P._asyncAwait($async$self._evaluateToCss$1(condition.name), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 19:\n              // returning from await.\n              $async$temp1 = \"(\" + $async$temp1.S($async$result) + \": \";\n              $async$temp2 = H;\n              $async$goto = 20;\n              return P._asyncAwait($async$self._evaluateToCss$1(condition.value), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 20:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 17;\n              break;\n            case 18:\n              // else\n              $async$goto = condition instanceof F.SupportsFunction ? 21 : 23;\n              break;\n            case 21:\n              // then\n              $async$temp1 = H;\n              $async$goto = 24;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.name), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 24:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \"(\";\n              $async$temp2 = H;\n              $async$goto = 25;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.$arguments), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 25:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 22;\n              break;\n            case 23:\n              // else\n              $async$goto = condition instanceof Y.SupportsAnything ? 26 : 28;\n              break;\n            case 26:\n              // then\n              $async$temp1 = H;\n              $async$goto = 29;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(condition.contents), $async$_async_evaluate$_visitSupportsCondition$1);\n            case 29:\n              // returning from await.\n              $async$returnValue = \"(\" + $async$temp1.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 27;\n              break;\n            case 28:\n              // else\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 27:\n              // join\n            case 22:\n              // join\n            case 17:\n              // join\n            case 13:\n              // join\n            case 9:\n              // join\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_visitSupportsCondition$1, $async$completer);\n    },\n    _async_evaluate$_parenthesize$2: function(condition, operator) {\n      return this._parenthesize$body$_EvaluateVisitor(condition, operator);\n    },\n    _async_evaluate$_parenthesize$1: function(condition) {\n      return this._async_evaluate$_parenthesize$2(condition, null);\n    },\n    _parenthesize$body$_EvaluateVisitor: function(condition, operator) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, $async$temp1;\n      var $async$_async_evaluate$_parenthesize$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!(condition instanceof M.SupportsNegation))\n                if (condition instanceof U.SupportsOperation)\n                  t1 = operator == null || operator !== condition.operator;\n                else\n                  t1 = false;\n              else\n                t1 = true;\n              $async$goto = t1 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$temp1 = H;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(condition), $async$_async_evaluate$_parenthesize$2);\n            case 6:\n              // returning from await.\n              $async$returnValue = \"(\" + $async$temp1.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate$_visitSupportsCondition$1(condition), $async$_async_evaluate$_parenthesize$2);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_parenthesize$2, $async$completer);\n    },\n    visitVariableDeclaration$1: function(node) {\n      return this.visitVariableDeclaration$body$_EvaluateVisitor(node);\n    },\n    visitVariableDeclaration$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, value, t2, $async$temp1, $async$temp2, $async$temp3;\n      var $async$visitVariableDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (node.isGuarded) {\n                if (node.namespace == null && $async$self._async_evaluate$_environment._async_environment$_variables.length === 1) {\n                  t1 = $async$self._async_evaluate$_configuration._values;\n                  t1 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, node.name);\n                  if (t1 != null) {\n                    $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure2($async$self, node, t1));\n                    $async$returnValue = null;\n                    // goto return\n                    $async$goto = 1;\n                    break;\n                  }\n                }\n                value = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure3($async$self, node));\n                if (value != null && !value.$eq(0, C.C_SassNull0)) {\n                  $async$returnValue = null;\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n              }\n              if (node.isGlobal && !$async$self._async_evaluate$_environment.globalVariableExists$1(node.name)) {\n                t1 = $async$self._async_evaluate$_environment._async_environment$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName(node.span) + \": null` at the root of the\\nstylesheet.\";\n                t2 = node.span;\n                $async$self._async_evaluate$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, $async$self._async_evaluate$_stackTrace$1(t2));\n              }\n              $async$temp1 = node;\n              $async$temp2 = E;\n              $async$temp3 = node;\n              $async$goto = 3;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitVariableDeclaration$1);\n            case 3:\n              // returning from await.\n              $async$self._async_evaluate$_addExceptionSpan$2($async$temp1, new $async$temp2._EvaluateVisitor_visitVariableDeclaration_closure4($async$self, $async$temp3, $async$result.withoutSlash$0()));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitVariableDeclaration$1, $async$completer);\n    },\n    visitUseRule$1: function(node) {\n      return this.visitUseRule$body$_EvaluateVisitor(node);\n    },\n    visitUseRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, configuration, t3, _i, variable, t4, t5, t1, t2, $async$temp1, $async$temp2, $async$temp3;\n      var $async$visitUseRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.configuration;\n              t2 = t1.length;\n              $async$goto = t2 === 0 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              configuration = C.Configuration_Map_empty_null_true;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);\n              _i = 0;\n            case 6:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 8;\n                break;\n              }\n              variable = t1[_i];\n              t4 = variable.name;\n              t5 = variable.expression;\n              $async$temp1 = t3;\n              $async$temp2 = t4;\n              $async$temp3 = Z;\n              $async$goto = 9;\n              return P._asyncAwait(t5.accept$1($async$self), $async$visitUseRule$1);\n            case 9:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate$_expressionNode$1(t5)));\n            case 7:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 6;\n              break;\n            case 8:\n              // after for\n              configuration = new A.Configuration(t3, node, false);\n            case 4:\n              // join\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate$_loadModule$5$configuration(node.url, \"@use\", node, new E._EvaluateVisitor_visitUseRule_closure0($async$self, node), configuration), $async$visitUseRule$1);\n            case 10:\n              // returning from await.\n              $async$self._async_evaluate$_assertConfigurationIsEmpty$1(configuration);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitUseRule$1, $async$completer);\n    },\n    visitWarnRule$1: function(node) {\n      return this.visitWarnRule$body$_EvaluateVisitor(node);\n    },\n    visitWarnRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, value, t1;\n      var $async$visitWarnRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitWarnRule_closure0($async$self, node), type$.legacy_Value), $async$visitWarnRule$1);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              t1 = value instanceof D.SassString ? value.text : $async$self._async_evaluate$_serialize$2(value, node.expression);\n              $async$self._async_evaluate$_logger.warn$2$trace(0, t1, $async$self._async_evaluate$_stackTrace$1(node.span));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitWarnRule$1, $async$completer);\n    },\n    visitWhileRule$1: function(node) {\n      return this._async_evaluate$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitWhileRule_closure0(this, node), true, node.hasDeclarations, type$.legacy_Value);\n    },\n    visitBinaryOperationExpression$1: function(node) {\n      return this._addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitBinaryOperationExpression_closure0(this, node), type$.legacy_Value);\n    },\n    visitValueExpression$1: function(node) {\n      return this.visitValueExpression$body$_EvaluateVisitor(node);\n    },\n    visitValueExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue;\n      var $async$visitValueExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitValueExpression$1, $async$completer);\n    },\n    visitVariableExpression$1: function(node) {\n      return this.visitVariableExpression$body$_EvaluateVisitor(node);\n    },\n    visitVariableExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, result;\n      var $async$visitVariableExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              result = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableExpression_closure0($async$self, node));\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              throw H.wrapException($async$self._async_evaluate$_exception$2(\"Undefined variable.\", node.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitVariableExpression$1, $async$completer);\n    },\n    visitUnaryOperationExpression$1: function(node) {\n      return this.visitUnaryOperationExpression$body$_EvaluateVisitor(node);\n    },\n    visitUnaryOperationExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, operand, t1;\n      var $async$visitUnaryOperationExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          $async$outer:\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                $async$goto = 3;\n                return P._asyncAwait(node.operand.accept$1($async$self), $async$visitUnaryOperationExpression$1);\n              case 3:\n                // returning from await.\n                operand = $async$result;\n                t1 = node.operator;\n                switch (t1) {\n                  case C.UnaryOperator_j2w:\n                    $async$returnValue = operand.unaryPlus$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_U4G:\n                    $async$returnValue = operand.unaryMinus$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_zDx:\n                    operand.toString;\n                    $async$returnValue = new D.SassString(\"/\" + N.serializeValue0(operand, false, true), false);\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_not_not:\n                    $async$returnValue = operand.unaryNot$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  default:\n                    throw H.wrapException(P.StateError$(\"Unknown unary operator \" + H.S(t1) + \".\"));\n                }\n              case 1:\n                // return\n                return P._asyncReturn($async$returnValue, $async$completer);\n            }\n      });\n      return P._asyncStartSync($async$visitUnaryOperationExpression$1, $async$completer);\n    },\n    visitBooleanExpression$1: function(node) {\n      return this.visitBooleanExpression$body$_EvaluateVisitor(node);\n    },\n    visitBooleanExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassBoolean),\n        $async$returnValue;\n      var $async$visitBooleanExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value ? C.SassBoolean_true0 : C.SassBoolean_false0;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitBooleanExpression$1, $async$completer);\n    },\n    visitIfExpression$1: function(node) {\n      return this.visitIfExpression$body$_EvaluateVisitor(node);\n    },\n    visitIfExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, condition, ifTrue, ifFalse, pair, positional, named, t1;\n      var $async$visitIfExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_evaluateMacroArguments$1(node), $async$visitIfExpression$1);\n            case 3:\n              // returning from await.\n              pair = $async$result;\n              positional = pair.item1;\n              named = pair.item2;\n              t1 = J.getInterceptor$asx(positional);\n              $async$self._async_evaluate$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration(), node);\n              condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, \"condition\");\n              ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, \"if-true\");\n              ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, \"if-false\");\n              $async$goto = 5;\n              return P._asyncAwait(condition.accept$1($async$self), $async$visitIfExpression$1);\n            case 5:\n              // returning from await.\n              $async$goto = 4;\n              return P._asyncAwait(($async$result.get$isTruthy() ? ifTrue : ifFalse).accept$1($async$self), $async$visitIfExpression$1);\n            case 4:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIfExpression$1, $async$completer);\n    },\n    visitNullExpression$1: function(node) {\n      return this.visitNullExpression$body$_EvaluateVisitor(node);\n    },\n    visitNullExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNull),\n        $async$returnValue;\n      var $async$visitNullExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = C.C_SassNull0;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitNullExpression$1, $async$completer);\n    },\n    visitNumberExpression$1: function(node) {\n      return this.visitNumberExpression$body$_EvaluateVisitor(node);\n    },\n    visitNumberExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),\n        $async$returnValue;\n      var $async$visitNumberExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = T.SassNumber$(node.value, node.unit);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitNumberExpression$1, $async$completer);\n    },\n    visitParenthesizedExpression$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitColorExpression$1: function(node) {\n      return this.visitColorExpression$body$_EvaluateVisitor(node);\n    },\n    visitColorExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassColor),\n        $async$returnValue;\n      var $async$visitColorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitColorExpression$1, $async$completer);\n    },\n    visitListExpression$1: function(node) {\n      return this.visitListExpression$body$_EvaluateVisitor(node);\n    },\n    visitListExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassList),\n        $async$returnValue, $async$self = this, $async$temp1;\n      var $async$visitListExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = D;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync(node.contents, new E._EvaluateVisitor_visitListExpression_closure0($async$self), type$.legacy_Expression, type$.legacy_Value), $async$visitListExpression$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$temp1.SassList$($async$result, node.separator, node.hasBrackets);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitListExpression$1, $async$completer);\n    },\n    visitMapExpression$1: function(node) {\n      return this.visitMapExpression$body$_EvaluateVisitor(node);\n    },\n    visitMapExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassMap),\n        $async$returnValue, $async$self = this, t2, t3, _i, pair, t4, keyValue, valueValue, t1, map, keyNodes;\n      var $async$visitMapExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = type$.legacy_Value;\n              map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n              keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode);\n              t2 = node.pairs, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              pair = t2[_i];\n              t4 = pair.item1;\n              $async$goto = 6;\n              return P._asyncAwait(t4.accept$1($async$self), $async$visitMapExpression$1);\n            case 6:\n              // returning from await.\n              keyValue = $async$result;\n              $async$goto = 7;\n              return P._asyncAwait(pair.item2.accept$1($async$self), $async$visitMapExpression$1);\n            case 7:\n              // returning from await.\n              valueValue = $async$result;\n              if (map.containsKey$1(keyValue))\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(\"Duplicate key.\", t4.get$span(), \"second key\", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), \"first key\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(t4.get$span())));\n              map.$indexSet(0, keyValue, valueValue);\n              keyNodes.$indexSet(0, keyValue, t4);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = new A.SassMap(H.ConstantMap_ConstantMap$from(map, t1, t1));\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMapExpression$1, $async$completer);\n    },\n    visitFunctionExpression$1: function(node) {\n      return this.visitFunctionExpression$body$_EvaluateVisitor(node);\n    },\n    visitFunctionExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, oldInFunction, result, t1, t2, plainName, $async$temp1, $async$temp2;\n      var $async$visitFunctionExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              t2 = node.name;\n              plainName = t2.get$asPlain();\n              t1.$function = null;\n              $async$goto = (plainName != null ? t1.$function = $async$self._async_evaluate$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure1($async$self, node, plainName)) : null) == null ? 3 : 4;\n              break;\n            case 3:\n              // then\n              if (node.namespace != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(\"Undefined function.\", node.span));\n              $async$temp1 = t1;\n              $async$temp2 = L;\n              $async$goto = 5;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$1(t2), $async$visitFunctionExpression$1);\n            case 5:\n              // returning from await.\n              $async$temp1.$function = new $async$temp2.PlainCssCallable($async$result);\n            case 4:\n              // join\n              oldInFunction = $async$self._async_evaluate$_inFunction;\n              $async$self._async_evaluate$_inFunction = true;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_addErrorSpan$1$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure2(t1, $async$self, node), type$.legacy_Value), $async$visitFunctionExpression$1);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_inFunction = oldInFunction;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitFunctionExpression$1, $async$completer);\n    },\n    _async_evaluate$_getFunction$2$namespace: function($name, namespace) {\n      var local = this._async_evaluate$_environment.getFunction$2$namespace($name, namespace);\n      if (local != null || namespace != null)\n        return local;\n      return this._async_evaluate$_builtInFunctions.$index(0, $name);\n    },\n    _async_evaluate$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {\n      return this._runUserDefinedCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan, run);\n    },\n    _runUserDefinedCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan, run) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, evaluated, t1, $name;\n      var $async$_async_evaluate$_runUserDefinedCallable$4 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_evaluateArguments$1($arguments), $async$_async_evaluate$_runUserDefinedCallable$4);\n            case 3:\n              // returning from await.\n              evaluated = $async$result;\n              t1 = callable.declaration.name;\n              $name = t1 == null ? \"@content\" : t1 + \"()\";\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate$_withStackFrame$1$3($name, nodeWithSpan, new E._EvaluateVisitor__runUserDefinedCallable_closure0($async$self, callable, evaluated, nodeWithSpan, run), type$.legacy_Value), $async$_async_evaluate$_runUserDefinedCallable$4);\n            case 4:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_runUserDefinedCallable$4, $async$completer);\n    },\n    _async_evaluate$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {\n      return this._runFunctionCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan);\n    },\n    _runFunctionCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, result, t1, t2, t3, first, _i, argument, rest, $async$temp1;\n      var $async$_async_evaluate$_runFunctionCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = type$.legacy_AsyncBuiltInCallable._is(callable) ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate$_runBuiltInCallable$3($arguments, callable, nodeWithSpan), $async$_async_evaluate$_runFunctionCallable$3);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result == null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Custom, nodeWithSpan.get$span()));\n              $async$returnValue = result.withoutSlash$0();\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment._is(callable) ? 7 : 9;\n              break;\n            case 7:\n              // then\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new E._EvaluateVisitor__runFunctionCallable_closure0($async$self, callable)), $async$_async_evaluate$_runFunctionCallable$3);\n            case 10:\n              // returning from await.\n              $async$returnValue = $async$result.withoutSlash$0();\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              $async$goto = callable instanceof L.PlainCssCallable ? 11 : 13;\n              break;\n            case 11:\n              // then\n              t1 = $arguments.named;\n              if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Plain_, nodeWithSpan.get$span()));\n              t1 = H.S(callable.name) + \"(\";\n              t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0;\n            case 14:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 16;\n                break;\n              }\n              argument = t2[_i];\n              if (first)\n                first = false;\n              else\n                t1 += \", \";\n              $async$temp1 = H;\n              $async$goto = 17;\n              return P._asyncAwait($async$self._evaluateToCss$1(argument), $async$_async_evaluate$_runFunctionCallable$3);\n            case 17:\n              // returning from await.\n              t1 += $async$temp1.S($async$result);\n            case 15:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 14;\n              break;\n            case 16:\n              // after for\n              t2 = $arguments.rest;\n              $async$goto = 18;\n              return P._asyncAwait(t2 == null ? null : t2.accept$1($async$self), $async$_async_evaluate$_runFunctionCallable$3);\n            case 18:\n              // returning from await.\n              rest = $async$result;\n              if (rest != null) {\n                if (!first)\n                  t1 += \", \";\n                t2 = t1 + H.S($async$self._async_evaluate$_serialize$2(rest, t2));\n                t1 = t2;\n              }\n              t1 += H.Primitives_stringFromCharCode(41);\n              $async$returnValue = new D.SassString(t1.charCodeAt(0) == 0 ? t1 : t1, false);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 12;\n              break;\n            case 13:\n              // else\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 12:\n              // join\n            case 8:\n              // join\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_runFunctionCallable$3, $async$completer);\n    },\n    _async_evaluate$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {\n      return this._runBuiltInCallable$body$_EvaluateVisitor($arguments, callable, nodeWithSpan);\n    },\n    _runBuiltInCallable$body$_EvaluateVisitor: function($arguments, callable, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, evaluated, oldCallableNode, $async$exception;\n      var $async$_async_evaluate$_runBuiltInCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_evaluateArguments$2$trackSpans($arguments, false), $async$_async_evaluate$_runBuiltInCallable$3);\n            case 3:\n              // returning from await.\n              evaluated = $async$result;\n              oldCallableNode = $async$self._async_evaluate$_callableNode;\n              $async$self._async_evaluate$_callableNode = nodeWithSpan;\n              namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);\n              tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);\n              overload = tuple.item1;\n              callback = tuple.item2;\n              $async$self._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__runBuiltInCallable_closure1(overload, evaluated, namedSet));\n              declaredArguments = overload.$arguments;\n              i = evaluated.positional.length, t1 = declaredArguments.length;\n            case 4:\n              // for condition\n              if (!(i < t1)) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              argument = declaredArguments[i];\n              t2 = evaluated.positional;\n              t3 = evaluated.named.remove$1(0, argument.name);\n              $async$goto = t3 == null ? 7 : 8;\n              break;\n            case 7:\n              // then\n              t3 = argument.defaultValue;\n              $async$goto = 9;\n              return P._asyncAwait(t3 == null ? null : t3.accept$1($async$self), $async$_async_evaluate$_runBuiltInCallable$3);\n            case 9:\n              // returning from await.\n              t3 = $async$result;\n            case 8:\n              // join\n              t2.push(t3);\n            case 5:\n              // for update\n              ++i;\n              // goto for condition\n              $async$goto = 4;\n              break;\n            case 6:\n              // after for\n              if (overload.restArgument != null) {\n                if (evaluated.positional.length > t1) {\n                  rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);\n                  C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);\n                } else\n                  rest = C.List_empty5;\n                t1 = evaluated.named;\n                argumentList = D.SassArgumentList$(rest, t1, evaluated.separator === C.ListSeparator_undecided ? C.ListSeparator_comma : evaluated.separator);\n                evaluated.positional.push(argumentList);\n              } else\n                argumentList = null;\n              result = null;\n              $async$handler = 11;\n              $async$goto = 14;\n              return P._asyncAwait(callback.call$1(evaluated.positional), $async$_async_evaluate$_runBuiltInCallable$3);\n            case 14:\n              // returning from await.\n              result = $async$result;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 13;\n              break;\n            case 11:\n              // catch\n              $async$handler = 10;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException._is(t1))\n                throw $async$exception;\n              else if (t1 instanceof E.MultiSpanSassScriptException) {\n                error = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n              } else if (t1 instanceof E.MultiSpanSassException) {\n                error0 = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, $async$self._async_evaluate$_stackTrace$1(error0.get$span())));\n              } else {\n                error1 = t1;\n                message = null;\n                try {\n                  message = H._asStringS(J.get$message$x(error1));\n                } catch (exception) {\n                  H.unwrapException($async$exception);\n                  message0 = J.toString$0$(error1);\n                  message = message0;\n                }\n                throw H.wrapException($async$self._async_evaluate$_exception$2(message, nodeWithSpan.get$span()));\n              }\n              // goto after finally\n              $async$goto = 13;\n              break;\n            case 10:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 13:\n              // after finally\n              $async$self._async_evaluate$_callableNode = oldCallableNode;\n              if (argumentList == null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = evaluated.named;\n              if (t1.get$isEmpty(t1)) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (argumentList._wereKeywordsAccessed) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = evaluated.named;\n              t1 = t1.get$keys(t1);\n              t1 = \"No \" + B.pluralize(\"argument\", t1.get$length(t1), null) + \" named \";\n              t2 = evaluated.named;\n              throw H.wrapException(E.MultiSpanSassRuntimeException$(t1 + H.S(B.toSentence(t2.get$keys(t2).map$1$1(0, new E._EvaluateVisitor__runBuiltInCallable_closure2(), type$.legacy_Object), \"or\")) + \".\", nodeWithSpan.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_runBuiltInCallable$3, $async$completer);\n    },\n    _async_evaluate$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {\n      return this._evaluateArguments$body$_EvaluateVisitor($arguments, trackSpans);\n    },\n    _async_evaluate$_evaluateArguments$1: function($arguments) {\n      return this._async_evaluate$_evaluateArguments$2$trackSpans($arguments, null);\n    },\n    _evaluateArguments$body$_EvaluateVisitor: function($arguments, trackSpans) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy__ArgumentResults),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, $async$temp1, $async$temp2;\n      var $async$_async_evaluate$_evaluateArguments$2$trackSpans = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (trackSpans == null)\n                trackSpans = $async$self._async_evaluate$_sourceMap;\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n              t2 = $arguments.positional, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$temp1 = t1;\n              $async$goto = 6;\n              return P._asyncAwait(t2[_i].accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);\n            case 6:\n              // returning from await.\n              $async$temp1.push($async$result);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t4 = type$.legacy_String;\n              t5 = type$.legacy_Value;\n              t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n              t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8);\n            case 7:\n              // for condition\n              if (!t8.moveNext$0()) {\n                // goto after for\n                $async$goto = 8;\n                break;\n              }\n              t9 = t8.get$current(t8);\n              $async$temp1 = t6;\n              $async$temp2 = t9.key;\n              $async$goto = 9;\n              return P._asyncAwait(t9.value.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);\n            case 9:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, $async$result);\n              // goto for condition\n              $async$goto = 7;\n              break;\n            case 8:\n              // after for\n              if (trackSpans) {\n                t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode);\n                for (_i = 0; _i < t3; ++_i)\n                  t8.push($async$self._async_evaluate$_expressionNode$1(t2[_i]));\n                positionalNodes = t8;\n              } else\n                positionalNodes = null;\n              if (trackSpans) {\n                t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n                for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n                  t7 = t3.get$current(t3);\n                  t2.$indexSet(0, t7.key, $async$self._async_evaluate$_expressionNode$1(t7.value));\n                }\n                namedNodes = t2;\n              } else\n                namedNodes = null;\n              t2 = $arguments.rest;\n              if (t2 == null) {\n                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 10;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);\n            case 10:\n              // returning from await.\n              rest = $async$result;\n              restNodeForSpan = trackSpans ? $async$self._async_evaluate$_expressionNode$1(t2) : null;\n              if (rest instanceof A.SassMap) {\n                $async$self._async_evaluate$_addRestMap$1$3(t6, rest, t2, t5);\n                if (namedNodes != null) {\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n                  for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString; t3.moveNext$0();)\n                    t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);\n                  namedNodes.addAll$1(0, t2);\n                }\n                separator = C.ListSeparator_undecided;\n              } else if (rest instanceof D.SassList) {\n                t2 = rest._list$_contents;\n                C.JSArray_methods.addAll$1(t1, t2);\n                if (positionalNodes != null)\n                  C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode));\n                separator = rest.separator;\n                if (rest instanceof D.SassArgumentList) {\n                  rest._wereKeywordsAccessed = true;\n                  rest._keywords.forEach$1(0, new E._EvaluateVisitor__evaluateArguments_closure0(t6, namedNodes, restNodeForSpan));\n                }\n              } else {\n                t1.push(rest);\n                if (positionalNodes != null)\n                  positionalNodes.push(restNodeForSpan);\n                separator = C.ListSeparator_undecided;\n              }\n              t2 = $arguments.keywordRest;\n              if (t2 == null) {\n                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, separator);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 11;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateArguments$2$trackSpans);\n            case 11:\n              // returning from await.\n              keywordRest = $async$result;\n              keywordRestNodeForSpan = trackSpans ? $async$self._async_evaluate$_expressionNode$1(t2) : null;\n              if (keywordRest instanceof A.SassMap) {\n                $async$self._async_evaluate$_addRestMap$1$3(t6, keywordRest, t2, t5);\n                if (namedNodes != null) {\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n                  for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString; t3.moveNext$0();)\n                    t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);\n                  namedNodes.addAll$1(0, t2);\n                }\n                $async$returnValue = new E._ArgumentResults0(t1, positionalNodes, t6, namedNodes, separator);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", t2.get$span()));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_evaluateArguments$2$trackSpans, $async$completer);\n    },\n    _async_evaluate$_evaluateMacroArguments$1: function(invocation) {\n      return this._evaluateMacroArguments$body$_EvaluateVisitor(invocation);\n    },\n    _evaluateMacroArguments$body$_EvaluateVisitor: function(invocation) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression),\n        $async$returnValue, $async$self = this, t3, positional, named, rest, keywordRest, t1, t2;\n      var $async$_async_evaluate$_evaluateMacroArguments$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = invocation.$arguments;\n              t2 = t1.rest;\n              if (t2 == null) {\n                $async$returnValue = new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t3 = t1.positional;\n              positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1(\"JSArray<1>\"));\n              t3 = type$.legacy_Expression;\n              named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);\n              $async$goto = 3;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate$_evaluateMacroArguments$1);\n            case 3:\n              // returning from await.\n              rest = $async$result;\n              if (rest instanceof A.SassMap)\n                $async$self._async_evaluate$_addRestMap$1$4(named, rest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure3(), t3);\n              else if (rest instanceof D.SassList) {\n                t2 = rest._list$_contents;\n                C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new E._EvaluateVisitor__evaluateMacroArguments_closure4(), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Expression*>\")));\n                if (rest instanceof D.SassArgumentList) {\n                  rest._wereKeywordsAccessed = true;\n                  rest._keywords.forEach$1(0, new E._EvaluateVisitor__evaluateMacroArguments_closure5(named));\n                }\n              } else\n                positional.push(new F.ValueExpression(rest, null));\n              t1 = t1.keywordRest;\n              if (t1 == null) {\n                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 4;\n              return P._asyncAwait(t1.accept$1($async$self), $async$_async_evaluate$_evaluateMacroArguments$1);\n            case 4:\n              // returning from await.\n              keywordRest = $async$result;\n              if (keywordRest instanceof A.SassMap) {\n                $async$self._async_evaluate$_addRestMap$1$4(named, keywordRest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure6(), t3);\n                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", invocation.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_evaluateMacroArguments$1, $async$completer);\n    },\n    _async_evaluate$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {\n      var t1 = {};\n      t1.convert = convert;\n      if (convert == null)\n        t1.convert = new E._EvaluateVisitor__addRestMap_closure1($T);\n      map.contents.forEach$1(0, new E._EvaluateVisitor__addRestMap_closure2(t1, this, values, map, nodeWithSpan));\n    },\n    _async_evaluate$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {\n      return this._async_evaluate$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);\n    },\n    _async_evaluate$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {\n      return this._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__verifyArguments_closure0($arguments, positional, named));\n    },\n    visitSelectorExpression$1: function(node) {\n      return this.visitSelectorExpression$body$_EvaluateVisitor(node);\n    },\n    visitSelectorExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1;\n      var $async$visitSelectorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate$_styleRule;\n              if (t1 == null) {\n                $async$returnValue = C.C_SassNull0;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = t1.originalSelector.get$asSassList();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSelectorExpression$1, $async$completer);\n    },\n    visitStringExpression$1: function(node) {\n      return this.visitStringExpression$body$_EvaluateVisitor(node);\n    },\n    visitStringExpression$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassString),\n        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;\n      var $async$visitStringExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = D;\n              $async$temp2 = J;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync(node.text.contents, new E._EvaluateVisitor_visitStringExpression_closure0($async$self), type$.legacy_Object, type$.legacy_String), $async$visitStringExpression$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = new $async$temp1.SassString($async$temp2.join$0$ax($async$result), node.hasQuotes);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStringExpression$1, $async$completer);\n    },\n    visitCssAtRule$1: function(node) {\n      return this.visitCssAtRule$body$_EvaluateVisitor(node);\n    },\n    visitCssAtRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, wasInKeyframes, wasInUnknownAtRule, t1;\n      var $async$visitCssAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.At_rul, node.span));\n              if (node.isChildless) {\n                $async$self._async_evaluate$_parent.addChild$1(U.ModifiableCssAtRule$(node.name, node.span, true, node.value));\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              wasInKeyframes = $async$self._async_evaluate$_inKeyframes;\n              wasInUnknownAtRule = $async$self._async_evaluate$_inUnknownAtRule;\n              t1 = node.name;\n              if (B.unvendor(t1.get$value(t1)) === \"keyframes\")\n                $async$self._async_evaluate$_inKeyframes = true;\n              else\n                $async$self._async_evaluate$_inUnknownAtRule = true;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$(t1, node.span, false, node.value), new E._EvaluateVisitor_visitCssAtRule_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssAtRule_closure2(), type$.legacy_ModifiableCssAtRule, type$.Null), $async$visitCssAtRule$1);\n            case 3:\n              // returning from await.\n              $async$self._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;\n              $async$self._async_evaluate$_inKeyframes = wasInKeyframes;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssAtRule$1, $async$completer);\n    },\n    visitCssComment$1: function(node) {\n      return this.visitCssComment$body$_EvaluateVisitor(node);\n    },\n    visitCssComment$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1, t2;\n      var $async$visitCssComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate$_parent;\n              t2 = $async$self._async_evaluate$_root;\n              if (t1 == t2 && $async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;\n              $async$self._async_evaluate$_parent.addChild$1(new R.ModifiableCssComment(node.text, node.span));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssComment$1, $async$completer);\n    },\n    visitCssDeclaration$1: function(node) {\n      return this.visitCssDeclaration$body$_EvaluateVisitor(node);\n    },\n    visitCssDeclaration$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1;\n      var $async$visitCssDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.name;\n              $async$self._async_evaluate$_parent.addChild$1(L.ModifiableCssDeclaration$(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), \"--\"), node.valueSpanForMap));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssDeclaration$1, $async$completer);\n    },\n    visitCssImport$1: function(node) {\n      return this.visitCssImport$body$_EvaluateVisitor(node);\n    },\n    visitCssImport$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, modifiableNode, t1, t2;\n      var $async$visitCssImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              modifiableNode = F.ModifiableCssImport$(node.url, node.span, node.media, node.supports);\n              t1 = $async$self._async_evaluate$_parent;\n              t2 = $async$self._async_evaluate$_root;\n              if (t1 != t2)\n                t1.addChild$1(modifiableNode);\n              else if ($async$self._async_evaluate$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n                $async$self._async_evaluate$_root.addChild$1(modifiableNode);\n                $async$self._async_evaluate$_endOfImports = $async$self._async_evaluate$_endOfImports + 1;\n              } else {\n                t1 = $async$self._async_evaluate$_outOfOrderImports;\n                (t1 == null ? $async$self._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(modifiableNode);\n              }\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssImport$1, $async$completer);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      return this.visitCssKeyframeBlock$body$_EvaluateVisitor(node);\n    },\n    visitCssKeyframeBlock$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this;\n      var $async$visitCssKeyframeBlock$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(node.selector, node.span), new E._EvaluateVisitor_visitCssKeyframeBlock_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssKeyframeBlock_closure2(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null), $async$visitCssKeyframeBlock$1);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssKeyframeBlock$1, $async$completer);\n    },\n    visitCssMediaRule$1: function(node) {\n      return this.visitCssMediaRule$body$_EvaluateVisitor(node);\n    },\n    visitCssMediaRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, t1, mergedQueries;\n      var $async$visitCssMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Media_, node.span));\n              t1 = $async$self._async_evaluate$_mediaQueries;\n              mergedQueries = t1 == null ? null : $async$self._async_evaluate$_mergeMediaQueries$2(t1, node.queries);\n              t1 = mergedQueries == null;\n              if (!t1 && mergedQueries.length === 0) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = t1 ? node.queries : mergedQueries;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new E._EvaluateVisitor_visitCssMediaRule_closure1($async$self, mergedQueries, node), false, new E._EvaluateVisitor_visitCssMediaRule_closure2(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null), $async$visitCssMediaRule$1);\n            case 3:\n              // returning from await.\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssMediaRule$1, $async$completer);\n    },\n    visitCssStyleRule$1: function(node) {\n      return this.visitCssStyleRule$body$_EvaluateVisitor(node);\n    },\n    visitCssStyleRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule;\n      var $async$visitCssStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Style_, node.span));\n              t1 = node.selector;\n              t2 = t1.value;\n              t3 = $async$self._async_evaluate$_styleRule;\n              t3 = t3 == null ? null : t3.originalSelector;\n              originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !$async$self._async_evaluate$_atRootExcludingStyleRule);\n              rule = X.ModifiableCssStyleRule$($async$self._async_evaluate$_extender.addSelector$3(originalSelector, t1.span, $async$self._async_evaluate$_mediaQueries), node.span, originalSelector);\n              oldAtRootExcludingStyleRule = $async$self._async_evaluate$_atRootExcludingStyleRule;\n              $async$self._async_evaluate$_atRootExcludingStyleRule = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitCssStyleRule_closure1($async$self, rule, node), false, new E._EvaluateVisitor_visitCssStyleRule_closure2(), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$visitCssStyleRule$1);\n            case 2:\n              // returning from await.\n              $async$self._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              if (!($async$self._async_evaluate$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n                t1 = $async$self._async_evaluate$_parent.children;\n                t1 = !t1.get$isEmpty(t1);\n              } else\n                t1 = false;\n              if (t1) {\n                t1 = $async$self._async_evaluate$_parent.children;\n                t1.get$last(t1).isGroupEnd = true;\n              }\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssStyleRule$1, $async$completer);\n    },\n    visitCssStylesheet$1: function(node) {\n      return this.visitCssStylesheet$body$_EvaluateVisitor(node);\n    },\n    visitCssStylesheet$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1;\n      var $async$visitCssStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.get$iterator$ax(node.get$children(node));\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              $async$goto = 4;\n              return P._asyncAwait(t1.get$current(t1).accept$1($async$self), $async$visitCssStylesheet$1);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssStylesheet$1, $async$completer);\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this.visitCssSupportsRule$body$_EvaluateVisitor(node);\n    },\n    visitCssSupportsRule$body$_EvaluateVisitor: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this;\n      var $async$visitCssSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate$_exception$2(string$.Suppor, node.span));\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(node.condition, node.span), new E._EvaluateVisitor_visitCssSupportsRule_closure1($async$self, node), false, new E._EvaluateVisitor_visitCssSupportsRule_closure2(), type$.legacy_ModifiableCssSupportsRule, type$.Null), $async$visitCssSupportsRule$1);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssSupportsRule$1, $async$completer);\n    },\n    _async_evaluate$_handleReturn$1$2: function(list, callback) {\n      return this._handleReturn$body$_EvaluateVisitor(list, callback);\n    },\n    _async_evaluate$_handleReturn$2: function(list, callback) {\n      return this._async_evaluate$_handleReturn$1$2(list, callback, type$.dynamic);\n    },\n    _handleReturn$body$_EvaluateVisitor: function(list, callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, t1, _i, result;\n      var $async$_async_evaluate$_handleReturn$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = list.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < list.length)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(callback.call$1(list[_i]), $async$_async_evaluate$_handleReturn$1$2);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_handleReturn$1$2, $async$completer);\n    },\n    _async_evaluate$_withEnvironment$1$2: function(environment, callback, $T) {\n      return this._withEnvironment$body$_EvaluateVisitor(environment, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withEnvironment$body$_EvaluateVisitor: function(environment, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldEnvironment;\n      var $async$_async_evaluate$_withEnvironment$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldEnvironment = $async$self._async_evaluate$_environment;\n              $async$self._async_evaluate$_environment = environment;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withEnvironment$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_environment = oldEnvironment;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_withEnvironment$1$2, $async$completer);\n    },\n    _async_evaluate$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {\n      return this._interpolationToValue$body$_EvaluateVisitor(interpolation, trim, warnForColor);\n    },\n    _async_evaluate$_interpolationToValue$1: function(interpolation) {\n      return this._async_evaluate$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);\n    },\n    _async_evaluate$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {\n      return this._async_evaluate$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);\n    },\n    _interpolationToValue$body$_EvaluateVisitor: function(interpolation, trim, warnForColor) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CssValue_legacy_String),\n        $async$returnValue, $async$self = this, result, t1;\n      var $async$_async_evaluate$_interpolationToValue$3$trim$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(interpolation, warnForColor), $async$_async_evaluate$_interpolationToValue$3$trim$warnForColor);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              t1 = trim ? B.trimAscii(result, true) : result;\n              $async$returnValue = new F.CssValue(t1, interpolation.span, type$.CssValue_legacy_String);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_interpolationToValue$3$trim$warnForColor, $async$completer);\n    },\n    _async_evaluate$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {\n      return this._performInterpolation$body$_EvaluateVisitor(interpolation, warnForColor);\n    },\n    _async_evaluate$_performInterpolation$1: function(interpolation) {\n      return this._async_evaluate$_performInterpolation$2$warnForColor(interpolation, false);\n    },\n    _performInterpolation$body$_EvaluateVisitor: function(interpolation, warnForColor) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, $async$temp1;\n      var $async$_async_evaluate$_performInterpolation$2$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = J;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync(interpolation.contents, new E._EvaluateVisitor__performInterpolation_closure0($async$self, warnForColor), type$.legacy_Object, type$.legacy_String), $async$_async_evaluate$_performInterpolation$2$warnForColor);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$temp1.join$0$ax($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_performInterpolation$2$warnForColor, $async$completer);\n    },\n    _evaluateToCss$2$quote: function(expression, quote) {\n      return this._evaluateToCss$body$_EvaluateVisitor(expression, quote);\n    },\n    _evaluateToCss$1: function(expression) {\n      return this._evaluateToCss$2$quote(expression, true);\n    },\n    _evaluateToCss$body$_EvaluateVisitor: function(expression, quote) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this;\n      var $async$_evaluateToCss$2$quote = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(expression.accept$1($async$self), $async$_evaluateToCss$2$quote);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$self._async_evaluate$_serialize$3$quote($async$result, expression, quote);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_evaluateToCss$2$quote, $async$completer);\n    },\n    _async_evaluate$_serialize$3$quote: function(value, nodeWithSpan, quote) {\n      return this._async_evaluate$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__serialize_closure0(value, quote));\n    },\n    _async_evaluate$_serialize$2: function(value, nodeWithSpan) {\n      return this._async_evaluate$_serialize$3$quote(value, nodeWithSpan, true);\n    },\n    _async_evaluate$_expressionNode$1: function(expression) {\n      var t1;\n      if (!this._async_evaluate$_sourceMap)\n        return null;\n      if (expression instanceof S.VariableExpression) {\n        t1 = this._async_evaluate$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);\n        return t1 == null ? expression : t1;\n      } else\n        return expression;\n    },\n    _async_evaluate$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {\n      return this._withParent$body$_EvaluateVisitor(node, callback, scopeWhen, through, $S, $T, $T._eval$1(\"0*\"));\n    },\n    _async_evaluate$_withParent$2$2: function(node, callback, $S, $T) {\n      return this._async_evaluate$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);\n    },\n    _async_evaluate$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {\n      return this._async_evaluate$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);\n    },\n    _withParent$body$_EvaluateVisitor: function(node, callback, scopeWhen, through, $S, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, oldParent, result;\n      var $async$_async_evaluate$_withParent$2$4$scopeWhen$through = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$self._async_evaluate$_addChild$2$through(node, through);\n              oldParent = $async$self._async_evaluate$_parent;\n              $async$self._async_evaluate$_parent = node;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1(\"0*\")), $async$_async_evaluate$_withParent$2$4$scopeWhen$through);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_parent = oldParent;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_withParent$2$4$scopeWhen$through, $async$completer);\n    },\n    _async_evaluate$_addChild$2$through: function(node, through) {\n      var grandparent,\n        $parent = this._async_evaluate$_parent;\n      if (through != null) {\n        for (; through.call$1($parent);)\n          $parent = $parent._parent;\n        if ($parent.get$hasFollowingSibling()) {\n          grandparent = $parent._parent;\n          $parent = $parent.copyWithoutChildren$0();\n          grandparent.addChild$1($parent);\n        }\n      }\n      $parent.addChild$1(node);\n    },\n    _async_evaluate$_addChild$1: function(node) {\n      return this._async_evaluate$_addChild$2$through(node, null);\n    },\n    _async_evaluate$_withStyleRule$1$2: function(rule, callback, $T) {\n      return this._withStyleRule$body$_EvaluateVisitor(rule, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withStyleRule$body$_EvaluateVisitor: function(rule, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldRule;\n      var $async$_async_evaluate$_withStyleRule$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldRule = $async$self._async_evaluate$_styleRule;\n              $async$self._async_evaluate$_styleRule = rule;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withStyleRule$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_styleRule = oldRule;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_withStyleRule$1$2, $async$completer);\n    },\n    _async_evaluate$_withMediaQueries$1$2: function(queries, callback, $T) {\n      return this._withMediaQueries$body$_EvaluateVisitor(queries, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withMediaQueries$body$_EvaluateVisitor: function(queries, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldMediaQueries;\n      var $async$_async_evaluate$_withMediaQueries$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldMediaQueries = $async$self._async_evaluate$_mediaQueries;\n              $async$self._async_evaluate$_mediaQueries = queries;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withMediaQueries$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_mediaQueries = oldMediaQueries;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_withMediaQueries$1$2, $async$completer);\n    },\n    _async_evaluate$_withStackFrame$1$3: function(member, nodeWithSpan, callback, $T) {\n      return this._withStackFrame$body$_EvaluateVisitor(member, nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withStackFrame$body$_EvaluateVisitor: function(member, nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, oldMember, result, t1;\n      var $async$_async_evaluate$_withStackFrame$1$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate$_stack;\n              t1.push(new S.Tuple2($async$self._async_evaluate$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode));\n              oldMember = $async$self._async_evaluate$_member;\n              $async$self._async_evaluate$_member = member;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_withStackFrame$1$3);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate$_member = oldMember;\n              t1.pop();\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_withStackFrame$1$3, $async$completer);\n    },\n    _async_evaluate$_stackFrame$2: function(member, span) {\n      var url = span.file.url;\n      return B.frameForSpan(span, member, url != null && this._async_evaluate$_importCache != null ? this._async_evaluate$_importCache.humanize$1(url) : url);\n    },\n    _async_evaluate$_stackTrace$1: function(span) {\n      var t2, cur, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      for (t2 = _this._async_evaluate$_stack, t2 = new H.MappedListIterable(t2, new E._EvaluateVisitor__stackTrace_closure0(_this), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Frame*>\")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      if (span != null)\n        t1.push(_this._async_evaluate$_stackFrame$2(_this._async_evaluate$_member, span));\n      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    _async_evaluate$_stackTrace$0: function() {\n      return this._async_evaluate$_stackTrace$1(null);\n    },\n    _async_evaluate$_warn$3$deprecation: function(message, span, deprecation) {\n      return this._async_evaluate$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._async_evaluate$_stackTrace$1(span));\n    },\n    _async_evaluate$_warn$2: function(message, span) {\n      return this._async_evaluate$_warn$3$deprecation(message, span, false);\n    },\n    _async_evaluate$_exception$2: function(message, span) {\n      var t1 = span == null ? C.JSArray_methods.get$last(this._async_evaluate$_stack).item2.get$span() : span;\n      return new E.SassRuntimeException(this._async_evaluate$_stackTrace$1(span), message, t1);\n    },\n    _async_evaluate$_exception$1: function(message) {\n      return this._async_evaluate$_exception$2(message, null);\n    },\n    _async_evaluate$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {\n      var t1 = C.JSArray_methods.get$last(this._async_evaluate$_stack).item2.get$span();\n      return new E.MultiSpanSassRuntimeException(this._async_evaluate$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);\n    },\n    _async_evaluate$_adjustParseError$1$2: function(nodeWithSpan, callback) {\n      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException) {\n          error = t1;\n          t1 = error;\n          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);\n          span = nodeWithSpan.get$span();\n          t1 = span;\n          t2 = span;\n          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);\n          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);\n          t1 = span;\n          t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n          t3 = error;\n          t3 = G.SourceSpanException.prototype.get$span.call(t3);\n          t3 = Y.FileLocation$_(t3.file, t3._file$_start);\n          t4 = span;\n          t4 = Y.FileLocation$_(t4.file, t4._file$_start);\n          t5 = error;\n          t5 = G.SourceSpanException.prototype.get$span.call(t5);\n          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);\n          throw H.wrapException(this._async_evaluate$_exception$2(error._span_exception$_message, syntheticSpan));\n        } else\n          throw exception;\n      }\n    },\n    _async_evaluate$_adjustParseError$2: function(nodeWithSpan, callback) {\n      return this._async_evaluate$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _async_evaluate$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {\n      var error, error0, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.MultiSpanSassScriptException) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.SassScriptException) {\n          error0 = t1;\n          throw H.wrapException(this._async_evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));\n        } else\n          throw exception;\n      }\n    },\n    _async_evaluate$_addExceptionSpan$2: function(nodeWithSpan, callback) {\n      return this._async_evaluate$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _addExceptionSpanAsync$1$2: function(nodeWithSpan, callback, $T) {\n      return this._addExceptionSpanAsync$body$_EvaluateVisitor(nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _addExceptionSpanAsync$body$_EvaluateVisitor: function(nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, error0, t1, exception, $async$exception;\n      var $async$_addExceptionSpanAsync$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$goto = 7;\n              return P._asyncAwait(callback.call$0(), $async$_addExceptionSpanAsync$1$2);\n            case 7:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.MultiSpanSassScriptException) {\n                error = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n              } else if (t1 instanceof E.SassScriptException) {\n                error0 = t1;\n                throw H.wrapException($async$self._async_evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_addExceptionSpanAsync$1$2, $async$completer);\n    },\n    _async_evaluate$_addErrorSpan$1$2: function(nodeWithSpan, callback, $T) {\n      return this._addErrorSpan$body$_EvaluateVisitor(nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _addErrorSpan$body$_EvaluateVisitor: function(nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, t1, exception, $async$exception;\n      var $async$_async_evaluate$_addErrorSpan$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$goto = 7;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate$_addErrorSpan$1$2);\n            case 7:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException._is(t1)) {\n                error = t1;\n                t1 = error.get$span();\n                if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), \"@error\"))\n                  throw $async$exception;\n                throw H.wrapException(E.SassRuntimeException$(error._span_exception$_message, nodeWithSpan.get$span(), $async$self._async_evaluate$_stackTrace$0()));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate$_addErrorSpan$1$2, $async$completer);\n    }\n  };\n  E._EvaluateVisitor_closure9.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._async_evaluate$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  E._EvaluateVisitor_closure10.prototype = {\n    call$1: function($arguments) {\n      var variable = J.$index$asx($arguments, 0).assertString$1(\"name\"),\n        t1 = this.$this._async_evaluate$_environment,\n        t2 = variable.text;\n      t2.toString;\n      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, \"_\", \"-\")) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  E._EvaluateVisitor_closure11.prototype = {\n    call$1: function($arguments) {\n      var module, t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this;\n      t2 = t1._async_evaluate$_environment;\n      t3 = variable.text;\n      t3.toString;\n      t4 = H.stringReplaceAllUnchecked(t3, \"_\", \"-\");\n      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._async_evaluate$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  E._EvaluateVisitor_closure12.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._async_evaluate$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  E._EvaluateVisitor_closure13.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.$this._async_evaluate$_environment;\n      if (!t1._async_environment$_inMixin)\n        throw H.wrapException(E.SassScriptException$(string$.conten));\n      return t1._async_environment$_content != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  E._EvaluateVisitor_closure14.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._async_evaluate$_environment._async_environment$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString(t4.key, true), t4.value);\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 38\n  };\n  E._EvaluateVisitor_closure15.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._async_evaluate$_environment._async_environment$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString(t4.key, true), new F.SassFunction(t4.value));\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 38\n  };\n  E._EvaluateVisitor_closure16.prototype = {\n    call$1: function($arguments) {\n      var module, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $name = t1.$index($arguments, 0).assertString$1(\"name\"),\n        css = t1.$index($arguments, 1).get$isTruthy();\n      t1 = t1.$index($arguments, 2).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      if (css && module != null)\n        throw H.wrapException(string$.x24css_a);\n      if (css)\n        callable = new L.PlainCssCallable($name.text);\n      else {\n        t1 = this.$this;\n        callable = t1._async_evaluate$_addExceptionSpan$2(t1._async_evaluate$_callableNode, new E._EvaluateVisitor__closure4(t1, $name, module));\n      }\n      if (callable != null)\n        return new F.SassFunction(callable);\n      throw H.wrapException(\"Function not found: \" + $name.toString$0(0));\n    },\n    $signature: 141\n  };\n  E._EvaluateVisitor__closure4.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this.name.text;\n      t1.toString;\n      t1 = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t2 = this.module;\n      t2 = t2 == null ? null : t2.text;\n      return this.$this._async_evaluate$_getFunction$2$namespace(t1, t2);\n    },\n    $signature: 102\n  };\n  E._EvaluateVisitor_closure17.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$_EvaluateVisitor_closure0($arguments);\n    },\n    $call$body$_EvaluateVisitor_closure0: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable, t1, $function, args;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.getInterceptor$asx($arguments);\n              $function = t1.$index($arguments, 0);\n              args = type$.legacy_SassArgumentList._as(t1.$index($arguments, 1));\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n              t2 = type$.legacy_String;\n              t3 = type$.legacy_Expression;\n              t4 = $async$self.$this;\n              t5 = t4._async_evaluate$_callableNode.get$span();\n              t6 = t4._async_evaluate$_callableNode.get$span();\n              args._wereKeywordsAccessed = true;\n              t7 = args._keywords;\n              if (t7.get$isEmpty(t7))\n                t7 = null;\n              else {\n                t8 = type$.legacy_Value;\n                t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);\n                for (args._wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {\n                  t10 = t7.get$current(t7);\n                  t9.$indexSet(0, new D.SassString(t10.key, false), t10.value);\n                }\n                t7 = new F.ValueExpression(new A.SassMap(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._async_evaluate$_callableNode.get$span());\n              }\n              invocation = new X.ArgumentInvocation(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression(args, t6), t7, t5);\n              $async$goto = $function instanceof D.SassString ? 3 : 4;\n              break;\n            case 3:\n              // then\n              N.warn(string$.Passins + $function.toString$0(0) + \")) instead.\", true);\n              $async$goto = 5;\n              return P._asyncAwait(t4.visitFunctionExpression$1(new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._async_evaluate$_callableNode.get$span()), invocation, t4._async_evaluate$_callableNode.get$span())), $async$call$1);\n            case 5:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 4:\n              // join\n              callable = $function.assertFunction$1(\"function\").callable;\n              $async$goto = type$.legacy_AsyncCallable._is(callable) ? 6 : 8;\n              break;\n            case 6:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait(t4._async_evaluate$_runFunctionCallable$3(invocation, callable, t4._async_evaluate$_callableNode), $async$call$1);\n            case 9:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 7;\n              break;\n            case 8:\n              // else\n              throw H.wrapException(E.SassScriptException$(\"The function \" + H.S(callable.get$name(callable)) + string$.x20is_as));\n            case 7:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 453\n  };\n  E._EvaluateVisitor_closure18.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$_EvaluateVisitor_closure($arguments);\n    },\n    $call$body$_EvaluateVisitor_closure: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, withMap, values, configuration, t2, t3, t1, url;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.getInterceptor$asx($arguments);\n              url = P.Uri_parse(t1.$index($arguments, 0).assertString$1(\"url\").text);\n              t1 = t1.$index($arguments, 1).get$realNull();\n              t1 = t1 == null ? null : t1.assertMap$1(\"with\");\n              withMap = t1 == null ? null : t1.contents;\n              if (withMap != null) {\n                values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);\n                t1 = $async$self.$this;\n                withMap.forEach$1(0, new E._EvaluateVisitor__closure2(values, t1._async_evaluate$_callableNode.get$span()));\n                configuration = new A.Configuration(values, t1._async_evaluate$_callableNode, false);\n              } else\n                configuration = C.Configuration_Map_empty_null_true;\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_callableNode;\n              t3 = t2.get$span();\n              t3 = t3 == null ? null : t3.file.url;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, \"load-css()\", t2, new E._EvaluateVisitor__closure3(t1), t3, configuration, true), $async$call$1);\n            case 3:\n              // returning from await.\n              t1._async_evaluate$_assertConfigurationIsEmpty$2$nameInError(configuration, true);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 178\n  };\n  E._EvaluateVisitor__closure2.prototype = {\n    call$2: function(variable, value) {\n      var $name,\n        t1 = variable.assertString$1(\"with key\").text;\n      t1.toString;\n      $name = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t1 = this.values;\n      if (t1.containsKey$1($name))\n        throw H.wrapException(\"The variable $\" + $name + \" was configured twice.\");\n      t1.$indexSet(0, $name, new Z.ConfiguredValue(value, this.span, null));\n    },\n    $signature: 47\n  };\n  E._EvaluateVisitor__closure3.prototype = {\n    call$1: function(module) {\n      var t1 = this.$this;\n      return t1._async_evaluate$_combineCss$2$clone(module, true).accept$1(t1);\n    },\n    $signature: 140\n  };\n  E._EvaluateVisitor_run_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult),\n        $async$returnValue, $async$self = this, t1, t2, url, $async$temp1, $async$temp2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node;\n              t2 = t1.span;\n              url = t2 == null ? null : t2.file.url;\n              if (url != null)\n                $async$self.$this._async_evaluate$_activeModules.$indexSet(0, url, null);\n              t2 = $async$self.$this;\n              $async$temp1 = E;\n              $async$temp2 = t2;\n              $async$goto = 3;\n              return P._asyncAwait(t2._async_evaluate$_execute$2($async$self.importer, t1), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = new $async$temp1.EvaluateResult($async$temp2._async_evaluate$_combineCss$1($async$result));\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 469\n  };\n  E._EvaluateVisitor__withWarnCallback_closure0.prototype = {\n    call$2: function(message, deprecation) {\n      var t1 = this.$this,\n        t2 = t1._async_evaluate$_importSpan;\n      return t1._async_evaluate$_warn$3$deprecation(message, t2 == null ? t1._async_evaluate$_callableNode.get$span() : t2, deprecation);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 75\n  };\n  E._EvaluateVisitor__loadModule_closure1.prototype = {\n    call$0: function() {\n      return this.callback.call$1(this.builtInModule);\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor__loadModule_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, module, error, error0, error1, error2, message, previousLoad, exception, t1, t2, result, importer, stylesheet, canonicalUrl, t3, $async$exception;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.nodeWithSpan;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_loadStylesheet$3$baseUrl(J.toString$0$($async$self.url), t2.get$span(), $async$self.baseUrl), $async$call$0);\n            case 2:\n              // returning from await.\n              result = $async$result;\n              importer = result.item1;\n              stylesheet = result.item2;\n              canonicalUrl = stylesheet.span.file.url;\n              t3 = t1._async_evaluate$_activeModules;\n              if (t3.containsKey$1(canonicalUrl)) {\n                message = $async$self.namesInErrors ? \"Module loop: \" + H.S($.$get$context().prettyUri$1(canonicalUrl)) + \" is already being loaded.\" : string$.Module;\n                previousLoad = t3.$index(0, canonicalUrl);\n                throw H.wrapException(previousLoad == null ? t1._async_evaluate$_exception$1(message) : t1._async_evaluate$_multiSpanException$3(message, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n              }\n              t3.$indexSet(0, canonicalUrl, t2);\n              module = null;\n              $async$handler = 3;\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, $async$self.configuration, $async$self.namesInErrors, t2), $async$call$0);\n            case 6:\n              // returning from await.\n              module = $async$result;\n              $async$next.push(5);\n              // goto finally\n              $async$goto = 4;\n              break;\n            case 3:\n              // uncaught\n              $async$next = [1];\n            case 4:\n              // finally\n              $async$handler = 1;\n              t3.remove$1(0, canonicalUrl);\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 5:\n              // after finally\n              $async$handler = 8;\n              $async$goto = 11;\n              return P._asyncAwait($async$self.callback.call$1(module), $async$call$0);\n            case 11:\n              // returning from await.\n              $async$handler = 1;\n              // goto after finally\n              $async$goto = 10;\n              break;\n            case 8:\n              // catch\n              $async$handler = 7;\n              $async$exception = $async$currentError;\n              t2 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException._is(t2))\n                throw $async$exception;\n              else if (t2 instanceof E.MultiSpanSassException) {\n                error = t2;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._async_evaluate$_stackTrace$1(error.get$span())));\n              } else if (t2 instanceof E.SassException) {\n                error0 = t2;\n                throw H.wrapException(t1._async_evaluate$_exception$2(error0._span_exception$_message, error0.get$span()));\n              } else if (t2 instanceof E.MultiSpanSassScriptException) {\n                error1 = t2;\n                throw H.wrapException(t1._async_evaluate$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));\n              } else if (t2 instanceof E.SassScriptException) {\n                error2 = t2;\n                throw H.wrapException(t1._async_evaluate$_exception$1(error2.message));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 10;\n              break;\n            case 7:\n              // uncaught\n              // goto rethrow\n              $async$goto = 1;\n              break;\n            case 10:\n              // after finally\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n            case 1:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__execute_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t2, t3, t4, css, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldExtender, oldStyleRule, oldMediaQueries, oldDeclarationName, oldInUnknownAtRule, oldAtRootExcludingStyleRule, oldInKeyframes, oldConfiguration;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldImporter = t1._async_evaluate$_importer;\n              oldStylesheet = t1._async_evaluate$_stylesheet;\n              oldRoot = t1._async_evaluate$_root;\n              oldParent = t1._async_evaluate$_parent;\n              oldEndOfImports = t1._async_evaluate$_endOfImports;\n              oldOutOfOrderImports = t1._async_evaluate$_outOfOrderImports;\n              oldExtender = t1._async_evaluate$_extender;\n              oldStyleRule = t1._async_evaluate$_styleRule;\n              oldMediaQueries = t1._async_evaluate$_mediaQueries;\n              oldDeclarationName = t1._async_evaluate$_declarationName;\n              oldInUnknownAtRule = t1._async_evaluate$_inUnknownAtRule;\n              oldAtRootExcludingStyleRule = t1._async_evaluate$_atRootExcludingStyleRule;\n              oldInKeyframes = t1._async_evaluate$_inKeyframes;\n              oldConfiguration = t1._async_evaluate$_configuration;\n              t1._async_evaluate$_importer = $async$self.importer;\n              t2 = t1._async_evaluate$_stylesheet = $async$self.stylesheet;\n              t3 = t2.span;\n              t1._async_evaluate$_parent = t1._async_evaluate$_root = V.ModifiableCssStylesheet$(t3);\n              t1._async_evaluate$_endOfImports = 0;\n              t1._async_evaluate$_outOfOrderImports = null;\n              t1._async_evaluate$_extender = $async$self.extender;\n              t1._async_evaluate$_declarationName = t1._async_evaluate$_mediaQueries = t1._async_evaluate$_styleRule = null;\n              t1._async_evaluate$_inKeyframes = t1._async_evaluate$_atRootExcludingStyleRule = t1._async_evaluate$_inUnknownAtRule = false;\n              t4 = $async$self.configuration;\n              if (t4 != null)\n                t1._async_evaluate$_configuration = t4;\n              $async$goto = 2;\n              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);\n            case 2:\n              // returning from await.\n              css = t1._async_evaluate$_outOfOrderImports == null ? t1._async_evaluate$_root : new V.CssStylesheet(new P.UnmodifiableListView(t1._async_evaluate$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode), t3);\n              $async$self._box_0.css = css;\n              t1._async_evaluate$_importer = oldImporter;\n              t1._async_evaluate$_stylesheet = oldStylesheet;\n              t1._async_evaluate$_root = oldRoot;\n              t1._async_evaluate$_parent = oldParent;\n              t1._async_evaluate$_endOfImports = oldEndOfImports;\n              t1._async_evaluate$_outOfOrderImports = oldOutOfOrderImports;\n              t1._async_evaluate$_extender = oldExtender;\n              t1._async_evaluate$_styleRule = oldStyleRule;\n              t1._async_evaluate$_mediaQueries = oldMediaQueries;\n              t1._async_evaluate$_declarationName = oldDeclarationName;\n              t1._async_evaluate$_inUnknownAtRule = oldInUnknownAtRule;\n              t1._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              t1._async_evaluate$_inKeyframes = oldInKeyframes;\n              t1._async_evaluate$_configuration = oldConfiguration;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__combineCss_closure2.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 100\n  };\n  E._EvaluateVisitor__combineCss_closure3.prototype = {\n    call$1: function(target) {\n      return !this.selectors.contains$1(0, target);\n    },\n    $signature: 19\n  };\n  E._EvaluateVisitor__combineCss_closure4.prototype = {\n    call$1: function(module) {\n      return module.cloneCss$0();\n    },\n    $signature: 215\n  };\n  E._EvaluateVisitor__extendModules_closure1.prototype = {\n    call$1: function(target) {\n      return !this.originalSelectors.contains$1(0, target);\n    },\n    $signature: 19\n  };\n  E._EvaluateVisitor__extendModules_closure2.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender);\n    },\n    $signature: 139\n  };\n  E._EvaluateVisitor__topologicalModules_visitModule0.prototype = {\n    call$1: function(module) {\n      var t1, t2, t3, _i, upstream;\n      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        upstream = t1[_i];\n        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))\n          this.call$1(upstream);\n      }\n      this.sorted.addFirst$1(module);\n    },\n    $signature: 140\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure2.prototype = {\n    call$0: function() {\n      return V.AtRootQueryParser$(this.resolved, this.$this._async_evaluate$_logger, null).parse$0();\n    },\n    $signature: 86\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure3.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure4.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 2\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure5.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, oldParent;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldParent = t1._async_evaluate$_parent;\n              t1._async_evaluate$_parent = $async$self.newParent;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_environment.scope$1$2$when(callback, $async$self.node.hasDeclarations, type$.void), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate$_parent = oldParent;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure6.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, oldAtRootExcludingStyleRule;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldAtRootExcludingStyleRule = t1._async_evaluate$_atRootExcludingStyleRule;\n              t1._async_evaluate$_atRootExcludingStyleRule = true;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure7.prototype = {\n    call$1: function(callback) {\n      return this.$this._async_evaluate$_withMediaQueries$1$2(null, new E._EvaluateVisitor__scopeForAtRoot__closure0(this.innerScope, callback), type$.Null);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot__closure0.prototype = {\n    call$0: function() {\n      return this.innerScope.call$1(this.callback);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure8.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, wasInKeyframes;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              wasInKeyframes = t1._async_evaluate$_inKeyframes;\n              t1._async_evaluate$_inKeyframes = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate$_inKeyframes = wasInKeyframes;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure9.prototype = {\n    call$1: function($parent) {\n      return type$.legacy_CssAtRule._is($parent);\n    },\n    $signature: 135\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure10.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, wasInUnknownAtRule;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              wasInUnknownAtRule = t1._async_evaluate$_inUnknownAtRule;\n              t1._async_evaluate$_inUnknownAtRule = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor_visitContentRule_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.content.declaration.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 6:\n              // returning from await.\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitDeclaration_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitEachRule_closure2.prototype = {\n    call$1: function(value) {\n      return this.$this._async_evaluate$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);\n    },\n    $signature: 76\n  };\n  E._EvaluateVisitor_visitEachRule_closure3.prototype = {\n    call$1: function(value) {\n      return this.$this._async_evaluate$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);\n    },\n    $signature: 76\n  };\n  E._EvaluateVisitor_visitEachRule_closure4.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._async_evaluate$_handleReturn$2(_this.list.get$asList(), new E._EvaluateVisitor_visitEachRule__closure0(t1, _this.setVariables, _this.node));\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitEachRule__closure0.prototype = {\n    call$1: function(element) {\n      var t1;\n      this.setVariables.call$1(element);\n      t1 = this.$this;\n      return t1._async_evaluate$_handleReturn$2(this.node.children, new E._EvaluateVisitor_visitEachRule___closure0(t1));\n    },\n    $signature: 223\n  };\n  E._EvaluateVisitor_visitEachRule___closure0.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 78\n  };\n  E._EvaluateVisitor_visitExtendRule_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.targetText;\n      return D.SelectorList_SelectorList$parse(B.trimAscii(t1.get$value(t1), true), false, true, this.$this._async_evaluate$_logger);\n    },\n    $signature: 40\n  };\n  E._EvaluateVisitor_visitAtRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) || t1._async_evaluate$_inKeyframes ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitAtRule__closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitForRule_closure4.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),\n        $async$returnValue, $async$self = this;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.node.from.accept$1($async$self.$this), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result.assertNumber$0();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 132\n  };\n  E._EvaluateVisitor_visitForRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber),\n        $async$returnValue, $async$self = this;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.node.to.accept$1($async$self.$this), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result.assertNumber$0();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 132\n  };\n  E._EvaluateVisitor_visitForRule_closure6.prototype = {\n    call$0: function() {\n      var t1 = this.toNumber,\n        t2 = t1.numeratorUnits;\n      t1 = t1.denominatorUnits;\n      return T.SassNumber$withUnits(this.fromNumber.valueInUnits$2(t2, t1), t1, t2).assertInt$0();\n    },\n    $signature: 11\n  };\n  E._EvaluateVisitor_visitForRule_closure7.prototype = {\n    call$0: function() {\n      return this.toNumber.assertInt$0();\n    },\n    $signature: 11\n  };\n  E._EvaluateVisitor_visitForRule_closure8.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, i, t3, t4, t5, result, t1, t2, nodeWithSpan;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.node;\n              nodeWithSpan = t1._async_evaluate$_expressionNode$1(t2.from);\n              i = $async$self.from, t3 = $async$self._box_0, t4 = $async$self.direction, t5 = t2.variable, t2 = t2.children;\n            case 3:\n              // for condition\n              if (!(i !== t3.to)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              t1._async_evaluate$_environment.setLocalVariable$3(t5, T.SassNumber$(i, null), nodeWithSpan);\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_evaluate$_handleReturn$2(t2, new E._EvaluateVisitor_visitForRule__closure0(t1)), $async$call$0);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              i += t4;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitForRule__closure0.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 78\n  };\n  E._EvaluateVisitor_visitForwardRule_closure1.prototype = {\n    call$1: function(module) {\n      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 113\n  };\n  E._EvaluateVisitor_visitForwardRule_closure2.prototype = {\n    call$1: function(module) {\n      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 113\n  };\n  E._EvaluateVisitor__assertConfigurationIsEmpty_closure0.prototype = {\n    call$2: function($name, value) {\n      var t1 = this.only;\n      if (t1 != null && !t1.contains$1(0, $name))\n        return;\n      t1 = this.nameInError ? \"$\" + H.S($name) + string$.x20was_n : string$.This_v;\n      throw H.wrapException(this.$this._async_evaluate$_exception$2(t1, value.configurationSpan));\n    },\n    $signature: 130\n  };\n  E._EvaluateVisitor_visitIfRule_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      return t1._async_evaluate$_handleReturn$2(this._box_0.clause.children, new E._EvaluateVisitor_visitIfRule__closure0(t1));\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitIfRule__closure0.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 78\n  };\n  E._EvaluateVisitor__visitDynamicImport_closure0.prototype = {\n    call$0: function() {\n      return this.$call$body$_EvaluateVisitor__visitDynamicImport_closure();\n    },\n    $call$body$_EvaluateVisitor__visitDynamicImport_closure: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _box_0, t1, t2, result, importer, stylesheet, url, t3;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              _box_0 = {};\n              t1 = $async$self.$this;\n              t2 = $async$self.$import;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate$_loadStylesheet$3$forImport(t2.url, t2.span, true), $async$call$0);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              importer = result.item1;\n              stylesheet = result.item2;\n              url = stylesheet.span.file.url;\n              t3 = t1._async_evaluate$_activeModules;\n              if (t3.containsKey$1(url)) {\n                previousLoad = t3.$index(0, url);\n                throw H.wrapException(previousLoad == null ? t1._async_evaluate$_exception$1(\"This file is already being loaded.\") : t1._async_evaluate$_multiSpanException$3(\"This file is already being loaded.\", \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n              }\n              t3.$indexSet(0, url, t2);\n              t2 = new P.UnmodifiableListView(stylesheet._uses, type$.UnmodifiableListView_legacy_UseRule);\n              if (t2.get$length(t2) === 0) {\n                t2 = new P.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_legacy_ForwardRule);\n                t2 = t2.get$length(t2) === 0;\n              } else\n                t2 = false;\n              $async$goto = t2 ? 4 : 5;\n              break;\n            case 4:\n              // then\n              oldImporter = t1._async_evaluate$_importer;\n              oldStylesheet = t1._async_evaluate$_stylesheet;\n              t1._async_evaluate$_importer = importer;\n              t1._async_evaluate$_stylesheet = stylesheet;\n              $async$goto = 6;\n              return P._asyncAwait(t1.visitStylesheet$1(stylesheet), $async$call$0);\n            case 6:\n              // returning from await.\n              t1._async_evaluate$_importer = oldImporter;\n              t1._async_evaluate$_stylesheet = oldStylesheet;\n              t3.remove$1(0, url);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // join\n              _box_0.children = null;\n              t2 = t1._async_evaluate$_environment;\n              t4 = type$.legacy_String;\n              t5 = type$.legacy_Module_legacy_AsyncCallable;\n              t6 = type$.legacy_AstNode;\n              t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable);\n              t8 = t2._async_environment$_variables;\n              t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));\n              t9 = t2._async_environment$_variableNodes;\n              if (t9 == null)\n                t9 = null;\n              else\n                t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));\n              t10 = t2._async_environment$_functions;\n              t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));\n              t11 = t2._async_environment$_mixins;\n              t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));\n              environment = Q.AsyncEnvironment$_(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), null, null, null, t7, t8, t9, t10, t11, t2._async_environment$_content);\n              $async$goto = 7;\n              return P._asyncAwait(t1._async_evaluate$_withEnvironment$1$2(environment, new E._EvaluateVisitor__visitDynamicImport__closure0(_box_0, t1, importer, stylesheet, environment), type$.Null), $async$call$0);\n            case 7:\n              // returning from await.\n              module = Q._EnvironmentModule__EnvironmentModule0(environment, new V.CssStylesheet(new P.UnmodifiableListView(C.List_empty0, type$.UnmodifiableListView_legacy_CssNode), Y.SourceFile$decoded(C.List_empty1, \"<dummy module>\").span$1(0)), C.C_EmptyExtender, environment._async_environment$_forwardedModules);\n              t1._async_evaluate$_environment.importForwards$1(module);\n              $async$goto = module.transitivelyContainsCss ? 8 : 9;\n              break;\n            case 8:\n              // then\n              $async$goto = 10;\n              return P._asyncAwait(t1._async_evaluate$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1), $async$call$0);\n            case 10:\n              // returning from await.\n            case 9:\n              // join\n              visitor = new E._ImportedCssVisitor0(t1);\n              for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)\n                t1.get$current(t1).accept$1(visitor);\n              t3.remove$1(0, url);\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__visitDynamicImport__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t2, t3, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldConfiguration;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldImporter = t1._async_evaluate$_importer;\n              oldStylesheet = t1._async_evaluate$_stylesheet;\n              oldRoot = t1._async_evaluate$_root;\n              oldParent = t1._async_evaluate$_parent;\n              oldEndOfImports = t1._async_evaluate$_endOfImports;\n              oldOutOfOrderImports = t1._async_evaluate$_outOfOrderImports;\n              oldConfiguration = t1._async_evaluate$_configuration;\n              t1._async_evaluate$_importer = $async$self.importer;\n              t2 = t1._async_evaluate$_stylesheet = $async$self.stylesheet;\n              t1._async_evaluate$_parent = t1._async_evaluate$_root = V.ModifiableCssStylesheet$(t2.span);\n              t1._async_evaluate$_endOfImports = 0;\n              t1._async_evaluate$_outOfOrderImports = null;\n              t3 = new P.UnmodifiableListView(t2._forwards, type$.UnmodifiableListView_legacy_ForwardRule);\n              if (!t3.get$isEmpty(t3))\n                t1._async_evaluate$_configuration = $async$self.environment.toImplicitConfiguration$0();\n              $async$goto = 2;\n              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);\n            case 2:\n              // returning from await.\n              $async$self._box_0.children = t1._async_evaluate$_addOutOfOrderImports$0();\n              t1._async_evaluate$_importer = oldImporter;\n              t1._async_evaluate$_stylesheet = oldStylesheet;\n              t1._async_evaluate$_root = oldRoot;\n              t1._async_evaluate$_parent = oldParent;\n              t1._async_evaluate$_endOfImports = oldEndOfImports;\n              t1._async_evaluate$_outOfOrderImports = oldOutOfOrderImports;\n              t1._async_evaluate$_configuration = oldConfiguration;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate$_environment.getMixin$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 102\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure3.prototype = {\n    call$0: function() {\n      return this.node.get$spanWithoutContent();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 32\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure4.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate$_environment.withContent$2($async$self.contentCallable, new E._EvaluateVisitor_visitIncludeRule__closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate$_environment.asMixin$1(new E._EvaluateVisitor_visitIncludeRule___closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule___closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, t4, t5, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.mixin.declaration.children, t2 = t1.length, t3 = $async$self.$this, t4 = $async$self.nodeWithSpan, t5 = type$.legacy_Value, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t3._async_evaluate$_addErrorSpan$1$2(t4, new E._EvaluateVisitor_visitIncludeRule____closure0(t3, t1[_i]), t5), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule____closure0.prototype = {\n    call$0: function() {\n      return this.statement.accept$1(this.$this);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitMediaRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.mergedQueries;\n              if (t2 == null)\n                t2 = $async$self.queries;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitMediaRule___closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule___closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule_closure2.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor__visitMediaQueries_closure0.prototype = {\n    call$0: function() {\n      return F.MediaQueryParser$(this.resolved, this.$this._async_evaluate$_logger, null).parse$0();\n    },\n    $signature: 87\n  };\n  E._EvaluateVisitor_visitStyleRule_closure6.prototype = {\n    call$0: function() {\n      var t1 = this.selectorText;\n      return E.KeyframeSelectorParser$(t1.get$value(t1), this.$this._async_evaluate$_logger).parse$0();\n    },\n    $signature: 42\n  };\n  E._EvaluateVisitor_visitStyleRule_closure7.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule_closure8.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitStyleRule_closure9.prototype = {\n    call$0: function() {\n      var t2, t3,\n        t1 = this.selectorText;\n      t1 = t1.get$value(t1);\n      t2 = this.$this;\n      t3 = !t2._async_evaluate$_stylesheet.plainCss;\n      return D.SelectorList_SelectorList$parse(t1, t3, t3, t2._async_evaluate$_logger);\n    },\n    $signature: 40\n  };\n  E._EvaluateVisitor_visitStyleRule_closure10.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.parsedSelector,\n        t2 = this.$this,\n        t3 = t2._async_evaluate$_styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._async_evaluate$_atRootExcludingStyleRule);\n    },\n    $signature: 40\n  };\n  E._EvaluateVisitor_visitStyleRule_closure11.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule_closure12.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitSupportsRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate$_withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitSupportsRule__closure0(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitSupportsRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitSupportsRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.override;\n      this.$this._async_evaluate$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);\n    },\n    $signature: 0\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure3.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 12\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      t1._async_evaluate$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._async_evaluate$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);\n    },\n    $signature: 0\n  };\n  E._EvaluateVisitor_visitUseRule_closure0.prototype = {\n    call$1: function(module) {\n      var t1 = this.node;\n      this.$this._async_evaluate$_environment.addModule$3$namespace(module, t1, t1.namespace);\n    },\n    $signature: 113\n  };\n  E._EvaluateVisitor_visitWarnRule_closure0.prototype = {\n    call$0: function() {\n      return this.node.expression.accept$1(this.$this);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitWhileRule_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, result;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node, t2 = t1.condition, t3 = $async$self.$this, t1 = t1.children;\n            case 3:\n              // for condition\n              $async$goto = 5;\n              return P._asyncAwait(t2.accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n              if (!$async$result.get$isTruthy()) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t3._async_evaluate$_handleReturn$2(t1, new E._EvaluateVisitor_visitWhileRule__closure0(t3)), $async$call$0);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 4:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitWhileRule__closure0.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 78\n  };\n  E._EvaluateVisitor_visitBinaryOperationExpression_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, right, result, t1, t2, left, $async$temp1, $async$temp2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node;\n              t2 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1.left.accept$1(t2), $async$call$0);\n            case 3:\n              // returning from await.\n              left = $async$result;\n            case 4:\n              // switch\n              switch (t1.operator) {\n                case C.BinaryOperator_kjl:\n                  // goto case\n                  $async$goto = 6;\n                  break;\n                case C.BinaryOperator_or_or_1:\n                  // goto case\n                  $async$goto = 7;\n                  break;\n                case C.BinaryOperator_and_and_2:\n                  // goto case\n                  $async$goto = 8;\n                  break;\n                case C.BinaryOperator_YlX:\n                  // goto case\n                  $async$goto = 9;\n                  break;\n                case C.BinaryOperator_i5H:\n                  // goto case\n                  $async$goto = 10;\n                  break;\n                case C.BinaryOperator_AcR:\n                  // goto case\n                  $async$goto = 11;\n                  break;\n                case C.BinaryOperator_1da:\n                  // goto case\n                  $async$goto = 12;\n                  break;\n                case C.BinaryOperator_8qt:\n                  // goto case\n                  $async$goto = 13;\n                  break;\n                case C.BinaryOperator_33h:\n                  // goto case\n                  $async$goto = 14;\n                  break;\n                case C.BinaryOperator_AcR0:\n                  // goto case\n                  $async$goto = 15;\n                  break;\n                case C.BinaryOperator_iyO:\n                  // goto case\n                  $async$goto = 16;\n                  break;\n                case C.BinaryOperator_O1M:\n                  // goto case\n                  $async$goto = 17;\n                  break;\n                case C.BinaryOperator_RTB:\n                  // goto case\n                  $async$goto = 18;\n                  break;\n                case C.BinaryOperator_2ad:\n                  // goto case\n                  $async$goto = 19;\n                  break;\n                default:\n                  // goto default\n                  $async$goto = 20;\n                  break;\n              }\n              break;\n            case 6:\n              // case\n              $async$goto = 21;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 21:\n              // returning from await.\n              right = $async$result;\n              left.toString;\n              t1 = N.serializeValue0(left, false, true) + \"=\";\n              right.toString;\n              $async$returnValue = new D.SassString(t1 + N.serializeValue0(right, false, true), false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 7:\n              // case\n              $async$goto = left.get$isTruthy() ? 22 : 24;\n              break;\n            case 22:\n              // then\n              $async$result = left;\n              // goto join\n              $async$goto = 23;\n              break;\n            case 24:\n              // else\n              $async$goto = 25;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 25:\n              // returning from await.\n            case 23:\n              // join\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 8:\n              // case\n              $async$goto = left.get$isTruthy() ? 26 : 28;\n              break;\n            case 26:\n              // then\n              $async$goto = 29;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 29:\n              // returning from await.\n              // goto join\n              $async$goto = 27;\n              break;\n            case 28:\n              // else\n              $async$result = left;\n            case 27:\n              // join\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 9:\n              // case\n              $async$temp1 = J;\n              $async$temp2 = left;\n              $async$goto = 30;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 30:\n              // returning from await.\n              $async$returnValue = $async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 10:\n              // case\n              $async$temp1 = J;\n              $async$temp2 = left;\n              $async$goto = 31;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 31:\n              // returning from await.\n              $async$returnValue = !$async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 11:\n              // case\n              $async$temp1 = left;\n              $async$goto = 32;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 32:\n              // returning from await.\n              $async$returnValue = $async$temp1.greaterThan$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 12:\n              // case\n              $async$temp1 = left;\n              $async$goto = 33;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 33:\n              // returning from await.\n              $async$returnValue = $async$temp1.greaterThanOrEquals$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 13:\n              // case\n              $async$temp1 = left;\n              $async$goto = 34;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 34:\n              // returning from await.\n              $async$returnValue = $async$temp1.lessThan$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 14:\n              // case\n              $async$temp1 = left;\n              $async$goto = 35;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 35:\n              // returning from await.\n              $async$returnValue = $async$temp1.lessThanOrEquals$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 15:\n              // case\n              $async$temp1 = left;\n              $async$goto = 36;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 36:\n              // returning from await.\n              $async$returnValue = $async$temp1.plus$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 16:\n              // case\n              $async$temp1 = left;\n              $async$goto = 37;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 37:\n              // returning from await.\n              $async$returnValue = $async$temp1.minus$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 17:\n              // case\n              $async$temp1 = left;\n              $async$goto = 38;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 38:\n              // returning from await.\n              $async$returnValue = $async$temp1.times$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 18:\n              // case\n              $async$goto = 39;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 39:\n              // returning from await.\n              right = $async$result;\n              result = left.dividedBy$1(right);\n              if (t1.allowsSlash && left instanceof T.SassNumber && right instanceof T.SassNumber) {\n                $async$returnValue = type$.legacy_SassNumber._as(result).withSlash$2(left, right);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 19:\n              // case\n              $async$temp1 = left;\n              $async$goto = 40;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 40:\n              // returning from await.\n              $async$returnValue = $async$temp1.modulo$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 20:\n              // default\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // after switch\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor_visitVariableExpression_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 12\n  };\n  E._EvaluateVisitor_visitListExpression_closure0.prototype = {\n    call$1: function(expression) {\n      return expression.accept$1(this.$this);\n    },\n    $signature: 229\n  };\n  E._EvaluateVisitor_visitFunctionExpression_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.node.namespace,\n        t2 = this.plainName;\n      if (t1 == null)\n        t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return this.$this._async_evaluate$_getFunction$2$namespace(t2, t1);\n    },\n    $signature: 102\n  };\n  E._EvaluateVisitor_visitFunctionExpression_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor__runUserDefinedCallable_closure0.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.callable;\n      return t1._async_evaluate$_withEnvironment$1$2(t2.environment.closure$0(), new E._EvaluateVisitor__runUserDefinedCallable__closure0(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run), type$.legacy_Value);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor__runUserDefinedCallable__closure0.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._async_evaluate$_environment.scope$1$1(new E._EvaluateVisitor__runUserDefinedCallable___closure0(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor__runUserDefinedCallable___closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, declaredArguments, minLength, t8, i, t9, t10, t11, argument, value, t12, rest, argumentList, result, argumentWord, argumentNames, t1, t2, t3, t4, t5, t6, t7;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.evaluated;\n              t3 = t2.positional;\n              t4 = t3.length;\n              t5 = t2.named;\n              t6 = $async$self.callable.declaration.$arguments;\n              t7 = $async$self.nodeWithSpan;\n              t1._async_evaluate$_verifyArguments$4(t4, t5, t6, t7);\n              declaredArguments = t6.$arguments;\n              t4 = declaredArguments.length;\n              minLength = Math.min(t3.length, t4);\n              for (t8 = t1._async_evaluate$_sourceMap, i = 0; i < minLength; ++i) {\n                t9 = t1._async_evaluate$_environment;\n                t10 = declaredArguments[i].name;\n                t11 = t3[i].withoutSlash$0();\n                t9.setLocalVariable$3(t10, t11, t8 ? t2.positionalNodes[i] : null);\n              }\n              i = t3.length;\n            case 3:\n              // for condition\n              if (!(i < t4)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              argument = declaredArguments[i];\n              t9 = argument.name;\n              value = t5.remove$1(0, t9);\n              $async$goto = value == null ? 6 : 7;\n              break;\n            case 6:\n              // then\n              $async$goto = 8;\n              return P._asyncAwait(argument.defaultValue.accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n              value = $async$result;\n            case 7:\n              // join\n              t10 = t1._async_evaluate$_environment;\n              t11 = value.withoutSlash$0();\n              if (t8) {\n                t12 = t2.namedNodes.$index(0, t9);\n                if (t12 == null)\n                  t12 = t1._async_evaluate$_expressionNode$1(argument.defaultValue);\n              } else\n                t12 = null;\n              t10.setLocalVariable$3(t9, t11, t12);\n            case 4:\n              // for update\n              ++i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t8 = t6.restArgument;\n              if (t8 != null) {\n                rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty5;\n                t2 = t2.separator;\n                argumentList = D.SassArgumentList$(rest, t5, t2 === C.ListSeparator_undecided ? C.ListSeparator_comma : t2);\n                t1._async_evaluate$_environment.setLocalVariable$3(t8, argumentList, t7);\n              } else\n                argumentList = null;\n              $async$goto = 9;\n              return P._asyncAwait($async$self.run.call$0(), $async$call$0);\n            case 9:\n              // returning from await.\n              result = $async$result;\n              if (argumentList == null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (t5.get$isEmpty(t5)) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (argumentList._wereKeywordsAccessed) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t2 = t5.get$keys(t5);\n              argumentWord = B.pluralize(\"argument\", t2.get$length(t2), null);\n              t5 = t5.get$keys(t5);\n              argumentNames = B.toSentence(H.MappedIterable_MappedIterable(t5, new E._EvaluateVisitor__runUserDefinedCallable____closure0(), H._instanceType(t5)._eval$1(\"Iterable.E\"), type$.legacy_Object), \"or\");\n              throw H.wrapException(E.MultiSpanSassRuntimeException$(\"No \" + argumentWord + \" named \" + H.S(argumentNames) + \".\", t7.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), t1._async_evaluate$_stackTrace$1(t7.get$span())));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor__runUserDefinedCallable____closure0.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  E._EvaluateVisitor__runFunctionCallable_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value),\n        $async$returnValue, $async$self = this, t1, t2, t3, t4, _i, $returnValue;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = $async$self.$this, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t2[_i].accept$1(t4), $async$call$0);\n            case 6:\n              // returning from await.\n              $returnValue = $async$result;\n              if ($returnValue instanceof F.Value) {\n                $async$returnValue = $returnValue;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              throw H.wrapException(t4._async_evaluate$_exception$2(\"Function finished without @return.\", t1.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 29\n  };\n  E._EvaluateVisitor__runBuiltInCallable_closure1.prototype = {\n    call$0: function() {\n      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor__runBuiltInCallable_closure2.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  E._EvaluateVisitor__evaluateArguments_closure0.prototype = {\n    call$2: function(key, value) {\n      var t1;\n      this.named.$indexSet(0, key, value);\n      t1 = this.namedNodes;\n      if (t1 != null)\n        t1.$indexSet(0, key, this.restNodeForSpan);\n    },\n    $signature: 80\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure3.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure4.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure5.prototype = {\n    call$2: function(key, value) {\n      this.named.$indexSet(0, key, new F.ValueExpression(value, null));\n    },\n    $signature: 80\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure6.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  E._EvaluateVisitor__addRestMap_closure1.prototype = {\n    call$1: function(value) {\n      return this.T._eval$1(\"0*\")._as(value);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(Value*)\");\n    }\n  };\n  E._EvaluateVisitor__addRestMap_closure2.prototype = {\n    call$2: function(key, value) {\n      var _this = this;\n      if (key instanceof D.SassString)\n        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));\n      else\n        throw H.wrapException(_this.$this._async_evaluate$_exception$2(string$.Variab_ + H.S(key) + \" is not a string in \" + _this.map.toString$0(0) + \".\", _this.nodeWithSpan.get$span()));\n    },\n    $signature: 47\n  };\n  E._EvaluateVisitor__verifyArguments_closure0.prototype = {\n    call$0: function() {\n      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor_visitStringExpression_closure0.prototype = {\n    call$1: function(value) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, result;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (typeof value == \"string\") {\n                $async$returnValue = value;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              type$.legacy_Expression._as(value);\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(value.accept$1(t1), $async$call$1);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$returnValue = result instanceof D.SassString ? result.text : t1._async_evaluate$_serialize$3$quote(result, value, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 63\n  };\n  E._EvaluateVisitor_visitCssAtRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssAtRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitCssKeyframeBlock_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssKeyframeBlock_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitCssMediaRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.mergedQueries;\n              if (t2 == null)\n                t2 = $async$self.node.queries;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitCssMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, cur, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));\n            case 5:\n              // for condition\n              if (!t2.moveNext$0()) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              cur = t2.__internal$_current;\n              $async$goto = 7;\n              return P._asyncAwait(cur.accept$1(t1), $async$call$0);\n            case 7:\n              // returning from await.\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 6:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 8;\n              return P._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssMediaRule___closure0(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);\n            case 8:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule___closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule_closure2.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitCssStyleRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitCssStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssStyleRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssStyleRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor_visitCssSupportsRule_closure1.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, cur, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));\n            case 5:\n              // for condition\n              if (!t2.moveNext$0()) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              cur = t2.__internal$_current;\n              $async$goto = 7;\n              return P._asyncAwait(cur.accept$1(t1), $async$call$0);\n            case 7:\n              // returning from await.\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 6:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 8;\n              return P._asyncAwait(t1._async_evaluate$_withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssSupportsRule__closure0(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule, type$.Null), $async$call$0);\n            case 8:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssSupportsRule__closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssSupportsRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._EvaluateVisitor__performInterpolation_closure0.prototype = {\n    call$1: function(value) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, result, t2, t3;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (typeof value == \"string\") {\n                $async$returnValue = value;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              type$.legacy_Expression._as(value);\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(value.accept$1(t1), $async$call$1);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if ($async$self.warnForColor && result instanceof K.SassColor && $.$get$namesByColor().containsKey$1(result)) {\n                t2 = X.Interpolation$(H.setRuntimeTypeInfo([\"\"], type$.JSArray_legacy_Object), null);\n                t3 = $.$get$namesByColor();\n                t1._async_evaluate$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whic + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression(C.BinaryOperator_AcR0, new D.StringExpression(t2, true), value, false).toString$0(0) + \"'.\", value.get$span());\n              }\n              $async$returnValue = t1._async_evaluate$_serialize$3$quote(result, value, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 63\n  };\n  E._EvaluateVisitor__serialize_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      t1.toString;\n      return N.serializeValue0(t1, false, this.quote);\n    },\n    $signature: 13\n  };\n  E._EvaluateVisitor__stackTrace_closure0.prototype = {\n    call$1: function(tuple) {\n      return this.$this._async_evaluate$_stackFrame$2(tuple.item1, tuple.item2.get$span());\n    },\n    $signature: 126\n  };\n  E._ImportedCssVisitor0.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless ? null : new E._ImportedCssVisitor_visitCssAtRule_closure0();\n      this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, t1);\n    },\n    visitCssComment$1: function(node) {\n      return this._async_evaluate$_visitor._async_evaluate$_addChild$1(node);\n    },\n    visitCssDeclaration$1: function(node) {\n    },\n    visitCssImport$1: function(node) {\n      var t1 = this._async_evaluate$_visitor,\n        t2 = t1._async_evaluate$_parent,\n        t3 = t1._async_evaluate$_root;\n      if (t2 != t3)\n        t1._async_evaluate$_addChild$1(node);\n      else if (t1._async_evaluate$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {\n        t1._async_evaluate$_addChild$1(node);\n        t1._async_evaluate$_endOfImports = t1._async_evaluate$_endOfImports + 1;\n      } else {\n        t2 = t1._async_evaluate$_outOfOrderImports;\n        (t2 == null ? t1._async_evaluate$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t2).push(node);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1 = this._async_evaluate$_visitor,\n        t2 = t1._async_evaluate$_mediaQueries;\n      t1._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssMediaRule_closure0(t2 == null || t1._async_evaluate$_mergeMediaQueries$2(t2, node.queries) != null));\n    },\n    visitCssStyleRule$1: function(node) {\n      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssStyleRule_closure0());\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1, cur;\n      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(this);\n      }\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssSupportsRule_closure0());\n    }\n  };\n  E._ImportedCssVisitor_visitCssAtRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._ImportedCssVisitor_visitCssMediaRule_closure0.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  E._ImportedCssVisitor_visitCssStyleRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E._ImportedCssVisitor_visitCssSupportsRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  E.EvaluateResult.prototype = {};\n  E._ArgumentResults0.prototype = {};\n  V._CloneCssVisitor.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless,\n        rule = U.ModifiableCssAtRule$(node.name, node.span, t1, node.value);\n      return t1 ? rule : this._visitChildren$2(rule, node);\n    },\n    visitCssComment$1: function(node) {\n      return new R.ModifiableCssComment(node.text, node.span);\n    },\n    visitCssDeclaration$1: function(node) {\n      return L.ModifiableCssDeclaration$(node.name, node.value, node.span, node.parsedAsCustomProperty, node.valueSpanForMap);\n    },\n    visitCssImport$1: function(node) {\n      return F.ModifiableCssImport$(node.url, node.span, node.media, node.supports);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      return this._visitChildren$2(U.ModifiableCssKeyframeBlock$(node.selector, node.span), node);\n    },\n    visitCssMediaRule$1: function(node) {\n      return this._visitChildren$2(G.ModifiableCssMediaRule$(node.queries, node.span), node);\n    },\n    visitCssStyleRule$1: function(node) {\n      var newSelector = this._oldToNewSelectors.$index(0, node.selector);\n      if (newSelector == null)\n        throw H.wrapException(P.StateError$(string$.The_Ex));\n      return this._visitChildren$2(X.ModifiableCssStyleRule$(newSelector, node.span, node.originalSelector), node);\n    },\n    visitCssStylesheet$1: function(node) {\n      return this._visitChildren$2(V.ModifiableCssStylesheet$(node.get$span()), node);\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._visitChildren$2(B.ModifiableCssSupportsRule$(node.condition, node.span), node);\n    },\n    _visitChildren$1$2: function(newParent, oldParent) {\n      var t1, t2, newChild;\n      for (t1 = J.get$iterator$ax(oldParent.get$children(oldParent)); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        newChild = t2.accept$1(this);\n        newChild.isGroupEnd = t2.get$isGroupEnd();\n        newParent.addChild$1(newChild);\n      }\n      return newParent;\n    },\n    _visitChildren$2: function(newParent, oldParent) {\n      return this._visitChildren$1$2(newParent, oldParent, type$.legacy_ModifiableCssParentNode);\n    }\n  };\n  R.Evaluator.prototype = {};\n  R._EvaluateVisitor.prototype = {\n    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,\n        _s20_ = \"$name, $module: null\",\n        _s9_ = \"sass:meta\",\n        metaFunctions = [Q.BuiltInCallable$function(\"global-variable-exists\", _s20_, new R._EvaluateVisitor_closure(_this), _s9_), Q.BuiltInCallable$function(\"variable-exists\", \"$name\", new R._EvaluateVisitor_closure0(_this), _s9_), Q.BuiltInCallable$function(\"function-exists\", _s20_, new R._EvaluateVisitor_closure1(_this), _s9_), Q.BuiltInCallable$function(\"mixin-exists\", _s20_, new R._EvaluateVisitor_closure2(_this), _s9_), Q.BuiltInCallable$function(\"content-exists\", \"\", new R._EvaluateVisitor_closure3(_this), _s9_), Q.BuiltInCallable$function(\"module-variables\", \"$module\", new R._EvaluateVisitor_closure4(_this), _s9_), Q.BuiltInCallable$function(\"module-functions\", \"$module\", new R._EvaluateVisitor_closure5(_this), _s9_), Q.BuiltInCallable$function(\"get-function\", \"$name, $css: false, $module: null\", new R._EvaluateVisitor_closure6(_this), _s9_), Q.BuiltInCallable$function(\"call\", \"$function, $args...\", new R._EvaluateVisitor_closure7(_this), _s9_)],\n        t1 = type$.JSArray_legacy_BuiltInCallable,\n        metaMixins = H.setRuntimeTypeInfo([Q.BuiltInCallable$mixin(\"load-css\", \"$url, $with: null\", new R._EvaluateVisitor_closure8(_this), _s9_)], t1);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t2 = $.$get$global(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      metaModule = Q.BuiltInModule$(\"meta\", t1, metaMixins, null, type$.legacy_BuiltInCallable);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable);\n      for (t2 = $.$get$coreModules(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      t1.push(metaModule);\n      t2 = t1.length;\n      t3 = _this._builtInModules;\n      _i = 0;\n      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        module = t1[_i];\n        t3.$indexSet(0, module.url, module);\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Callable);\n      for (t2 = $.$get$globalFunctions(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      for (t2 = t1.length, t3 = _this._builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        $function = t1[_i];\n        t4 = $function.get$name($function);\n        t4.toString;\n        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, \"_\", \"-\"), $function);\n      }\n    },\n    run$2: function(_, importer, node) {\n      return this._withWarnCallback$1$1(new R._EvaluateVisitor_run_closure(this, node, importer), type$.legacy_EvaluateResult);\n    },\n    runExpression$2: function(importer, expression) {\n      return this._withWarnCallback$1$1(new R._EvaluateVisitor_runExpression_closure(this, importer, expression), type$.legacy_Value);\n    },\n    runStatement$2: function(importer, statement) {\n      return this._withWarnCallback$1$1(new R._EvaluateVisitor_runStatement_closure(this, importer, statement), type$.void);\n    },\n    _withWarnCallback$1$1: function(callback, $T) {\n      return N.withWarnCallback(new R._EvaluateVisitor__withWarnCallback_closure(this), callback, $T._eval$1(\"0*\"));\n    },\n    _withFakeStylesheet$1$3: function(importer, nodeWithSpan, callback) {\n      var oldStylesheet, t1, _this = this,\n        oldImporter = _this._importer;\n      _this._importer = importer;\n      oldStylesheet = _this._stylesheet;\n      _this._stylesheet = V.Stylesheet$(C.List_empty11, nodeWithSpan.get$span(), false);\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } finally {\n        _this._importer = oldImporter;\n        _this._stylesheet = oldStylesheet;\n      }\n    },\n    _withFakeStylesheet$3: function(importer, nodeWithSpan, callback) {\n      return this._withFakeStylesheet$1$3(importer, nodeWithSpan, callback, type$.dynamic);\n    },\n    _loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      var t1, _this = this,\n        builtInModule = _this._builtInModules.$index(0, url);\n      if (builtInModule != null) {\n        if (configuration != null && !configuration.isImplicit) {\n          t1 = namesInErrors ? \"Built-in module \" + H.S(url) + \" can't be configured.\" : \"Built-in modules can't be configured.\";\n          throw H.wrapException(_this._evaluate$_exception$2(t1, nodeWithSpan.get$span()));\n        }\n        _this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__loadModule_closure(callback, builtInModule));\n        return;\n      }\n      _this._withStackFrame$3(stackFrame, nodeWithSpan, new R._EvaluateVisitor__loadModule_closure0(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));\n    },\n    _loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {\n      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);\n    },\n    _loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {\n      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);\n    },\n    _execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      var message, existingNode, environment, extender, module, _this = this, t1 = {},\n        url = stylesheet.span.file.url,\n        t2 = _this._modules,\n        alreadyLoaded = t2.$index(0, url);\n      if (alreadyLoaded != null) {\n        t1 = configuration == null;\n        if (!(t1 ? _this._configuration : configuration).isImplicit) {\n          message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;\n          existingNode = _this._moduleNodes.$index(0, url);\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          if (existingNode != null)\n            t2.$indexSet(0, existingNode.get$span(), \"original load\");\n          if (t1)\n            t2.$indexSet(0, _this._configuration.nodeWithSpan.get$span(), \"configuration\");\n          throw H.wrapException(t2.get$isEmpty(t2) ? _this._evaluate$_exception$1(message) : _this._multiSpanException$3(message, \"new load\", t2));\n        }\n        return alreadyLoaded;\n      }\n      environment = O.Environment$(_this._sourceMap);\n      t1.css = null;\n      extender = F.Extender$();\n      _this._withEnvironment$2(environment, new R._EvaluateVisitor__execute_closure(t1, _this, importer, stylesheet, extender, configuration));\n      module = O._EnvironmentModule__EnvironmentModule(environment, t1.css, extender, environment._forwardedModules);\n      t2.$indexSet(0, url, module);\n      _this._moduleNodes.$indexSet(0, url, nodeWithSpan);\n      return module;\n    },\n    _execute$2: function(importer, stylesheet) {\n      return this._execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);\n    },\n    _addOutOfOrderImports$0: function() {\n      var t1, statements, _this = this;\n      if (_this._outOfOrderImports == null)\n        return _this._root.children;\n      t1 = new Array(J.get$length$asx(_this._root.children._collection$_source) + _this._outOfOrderImports.length);\n      t1.fixed$length = Array;\n      statements = new G.FixedLengthListBuilder(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode), type$.FixedLengthListBuilder_legacy_ModifiableCssNode);\n      statements.addRange$3(_this._root.children, 0, _this._endOfImports);\n      statements.addAll$1(0, _this._outOfOrderImports);\n      statements.addRange$2(_this._root.children, _this._endOfImports);\n      return statements.build$0();\n    },\n    _combineCss$2$clone: function(root, clone) {\n      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;\n      if (!C.JSArray_methods.any$1(root.get$upstream(), new R._EvaluateVisitor__combineCss_closure())) {\n        selectors = root.get$extender().get$simpleSelectors();\n        unsatisfiedExtension = B.firstOrNull(root.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__combineCss_closure0(selectors)));\n        if (unsatisfiedExtension != null)\n          _this._throwForUnsatisfiedExtension$1(unsatisfiedExtension);\n        return root.get$css(root);\n      }\n      sortedModules = _this._topologicalModules$1(root);\n      if (clone) {\n        t1 = sortedModules.$ti._eval$1(\"MappedListIterable<ListMixin.E,Module<Callable*>*>\");\n        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new R._EvaluateVisitor__combineCss_closure1(), t1), true, t1._eval$1(\"ListIterable.E\"));\n      }\n      _this._extendModules$1(sortedModules);\n      t1 = type$.JSArray_legacy_CssNode;\n      imports = H.setRuntimeTypeInfo([], t1);\n      css = H.setRuntimeTypeInfo([], t1);\n      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2 = cur.get$css(cur);\n        statements = t2.get$children(t2);\n        index = _this._indexAfterImports$1(statements);\n        t2 = J.getInterceptor$ax(statements);\n        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));\n        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));\n      }\n      return new V.CssStylesheet(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode), root.get$css(root).get$span());\n    },\n    _combineCss$1: function(root) {\n      return this._combineCss$2$clone(root, false);\n    },\n    _extendModules$1: function(sortedModules) {\n      var t1, t2, originalSelectors, extenders, t3, t4, _i,\n        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender),\n        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension);\n      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);\n        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__extendModules_closure(originalSelectors)));\n        extenders = downstreamExtenders.$index(0, t2.get$url());\n        if (extenders != null)\n          t2.get$extender().addExtensions$1(extenders);\n        t3 = t2.get$extender();\n        if (t3.get$isEmpty(t3))\n          continue;\n        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)\n          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new R._EvaluateVisitor__extendModules_closure0()), t2.get$extender());\n        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));\n      }\n      if (unsatisfiedExtensions._collection$_length !== 0)\n        this._throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));\n    },\n    _throwForUnsatisfiedExtension$1: function(extension) {\n      throw H.wrapException(E.SassException$(string$.The_ta + H.S(extension.target) + ' !optional\" to avoid this error.', extension.span));\n    },\n    _topologicalModules$1: function(root) {\n      var t1 = type$.legacy_Module_legacy_Callable,\n        sorted = Q.QueueList$(null, t1);\n      new R._EvaluateVisitor__topologicalModules_visitModule(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);\n      return sorted;\n    },\n    _indexAfterImports$1: function(statements) {\n      var t1, t2, t3, lastImport, i, statement;\n      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment, t3 = type$.legacy_CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {\n        statement = t1.$index(statements, i);\n        if (t3._is(statement))\n          lastImport = i;\n        else if (!t2._is(statement))\n          break;\n      }\n      return lastImport + 1;\n    },\n    visitStylesheet$1: function(node) {\n      var t1, t2, _i;\n      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(this);\n      return null;\n    },\n    visitAtRootRule$1: function(node) {\n      var root, innerCopy, outerCopy, cur, copy, _this = this, _null = null,\n        t1 = node.query,\n        query = t1 != null ? _this._adjustParseError$2(t1, new R._EvaluateVisitor_visitAtRootRule_closure(_this, _this._performInterpolation$2$warnForColor(t1, true))) : C.AtRootQuery_UsS,\n        $parent = _this._evaluate$_parent,\n        included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode);\n      for (t1 = type$.legacy_CssStylesheet; !t1._is($parent);) {\n        if (!query.excludes$1($parent))\n          included.push($parent);\n        $parent = $parent._parent;\n      }\n      root = _this._trimIncluded$1(included);\n      if (root == _this._evaluate$_parent) {\n        _this._evaluate$_environment.scope$1$2$when(new R._EvaluateVisitor_visitAtRootRule_closure0(_this, node), node.hasDeclarations, type$.Null);\n        return _null;\n      }\n      innerCopy = included.length === 0 ? _null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();\n      for (t1 = H.SubListIterable$(included, 1, _null, type$.legacy_ModifiableCssParentNode), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {\n        cur = t1.__internal$_current;\n        copy = cur.copyWithoutChildren$0();\n        copy.addChild$1(outerCopy);\n      }\n      if (outerCopy != null)\n        root.addChild$1(outerCopy);\n      _this._scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new R._EvaluateVisitor_visitAtRootRule_closure1(_this, node));\n      return _null;\n    },\n    _trimIncluded$1: function(nodes) {\n      var $parent, innermostContiguous, i, t2, root,\n        t1 = nodes.length;\n      if (t1 === 0)\n        return this._root;\n      $parent = this._evaluate$_parent;\n      for (innermostContiguous = null, i = 0; i < t1; ++i) {\n        for (; $parent != nodes[i]; innermostContiguous = null)\n          $parent = $parent._parent;\n        if (innermostContiguous == null)\n          innermostContiguous = i;\n        $parent = $parent._parent;\n      }\n      t2 = this._root;\n      if ($parent != t2)\n        return t2;\n      root = nodes[innermostContiguous];\n      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);\n      return root;\n    },\n    _scopeForAtRoot$4: function(node, newParent, query, included) {\n      var _this = this,\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure(_this, newParent, node),\n        t1 = query._all || query._at_root_query$_rule;\n      if (t1 !== query.include)\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure0(_this, scope);\n      if (_this._mediaQueries != null && query.excludesName$1(\"media\"))\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure1(_this, scope);\n      if (_this._inKeyframes && query.excludesName$1(\"keyframes\"))\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure2(_this, scope);\n      return _this._inUnknownAtRule && !C.JSArray_methods.any$1(included, new R._EvaluateVisitor__scopeForAtRoot_closure3()) ? new R._EvaluateVisitor__scopeForAtRoot_closure4(_this, scope) : scope;\n    },\n    visitContentBlock$1: function(node) {\n      return H.throwExpression(P.UnsupportedError$(string$.Evalua));\n    },\n    visitContentRule$1: function(node) {\n      var $content = this._evaluate$_environment._content;\n      if ($content == null)\n        return null;\n      this._runUserDefinedCallable$4(node.$arguments, $content, node, new R._EvaluateVisitor_visitContentRule_closure(this, $content));\n      return null;\n    },\n    visitDebugRule$1: function(node) {\n      var value = node.expression.accept$1(this),\n        t1 = value instanceof D.SassString ? value.text : J.toString$0$(value);\n      this._evaluate$_logger.debug$2(0, t1, node.span);\n      return null;\n    },\n    visitDeclaration$1: function(node) {\n      var t1, $name, t2, cssValue, t3, oldDeclarationName, _this = this;\n      if (!(_this._styleRule != null && !_this._atRootExcludingStyleRule) && !_this._inUnknownAtRule && !_this._inKeyframes)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Declarm, node.span));\n      t1 = node.name;\n      $name = _this._interpolationToValue$2$warnForColor(t1, true);\n      t2 = _this._declarationName;\n      if (t2 != null)\n        $name = new F.CssValue(t2 + \"-\" + H.S($name.value), $name.span, type$.CssValue_legacy_String);\n      t2 = node.value;\n      cssValue = t2 == null ? null : new F.CssValue(t2.accept$1(_this), t2.get$span(), type$.CssValue_legacy_Value);\n      if (cssValue != null) {\n        t3 = cssValue.value;\n        t3 = !t3.get$isBlank() || t3.get$asList().length === 0;\n      } else\n        t3 = false;\n      if (t3) {\n        t3 = _this._evaluate$_parent;\n        t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), \"--\");\n        t2 = _this._expressionNode$1(t2);\n        t2 = t2 == null ? null : t2.get$span();\n        t3.addChild$1(L.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));\n      } else if (J.startsWith$1$s($name.value, \"--\") && node.children == null)\n        throw H.wrapException(_this._evaluate$_exception$2(\"Custom property values may not be empty.\", t2.get$span()));\n      if (node.children != null) {\n        oldDeclarationName = _this._declarationName;\n        _this._declarationName = $name.value;\n        _this._evaluate$_environment.scope$1$2$when(new R._EvaluateVisitor_visitDeclaration_closure(_this, node), node.hasDeclarations, type$.Null);\n        _this._declarationName = oldDeclarationName;\n      }\n      return null;\n    },\n    visitEachRule$1: function(node) {\n      var _this = this,\n        t1 = node.list,\n        list = t1.accept$1(_this),\n        nodeWithSpan = _this._expressionNode$1(t1),\n        setVariables = node.variables.length === 1 ? new R._EvaluateVisitor_visitEachRule_closure(_this, node, nodeWithSpan) : new R._EvaluateVisitor_visitEachRule_closure0(_this, node, nodeWithSpan);\n      return _this._evaluate$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitEachRule_closure1(_this, list, setVariables, node), true, type$.legacy_Value);\n    },\n    _setMultipleVariables$3: function(variables, value, nodeWithSpan) {\n      var i,\n        list = value.get$asList(),\n        t1 = variables.length,\n        minLength = Math.min(t1, list.length);\n      for (i = 0; i < minLength; ++i)\n        this._evaluate$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);\n      for (i = minLength; i < t1; ++i)\n        this._evaluate$_environment.setLocalVariable$3(variables[i], C.C_SassNull0, nodeWithSpan);\n    },\n    visitErrorRule$1: function(node) {\n      throw H.wrapException(this._evaluate$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));\n    },\n    visitExtendRule$1: function(node) {\n      var targetText, t1, t2, t3, _i, t4, _this = this;\n      if (!(_this._styleRule != null && !_this._atRootExcludingStyleRule) || _this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.x40exten, node.span));\n      targetText = _this._interpolationToValue$2$warnForColor(node.selector, true);\n      for (t1 = _this._adjustParseError$2(targetText, new R._EvaluateVisitor_visitExtendRule_closure(_this, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector, _i = 0; _i < t2; ++_i) {\n        t4 = t1[_i].components;\n        if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector))\n          throw H.wrapException(E.SassFormatException$(\"complex selectors may not be extended.\", targetText.span));\n        t4 = t3._as(C.JSArray_methods.get$first(t4)).components;\n        if (t4.length !== 1)\n          throw H.wrapException(E.SassFormatException$(string$.compou + C.JSArray_methods.join$1(t4, \", \") + string$.x60_inst, targetText.span));\n        _this._extender.addExtension$4(_this._styleRule.selector, C.JSArray_methods.get$first(t4), node, _this._mediaQueries);\n      }\n      return null;\n    },\n    visitAtRule$1: function(node) {\n      var $name, t1, value, wasInKeyframes, wasInUnknownAtRule, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.At_rul, node.span));\n      $name = _this._interpolationToValue$1(node.name);\n      t1 = node.value;\n      value = t1 == null ? null : _this._interpolationToValue$3$trim$warnForColor(t1, true, true);\n      if (node.children == null) {\n        _this._evaluate$_parent.addChild$1(U.ModifiableCssAtRule$($name, node.span, true, value));\n        return null;\n      }\n      wasInKeyframes = _this._inKeyframes;\n      wasInUnknownAtRule = _this._inUnknownAtRule;\n      if (B.unvendor($name.value) === \"keyframes\")\n        _this._inKeyframes = true;\n      else\n        _this._inUnknownAtRule = true;\n      _this._withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$($name, node.span, false, value), new R._EvaluateVisitor_visitAtRule_closure(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitAtRule_closure0(), type$.legacy_ModifiableCssAtRule, type$.Null);\n      _this._inUnknownAtRule = wasInUnknownAtRule;\n      _this._inKeyframes = wasInKeyframes;\n      return null;\n    },\n    visitForRule$1: function(node) {\n      var _this = this, t1 = {},\n        t2 = node.from,\n        fromNumber = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure(_this, node)),\n        t3 = node.to,\n        toNumber = _this._addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure0(_this, node)),\n        from = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure1(fromNumber, toNumber)),\n        to = t1.to = _this._addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure2(toNumber)),\n        direction = from > to ? -1 : 1;\n      if (from === (!node.isExclusive ? t1.to = to + direction : to))\n        return null;\n      return _this._evaluate$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitForRule_closure3(t1, _this, node, from, direction), true, type$.legacy_Value);\n    },\n    visitForwardRule$1: function(node) {\n      var newConfiguration, t4, _i, variable, _this = this,\n        _s8_ = \"@forward\",\n        oldConfiguration = _this._configuration,\n        adjustedConfiguration = oldConfiguration.throughForward$1(node),\n        t1 = node.configuration,\n        t2 = t1.length,\n        t3 = node.url;\n      if (t2 !== 0) {\n        newConfiguration = _this._addForwardConfiguration$2(adjustedConfiguration, node);\n        _this._loadModule$5$configuration(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure(_this, node), newConfiguration);\n        t3 = type$.legacy_String;\n        t4 = P.LinkedHashSet_LinkedHashSet(t3);\n        for (_i = 0; _i < t2; ++_i) {\n          variable = t1[_i];\n          if (!variable.isGuarded)\n            t4.add$1(0, variable.name);\n        }\n        _this._removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);\n        t3 = P.LinkedHashSet_LinkedHashSet(t3);\n        for (_i = 0; _i < t2; ++_i)\n          t3.add$1(0, t1[_i].name);\n        _this._assertConfigurationIsEmpty$2$only(newConfiguration, t3);\n      } else {\n        _this._configuration = adjustedConfiguration;\n        _this._loadModule$4(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure0(_this, node));\n        _this._configuration = oldConfiguration;\n      }\n      return null;\n    },\n    _addForwardConfiguration$2: function(configuration, node) {\n      var t2, t3, _i, variable, t4, t5,\n        t1 = configuration._values,\n        newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue), type$.legacy_String, type$.legacy_ConfiguredValue);\n      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        variable = t2[_i];\n        if (variable.isGuarded) {\n          t4 = variable.name;\n          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);\n          if (t5 != null && !J.$eq$(t5.value, C.C_SassNull0)) {\n            newValues.$indexSet(0, t4, t5);\n            continue;\n          }\n        }\n        t4 = variable.name;\n        t5 = variable.expression;\n        newValues.$indexSet(0, t4, new Z.ConfiguredValue(t5.accept$1(this).withoutSlash$0(), variable.span, this._expressionNode$1(t5)));\n      }\n      return new A.Configuration(newValues, node, false);\n    },\n    _removeUsedConfiguration$3$except: function(upstream, downstream, except) {\n      var t1, t2, t3, t4, _i, $name;\n      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._values, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        $name = t2[_i];\n        if (except.contains$1(0, $name))\n          continue;\n        if (!t4.containsKey$1($name))\n          if (!t1.get$isEmpty(t1))\n            t1.remove$1(0, $name);\n      }\n    },\n    _assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {\n      configuration._values.forEach$1(0, new R._EvaluateVisitor__assertConfigurationIsEmpty_closure(this, only, nameInError));\n    },\n    _assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {\n      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);\n    },\n    _assertConfigurationIsEmpty$1: function(configuration) {\n      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);\n    },\n    _assertConfigurationIsEmpty$2$only: function(configuration, only) {\n      return this._assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);\n    },\n    visitFunctionRule$1: function(node) {\n      var t1 = this._evaluate$_environment,\n        t2 = t1.closure$0(),\n        t3 = t1._functions,\n        index = t3.length - 1,\n        t4 = node.name;\n      t1._functionIndices.$indexSet(0, t4, index);\n      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_Environment));\n      return null;\n    },\n    visitIfRule$1: function(node) {\n      var t1, t2, _i, clauseToCheck, _box_0 = {};\n      _box_0.clause = node.lastClause;\n      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        clauseToCheck = t1[_i];\n        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {\n          _box_0.clause = clauseToCheck;\n          break;\n        }\n      }\n      t1 = _box_0.clause;\n      if (t1 == null)\n        return null;\n      return this._evaluate$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitIfRule_closure(_box_0, this), true, t1.hasDeclarations, type$.legacy_Value);\n    },\n    visitImportRule$1: function(node) {\n      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, supports, t8, t9, resolvedSupports, mediaQuery, t10, result0, _this = this, _null = null;\n      for (t1 = node.imports, t2 = t1.length, t3 = type$.legacy_CssMediaQuery, t4 = type$.CssValue_legacy_String, t5 = type$.legacy_StaticImport, t6 = type$.JSArray_legacy_ModifiableCssImport, _i = 0; _i < t2; ++_i) {\n        $import = t1[_i];\n        if ($import instanceof B.DynamicImport)\n          _this._visitDynamicImport$1($import);\n        else {\n          t5._as($import);\n          t7 = $import.url;\n          result = _this._performInterpolation$2$warnForColor(t7, false);\n          supports = $import.supports;\n          if (supports instanceof L.SupportsDeclaration) {\n            t8 = supports.name;\n            t8 = H.S(_this._evaluate$_serialize$3$quote(t8.accept$1(_this), t8, true)) + \": \";\n            t9 = supports.value;\n            resolvedSupports = t8 + H.S(_this._evaluate$_serialize$3$quote(t9.accept$1(_this), t9, true));\n          } else\n            resolvedSupports = supports == null ? _null : _this._visitSupportsCondition$1(supports);\n          t8 = $import.media;\n          mediaQuery = t8 == null ? _null : _this._visitMediaQueries$1(t8);\n          t8 = $import.span;\n          t9 = resolvedSupports == null ? _null : new F.CssValue(\"supports(\" + resolvedSupports + \")\", supports.get$span(), t4);\n          if (mediaQuery == null)\n            t10 = _null;\n          else {\n            result0 = P.List_List$from(mediaQuery, false, t3);\n            result0.fixed$length = Array;\n            result0.immutable$list = Array;\n            t10 = result0;\n          }\n          node = new F.ModifiableCssImport(new F.CssValue(result, t7.span, t4), t9, t10, t8);\n          t7 = _this._evaluate$_parent;\n          t8 = _this._root;\n          if (t7 != t8)\n            t7.addChild$1(node);\n          else if (_this._endOfImports === J.get$length$asx(t8.children._collection$_source)) {\n            t7 = _this._root;\n            t7.toString;\n            node._parent = t7;\n            t7 = t7._children;\n            node._indexInParent = t7.length;\n            t7.push(node);\n            _this._endOfImports = _this._endOfImports + 1;\n          } else {\n            t7 = _this._outOfOrderImports;\n            (t7 == null ? _this._outOfOrderImports = H.setRuntimeTypeInfo([], t6) : t7).push(node);\n          }\n        }\n      }\n      return _null;\n    },\n    _visitDynamicImport$1: function($import) {\n      return this._withStackFrame$3(\"@import\", $import, new R._EvaluateVisitor__visitDynamicImport_closure(this, $import));\n    },\n    _loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {\n      var tuple, error, error0, message, t1, t2, t3, exception, message0, _this = this;\n      try {\n        _this._importSpan = span;\n        t1 = P.Uri_parse(url);\n        t2 = _this._importer;\n        if (baseUrl == null) {\n          t3 = _this._stylesheet;\n          t3 = t3 == null ? null : t3.span;\n          t3 = t3 == null ? null : t3.file.url;\n        } else\n          t3 = baseUrl;\n        tuple = _this._evaluate$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport);\n        if (tuple != null)\n          return tuple;\n        if (C.JSString_methods.startsWith$1(url, \"package:\") && true)\n          throw H.wrapException(string$.x22packa);\n        else\n          throw H.wrapException(\"Can't find stylesheet to import.\");\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassException) {\n          error = t1;\n          t1 = _this._evaluate$_exception$2(error._span_exception$_message, error.get$span());\n          throw H.wrapException(t1);\n        } else {\n          error0 = t1;\n          message = null;\n          try {\n            message = H._asStringS(J.get$message$x(error0));\n          } catch (exception) {\n            H.unwrapException(exception);\n            message0 = J.toString$0$(error0);\n            message = message0;\n          }\n          t1 = _this._evaluate$_exception$1(message);\n          throw H.wrapException(t1);\n        }\n      } finally {\n        _this._importSpan = null;\n      }\n    },\n    _loadStylesheet$3$baseUrl: function(url, span, baseUrl) {\n      return this._loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);\n    },\n    _loadStylesheet$3$forImport: function(url, span, forImport) {\n      return this._loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);\n    },\n    visitIncludeRule$1: function(node) {\n      var nodeWithSpan, t1, t2, contentCallable, _this = this,\n        _s37_ = \"Mixin doesn't accept a content block.\",\n        mixin = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitIncludeRule_closure(_this, node));\n      if (mixin == null)\n        throw H.wrapException(_this._evaluate$_exception$2(\"Undefined mixin.\", node.span));\n      nodeWithSpan = new B._FakeAstNode(new R._EvaluateVisitor_visitIncludeRule_closure0(node));\n      if (mixin instanceof Q.BuiltInCallable) {\n        if (node.content != null)\n          throw H.wrapException(_this._evaluate$_exception$2(_s37_, node.span));\n        _this._runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);\n      } else if (type$.legacy_UserDefinedCallable_legacy_Environment._is(mixin)) {\n        t1 = node.content;\n        t2 = t1 == null;\n        if (!t2 && !type$.legacy_MixinRule._as(mixin.declaration).hasContent)\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(_s37_, node.get$spanWithoutContent(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate$_stackTrace$1(node.get$spanWithoutContent())));\n        contentCallable = t2 ? null : new E.UserDefinedCallable(t1, _this._evaluate$_environment.closure$0(), type$.UserDefinedCallable_legacy_Environment);\n        _this._runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new R._EvaluateVisitor_visitIncludeRule_closure1(_this, contentCallable, mixin, nodeWithSpan));\n      } else\n        throw H.wrapException(P.UnsupportedError$(\"Unknown callable type \" + mixin.toString$0(0) + \".\"));\n      return null;\n    },\n    visitMixinRule$1: function(node) {\n      var t1 = this._evaluate$_environment,\n        t2 = t1.closure$0(),\n        t3 = t1._mixins,\n        index = t3.length - 1,\n        t4 = node.name;\n      t1._mixinIndices.$indexSet(0, t4, index);\n      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable(node, t2, type$.UserDefinedCallable_legacy_Environment));\n      return null;\n    },\n    visitLoudComment$1: function(node) {\n      var t1, t2, _this = this;\n      if (_this._inFunction)\n        return null;\n      t1 = _this._evaluate$_parent;\n      t2 = _this._root;\n      if (t1 == t2 && _this._endOfImports === J.get$length$asx(t2.children._collection$_source))\n        _this._endOfImports = _this._endOfImports + 1;\n      t1 = node.text;\n      _this._evaluate$_parent.addChild$1(new R.ModifiableCssComment(_this._performInterpolation$1(t1), t1.span));\n      return null;\n    },\n    visitMediaRule$1: function(node) {\n      var queries, t1, mergedQueries, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Media_, node.span));\n      queries = _this._visitMediaQueries$1(node.query);\n      t1 = _this._mediaQueries;\n      mergedQueries = t1 == null ? null : _this._mergeMediaQueries$2(t1, queries);\n      t1 = mergedQueries == null;\n      if (!t1 && mergedQueries.length === 0)\n        return null;\n      t1 = t1 ? queries : mergedQueries;\n      _this._withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new R._EvaluateVisitor_visitMediaRule_closure(_this, mergedQueries, queries, node), node.hasDeclarations, new R._EvaluateVisitor_visitMediaRule_closure0(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null);\n      return null;\n    },\n    _visitMediaQueries$1: function(interpolation) {\n      return this._adjustParseError$2(interpolation, new R._EvaluateVisitor__visitMediaQueries_closure(this, this._performInterpolation$2$warnForColor(interpolation, true)));\n    },\n    _mergeMediaQueries$2: function(queries1, queries2) {\n      var t1, t2, t3, t4, t5, result,\n        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery);\n      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult; t1.moveNext$0();) {\n        t4 = t1.get$current(t1);\n        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {\n          result = t4.merge$1(t5.get$current(t5));\n          if (result === C._SingletonCssMediaQueryMergeResult_empty)\n            continue;\n          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable)\n            return null;\n          queries.push(t3._as(result).query);\n        }\n      }\n      return queries;\n    },\n    visitReturnRule$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitSilentComment$1: function(node) {\n      return null;\n    },\n    visitStyleRule$1: function(node) {\n      var t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, _this = this, t1 = {};\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Style_, node.span));\n      t2 = node.selector;\n      selectorText = _this._interpolationToValue$3$trim$warnForColor(t2, true, true);\n      if (_this._inKeyframes) {\n        _this._withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(new F.CssValue(P.List_List$unmodifiable(_this._adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure(_this, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String), node.span), new R._EvaluateVisitor_visitStyleRule_closure0(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure1(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null);\n        return null;\n      }\n      t1.parsedSelector = _this._adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure2(_this, selectorText));\n      parsedSelector = _this._addExceptionSpan$2(t2, new R._EvaluateVisitor_visitStyleRule_closure3(t1, _this));\n      t1.parsedSelector = parsedSelector;\n      rule = X.ModifiableCssStyleRule$(_this._extender.addSelector$3(parsedSelector, t2.span, _this._mediaQueries), node.span, t1.parsedSelector);\n      oldAtRootExcludingStyleRule = _this._atRootExcludingStyleRule;\n      _this._atRootExcludingStyleRule = false;\n      _this._withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitStyleRule_closure4(_this, rule, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure5(), type$.legacy_ModifiableCssStyleRule, type$.Null);\n      _this._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      if (!(_this._styleRule != null && !oldAtRootExcludingStyleRule)) {\n        t1 = _this._evaluate$_parent.children;\n        t1 = !t1.get$isEmpty(t1);\n      } else\n        t1 = false;\n      if (t1) {\n        t1 = _this._evaluate$_parent.children;\n        t1.get$last(t1).isGroupEnd = true;\n      }\n      return null;\n    },\n    visitSupportsRule$1: function(node) {\n      var t1, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Suppor, node.span));\n      t1 = node.condition;\n      _this._withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(new F.CssValue(_this._visitSupportsCondition$1(t1), t1.get$span(), type$.CssValue_legacy_String), node.span), new R._EvaluateVisitor_visitSupportsRule_closure(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitSupportsRule_closure0(), type$.legacy_ModifiableCssSupportsRule, type$.Null);\n      return null;\n    },\n    _visitSupportsCondition$1: function(condition) {\n      var t1, t2, _this = this;\n      if (condition instanceof U.SupportsOperation) {\n        t1 = condition.left;\n        t2 = condition.operator;\n        return H.S(_this._parenthesize$2(t1, t2)) + \" \" + t2 + \" \" + H.S(_this._parenthesize$2(condition.right, t2));\n      } else if (condition instanceof M.SupportsNegation)\n        return \"not \" + H.S(_this._parenthesize$1(condition.condition));\n      else if (condition instanceof X.SupportsInterpolation) {\n        t1 = condition.expression;\n        return _this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, false);\n      } else if (condition instanceof L.SupportsDeclaration) {\n        t1 = condition.name;\n        t1 = \"(\" + H.S(_this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, true)) + \": \";\n        t2 = condition.value;\n        return t1 + H.S(_this._evaluate$_serialize$3$quote(t2.accept$1(_this), t2, true)) + \")\";\n      } else if (condition instanceof F.SupportsFunction)\n        return _this._performInterpolation$1(condition.name) + \"(\" + _this._performInterpolation$1(condition.$arguments) + \")\";\n      else if (condition instanceof Y.SupportsAnything)\n        return \"(\" + _this._performInterpolation$1(condition.contents) + \")\";\n      else\n        return null;\n    },\n    _parenthesize$2: function(condition, operator) {\n      var t1;\n      if (!(condition instanceof M.SupportsNegation))\n        if (condition instanceof U.SupportsOperation)\n          t1 = operator == null || operator !== condition.operator;\n        else\n          t1 = false;\n      else\n        t1 = true;\n      if (t1)\n        return \"(\" + H.S(this._visitSupportsCondition$1(condition)) + \")\";\n      else\n        return this._visitSupportsCondition$1(condition);\n    },\n    _parenthesize$1: function(condition) {\n      return this._parenthesize$2(condition, null);\n    },\n    visitVariableDeclaration$1: function(node) {\n      var t1, value, t2, _this = this, _null = null;\n      if (node.isGuarded) {\n        if (node.namespace == null && _this._evaluate$_environment._variables.length === 1) {\n          t1 = _this._configuration._values;\n          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);\n          if (t1 != null) {\n            _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure(_this, node, t1));\n            return _null;\n          }\n        }\n        value = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure0(_this, node));\n        if (value != null && !value.$eq(0, C.C_SassNull0))\n          return _null;\n      }\n      if (node.isGlobal && !_this._evaluate$_environment.globalVariableExists$1(node.name)) {\n        t1 = _this._evaluate$_environment._variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName(node.span) + \": null` at the root of the\\nstylesheet.\";\n        t2 = node.span;\n        _this._evaluate$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, _this._evaluate$_stackTrace$1(t2));\n      }\n      _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure1(_this, node, node.expression.accept$1(_this).withoutSlash$0()));\n      return _null;\n    },\n    visitUseRule$1: function(node) {\n      var configuration, t3, _i, variable, t4, t5, _this = this,\n        t1 = node.configuration,\n        t2 = t1.length;\n      if (t2 === 0)\n        configuration = C.Configuration_Map_empty_null_true;\n      else {\n        t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);\n        for (_i = 0; _i < t2; ++_i) {\n          variable = t1[_i];\n          t4 = variable.name;\n          t5 = variable.expression;\n          t3.$indexSet(0, t4, new Z.ConfiguredValue(t5.accept$1(_this).withoutSlash$0(), variable.span, _this._expressionNode$1(t5)));\n        }\n        configuration = new A.Configuration(t3, node, false);\n      }\n      _this._loadModule$5$configuration(node.url, \"@use\", node, new R._EvaluateVisitor_visitUseRule_closure(_this, node), configuration);\n      _this._assertConfigurationIsEmpty$1(configuration);\n      return null;\n    },\n    visitWarnRule$1: function(node) {\n      var _this = this,\n        value = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitWarnRule_closure(_this, node)),\n        t1 = value instanceof D.SassString ? value.text : _this._evaluate$_serialize$2(value, node.expression);\n      _this._evaluate$_logger.warn$2$trace(0, t1, _this._evaluate$_stackTrace$1(node.span));\n      return null;\n    },\n    visitWhileRule$1: function(node) {\n      return this._evaluate$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitWhileRule_closure(this, node), true, node.hasDeclarations, type$.legacy_Value);\n    },\n    visitBinaryOperationExpression$1: function(node) {\n      return this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitBinaryOperationExpression_closure(this, node));\n    },\n    visitValueExpression$1: function(node) {\n      return node.value;\n    },\n    visitVariableExpression$1: function(node) {\n      var result = this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableExpression_closure(this, node));\n      if (result != null)\n        return result;\n      throw H.wrapException(this._evaluate$_exception$2(\"Undefined variable.\", node.span));\n    },\n    visitUnaryOperationExpression$1: function(node) {\n      var operand = node.operand.accept$1(this),\n        t1 = node.operator;\n      switch (t1) {\n        case C.UnaryOperator_j2w:\n          return operand.unaryPlus$0();\n        case C.UnaryOperator_U4G:\n          return operand.unaryMinus$0();\n        case C.UnaryOperator_zDx:\n          operand.toString;\n          return new D.SassString(\"/\" + N.serializeValue0(operand, false, true), false);\n        case C.UnaryOperator_not_not:\n          return operand.unaryNot$0();\n        default:\n          throw H.wrapException(P.StateError$(\"Unknown unary operator \" + H.S(t1) + \".\"));\n      }\n    },\n    visitBooleanExpression$1: function(node) {\n      return node.value ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    visitIfExpression$1: function(node) {\n      var condition, ifTrue, ifFalse, _this = this,\n        pair = _this._evaluateMacroArguments$1(node),\n        positional = pair.item1,\n        named = pair.item2,\n        t1 = J.getInterceptor$asx(positional);\n      _this._verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration(), node);\n      condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, \"condition\");\n      ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, \"if-true\");\n      ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, \"if-false\");\n      return (condition.accept$1(_this).get$isTruthy() ? ifTrue : ifFalse).accept$1(_this);\n    },\n    visitNullExpression$1: function(node) {\n      return C.C_SassNull0;\n    },\n    visitNumberExpression$1: function(node) {\n      return T.SassNumber$(node.value, node.unit);\n    },\n    visitParenthesizedExpression$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitColorExpression$1: function(node) {\n      return node.value;\n    },\n    visitListExpression$1: function(node) {\n      var t1 = node.contents;\n      return D.SassList$(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitListExpression_closure(this), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value*>\")), node.separator, node.hasBrackets);\n    },\n    visitMapExpression$1: function(node) {\n      var t2, t3, _i, pair, t4, keyValue, valueValue,\n        t1 = type$.legacy_Value,\n        map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1),\n        keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode);\n      for (t2 = node.pairs, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        pair = t2[_i];\n        t4 = pair.item1;\n        keyValue = t4.accept$1(this);\n        valueValue = pair.item2.accept$1(this);\n        if (map.containsKey$1(keyValue))\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(\"Duplicate key.\", t4.get$span(), \"second key\", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), \"first key\"], type$.legacy_FileSpan, type$.legacy_String), this._evaluate$_stackTrace$1(t4.get$span())));\n        map.$indexSet(0, keyValue, valueValue);\n        keyNodes.$indexSet(0, keyValue, t4);\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(map, t1, t1));\n    },\n    visitFunctionExpression$1: function(node) {\n      var oldInFunction, result, _this = this, t1 = {},\n        t2 = node.name,\n        plainName = t2.get$asPlain();\n      t1.$function = null;\n      if ((plainName != null ? t1.$function = _this._addExceptionSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure(_this, node, plainName)) : null) == null) {\n        if (node.namespace != null)\n          throw H.wrapException(_this._evaluate$_exception$2(\"Undefined function.\", node.span));\n        t1.$function = new L.PlainCssCallable(_this._performInterpolation$1(t2));\n      }\n      oldInFunction = _this._inFunction;\n      _this._inFunction = true;\n      result = _this._addErrorSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure0(t1, _this, node));\n      _this._inFunction = oldInFunction;\n      return result;\n    },\n    _getFunction$2$namespace: function($name, namespace) {\n      var local = this._evaluate$_environment.getFunction$2$namespace($name, namespace);\n      if (local != null || namespace != null)\n        return local;\n      return this._builtInFunctions.$index(0, $name);\n    },\n    _runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {\n      var evaluated = this._evaluateArguments$1($arguments),\n        t1 = callable.declaration.name,\n        $name = t1 == null ? \"@content\" : t1 + \"()\";\n      return this._withStackFrame$3($name, nodeWithSpan, new R._EvaluateVisitor__runUserDefinedCallable_closure(this, callable, evaluated, nodeWithSpan, run));\n    },\n    _runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {\n      var result, t1, t2, t3, first, _i, argument, rest, _this = this;\n      if (callable instanceof Q.BuiltInCallable) {\n        result = _this._runBuiltInCallable$3($arguments, callable, nodeWithSpan);\n        if (result == null)\n          throw H.wrapException(_this._evaluate$_exception$2(string$.Custom, nodeWithSpan.get$span()));\n        return result.withoutSlash$0();\n      } else if (type$.legacy_UserDefinedCallable_legacy_Environment._is(callable))\n        return _this._runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new R._EvaluateVisitor__runFunctionCallable_closure(_this, callable)).withoutSlash$0();\n      else if (callable instanceof L.PlainCssCallable) {\n        t1 = $arguments.named;\n        if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)\n          throw H.wrapException(_this._evaluate$_exception$2(string$.Plain_, nodeWithSpan.get$span()));\n        t1 = H.S(callable.name) + \"(\";\n        for (t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0; _i < t3; ++_i) {\n          argument = t2[_i];\n          if (first)\n            first = false;\n          else\n            t1 += \", \";\n          t1 += H.S(_this._evaluate$_serialize$3$quote(argument.accept$1(_this), argument, true));\n        }\n        t2 = $arguments.rest;\n        rest = t2 == null ? null : t2.accept$1(_this);\n        if (rest != null) {\n          if (!first)\n            t1 += \", \";\n          t2 = t1 + H.S(_this._evaluate$_serialize$2(rest, t2));\n          t1 = t2;\n        }\n        t1 += H.Primitives_stringFromCharCode(41);\n        return new D.SassString(t1.charCodeAt(0) == 0 ? t1 : t1, false);\n      } else\n        return null;\n    },\n    _runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {\n      var callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, _this = this,\n        evaluated = _this._evaluateArguments$2$trackSpans($arguments, false),\n        oldCallableNode = _this._callableNode;\n      _this._callableNode = nodeWithSpan;\n      namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);\n      tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);\n      overload = tuple.item1;\n      callback = tuple.item2;\n      _this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__runBuiltInCallable_closure(overload, evaluated, namedSet));\n      declaredArguments = overload.$arguments;\n      for (i = evaluated.positional.length, t1 = declaredArguments.length; i < t1; ++i) {\n        argument = declaredArguments[i];\n        t2 = evaluated.positional;\n        t3 = evaluated.named.remove$1(0, argument.name);\n        if (t3 == null) {\n          t3 = argument.defaultValue;\n          t3 = t3 == null ? null : t3.accept$1(_this);\n        }\n        t2.push(t3);\n      }\n      if (overload.restArgument != null) {\n        if (evaluated.positional.length > t1) {\n          rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);\n          C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);\n        } else\n          rest = C.List_empty5;\n        t1 = evaluated.named;\n        argumentList = D.SassArgumentList$(rest, t1, evaluated.separator === C.ListSeparator_undecided ? C.ListSeparator_comma : evaluated.separator);\n        evaluated.positional.push(argumentList);\n      } else\n        argumentList = null;\n      result = null;\n      try {\n        result = callback.call$1(evaluated.positional);\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException._is(t1))\n          throw exception;\n        else if (t1 instanceof E.MultiSpanSassScriptException) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, _this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.MultiSpanSassException) {\n          error0 = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, _this._evaluate$_stackTrace$1(error0.get$span())));\n        } else {\n          error1 = t1;\n          message = null;\n          try {\n            message = H._asStringS(J.get$message$x(error1));\n          } catch (exception) {\n            H.unwrapException(exception);\n            message0 = J.toString$0$(error1);\n            message = message0;\n          }\n          throw H.wrapException(_this._evaluate$_exception$2(message, nodeWithSpan.get$span()));\n        }\n      }\n      _this._callableNode = oldCallableNode;\n      if (argumentList == null)\n        return result;\n      t1 = evaluated.named;\n      if (t1.get$isEmpty(t1))\n        return result;\n      if (argumentList._wereKeywordsAccessed)\n        return result;\n      t1 = evaluated.named;\n      t1 = t1.get$keys(t1);\n      t1 = \"No \" + B.pluralize(\"argument\", t1.get$length(t1), null) + \" named \";\n      t2 = evaluated.named;\n      throw H.wrapException(E.MultiSpanSassRuntimeException$(t1 + H.S(B.toSentence(t2.get$keys(t2).map$1$1(0, new R._EvaluateVisitor__runBuiltInCallable_closure0(), type$.legacy_Object), \"or\")) + \".\", nodeWithSpan.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n    },\n    _evaluateArguments$2$trackSpans: function($arguments, trackSpans) {\n      var t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, _this = this, _null = null;\n      if (trackSpans == null)\n        trackSpans = _this._sourceMap;\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value);\n      for (t2 = $arguments.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i].accept$1(_this));\n      t4 = type$.legacy_String;\n      t5 = type$.legacy_Value;\n      t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n      for (t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8); t8.moveNext$0();) {\n        t9 = t8.get$current(t8);\n        t6.$indexSet(0, t9.key, t9.value.accept$1(_this));\n      }\n      if (trackSpans) {\n        t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode);\n        for (_i = 0; _i < t3; ++_i)\n          t8.push(_this._expressionNode$1(t2[_i]));\n        positionalNodes = t8;\n      } else\n        positionalNodes = _null;\n      if (trackSpans) {\n        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n        for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n          t7 = t3.get$current(t3);\n          t2.$indexSet(0, t7.key, _this._expressionNode$1(t7.value));\n        }\n        namedNodes = t2;\n      } else\n        namedNodes = _null;\n      t2 = $arguments.rest;\n      if (t2 == null)\n        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided);\n      rest = t2.accept$1(_this);\n      restNodeForSpan = trackSpans ? _this._expressionNode$1(t2) : _null;\n      if (rest instanceof A.SassMap) {\n        _this._addRestMap$1$3(t6, rest, t2, t5);\n        if (namedNodes != null) {\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n          for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString; t3.moveNext$0();)\n            t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);\n          namedNodes.addAll$1(0, t2);\n        }\n        separator = C.ListSeparator_undecided;\n      } else if (rest instanceof D.SassList) {\n        t2 = rest._list$_contents;\n        C.JSArray_methods.addAll$1(t1, t2);\n        if (positionalNodes != null)\n          C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode));\n        separator = rest.separator;\n        if (rest instanceof D.SassArgumentList) {\n          rest._wereKeywordsAccessed = true;\n          rest._keywords.forEach$1(0, new R._EvaluateVisitor__evaluateArguments_closure(t6, namedNodes, restNodeForSpan));\n        }\n      } else {\n        t1.push(rest);\n        if (positionalNodes != null)\n          positionalNodes.push(restNodeForSpan);\n        separator = C.ListSeparator_undecided;\n      }\n      t2 = $arguments.keywordRest;\n      if (t2 == null)\n        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, separator);\n      keywordRest = t2.accept$1(_this);\n      keywordRestNodeForSpan = trackSpans ? _this._expressionNode$1(t2) : _null;\n      if (keywordRest instanceof A.SassMap) {\n        _this._addRestMap$1$3(t6, keywordRest, t2, t5);\n        if (namedNodes != null) {\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode);\n          for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString; t3.moveNext$0();)\n            t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);\n          namedNodes.addAll$1(0, t2);\n        }\n        return new R._ArgumentResults(t1, positionalNodes, t6, namedNodes, separator);\n      } else\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", t2.get$span()));\n    },\n    _evaluateArguments$1: function($arguments) {\n      return this._evaluateArguments$2$trackSpans($arguments, null);\n    },\n    _evaluateMacroArguments$1: function(invocation) {\n      var t3, positional, named, rest, keywordRest, _this = this,\n        t1 = invocation.$arguments,\n        t2 = t1.rest;\n      if (t2 == null)\n        return new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n      t3 = t1.positional;\n      positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1(\"JSArray<1>\"));\n      t3 = type$.legacy_Expression;\n      named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);\n      rest = t2.accept$1(_this);\n      if (rest instanceof A.SassMap)\n        _this._addRestMap$1$4(named, rest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure(), t3);\n      else if (rest instanceof D.SassList) {\n        t2 = rest._list$_contents;\n        C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new R._EvaluateVisitor__evaluateMacroArguments_closure0(), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Expression*>\")));\n        if (rest instanceof D.SassArgumentList) {\n          rest._wereKeywordsAccessed = true;\n          rest._keywords.forEach$1(0, new R._EvaluateVisitor__evaluateMacroArguments_closure1(named));\n        }\n      } else\n        positional.push(new F.ValueExpression(rest, null));\n      t1 = t1.keywordRest;\n      if (t1 == null)\n        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n      keywordRest = t1.accept$1(_this);\n      if (keywordRest instanceof A.SassMap) {\n        _this._addRestMap$1$4(named, keywordRest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure2(), t3);\n        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression);\n      } else\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", invocation.span));\n    },\n    _addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {\n      var t1 = {};\n      t1.convert = convert;\n      if (convert == null)\n        t1.convert = new R._EvaluateVisitor__addRestMap_closure($T);\n      map.contents.forEach$1(0, new R._EvaluateVisitor__addRestMap_closure0(t1, this, values, map, nodeWithSpan));\n    },\n    _addRestMap$1$3: function(values, map, nodeWithSpan, $T) {\n      return this._addRestMap$1$4(values, map, nodeWithSpan, null, $T);\n    },\n    _verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {\n      return this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__verifyArguments_closure($arguments, positional, named));\n    },\n    visitSelectorExpression$1: function(node) {\n      var t1 = this._styleRule;\n      if (t1 == null)\n        return C.C_SassNull0;\n      return t1.originalSelector.get$asSassList();\n    },\n    visitStringExpression$1: function(node) {\n      var t1 = node.text.contents;\n      return new D.SassString(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitStringExpression_closure(this), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0), node.hasQuotes);\n    },\n    visitCssAtRule$1: function(node) {\n      var wasInKeyframes, wasInUnknownAtRule, t1, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.At_rul, node.span));\n      if (node.isChildless) {\n        _this._evaluate$_parent.addChild$1(U.ModifiableCssAtRule$(node.name, node.span, true, node.value));\n        return null;\n      }\n      wasInKeyframes = _this._inKeyframes;\n      wasInUnknownAtRule = _this._inUnknownAtRule;\n      t1 = node.name;\n      if (B.unvendor(t1.get$value(t1)) === \"keyframes\")\n        _this._inKeyframes = true;\n      else\n        _this._inUnknownAtRule = true;\n      _this._withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$(t1, node.span, false, node.value), new R._EvaluateVisitor_visitCssAtRule_closure(_this, node), false, new R._EvaluateVisitor_visitCssAtRule_closure0(), type$.legacy_ModifiableCssAtRule, type$.Null);\n      _this._inUnknownAtRule = wasInUnknownAtRule;\n      _this._inKeyframes = wasInKeyframes;\n    },\n    visitCssComment$1: function(node) {\n      var _this = this,\n        t1 = _this._evaluate$_parent,\n        t2 = _this._root;\n      if (t1 == t2 && _this._endOfImports === J.get$length$asx(t2.children._collection$_source))\n        _this._endOfImports = _this._endOfImports + 1;\n      _this._evaluate$_parent.addChild$1(new R.ModifiableCssComment(node.text, node.span));\n    },\n    visitCssDeclaration$1: function(node) {\n      var t1 = node.name;\n      this._evaluate$_parent.addChild$1(L.ModifiableCssDeclaration$(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), \"--\"), node.valueSpanForMap));\n    },\n    visitCssImport$1: function(node) {\n      var _this = this,\n        modifiableNode = F.ModifiableCssImport$(node.url, node.span, node.media, node.supports),\n        t1 = _this._evaluate$_parent,\n        t2 = _this._root;\n      if (t1 != t2)\n        t1.addChild$1(modifiableNode);\n      else if (_this._endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n        _this._root.addChild$1(modifiableNode);\n        _this._endOfImports = _this._endOfImports + 1;\n      } else {\n        t1 = _this._outOfOrderImports;\n        (t1 == null ? _this._outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t1).push(modifiableNode);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      this._withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$(node.selector, node.span), new R._EvaluateVisitor_visitCssKeyframeBlock_closure(this, node), false, new R._EvaluateVisitor_visitCssKeyframeBlock_closure0(), type$.legacy_ModifiableCssKeyframeBlock, type$.Null);\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1, mergedQueries, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Media_, node.span));\n      t1 = _this._mediaQueries;\n      mergedQueries = t1 == null ? null : _this._mergeMediaQueries$2(t1, node.queries);\n      t1 = mergedQueries == null;\n      if (!t1 && mergedQueries.length === 0)\n        return null;\n      t1 = t1 ? node.queries : mergedQueries;\n      _this._withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$(t1, node.span), new R._EvaluateVisitor_visitCssMediaRule_closure(_this, mergedQueries, node), false, new R._EvaluateVisitor_visitCssMediaRule_closure0(mergedQueries), type$.legacy_ModifiableCssMediaRule, type$.Null);\n    },\n    visitCssStyleRule$1: function(node) {\n      var t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule, _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Style_, node.span));\n      t1 = node.selector;\n      t2 = t1.value;\n      t3 = _this._styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !_this._atRootExcludingStyleRule);\n      rule = X.ModifiableCssStyleRule$(_this._extender.addSelector$3(originalSelector, t1.span, _this._mediaQueries), node.span, originalSelector);\n      oldAtRootExcludingStyleRule = _this._atRootExcludingStyleRule;\n      _this._atRootExcludingStyleRule = false;\n      _this._withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitCssStyleRule_closure(_this, rule, node), false, new R._EvaluateVisitor_visitCssStyleRule_closure0(), type$.legacy_ModifiableCssStyleRule, type$.Null);\n      _this._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      if (!(_this._styleRule != null && !oldAtRootExcludingStyleRule)) {\n        t1 = _this._evaluate$_parent.children;\n        t1 = !t1.get$isEmpty(t1);\n      } else\n        t1 = false;\n      if (t1) {\n        t1 = _this._evaluate$_parent.children;\n        t1.get$last(t1).isGroupEnd = true;\n      }\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1;\n      for (t1 = J.get$iterator$ax(node.get$children(node)); t1.moveNext$0();)\n        t1.get$current(t1).accept$1(this);\n    },\n    visitCssSupportsRule$1: function(node) {\n      var _this = this;\n      if (_this._declarationName != null)\n        throw H.wrapException(_this._evaluate$_exception$2(string$.Suppor, node.span));\n      _this._withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$(node.condition, node.span), new R._EvaluateVisitor_visitCssSupportsRule_closure(_this, node), false, new R._EvaluateVisitor_visitCssSupportsRule_closure0(), type$.legacy_ModifiableCssSupportsRule, type$.Null);\n    },\n    _handleReturn$1$2: function(list, callback) {\n      var t1, _i, result;\n      for (t1 = list.length, _i = 0; _i < list.length; list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i) {\n        result = callback.call$1(list[_i]);\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    _handleReturn$2: function(list, callback) {\n      return this._handleReturn$1$2(list, callback, type$.dynamic);\n    },\n    _withEnvironment$1$2: function(environment, callback) {\n      var result,\n        oldEnvironment = this._evaluate$_environment;\n      this._evaluate$_environment = environment;\n      result = callback.call$0();\n      this._evaluate$_environment = oldEnvironment;\n      return result;\n    },\n    _withEnvironment$2: function(environment, callback) {\n      return this._withEnvironment$1$2(environment, callback, type$.dynamic);\n    },\n    _interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {\n      var result = this._performInterpolation$2$warnForColor(interpolation, warnForColor),\n        t1 = trim ? B.trimAscii(result, true) : result;\n      return new F.CssValue(t1, interpolation.span, type$.CssValue_legacy_String);\n    },\n    _interpolationToValue$1: function(interpolation) {\n      return this._interpolationToValue$3$trim$warnForColor(interpolation, false, false);\n    },\n    _interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {\n      return this._interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);\n    },\n    _performInterpolation$2$warnForColor: function(interpolation, warnForColor) {\n      var t1 = interpolation.contents;\n      return new H.MappedListIterable(t1, new R._EvaluateVisitor__performInterpolation_closure(this, warnForColor), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    _performInterpolation$1: function(interpolation) {\n      return this._performInterpolation$2$warnForColor(interpolation, false);\n    },\n    _evaluate$_serialize$3$quote: function(value, nodeWithSpan, quote) {\n      return this._addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__serialize_closure(value, quote));\n    },\n    _evaluate$_serialize$2: function(value, nodeWithSpan) {\n      return this._evaluate$_serialize$3$quote(value, nodeWithSpan, true);\n    },\n    _expressionNode$1: function(expression) {\n      var t1;\n      if (!this._sourceMap)\n        return null;\n      if (expression instanceof S.VariableExpression) {\n        t1 = this._evaluate$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);\n        return t1 == null ? expression : t1;\n      } else\n        return expression;\n    },\n    _withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {\n      var oldParent, result, _this = this;\n      _this._addChild$2$through(node, through);\n      oldParent = _this._evaluate$_parent;\n      _this._evaluate$_parent = node;\n      result = _this._evaluate$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1(\"0*\"));\n      _this._evaluate$_parent = oldParent;\n      return result;\n    },\n    _withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {\n      return this._withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);\n    },\n    _withParent$2$2: function(node, callback, $S, $T) {\n      return this._withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);\n    },\n    _addChild$2$through: function(node, through) {\n      var grandparent,\n        $parent = this._evaluate$_parent;\n      if (through != null) {\n        for (; through.call$1($parent);)\n          $parent = $parent._parent;\n        if ($parent.get$hasFollowingSibling()) {\n          grandparent = $parent._parent;\n          $parent = $parent.copyWithoutChildren$0();\n          grandparent.addChild$1($parent);\n        }\n      }\n      $parent.addChild$1(node);\n    },\n    _addChild$1: function(node) {\n      return this._addChild$2$through(node, null);\n    },\n    _withStyleRule$1$2: function(rule, callback) {\n      var result,\n        oldRule = this._styleRule;\n      this._styleRule = rule;\n      result = callback.call$0();\n      this._styleRule = oldRule;\n      return result;\n    },\n    _withStyleRule$2: function(rule, callback) {\n      return this._withStyleRule$1$2(rule, callback, type$.dynamic);\n    },\n    _withMediaQueries$1$2: function(queries, callback) {\n      var result,\n        oldMediaQueries = this._mediaQueries;\n      this._mediaQueries = queries;\n      result = callback.call$0();\n      this._mediaQueries = oldMediaQueries;\n      return result;\n    },\n    _withMediaQueries$2: function(queries, callback) {\n      return this._withMediaQueries$1$2(queries, callback, type$.dynamic);\n    },\n    _withStackFrame$1$3: function(member, nodeWithSpan, callback) {\n      var oldMember, result, _this = this,\n        t1 = _this._stack;\n      t1.push(new S.Tuple2(_this._member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode));\n      oldMember = _this._member;\n      _this._member = member;\n      result = callback.call$0();\n      _this._member = oldMember;\n      t1.pop();\n      return result;\n    },\n    _withStackFrame$3: function(member, nodeWithSpan, callback) {\n      return this._withStackFrame$1$3(member, nodeWithSpan, callback, type$.dynamic);\n    },\n    _stackFrame$2: function(member, span) {\n      var url = span.file.url;\n      return B.frameForSpan(span, member, url != null && this._evaluate$_importCache != null ? this._evaluate$_importCache.humanize$1(url) : url);\n    },\n    _evaluate$_stackTrace$1: function(span) {\n      var t2, cur, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      for (t2 = _this._stack, t2 = new H.MappedListIterable(t2, new R._EvaluateVisitor__stackTrace_closure(_this), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Frame*>\")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      if (span != null)\n        t1.push(_this._stackFrame$2(_this._member, span));\n      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    _evaluate$_stackTrace$0: function() {\n      return this._evaluate$_stackTrace$1(null);\n    },\n    _warn$3$deprecation: function(message, span, deprecation) {\n      return this._evaluate$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._evaluate$_stackTrace$1(span));\n    },\n    _warn$2: function(message, span) {\n      return this._warn$3$deprecation(message, span, false);\n    },\n    _evaluate$_exception$2: function(message, span) {\n      var t1 = span == null ? C.JSArray_methods.get$last(this._stack).item2.get$span() : span;\n      return new E.SassRuntimeException(this._evaluate$_stackTrace$1(span), message, t1);\n    },\n    _evaluate$_exception$1: function(message) {\n      return this._evaluate$_exception$2(message, null);\n    },\n    _multiSpanException$3: function(message, primaryLabel, secondaryLabels) {\n      var t1 = C.JSArray_methods.get$last(this._stack).item2.get$span();\n      return new E.MultiSpanSassRuntimeException(this._evaluate$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);\n    },\n    _adjustParseError$1$2: function(nodeWithSpan, callback) {\n      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException) {\n          error = t1;\n          t1 = error;\n          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);\n          span = nodeWithSpan.get$span();\n          t1 = span;\n          t2 = span;\n          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);\n          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);\n          t1 = span;\n          t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n          t3 = error;\n          t3 = G.SourceSpanException.prototype.get$span.call(t3);\n          t3 = Y.FileLocation$_(t3.file, t3._file$_start);\n          t4 = span;\n          t4 = Y.FileLocation$_(t4.file, t4._file$_start);\n          t5 = error;\n          t5 = G.SourceSpanException.prototype.get$span.call(t5);\n          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);\n          throw H.wrapException(this._evaluate$_exception$2(error._span_exception$_message, syntheticSpan));\n        } else\n          throw exception;\n      }\n    },\n    _adjustParseError$2: function(nodeWithSpan, callback) {\n      return this._adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _addExceptionSpan$1$2: function(nodeWithSpan, callback) {\n      var error, error0, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.MultiSpanSassScriptException) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._evaluate$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.SassScriptException) {\n          error0 = t1;\n          throw H.wrapException(this._evaluate$_exception$2(error0.message, nodeWithSpan.get$span()));\n        } else\n          throw exception;\n      }\n    },\n    _addExceptionSpan$2: function(nodeWithSpan, callback) {\n      return this._addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _addErrorSpan$1$2: function(nodeWithSpan, callback) {\n      var error, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException._is(t1)) {\n          error = t1;\n          t1 = error.get$span();\n          if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), \"@error\"))\n            throw exception;\n          throw H.wrapException(E.SassRuntimeException$(error._span_exception$_message, nodeWithSpan.get$span(), this._evaluate$_stackTrace$0()));\n        } else\n          throw exception;\n      }\n    },\n    _addErrorSpan$2: function(nodeWithSpan, callback) {\n      return this._addErrorSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    }\n  };\n  R._EvaluateVisitor_closure.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._evaluate$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  R._EvaluateVisitor_closure0.prototype = {\n    call$1: function($arguments) {\n      var variable = J.$index$asx($arguments, 0).assertString$1(\"name\"),\n        t1 = this.$this._evaluate$_environment,\n        t2 = variable.text;\n      t2.toString;\n      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, \"_\", \"-\")) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  R._EvaluateVisitor_closure1.prototype = {\n    call$1: function($arguments) {\n      var module, t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this;\n      t2 = t1._evaluate$_environment;\n      t3 = variable.text;\n      t3.toString;\n      t4 = H.stringReplaceAllUnchecked(t3, \"_\", \"-\");\n      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  R._EvaluateVisitor_closure2.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._evaluate$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  R._EvaluateVisitor_closure3.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.$this._evaluate$_environment;\n      if (!t1._inMixin)\n        throw H.wrapException(E.SassScriptException$(string$.conten));\n      return t1._content != null ? C.SassBoolean_true0 : C.SassBoolean_false0;\n    },\n    $signature: 21\n  };\n  R._EvaluateVisitor_closure4.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._evaluate$_environment._environment$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString(t4.key, true), t4.value);\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 38\n  };\n  R._EvaluateVisitor_closure5.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._evaluate$_environment._environment$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString(t4.key, true), new F.SassFunction(t4.value));\n      }\n      return new A.SassMap(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 38\n  };\n  R._EvaluateVisitor_closure6.prototype = {\n    call$1: function($arguments) {\n      var module, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $name = t1.$index($arguments, 0).assertString$1(\"name\"),\n        css = t1.$index($arguments, 1).get$isTruthy();\n      t1 = t1.$index($arguments, 2).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      if (css && module != null)\n        throw H.wrapException(string$.x24css_a);\n      if (css)\n        callable = new L.PlainCssCallable($name.text);\n      else {\n        t1 = this.$this;\n        callable = t1._addExceptionSpan$2(t1._callableNode, new R._EvaluateVisitor__closure1(t1, $name, module));\n      }\n      if (callable != null)\n        return new F.SassFunction(callable);\n      throw H.wrapException(\"Function not found: \" + $name.toString$0(0));\n    },\n    $signature: 141\n  };\n  R._EvaluateVisitor__closure1.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this.name.text;\n      t1.toString;\n      t1 = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t2 = this.module;\n      t2 = t2 == null ? null : t2.text;\n      return this.$this._getFunction$2$namespace(t1, t2);\n    },\n    $signature: 120\n  };\n  R._EvaluateVisitor_closure7.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $function = t1.$index($arguments, 0),\n        args = type$.legacy_SassArgumentList._as(t1.$index($arguments, 1));\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression);\n      t2 = type$.legacy_String;\n      t3 = type$.legacy_Expression;\n      t4 = this.$this;\n      t5 = t4._callableNode.get$span();\n      t6 = t4._callableNode.get$span();\n      args._wereKeywordsAccessed = true;\n      t7 = args._keywords;\n      if (t7.get$isEmpty(t7))\n        t7 = null;\n      else {\n        t8 = type$.legacy_Value;\n        t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);\n        for (args._wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {\n          t10 = t7.get$current(t7);\n          t9.$indexSet(0, new D.SassString(t10.key, false), t10.value);\n        }\n        t7 = new F.ValueExpression(new A.SassMap(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._callableNode.get$span());\n      }\n      invocation = new X.ArgumentInvocation(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression(args, t6), t7, t5);\n      if ($function instanceof D.SassString) {\n        N.warn(string$.Passins + $function.toString$0(0) + \")) instead.\", true);\n        return t4.visitFunctionExpression$1(new F.FunctionExpression(null, X.Interpolation$(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._callableNode.get$span()), invocation, t4._callableNode.get$span()));\n      }\n      callable = $function.assertFunction$1(\"function\").callable;\n      if (type$.legacy_Callable._is(callable))\n        return t4._runFunctionCallable$3(invocation, callable, t4._callableNode);\n      else\n        throw H.wrapException(E.SassScriptException$(\"The function \" + H.S(callable.get$name(callable)) + string$.x20is_as));\n    },\n    $signature: 4\n  };\n  R._EvaluateVisitor_closure8.prototype = {\n    call$1: function($arguments) {\n      var withMap, values, configuration, t2, t3, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        url = P.Uri_parse(t1.$index($arguments, 0).assertString$1(\"url\").text);\n      t1 = t1.$index($arguments, 1).get$realNull();\n      t1 = t1 == null ? _null : t1.assertMap$1(\"with\");\n      withMap = t1 == null ? _null : t1.contents;\n      if (withMap != null) {\n        values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue);\n        t1 = this.$this;\n        withMap.forEach$1(0, new R._EvaluateVisitor__closure(values, t1._callableNode.get$span()));\n        configuration = new A.Configuration(values, t1._callableNode, false);\n      } else\n        configuration = C.Configuration_Map_empty_null_true;\n      t1 = this.$this;\n      t2 = t1._callableNode;\n      t3 = t2.get$span();\n      t3 = t3 == null ? _null : t3.file.url;\n      t1._loadModule$7$baseUrl$configuration$namesInErrors(url, \"load-css()\", t2, new R._EvaluateVisitor__closure0(t1), t3, configuration, true);\n      t1._assertConfigurationIsEmpty$2$nameInError(configuration, true);\n      return _null;\n    },\n    $signature: 104\n  };\n  R._EvaluateVisitor__closure.prototype = {\n    call$2: function(variable, value) {\n      var $name,\n        t1 = variable.assertString$1(\"with key\").text;\n      t1.toString;\n      $name = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t1 = this.values;\n      if (t1.containsKey$1($name))\n        throw H.wrapException(\"The variable $\" + $name + \" was configured twice.\");\n      t1.$indexSet(0, $name, new Z.ConfiguredValue(value, this.span, null));\n    },\n    $signature: 47\n  };\n  R._EvaluateVisitor__closure0.prototype = {\n    call$1: function(module) {\n      var t1 = this.$this;\n      return t1._combineCss$2$clone(module, true).accept$1(t1);\n    },\n    $signature: 155\n  };\n  R._EvaluateVisitor_run_closure.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.node,\n        t2 = t1.span,\n        url = t2 == null ? null : t2.file.url;\n      if (url != null)\n        _this.$this._activeModules.$indexSet(0, url, null);\n      t2 = _this.$this;\n      return new E.EvaluateResult(t2._combineCss$1(t2._execute$2(_this.importer, t1)));\n    },\n    $signature: 236\n  };\n  R._EvaluateVisitor_runExpression_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.expression;\n      return t1._withFakeStylesheet$3(this.importer, t2, new R._EvaluateVisitor_runExpression__closure(t1, t2));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_runExpression__closure.prototype = {\n    call$0: function() {\n      return this.expression.accept$1(this.$this);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_runStatement_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.statement;\n      return t1._withFakeStylesheet$3(this.importer, t2, new R._EvaluateVisitor_runStatement__closure(t1, t2));\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor_runStatement__closure.prototype = {\n    call$0: function() {\n      return this.statement.accept$1(this.$this);\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor__withWarnCallback_closure.prototype = {\n    call$2: function(message, deprecation) {\n      var t1 = this.$this,\n        t2 = t1._importSpan;\n      return t1._warn$3$deprecation(message, t2 == null ? t1._callableNode.get$span() : t2, deprecation);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 75\n  };\n  R._EvaluateVisitor__loadModule_closure.prototype = {\n    call$0: function() {\n      return this.callback.call$1(this.builtInModule);\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor__loadModule_closure0.prototype = {\n    call$0: function() {\n      var module, error, error0, error1, error2, message, previousLoad, exception, _this = this,\n        t1 = _this.$this,\n        t2 = _this.nodeWithSpan,\n        result = t1._loadStylesheet$3$baseUrl(J.toString$0$(_this.url), t2.get$span(), _this.baseUrl),\n        importer = result.item1,\n        stylesheet = result.item2,\n        canonicalUrl = stylesheet.span.file.url,\n        t3 = t1._activeModules;\n      if (t3.containsKey$1(canonicalUrl)) {\n        message = _this.namesInErrors ? \"Module loop: \" + H.S($.$get$context().prettyUri$1(canonicalUrl)) + \" is already being loaded.\" : string$.Module;\n        previousLoad = t3.$index(0, canonicalUrl);\n        throw H.wrapException(previousLoad == null ? t1._evaluate$_exception$1(message) : t1._multiSpanException$3(message, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      t3.$indexSet(0, canonicalUrl, t2);\n      module = null;\n      try {\n        module = t1._execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, _this.configuration, _this.namesInErrors, t2);\n      } finally {\n        t3.remove$1(0, canonicalUrl);\n      }\n      try {\n        _this.callback.call$1(module);\n      } catch (exception) {\n        t2 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException._is(t2))\n          throw exception;\n        else if (t2 instanceof E.MultiSpanSassException) {\n          error = t2;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._evaluate$_stackTrace$1(error.get$span())));\n        } else if (t2 instanceof E.SassException) {\n          error0 = t2;\n          throw H.wrapException(t1._evaluate$_exception$2(error0._span_exception$_message, error0.get$span()));\n        } else if (t2 instanceof E.MultiSpanSassScriptException) {\n          error1 = t2;\n          throw H.wrapException(t1._multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));\n        } else if (t2 instanceof E.SassScriptException) {\n          error2 = t2;\n          throw H.wrapException(t1._evaluate$_exception$1(error2.message));\n        } else\n          throw exception;\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__execute_closure.prototype = {\n    call$0: function() {\n      var t2, t3, t4, css, _this = this,\n        t1 = _this.$this,\n        oldImporter = t1._importer,\n        oldStylesheet = t1._stylesheet,\n        oldRoot = t1._root,\n        oldParent = t1._evaluate$_parent,\n        oldEndOfImports = t1._endOfImports,\n        oldOutOfOrderImports = t1._outOfOrderImports,\n        oldExtender = t1._extender,\n        oldStyleRule = t1._styleRule,\n        oldMediaQueries = t1._mediaQueries,\n        oldDeclarationName = t1._declarationName,\n        oldInUnknownAtRule = t1._inUnknownAtRule,\n        oldAtRootExcludingStyleRule = t1._atRootExcludingStyleRule,\n        oldInKeyframes = t1._inKeyframes,\n        oldConfiguration = t1._configuration;\n      t1._importer = _this.importer;\n      t2 = t1._stylesheet = _this.stylesheet;\n      t3 = t2.span;\n      t1._evaluate$_parent = t1._root = V.ModifiableCssStylesheet$(t3);\n      t1._endOfImports = 0;\n      t1._outOfOrderImports = null;\n      t1._extender = _this.extender;\n      t1._declarationName = t1._mediaQueries = t1._styleRule = null;\n      t1._inKeyframes = t1._atRootExcludingStyleRule = t1._inUnknownAtRule = false;\n      t4 = _this.configuration;\n      if (t4 != null)\n        t1._configuration = t4;\n      t1.visitStylesheet$1(t2);\n      css = t1._outOfOrderImports == null ? t1._root : new V.CssStylesheet(new P.UnmodifiableListView(t1._addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode), t3);\n      _this._box_0.css = css;\n      t1._importer = oldImporter;\n      t1._stylesheet = oldStylesheet;\n      t1._root = oldRoot;\n      t1._evaluate$_parent = oldParent;\n      t1._endOfImports = oldEndOfImports;\n      t1._outOfOrderImports = oldOutOfOrderImports;\n      t1._extender = oldExtender;\n      t1._styleRule = oldStyleRule;\n      t1._mediaQueries = oldMediaQueries;\n      t1._declarationName = oldDeclarationName;\n      t1._inUnknownAtRule = oldInUnknownAtRule;\n      t1._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      t1._inKeyframes = oldInKeyframes;\n      t1._configuration = oldConfiguration;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__combineCss_closure.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 115\n  };\n  R._EvaluateVisitor__combineCss_closure0.prototype = {\n    call$1: function(target) {\n      return !this.selectors.contains$1(0, target);\n    },\n    $signature: 19\n  };\n  R._EvaluateVisitor__combineCss_closure1.prototype = {\n    call$1: function(module) {\n      return module.cloneCss$0();\n    },\n    $signature: 174\n  };\n  R._EvaluateVisitor__extendModules_closure.prototype = {\n    call$1: function(target) {\n      return !this.originalSelectors.contains$1(0, target);\n    },\n    $signature: 19\n  };\n  R._EvaluateVisitor__extendModules_closure0.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender);\n    },\n    $signature: 139\n  };\n  R._EvaluateVisitor__topologicalModules_visitModule.prototype = {\n    call$1: function(module) {\n      var t1, t2, t3, _i, upstream;\n      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        upstream = t1[_i];\n        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))\n          this.call$1(upstream);\n      }\n      this.sorted.addFirst$1(module);\n    },\n    $signature: 155\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure.prototype = {\n    call$0: function() {\n      return V.AtRootQueryParser$(this.resolved, this.$this._evaluate$_logger, null).parse$0();\n    },\n    $signature: 86\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure0.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        oldParent = t1._evaluate$_parent;\n      t1._evaluate$_parent = this.newParent;\n      t1._evaluate$_environment.scope$1$2$when(callback, this.node.hasDeclarations, type$.void);\n      t1._evaluate$_parent = oldParent;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure0.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        oldAtRootExcludingStyleRule = t1._atRootExcludingStyleRule;\n      t1._atRootExcludingStyleRule = true;\n      this.innerScope.call$1(callback);\n      t1._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure1.prototype = {\n    call$1: function(callback) {\n      return this.$this._withMediaQueries$2(null, new R._EvaluateVisitor__scopeForAtRoot__closure(this.innerScope, callback));\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot__closure.prototype = {\n    call$0: function() {\n      return this.innerScope.call$1(this.callback);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure2.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        wasInKeyframes = t1._inKeyframes;\n      t1._inKeyframes = false;\n      this.innerScope.call$1(callback);\n      t1._inKeyframes = wasInKeyframes;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure3.prototype = {\n    call$1: function($parent) {\n      return type$.legacy_CssAtRule._is($parent);\n    },\n    $signature: 135\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure4.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        wasInUnknownAtRule = t1._inUnknownAtRule;\n      t1._inUnknownAtRule = false;\n      this.innerScope.call$1(callback);\n      t1._inUnknownAtRule = wasInUnknownAtRule;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor_visitContentRule_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.content.declaration.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitDeclaration_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitEachRule_closure.prototype = {\n    call$1: function(value) {\n      return this.$this._evaluate$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);\n    },\n    $signature: 76\n  };\n  R._EvaluateVisitor_visitEachRule_closure0.prototype = {\n    call$1: function(value) {\n      return this.$this._setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);\n    },\n    $signature: 76\n  };\n  R._EvaluateVisitor_visitEachRule_closure1.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._handleReturn$2(_this.list.get$asList(), new R._EvaluateVisitor_visitEachRule__closure(t1, _this.setVariables, _this.node));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitEachRule__closure.prototype = {\n    call$1: function(element) {\n      var t1;\n      this.setVariables.call$1(element);\n      t1 = this.$this;\n      return t1._handleReturn$2(this.node.children, new R._EvaluateVisitor_visitEachRule___closure(t1));\n    },\n    $signature: 64\n  };\n  R._EvaluateVisitor_visitEachRule___closure.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 69\n  };\n  R._EvaluateVisitor_visitExtendRule_closure.prototype = {\n    call$0: function() {\n      return D.SelectorList_SelectorList$parse(B.trimAscii(this.targetText.value, true), false, true, this.$this._evaluate$_logger);\n    },\n    $signature: 40\n  };\n  R._EvaluateVisitor_visitAtRule_closure.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._styleRule;\n      if (!(t2 != null && !t1._atRootExcludingStyleRule) || t1._inKeyframes)\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitAtRule__closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRule__closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitForRule_closure.prototype = {\n    call$0: function() {\n      return this.node.from.accept$1(this.$this).assertNumber$0();\n    },\n    $signature: 185\n  };\n  R._EvaluateVisitor_visitForRule_closure0.prototype = {\n    call$0: function() {\n      return this.node.to.accept$1(this.$this).assertNumber$0();\n    },\n    $signature: 185\n  };\n  R._EvaluateVisitor_visitForRule_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.toNumber,\n        t2 = t1.numeratorUnits;\n      t1 = t1.denominatorUnits;\n      return T.SassNumber$withUnits(this.fromNumber.valueInUnits$2(t2, t1), t1, t2).assertInt$0();\n    },\n    $signature: 11\n  };\n  R._EvaluateVisitor_visitForRule_closure2.prototype = {\n    call$0: function() {\n      return this.toNumber.assertInt$0();\n    },\n    $signature: 11\n  };\n  R._EvaluateVisitor_visitForRule_closure3.prototype = {\n    call$0: function() {\n      var i, t3, t4, t5, result, _this = this,\n        t1 = _this.$this,\n        t2 = _this.node,\n        nodeWithSpan = t1._expressionNode$1(t2.from);\n      for (i = _this.from, t3 = _this._box_0, t4 = _this.direction, t5 = t2.variable, t2 = t2.children; i !== t3.to; i += t4) {\n        t1._evaluate$_environment.setLocalVariable$3(t5, T.SassNumber$(i, null), nodeWithSpan);\n        result = t1._handleReturn$2(t2, new R._EvaluateVisitor_visitForRule__closure(t1));\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitForRule__closure.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 69\n  };\n  R._EvaluateVisitor_visitForwardRule_closure.prototype = {\n    call$1: function(module) {\n      this.$this._evaluate$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 123\n  };\n  R._EvaluateVisitor_visitForwardRule_closure0.prototype = {\n    call$1: function(module) {\n      this.$this._evaluate$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 123\n  };\n  R._EvaluateVisitor__assertConfigurationIsEmpty_closure.prototype = {\n    call$2: function($name, value) {\n      var t1 = this.only;\n      if (t1 != null && !t1.contains$1(0, $name))\n        return;\n      t1 = this.nameInError ? \"$\" + H.S($name) + string$.x20was_n : string$.This_v;\n      throw H.wrapException(this.$this._evaluate$_exception$2(t1, value.configurationSpan));\n    },\n    $signature: 130\n  };\n  R._EvaluateVisitor_visitIfRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      return t1._handleReturn$2(this._box_0.clause.children, new R._EvaluateVisitor_visitIfRule__closure(t1));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitIfRule__closure.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 69\n  };\n  R._EvaluateVisitor__visitDynamicImport_closure.prototype = {\n    call$0: function() {\n      var previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _null = null,\n        _s34_ = \"This file is already being loaded.\",\n        _box_0 = {},\n        t1 = this.$this,\n        t2 = this.$import,\n        result = t1._loadStylesheet$3$forImport(t2.url, t2.span, true),\n        importer = result.item1,\n        stylesheet = result.item2,\n        url = stylesheet.span.file.url,\n        t3 = t1._activeModules;\n      if (t3.containsKey$1(url)) {\n        previousLoad = t3.$index(0, url);\n        throw H.wrapException(previousLoad == null ? t1._evaluate$_exception$1(_s34_) : t1._multiSpanException$3(_s34_, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      t3.$indexSet(0, url, t2);\n      t2 = new P.UnmodifiableListView(stylesheet._uses, type$.UnmodifiableListView_legacy_UseRule);\n      if (t2.get$length(t2) === 0) {\n        t2 = new P.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_legacy_ForwardRule);\n        t2 = t2.get$length(t2) === 0;\n      } else\n        t2 = false;\n      if (t2) {\n        oldImporter = t1._importer;\n        oldStylesheet = t1._stylesheet;\n        t1._importer = importer;\n        t1._stylesheet = stylesheet;\n        t1.visitStylesheet$1(stylesheet);\n        t1._importer = oldImporter;\n        t1._stylesheet = oldStylesheet;\n        t3.remove$1(0, url);\n        return;\n      }\n      _box_0.children = null;\n      t2 = t1._evaluate$_environment;\n      t4 = type$.legacy_String;\n      t5 = type$.legacy_Module_legacy_Callable;\n      t6 = type$.legacy_AstNode;\n      t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable);\n      t8 = t2._variables;\n      t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));\n      t9 = t2._variableNodes;\n      if (t9 == null)\n        t9 = _null;\n      else\n        t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));\n      t10 = t2._functions;\n      t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));\n      t11 = t2._mixins;\n      t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));\n      environment = O.Environment$_(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), _null, _null, _null, t7, t8, t9, t10, t11, t2._content);\n      t1._withEnvironment$2(environment, new R._EvaluateVisitor__visitDynamicImport__closure(_box_0, t1, importer, stylesheet, environment));\n      module = O._EnvironmentModule__EnvironmentModule(environment, new V.CssStylesheet(new P.UnmodifiableListView(C.List_empty0, type$.UnmodifiableListView_legacy_CssNode), Y.SourceFile$decoded(C.List_empty1, \"<dummy module>\").span$1(0)), C.C_EmptyExtender, environment._forwardedModules);\n      t1._evaluate$_environment.importForwards$1(module);\n      if (module.transitivelyContainsCss)\n        t1._combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1);\n      visitor = new R._ImportedCssVisitor(t1);\n      for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)\n        t1.get$current(t1).accept$1(visitor);\n      t3.remove$1(0, url);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__visitDynamicImport__closure.prototype = {\n    call$0: function() {\n      var t2, t3, _this = this,\n        t1 = _this.$this,\n        oldImporter = t1._importer,\n        oldStylesheet = t1._stylesheet,\n        oldRoot = t1._root,\n        oldParent = t1._evaluate$_parent,\n        oldEndOfImports = t1._endOfImports,\n        oldOutOfOrderImports = t1._outOfOrderImports,\n        oldConfiguration = t1._configuration;\n      t1._importer = _this.importer;\n      t2 = t1._stylesheet = _this.stylesheet;\n      t1._evaluate$_parent = t1._root = V.ModifiableCssStylesheet$(t2.span);\n      t1._endOfImports = 0;\n      t1._outOfOrderImports = null;\n      t3 = new P.UnmodifiableListView(t2._forwards, type$.UnmodifiableListView_legacy_ForwardRule);\n      if (!t3.get$isEmpty(t3))\n        t1._configuration = _this.environment.toImplicitConfiguration$0();\n      t1.visitStylesheet$1(t2);\n      _this._box_0.children = t1._addOutOfOrderImports$0();\n      t1._importer = oldImporter;\n      t1._stylesheet = oldStylesheet;\n      t1._root = oldRoot;\n      t1._evaluate$_parent = oldParent;\n      t1._endOfImports = oldEndOfImports;\n      t1._outOfOrderImports = oldOutOfOrderImports;\n      t1._configuration = oldConfiguration;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate$_environment.getMixin$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 120\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure0.prototype = {\n    call$0: function() {\n      return this.node.get$spanWithoutContent();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 32\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure1.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = t1._evaluate$_environment,\n        oldContent = t2._content;\n      t2._content = _this.contentCallable;\n      new R._EvaluateVisitor_visitIncludeRule__closure(t1, _this.mixin, _this.nodeWithSpan).call$0();\n      t2._content = oldContent;\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule__closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._evaluate$_environment,\n        oldInMixin = t2._inMixin;\n      t2._inMixin = true;\n      new R._EvaluateVisitor_visitIncludeRule___closure(t1, this.mixin, this.nodeWithSpan).call$0();\n      t2._inMixin = oldInMixin;\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule___closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, _i;\n      for (t1 = this.mixin.declaration.children, t2 = t1.length, t3 = this.$this, t4 = this.nodeWithSpan, _i = 0; _i < t2; ++_i)\n        t3._addErrorSpan$2(t4, new R._EvaluateVisitor_visitIncludeRule____closure(t3, t1[_i]));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule____closure.prototype = {\n    call$0: function() {\n      return this.statement.accept$1(this.$this);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitMediaRule_closure.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.mergedQueries;\n      if (t2 == null)\n        t2 = _this.queries;\n      t1._withMediaQueries$2(t2, new R._EvaluateVisitor_visitMediaRule__closure(t1, _this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule__closure.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._styleRule;\n      if (!(t2 != null && !t1._atRootExcludingStyleRule))\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitMediaRule___closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule___closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule_closure0.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor__visitMediaQueries_closure.prototype = {\n    call$0: function() {\n      return F.MediaQueryParser$(this.resolved, this.$this._evaluate$_logger, null).parse$0();\n    },\n    $signature: 87\n  };\n  R._EvaluateVisitor_visitStyleRule_closure.prototype = {\n    call$0: function() {\n      return E.KeyframeSelectorParser$(this.selectorText.value, this.$this._evaluate$_logger).parse$0();\n    },\n    $signature: 42\n  };\n  R._EvaluateVisitor_visitStyleRule_closure0.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule_closure1.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitStyleRule_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = !t1._stylesheet.plainCss;\n      return D.SelectorList_SelectorList$parse(this.selectorText.value, t2, t2, t1._evaluate$_logger);\n    },\n    $signature: 40\n  };\n  R._EvaluateVisitor_visitStyleRule_closure3.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.parsedSelector,\n        t2 = this.$this,\n        t3 = t2._styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._atRootExcludingStyleRule);\n    },\n    $signature: 40\n  };\n  R._EvaluateVisitor_visitStyleRule_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._withStyleRule$2(this.rule, new R._EvaluateVisitor_visitStyleRule__closure(t1, this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule__closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule_closure5.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitSupportsRule_closure.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._styleRule;\n      if (!(t2 != null && !t1._atRootExcludingStyleRule))\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitSupportsRule__closure(t1, this.node), type$.legacy_ModifiableCssStyleRule, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitSupportsRule__closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitSupportsRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure.prototype = {\n    call$0: function() {\n      var t1 = this.override;\n      this.$this._evaluate$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      t1._evaluate$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitUseRule_closure.prototype = {\n    call$1: function(module) {\n      var t1 = this.node;\n      this.$this._evaluate$_environment.addModule$3$namespace(module, t1, t1.namespace);\n    },\n    $signature: 123\n  };\n  R._EvaluateVisitor_visitWarnRule_closure.prototype = {\n    call$0: function() {\n      return this.node.expression.accept$1(this.$this);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitWhileRule_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, result;\n      for (t1 = this.node, t2 = t1.condition, t3 = this.$this, t1 = t1.children; t2.accept$1(t3).get$isTruthy();) {\n        result = t3._handleReturn$2(t1, new R._EvaluateVisitor_visitWhileRule__closure(t3));\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitWhileRule__closure.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 69\n  };\n  R._EvaluateVisitor_visitBinaryOperationExpression_closure.prototype = {\n    call$0: function() {\n      var right, result,\n        t1 = this.node,\n        t2 = this.$this,\n        left = t1.left.accept$1(t2);\n      switch (t1.operator) {\n        case C.BinaryOperator_kjl:\n          right = t1.right.accept$1(t2);\n          left.toString;\n          t1 = N.serializeValue0(left, false, true) + \"=\";\n          right.toString;\n          return new D.SassString(t1 + N.serializeValue0(right, false, true), false);\n        case C.BinaryOperator_or_or_1:\n          return left.get$isTruthy() ? left : t1.right.accept$1(t2);\n        case C.BinaryOperator_and_and_2:\n          return left.get$isTruthy() ? t1.right.accept$1(t2) : left;\n        case C.BinaryOperator_YlX:\n          return J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n        case C.BinaryOperator_i5H:\n          return !J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true0 : C.SassBoolean_false0;\n        case C.BinaryOperator_AcR:\n          return left.greaterThan$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_1da:\n          return left.greaterThanOrEquals$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_8qt:\n          return left.lessThan$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_33h:\n          return left.lessThanOrEquals$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_AcR0:\n          return left.plus$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_iyO:\n          return left.minus$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_O1M:\n          return left.times$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_RTB:\n          right = t1.right.accept$1(t2);\n          result = left.dividedBy$1(right);\n          if (t1.allowsSlash && left instanceof T.SassNumber && right instanceof T.SassNumber)\n            return type$.legacy_SassNumber._as(result).withSlash$2(left, right);\n          else\n            return result;\n        case C.BinaryOperator_2ad:\n          return left.modulo$1(t1.right.accept$1(t2));\n        default:\n          return null;\n      }\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitVariableExpression_closure.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor_visitListExpression_closure.prototype = {\n    call$1: function(expression) {\n      return expression.accept$1(this.$this);\n    },\n    $signature: 241\n  };\n  R._EvaluateVisitor_visitFunctionExpression_closure.prototype = {\n    call$0: function() {\n      var t1 = this.node.namespace,\n        t2 = this.plainName;\n      if (t1 == null)\n        t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return this.$this._getFunction$2$namespace(t2, t1);\n    },\n    $signature: 120\n  };\n  R._EvaluateVisitor_visitFunctionExpression_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor__runUserDefinedCallable_closure.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.callable;\n      return t1._withEnvironment$2(t2.environment.closure$0(), new R._EvaluateVisitor__runUserDefinedCallable__closure(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor__runUserDefinedCallable__closure.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._evaluate$_environment.scope$1$1(new R._EvaluateVisitor__runUserDefinedCallable___closure(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value);\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor__runUserDefinedCallable___closure.prototype = {\n    call$0: function() {\n      var declaredArguments, minLength, t8, t9, i, t10, t11, t12, argument, value, t13, rest, argumentList, result, argumentWord, argumentNames, _this = this, _null = null,\n        t1 = _this.$this,\n        t2 = _this.evaluated,\n        t3 = t2.positional,\n        t4 = t3.length,\n        t5 = t2.named,\n        t6 = _this.callable.declaration.$arguments,\n        t7 = _this.nodeWithSpan;\n      t1._verifyArguments$4(t4, t5, t6, t7);\n      declaredArguments = t6.$arguments;\n      t4 = declaredArguments.length;\n      minLength = Math.min(t3.length, t4);\n      for (t8 = t1._sourceMap, t9 = t2.positionalNodes, i = 0; i < minLength; ++i) {\n        t10 = t1._evaluate$_environment;\n        t11 = declaredArguments[i].name;\n        t12 = t3[i].withoutSlash$0();\n        t10.setLocalVariable$3(t11, t12, t8 ? t9[i] : _null);\n      }\n      for (i = t3.length, t9 = t2.namedNodes; i < t4; ++i) {\n        argument = declaredArguments[i];\n        t10 = argument.name;\n        value = t5.remove$1(0, t10);\n        if (value == null)\n          value = argument.defaultValue.accept$1(t1);\n        t11 = t1._evaluate$_environment;\n        t12 = value.withoutSlash$0();\n        if (t8) {\n          t13 = t9.$index(0, t10);\n          if (t13 == null)\n            t13 = t1._expressionNode$1(argument.defaultValue);\n        } else\n          t13 = _null;\n        t11.setLocalVariable$3(t10, t12, t13);\n      }\n      t8 = t6.restArgument;\n      if (t8 != null) {\n        rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty5;\n        t2 = t2.separator;\n        argumentList = D.SassArgumentList$(rest, t5, t2 === C.ListSeparator_undecided ? C.ListSeparator_comma : t2);\n        t1._evaluate$_environment.setLocalVariable$3(t8, argumentList, t7);\n      } else\n        argumentList = _null;\n      result = _this.run.call$0();\n      if (argumentList == null)\n        return result;\n      if (t5.get$isEmpty(t5))\n        return result;\n      if (argumentList._wereKeywordsAccessed)\n        return result;\n      t2 = t5.get$keys(t5);\n      argumentWord = B.pluralize(\"argument\", t2.get$length(t2), _null);\n      t5 = t5.get$keys(t5);\n      argumentNames = B.toSentence(H.MappedIterable_MappedIterable(t5, new R._EvaluateVisitor__runUserDefinedCallable____closure(), H._instanceType(t5)._eval$1(\"Iterable.E\"), type$.legacy_Object), \"or\");\n      throw H.wrapException(E.MultiSpanSassRuntimeException$(\"No \" + argumentWord + \" named \" + H.S(argumentNames) + \".\", t7.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), t1._evaluate$_stackTrace$1(t7.get$span())));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor__runUserDefinedCallable____closure.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  R._EvaluateVisitor__runFunctionCallable_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, _i, $returnValue;\n      for (t1 = this.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = this.$this, _i = 0; _i < t3; ++_i) {\n        $returnValue = t2[_i].accept$1(t4);\n        if ($returnValue instanceof F.Value)\n          return $returnValue;\n      }\n      throw H.wrapException(t4._evaluate$_exception$2(\"Function finished without @return.\", t1.span));\n    },\n    $signature: 12\n  };\n  R._EvaluateVisitor__runBuiltInCallable_closure.prototype = {\n    call$0: function() {\n      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor__runBuiltInCallable_closure0.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  R._EvaluateVisitor__evaluateArguments_closure.prototype = {\n    call$2: function(key, value) {\n      var t1;\n      this.named.$indexSet(0, key, value);\n      t1 = this.namedNodes;\n      if (t1 != null)\n        t1.$indexSet(0, key, this.restNodeForSpan);\n    },\n    $signature: 80\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure0.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure1.prototype = {\n    call$2: function(key, value) {\n      this.named.$indexSet(0, key, new F.ValueExpression(value, null));\n    },\n    $signature: 80\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure2.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression(value, null);\n    },\n    $signature: 49\n  };\n  R._EvaluateVisitor__addRestMap_closure.prototype = {\n    call$1: function(value) {\n      return this.T._eval$1(\"0*\")._as(value);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(Value*)\");\n    }\n  };\n  R._EvaluateVisitor__addRestMap_closure0.prototype = {\n    call$2: function(key, value) {\n      var _this = this;\n      if (key instanceof D.SassString)\n        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));\n      else\n        throw H.wrapException(_this.$this._evaluate$_exception$2(string$.Variab_ + H.S(key) + \" is not a string in \" + _this.map.toString$0(0) + \".\", _this.nodeWithSpan.get$span()));\n    },\n    $signature: 47\n  };\n  R._EvaluateVisitor__verifyArguments_closure.prototype = {\n    call$0: function() {\n      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor_visitStringExpression_closure.prototype = {\n    call$1: function(value) {\n      var t1, result;\n      if (typeof value == \"string\")\n        return value;\n      type$.legacy_Expression._as(value);\n      t1 = this.$this;\n      result = value.accept$1(t1);\n      return result instanceof D.SassString ? result.text : t1._evaluate$_serialize$3$quote(result, value, false);\n    },\n    $signature: 44\n  };\n  R._EvaluateVisitor_visitCssAtRule_closure.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssAtRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitCssKeyframeBlock_closure.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssKeyframeBlock_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitCssMediaRule_closure.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.mergedQueries;\n      if (t2 == null)\n        t2 = _this.node.queries;\n      t1._withMediaQueries$2(t2, new R._EvaluateVisitor_visitCssMediaRule__closure(t1, _this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule__closure.prototype = {\n    call$0: function() {\n      var cur,\n        t1 = this.$this,\n        t2 = t1._styleRule;\n      if (!(t2 != null && !t1._atRootExcludingStyleRule))\n        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          cur.accept$1(t1);\n        }\n      else\n        t1._withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssMediaRule___closure(t1, this.node), false, type$.legacy_ModifiableCssStyleRule, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule___closure.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule_closure0.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitCssStyleRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._withStyleRule$2(this.rule, new R._EvaluateVisitor_visitCssStyleRule__closure(t1, this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssStyleRule__closure.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssStyleRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor_visitCssSupportsRule_closure.prototype = {\n    call$0: function() {\n      var cur,\n        t1 = this.$this,\n        t2 = t1._styleRule;\n      if (!(t2 != null && !t1._atRootExcludingStyleRule))\n        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          cur.accept$1(t1);\n        }\n      else\n        t1._withParent$2$2(X.ModifiableCssStyleRule$(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssSupportsRule__closure(t1, this.node), type$.legacy_ModifiableCssStyleRule, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssSupportsRule__closure.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssSupportsRule_closure0.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._EvaluateVisitor__performInterpolation_closure.prototype = {\n    call$1: function(value) {\n      var t1, result, t2, t3;\n      if (typeof value == \"string\")\n        return value;\n      type$.legacy_Expression._as(value);\n      t1 = this.$this;\n      result = value.accept$1(t1);\n      if (this.warnForColor && result instanceof K.SassColor && $.$get$namesByColor().containsKey$1(result)) {\n        t2 = X.Interpolation$(H.setRuntimeTypeInfo([\"\"], type$.JSArray_legacy_Object), null);\n        t3 = $.$get$namesByColor();\n        t1._warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whic + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression(C.BinaryOperator_AcR0, new D.StringExpression(t2, true), value, false).toString$0(0) + \"'.\", value.get$span());\n      }\n      return t1._evaluate$_serialize$3$quote(result, value, false);\n    },\n    $signature: 44\n  };\n  R._EvaluateVisitor__serialize_closure.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      t1.toString;\n      return N.serializeValue0(t1, false, this.quote);\n    },\n    $signature: 13\n  };\n  R._EvaluateVisitor__stackTrace_closure.prototype = {\n    call$1: function(tuple) {\n      return this.$this._stackFrame$2(tuple.item1, tuple.item2.get$span());\n    },\n    $signature: 126\n  };\n  R._ImportedCssVisitor.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless ? null : new R._ImportedCssVisitor_visitCssAtRule_closure();\n      this._visitor._addChild$2$through(node, t1);\n    },\n    visitCssComment$1: function(node) {\n      return this._visitor._addChild$1(node);\n    },\n    visitCssDeclaration$1: function(node) {\n    },\n    visitCssImport$1: function(node) {\n      var t1 = this._visitor,\n        t2 = t1._evaluate$_parent,\n        t3 = t1._root;\n      if (t2 != t3)\n        t1._addChild$1(node);\n      else if (t1._endOfImports === J.get$length$asx(t3.children._collection$_source)) {\n        t1._addChild$1(node);\n        t1._endOfImports = t1._endOfImports + 1;\n      } else {\n        t2 = t1._outOfOrderImports;\n        (t2 == null ? t1._outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport) : t2).push(node);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1 = this._visitor,\n        t2 = t1._mediaQueries;\n      t1._addChild$2$through(node, new R._ImportedCssVisitor_visitCssMediaRule_closure(t2 == null || t1._mergeMediaQueries$2(t2, node.queries) != null));\n    },\n    visitCssStyleRule$1: function(node) {\n      return this._visitor._addChild$2$through(node, new R._ImportedCssVisitor_visitCssStyleRule_closure());\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1, cur;\n      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(this);\n      }\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._visitor._addChild$2$through(node, new R._ImportedCssVisitor_visitCssSupportsRule_closure());\n    }\n  };\n  R._ImportedCssVisitor_visitCssAtRule_closure.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._ImportedCssVisitor_visitCssMediaRule_closure.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule._is(node))\n        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 6\n  };\n  R._ImportedCssVisitor_visitCssStyleRule_closure.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._ImportedCssVisitor_visitCssSupportsRule_closure.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule._is(node);\n    },\n    $signature: 6\n  };\n  R._ArgumentResults.prototype = {};\n  F._FindDependenciesVisitor.prototype = {\n    visitEachRule$1: function(node) {\n    },\n    visitForRule$1: function(node) {\n    },\n    visitIfRule$1: function(node) {\n    },\n    visitWhileRule$1: function(node) {\n    },\n    visitUseRule$1: function(node) {\n      this._usesAndForwards.push(node.url);\n    },\n    visitForwardRule$1: function(node) {\n      this._usesAndForwards.push(node.url);\n    },\n    visitImportRule$1: function(node) {\n      var t1, t2, t3, _i, $import;\n      for (t1 = node.imports, t2 = t1.length, t3 = this._imports, _i = 0; _i < t2; ++_i) {\n        $import = t1[_i];\n        if ($import instanceof B.DynamicImport)\n          t3.push(P.Uri_parse($import.url));\n      }\n    }\n  };\n  D.RecursiveStatementVisitor.prototype = {\n    visitAtRootRule$1: function(node) {\n      return this.visitChildren$1(node);\n    },\n    visitAtRule$1: function(node) {\n      return node.children == null ? null : this.visitChildren$1(node);\n    },\n    visitContentBlock$1: function(node) {\n      return null;\n    },\n    visitContentRule$1: function(node) {\n      this.visitArgumentInvocation$1(node.$arguments);\n      return null;\n    },\n    visitDebugRule$1: function(node) {\n      return null;\n    },\n    visitDeclaration$1: function(node) {\n      return node.children == null ? null : this.visitChildren$1(node);\n    },\n    visitErrorRule$1: function(node) {\n      return null;\n    },\n    visitExtendRule$1: function(node) {\n      return null;\n    },\n    visitFunctionRule$1: function(node) {\n      return null;\n    },\n    visitIncludeRule$1: function(node) {\n      this.visitArgumentInvocation$1(node.$arguments);\n      return null;\n    },\n    visitLoudComment$1: function(node) {\n      return null;\n    },\n    visitMediaRule$1: function(node) {\n      return this.visitChildren$1(node);\n    },\n    visitMixinRule$1: function(node) {\n      return null;\n    },\n    visitReturnRule$1: function(node) {\n      return null;\n    },\n    visitSilentComment$1: function(node) {\n      return null;\n    },\n    visitStyleRule$1: function(node) {\n      return this.visitChildren$1(node);\n    },\n    visitStylesheet$1: function(node) {\n      return this.visitChildren$1(node);\n    },\n    visitSupportsRule$1: function(node) {\n      return this.visitChildren$1(node);\n    },\n    visitVariableDeclaration$1: function(node) {\n      return null;\n    },\n    visitWarnRule$1: function(node) {\n      return null;\n    },\n    visitArgumentInvocation$1: function(invocation) {\n      var t1, _i;\n      for (t1 = invocation.positional.length, _i = 0; _i < t1; ++_i)\n        ;\n      for (t1 = invocation.named, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        t1.get$current(t1);\n    },\n    visitChildren$1: function(node) {\n      var t1;\n      for (t1 = node.children, t1 = (t1 && C.JSArray_methods).get$iterator(t1); t1.moveNext$0();)\n        t1.get$current(t1).accept$1(this);\n      return null;\n    }\n  };\n  N.serialize_closure.prototype = {\n    call$1: function(codeUnit) {\n      return codeUnit > 127;\n    },\n    $signature: 24\n  };\n  N._SerializeVisitor0.prototype = {\n    visitCssStylesheet$1: function(node) {\n      var t1, t2, t3, t4, previous, i, child, _this = this;\n      for (t1 = _this._style !== C.OutputStyle_compressed, t2 = type$.legacy_CssComment, t3 = type$.legacy_CssParentNode, t4 = _this._serialize$_buffer, previous = null, i = 0; i < J.get$length$asx(node.get$children(node)); ++i) {\n        child = J.$index$asx(node.get$children(node), i);\n        if (_this._isInvisible$1(child))\n          continue;\n        if (previous != null) {\n          if (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous))\n            t4.writeCharCode$1(59);\n          if (t1)\n            t4.write$1(0, \"\\n\");\n          if (previous.get$isGroupEnd())\n            if (t1)\n              t4.write$1(0, \"\\n\");\n        }\n        child.accept$1(_this);\n        previous = child;\n      }\n      if (previous != null)\n        t1 = (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous)) && t1;\n      else\n        t1 = false;\n      if (t1)\n        t4.writeCharCode$1(59);\n    },\n    visitCssComment$1: function(node) {\n      this._serialize$_buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssComment_closure(this, node));\n    },\n    visitCssAtRule$1: function(node) {\n      var t1, _this = this;\n      _this._writeIndentation$0();\n      t1 = _this._serialize$_buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssAtRule_closure(_this, node));\n      if (!node.isChildless) {\n        if (_this._style !== C.OutputStyle_compressed)\n          t1.writeCharCode$1(32);\n        _this._serialize$_visitChildren$1(node.children);\n      }\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1, _this = this;\n      _this._writeIndentation$0();\n      t1 = _this._serialize$_buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssMediaRule_closure(_this, node));\n      if (_this._style !== C.OutputStyle_compressed)\n        t1.writeCharCode$1(32);\n      _this._serialize$_visitChildren$1(node.children);\n    },\n    visitCssImport$1: function(node) {\n      this._writeIndentation$0();\n      this._serialize$_buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssImport_closure(this, node));\n    },\n    _writeImportUrl$1: function(url) {\n      var urlContents, maybeQuote, _this = this;\n      if (_this._style !== C.OutputStyle_compressed || J._codeUnitAt$1$s(url, 0) !== 117) {\n        _this._serialize$_buffer.write$1(0, url);\n        return;\n      }\n      urlContents = J.substring$2$s(url, 4, url.length - 1);\n      maybeQuote = C.JSString_methods._codeUnitAt$1(urlContents, 0);\n      if (maybeQuote === 39 || maybeQuote === 34)\n        _this._serialize$_buffer.write$1(0, urlContents);\n      else\n        _this._visitQuotedString$1(urlContents);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      var t1, _this = this;\n      _this._writeIndentation$0();\n      t1 = _this._serialize$_buffer;\n      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssKeyframeBlock_closure(_this, node));\n      if (_this._style !== C.OutputStyle_compressed)\n        t1.writeCharCode$1(32);\n      _this._serialize$_visitChildren$1(node.children);\n    },\n    _visitMediaQuery$1: function(query) {\n      var t2, t3, _this = this,\n        t1 = query.modifier;\n      if (t1 != null) {\n        t2 = _this._serialize$_buffer;\n        t2.write$1(0, t1);\n        t2.writeCharCode$1(32);\n      }\n      t1 = query.type;\n      if (t1 != null) {\n        t2 = _this._serialize$_buffer;\n        t2.write$1(0, t1);\n        if (query.features.length !== 0)\n          t2.write$1(0, \" and \");\n      }\n      t1 = query.features;\n      t2 = _this._style === C.OutputStyle_compressed ? \"and \" : \" and \";\n      t3 = _this._serialize$_buffer;\n      _this._writeBetween$3(t1, t2, t3.get$write(t3));\n    },\n    visitCssStyleRule$1: function(node) {\n      var t1, _this = this;\n      _this._writeIndentation$0();\n      t1 = _this._serialize$_buffer;\n      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssStyleRule_closure(_this, node));\n      if (_this._style !== C.OutputStyle_compressed)\n        t1.writeCharCode$1(32);\n      _this._serialize$_visitChildren$1(node.children);\n    },\n    visitCssSupportsRule$1: function(node) {\n      var t1, _this = this;\n      _this._writeIndentation$0();\n      t1 = _this._serialize$_buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssSupportsRule_closure(_this, node));\n      if (_this._style !== C.OutputStyle_compressed)\n        t1.writeCharCode$1(32);\n      _this._serialize$_visitChildren$1(node.children);\n    },\n    visitCssDeclaration$1: function(node) {\n      var error, error0, t1, t2, exception, _this = this;\n      _this._writeIndentation$0();\n      t1 = node.name;\n      _this._write$1(t1);\n      t2 = _this._serialize$_buffer;\n      t2.writeCharCode$1(58);\n      if (J.startsWith$1$s(t1.get$value(t1), \"--\") && node.parsedAsCustomProperty)\n        t2.forSpan$2(node.value.span, new N._SerializeVisitor_visitCssDeclaration_closure(_this, node));\n      else {\n        if (_this._style !== C.OutputStyle_compressed)\n          t2.writeCharCode$1(32);\n        try {\n          t2.forSpan$2(node.valueSpanForMap, new N._SerializeVisitor_visitCssDeclaration_closure0(_this, node));\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.MultiSpanSassScriptException) {\n            error = t1;\n            throw H.wrapException(E.MultiSpanSassException$(error.message, node.value.span, error.primaryLabel, error.secondarySpans));\n          } else if (t1 instanceof E.SassScriptException) {\n            error0 = t1;\n            throw H.wrapException(E.SassException$(error0.message, node.value.span));\n          } else\n            throw exception;\n        }\n      }\n    },\n    _writeFoldedValue$1: function(node) {\n      var t1, t2, next, t3,\n        scanner = X.StringScanner$(type$.legacy_SassString._as(node.value.value).text, null, null);\n      for (t1 = scanner.string.length, t2 = this._serialize$_buffer; scanner._string_scanner$_position !== t1;) {\n        next = scanner.readChar$0();\n        if (next !== 10) {\n          t2.writeCharCode$1(next);\n          continue;\n        }\n        t2.writeCharCode$1(32);\n        while (true) {\n          t3 = scanner.peekChar$0();\n          if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n            break;\n          scanner.readChar$0();\n        }\n      }\n    },\n    _writeReindentedValue$1: function(node) {\n      var _this = this,\n        t1 = node.value,\n        value = type$.legacy_SassString._as(t1.value).text,\n        minimumIndentation = _this._minimumIndentation$1(value);\n      if (minimumIndentation == null) {\n        _this._serialize$_buffer.write$1(0, value);\n        return;\n      } else if (minimumIndentation === -1) {\n        t1 = _this._serialize$_buffer;\n        t1.write$1(0, B.trimAsciiRight(value, true));\n        t1.writeCharCode$1(32);\n        return;\n      }\n      if (t1.span != null) {\n        t1 = node.name.get$span();\n        t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n        minimumIndentation = Math.min(minimumIndentation, t1.file.getColumn$1(t1.offset));\n      }\n      _this._writeWithIndent$2(value, minimumIndentation);\n    },\n    _minimumIndentation$1: function(text) {\n      var character, t2, min, next, min0,\n        scanner = Z.LineScanner$(text),\n        t1 = scanner.string.length;\n      while (true) {\n        if (scanner._string_scanner$_position !== t1) {\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          t2 = character !== 10;\n        } else\n          t2 = false;\n        if (!t2)\n          break;\n      }\n      if (scanner._string_scanner$_position === t1)\n        return scanner.peekChar$1(-1) === 10 ? -1 : null;\n      for (min = null; scanner._string_scanner$_position !== t1;) {\n        for (; scanner._string_scanner$_position !== t1;) {\n          next = scanner.peekChar$0();\n          if (next !== 32 && next !== 9)\n            break;\n          scanner._adjustLineAndColumn$1(scanner.super$StringScanner$readChar());\n        }\n        if (scanner._string_scanner$_position === t1 || scanner.scanChar$1(10))\n          continue;\n        min0 = scanner._line_scanner$_column;\n        min = min == null ? min0 : Math.min(min, min0);\n        while (true) {\n          if (scanner._string_scanner$_position !== t1) {\n            character = scanner.super$StringScanner$readChar();\n            scanner._adjustLineAndColumn$1(character);\n            t2 = character !== 10;\n          } else\n            t2 = false;\n          if (!t2)\n            break;\n        }\n      }\n      return min == null ? -1 : min;\n    },\n    _writeWithIndent$2: function(text, minimumIndentation) {\n      var t1, t2, t3, character, t4, lineStart, newlines, end,\n        scanner = Z.LineScanner$(text);\n      for (t1 = scanner.string, t2 = t1.length, t3 = this._serialize$_buffer; scanner._string_scanner$_position !== t2;) {\n        character = scanner.super$StringScanner$readChar();\n        scanner._adjustLineAndColumn$1(character);\n        if (character === 10)\n          break;\n        t3.writeCharCode$1(character);\n      }\n      for (t4 = J.getInterceptor$s(t1); true;) {\n        lineStart = scanner._string_scanner$_position;\n        for (newlines = 1; true;) {\n          if (scanner._string_scanner$_position === t2) {\n            t3.writeCharCode$1(32);\n            return;\n          }\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          if (character === 32 || character === 9)\n            continue;\n          if (character !== 10)\n            break;\n          lineStart = scanner._string_scanner$_position;\n          ++newlines;\n        }\n        this._writeTimes$2(10, newlines);\n        this._writeIndentation$0();\n        end = scanner._string_scanner$_position;\n        t3.write$1(0, t4.substring$2(t1, lineStart + minimumIndentation, end));\n        for (; true;) {\n          if (scanner._string_scanner$_position === t2)\n            return;\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          if (character === 10)\n            break;\n          t3.writeCharCode$1(character);\n        }\n      }\n    },\n    visitColor$1: function(value) {\n      var $name, hexLength, t2, t3, _this = this,\n        t1 = _this._style === C.OutputStyle_compressed;\n      if (t1 && Math.abs(value.alpha - 1) < $.$get$epsilon()) {\n        $name = $.$get$namesByColor().$index(0, value);\n        hexLength = _this._canUseShortHex$1(value) ? 4 : 7;\n        if ($name != null && $name.length <= hexLength)\n          _this._serialize$_buffer.write$1(0, $name);\n        else {\n          t1 = _this._serialize$_buffer;\n          if (_this._canUseShortHex$1(value)) {\n            t1.writeCharCode$1(35);\n            t1.writeCharCode$1(T.hexCharFor(value.get$red() & 15));\n            t1.writeCharCode$1(T.hexCharFor(value.get$green() & 15));\n            t1.writeCharCode$1(T.hexCharFor(value.get$blue() & 15));\n          } else {\n            t1.writeCharCode$1(35);\n            _this._writeHexComponent$1(value.get$red());\n            _this._writeHexComponent$1(value.get$green());\n            _this._writeHexComponent$1(value.get$blue());\n          }\n        }\n        return;\n      }\n      if (value.get$original() != null)\n        _this._serialize$_buffer.write$1(0, value.get$original());\n      else {\n        t2 = $.$get$namesByColor();\n        if (t2.containsKey$1(value) && !(Math.abs(value.alpha - 0) < $.$get$epsilon()))\n          _this._serialize$_buffer.write$1(0, t2.$index(0, value));\n        else {\n          t2 = value.alpha;\n          t3 = _this._serialize$_buffer;\n          if (Math.abs(t2 - 1) < $.$get$epsilon()) {\n            t3.writeCharCode$1(35);\n            _this._writeHexComponent$1(value.get$red());\n            _this._writeHexComponent$1(value.get$green());\n            _this._writeHexComponent$1(value.get$blue());\n          } else {\n            t3.write$1(0, \"rgba(\" + H.S(value.get$red()));\n            t3.write$1(0, t1 ? \",\" : \", \");\n            t3.write$1(0, value.get$green());\n            t3.write$1(0, t1 ? \",\" : \", \");\n            t3.write$1(0, value.get$blue());\n            t3.write$1(0, t1 ? \",\" : \", \");\n            _this._writeNumber$1(t2);\n            t3.writeCharCode$1(41);\n          }\n        }\n      }\n    },\n    _canUseShortHex$1: function(color) {\n      var t1 = color.get$red();\n      if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {\n        t1 = color.get$green();\n        if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {\n          t1 = color.get$blue();\n          t1 = (t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4);\n        } else\n          t1 = false;\n      } else\n        t1 = false;\n      return t1;\n    },\n    _writeHexComponent$1: function(color) {\n      var t1 = this._serialize$_buffer;\n      t1.writeCharCode$1(T.hexCharFor(C.JSInt_methods._shrOtherPositive$1(color, 4)));\n      t1.writeCharCode$1(T.hexCharFor(color & 15));\n    },\n    visitList$1: function(value) {\n      var t2, singleton, t3, t4, _this = this,\n        t1 = value.hasBrackets;\n      if (t1)\n        _this._serialize$_buffer.writeCharCode$1(91);\n      else if (value._list$_contents.length === 0) {\n        if (!_this._serialize$_inspect)\n          throw H.wrapException(E.SassScriptException$(\"() isn't a valid CSS value.\"));\n        _this._serialize$_buffer.write$1(0, \"()\");\n        return;\n      }\n      t2 = _this._serialize$_inspect;\n      singleton = t2 && value._list$_contents.length === 1 && value.separator === C.ListSeparator_comma;\n      if (singleton && !t1)\n        _this._serialize$_buffer.writeCharCode$1(40);\n      t3 = value._list$_contents;\n      t3 = t2 ? t3 : new H.WhereIterable(t3, new N._SerializeVisitor_visitList_closure(), H._arrayInstanceType(t3)._eval$1(\"WhereIterable<1>\"));\n      if (value.separator === C.ListSeparator_space)\n        t4 = \" \";\n      else\n        t4 = _this._style === C.OutputStyle_compressed ? \",\" : \", \";\n      _this._writeBetween$3(t3, t4, t2 ? new N._SerializeVisitor_visitList_closure0(_this, value) : new N._SerializeVisitor_visitList_closure1(_this));\n      if (singleton) {\n        t2 = _this._serialize$_buffer;\n        t2.writeCharCode$1(44);\n        if (!t1)\n          t2.writeCharCode$1(41);\n      }\n      if (t1)\n        _this._serialize$_buffer.writeCharCode$1(93);\n    },\n    _elementNeedsParens$2: function(separator, value) {\n      var t1;\n      if (value instanceof D.SassList) {\n        if (value._list$_contents.length < 2)\n          return false;\n        if (value.hasBrackets)\n          return false;\n        t1 = value.separator;\n        return separator === C.ListSeparator_comma ? t1 === C.ListSeparator_comma : t1 !== C.ListSeparator_undecided;\n      }\n      return false;\n    },\n    visitMap$1: function(map) {\n      var t1, t2, _this = this;\n      if (!_this._serialize$_inspect)\n        throw H.wrapException(E.SassScriptException$(map.toString$0(0) + \" isn't a valid CSS value.\"));\n      t1 = _this._serialize$_buffer;\n      t1.writeCharCode$1(40);\n      t2 = map.contents;\n      _this._writeBetween$3(t2.get$keys(t2), \", \", new N._SerializeVisitor_visitMap_closure(_this, map));\n      t1.writeCharCode$1(41);\n    },\n    _writeMapElement$1: function(value) {\n      var needsParens = value instanceof D.SassList && value.separator === C.ListSeparator_comma && !value.hasBrackets;\n      if (needsParens)\n        this._serialize$_buffer.writeCharCode$1(40);\n      value.accept$1(this);\n      if (needsParens)\n        this._serialize$_buffer.writeCharCode$1(41);\n    },\n    visitNumber$1: function(value) {\n      var t2, _this = this,\n        t1 = value.asSlash;\n      if (t1 != null) {\n        _this.visitNumber$1(t1.item1);\n        _this._serialize$_buffer.writeCharCode$1(47);\n        _this.visitNumber$1(t1.item2);\n        return;\n      }\n      _this._writeNumber$1(value.value);\n      if (!_this._serialize$_inspect) {\n        t1 = value.numeratorUnits;\n        t2 = t1.length;\n        if (t2 > 1 || value.denominatorUnits.length !== 0)\n          throw H.wrapException(E.SassScriptException$(value.toString$0(0) + \" isn't a valid CSS value.\"));\n        if (t2 !== 0)\n          _this._serialize$_buffer.write$1(0, C.JSArray_methods.get$first(t1));\n      } else\n        _this._serialize$_buffer.write$1(0, value.get$unitString());\n    },\n    _writeNumber$1: function(number) {\n      var t1, text, text0, _this = this,\n        integer = T.fuzzyIsInt(number) ? J.round$0$n(number) : null;\n      if (integer != null) {\n        t1 = integer >= 1e21 ? _this._removeExponent$1(C.JSInt_methods.toString$0(integer)) : C.JSInt_methods.toString$0(integer);\n        _this._serialize$_buffer.write$1(0, t1);\n        return;\n      }\n      text = number >= 1e21 ? _this._removeExponent$1(C.JSNumber_methods.toString$0(number)) : C.JSNumber_methods.toString$0(number);\n      text0 = _this._style === C.OutputStyle_compressed && C.JSString_methods._codeUnitAt$1(text, 0) === 48 ? C.JSString_methods.substring$1(text, 1) : text;\n      if (text.length < 12) {\n        _this._serialize$_buffer.write$1(0, text0);\n        return;\n      }\n      _this._writeDecimal$1(text0);\n    },\n    _removeExponent$1: function(text) {\n      var buffer, exponent, t2, additionalZeroes, negative,\n        t1 = text.length,\n        i = 0;\n      while (true) {\n        if (!(i < t1)) {\n          buffer = null;\n          exponent = null;\n          break;\n        }\n        c$0: {\n          if (C.JSString_methods._codeUnitAt$1(text, i) !== 101)\n            break c$0;\n          buffer = new P.StringBuffer(\"\");\n          t2 = H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(text, 0));\n          buffer._contents = t2;\n          if (i > 2)\n            buffer._contents = t2 + C.JSString_methods.substring$2(text, 2, i);\n          exponent = P.int_parse(C.JSString_methods.substring$2(text, i + 1, t1), null);\n          break;\n        }\n        ++i;\n      }\n      if (buffer == null)\n        return text;\n      if (exponent > 0) {\n        t1 = buffer._contents;\n        additionalZeroes = exponent - (t1.length - 1);\n        for (i = 0; i < additionalZeroes; ++i)\n          t1 = buffer._contents += H.Primitives_stringFromCharCode(48);\n        return t1.charCodeAt(0) == 0 ? t1 : t1;\n      } else {\n        negative = C.JSString_methods._codeUnitAt$1(text, 0) === 45;\n        t1 = (negative ? H.Primitives_stringFromCharCode(45) : \"\") + \"0.\";\n        for (i = -1; i > exponent; --i)\n          t1 += H.Primitives_stringFromCharCode(48);\n        if (negative) {\n          t2 = buffer._contents;\n          t2 = C.JSString_methods.substring$1(t2.charCodeAt(0) == 0 ? t2 : t2, 1);\n        } else\n          t2 = buffer;\n        t2 = t1 + H.S(t2);\n        return t2.charCodeAt(0) == 0 ? t2 : t2;\n      }\n    },\n    _writeDecimal$1: function(text) {\n      var t1, t2, textIndex, codeUnit, digits, t3, digitsIndex, digitsIndex0, textIndex0, newDigit, i;\n      for (t1 = text.length, t2 = this._serialize$_buffer, textIndex = 0; textIndex < t1; ++textIndex) {\n        codeUnit = C.JSString_methods._codeUnitAt$1(text, textIndex);\n        if (codeUnit === 46) {\n          if (textIndex === t1 - 2 && C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 48)\n            return;\n          t2.writeCharCode$1(codeUnit);\n          ++textIndex;\n          break;\n        }\n        t2.writeCharCode$1(codeUnit);\n      }\n      if (textIndex === t1)\n        return;\n      digits = new Uint8Array(10);\n      t3 = digits.length;\n      digitsIndex = 0;\n      while (true) {\n        if (!(textIndex < t1 && digitsIndex < t3))\n          break;\n        digitsIndex0 = digitsIndex + 1;\n        textIndex0 = textIndex + 1;\n        digits[digitsIndex] = C.JSString_methods._codeUnitAt$1(text, textIndex) - 48;\n        digitsIndex = digitsIndex0;\n        textIndex = textIndex0;\n      }\n      if (textIndex !== t1 && C.JSString_methods._codeUnitAt$1(text, textIndex) - 48 >= 5)\n        for (; digitsIndex >= 0; digitsIndex = digitsIndex0) {\n          digitsIndex0 = digitsIndex - 1;\n          newDigit = digits[digitsIndex0] + 1;\n          digits[digitsIndex0] = newDigit;\n          if (newDigit !== 10)\n            break;\n        }\n      while (true) {\n        if (!(digitsIndex > 0 && digits[digitsIndex - 1] === 0))\n          break;\n        --digitsIndex;\n      }\n      for (i = 0; i < digitsIndex; ++i)\n        t2.writeCharCode$1(48 + digits[i]);\n    },\n    _visitQuotedString$2$forceDoubleQuote: function(string, forceDoubleQuote) {\n      var t1, includesSingleQuote, includesDoubleQuote, i, char, t2, next, quote, _this = this,\n        buffer = forceDoubleQuote ? _this._serialize$_buffer : new P.StringBuffer(\"\");\n      if (forceDoubleQuote)\n        buffer.writeCharCode$1(34);\n      for (t1 = string.length, includesSingleQuote = false, includesDoubleQuote = false, i = 0; i < t1; ++i) {\n        char = C.JSString_methods._codeUnitAt$1(string, i);\n        switch (char) {\n          case 39:\n            if (forceDoubleQuote)\n              buffer.writeCharCode$1(39);\n            else {\n              if (includesDoubleQuote) {\n                _this._visitQuotedString$2$forceDoubleQuote(string, true);\n                return;\n              } else\n                buffer.writeCharCode$1(39);\n              includesSingleQuote = true;\n            }\n            break;\n          case 34:\n            if (forceDoubleQuote) {\n              buffer.writeCharCode$1(92);\n              buffer.writeCharCode$1(34);\n            } else {\n              if (includesSingleQuote) {\n                _this._visitQuotedString$2$forceDoubleQuote(string, true);\n                return;\n              } else\n                buffer.writeCharCode$1(34);\n              includesDoubleQuote = true;\n            }\n            break;\n          case 0:\n          case 1:\n          case 2:\n          case 3:\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 21:\n          case 22:\n          case 23:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 31:\n            buffer.writeCharCode$1(92);\n            if (char > 15) {\n              t2 = char >>> 4;\n              buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n            }\n            t2 = char & 15;\n            buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n            t2 = i + 1;\n            if (t1 === t2)\n              break;\n            next = C.JSString_methods._codeUnitAt$1(string, t2);\n            if (T.isHex(next) || next === 32 || next === 9)\n              buffer.writeCharCode$1(32);\n            break;\n          case 92:\n            buffer.writeCharCode$1(92);\n            buffer.writeCharCode$1(92);\n            break;\n          default:\n            buffer.writeCharCode$1(char);\n            break;\n        }\n      }\n      if (forceDoubleQuote)\n        buffer.writeCharCode$1(34);\n      else {\n        quote = includesDoubleQuote ? 39 : 34;\n        t1 = _this._serialize$_buffer;\n        t1.writeCharCode$1(quote);\n        t1.write$1(0, buffer);\n        t1.writeCharCode$1(quote);\n      }\n    },\n    _visitQuotedString$1: function(string) {\n      return this._visitQuotedString$2$forceDoubleQuote(string, false);\n    },\n    _visitUnquotedString$1: function(string) {\n      var t1, t2, afterNewline, i, char;\n      for (t1 = string.length, t2 = this._serialize$_buffer, afterNewline = false, i = 0; i < t1; ++i) {\n        char = C.JSString_methods._codeUnitAt$1(string, i);\n        switch (char) {\n          case 10:\n            t2.writeCharCode$1(32);\n            afterNewline = true;\n            break;\n          case 32:\n            if (!afterNewline)\n              t2.writeCharCode$1(32);\n            break;\n          default:\n            t2.writeCharCode$1(char);\n            afterNewline = false;\n            break;\n        }\n      }\n    },\n    visitComplexSelector$1: function(complex) {\n      var t1, t2, t3, t4, lastComponent, _i, component, t5;\n      for (t1 = complex.components, t2 = t1.length, t3 = this._serialize$_buffer, t4 = this._style === C.OutputStyle_compressed, lastComponent = null, _i = 0; _i < t2; ++_i, lastComponent = component) {\n        component = t1[_i];\n        if (lastComponent != null)\n          if (!(t4 && lastComponent instanceof S.Combinator))\n            t5 = !(t4 && component instanceof S.Combinator);\n          else\n            t5 = false;\n        else\n          t5 = false;\n        if (t5)\n          t3.write$1(0, \" \");\n        if (component instanceof X.CompoundSelector)\n          this.visitCompoundSelector$1(component);\n        else\n          t3.write$1(0, component);\n      }\n    },\n    visitCompoundSelector$1: function(compound) {\n      var t2, t3, _i,\n        t1 = this._serialize$_buffer,\n        start = t1.get$length(t1);\n      for (t2 = compound.components, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t2[_i].accept$1(this);\n      if (t1.get$length(t1) === start)\n        t1.writeCharCode$1(42);\n    },\n    visitSelectorList$1: function(list) {\n      var complexes, t1, t2, t3, first, t4, _this = this;\n      if (_this._serialize$_inspect)\n        complexes = list.components;\n      else {\n        t1 = list.components;\n        complexes = new H.WhereIterable(t1, new N._SerializeVisitor_visitSelectorList_closure(), H._arrayInstanceType(t1)._eval$1(\"WhereIterable<1>\"));\n      }\n      for (t1 = J.get$iterator$ax(complexes), t2 = _this._style !== C.OutputStyle_compressed, t3 = _this._serialize$_buffer, first = true; t1.moveNext$0();) {\n        t4 = t1.get$current(t1);\n        if (first)\n          first = false;\n        else {\n          t3.writeCharCode$1(44);\n          if (t4.lineBreak) {\n            if (t2)\n              t3.write$1(0, \"\\n\");\n          } else if (t2)\n            t3.writeCharCode$1(32);\n        }\n        _this.visitComplexSelector$1(t4);\n      }\n    },\n    visitPseudoSelector$1: function(pseudo) {\n      var t4, t5, t6,\n        t1 = pseudo.selector,\n        t2 = t1 == null,\n        t3 = !t2;\n      if (t3 && pseudo.name === \"not\" && t1.get$isInvisible())\n        return;\n      t4 = this._serialize$_buffer;\n      t4.writeCharCode$1(58);\n      if (!pseudo.isSyntacticClass)\n        t4.writeCharCode$1(58);\n      t4.write$1(0, pseudo.name);\n      t5 = pseudo.argument;\n      t6 = t5 == null;\n      if (t6 && t2)\n        return;\n      t4.writeCharCode$1(40);\n      if (!t6) {\n        t4.write$1(0, t5);\n        if (t3)\n          t4.writeCharCode$1(32);\n      }\n      if (t3)\n        this.visitSelectorList$1(t1);\n      t4.writeCharCode$1(41);\n    },\n    _write$1: function(value) {\n      return this._serialize$_buffer.forSpan$2(value.get$span(), new N._SerializeVisitor__write_closure(this, value));\n    },\n    _serialize$_visitChildren$1: function(children) {\n      var _this = this, t1 = {},\n        t2 = _this._serialize$_buffer;\n      t2.writeCharCode$1(123);\n      if (children.every$1(children, _this.get$_isInvisible())) {\n        t2.writeCharCode$1(125);\n        return;\n      }\n      _this._writeLineFeed$0();\n      t1.previous = null;\n      ++_this._indentation;\n      new N._SerializeVisitor__visitChildren_closure(t1, _this, children).call$0();\n      --_this._indentation;\n      t1 = t1.previous;\n      if ((type$.legacy_CssParentNode._is(t1) ? t1.get$isChildless() : !type$.legacy_CssComment._is(t1)) && _this._style !== C.OutputStyle_compressed)\n        t2.writeCharCode$1(59);\n      _this._writeLineFeed$0();\n      _this._writeIndentation$0();\n      t2.writeCharCode$1(125);\n    },\n    _writeLineFeed$0: function() {\n      if (this._style !== C.OutputStyle_compressed)\n        this._serialize$_buffer.write$1(0, \"\\n\");\n    },\n    _writeIndentation$0: function() {\n      var _this = this;\n      if (_this._style === C.OutputStyle_compressed)\n        return;\n      _this._writeTimes$2(_this._indentCharacter, _this._indentation * _this._indentWidth);\n    },\n    _writeTimes$2: function(char, times) {\n      var t1, i;\n      for (t1 = this._serialize$_buffer, i = 0; i < times; ++i)\n        t1.writeCharCode$1(char);\n    },\n    _writeBetween$1$3: function(iterable, text, callback) {\n      var t1, t2, first, value;\n      for (t1 = J.get$iterator$ax(iterable), t2 = this._serialize$_buffer, first = true; t1.moveNext$0();) {\n        value = t1.get$current(t1);\n        if (first)\n          first = false;\n        else\n          t2.write$1(0, text);\n        callback.call$1(value);\n      }\n    },\n    _writeBetween$3: function(iterable, text, callback) {\n      return this._writeBetween$1$3(iterable, text, callback, type$.dynamic);\n    },\n    _isInvisible$1: function(node) {\n      if (this._serialize$_inspect)\n        return false;\n      if (this._style === C.OutputStyle_compressed && type$.legacy_CssComment._is(node) && J._codeUnitAt$1$s(node.text, 2) !== 33)\n        return true;\n      if (type$.legacy_CssParentNode._is(node)) {\n        if (type$.legacy_CssAtRule._is(node))\n          return false;\n        if (type$.legacy_CssStyleRule._is(node) && node.selector.value.get$isInvisible())\n          return true;\n        return J.every$1$ax(node.get$children(node), this.get$_isInvisible());\n      } else\n        return false;\n    }\n  };\n  N._SerializeVisitor_visitCssComment_closure.prototype = {\n    call$0: function() {\n      var t2, t3, minimumIndentation,\n        t1 = this.$this;\n      if (t1._style === C.OutputStyle_compressed && J._codeUnitAt$1$s(this.node.text, 2) !== 33)\n        return;\n      t2 = this.node;\n      t3 = t2.text;\n      minimumIndentation = t1._minimumIndentation$1(t3);\n      if (minimumIndentation == null) {\n        t1._writeIndentation$0();\n        t1._serialize$_buffer.write$1(0, t3);\n        return;\n      }\n      t2 = t2.span;\n      if (t2 != null) {\n        t2 = Y.FileLocation$_(t2.file, t2._file$_start);\n        minimumIndentation = Math.min(minimumIndentation, t2.file.getColumn$1(t2.offset));\n      }\n      t1._writeIndentation$0();\n      t1._writeWithIndent$2(t3, minimumIndentation);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssAtRule_closure.prototype = {\n    call$0: function() {\n      var t3,\n        t1 = this.$this,\n        t2 = t1._serialize$_buffer;\n      t2.writeCharCode$1(64);\n      t3 = this.node;\n      t1._write$1(t3.name);\n      t3 = t3.value;\n      if (t3 != null) {\n        t2.writeCharCode$1(32);\n        t1._write$1(t3);\n      }\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssMediaRule_closure.prototype = {\n    call$0: function() {\n      var t3, t4,\n        t1 = this.$this,\n        t2 = t1._serialize$_buffer;\n      t2.write$1(0, \"@media\");\n      t3 = t1._style === C.OutputStyle_compressed;\n      if (t3) {\n        t4 = C.JSArray_methods.get$first(this.node.queries);\n        t4 = !(t4.modifier == null && t4.type == null);\n      } else\n        t4 = true;\n      if (t4)\n        t2.writeCharCode$1(32);\n      t2 = t3 ? \",\" : \", \";\n      t1._writeBetween$3(this.node.queries, t2, t1.get$_visitMediaQuery());\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssImport_closure.prototype = {\n    call$0: function() {\n      var t3, t4, t5, t6,\n        t1 = this.$this,\n        t2 = t1._serialize$_buffer;\n      t2.write$1(0, \"@import\");\n      t3 = t1._style === C.OutputStyle_compressed;\n      t4 = !t3;\n      if (t4)\n        t2.writeCharCode$1(32);\n      t5 = this.node;\n      t2.forSpan$2(t5.url.get$span(), new N._SerializeVisitor_visitCssImport__closure(t1, t5));\n      t6 = t5.supports;\n      if (t6 != null) {\n        if (t4)\n          t2.writeCharCode$1(32);\n        t1._write$1(t6);\n      }\n      t5 = t5.media;\n      if (t5 != null) {\n        if (t4)\n          t2.writeCharCode$1(32);\n        t2 = t3 ? \",\" : \", \";\n        t1._writeBetween$3(t5, t2, t1.get$_visitMediaQuery());\n      }\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssImport__closure.prototype = {\n    call$0: function() {\n      var t1 = this.node.url;\n      return this.$this._writeImportUrl$1(t1.get$value(t1));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssKeyframeBlock_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._style === C.OutputStyle_compressed ? \",\" : \", \",\n        t3 = t1._serialize$_buffer;\n      return t1._writeBetween$3(this.node.selector.value, t2, t3.get$write(t3));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssStyleRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.node.selector.value;\n      t1.toString;\n      return this.$this.visitSelectorList$1(t1);\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssSupportsRule_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._serialize$_buffer;\n      t2.write$1(0, \"@supports\");\n      if (!(t1._style === C.OutputStyle_compressed && J.codeUnitAt$1$s(this.node.condition.value, 0) === 40))\n        t2.writeCharCode$1(32);\n      t1._write$1(this.node.condition);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssDeclaration_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      if (t1._style === C.OutputStyle_compressed)\n        t1._writeFoldedValue$1(t2);\n      else\n        t1._writeReindentedValue$1(t2);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssDeclaration_closure0.prototype = {\n    call$0: function() {\n      return this.node.value.value.accept$1(this.$this);\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitList_closure.prototype = {\n    call$1: function(element) {\n      return !element.get$isBlank();\n    },\n    $signature: 51\n  };\n  N._SerializeVisitor_visitList_closure0.prototype = {\n    call$1: function(element) {\n      var t1 = this.$this,\n        needsParens = t1._elementNeedsParens$2(this.value.separator, element);\n      if (needsParens)\n        t1._serialize$_buffer.writeCharCode$1(40);\n      element.accept$1(t1);\n      if (needsParens)\n        t1._serialize$_buffer.writeCharCode$1(41);\n    },\n    $signature: 121\n  };\n  N._SerializeVisitor_visitList_closure1.prototype = {\n    call$1: function(element) {\n      element.accept$1(this.$this);\n    },\n    $signature: 121\n  };\n  N._SerializeVisitor_visitMap_closure.prototype = {\n    call$1: function(key) {\n      var t1 = this.$this;\n      t1._writeMapElement$1(key);\n      t1._serialize$_buffer.write$1(0, \": \");\n      t1._writeMapElement$1(this.map.contents.$index(0, key));\n    },\n    $signature: 121\n  };\n  N._SerializeVisitor_visitSelectorList_closure.prototype = {\n    call$1: function(complex) {\n      return !complex.get$isInvisible();\n    },\n    $signature: 15\n  };\n  N._SerializeVisitor__write_closure.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      return this.$this._serialize$_buffer.write$1(0, t1.get$value(t1));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor__visitChildren_closure.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, t5, t6, t7, i, child, t8;\n      for (t1 = this.children._collection$_source, t2 = J.getInterceptor$asx(t1), t3 = this._box_0, t4 = this.$this, t5 = type$.legacy_CssComment, t6 = type$.legacy_CssParentNode, t7 = t4._serialize$_buffer, i = 0; i < t2.get$length(t1); ++i) {\n        child = t2.elementAt$1(t1, i);\n        if (t4._isInvisible$1(child))\n          continue;\n        t8 = t3.previous;\n        if (t8 != null) {\n          if (t6._is(t8) ? t8.get$isChildless() : !t5._is(t8))\n            t7.writeCharCode$1(59);\n          t8 = t4._style !== C.OutputStyle_compressed;\n          if (t8)\n            t7.write$1(0, \"\\n\");\n          if (t3.previous.get$isGroupEnd())\n            if (t8)\n              t7.write$1(0, \"\\n\");\n        }\n        t3.previous = child;\n        child.accept$1(t4);\n      }\n    },\n    $signature: 0\n  };\n  N.OutputStyle.prototype = {\n    toString$0: function(_) {\n      return this._serialize$_name;\n    }\n  };\n  N.LineFeed.prototype = {\n    toString$0: function(_) {\n      return \"lf\";\n    }\n  };\n  N.SerializeResult.prototype = {};\n  N.withWarnCallback_closure.prototype = {\n    call$0: function() {\n      return this.callback.call$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: function() {\n      return this.T._eval$1(\"0*()\");\n    }\n  };\n  L.Entry.prototype = {\n    compareTo$1: function(_, other) {\n      var t1, t2, t3,\n        res = this.target.compareTo$1(0, other.target);\n      if (res !== 0)\n        return res;\n      t1 = this.source;\n      t2 = J.toString$0$(t1.file.url);\n      t3 = other.source;\n      res = C.JSString_methods.compareTo$1(t2, J.toString$0$(t3.file.url));\n      if (res !== 0)\n        return res;\n      return t1.compareTo$1(0, t3);\n    },\n    $isComparable: 1,\n    get$source: function() {\n      return this.source;\n    },\n    get$target: function() {\n      return this.target;\n    },\n    get$identifierName: function() {\n      return this.identifierName;\n    }\n  };\n  T.Mapping.prototype = {};\n  T.SingleMapping.prototype = {\n    toJson$1$includeSourceContents: function(includeSourceContents) {\n      var t1, t2, line, column, srcLine, srcColumn, srcUrlId, srcNameId, first, _i, entry, nextLine, i, t3, t4, _i0, segment, column0, t5, newUrlId, srcLine0, srcColumn0, srcNameId0, result, _this = this,\n        buff = new P.StringBuffer(\"\");\n      for (t1 = _this.lines, t2 = t1.length, line = 0, column = 0, srcLine = 0, srcColumn = 0, srcUrlId = 0, srcNameId = 0, first = true, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        entry = t1[_i];\n        nextLine = entry.line;\n        if (nextLine > line) {\n          for (i = line; i < nextLine; ++i)\n            buff._contents += \";\";\n          line = nextLine;\n          column = 0;\n          first = true;\n        }\n        for (t3 = entry.entries, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0, column = column0, first = false) {\n          segment = t3[_i0];\n          if (!first)\n            buff._contents += \",\";\n          column0 = segment.column;\n          t5 = L.encodeVlq(column0 - column);\n          t5 = P.StringBuffer__writeAll(buff._contents, t5, \"\");\n          buff._contents = t5;\n          newUrlId = segment.sourceUrlId;\n          if (newUrlId == null)\n            continue;\n          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(newUrlId - srcUrlId), \"\");\n          buff._contents = t5;\n          srcLine0 = segment.sourceLine;\n          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(srcLine0 - srcLine), \"\");\n          buff._contents = t5;\n          srcColumn0 = segment.sourceColumn;\n          t5 = P.StringBuffer__writeAll(t5, L.encodeVlq(srcColumn0 - srcColumn), \"\");\n          buff._contents = t5;\n          srcNameId0 = segment.sourceNameId;\n          if (srcNameId0 == null) {\n            srcUrlId = newUrlId;\n            srcColumn = srcColumn0;\n            srcLine = srcLine0;\n            continue;\n          }\n          buff._contents = P.StringBuffer__writeAll(t5, L.encodeVlq(srcNameId0 - srcNameId), \"\");\n          srcNameId = srcNameId0;\n          srcUrlId = newUrlId;\n          srcColumn = srcColumn0;\n          srcLine = srcLine0;\n        }\n      }\n      t1 = _this.sourceRoot;\n      if (t1 == null)\n        t1 = \"\";\n      t2 = buff._contents;\n      result = P.LinkedHashMap_LinkedHashMap$_literal([\"version\", 3, \"sourceRoot\", t1, \"sources\", _this.urls, \"names\", _this.names, \"mappings\", t2.charCodeAt(0) == 0 ? t2 : t2], type$.legacy_String, type$.legacy_Object);\n      t1 = _this.targetUrl;\n      if (t1 != null)\n        result.$indexSet(0, \"file\", t1);\n      if (includeSourceContents) {\n        t1 = _this.files;\n        t2 = H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\");\n        result.$indexSet(0, \"sourcesContent\", P.List_List$from(new H.MappedListIterable(t1, new T.SingleMapping_toJson_closure(), t2), true, t2._eval$1(\"ListIterable.E\")));\n      }\n      _this.extensions.forEach$1(0, new T.SingleMapping_toJson_closure0(result));\n      return result;\n    },\n    toJson$0: function() {\n      return this.toJson$1$includeSourceContents(false);\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = H.getRuntimeType(_this).toString$0(0);\n      t1 + \" : [\";\n      t1 = t1 + \" : [targetUrl: \" + H.S(_this.targetUrl) + \", sourceRoot: \" + H.S(_this.sourceRoot) + \", urls: \" + H.S(_this.urls) + \", names: \" + H.S(_this.names) + \", lines: \" + H.S(_this.lines) + \"]\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  T.SingleMapping_SingleMapping$fromEntries_closure.prototype = {\n    call$0: function() {\n      var t1 = this.urls;\n      return t1.get$length(t1);\n    },\n    $signature: 11\n  };\n  T.SingleMapping_SingleMapping$fromEntries_closure0.prototype = {\n    call$0: function() {\n      return type$.legacy_FileLocation._as(this.sourceEntry.get$source()).file;\n    },\n    $signature: 96\n  };\n  T.SingleMapping_SingleMapping$fromEntries_closure1.prototype = {\n    call$1: function(i) {\n      return this.files.$index(0, i);\n    },\n    $signature: 244\n  };\n  T.SingleMapping_toJson_closure.prototype = {\n    call$1: function(file) {\n      return file == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(file._decodedChars, 0, null), 0, null);\n    },\n    $signature: 245\n  };\n  T.SingleMapping_toJson_closure0.prototype = {\n    call$2: function($name, value) {\n      this.result.$indexSet(0, $name, value);\n      return value;\n    },\n    $signature: 246\n  };\n  T.TargetLineEntry.prototype = {\n    toString$0: function(_) {\n      return H.getRuntimeType(this).toString$0(0) + \": \" + this.line + \" \" + H.S(this.entries);\n    }\n  };\n  T.TargetEntry.prototype = {\n    toString$0: function(_) {\n      var _this = this;\n      return H.getRuntimeType(_this).toString$0(0) + \": (\" + _this.column + \", \" + H.S(_this.sourceUrlId) + \", \" + H.S(_this.sourceLine) + \", \" + H.S(_this.sourceColumn) + \", \" + H.S(_this.sourceNameId) + \")\";\n    }\n  };\n  Y.SourceFile.prototype = {\n    get$length: function(_) {\n      return this._decodedChars.length;\n    },\n    get$lines: function() {\n      return this._lineStarts.length;\n    },\n    SourceFile$decoded$2$url: function(decodedChars, url) {\n      var t1, t2, t3, i, c, j;\n      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {\n        c = t1[i];\n        if (c === 13) {\n          j = i + 1;\n          if (j >= t2 || t1[j] !== 10)\n            c = 10;\n        }\n        if (c === 10)\n          t3.push(i + 1);\n      }\n    },\n    span$2: function(start, end) {\n      return Y._FileSpan$(this, start, end == null ? this._decodedChars.length : end);\n    },\n    span$1: function(start) {\n      return this.span$2(start, null);\n    },\n    getLine$1: function(offset) {\n      var t1, _this = this;\n      if (offset < 0)\n        throw H.wrapException(P.RangeError$(\"Offset may not be negative, was \" + offset + \".\"));\n      else if (offset > _this._decodedChars.length)\n        throw H.wrapException(P.RangeError$(\"Offset \" + offset + string$.x20must_ + _this.get$length(_this) + \".\"));\n      t1 = _this._lineStarts;\n      if (offset < C.JSArray_methods.get$first(t1))\n        return -1;\n      if (offset >= C.JSArray_methods.get$last(t1))\n        return t1.length - 1;\n      if (_this._isNearCachedLine$1(offset))\n        return _this._cachedLine;\n      return _this._cachedLine = _this._binarySearch$1(offset) - 1;\n    },\n    _isNearCachedLine$1: function(offset) {\n      var t2, t3,\n        t1 = this._cachedLine;\n      if (t1 == null)\n        return false;\n      t2 = this._lineStarts;\n      if (offset < t2[t1])\n        return false;\n      t3 = t2.length;\n      if (t1 >= t3 - 1 || offset < t2[t1 + 1])\n        return true;\n      if (t1 >= t3 - 2 || offset < t2[t1 + 2]) {\n        this._cachedLine = t1 + 1;\n        return true;\n      }\n      return false;\n    },\n    _binarySearch$1: function(offset) {\n      var min, half,\n        t1 = this._lineStarts,\n        max = t1.length - 1;\n      for (min = 0; min < max;) {\n        half = min + C.JSInt_methods._tdivFast$1(max - min, 2);\n        if (t1[half] > offset)\n          max = half;\n        else\n          min = half + 1;\n      }\n      return max;\n    },\n    getColumn$1: function(offset) {\n      var line, lineStart, _this = this;\n      if (offset < 0)\n        throw H.wrapException(P.RangeError$(\"Offset may not be negative, was \" + offset + \".\"));\n      else if (offset > _this._decodedChars.length)\n        throw H.wrapException(P.RangeError$(\"Offset \" + offset + \" must be not be greater than the number of characters in the file, \" + _this.get$length(_this) + \".\"));\n      line = _this.getLine$1(offset);\n      lineStart = _this._lineStarts[line];\n      if (lineStart > offset)\n        throw H.wrapException(P.RangeError$(\"Line \" + H.S(line) + \" comes after offset \" + offset + \".\"));\n      return offset - lineStart;\n    },\n    getOffset$1: function(line) {\n      var t1, t2, result, t3;\n      if (line < 0)\n        throw H.wrapException(P.RangeError$(\"Line may not be negative, was \" + H.S(line) + \".\"));\n      else {\n        t1 = this._lineStarts;\n        t2 = t1.length;\n        if (line >= t2)\n          throw H.wrapException(P.RangeError$(\"Line \" + H.S(line) + \" must be less than the number of lines in the file, \" + this.get$lines() + \".\"));\n      }\n      result = t1[line];\n      if (result <= this._decodedChars.length) {\n        t3 = line + 1;\n        t1 = t3 < t2 && result >= t1[t3];\n      } else\n        t1 = true;\n      if (t1)\n        throw H.wrapException(P.RangeError$(\"Line \" + H.S(line) + \" doesn't have 0 columns.\"));\n      return result;\n    }\n  };\n  Y.FileLocation.prototype = {\n    get$sourceUrl: function(_) {\n      return this.file.url;\n    },\n    get$line: function() {\n      return this.file.getLine$1(this.offset);\n    },\n    get$column: function() {\n      return this.file.getColumn$1(this.offset);\n    },\n    pointSpan$0: function() {\n      var t1 = this.offset;\n      return Y._FileSpan$(this.file, t1, t1);\n    },\n    get$offset: function() {\n      return this.offset;\n    }\n  };\n  Y._FileSpan.prototype = {\n    get$sourceUrl: function(_) {\n      return this.file.url;\n    },\n    get$length: function(_) {\n      return this._end - this._file$_start;\n    },\n    get$start: function(_) {\n      return Y.FileLocation$_(this.file, this._file$_start);\n    },\n    get$end: function(_) {\n      return Y.FileLocation$_(this.file, this._end);\n    },\n    get$text: function() {\n      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);\n    },\n    get$context: function(_) {\n      var _this = this,\n        t1 = _this.file,\n        endOffset = _this._end,\n        endLine = t1.getLine$1(endOffset);\n      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {\n        if (endOffset - _this._file$_start === 0)\n          return endLine === t1._lineStarts.length - 1 ? \"\" : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);\n      } else\n        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);\n      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);\n    },\n    _FileSpan$3: function(file, _start, _end) {\n      var t3,\n        t1 = this._end,\n        t2 = this._file$_start;\n      if (t1 < t2)\n        throw H.wrapException(P.ArgumentError$(\"End \" + t1 + \" must come after start \" + t2 + \".\"));\n      else {\n        t3 = this.file;\n        if (t1 > t3._decodedChars.length)\n          throw H.wrapException(P.RangeError$(\"End \" + t1 + string$.x20must_ + t3.get$length(t3) + \".\"));\n        else if (t2 < 0)\n          throw H.wrapException(P.RangeError$(\"Start may not be negative, was \" + t2 + \".\"));\n      }\n    },\n    compareTo$1: function(_, other) {\n      var result;\n      if (!(other instanceof Y._FileSpan))\n        return this.super$SourceSpanMixin$compareTo(0, other);\n      result = C.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);\n      return result === 0 ? C.JSInt_methods.compareTo$1(this._end, other._end) : result;\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      if (!type$.legacy_FileSpan._is(other))\n        return _this.super$SourceSpanMixin$$eq(0, other);\n      return _this._file$_start === other._file$_start && _this._end === other._end && J.$eq$(_this.file.url, other.file.url);\n    },\n    get$hashCode: function(_) {\n      return Y.SourceSpanMixin.prototype.get$hashCode.call(this, this);\n    },\n    expand$1: function(_, other) {\n      var start, _this = this,\n        t1 = _this.file;\n      if (!J.$eq$(t1.url, other.file.url))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(_this.get$sourceUrl(_this)) + '\" and  \"' + H.S(other.get$sourceUrl(other)) + \"\\\" don't match.\"));\n      start = Math.min(_this._file$_start, other._file$_start);\n      return Y._FileSpan$(t1, start, Math.max(_this._end, other._end));\n    },\n    $isFileSpan: 1,\n    $isSourceSpanWithContext: 1\n  };\n  U.Highlighter.prototype = {\n    highlight$0: function() {\n      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, cur, t10, index, primary, _i, highlight, _this = this,\n        t1 = _this._lines;\n      _this._writeFileStart$1(C.JSArray_methods.get$first(t1).url);\n      t2 = new Array(_this._maxMultilineSpans);\n      t2.fixed$length = Array;\n      highlightsByColumn = H.setRuntimeTypeInfo(t2, type$.JSArray_legacy__Highlight);\n      for (t2 = _this._highlighter$_buffer, t3 = highlightsByColumn.length !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {\n        line = t1[i];\n        if (i > 0) {\n          lastLine = t1[i - 1];\n          t5 = lastLine.url;\n          t6 = line.url;\n          if (!J.$eq$(t5, t6)) {\n            _this._writeSidebar$1$end($._glyphs.get$upEnd());\n            t2._contents += \"\\n\";\n            _this._writeFileStart$1(t6);\n          } else if (lastLine.number + 1 !== line.number) {\n            _this._writeSidebar$1$text(\"...\");\n            t2._contents += \"\\n\";\n          }\n        }\n        for (t5 = line.highlights, t6 = new H.ReversedListIterable(t5, H._arrayInstanceType(t5)._eval$1(\"ReversedListIterable<1>\")), t6 = new H.ListIterator(t6, t6.get$length(t6)), t7 = line.number, t8 = line.text, t9 = J.getInterceptor$s(t8); t6.moveNext$0();) {\n          cur = t6.__internal$_current;\n          t10 = cur.span;\n          if (t10.get$start(t10).get$line() != t10.get$end(t10).get$line() && t10.get$start(t10).get$line() === t7 && _this._isOnlyWhitespace$1(t9.substring$2(t8, 0, t10.get$start(t10).get$column()))) {\n            index = C.JSArray_methods.indexOf$1(highlightsByColumn, null);\n            if (index < 0)\n              H.throwExpression(P.ArgumentError$(H.S(highlightsByColumn) + \" contains no null elements.\"));\n            highlightsByColumn[index] = cur;\n          }\n        }\n        _this._writeSidebar$1$line(t7);\n        t2._contents += \" \";\n        _this._writeMultilineHighlights$2(line, highlightsByColumn);\n        if (t3)\n          t2._contents += \" \";\n        primary = C.JSArray_methods.firstWhere$2$orElse(t5, new U.Highlighter_highlight_closure(), new U.Highlighter_highlight_closure0());\n        t6 = primary != null;\n        if (t6) {\n          t9 = primary.span;\n          t10 = t9.get$start(t9).get$line() === t7 ? t9.get$start(t9).get$column() : 0;\n          _this._writeHighlightedText$4$color(t8, t10, t9.get$end(t9).get$line() === t7 ? t9.get$end(t9).get$column() : t8.length, t4);\n        } else\n          _this._writeText$1(t8);\n        t2._contents += \"\\n\";\n        if (t6)\n          _this._writeIndicator$3(line, primary, highlightsByColumn);\n        for (t6 = t5.length, _i = 0; _i < t5.length; t5.length === t6 || (0, H.throwConcurrentModificationError)(t5), ++_i) {\n          highlight = t5[_i];\n          if (highlight.isPrimary)\n            continue;\n          _this._writeIndicator$3(line, highlight, highlightsByColumn);\n        }\n      }\n      _this._writeSidebar$1$end($._glyphs.get$upEnd());\n      t1 = t2._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _writeFileStart$1: function(url) {\n      var _this = this,\n        t1 = !_this._multipleFiles || url == null,\n        t2 = $._glyphs;\n      if (t1)\n        _this._writeSidebar$1$end(t2.get$downEnd());\n      else {\n        _this._writeSidebar$1$end(t2.get$topLeftCorner());\n        _this._colorize$2$color(new U.Highlighter__writeFileStart_closure(_this), \"\\x1b[34m\");\n        _this._highlighter$_buffer._contents += \" \" + H.S($.$get$context().prettyUri$1(url));\n      }\n      _this._highlighter$_buffer._contents += \"\\n\";\n    },\n    _writeMultilineHighlights$3$current: function(line, highlightsByColumn, current) {\n      var t1, currentColor, t2, t3, t4, t5, foundCurrent, _i, highlight, t6, t7, startLine, endLine, _this = this, _null = null, _box_0 = {};\n      _box_0.openedOnThisLine = false;\n      _box_0.openedOnThisLineColor = null;\n      t1 = current == null;\n      if (t1)\n        currentColor = _null;\n      else\n        currentColor = current.isPrimary ? _this._primaryColor : _this._secondaryColor;\n      for (t2 = highlightsByColumn.length, t3 = _this._secondaryColor, t1 = !t1, t4 = _this._primaryColor, t5 = _this._highlighter$_buffer, foundCurrent = false, _i = 0; _i < t2; ++_i) {\n        highlight = highlightsByColumn[_i];\n        t6 = highlight == null;\n        t7 = t6 ? _null : highlight.span;\n        t7 = t7 == null ? _null : t7.get$start(t7);\n        startLine = t7 == null ? _null : t7.get$line();\n        t7 = t6 ? _null : highlight.span;\n        t7 = t7 == null ? _null : t7.get$end(t7);\n        endLine = t7 == null ? _null : t7.get$line();\n        if (t1 && highlight === current) {\n          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor);\n          foundCurrent = true;\n        } else if (foundCurrent)\n          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor);\n        else if (t6)\n          if (_box_0.openedOnThisLine)\n            _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor);\n          else\n            t5._contents += \" \";\n        else {\n          t6 = highlight.isPrimary ? t4 : t3;\n          _this._colorize$2$color(new U.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t6);\n        }\n      }\n    },\n    _writeMultilineHighlights$2: function(line, highlightsByColumn) {\n      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);\n    },\n    _writeHighlightedText$4$color: function(text, startColumn, endColumn, color) {\n      var _this = this;\n      _this._writeText$1(J.getInterceptor$s(text).substring$2(text, 0, startColumn));\n      _this._colorize$2$color(new U.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color);\n      _this._writeText$1(C.JSString_methods.substring$2(text, endColumn, text.length));\n    },\n    _writeIndicator$3: function(line, highlight, highlightsByColumn) {\n      var t2, coversWholeLine, _this = this,\n        color = highlight.isPrimary ? _this._primaryColor : _this._secondaryColor,\n        t1 = highlight.span;\n      if (t1.get$start(t1).get$line() == t1.get$end(t1).get$line()) {\n        _this._writeSidebar$0();\n        t1 = _this._highlighter$_buffer;\n        t1._contents += \" \";\n        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);\n        if (highlightsByColumn.length !== 0)\n          t1._contents += \" \";\n        _this._colorize$2$color(new U.Highlighter__writeIndicator_closure(_this, line, highlight), color);\n        t1._contents += \"\\n\";\n      } else {\n        t2 = line.number;\n        if (t1.get$start(t1).get$line() === t2) {\n          if (C.JSArray_methods.contains$1(highlightsByColumn, highlight))\n            return;\n          B.replaceFirstNull(highlightsByColumn, highlight);\n          _this._writeSidebar$0();\n          t1 = _this._highlighter$_buffer;\n          t1._contents += \" \";\n          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);\n          _this._colorize$2$color(new U.Highlighter__writeIndicator_closure0(_this, line, highlight), color);\n          t1._contents += \"\\n\";\n        } else if (t1.get$end(t1).get$line() === t2) {\n          coversWholeLine = t1.get$end(t1).get$column() === line.text.length;\n          if (coversWholeLine && highlight.label == null) {\n            B.replaceWithNull(highlightsByColumn, highlight);\n            return;\n          }\n          _this._writeSidebar$0();\n          t1 = _this._highlighter$_buffer;\n          t1._contents += \" \";\n          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);\n          _this._colorize$2$color(new U.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color);\n          t1._contents += \"\\n\";\n          B.replaceWithNull(highlightsByColumn, highlight);\n        }\n      }\n    },\n    _writeArrow$3$beginning: function(line, column, beginning) {\n      var t2,\n        t1 = beginning ? 0 : 1,\n        tabs = this._countTabs$1(J.substring$2$s(line.text, 0, column + t1));\n      t1 = this._highlighter$_buffer;\n      t2 = t1._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 1 + column + tabs * 3);\n      t1._contents = t2 + \"^\";\n    },\n    _writeArrow$2: function(line, column) {\n      return this._writeArrow$3$beginning(line, column, true);\n    },\n    _writeLabel$1: function(label) {\n      if (label != null)\n        this._highlighter$_buffer._contents += \" \" + label;\n    },\n    _writeText$1: function(text) {\n      var t1, t2, cur;\n      text.toString;\n      t1 = new H.CodeUnits(text);\n      t1 = new H.ListIterator(t1, t1.get$length(t1));\n      t2 = this._highlighter$_buffer;\n      for (; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur === 9)\n          t2._contents += C.JSString_methods.$mul(\" \", 4);\n        else\n          t2._contents += H.Primitives_stringFromCharCode(cur);\n      }\n    },\n    _writeSidebar$3$end$line$text: function(end, line, text) {\n      var t1 = {};\n      t1.text = text;\n      if (line != null)\n        t1.text = C.JSInt_methods.toString$0(line + 1);\n      this._colorize$2$color(new U.Highlighter__writeSidebar_closure(t1, this, end), \"\\x1b[34m\");\n    },\n    _writeSidebar$1$end: function(end) {\n      return this._writeSidebar$3$end$line$text(end, null, null);\n    },\n    _writeSidebar$1$text: function(text) {\n      return this._writeSidebar$3$end$line$text(null, null, text);\n    },\n    _writeSidebar$1$line: function(line) {\n      return this._writeSidebar$3$end$line$text(null, line, null);\n    },\n    _writeSidebar$0: function() {\n      return this._writeSidebar$3$end$line$text(null, null, null);\n    },\n    _countTabs$1: function(text) {\n      var t1, count, cur;\n      for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1)), count = 0; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur === 9)\n          ++count;\n      }\n      return count;\n    },\n    _isOnlyWhitespace$1: function(text) {\n      var t1, cur;\n      for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur !== 32 && cur !== 9)\n          return false;\n      }\n      return true;\n    },\n    _colorize$2$color: function(callback, color) {\n      var t1 = this._primaryColor != null;\n      if (t1 && color != null)\n        this._highlighter$_buffer._contents += color;\n      callback.call$0();\n      if (t1 && color != null)\n        this._highlighter$_buffer._contents += \"\\x1b[0m\";\n    }\n  };\n  U.Highlighter_closure.prototype = {\n    call$0: function() {\n      var t1 = this.color,\n        t2 = J.getInterceptor$(t1);\n      if (t2.$eq(t1, true))\n        return \"\\x1b[31m\";\n      if (t2.$eq(t1, false))\n        return null;\n      return H._asStringS(t1);\n    },\n    $signature: 13\n  };\n  U.Highlighter$__closure.prototype = {\n    call$1: function(line) {\n      var t1 = line.highlights;\n      t1 = new H.WhereIterable(t1, new U.Highlighter$___closure(), H._arrayInstanceType(t1)._eval$1(\"WhereIterable<1>\"));\n      return t1.get$length(t1);\n    },\n    $signature: 248\n  };\n  U.Highlighter$___closure.prototype = {\n    call$1: function(highlight) {\n      var t1 = highlight.span;\n      return t1.get$start(t1).get$line() != t1.get$end(t1).get$line();\n    },\n    $signature: 119\n  };\n  U.Highlighter$__closure0.prototype = {\n    call$1: function(line) {\n      return line.url;\n    },\n    $signature: 250\n  };\n  U.Highlighter__collateLines_closure.prototype = {\n    call$1: function(highlight) {\n      return J.get$sourceUrl$x(highlight.get$span());\n    },\n    $signature: 41\n  };\n  U.Highlighter__collateLines_closure0.prototype = {\n    call$2: function(highlight1, highlight2) {\n      return highlight1.span.compareTo$1(0, highlight2.span);\n    },\n    $signature: 251\n  };\n  U.Highlighter__collateLines_closure1.prototype = {\n    call$1: function(highlightsForFile) {\n      var t1, t2, t3, t4, context, t5, linesBeforeSpan, url, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength,\n        lines = H.setRuntimeTypeInfo([], type$.JSArray_legacy__Line);\n      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray_legacy__Highlight; t2.moveNext$0();) {\n        t4 = t2.get$current(t2).span;\n        context = t4.get$context(t4);\n        t5 = C.JSString_methods.allMatches$1(\"\\n\", C.JSString_methods.substring$2(context, 0, B.findLineStart(context, t4.get$text(), t4.get$start(t4).get$column())));\n        linesBeforeSpan = t5.get$length(t5);\n        url = t4.get$sourceUrl(t4);\n        lineNumber = t4.get$start(t4).get$line() - linesBeforeSpan;\n        for (t4 = context.split(\"\\n\"), t5 = t4.length, _i = 0; _i < t5; ++_i) {\n          line = t4[_i];\n          if (lines.length === 0 || lineNumber > C.JSArray_methods.get$last(lines).number)\n            lines.push(new U._Line(line, lineNumber, url, H.setRuntimeTypeInfo([], t3)));\n          ++lineNumber;\n        }\n      }\n      activeHighlights = H.setRuntimeTypeInfo([], t3);\n      for (t2 = lines.length, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, H.throwConcurrentModificationError)(lines), ++_i) {\n        line = lines[_i];\n        if (!!activeHighlights.fixed$length)\n          H.throwExpression(P.UnsupportedError$(\"removeWhere\"));\n        C.JSArray_methods._removeWhere$2(activeHighlights, new U.Highlighter__collateLines__closure(line), true);\n        oldHighlightLength = activeHighlights.length;\n        for (t3 = t1.skip$1(highlightsForFile, highlightIndex), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n          t4 = t3.get$current(t3);\n          t5 = t4.span;\n          if (t5.get$start(t5).get$line() > line.number)\n            break;\n          if (!J.$eq$(t5.get$sourceUrl(t5), line.url))\n            break;\n          activeHighlights.push(t4);\n        }\n        highlightIndex += activeHighlights.length - oldHighlightLength;\n        C.JSArray_methods.addAll$1(line.highlights, activeHighlights);\n      }\n      return lines;\n    },\n    $signature: 252\n  };\n  U.Highlighter__collateLines__closure.prototype = {\n    call$1: function(highlight) {\n      var t1 = highlight.span,\n        t2 = this.line;\n      return !J.$eq$(t1.get$sourceUrl(t1), t2.url) || t1.get$end(t1).get$line() < t2.number;\n    },\n    $signature: 119\n  };\n  U.Highlighter_highlight_closure.prototype = {\n    call$1: function(highlight) {\n      return highlight.isPrimary;\n    },\n    $signature: 119\n  };\n  U.Highlighter_highlight_closure0.prototype = {\n    call$0: function() {\n      return null;\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeFileStart_closure.prototype = {\n    call$0: function() {\n      this.$this._highlighter$_buffer._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 2) + \">\";\n      return null;\n    },\n    $signature: 1\n  };\n  U.Highlighter__writeMultilineHighlights_closure.prototype = {\n    call$0: function() {\n      var t1 = $._glyphs;\n      t1 = this.startLine === this.line.number ? t1.get$topLeftCorner() : t1.get$bottomLeftCorner();\n      this.$this._highlighter$_buffer._contents += t1;\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeMultilineHighlights_closure0.prototype = {\n    call$0: function() {\n      var t1 = $._glyphs;\n      t1 = this.highlight == null ? t1.get$horizontalLine() : t1.get$cross();\n      this.$this._highlighter$_buffer._contents += t1;\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeMultilineHighlights_closure1.prototype = {\n    call$0: function() {\n      this.$this._highlighter$_buffer._contents += $._glyphs.get$horizontalLine();\n      return null;\n    },\n    $signature: 1\n  };\n  U.Highlighter__writeMultilineHighlights_closure2.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this._box_0,\n        t2 = t1.openedOnThisLine,\n        t3 = $._glyphs,\n        vertical = t2 ? t3.get$cross() : t3.get$verticalLine();\n      if (_this.current != null)\n        _this.$this._highlighter$_buffer._contents += vertical;\n      else {\n        t2 = _this.line;\n        t3 = t2.number;\n        if (_this.startLine === t3) {\n          t2 = _this.$this;\n          t2._colorize$2$color(new U.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor);\n          t1.openedOnThisLine = true;\n          if (t1.openedOnThisLineColor == null)\n            t1.openedOnThisLineColor = _this.highlight.isPrimary ? t2._primaryColor : t2._secondaryColor;\n        } else {\n          if (_this.endLine === t3) {\n            t3 = _this.highlight.span;\n            t2 = t3.get$end(t3).get$column() === t2.text.length;\n          } else\n            t2 = false;\n          t3 = _this.$this;\n          if (t2) {\n            t1 = _this.highlight.label == null ? $._glyphs.glyphOrAscii$2(\"\\u2514\", \"\\\\\") : vertical;\n            t3._highlighter$_buffer._contents += t1;\n          } else\n            t3._colorize$2$color(new U.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor);\n        }\n      }\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeMultilineHighlights__closure.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.openedOnThisLine ? \"\\u252c\" : \"\\u250c\";\n      this.$this._highlighter$_buffer._contents += $._glyphs.glyphOrAscii$2(t1, \"/\");\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeMultilineHighlights__closure0.prototype = {\n    call$0: function() {\n      this.$this._highlighter$_buffer._contents += this.vertical;\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeHighlightedText_closure.prototype = {\n    call$0: function() {\n      var _this = this;\n      return _this.$this._writeText$1(C.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));\n    },\n    $signature: 1\n  };\n  U.Highlighter__writeIndicator_closure.prototype = {\n    call$0: function() {\n      var tabsBefore, tabsInside,\n        t1 = this.$this,\n        t2 = this.highlight,\n        t3 = t2.span,\n        t4 = t2.isPrimary ? \"^\" : $._glyphs.get$horizontalLineBold(),\n        startColumn = t3.get$start(t3).get$column(),\n        endColumn = t3.get$end(t3).get$column();\n      t3 = this.line.text;\n      tabsBefore = t1._countTabs$1(J.getInterceptor$s(t3).substring$2(t3, 0, startColumn));\n      tabsInside = t1._countTabs$1(C.JSString_methods.substring$2(t3, startColumn, endColumn));\n      startColumn += tabsBefore * 3;\n      t3 = t1._highlighter$_buffer;\n      t3._contents += C.JSString_methods.$mul(\" \", startColumn);\n      t3._contents += C.JSString_methods.$mul(t4, Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));\n      t1._writeLabel$1(t2.label);\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeIndicator_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.highlight.span;\n      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());\n    },\n    $signature: 1\n  };\n  U.Highlighter__writeIndicator_closure1.prototype = {\n    call$0: function() {\n      var t2, _this = this,\n        t1 = _this.$this;\n      if (_this.coversWholeLine)\n        t1._highlighter$_buffer._contents += C.JSString_methods.$mul($._glyphs.get$horizontalLine(), 3);\n      else {\n        t2 = _this.highlight.span;\n        t1._writeArrow$3$beginning(_this.line, Math.max(t2.get$end(t2).get$column() - 1, 0), false);\n      }\n      t1._writeLabel$1(_this.highlight.label);\n    },\n    $signature: 0\n  };\n  U.Highlighter__writeSidebar_closure.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._highlighter$_buffer,\n        t3 = this._box_0.text;\n      if (t3 == null)\n        t3 = \"\";\n      t2._contents += C.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);\n      t1 = this.end;\n      t2._contents += t1 == null ? $._glyphs.get$verticalLine() : t1;\n    },\n    $signature: 0\n  };\n  U._Highlight.prototype = {\n    toString$0: function(_) {\n      var t1 = this.isPrimary ? \"primary \" : \"\",\n        t2 = this.span;\n      t2 = t1 + (H.S(t2.get$start(t2).get$line()) + \":\" + t2.get$start(t2).get$column() + \"-\" + H.S(t2.get$end(t2).get$line()) + \":\" + t2.get$end(t2).get$column());\n      t1 = this.label;\n      t1 = t1 != null ? t2 + (\" (\" + t1 + \")\") : t2;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U._Highlight_closure.prototype = {\n    call$0: function() {\n      var t2, t3, t4, t5,\n        t1 = this.span;\n      if (!(type$.legacy_SourceSpanWithContext._is(t1) && B.findLineStart(t1.get$context(t1), t1.get$text(), t1.get$start(t1).get$column()) != null)) {\n        t2 = V.SourceLocation$(t1.get$start(t1).get$offset(), 0, 0, t1.get$sourceUrl(t1));\n        t3 = t1.get$end(t1).get$offset();\n        t4 = t1.get$sourceUrl(t1);\n        t5 = B.countCodeUnits(t1.get$text(), 10);\n        t1 = X.SourceSpanWithContext$(t2, V.SourceLocation$(t3, U._Highlight__lastLineLength(t1.get$text()), t5, t4), t1.get$text(), t1.get$text());\n      }\n      return U._Highlight__normalizeEndOfLine(U._Highlight__normalizeTrailingNewline(U._Highlight__normalizeNewlines(t1)));\n    },\n    $signature: 253\n  };\n  U._Line.prototype = {\n    toString$0: function(_) {\n      return \"\" + this.number + ': \"' + H.S(this.text) + '\" (' + C.JSArray_methods.join$1(this.highlights, \", \") + \")\";\n    }\n  };\n  V.SourceLocation.prototype = {\n    distance$1: function(other) {\n      var t1 = this.sourceUrl;\n      if (!J.$eq$(t1, other.get$sourceUrl(other)))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(t1) + '\" and \"' + H.S(other.get$sourceUrl(other)) + \"\\\" don't match.\"));\n      return Math.abs(this.offset - other.get$offset());\n    },\n    compareTo$1: function(_, other) {\n      var t1 = this.sourceUrl;\n      if (!J.$eq$(t1, other.get$sourceUrl(other)))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(t1) + '\" and \"' + H.S(other.get$sourceUrl(other)) + \"\\\" don't match.\"));\n      return this.offset - other.get$offset();\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return type$.legacy_SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl(other)) && this.offset === other.get$offset();\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.sourceUrl) + this.offset;\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = \"<\" + H.getRuntimeType(_this).toString$0(0) + \": \" + _this.offset + \" \",\n        source = _this.sourceUrl;\n      return t1 + (H.S(source == null ? \"unknown source\" : source) + \":\" + (_this.line + 1) + \":\" + (_this.column + 1)) + \">\";\n    },\n    $isComparable: 1,\n    get$sourceUrl: function(receiver) {\n      return this.sourceUrl;\n    },\n    get$offset: function() {\n      return this.offset;\n    },\n    get$line: function() {\n      return this.line;\n    },\n    get$column: function() {\n      return this.column;\n    }\n  };\n  D.SourceLocationMixin.prototype = {\n    distance$1: function(other) {\n      var _this = this;\n      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(_this.get$sourceUrl(_this)) + '\" and \"' + H.S(other.get$sourceUrl(other)) + \"\\\" don't match.\"));\n      return Math.abs(_this.offset - other.get$offset());\n    },\n    compareTo$1: function(_, other) {\n      var _this = this;\n      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(_this.get$sourceUrl(_this)) + '\" and \"' + H.S(other.get$sourceUrl(other)) + \"\\\" don't match.\"));\n      return _this.offset - other.get$offset();\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return type$.legacy_SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl(other)) && this.offset === other.get$offset();\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.file.url) + this.offset;\n    },\n    toString$0: function(_) {\n      var t1 = this.offset,\n        t2 = \"<\" + H.getRuntimeType(this).toString$0(0) + \": \" + t1 + \" \",\n        t3 = this.file,\n        source = t3.url;\n      return t2 + (H.S(source == null ? \"unknown source\" : source) + \":\" + (t3.getLine$1(t1) + 1) + \":\" + (t3.getColumn$1(t1) + 1)) + \">\";\n    },\n    $isComparable: 1,\n    $isSourceLocation: 1\n  };\n  V.SourceSpanBase.prototype = {\n    SourceSpanBase$3: function(start, end, text) {\n      var t3,\n        t1 = this.end,\n        t2 = this.start;\n      if (!J.$eq$(t1.get$sourceUrl(t1), t2.get$sourceUrl(t2)))\n        throw H.wrapException(P.ArgumentError$('Source URLs \"' + H.S(t2.get$sourceUrl(t2)) + '\" and  \"' + H.S(t1.get$sourceUrl(t1)) + \"\\\" don't match.\"));\n      else if (t1.get$offset() < t2.get$offset())\n        throw H.wrapException(P.ArgumentError$(\"End \" + t1.toString$0(0) + \" must come after start \" + t2.toString$0(0) + \".\"));\n      else {\n        t3 = this.text;\n        if (t3.length !== t2.distance$1(t1))\n          throw H.wrapException(P.ArgumentError$('Text \"' + t3 + '\" must be ' + t2.distance$1(t1) + \" characters long.\"));\n      }\n    },\n    get$start: function(receiver) {\n      return this.start;\n    },\n    get$end: function(receiver) {\n      return this.end;\n    },\n    get$text: function() {\n      return this.text;\n    }\n  };\n  G.SourceSpanException.prototype = {\n    get$message: function(_) {\n      return this._span_exception$_message;\n    },\n    get$span: function() {\n      return this._span;\n    },\n    toString$1$color: function(_, color) {\n      var _this = this;\n      if (_this.get$span() == null)\n        return _this._span_exception$_message;\n      return \"Error on \" + _this.get$span().message$2$color(0, _this._span_exception$_message, color);\n    },\n    toString$0: function($receiver) {\n      return this.toString$1$color($receiver, null);\n    },\n    $isException: 1\n  };\n  G.SourceSpanFormatException.prototype = {$isFormatException: 1,\n    get$source: function() {\n      return this.source;\n    }\n  };\n  Y.SourceSpanMixin.prototype = {\n    get$sourceUrl: function(_) {\n      var t1 = this.get$start(this);\n      return t1.get$sourceUrl(t1);\n    },\n    get$length: function(_) {\n      var _this = this;\n      return _this.get$end(_this).get$offset() - _this.get$start(_this).get$offset();\n    },\n    compareTo$1: function(_, other) {\n      var _this = this,\n        result = _this.get$start(_this).compareTo$1(0, other.get$start(other));\n      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;\n    },\n    message$2$color: function(_, message, color) {\n      var t2, highlight, _this = this,\n        t1 = \"line \" + (_this.get$start(_this).get$line() + 1) + \", column \" + (_this.get$start(_this).get$column() + 1);\n      if (_this.get$sourceUrl(_this) != null) {\n        t2 = _this.get$sourceUrl(_this);\n        t2 = t1 + (\" of \" + H.S($.$get$context().prettyUri$1(t2)));\n        t1 = t2;\n      }\n      t1 += \": \" + H.S(message);\n      highlight = _this.highlight$1$color(color);\n      if (highlight.length !== 0)\n        t1 = t1 + \"\\n\" + highlight;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    message$1: function($receiver, message) {\n      return this.message$2$color($receiver, message, null);\n    },\n    highlight$1$color: function(color) {\n      var _this = this;\n      if (!type$.legacy_SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)\n        return \"\";\n      return U.Highlighter$(_this, color).highlight$0();\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return type$.legacy_SourceSpan._is(other) && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));\n    },\n    get$hashCode: function(_) {\n      var t2, _this = this,\n        t1 = _this.get$start(_this);\n      t1 = t1.get$hashCode(t1);\n      t2 = _this.get$end(_this);\n      return t1 + 31 * t2.get$hashCode(t2);\n    },\n    toString$0: function(_) {\n      var _this = this;\n      return \"<\" + H.getRuntimeType(_this).toString$0(0) + \": from \" + _this.get$start(_this).toString$0(0) + \" to \" + _this.get$end(_this).toString$0(0) + ' \"' + _this.get$text() + '\">';\n    },\n    $isComparable: 1,\n    $isSourceSpan: 1\n  };\n  X.SourceSpanWithContext.prototype = {\n    get$context: function(_) {\n      return this._context;\n    }\n  };\n  U.Chain.prototype = {\n    toTrace$0: function() {\n      var t1 = this.traces;\n      return new Y.Trace(P.List_List$unmodifiable(new H.ExpandIterable(t1, new U.Chain_toTrace_closure(), H._arrayInstanceType(t1)._eval$1(\"ExpandIterable<1,Frame*>\")), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    toString$0: function(_) {\n      var t1 = this.traces,\n        t2 = H._arrayInstanceType(t1);\n      return new H.MappedListIterable(t1, new U.Chain_toString_closure(new H.MappedListIterable(t1, new U.Chain_toString_closure0(), t2._eval$1(\"MappedListIterable<1,int*>\")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int))), t2._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, string$.x3d_____);\n    },\n    $isStackTrace: 1\n  };\n  U.Chain_Chain$parse_closure.prototype = {\n    call$1: function(line) {\n      return line.length !== 0;\n    },\n    $signature: 5\n  };\n  U.Chain_Chain$parse_closure0.prototype = {\n    call$1: function(trace) {\n      return new Y.Trace(P.List_List$unmodifiable(Y.Trace__parseVM(trace), type$.legacy_Frame), new P._StringStackTrace(trace));\n    },\n    $signature: 127\n  };\n  U.Chain_Chain$parse_closure1.prototype = {\n    call$1: function(trace) {\n      return Y.Trace$parseFriendly(trace);\n    },\n    $signature: 127\n  };\n  U.Chain_toTrace_closure.prototype = {\n    call$1: function(trace) {\n      return trace.get$frames();\n    },\n    $signature: 256\n  };\n  U.Chain_toString_closure0.prototype = {\n    call$1: function(trace) {\n      var t1 = trace.get$frames();\n      return new H.MappedListIterable(t1, new U.Chain_toString__closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,int*>\")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int));\n    },\n    $signature: 257\n  };\n  U.Chain_toString__closure0.prototype = {\n    call$1: function(frame) {\n      return frame.get$location().length;\n    },\n    $signature: 128\n  };\n  U.Chain_toString_closure.prototype = {\n    call$1: function(trace) {\n      var t1 = trace.get$frames();\n      return new H.MappedListIterable(t1, new U.Chain_toString__closure(this.longest), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    $signature: 259\n  };\n  U.Chain_toString__closure.prototype = {\n    call$1: function(frame) {\n      return J.padRight$1$s(frame.get$location(), this.longest) + \"  \" + H.S(frame.get$member()) + \"\\n\";\n    },\n    $signature: 129\n  };\n  A.Frame.prototype = {\n    get$isCore: function() {\n      return this.uri.get$scheme() === \"dart\";\n    },\n    get$library: function() {\n      var t1 = this.uri;\n      if (t1.get$scheme() === \"data\")\n        return \"data:...\";\n      return $.$get$context().prettyUri$1(t1);\n    },\n    get$$package: function() {\n      var t1 = this.uri;\n      if (t1.get$scheme() !== \"package\")\n        return null;\n      return C.JSArray_methods.get$first(t1.get$path(t1).split(\"/\"));\n    },\n    get$location: function() {\n      var t2, _this = this,\n        t1 = _this.line;\n      if (t1 == null)\n        return _this.get$library();\n      t2 = _this.column;\n      if (t2 == null)\n        return H.S(_this.get$library()) + \" \" + H.S(t1);\n      return H.S(_this.get$library()) + \" \" + H.S(t1) + \":\" + H.S(t2);\n    },\n    toString$0: function(_) {\n      return H.S(this.get$location()) + \" in \" + H.S(this.member);\n    },\n    get$uri: function() {\n      return this.uri;\n    },\n    get$line: function() {\n      return this.line;\n    },\n    get$column: function() {\n      return this.column;\n    },\n    get$member: function() {\n      return this.member;\n    }\n  };\n  A.Frame_Frame$parseVM_closure.prototype = {\n    call$0: function() {\n      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,\n        t1 = this.frame;\n      if (t1 === \"...\")\n        return new A.Frame(P._Uri__Uri(_null, _null, _null, _null), _null, _null, \"...\");\n      match = $.$get$_vmFrame().firstMatch$1(t1);\n      if (match == null)\n        return new N.UnparsedFrame(P._Uri__Uri(_null, \"unparsed\", _null, _null), t1);\n      t1 = match._match;\n      t2 = t1[1];\n      t3 = $.$get$_asyncBody();\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, t3, \"<async>\");\n      member = H.stringReplaceAllUnchecked(t2, \"<anonymous closure>\", \"<fn>\");\n      t2 = t1[2];\n      uri = J.startsWith$1$s(t2, \"<data:\") ? P.Uri_Uri$dataFromString(\"\", _null, _null) : P.Uri_parse(t2);\n      lineAndColumn = t1[3].split(\":\");\n      t1 = lineAndColumn.length;\n      line = t1 > 1 ? P.int_parse(lineAndColumn[1], _null) : _null;\n      return new A.Frame(uri, line, t1 > 2 ? P.int_parse(lineAndColumn[2], _null) : _null, member);\n    },\n    $signature: 58\n  };\n  A.Frame_Frame$parseV8_closure.prototype = {\n    call$0: function() {\n      var t2, t3, _s4_ = \"<fn>\",\n        t1 = this.frame,\n        match = $.$get$_v8Frame().firstMatch$1(t1);\n      if (match == null)\n        return new N.UnparsedFrame(P._Uri__Uri(null, \"unparsed\", null, null), t1);\n      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);\n      t2 = match._match;\n      t3 = t2[2];\n      if (t3 != null) {\n        t2 = t2[1];\n        t2.toString;\n        t2 = H.stringReplaceAllUnchecked(t2, \"<anonymous>\", _s4_);\n        t2 = H.stringReplaceAllUnchecked(t2, \"Anonymous function\", _s4_);\n        return t1.call$2(t3, H.stringReplaceAllUnchecked(t2, \"(anonymous function)\", _s4_));\n      } else\n        return t1.call$2(t2[3], _s4_);\n    },\n    $signature: 58\n  };\n  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {\n    call$2: function($location, member) {\n      var urlMatch, uri, line, _null = null,\n        t1 = $.$get$_v8EvalLocation(),\n        evalMatch = t1.firstMatch$1($location);\n      for (; evalMatch != null;) {\n        $location = evalMatch._match[1];\n        evalMatch = t1.firstMatch$1($location);\n      }\n      if ($location === \"native\")\n        return new A.Frame(P.Uri_parse(\"native\"), _null, _null, member);\n      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);\n      if (urlMatch == null)\n        return new N.UnparsedFrame(P._Uri__Uri(_null, \"unparsed\", _null, _null), this.frame);\n      t1 = urlMatch._match;\n      uri = A.Frame__uriOrPathToUri(t1[1]);\n      line = P.int_parse(t1[2], _null);\n      t1 = t1[3];\n      return new A.Frame(uri, line, t1 != null ? P.int_parse(t1, _null) : _null, member);\n    },\n    $signature: 262\n  };\n  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {\n    call$0: function() {\n      var t2, member, uri, line, _null = null,\n        t1 = this.frame,\n        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);\n      if (match == null)\n        return new N.UnparsedFrame(P._Uri__Uri(_null, \"unparsed\", _null, _null), t1);\n      t1 = match._match;\n      t2 = t1[1];\n      t2.toString;\n      member = H.stringReplaceAllUnchecked(t2, \"/<\", \"\");\n      uri = A.Frame__uriOrPathToUri(t1[2]);\n      line = P.int_parse(t1[3], _null);\n      return new A.Frame(uri, line, _null, member.length === 0 || member === \"anonymous\" ? \"<fn>\" : member);\n    },\n    $signature: 58\n  };\n  A.Frame_Frame$parseFirefox_closure.prototype = {\n    call$0: function() {\n      var t2, t3, uri, member, line, _null = null,\n        t1 = this.frame,\n        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);\n      if (match == null)\n        return new N.UnparsedFrame(P._Uri__Uri(_null, \"unparsed\", _null, _null), t1);\n      t2 = match._match;\n      t3 = t2[3];\n      if (J.contains$1$asx(t3, \" line \"))\n        return A.Frame_Frame$_parseFirefoxEval(t1);\n      uri = A.Frame__uriOrPathToUri(t3);\n      t1 = t2[1];\n      if (t1 != null) {\n        t3 = C.JSString_methods.allMatches$1(\"/\", t2[2]);\n        member = J.$add$ansx(t1, C.JSArray_methods.join$0(P.List_List$filled(t3.get$length(t3), \".<fn>\", false, type$.legacy_String)));\n        if (member === \"\")\n          member = \"<fn>\";\n        member = C.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), \"\");\n      } else\n        member = \"<fn>\";\n      t1 = t2[4];\n      line = t1 === \"\" ? _null : P.int_parse(t1, _null);\n      t1 = t2[5];\n      return new A.Frame(uri, line, t1 == null || t1 === \"\" ? _null : P.int_parse(t1, _null), member);\n    },\n    $signature: 58\n  };\n  A.Frame_Frame$parseFriendly_closure.prototype = {\n    call$0: function() {\n      var t2, uri, line, column, _null = null,\n        t1 = this.frame,\n        match = $.$get$_friendlyFrame().firstMatch$1(t1);\n      if (match == null)\n        throw H.wrapException(P.FormatException$(\"Couldn't parse package:stack_trace stack trace line '\" + H.S(t1) + \"'.\", _null, _null));\n      t1 = match._match;\n      t2 = t1[1];\n      uri = t2 === \"data:...\" ? P.Uri_Uri$dataFromString(\"\", _null, _null) : P.Uri_parse(t2);\n      if (uri.get$scheme() === \"\") {\n        t2 = $.$get$context();\n        uri = t2.toUri$1(D.absolute(t2.style.pathFromUri$1(M._parseUri(uri))));\n      }\n      t2 = t1[2];\n      line = t2 == null ? _null : P.int_parse(t2, _null);\n      t2 = t1[3];\n      column = t2 == null ? _null : P.int_parse(t2, _null);\n      return new A.Frame(uri, line, column, t1[4]);\n    },\n    $signature: 58\n  };\n  T.LazyTrace.prototype = {\n    get$_lazy_trace$_trace: function() {\n      var t1 = this._lazy_trace$_inner;\n      return t1 == null ? this._lazy_trace$_inner = this._thunk.call$0() : t1;\n    },\n    get$frames: function() {\n      return this.get$_lazy_trace$_trace().get$frames();\n    },\n    get$terse: function() {\n      return new T.LazyTrace(new T.LazyTrace_terse_closure(this));\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.get$_lazy_trace$_trace());\n    },\n    $isStackTrace: 1,\n    $isTrace: 1\n  };\n  T.LazyTrace_terse_closure.prototype = {\n    call$0: function() {\n      return this.$this.get$_lazy_trace$_trace().get$terse();\n    },\n    $signature: 131\n  };\n  Y.Trace.prototype = {\n    get$terse: function() {\n      return this.foldFrames$2$terse(new Y.Trace_terse_closure(), true);\n    },\n    foldFrames$2$terse: function(predicate, terse) {\n      var newFrames, t1, cur, _box_0 = {};\n      _box_0.predicate = predicate;\n      _box_0.predicate = new Y.Trace_foldFrames_closure(predicate);\n      newFrames = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      for (t1 = this.frames, t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        if (cur instanceof N.UnparsedFrame || !_box_0.predicate.call$1(cur))\n          newFrames.push(cur);\n        else if (newFrames.length === 0 || !_box_0.predicate.call$1(C.JSArray_methods.get$last(newFrames)))\n          newFrames.push(new A.Frame(cur.get$uri(), cur.get$line(), cur.get$column(), cur.get$member()));\n      }\n      t1 = type$.MappedListIterable_of_legacy_Frame_and_legacy_Frame;\n      newFrames = P.List_List$from(new H.MappedListIterable(newFrames, new Y.Trace_foldFrames_closure0(_box_0), t1), true, t1._eval$1(\"ListIterable.E\"));\n      if (newFrames.length > 1 && _box_0.predicate.call$1(C.JSArray_methods.get$first(newFrames)))\n        C.JSArray_methods.removeAt$1(newFrames, 0);\n      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(newFrames, H._arrayInstanceType(newFrames)._eval$1(\"ReversedListIterable<1>\")), type$.legacy_Frame), new P._StringStackTrace(this.original._stackTrace));\n    },\n    toString$0: function(_) {\n      var t1 = this.frames,\n        t2 = H._arrayInstanceType(t1);\n      return new H.MappedListIterable(t1, new Y.Trace_toString_closure(new H.MappedListIterable(t1, new Y.Trace_toString_closure0(), t2._eval$1(\"MappedListIterable<1,int*>\")).fold$2(0, 0, H.instantiate1(P.math__max$closure(), type$.legacy_int))), t2._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    $isStackTrace: 1,\n    get$frames: function() {\n      return this.frames;\n    }\n  };\n  Y.Trace_Trace$from_closure.prototype = {\n    call$0: function() {\n      return Y.Trace_Trace$parse(this.trace.toString$0(0));\n    },\n    $signature: 131\n  };\n  Y.Trace__parseVM_closure.prototype = {\n    call$1: function(line) {\n      return line.length !== 0;\n    },\n    $signature: 5\n  };\n  Y.Trace__parseVM_closure0.prototype = {\n    call$1: function(line) {\n      return A.Frame_Frame$parseVM(line);\n    },\n    $signature: 57\n  };\n  Y.Trace$parseV8_closure.prototype = {\n    call$1: function(line) {\n      return !J.startsWith$1$s(line, $.$get$_v8TraceLine());\n    },\n    $signature: 5\n  };\n  Y.Trace$parseV8_closure0.prototype = {\n    call$1: function(line) {\n      return A.Frame_Frame$parseV8(line);\n    },\n    $signature: 57\n  };\n  Y.Trace$parseJSCore_closure.prototype = {\n    call$1: function(line) {\n      return line !== \"\\tat \";\n    },\n    $signature: 5\n  };\n  Y.Trace$parseJSCore_closure0.prototype = {\n    call$1: function(line) {\n      return A.Frame_Frame$parseV8(line);\n    },\n    $signature: 57\n  };\n  Y.Trace$parseFirefox_closure.prototype = {\n    call$1: function(line) {\n      return line.length !== 0 && line !== \"[native code]\";\n    },\n    $signature: 5\n  };\n  Y.Trace$parseFirefox_closure0.prototype = {\n    call$1: function(line) {\n      return A.Frame_Frame$parseFirefox(line);\n    },\n    $signature: 57\n  };\n  Y.Trace$parseFriendly_closure.prototype = {\n    call$1: function(line) {\n      return !J.startsWith$1$s(line, \"=====\");\n    },\n    $signature: 5\n  };\n  Y.Trace$parseFriendly_closure0.prototype = {\n    call$1: function(line) {\n      return A.Frame_Frame$parseFriendly(line);\n    },\n    $signature: 57\n  };\n  Y.Trace_terse_closure.prototype = {\n    call$1: function(_) {\n      return false;\n    },\n    $signature: 133\n  };\n  Y.Trace_foldFrames_closure.prototype = {\n    call$1: function(frame) {\n      if (this.oldPredicate.call$1(frame))\n        return true;\n      if (frame.get$isCore())\n        return true;\n      if (frame.get$$package() === \"stack_trace\")\n        return true;\n      if (!J.contains$1$asx(frame.get$member(), \"<async>\"))\n        return false;\n      return frame.get$line() == null;\n    },\n    $signature: 133\n  };\n  Y.Trace_foldFrames_closure0.prototype = {\n    call$1: function(frame) {\n      var t1, t2;\n      if (frame instanceof N.UnparsedFrame || !this._box_0.predicate.call$1(frame))\n        return frame;\n      t1 = frame.get$library();\n      t2 = $.$get$_terseRegExp();\n      t1.toString;\n      return new A.Frame(P.Uri_parse(H.stringReplaceAllUnchecked(t1, t2, \"\")), null, null, frame.get$member());\n    },\n    $signature: 266\n  };\n  Y.Trace_toString_closure0.prototype = {\n    call$1: function(frame) {\n      return frame.get$location().length;\n    },\n    $signature: 128\n  };\n  Y.Trace_toString_closure.prototype = {\n    call$1: function(frame) {\n      if (frame instanceof N.UnparsedFrame)\n        return frame.toString$0(0) + \"\\n\";\n      return J.padRight$1$s(frame.get$location(), this.longest) + \"  \" + H.S(frame.get$member()) + \"\\n\";\n    },\n    $signature: 129\n  };\n  N.UnparsedFrame.prototype = {\n    toString$0: function(_) {\n      return this.member;\n    },\n    $isFrame: 1,\n    get$uri: function() {\n      return this.uri;\n    },\n    get$line: function() {\n      return null;\n    },\n    get$column: function() {\n      return null;\n    },\n    get$isCore: function() {\n      return false;\n    },\n    get$library: function() {\n      return \"unparsed\";\n    },\n    get$$package: function() {\n      return null;\n    },\n    get$location: function() {\n      return \"unparsed\";\n    },\n    get$member: function() {\n      return this.member;\n    }\n  };\n  L._StreamTransformer.prototype = {\n    bind$1: function(values) {\n      var controller, _null = null, t1 = {},\n        t2 = this.$ti;\n      if (values.get$isBroadcast())\n        controller = new P._SyncBroadcastStreamController(_null, _null, t2._eval$1(\"_SyncBroadcastStreamController<2*>\"));\n      else\n        controller = P.StreamController_StreamController(_null, _null, _null, _null, true, t2._eval$1(\"2*\"));\n      t1.subscription = null;\n      controller.set$onListen(new L._StreamTransformer_bind_closure(t1, this, values, controller));\n      return controller.get$stream();\n    }\n  };\n  L._StreamTransformer_bind_closure.prototype = {\n    call$0: function() {\n      var t2, t3, t4, t5, _this = this, t1 = {};\n      t1.valuesDone = false;\n      t2 = _this.values;\n      t3 = _this.$this;\n      t4 = _this.controller;\n      t5 = _this._box_1;\n      t5.subscription = t2.listen$3$onDone$onError(0, new L._StreamTransformer_bind__closure(t3, t4), new L._StreamTransformer_bind__closure0(t1, t3, t4), new L._StreamTransformer_bind__closure1(t3, t4));\n      if (!t2.get$isBroadcast()) {\n        t2 = t5.subscription;\n        t4.set$onPause(t2.get$pause(t2));\n        t2 = t5.subscription;\n        t4.set$onResume(t2.get$resume(t2));\n      }\n      t4.set$onCancel(new L._StreamTransformer_bind__closure2(t5, t1));\n    },\n    $signature: 0\n  };\n  L._StreamTransformer_bind__closure.prototype = {\n    call$1: function(value) {\n      return this.$this._from_handlers$_handleData.call$2(value, this.controller);\n    },\n    $signature: function() {\n      return this.$this.$ti._eval$1(\"~(1*)\");\n    }\n  };\n  L._StreamTransformer_bind__closure1.prototype = {\n    call$2: function(error, stackTrace) {\n      this.$this._from_handlers$_handleError.call$3(error, stackTrace, this.controller);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 189\n  };\n  L._StreamTransformer_bind__closure0.prototype = {\n    call$0: function() {\n      this._box_0.valuesDone = true;\n      this.$this._from_handlers$_handleDone.call$1(this.controller);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  L._StreamTransformer_bind__closure2.prototype = {\n    call$0: function() {\n      var t1 = this._box_1,\n        toCancel = t1.subscription;\n      t1.subscription = null;\n      if (!this._box_0.valuesDone)\n        return toCancel.cancel$0();\n      return null;\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 267\n  };\n  R._debounceAggregate_closure.prototype = {\n    call$2: function(value, sink) {\n      var soFar, _this = this,\n        t1 = _this._box_0,\n        t2 = t1.timer;\n      if (t2 != null)\n        t2.cancel$0();\n      soFar = _this.collect.call$2(value, t1.soFar);\n      t1.soFar = soFar;\n      if (t1.timer == null && _this.leading) {\n        t1.emittedLatestAsLeading = true;\n        sink.add$1(0, soFar);\n      } else\n        t1.emittedLatestAsLeading = false;\n      t1.timer = P.Timer_Timer(_this.duration, new R._debounceAggregate__closure(t1, _this.trailing, sink));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: function() {\n      return this.T._eval$1(\"@<0>\")._bind$1(this.R)._eval$1(\"Null(1*,EventSink<2*>*)\");\n    }\n  };\n  R._debounceAggregate__closure.prototype = {\n    call$0: function() {\n      var t1 = this._box_0,\n        t2 = t1.emittedLatestAsLeading;\n      if (!t2)\n        this.sink.add$1(0, t1.soFar);\n      if (t1.shouldClose)\n        this.sink.close$0(0);\n      t1.timer = t1.soFar = null;\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  R._debounceAggregate_closure0.prototype = {\n    call$1: function(sink) {\n      var t1 = this._box_0;\n      if (t1.soFar != null && this.trailing)\n        t1.shouldClose = true;\n      else {\n        t1 = t1.timer;\n        if (t1 != null)\n          t1.cancel$0();\n        sink.close$0(0);\n      }\n    },\n    $signature: function() {\n      return this.R._eval$1(\"Null(EventSink<0*>*)\");\n    }\n  };\n  E.StringScannerException.prototype = {\n    get$source: function() {\n      return H._asStringS(this.source);\n    }\n  };\n  Z.LineScanner.prototype = {\n    get$_betweenCRLF: function() {\n      return this.peekChar$1(-1) === 13 && this.peekChar$0() === 10;\n    },\n    scanChar$1: function(character) {\n      if (!this.super$StringScanner$scanChar(character))\n        return false;\n      this._adjustLineAndColumn$1(character);\n      return true;\n    },\n    _adjustLineAndColumn$1: function(character) {\n      var t1, _this = this;\n      if (character !== 10)\n        t1 = character === 13 && _this.peekChar$0() !== 10;\n      else\n        t1 = true;\n      if (t1) {\n        ++_this._line_scanner$_line;\n        _this._line_scanner$_column = 0;\n      } else\n        ++_this._line_scanner$_column;\n    },\n    scan$1: function(pattern) {\n      var newlines, t1, t2, _this = this;\n      if (!_this.super$StringScanner$scan(pattern))\n        return false;\n      newlines = _this._newlinesIn$1(_this.get$lastMatch().group$1(0, 0));\n      t1 = _this._line_scanner$_line;\n      t2 = newlines.length;\n      _this._line_scanner$_line = t1 + t2;\n      if (t2 === 0)\n        _this._line_scanner$_column = _this._line_scanner$_column + _this.get$lastMatch().group$1(0, 0).length;\n      else\n        _this._line_scanner$_column = _this.get$lastMatch().group$1(0, 0).length - J.get$end$x(C.JSArray_methods.get$last(newlines));\n      return true;\n    },\n    _newlinesIn$1: function(text) {\n      var t1 = $.$get$_newlineRegExp().allMatches$1(0, text),\n        newlines = P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n      if (this.get$_betweenCRLF())\n        C.JSArray_methods.removeLast$0(newlines);\n      return newlines;\n    }\n  };\n  S.SpanScanner.prototype = {\n    set$state: function(state) {\n      if (!(state instanceof S._SpanScannerState) || state._scanner !== this)\n        throw H.wrapException(P.ArgumentError$(string$.The_gi));\n      this.set$position(state.position);\n    },\n    spanFrom$2: function(startState, endState) {\n      var endPosition = endState == null ? this._string_scanner$_position : endState.position;\n      return this._sourceFile.span$2(startState.position, endPosition);\n    },\n    spanFrom$1: function(startState) {\n      return this.spanFrom$2(startState, null);\n    },\n    matches$1: function(pattern) {\n      var t1, t2, _this = this;\n      if (!_this.super$StringScanner$matches(pattern))\n        return false;\n      t1 = _this._string_scanner$_position;\n      t2 = _this.get$lastMatch();\n      _this._sourceFile.span$2(t1, t2.start + t2.pattern.length);\n      return true;\n    },\n    error$3$length$position: function(_, message, $length, position) {\n      var t2, match, _this = this,\n        t1 = _this.string;\n      B.validateErrorArgs(t1, null, position, $length);\n      t2 = position == null && $length == null;\n      match = t2 ? _this.get$lastMatch() : null;\n      if (position == null)\n        position = match == null ? _this._string_scanner$_position : match.start;\n      if ($length == null)\n        if (match == null)\n          $length = 0;\n        else {\n          t2 = match.start;\n          $length = t2 + match.pattern.length - t2;\n        }\n      throw H.wrapException(E.StringScannerException$(message, _this._sourceFile.span$2(position, position + $length), t1));\n    },\n    error$1: function($receiver, message) {\n      return this.error$3$length$position($receiver, message, null, null);\n    },\n    error$2$position: function($receiver, message, position) {\n      return this.error$3$length$position($receiver, message, null, position);\n    },\n    error$2$length: function($receiver, message, $length) {\n      return this.error$3$length$position($receiver, message, $length, null);\n    }\n  };\n  S._SpanScannerState.prototype = {};\n  X.StringScanner.prototype = {\n    set$position: function(position) {\n      if (position < 0 || position > this.string.length)\n        throw H.wrapException(P.ArgumentError$(\"Invalid position \" + position));\n      this._string_scanner$_position = position;\n      this._lastMatch = null;\n    },\n    get$lastMatch: function() {\n      var _this = this;\n      if (_this._string_scanner$_position !== _this._lastMatchPosition)\n        _this._lastMatch = null;\n      return _this._lastMatch;\n    },\n    readChar$0: function() {\n      var _this = this,\n        t1 = _this._string_scanner$_position,\n        t2 = _this.string;\n      if (t1 === t2.length)\n        _this.error$3$length$position(0, \"expected more input.\", 0, t1);\n      return J.codeUnitAt$1$s(t2, _this._string_scanner$_position++);\n    },\n    peekChar$1: function(offset) {\n      var index;\n      if (offset == null)\n        offset = 0;\n      index = this._string_scanner$_position + offset;\n      if (index < 0 || index >= this.string.length)\n        return null;\n      return J.codeUnitAt$1$s(this.string, index);\n    },\n    peekChar$0: function() {\n      return this.peekChar$1(null);\n    },\n    scanChar$1: function(character) {\n      var t1 = this._string_scanner$_position,\n        t2 = this.string;\n      if (t1 === t2.length)\n        return false;\n      if (J.codeUnitAt$1$s(t2, t1) !== character)\n        return false;\n      this._string_scanner$_position = t1 + 1;\n      return true;\n    },\n    expectChar$2$name: function(character, $name) {\n      if (this.scanChar$1(character))\n        return;\n      if ($name == null)\n        if (character === 92)\n          $name = '\"\\\\\"';\n        else\n          $name = character === 34 ? '\"\\\\\"\"' : '\"' + H.Primitives_stringFromCharCode(character) + '\"';\n      this.error$3$length$position(0, \"expected \" + $name + \".\", 0, this._string_scanner$_position);\n    },\n    expectChar$1: function(character) {\n      return this.expectChar$2$name(character, null);\n    },\n    scan$1: function(pattern) {\n      var t1, _this = this,\n        success = _this.matches$1(pattern);\n      if (success) {\n        t1 = _this._lastMatch;\n        _this._lastMatchPosition = _this._string_scanner$_position = t1.start + t1.pattern.length;\n      }\n      return success;\n    },\n    expect$1: function(pattern) {\n      var t1, $name;\n      if (this.scan$1(pattern))\n        return;\n      t1 = H.stringReplaceAllUnchecked(pattern, \"\\\\\", \"\\\\\\\\\");\n      $name = '\"' + H.stringReplaceAllUnchecked(t1, '\"', '\\\\\"') + '\"';\n      this.error$3$length$position(0, \"expected \" + $name + \".\", 0, this._string_scanner$_position);\n    },\n    expectDone$0: function() {\n      var t1 = this._string_scanner$_position;\n      if (t1 === this.string.length)\n        return;\n      this.error$3$length$position(0, \"expected no more input.\", 0, t1);\n    },\n    matches$1: function(pattern) {\n      var _this = this,\n        t1 = C.JSString_methods.matchAsPrefix$2(pattern, _this.string, _this._string_scanner$_position);\n      _this._lastMatch = t1;\n      _this._lastMatchPosition = _this._string_scanner$_position;\n      return t1 != null;\n    },\n    substring$1: function(_, start) {\n      var end = this._string_scanner$_position;\n      return J.substring$2$s(this.string, start, end);\n    },\n    error$3$length$position: function(_, message, $length, position) {\n      var t1 = this.string;\n      B.validateErrorArgs(t1, null, position, $length);\n      throw H.wrapException(E.StringScannerException$(message, Y.SourceFile$fromString(t1, this.sourceUrl).span$2(position, position + $length), t1));\n    }\n  };\n  A.AsciiGlyphSet.prototype = {\n    glyphOrAscii$2: function(glyph, alternative) {\n      return alternative;\n    },\n    get$horizontalLine: function() {\n      return \"-\";\n    },\n    get$verticalLine: function() {\n      return \"|\";\n    },\n    get$topLeftCorner: function() {\n      return \",\";\n    },\n    get$bottomLeftCorner: function() {\n      return \"'\";\n    },\n    get$cross: function() {\n      return \"+\";\n    },\n    get$upEnd: function() {\n      return \"'\";\n    },\n    get$downEnd: function() {\n      return \",\";\n    },\n    get$horizontalLineBold: function() {\n      return \"=\";\n    }\n  };\n  K.UnicodeGlyphSet.prototype = {\n    glyphOrAscii$2: function(glyph, alternative) {\n      return glyph;\n    },\n    get$horizontalLine: function() {\n      return \"\\u2500\";\n    },\n    get$verticalLine: function() {\n      return \"\\u2502\";\n    },\n    get$topLeftCorner: function() {\n      return \"\\u250c\";\n    },\n    get$bottomLeftCorner: function() {\n      return \"\\u2514\";\n    },\n    get$cross: function() {\n      return \"\\u253c\";\n    },\n    get$upEnd: function() {\n      return \"\\u2575\";\n    },\n    get$downEnd: function() {\n      return \"\\u2577\";\n    },\n    get$horizontalLineBold: function() {\n      return \"\\u2501\";\n    }\n  };\n  S.Tuple2.prototype = {\n    toString$0: function(_) {\n      return \"[\" + H.S(this.item1) + \", \" + H.S(this.item2) + \"]\";\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof S.Tuple2 && J.$eq$(other.item1, this.item1) && J.$eq$(other.item2, this.item2);\n    },\n    get$hashCode: function(_) {\n      var t1 = J.get$hashCode$(this.item1),\n        t2 = J.get$hashCode$(this.item2);\n      return A._finish(A._combine(A._combine(0, C.JSInt_methods.get$hashCode(t1)), C.JSInt_methods.get$hashCode(t2)));\n    }\n  };\n  S.Tuple3.prototype = {\n    toString$0: function(_) {\n      return \"[\" + H.S(this.item1) + \", \" + this.item2.toString$0(0) + \", \" + H.S(this.item3) + \"]\";\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof S.Tuple3 && other.item1 == this.item1 && other.item2.$eq(0, this.item2) && J.$eq$(other.item3, this.item3);\n    },\n    get$hashCode: function(_) {\n      var t3,\n        t1 = J.get$hashCode$(this.item1),\n        t2 = this.item2;\n      t2 = t2.get$hashCode(t2);\n      t3 = J.get$hashCode$(this.item3);\n      return A._finish(A._combine(A._combine(A._combine(0, C.JSInt_methods.get$hashCode(t1)), C.JSInt_methods.get$hashCode(t2)), C.JSInt_methods.get$hashCode(t3)));\n    }\n  };\n  E.WatchEvent.prototype = {\n    toString$0: function(_) {\n      return H.S(this.type) + \" \" + H.S(this.path);\n    },\n    get$path: function(receiver) {\n      return this.path;\n    }\n  };\n  E.ChangeType.prototype = {\n    toString$0: function(_) {\n      return this._watch_event$_name;\n    }\n  };\n  Y.SupportsAnything0.prototype = {\n    toString$0: function(_) {\n      return \"(\" + this.contents.toString$0(0) + \")\";\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Z.Argument0.prototype = {\n    toString$0: function(_) {\n      var t1 = this.defaultValue,\n        t2 = this.name;\n      return t1 == null ? t2 : t2 + \": \" + t1.toString$0(0);\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ArgumentDeclaration0.prototype = {\n    get$spanWithName: function() {\n      var t3, t4,\n        t1 = this.span,\n        t2 = t1.file,\n        text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2._decodedChars, 0, null), 0, null),\n        i = Y.FileLocation$_(t2, t1._file$_start).offset - 1;\n      while (true) {\n        if (i > 0) {\n          t3 = C.JSString_methods.codeUnitAt$1(text, i);\n          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        --i;\n      }\n      t3 = C.JSString_methods.codeUnitAt$1(text, i);\n      if (!(t3 === 95 || T.isAlphabetic1(t3) || t3 >= 128 || T.isDigit0(t3) || t3 === 45))\n        return t1;\n      --i;\n      while (true) {\n        if (i >= 0) {\n          t3 = C.JSString_methods.codeUnitAt$1(text, i);\n          if (t3 !== 95) {\n            if (!(t3 >= 97 && t3 <= 122))\n              t4 = t3 >= 65 && t3 <= 90;\n            else\n              t4 = true;\n            t4 = t4 || t3 >= 128;\n          } else\n            t4 = true;\n          if (!t4) {\n            t4 = t3 >= 48 && t3 <= 57;\n            t3 = t4 || t3 === 45;\n          } else\n            t3 = true;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        --i;\n      }\n      t3 = i + 1;\n      t4 = C.JSString_methods.codeUnitAt$1(text, t3);\n      if (!(t4 === 95 || T.isAlphabetic1(t4) || t4 >= 128))\n        return t1;\n      return B.SpanExtensions_trim0(t2.span$2(t3, Y.FileLocation$_(t2, t1._end).offset));\n    },\n    get$originalRestArgument: function() {\n      var t1, text;\n      if (this.restArgument == null)\n        return null;\n      t1 = this.span;\n      text = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);\n      return C.JSString_methods.substring$2(C.JSString_methods.substring$1(text, C.JSString_methods.lastIndexOf$1(text, \"$\")), 0, C.JSString_methods.indexOf$1(text, \".\"));\n    },\n    verify$2: function(positional, names) {\n      var t1, t2, t3, namedUsed, i, argument, t4, unknownNames, _this = this,\n        _s10_ = \"invocation\",\n        _s8_ = \"argument\";\n      for (t1 = _this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {\n        argument = t1[i];\n        if (i < positional) {\n          t4 = argument.name;\n          if (t3.containsKey$1(t4))\n            throw H.wrapException(E.SassScriptException$0(\"Argument \" + H.S(_this._argument_declaration$_originalArgumentName$1(t4)) + string$.x20was_p));\n        } else {\n          t4 = argument.name;\n          if (t3.containsKey$1(t4))\n            ++namedUsed;\n          else if (argument.defaultValue == null)\n            throw H.wrapException(E.MultiSpanSassScriptException$0(\"Missing argument \" + H.S(_this._argument_declaration$_originalArgumentName$1(t4)) + \".\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String)));\n        }\n      }\n      if (_this.restArgument != null)\n        return;\n      if (positional > t2) {\n        t1 = \"Only \" + t2 + \" \";\n        throw H.wrapException(E.MultiSpanSassScriptException$0(t1 + (names.get$isEmpty(names) ? \"\" : \"positional \") + B.pluralize0(_s8_, t2, null) + \" allowed, but \" + positional + \" \" + B.pluralize0(\"was\", positional, \"were\") + \" passed.\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      if (namedUsed < t3.get$length(t3)) {\n        t2 = type$.legacy_String;\n        unknownNames = P.LinkedHashSet_LinkedHashSet$of(names, t2);\n        unknownNames.removeAll$1(new H.MappedListIterable(t1, new B.ArgumentDeclaration_verify_closure1(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Object*>\")));\n        throw H.wrapException(E.MultiSpanSassScriptException$0(\"No \" + B.pluralize0(_s8_, unknownNames._collection$_length, null) + \" named \" + H.S(B.toSentence0(unknownNames.map$1$1(0, new B.ArgumentDeclaration_verify_closure2(), type$.legacy_Object), \"or\")) + \".\", _s10_, P.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, t2)));\n      }\n    },\n    _argument_declaration$_originalArgumentName$1: function($name) {\n      var t1, t2, _i, argument, t3, t4, text, end;\n      if ($name === this.restArgument)\n        return this.get$originalRestArgument();\n      for (t1 = this.$arguments, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        argument = t1[_i];\n        if (argument.name === $name) {\n          t1 = argument.defaultValue;\n          t2 = argument.span;\n          t3 = t2.file;\n          t4 = t2._file$_start;\n          t2 = t2._end;\n          if (t1 == null) {\n            t1 = t3._decodedChars;\n            t1 = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);\n          } else {\n            t1 = t3._decodedChars;\n            text = P.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, H._checkValidRange(t4, t2, t1.length))), 0, null);\n            t1 = C.JSString_methods.substring$2(text, 0, C.JSString_methods.indexOf$1(text, \":\"));\n            end = B._lastNonWhitespace0(t1, false);\n            t1 = end == null ? \"\" : C.JSString_methods.substring$2(t1, 0, end + 1);\n          }\n          return t1;\n        }\n      }\n      throw H.wrapException(P.ArgumentError$(string$.This_d + $name + '\".'));\n    },\n    matches$2: function(positional, names) {\n      var t1, t2, t3, namedUsed, i, argument;\n      for (t1 = this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {\n        argument = t1[i];\n        if (i < positional) {\n          if (t3.containsKey$1(argument.name))\n            return false;\n        } else if (t3.containsKey$1(argument.name))\n          ++namedUsed;\n        else if (argument.defaultValue == null)\n          return false;\n      }\n      if (this.restArgument != null)\n        return true;\n      if (positional > t2)\n        return false;\n      if (namedUsed < t3.get$length(t3))\n        return false;\n      return true;\n    },\n    toString$0: function(_) {\n      var t2, t3, _i,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      for (t2 = this.$arguments, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(J.toString$0$(t2[_i]));\n      t2 = this.restArgument;\n      if (t2 != null)\n        t1.push(t2 + \"...\");\n      return C.JSArray_methods.join$1(t1, \", \");\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ArgumentDeclaration_verify_closure1.prototype = {\n    call$1: function(argument) {\n      return argument.name;\n    },\n    $signature: 268\n  };\n  B.ArgumentDeclaration_verify_closure2.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  X.ArgumentInvocation0.prototype = {\n    get$isEmpty: function(_) {\n      var t1;\n      if (this.positional.length === 0) {\n        t1 = this.named;\n        t1 = t1.get$isEmpty(t1) && this.rest == null;\n      } else\n        t1 = false;\n      return t1;\n    },\n    toString$0: function(_) {\n      var t2, t3, _i, t4, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n      for (t2 = _this.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i]);\n      for (t2 = _this.named, t3 = J.get$iterator$ax(t2.get$keys(t2)); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t1.push(H.S(t4) + \": \" + H.S(t2.$index(0, t4)));\n      }\n      t2 = _this.rest;\n      if (t2 != null)\n        t1.push(t2.toString$0(0) + \"...\");\n      t2 = _this.keywordRest;\n      if (t2 != null)\n        t1.push(t2.toString$0(0) + \"...\");\n      return \"(\" + C.JSArray_methods.join$1(t1, \", \") + \")\";\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  D.SassArgumentList0.prototype = {};\n  B.AsyncImporter0.prototype = {};\n  S.AsyncBuiltInCallable0.prototype = {\n    callbackFor$2: function(positional, names) {\n      return new S.Tuple2(this._async_built_in0$_arguments, this._async_built_in0$_callback, type$.Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value_2);\n    },\n    $isAsyncCallable0: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  S.AsyncBuiltInCallable$mixin_closure0.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$AsyncBuiltInCallable$mixin_closure0($arguments);\n    },\n    $call$body$AsyncBuiltInCallable$mixin_closure0: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.callback.call$1($arguments), $async$call$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 134\n  };\n  X._compileStylesheet_closure2.prototype = {\n    call$1: function(url) {\n      var t1, t2, _null = null;\n      if (url === \"\")\n        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();\n      else {\n        t1 = P.Uri_parse(url);\n        t2 = this.importCache._async_import_cache0$_resultsCache.$index(0, t1);\n        t2 = t2 == null ? _null : t2.get$sourceMapUrl();\n        t1 = (t2 == null ? t1 : t2).toString$0(0);\n      }\n      return t1;\n    },\n    $signature: 8\n  };\n  X.CompileResult0.prototype = {};\n  Q.AsyncEnvironment0.prototype = {\n    closure$0: function() {\n      var t5, t6, t7, _this = this,\n        t1 = _this._async_environment0$_forwardedModules,\n        t2 = _this._async_environment0$_forwardedModuleNodes,\n        t3 = _this._async_environment0$_nestedForwardedModules,\n        t4 = _this._async_environment0$_variables;\n      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));\n      t5 = _this._async_environment0$_variableNodes;\n      if (t5 == null)\n        t5 = null;\n      else\n        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));\n      t6 = _this._async_environment0$_functions;\n      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));\n      t7 = _this._async_environment0$_mixins;\n      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));\n      return Q.AsyncEnvironment$_0(_this._async_environment0$_modules, _this._async_environment0$_namespaceNodes, _this._async_environment0$_globalModules, _this._async_environment0$_globalModuleNodes, t1, t2, t3, _this._async_environment0$_allModules, t4, t5, t6, t7, _this._async_environment0$_content);\n    },\n    addModule$3$namespace: function(module, nodeWithSpan, namespace) {\n      var t1, t2, _this = this;\n      if (namespace == null) {\n        _this._async_environment0$_globalModules.add$1(0, module);\n        _this._async_environment0$_globalModuleNodes.$indexSet(0, module, nodeWithSpan);\n        _this._async_environment0$_allModules.push(module);\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._async_environment0$_variables))); t1.moveNext$0();) {\n          t2 = t1.get$current(t1);\n          if (module.get$variables().containsKey$1(t2))\n            throw H.wrapException(E.SassScriptException$0(string$.This_ma + H.S(t2) + '\".'));\n        }\n      } else {\n        t1 = _this._async_environment0$_modules;\n        if (t1.containsKey$1(namespace))\n          throw H.wrapException(E.MultiSpanSassScriptException$0(string$.There_ + namespace + '\".', \"new @use\", P.LinkedHashMap_LinkedHashMap$_literal([_this._async_environment0$_namespaceNodes.$index(0, namespace).get$span(), \"original @use\"], type$.legacy_FileSpan, type$.legacy_String)));\n        t1.$indexSet(0, namespace, module);\n        _this._async_environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);\n        _this._async_environment0$_allModules.push(module);\n      }\n    },\n    forwardModule$2: function(module, rule) {\n      var view, t1, t2, _this = this;\n      if (_this._async_environment0$_forwardedModules == null)\n        _this._async_environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable_2);\n      if (_this._async_environment0$_forwardedModuleNodes == null)\n        _this._async_environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable_2, type$.legacy_AstNode_2);\n      view = R.ForwardedModuleView_ifNecessary0(module, rule, type$.legacy_AsyncCallable_2);\n      for (t1 = _this._async_environment0$_forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        t2 = t1._collection$_current;\n        _this._async_environment0$_assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, \"variable\", rule);\n        _this._async_environment0$_assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, \"function\", rule);\n        _this._async_environment0$_assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, \"mixin\", rule);\n      }\n      _this._async_environment0$_allModules.push(module);\n      _this._async_environment0$_forwardedModules.add$1(0, view);\n      _this._async_environment0$_forwardedModuleNodes.$indexSet(0, view, rule);\n    },\n    _async_environment0$_assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {\n      var larger, smaller, t1, t2, $name;\n      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {\n        larger = oldMembers;\n        smaller = newMembers;\n      } else {\n        larger = newMembers;\n        smaller = oldMembers;\n      }\n      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === \"variable\"; t1.moveNext$0();) {\n        $name = t1.get$current(t1);\n        if (!larger.containsKey$1($name))\n          continue;\n        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))\n          continue;\n        if (t2)\n          $name = \"$\" + H.S($name);\n        throw H.wrapException(E.MultiSpanSassScriptException$0(\"Two forwarded modules both define a \" + type + \" named \" + H.S($name) + \".\", \"new @forward\", P.LinkedHashMap_LinkedHashMap$_literal([this._async_environment0$_forwardedModuleNodes.$index(0, oldModule).get$span(), \"original @forward\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n    },\n    importForwards$1: function(module) {\n      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,\n        t1 = module._async_environment0$_environment,\n        forwarded = t1._async_environment0$_forwardedModules;\n      if (forwarded == null)\n        return;\n      if (_this._async_environment0$_forwardedModules != null) {\n        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_AsyncCallable_2);\n        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._async_environment0$_globalModules; t3.moveNext$0();) {\n          t5 = t3._collection$_current;\n          if (!_this._async_environment0$_forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))\n            t2.add$1(0, t5);\n        }\n        forwarded = t2;\n      }\n      if (_this._async_environment0$_forwardedModules == null)\n        _this._async_environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_AsyncCallable_2);\n      if (_this._async_environment0$_forwardedModuleNodes == null)\n        _this._async_environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_AsyncCallable_2, type$.legacy_AstNode_2);\n      t2 = H._instanceType(forwarded)._eval$1(\"ExpandIterable<1,String*>\");\n      t3 = t2._eval$1(\"Iterable.E\");\n      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure3(), t2), t3);\n      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure4(), t2), t3);\n      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new Q.AsyncEnvironment_importForwards_closure5(), t2), t3);\n      t2 = _this._async_environment0$_variables;\n      t3 = t2.length;\n      if (t3 === 1) {\n        for (t3 = _this._async_environment0$_globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_AsyncCallable_2, t7 = _this._async_environment0$_globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            t3.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view0$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              t3.add$1(0, shadowed);\n              t7.$indexSet(0, shadowed, t7.remove$1(0, module));\n            }\n          }\n        }\n        t4 = _this._async_environment0$_forwardedModules;\n        t4.toString;\n        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);\n        t5 = t4.length;\n        _i = 0;\n        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            _this._async_environment0$_forwardedModules.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view0$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              _this._async_environment0$_forwardedModules.add$1(0, shadowed);\n              t8 = _this._async_environment0$_forwardedModuleNodes;\n              t8.$indexSet(0, shadowed, t8.remove$1(0, module));\n            }\n          }\n        }\n        t3.addAll$1(0, forwarded);\n        t7.addAll$1(0, t1._async_environment0$_forwardedModuleNodes);\n        _this._async_environment0$_forwardedModules.addAll$1(0, forwarded);\n        _this._async_environment0$_forwardedModuleNodes.addAll$1(0, t1._async_environment0$_forwardedModuleNodes);\n      } else {\n        t1 = _this._async_environment0$_nestedForwardedModules;\n        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._async_environment0$_nestedForwardedModules = P.List_List$generate(t3 - 1, new Q.AsyncEnvironment_importForwards_closure6(), true, type$.legacy_List_legacy_Module_legacy_AsyncCallable_2) : t1), forwarded);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._async_environment0$_variableNodes, t4 = t3 != null, t5 = _this._async_environment0$_variableIndices; t1.moveNext$0();) {\n        t6 = t1._collection$_current;\n        t5.remove$1(0, t6);\n        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);\n        if (t4)\n          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._async_environment0$_functionIndices, t3 = _this._async_environment0$_functions; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._async_environment0$_mixinIndices, t3 = _this._async_environment0$_mixins; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n    },\n    getVariable$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment0$_getModule$1(namespace).get$variables().$index(0, $name);\n      if (_this._async_environment0$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._async_environment0$_variables[_this._async_environment0$_lastVariableIndex], $name);\n        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._async_environment0$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._async_environment0$_lastVariableName = $name;\n        _this._async_environment0$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);\n        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment0$_variableIndex$1($name);\n      if (index == null)\n        return _this._async_environment0$_getVariableFromGlobalModule$1($name);\n      _this._async_environment0$_lastVariableName = $name;\n      _this._async_environment0$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);\n      return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;\n    },\n    getVariable$1: function($name) {\n      return this.getVariable$2$namespace($name, null);\n    },\n    _async_environment0$_getVariableFromGlobalModule$1: function($name) {\n      return this._async_environment0$_fromOneModule$3($name, \"variable\", new Q.AsyncEnvironment__getVariableFromGlobalModule_closure0($name));\n    },\n    getVariableNode$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);\n      if (_this._async_environment0$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._async_environment0$_variableNodes[_this._async_environment0$_lastVariableIndex], $name);\n        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._async_environment0$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._async_environment0$_lastVariableName = $name;\n        _this._async_environment0$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);\n        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment0$_variableIndex$1($name);\n      if (index == null)\n        return _this._async_environment0$_getVariableNodeFromGlobalModule$1($name);\n      _this._async_environment0$_lastVariableName = $name;\n      _this._async_environment0$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);\n      return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n    },\n    _async_environment0$_getVariableNodeFromGlobalModule$1: function($name) {\n      var t1, value;\n      for (t1 = this._async_environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        value = t1._collection$_current.get$variableNodes().$index(0, $name);\n        if (value != null)\n          return value;\n      }\n      return null;\n    },\n    globalVariableExists$2$namespace: function($name, namespace) {\n      if (namespace != null)\n        return this._async_environment0$_getModule$1(namespace).get$variables().containsKey$1($name);\n      if (C.JSArray_methods.get$first(this._async_environment0$_variables).containsKey$1($name))\n        return true;\n      return this._async_environment0$_getVariableFromGlobalModule$1($name) != null;\n    },\n    globalVariableExists$1: function($name) {\n      return this.globalVariableExists$2$namespace($name, null);\n    },\n    _async_environment0$_variableIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment0$_variables, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {\n      var t1, moduleWithName, cur, t2, index, _this = this;\n      if (namespace != null) {\n        _this._async_environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      if (global || _this._async_environment0$_variables.length === 1) {\n        _this._async_environment0$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure2(_this, $name));\n        t1 = _this._async_environment0$_variables;\n        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {\n          moduleWithName = _this._async_environment0$_fromOneModule$3($name, \"variable\", new Q.AsyncEnvironment_setVariable_closure3($name));\n          if (moduleWithName != null) {\n            moduleWithName.setVariable$3($name, value, nodeWithSpan);\n            return;\n          }\n        }\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);\n        t1 = _this._async_environment0$_variableNodes;\n        if (t1 != null)\n          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n        return;\n      }\n      if (_this._async_environment0$_nestedForwardedModules != null && !_this._async_environment0$_variableIndices.containsKey$1($name) && _this._async_environment0$_variableIndex$1($name) == null) {\n        t1 = _this._async_environment0$_nestedForwardedModules;\n        t1.toString;\n        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\"));\n        t1 = new H.ListIterator(t1, t1.get$length(t1));\n        for (; t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            if (cur.get$variables().containsKey$1($name)) {\n              cur.setVariable$3($name, value, nodeWithSpan);\n              return;\n            }\n          }\n        }\n      }\n      index = _this._async_environment0$_lastVariableName === $name ? _this._async_environment0$_lastVariableIndex : _this._async_environment0$_variableIndices.putIfAbsent$2($name, new Q.AsyncEnvironment_setVariable_closure4(_this, $name));\n      if (!_this._async_environment0$_inSemiGlobalScope && index === 0) {\n        index = _this._async_environment0$_variables.length - 1;\n        _this._async_environment0$_variableIndices.$indexSet(0, $name, index);\n      }\n      _this._async_environment0$_lastVariableName = $name;\n      _this._async_environment0$_lastVariableIndex = index;\n      J.$indexSet$ax(_this._async_environment0$_variables[index], $name, value);\n      t1 = _this._async_environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    setVariable$4$global: function($name, value, nodeWithSpan, global) {\n      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);\n    },\n    setLocalVariable$3: function($name, value, nodeWithSpan) {\n      var index, _this = this,\n        t1 = _this._async_environment0$_variables,\n        t2 = t1.length;\n      _this._async_environment0$_lastVariableName = $name;\n      index = _this._async_environment0$_lastVariableIndex = t2 - 1;\n      _this._async_environment0$_variableIndices.$indexSet(0, $name, index);\n      J.$indexSet$ax(t1[index], $name, value);\n      t1 = _this._async_environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    getFunction$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null) {\n        t1 = _this._async_environment0$_getModule$1(namespace);\n        return t1.get$functions(t1).$index(0, $name);\n      }\n      t1 = _this._async_environment0$_functionIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);\n        return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment0$_functionIndex$1($name);\n      if (index == null)\n        return _this._async_environment0$_getFunctionFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);\n      return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;\n    },\n    _async_environment0$_getFunctionFromGlobalModule$1: function($name) {\n      return this._async_environment0$_fromOneModule$3($name, \"function\", new Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0($name));\n    },\n    _async_environment0$_functionIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment0$_functions, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    getMixin$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._async_environment0$_getModule$1(namespace).get$mixins().$index(0, $name);\n      t1 = _this._async_environment0$_mixinIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);\n        return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;\n      }\n      index = _this._async_environment0$_mixinIndex$1($name);\n      if (index == null)\n        return _this._async_environment0$_getMixinFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);\n      return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;\n    },\n    _async_environment0$_getMixinFromGlobalModule$1: function($name) {\n      return this._async_environment0$_fromOneModule$3($name, \"mixin\", new Q.AsyncEnvironment__getMixinFromGlobalModule_closure0($name));\n    },\n    _async_environment0$_mixinIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._async_environment0$_mixins, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    withContent$2: function($content, callback) {\n      return this.withContent$body$AsyncEnvironment0($content, callback);\n    },\n    withContent$body$AsyncEnvironment0: function($content, callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, oldContent;\n      var $async$withContent$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldContent = $async$self._async_environment0$_content;\n              $async$self._async_environment0$_content = $content;\n              $async$goto = 2;\n              return P._asyncAwait(callback.call$0(), $async$withContent$2);\n            case 2:\n              // returning from await.\n              $async$self._async_environment0$_content = oldContent;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$withContent$2, $async$completer);\n    },\n    asMixin$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, oldInMixin;\n      var $async$asMixin$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldInMixin = $async$self._async_environment0$_inMixin;\n              $async$self._async_environment0$_inMixin = true;\n              $async$goto = 2;\n              return P._asyncAwait(callback.call$0(), $async$asMixin$1);\n            case 2:\n              // returning from await.\n              $async$self._async_environment0$_inMixin = oldInMixin;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$asMixin$1, $async$completer);\n    },\n    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when, $T) {\n      return this.scope$body$AsyncEnvironment0(callback, semiGlobal, when, $T, $T._eval$1(\"0*\"));\n    },\n    scope$1$1: function(callback, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);\n    },\n    scope$1$2$when: function(callback, when, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);\n    },\n    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);\n    },\n    scope$body$AsyncEnvironment0: function(callback, semiGlobal, when, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5;\n      var $async$scope$1$3$semiGlobal$when = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = !when ? 3 : 4;\n              break;\n            case 3:\n              // then\n              wasInSemiGlobalScope = $async$self._async_environment0$_inSemiGlobalScope;\n              $async$self._async_environment0$_inSemiGlobalScope = semiGlobal;\n              $async$handler = 5;\n              $async$goto = 8;\n              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);\n            case 8:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              $async$next = [1];\n              // goto finally\n              $async$goto = 6;\n              break;\n              $async$next.push(7);\n              // goto finally\n              $async$goto = 6;\n              break;\n            case 5:\n              // uncaught\n              $async$next = [2];\n            case 6:\n              // finally\n              $async$handler = 2;\n              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope;\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 7:\n              // after finally\n            case 4:\n              // join\n              semiGlobal = semiGlobal && $async$self._async_environment0$_inSemiGlobalScope;\n              wasInSemiGlobalScope0 = $async$self._async_environment0$_inSemiGlobalScope;\n              $async$self._async_environment0$_inSemiGlobalScope = semiGlobal;\n              t1 = $async$self._async_environment0$_variables;\n              t2 = type$.legacy_String;\n              C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value_2));\n              t3 = $async$self._async_environment0$_variableNodes;\n              if (t3 != null)\n                C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode_2));\n              t3 = $async$self._async_environment0$_functions;\n              t4 = type$.legacy_AsyncCallable_2;\n              C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n              t5 = $async$self._async_environment0$_mixins;\n              C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n              t4 = $async$self._async_environment0$_nestedForwardedModules;\n              if (t4 != null)\n                C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2));\n              $async$handler = 9;\n              $async$goto = 12;\n              return P._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);\n            case 12:\n              // returning from await.\n              t2 = $async$result;\n              $async$returnValue = t2;\n              $async$next = [1];\n              // goto finally\n              $async$goto = 10;\n              break;\n              $async$next.push(11);\n              // goto finally\n              $async$goto = 10;\n              break;\n            case 9:\n              // uncaught\n              $async$next = [2];\n            case 10:\n              // finally\n              $async$handler = 2;\n              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope0;\n              $async$self._async_environment0$_lastVariableIndex = $async$self._async_environment0$_lastVariableName = null;\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = $async$self._async_environment0$_variableIndices; t1.moveNext$0();) {\n                $name = t1.get$current(t1);\n                t2.remove$1(0, $name);\n              }\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = $async$self._async_environment0$_functionIndices; t1.moveNext$0();) {\n                name0 = t1.get$current(t1);\n                t2.remove$1(0, name0);\n              }\n              for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = $async$self._async_environment0$_mixinIndices; t1.moveNext$0();) {\n                name1 = t1.get$current(t1);\n                t2.remove$1(0, name1);\n              }\n              t1 = $async$self._async_environment0$_nestedForwardedModules;\n              if (t1 != null)\n                C.JSArray_methods.removeLast$0(t1);\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 11:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$scope$1$3$semiGlobal$when, $async$completer);\n    },\n    toImplicitConfiguration$0: function() {\n      var t2, t3, t4, t5, i, values, nodes, t6, t7,\n        t1 = type$.legacy_String,\n        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue_2);\n      for (t2 = this._async_environment0$_variables, t3 = this._async_environment0$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode_2, i = 0; i < t2.length; ++i) {\n        values = t2[i];\n        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];\n        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {\n          t7 = t6.get$current(t6);\n          configuration.$indexSet(0, t7, new Z.ConfiguredValue0(values.$index(0, t7), null, nodes.$index(0, t7)));\n        }\n      }\n      return new A.Configuration0(configuration, null, true);\n    },\n    _async_environment0$_getModule$1: function(namespace) {\n      var module = this._async_environment0$_modules.$index(0, namespace);\n      if (module != null)\n        return module;\n      throw H.wrapException(E.SassScriptException$0('There is no module with the namespace \"' + namespace + '\".'));\n    },\n    _async_environment0$_fromOneModule$1$3: function($name, type, callback) {\n      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,\n        t1 = this._async_environment0$_nestedForwardedModules;\n      if (t1 != null)\n        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            value = callback.call$1(cur);\n            if (value != null)\n              return value;\n          }\n        }\n      for (t1 = this._async_environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_AsyncCallable_2, value = null, identity = null; t1.moveNext$0();) {\n        t3 = t1._collection$_current;\n        valueInModule = callback.call$1(t3);\n        if (valueInModule == null)\n          continue;\n        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);\n        if (identityFromModule.$eq(0, identity))\n          continue;\n        if (value != null) {\n          t1 = \"This \" + type + string$.x20is_av;\n          t2 = type + \" use\";\n          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          for (t4 = this._async_environment0$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            if (callback.call$1(t5.key) != null)\n              t3.$indexSet(0, t5.value.get$span(), \"includes \" + type);\n          }\n          throw H.wrapException(E.MultiSpanSassScriptException$0(t1, t2, t3));\n        }\n        identity = identityFromModule;\n        value = valueInModule;\n      }\n      return value;\n    },\n    _async_environment0$_fromOneModule$3: function($name, type, callback) {\n      return this._async_environment0$_fromOneModule$1$3($name, type, callback, type$.dynamic);\n    }\n  };\n  Q.AsyncEnvironment_importForwards_closure3.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$variables();\n      return t1.get$keys(t1);\n    },\n    $signature: 108\n  };\n  Q.AsyncEnvironment_importForwards_closure4.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$functions(module);\n      return t1.get$keys(t1);\n    },\n    $signature: 108\n  };\n  Q.AsyncEnvironment_importForwards_closure5.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$mixins();\n      return t1.get$keys(t1);\n    },\n    $signature: 108\n  };\n  Q.AsyncEnvironment_importForwards_closure6.prototype = {\n    call$1: function(_) {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2);\n    },\n    $signature: 271\n  };\n  Q.AsyncEnvironment__getVariableFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$variables().$index(0, this.name);\n    },\n    $signature: 272\n  };\n  Q.AsyncEnvironment_setVariable_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._async_environment0$_lastVariableName = this.name;\n      return t1._async_environment0$_lastVariableIndex = 0;\n    },\n    $signature: 11\n  };\n  Q.AsyncEnvironment_setVariable_closure3.prototype = {\n    call$1: function(module) {\n      return module.get$variables().containsKey$1(this.name) ? module : null;\n    },\n    $signature: 136\n  };\n  Q.AsyncEnvironment_setVariable_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._async_environment0$_variableIndex$1(this.name);\n      return t2 == null ? t1._async_environment0$_variables.length - 1 : t2;\n    },\n    $signature: 11\n  };\n  Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module).$index(0, this.name);\n    },\n    $signature: 137\n  };\n  Q.AsyncEnvironment__getMixinFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$mixins().$index(0, this.name);\n    },\n    $signature: 137\n  };\n  Q._EnvironmentModule2.prototype = {\n    get$url: function() {\n      return this.css.get$span().file.url;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var t1, t2,\n        module = this._async_environment0$_modulesByVariable.$index(0, $name);\n      if (module != null) {\n        module.setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      t1 = this._async_environment0$_environment;\n      t2 = t1._async_environment0$_variables;\n      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$0(\"Undefined variable.\"));\n      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);\n      t1 = t1._async_environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n      return;\n    },\n    variableIdentity$1: function($name) {\n      var module = this._async_environment0$_modulesByVariable.$index(0, $name);\n      return module == null ? this : module.variableIdentity$1($name);\n    },\n    cloneCss$0: function() {\n      var newCssAndExtender, _this = this,\n        t1 = _this.css;\n      if (J.get$isEmpty$asx(t1.get$children(t1)))\n        return _this;\n      newCssAndExtender = V.cloneCssStylesheet0(t1, _this.extender);\n      return Q._EnvironmentModule$_2(_this._async_environment0$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._async_environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);\n    },\n    toString$0: function(_) {\n      var t1 = this.css;\n      if (t1.get$span().file.url == null)\n        t1 = \"<unknown url>\";\n      else {\n        t1 = t1.get$span();\n        t1 = $.$get$context().prettyUri$1(t1.file.url);\n      }\n      return t1;\n    },\n    $isModule0: 1,\n    get$upstream: function() {\n      return this.upstream;\n    },\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$extender: function() {\n      return this.extender;\n    },\n    get$css: function(receiver) {\n      return this.css;\n    },\n    get$transitivelyContainsCss: function() {\n      return this.transitivelyContainsCss;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this.transitivelyContainsExtensions;\n    }\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure17.prototype = {\n    call$1: function(module) {\n      return module.get$variables();\n    },\n    $signature: 275\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure18.prototype = {\n    call$1: function(module) {\n      return module.get$variableNodes();\n    },\n    $signature: 276\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure19.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module);\n    },\n    $signature: 138\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure20.prototype = {\n    call$1: function(module) {\n      return module.get$mixins();\n    },\n    $signature: 138\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure21.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 106\n  };\n  Q._EnvironmentModule__EnvironmentModule_closure22.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsExtensions();\n    },\n    $signature: 106\n  };\n  E._EvaluateVisitor2.prototype = {\n    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap2: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,\n        _s20_ = \"$name, $module: null\",\n        _s9_ = \"sass:meta\",\n        metaFunctions = [Q.BuiltInCallable$function0(\"global-variable-exists\", _s20_, new E._EvaluateVisitor_closure29(_this), _s9_), Q.BuiltInCallable$function0(\"variable-exists\", \"$name\", new E._EvaluateVisitor_closure30(_this), _s9_), Q.BuiltInCallable$function0(\"function-exists\", _s20_, new E._EvaluateVisitor_closure31(_this), _s9_), Q.BuiltInCallable$function0(\"mixin-exists\", _s20_, new E._EvaluateVisitor_closure32(_this), _s9_), Q.BuiltInCallable$function0(\"content-exists\", \"\", new E._EvaluateVisitor_closure33(_this), _s9_), Q.BuiltInCallable$function0(\"module-variables\", \"$module\", new E._EvaluateVisitor_closure34(_this), _s9_), Q.BuiltInCallable$function0(\"module-functions\", \"$module\", new E._EvaluateVisitor_closure35(_this), _s9_), Q.BuiltInCallable$function0(\"get-function\", \"$name, $css: false, $module: null\", new E._EvaluateVisitor_closure36(_this), _s9_), new S.AsyncBuiltInCallable0(\"call\", L.ScssParser$0(\"@function call($function, $args...) {\", null, _s9_).parseArgumentDeclaration$0(), new E._EvaluateVisitor_closure37(_this))],\n        t1 = type$.JSArray_legacy_AsyncBuiltInCallable_2,\n        metaMixins = H.setRuntimeTypeInfo([S.AsyncBuiltInCallable$mixin0(\"load-css\", \"$url, $with: null\", new E._EvaluateVisitor_closure38(_this), _s9_)], t1);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t2 = $.$get$global6(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      metaModule = Q.BuiltInModule$0(\"meta\", t1, metaMixins, null, type$.legacy_AsyncBuiltInCallable_2);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable_2);\n      for (t2 = $.$get$coreModules0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      t1.push(metaModule);\n      t2 = t1.length;\n      t3 = _this._async_evaluate0$_builtInModules;\n      _i = 0;\n      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        module = t1[_i];\n        t3.$indexSet(0, module.url, module);\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AsyncCallable);\n      for (t2 = functions.length, _i = 0; _i < functions.length; functions.length === t2 || (0, H.throwConcurrentModificationError)(functions), ++_i)\n        t1.push(functions[_i]);\n      for (t2 = $.$get$globalFunctions0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      for (t2 = t1.length, t3 = _this._async_evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        $function = t1[_i];\n        t4 = $function.get$name($function);\n        t4.toString;\n        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, \"_\", \"-\"), $function);\n      }\n    },\n    run$2: function(_, importer, node) {\n      return this.run$body$_EvaluateVisitor0(_, importer, node);\n    },\n    run$body$_EvaluateVisitor0: function(_, importer, node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult_2),\n        $async$returnValue, $async$self = this;\n      var $async$run$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = $async$self._async_evaluate0$_withWarnCallback$1$1(new E._EvaluateVisitor_run_closure2($async$self, node, importer), type$.legacy_FutureOr_legacy_EvaluateResult_2);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$run$2, $async$completer);\n    },\n    _async_evaluate0$_withWarnCallback$1$1: function(callback, $T) {\n      return N.withWarnCallback0(new E._EvaluateVisitor__withWarnCallback_closure2(this), callback, $T._eval$1(\"0*\"));\n    },\n    _async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      return this._loadModule$body$_EvaluateVisitor0(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);\n    },\n    _async_evaluate0$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {\n      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);\n    },\n    _async_evaluate0$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {\n      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);\n    },\n    _loadModule$body$_EvaluateVisitor0: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, t1, builtInModule;\n      var $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              builtInModule = $async$self._async_evaluate0$_builtInModules.$index(0, url);\n              if (builtInModule != null) {\n                if (configuration != null && !configuration.isImplicit) {\n                  t1 = namesInErrors ? \"Built-in module \" + H.S(url) + \" can't be configured.\" : \"Built-in modules can't be configured.\";\n                  throw H.wrapException($async$self._async_evaluate0$_exception$2(t1, nodeWithSpan.get$span()));\n                }\n                $async$self._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__loadModule_closure5(callback, builtInModule));\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_withStackFrame$1$3(stackFrame, nodeWithSpan, new E._EvaluateVisitor__loadModule_closure6($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors);\n            case 3:\n              // returning from await.\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);\n    },\n    _async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      return this._execute$body$_EvaluateVisitor0(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);\n    },\n    _async_evaluate0$_execute$2: function(importer, stylesheet) {\n      return this._async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);\n    },\n    _execute$body$_EvaluateVisitor0: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Module_legacy_AsyncCallable_2),\n        $async$returnValue, $async$self = this, message, existingNode, environment, extender, module, t1, url, t2, alreadyLoaded;\n      var $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              url = stylesheet.span.file.url;\n              t2 = $async$self._async_evaluate0$_modules;\n              alreadyLoaded = t2.$index(0, url);\n              if (alreadyLoaded != null) {\n                t1 = configuration == null;\n                if (!(t1 ? $async$self._async_evaluate0$_configuration : configuration).isImplicit) {\n                  message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;\n                  existingNode = $async$self._async_evaluate0$_moduleNodes.$index(0, url);\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n                  if (existingNode != null)\n                    t2.$indexSet(0, existingNode.get$span(), \"original load\");\n                  if (t1)\n                    t2.$indexSet(0, $async$self._async_evaluate0$_configuration.nodeWithSpan.get$span(), \"configuration\");\n                  throw H.wrapException(t2.get$isEmpty(t2) ? $async$self._async_evaluate0$_exception$1(message) : $async$self._async_evaluate0$_multiSpanException$3(message, \"new load\", t2));\n                }\n                $async$returnValue = alreadyLoaded;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              environment = Q.AsyncEnvironment$0($async$self._async_evaluate0$_sourceMap);\n              t1.css = null;\n              extender = F.Extender$0();\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_withEnvironment$1$2(environment, new E._EvaluateVisitor__execute_closure2(t1, $async$self, importer, stylesheet, extender, configuration), type$.Null), $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan);\n            case 3:\n              // returning from await.\n              module = Q._EnvironmentModule__EnvironmentModule2(environment, t1.css, extender, environment._async_environment0$_forwardedModules);\n              t2.$indexSet(0, url, module);\n              $async$self._async_evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);\n              $async$returnValue = module;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);\n    },\n    _async_evaluate0$_addOutOfOrderImports$0: function() {\n      var t1, statements, _this = this;\n      if (_this._async_evaluate0$_outOfOrderImports == null)\n        return _this._async_evaluate0$_root.children;\n      t1 = new Array(J.get$length$asx(_this._async_evaluate0$_root.children._collection$_source) + _this._async_evaluate0$_outOfOrderImports.length);\n      t1.fixed$length = Array;\n      statements = new G.FixedLengthListBuilder0(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode_2), type$.FixedLengthListBuilder_legacy_ModifiableCssNode_2);\n      statements.addRange$3(_this._async_evaluate0$_root.children, 0, _this._async_evaluate0$_endOfImports);\n      statements.addAll$1(0, _this._async_evaluate0$_outOfOrderImports);\n      statements.addRange$2(_this._async_evaluate0$_root.children, _this._async_evaluate0$_endOfImports);\n      return statements.build$0();\n    },\n    _async_evaluate0$_combineCss$2$clone: function(root, clone) {\n      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;\n      if (!C.JSArray_methods.any$1(root.get$upstream(), new E._EvaluateVisitor__combineCss_closure8())) {\n        selectors = root.get$extender().get$simpleSelectors();\n        unsatisfiedExtension = B.firstOrNull0(root.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__combineCss_closure9(selectors)));\n        if (unsatisfiedExtension != null)\n          _this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);\n        return root.get$css(root);\n      }\n      sortedModules = _this._async_evaluate0$_topologicalModules$1(root);\n      if (clone) {\n        t1 = sortedModules.$ti._eval$1(\"MappedListIterable<ListMixin.E,Module0<AsyncCallable0*>*>\");\n        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new E._EvaluateVisitor__combineCss_closure10(), t1), true, t1._eval$1(\"ListIterable.E\"));\n      }\n      _this._async_evaluate0$_extendModules$1(sortedModules);\n      t1 = type$.JSArray_legacy_CssNode_2;\n      imports = H.setRuntimeTypeInfo([], t1);\n      css = H.setRuntimeTypeInfo([], t1);\n      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2 = cur.get$css(cur);\n        statements = t2.get$children(t2);\n        index = _this._async_evaluate0$_indexAfterImports$1(statements);\n        t2 = J.getInterceptor$ax(statements);\n        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));\n        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));\n      }\n      return new V.CssStylesheet0(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode_2), root.get$css(root).get$span());\n    },\n    _async_evaluate0$_combineCss$1: function(root) {\n      return this._async_evaluate0$_combineCss$2$clone(root, false);\n    },\n    _async_evaluate0$_extendModules$1: function(sortedModules) {\n      var t1, t2, originalSelectors, extenders, t3, t4, _i,\n        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender_2),\n        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension_2);\n      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);\n        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new E._EvaluateVisitor__extendModules_closure5(originalSelectors)));\n        extenders = downstreamExtenders.$index(0, t2.get$url());\n        if (extenders != null)\n          t2.get$extender().addExtensions$1(extenders);\n        t3 = t2.get$extender();\n        if (t3.get$isEmpty(t3))\n          continue;\n        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)\n          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new E._EvaluateVisitor__extendModules_closure6()), t2.get$extender());\n        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));\n      }\n      if (unsatisfiedExtensions._collection$_length !== 0)\n        this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));\n    },\n    _async_evaluate0$_throwForUnsatisfiedExtension$1: function(extension) {\n      throw H.wrapException(E.SassException$0(string$.The_ta + H.S(extension.target) + ' !optional\" to avoid this error.', extension.span));\n    },\n    _async_evaluate0$_topologicalModules$1: function(root) {\n      var t1 = type$.legacy_Module_legacy_AsyncCallable_2,\n        sorted = Q.QueueList$(null, t1);\n      new E._EvaluateVisitor__topologicalModules_visitModule2(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);\n      return sorted;\n    },\n    _async_evaluate0$_indexAfterImports$1: function(statements) {\n      var t1, t2, t3, lastImport, i, statement;\n      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {\n        statement = t1.$index(statements, i);\n        if (t3._is(statement))\n          lastImport = i;\n        else if (!t2._is(statement))\n          break;\n      }\n      return lastImport + 1;\n    },\n    visitStylesheet$1: function(node) {\n      return this.visitStylesheet$body$_EvaluateVisitor0(node);\n    },\n    visitStylesheet$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, _i;\n      var $async$visitStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.children, t2 = t1.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);\n            case 6:\n              // returning from await.\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStylesheet$1, $async$completer);\n    },\n    visitAtRootRule$1: function(node) {\n      return this.visitAtRootRule$body$_EvaluateVisitor0(node);\n    },\n    visitAtRootRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, root, innerCopy, outerCopy, cur, copy, t1, query, $parent, included, $async$temp1, $async$temp2;\n      var $async$visitAtRootRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.query;\n              $async$goto = t1 != null ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$temp1 = t1;\n              $async$temp2 = E;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(t1, true), $async$visitAtRootRule$1);\n            case 6:\n              // returning from await.\n              $async$result = $async$self._async_evaluate0$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure8($async$self, $async$result));\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$result = C.AtRootQuery_UsS0;\n            case 4:\n              // join\n              query = $async$result;\n              $parent = $async$self._async_evaluate0$_parent;\n              included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode_2);\n              for (t1 = type$.legacy_CssStylesheet_2; !t1._is($parent);) {\n                if (!query.excludes$1($parent))\n                  included.push($parent);\n                $parent = $parent._node2$_parent;\n              }\n              root = $async$self._async_evaluate0$_trimIncluded$1(included);\n              $async$goto = root == $async$self._async_evaluate0$_parent ? 7 : 8;\n              break;\n            case 7:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new E._EvaluateVisitor_visitAtRootRule_closure9($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);\n            case 9:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 8:\n              // join\n              innerCopy = included.length === 0 ? null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();\n              for (t1 = H.SubListIterable$(included, 1, null, type$.legacy_ModifiableCssParentNode_2), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {\n                cur = t1.__internal$_current;\n                copy = cur.copyWithoutChildren$0();\n                copy.addChild$1(outerCopy);\n              }\n              if (outerCopy != null)\n                root.addChild$1(outerCopy);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new E._EvaluateVisitor_visitAtRootRule_closure10($async$self, node)), $async$visitAtRootRule$1);\n            case 10:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitAtRootRule$1, $async$completer);\n    },\n    _async_evaluate0$_trimIncluded$1: function(nodes) {\n      var $parent, innermostContiguous, i, t2, root,\n        t1 = nodes.length;\n      if (t1 === 0)\n        return this._async_evaluate0$_root;\n      $parent = this._async_evaluate0$_parent;\n      for (innermostContiguous = null, i = 0; i < t1; ++i) {\n        for (; $parent != nodes[i]; innermostContiguous = null)\n          $parent = $parent._node2$_parent;\n        if (innermostContiguous == null)\n          innermostContiguous = i;\n        $parent = $parent._node2$_parent;\n      }\n      t2 = this._async_evaluate0$_root;\n      if ($parent != t2)\n        return t2;\n      root = nodes[innermostContiguous];\n      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);\n      return root;\n    },\n    _async_evaluate0$_scopeForAtRoot$4: function(node, newParent, query, included) {\n      var _this = this,\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure17(_this, newParent, node),\n        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;\n      if (t1 !== query.include)\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure18(_this, scope);\n      if (_this._async_evaluate0$_mediaQueries != null && query.excludesName$1(\"media\"))\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure19(_this, scope);\n      if (_this._async_evaluate0$_inKeyframes && query.excludesName$1(\"keyframes\"))\n        scope = new E._EvaluateVisitor__scopeForAtRoot_closure20(_this, scope);\n      return _this._async_evaluate0$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new E._EvaluateVisitor__scopeForAtRoot_closure21()) ? new E._EvaluateVisitor__scopeForAtRoot_closure22(_this, scope) : scope;\n    },\n    visitContentBlock$1: function(node) {\n      return H.throwExpression(P.UnsupportedError$(string$.Evalua));\n    },\n    visitContentRule$1: function(node) {\n      return this.visitContentRule$body$_EvaluateVisitor0(node);\n    },\n    visitContentRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, $content;\n      var $async$visitContentRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $content = $async$self._async_evaluate0$_environment._async_environment0$_content;\n              if ($content == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4(node.$arguments, $content, node, new E._EvaluateVisitor_visitContentRule_closure2($async$self, $content)), $async$visitContentRule$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitContentRule$1, $async$completer);\n    },\n    visitDebugRule$1: function(node) {\n      return this.visitDebugRule$body$_EvaluateVisitor0(node);\n    },\n    visitDebugRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, value, t1;\n      var $async$visitDebugRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              t1 = value instanceof D.SassString0 ? value.text : J.toString$0$(value);\n              $async$self._async_evaluate0$_logger.debug$2(0, t1, node.span);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitDebugRule$1, $async$completer);\n    },\n    visitDeclaration$1: function(node) {\n      return this.visitDeclaration$body$_EvaluateVisitor0(node);\n    },\n    visitDeclaration$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, oldDeclarationName, $async$temp1;\n      var $async$visitDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!($async$self._async_evaluate0$_styleRule != null && !$async$self._async_evaluate0$_atRootExcludingStyleRule) && !$async$self._async_evaluate0$_inUnknownAtRule && !$async$self._async_evaluate0$_inKeyframes)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Declarm, node.span));\n              t1 = node.name;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);\n            case 3:\n              // returning from await.\n              $name = $async$result;\n              t2 = $async$self._async_evaluate0$_declarationName;\n              if (t2 != null)\n                $name = new F.CssValue0(t2 + \"-\" + H.S($name.get$value($name)), $name.get$span(), type$.CssValue_legacy_String_2);\n              t2 = node.value;\n              $async$goto = t2 == null ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$temp1 = F;\n              $async$goto = 7;\n              return P._asyncAwait(t2.accept$1($async$self), $async$visitDeclaration$1);\n            case 7:\n              // returning from await.\n              $async$result = new $async$temp1.CssValue0($async$result, t2.get$span(), type$.CssValue_legacy_Value_2);\n            case 5:\n              // join\n              cssValue = $async$result;\n              if (cssValue != null) {\n                t3 = cssValue.value;\n                t3 = !t3.get$isBlank() || t3.get$asList().length === 0;\n              } else\n                t3 = false;\n              if (t3) {\n                t3 = $async$self._async_evaluate0$_parent;\n                t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), \"--\");\n                t2 = $async$self._async_evaluate0$_expressionNode$1(t2);\n                t2 = t2 == null ? null : t2.get$span();\n                t3.addChild$1(L.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));\n              } else if (J.startsWith$1$s($name.get$value($name), \"--\") && node.children == null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(\"Custom property values may not be empty.\", t2.get$span()));\n              $async$goto = node.children != null ? 8 : 9;\n              break;\n            case 8:\n              // then\n              oldDeclarationName = $async$self._async_evaluate0$_declarationName;\n              $async$self._async_evaluate0$_declarationName = $name.get$value($name);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new E._EvaluateVisitor_visitDeclaration_closure2($async$self, node), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);\n            case 10:\n              // returning from await.\n              $async$self._async_evaluate0$_declarationName = oldDeclarationName;\n            case 9:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitDeclaration$1, $async$completer);\n    },\n    visitEachRule$1: function(node) {\n      return this.visitEachRule$body$_EvaluateVisitor0(node);\n    },\n    visitEachRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;\n      var $async$visitEachRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.list;\n              $async$goto = 3;\n              return P._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);\n            case 3:\n              // returning from await.\n              list = $async$result;\n              nodeWithSpan = $async$self._async_evaluate0$_expressionNode$1(t1);\n              setVariables = node.variables.length === 1 ? new E._EvaluateVisitor_visitEachRule_closure8($async$self, node, nodeWithSpan) : new E._EvaluateVisitor_visitEachRule_closure9($async$self, node, nodeWithSpan);\n              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitEachRule_closure10($async$self, list, setVariables, node), true, type$.legacy_Value_2);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitEachRule$1, $async$completer);\n    },\n    _async_evaluate0$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {\n      var i,\n        list = value.get$asList(),\n        t1 = variables.length,\n        minLength = Math.min(t1, list.length);\n      for (i = 0; i < minLength; ++i)\n        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);\n      for (i = minLength; i < t1; ++i)\n        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], C.C_SassNull, nodeWithSpan);\n    },\n    visitErrorRule$1: function(node) {\n      return this.visitErrorRule$body$_EvaluateVisitor0(node);\n    },\n    visitErrorRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$self = this, $async$temp1, $async$temp2;\n      var $async$visitErrorRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = H;\n              $async$temp2 = J;\n              $async$goto = 2;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);\n            case 2:\n              // returning from await.\n              throw $async$temp1.wrapException($async$self._async_evaluate0$_exception$2($async$temp2.toString$0$($async$result), node.span));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitErrorRule$1, $async$completer);\n    },\n    visitExtendRule$1: function(node) {\n      return this.visitExtendRule$body$_EvaluateVisitor0(node);\n    },\n    visitExtendRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4;\n      var $async$visitExtendRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!($async$self._async_evaluate0$_styleRule != null && !$async$self._async_evaluate0$_atRootExcludingStyleRule) || $async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.x40exten, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);\n            case 3:\n              // returning from await.\n              targetText = $async$result;\n              for (t1 = $async$self._async_evaluate0$_adjustParseError$2(targetText, new E._EvaluateVisitor_visitExtendRule_closure2($async$self, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector_2, _i = 0; _i < t2; ++_i) {\n                t4 = t1[_i].components;\n                if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector0))\n                  throw H.wrapException(E.SassFormatException$0(\"complex selectors may not be extended.\", targetText.get$span()));\n                t4 = t3._as(C.JSArray_methods.get$first(t4)).components;\n                if (t4.length !== 1)\n                  throw H.wrapException(E.SassFormatException$0(string$.compou + C.JSArray_methods.join$1(t4, \", \") + string$.x60_inst, targetText.get$span()));\n                $async$self._async_evaluate0$_extender.addExtension$4($async$self._async_evaluate0$_styleRule.selector, C.JSArray_methods.get$first(t4), node, $async$self._async_evaluate0$_mediaQueries);\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitExtendRule$1, $async$completer);\n    },\n    visitAtRule$1: function(node) {\n      return this.visitAtRule$body$_EvaluateVisitor0(node);\n    },\n    visitAtRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, $name, t1, value, wasInKeyframes, wasInUnknownAtRule;\n      var $async$visitAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.At_rul, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$1(node.name), $async$visitAtRule$1);\n            case 3:\n              // returning from await.\n              $name = $async$result;\n              t1 = node.value;\n              $async$goto = t1 == null ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$3$trim$warnForColor(t1, true, true), $async$visitAtRule$1);\n            case 7:\n              // returning from await.\n            case 5:\n              // join\n              value = $async$result;\n              if (node.children == null) {\n                $async$self._async_evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0($name, node.span, true, value));\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              wasInKeyframes = $async$self._async_evaluate0$_inKeyframes;\n              wasInUnknownAtRule = $async$self._async_evaluate0$_inUnknownAtRule;\n              if (B.unvendor0($name.get$value($name)) === \"keyframes\")\n                $async$self._async_evaluate0$_inKeyframes = true;\n              else\n                $async$self._async_evaluate0$_inUnknownAtRule = true;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0($name, node.span, false, value), new E._EvaluateVisitor_visitAtRule_closure5($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitAtRule_closure6(), type$.legacy_ModifiableCssAtRule_2, type$.Null), $async$visitAtRule$1);\n            case 8:\n              // returning from await.\n              $async$self._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n              $async$self._async_evaluate0$_inKeyframes = wasInKeyframes;\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitAtRule$1, $async$completer);\n    },\n    visitForRule$1: function(node) {\n      return this.visitForRule$body$_EvaluateVisitor0(node);\n    },\n    visitForRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;\n      var $async$visitForRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              t2 = node.from;\n              t3 = type$.legacy_SassNumber_2;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t2, new E._EvaluateVisitor_visitForRule_closure14($async$self, node), t3), $async$visitForRule$1);\n            case 3:\n              // returning from await.\n              fromNumber = $async$result;\n              t4 = node.to;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t4, new E._EvaluateVisitor_visitForRule_closure15($async$self, node), t3), $async$visitForRule$1);\n            case 4:\n              // returning from await.\n              toNumber = $async$result;\n              from = $async$self._async_evaluate0$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitForRule_closure16(fromNumber, toNumber));\n              to = t1.to = $async$self._async_evaluate0$_addExceptionSpan$2(t4, new E._EvaluateVisitor_visitForRule_closure17(toNumber));\n              direction = from > to ? -1 : 1;\n              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new E._EvaluateVisitor_visitForRule_closure18(t1, $async$self, node, from, direction), true, type$.legacy_Value_2);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitForRule$1, $async$completer);\n    },\n    visitForwardRule$1: function(node) {\n      return this.visitForwardRule$body$_EvaluateVisitor0(node);\n    },\n    visitForwardRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, oldConfiguration, adjustedConfiguration, t1, t2, t3;\n      var $async$visitForwardRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldConfiguration = $async$self._async_evaluate0$_configuration;\n              adjustedConfiguration = oldConfiguration.throughForward$1(node);\n              t1 = node.configuration;\n              t2 = t1.length;\n              t3 = node.url;\n              $async$goto = t2 !== 0 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);\n            case 6:\n              // returning from await.\n              newConfiguration = $async$result;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_loadModule$5$configuration(t3, \"@forward\", node, new E._EvaluateVisitor_visitForwardRule_closure5($async$self, node), newConfiguration), $async$visitForwardRule$1);\n            case 7:\n              // returning from await.\n              t3 = type$.legacy_String;\n              t4 = P.LinkedHashSet_LinkedHashSet(t3);\n              for (_i = 0; _i < t2; ++_i) {\n                variable = t1[_i];\n                if (!variable.isGuarded)\n                  t4.add$1(0, variable.name);\n              }\n              $async$self._async_evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);\n              t3 = P.LinkedHashSet_LinkedHashSet(t3);\n              for (_i = 0; _i < t2; ++_i)\n                t3.add$1(0, t1[_i].name);\n              $async$self._async_evaluate0$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$self._async_evaluate0$_configuration = adjustedConfiguration;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._async_evaluate0$_loadModule$4(t3, \"@forward\", node, new E._EvaluateVisitor_visitForwardRule_closure6($async$self, node)), $async$visitForwardRule$1);\n            case 8:\n              // returning from await.\n              $async$self._async_evaluate0$_configuration = oldConfiguration;\n            case 4:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitForwardRule$1, $async$completer);\n    },\n    _async_evaluate0$_addForwardConfiguration$2: function(configuration, node) {\n      return this._addForwardConfiguration$body$_EvaluateVisitor0(configuration, node);\n    },\n    _addForwardConfiguration$body$_EvaluateVisitor0: function(configuration, node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Configuration_2),\n        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, t1, newValues, $async$temp1, $async$temp2, $async$temp3;\n      var $async$_async_evaluate0$_addForwardConfiguration$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = configuration._configuration$_values;\n              newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue_2), type$.legacy_String, type$.legacy_ConfiguredValue_2);\n              t2 = node.configuration, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              variable = t2[_i];\n              if (variable.isGuarded) {\n                t4 = variable.name;\n                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);\n                if (t5 != null && !J.$eq$(t5.value, C.C_SassNull)) {\n                  newValues.$indexSet(0, t4, t5);\n                  // goto for update\n                  $async$goto = 4;\n                  break;\n                }\n              }\n              t4 = variable.name;\n              t5 = variable.expression;\n              $async$temp1 = newValues;\n              $async$temp2 = t4;\n              $async$temp3 = Z;\n              $async$goto = 6;\n              return P._asyncAwait(t5.accept$1($async$self), $async$_async_evaluate0$_addForwardConfiguration$2);\n            case 6:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue0($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate0$_expressionNode$1(t5)));\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = new A.Configuration0(newValues, node, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_addForwardConfiguration$2, $async$completer);\n    },\n    _async_evaluate0$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {\n      var t1, t2, t3, _i, $name;\n      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        $name = t2[_i];\n        if (except.contains$1(0, $name))\n          continue;\n        if (!downstream._configuration$_values.containsKey$1($name))\n          if (!t1.get$isEmpty(t1))\n            t1.remove$1(0, $name);\n      }\n    },\n    _async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {\n      configuration._configuration$_values.forEach$1(0, new E._EvaluateVisitor__assertConfigurationIsEmpty_closure2(this, only, nameInError));\n    },\n    _async_evaluate0$_assertConfigurationIsEmpty$1: function(configuration) {\n      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);\n    },\n    _async_evaluate0$_assertConfigurationIsEmpty$2$only: function(configuration, only) {\n      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);\n    },\n    _async_evaluate0$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {\n      return this._async_evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);\n    },\n    visitFunctionRule$1: function(node) {\n      return this.visitFunctionRule$body$_EvaluateVisitor0(node);\n    },\n    visitFunctionRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;\n      var $async$visitFunctionRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_environment;\n              t2 = t1.closure$0();\n              t3 = t1._async_environment0$_functions;\n              index = t3.length - 1;\n              t4 = node.name;\n              t1._async_environment0$_functionIndices.$indexSet(0, t4, index);\n              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment_2));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitFunctionRule$1, $async$completer);\n    },\n    visitIfRule$1: function(node) {\n      return this.visitIfRule$body$_EvaluateVisitor0(node);\n    },\n    visitIfRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;\n      var $async$visitIfRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              _box_0 = {};\n              _box_0.clause = node.lastClause;\n              t1 = node.clauses, t2 = t1.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              clauseToCheck = t1[_i];\n              $async$goto = 6;\n              return P._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);\n            case 6:\n              // returning from await.\n              if ($async$result.get$isTruthy()) {\n                _box_0.clause = clauseToCheck;\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t1 = _box_0.clause;\n              if (t1 == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitIfRule_closure2(_box_0, $async$self), true, t1.hasDeclarations, type$.legacy_Value_2), $async$visitIfRule$1);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIfRule$1, $async$completer);\n    },\n    visitImportRule$1: function(node) {\n      return this.visitImportRule$body$_EvaluateVisitor0(node);\n    },\n    visitImportRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;\n      var $async$visitImportRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.imports, t2 = t1.length, t3 = type$.legacy_StaticImport_2, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $import = t1[_i];\n              $async$goto = $import instanceof B.DynamicImport0 ? 6 : 8;\n              break;\n            case 6:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait($async$self._async_evaluate0$_visitDynamicImport$1($import), $async$visitImportRule$1);\n            case 9:\n              // returning from await.\n              // goto join\n              $async$goto = 7;\n              break;\n            case 8:\n              // else\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);\n            case 10:\n              // returning from await.\n            case 7:\n              // join\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitImportRule$1, $async$completer);\n    },\n    _async_evaluate0$_visitDynamicImport$1: function($import) {\n      return this._async_evaluate0$_withStackFrame$1$3(\"@import\", $import, new E._EvaluateVisitor__visitDynamicImport_closure2(this, $import), type$.void);\n    },\n    _async_evaluate0$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {\n      return this._loadStylesheet$body$_EvaluateVisitor0(url, span, baseUrl, forImport);\n    },\n    _async_evaluate0$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {\n      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);\n    },\n    _async_evaluate0$_loadStylesheet$3$forImport: function(url, span, forImport) {\n      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);\n    },\n    _loadStylesheet$body$_EvaluateVisitor0: function(url, span, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, stylesheet, tuple, error, error0, message, t1, t2, t3, exception, message0, $async$exception;\n      var $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$self._async_evaluate0$_importSpan = span;\n              $async$goto = $async$self._async_evaluate0$_nodeImporter != null ? 7 : 9;\n              break;\n            case 7:\n              // then\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_importLikeNode$2(url, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);\n            case 10:\n              // returning from await.\n              stylesheet = $async$result;\n              if (stylesheet != null) {\n                $async$returnValue = new S.Tuple2(null, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2);\n                $async$next = [1];\n                // goto finally\n                $async$goto = 5;\n                break;\n              }\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              t1 = P.Uri_parse(url);\n              t2 = $async$self._async_evaluate0$_importer;\n              if (baseUrl == null) {\n                t3 = $async$self._async_evaluate0$_stylesheet;\n                t3 = t3 == null ? null : t3.span;\n                t3 = t3 == null ? null : t3.file.url;\n              } else\n                t3 = baseUrl;\n              $async$goto = 11;\n              return P._asyncAwait($async$self._async_evaluate0$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);\n            case 11:\n              // returning from await.\n              tuple = $async$result;\n              if (tuple != null) {\n                $async$returnValue = tuple;\n                $async$next = [1];\n                // goto finally\n                $async$goto = 5;\n                break;\n              }\n            case 8:\n              // join\n              if (C.JSString_methods.startsWith$1(url, \"package:\") && true)\n                throw H.wrapException(string$.x22packa);\n              else\n                throw H.wrapException(\"Can't find stylesheet to import.\");\n              $async$next.push(6);\n              // goto finally\n              $async$goto = 5;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.SassException0) {\n                error = t1;\n                t1 = $async$self._async_evaluate0$_exception$2(error._span_exception$_message, error.get$span());\n                throw H.wrapException(t1);\n              } else {\n                error0 = t1;\n                message = null;\n                try {\n                  message = H._asStringS(J.get$message$x(error0));\n                } catch (exception) {\n                  H.unwrapException($async$exception);\n                  message0 = J.toString$0$(error0);\n                  message = message0;\n                }\n                t1 = $async$self._async_evaluate0$_exception$1(message);\n                throw H.wrapException(t1);\n              }\n              $async$next.push(6);\n              // goto finally\n              $async$goto = 5;\n              break;\n            case 3:\n              // uncaught\n              $async$next = [2];\n            case 5:\n              // finally\n              $async$handler = 2;\n              $async$self._async_evaluate0$_importSpan = null;\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport, $async$completer);\n    },\n    _async_evaluate0$_importLikeNode$2: function(originalUrl, forImport) {\n      return this._importLikeNode$body$_EvaluateVisitor(originalUrl, forImport);\n    },\n    _importLikeNode$body$_EvaluateVisitor: function(originalUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),\n        $async$returnValue, $async$self = this, contents, url, t1, result;\n      var $async$_async_evaluate0$_importLikeNode$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_stylesheet.span;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_nodeImporter.loadAsync$3(originalUrl, t1.file.url, forImport), $async$_async_evaluate0$_importLikeNode$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if (result == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              contents = result.item1;\n              url = result.item2;\n              t1 = J.getInterceptor$s(url).startsWith$1(url, \"file:\") ? $.$get$context().style.pathFromUri$1(M._parseUri(url)) : url;\n              $async$self._async_evaluate0$_includedFiles.add$1(0, t1);\n              t1 = C.JSString_methods.startsWith$1(url, \"file\") ? M.Syntax_forPath0(url) : C.Syntax_SCSS0;\n              $async$returnValue = V.Stylesheet_Stylesheet$parse0(contents, t1, $async$self._async_evaluate0$_logger, url);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_importLikeNode$2, $async$completer);\n    },\n    _async_evaluate0$_visitStaticImport$1: function($import) {\n      return this._visitStaticImport$body$_EvaluateVisitor0($import);\n    },\n    _visitStaticImport$body$_EvaluateVisitor0: function($import) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, resolvedSupports, t1, mediaQuery, node, t2, url, supports, $async$temp1, $async$temp2;\n      var $async$_async_evaluate0$_visitStaticImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$1($import.url), $async$_async_evaluate0$_visitStaticImport$1);\n            case 3:\n              // returning from await.\n              url = $async$result;\n              supports = $import.supports;\n              $async$goto = supports instanceof L.SupportsDeclaration0 ? 4 : 6;\n              break;\n            case 4:\n              // then\n              $async$temp1 = H;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(supports.name), $async$_async_evaluate0$_visitStaticImport$1);\n            case 7:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \": \";\n              $async$temp2 = H;\n              $async$goto = 8;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(supports.value), $async$_async_evaluate0$_visitStaticImport$1);\n            case 8:\n              // returning from await.\n              resolvedSupports = $async$temp1 + $async$temp2.S($async$result);\n              // goto join\n              $async$goto = 5;\n              break;\n            case 6:\n              // else\n              $async$goto = supports == null ? 9 : 11;\n              break;\n            case 9:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 10;\n              break;\n            case 11:\n              // else\n              $async$goto = 12;\n              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(supports), $async$_async_evaluate0$_visitStaticImport$1);\n            case 12:\n              // returning from await.\n            case 10:\n              // join\n              resolvedSupports = $async$result;\n            case 5:\n              // join\n              t1 = $import.media;\n              $async$goto = t1 == null ? 13 : 15;\n              break;\n            case 13:\n              // then\n              $async$result = null;\n              // goto join\n              $async$goto = 14;\n              break;\n            case 15:\n              // else\n              $async$goto = 16;\n              return P._asyncAwait($async$self._async_evaluate0$_visitMediaQueries$1(t1), $async$_async_evaluate0$_visitStaticImport$1);\n            case 16:\n              // returning from await.\n            case 14:\n              // join\n              mediaQuery = $async$result;\n              t1 = $import.span;\n              node = F.ModifiableCssImport$0(url, t1, mediaQuery, resolvedSupports == null ? null : new F.CssValue0(\"supports(\" + resolvedSupports + \")\", supports.get$span(), type$.CssValue_legacy_String_2));\n              t1 = $async$self._async_evaluate0$_parent;\n              t2 = $async$self._async_evaluate0$_root;\n              if (t1 != t2)\n                t1.addChild$1(node);\n              else if ($async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n                $async$self._async_evaluate0$_root.addChild$1(node);\n                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;\n              } else {\n                t1 = $async$self._async_evaluate0$_outOfOrderImports;\n                (t1 == null ? $async$self._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(node);\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_visitStaticImport$1, $async$completer);\n    },\n    visitIncludeRule$1: function(node) {\n      return this.visitIncludeRule$body$_EvaluateVisitor0(node);\n    },\n    visitIncludeRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, nodeWithSpan, t1, t2, contentCallable, mixin;\n      var $async$visitIncludeRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              mixin = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitIncludeRule_closure8($async$self, node));\n              if (mixin == null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(\"Undefined mixin.\", node.span));\n              nodeWithSpan = new B._FakeAstNode0(new E._EvaluateVisitor_visitIncludeRule_closure9(node));\n              $async$goto = type$.legacy_AsyncBuiltInCallable_2._is(mixin) ? 3 : 5;\n              break;\n            case 3:\n              // then\n              if (node.content != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(\"Mixin doesn't accept a content block.\", node.span));\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan), $async$visitIncludeRule$1);\n            case 6:\n              // returning from await.\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment_2._is(mixin) ? 7 : 9;\n              break;\n            case 7:\n              // then\n              t1 = node.content;\n              t2 = t1 == null;\n              if (!t2 && !type$.legacy_MixinRule_2._as(mixin.declaration).hasContent)\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(\"Mixin doesn't accept a content block.\", node.get$spanWithoutContent(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(node.get$spanWithoutContent())));\n              contentCallable = t2 ? null : new E.UserDefinedCallable0(t1, $async$self._async_evaluate0$_environment.closure$0(), type$.UserDefinedCallable_legacy_AsyncEnvironment_2);\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new E._EvaluateVisitor_visitIncludeRule_closure10($async$self, contentCallable, mixin, nodeWithSpan)), $async$visitIncludeRule$1);\n            case 10:\n              // returning from await.\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              throw H.wrapException(P.UnsupportedError$(\"Unknown callable type \" + mixin.toString$0(0) + \".\"));\n            case 8:\n              // join\n            case 4:\n              // join\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIncludeRule$1, $async$completer);\n    },\n    visitMixinRule$1: function(node) {\n      return this.visitMixinRule$body$_EvaluateVisitor0(node);\n    },\n    visitMixinRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, index, t4;\n      var $async$visitMixinRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_environment;\n              t2 = t1.closure$0();\n              t3 = t1._async_environment0$_mixins;\n              index = t3.length - 1;\n              t4 = node.name;\n              t1._async_environment0$_mixinIndices.$indexSet(0, t4, index);\n              J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_AsyncEnvironment_2));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMixinRule$1, $async$completer);\n    },\n    visitLoudComment$1: function(node) {\n      return this.visitLoudComment$body$_EvaluateVisitor0(node);\n    },\n    visitLoudComment$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;\n      var $async$visitLoudComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_inFunction) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = $async$self._async_evaluate0$_parent;\n              t2 = $async$self._async_evaluate0$_root;\n              if (t1 == t2 && $async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;\n              t1 = node.text;\n              $async$temp1 = $async$self._async_evaluate0$_parent;\n              $async$temp2 = R;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(t1), $async$visitLoudComment$1);\n            case 3:\n              // returning from await.\n              $async$temp1.addChild$1(new $async$temp2.ModifiableCssComment0($async$result, t1.span));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitLoudComment$1, $async$completer);\n    },\n    visitMediaRule$1: function(node) {\n      return this.visitMediaRule$body$_EvaluateVisitor0(node);\n    },\n    visitMediaRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, queries, t1, mergedQueries;\n      var $async$visitMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Media_, node.span));\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_visitMediaQueries$1(node.query), $async$visitMediaRule$1);\n            case 3:\n              // returning from await.\n              queries = $async$result;\n              t1 = $async$self._async_evaluate0$_mediaQueries;\n              mergedQueries = t1 == null ? null : $async$self._async_evaluate0$_mergeMediaQueries$2(t1, queries);\n              t1 = mergedQueries == null;\n              if (!t1 && mergedQueries.length === 0) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = t1 ? queries : mergedQueries;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new E._EvaluateVisitor_visitMediaRule_closure5($async$self, mergedQueries, queries, node), node.hasDeclarations, new E._EvaluateVisitor_visitMediaRule_closure6(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null), $async$visitMediaRule$1);\n            case 4:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMediaRule$1, $async$completer);\n    },\n    _async_evaluate0$_visitMediaQueries$1: function(interpolation) {\n      return this._visitMediaQueries$body$_EvaluateVisitor0(interpolation);\n    },\n    _visitMediaQueries$body$_EvaluateVisitor0: function(interpolation) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_List_legacy_CssMediaQuery_2),\n        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;\n      var $async$_async_evaluate0$_visitMediaQueries$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = interpolation;\n              $async$temp2 = E;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, true), $async$_async_evaluate0$_visitMediaQueries$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$self._async_evaluate0$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor__visitMediaQueries_closure2($async$self, $async$result));\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_visitMediaQueries$1, $async$completer);\n    },\n    _async_evaluate0$_mergeMediaQueries$2: function(queries1, queries2) {\n      var t1, t2, t3, t4, t5, result,\n        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2);\n      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult_2; t1.moveNext$0();) {\n        t4 = t1.get$current(t1);\n        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {\n          result = t4.merge$1(t5.get$current(t5));\n          if (result === C._SingletonCssMediaQueryMergeResult_empty0)\n            continue;\n          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable0)\n            return null;\n          queries.push(t3._as(result).query);\n        }\n      }\n      return queries;\n    },\n    visitReturnRule$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitSilentComment$1: function(node) {\n      return this.visitSilentComment$body$_EvaluateVisitor0(node);\n    },\n    visitSilentComment$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue;\n      var $async$visitSilentComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSilentComment$1, $async$completer);\n    },\n    visitStyleRule$1: function(node) {\n      return this.visitStyleRule$body$_EvaluateVisitor0(node);\n    },\n    visitStyleRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, t1;\n      var $async$visitStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Style_, node.span));\n              t2 = node.selector;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_interpolationToValue$3$trim$warnForColor(t2, true, true), $async$visitStyleRule$1);\n            case 3:\n              // returning from await.\n              selectorText = $async$result;\n              $async$goto = $async$self._async_evaluate0$_inKeyframes ? 4 : 5;\n              break;\n            case 4:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(new F.CssValue0(P.List_List$unmodifiable($async$self._async_evaluate0$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure20($async$self, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String_2), node.span), new E._EvaluateVisitor_visitStyleRule_closure21($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure22(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null), $async$visitStyleRule$1);\n            case 6:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // join\n              t1.parsedSelector = $async$self._async_evaluate0$_adjustParseError$2(t2, new E._EvaluateVisitor_visitStyleRule_closure23($async$self, selectorText));\n              parsedSelector = $async$self._async_evaluate0$_addExceptionSpan$2(t2, new E._EvaluateVisitor_visitStyleRule_closure24(t1, $async$self));\n              t1.parsedSelector = parsedSelector;\n              rule = X.ModifiableCssStyleRule$0($async$self._async_evaluate0$_extender.addSelector$3(parsedSelector, t2.span, $async$self._async_evaluate0$_mediaQueries), node.span, t1.parsedSelector);\n              oldAtRootExcludingStyleRule = $async$self._async_evaluate0$_atRootExcludingStyleRule;\n              $async$self._async_evaluate0$_atRootExcludingStyleRule = false;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitStyleRule_closure25($async$self, rule, node), node.hasDeclarations, new E._EvaluateVisitor_visitStyleRule_closure26(), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$visitStyleRule$1);\n            case 7:\n              // returning from await.\n              $async$self._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              if (!($async$self._async_evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n                t1 = $async$self._async_evaluate0$_parent.children;\n                t1 = !t1.get$isEmpty(t1);\n              } else\n                t1 = false;\n              if (t1) {\n                t1 = $async$self._async_evaluate0$_parent.children;\n                t1.get$last(t1).isGroupEnd = true;\n              }\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStyleRule$1, $async$completer);\n    },\n    visitSupportsRule$1: function(node) {\n      return this.visitSupportsRule$body$_EvaluateVisitor0(node);\n    },\n    visitSupportsRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;\n      var $async$visitSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Suppor, node.span));\n              t1 = node.condition;\n              $async$temp1 = B;\n              $async$temp2 = F;\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(t1), $async$visitSupportsRule$1);\n            case 4:\n              // returning from await.\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through($async$temp1.ModifiableCssSupportsRule$0(new $async$temp2.CssValue0($async$result, t1.get$span(), type$.CssValue_legacy_String_2), node.span), new E._EvaluateVisitor_visitSupportsRule_closure5($async$self, node), node.hasDeclarations, new E._EvaluateVisitor_visitSupportsRule_closure6(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null), $async$visitSupportsRule$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSupportsRule$1, $async$completer);\n    },\n    _async_evaluate0$_visitSupportsCondition$1: function(condition) {\n      return this._visitSupportsCondition$body$_EvaluateVisitor0(condition);\n    },\n    _visitSupportsCondition$body$_EvaluateVisitor0: function(condition) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;\n      var $async$_async_evaluate0$_visitSupportsCondition$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = condition instanceof U.SupportsOperation0 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              t1 = condition.operator;\n              $async$temp1 = H;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$2(condition.left, t1), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 6:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \" \" + t1 + \" \";\n              $async$temp2 = H;\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$2(condition.right, t1), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = condition instanceof M.SupportsNegation0 ? 8 : 10;\n              break;\n            case 8:\n              // then\n              $async$temp1 = H;\n              $async$goto = 11;\n              return P._asyncAwait($async$self._async_evaluate0$_parenthesize$1(condition.condition), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 11:\n              // returning from await.\n              $async$returnValue = \"not \" + $async$temp1.S($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 9;\n              break;\n            case 10:\n              // else\n              $async$goto = condition instanceof X.SupportsInterpolation0 ? 12 : 14;\n              break;\n            case 12:\n              // then\n              $async$goto = 15;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$2$quote(condition.expression, false), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 15:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 13;\n              break;\n            case 14:\n              // else\n              $async$goto = condition instanceof L.SupportsDeclaration0 ? 16 : 18;\n              break;\n            case 16:\n              // then\n              $async$temp1 = H;\n              $async$goto = 19;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(condition.name), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 19:\n              // returning from await.\n              $async$temp1 = \"(\" + $async$temp1.S($async$result) + \": \";\n              $async$temp2 = H;\n              $async$goto = 20;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(condition.value), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 20:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 17;\n              break;\n            case 18:\n              // else\n              $async$goto = condition instanceof F.SupportsFunction0 ? 21 : 23;\n              break;\n            case 21:\n              // then\n              $async$temp1 = H;\n              $async$goto = 24;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.name), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 24:\n              // returning from await.\n              $async$temp1 = $async$temp1.S($async$result) + \"(\";\n              $async$temp2 = H;\n              $async$goto = 25;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.$arguments), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 25:\n              // returning from await.\n              $async$returnValue = $async$temp1 + $async$temp2.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 22;\n              break;\n            case 23:\n              // else\n              $async$goto = condition instanceof Y.SupportsAnything0 ? 26 : 28;\n              break;\n            case 26:\n              // then\n              $async$temp1 = H;\n              $async$goto = 29;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(condition.contents), $async$_async_evaluate0$_visitSupportsCondition$1);\n            case 29:\n              // returning from await.\n              $async$returnValue = \"(\" + $async$temp1.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 27;\n              break;\n            case 28:\n              // else\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 27:\n              // join\n            case 22:\n              // join\n            case 17:\n              // join\n            case 13:\n              // join\n            case 9:\n              // join\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_visitSupportsCondition$1, $async$completer);\n    },\n    _async_evaluate0$_parenthesize$2: function(condition, operator) {\n      return this._parenthesize$body$_EvaluateVisitor0(condition, operator);\n    },\n    _async_evaluate0$_parenthesize$1: function(condition) {\n      return this._async_evaluate0$_parenthesize$2(condition, null);\n    },\n    _parenthesize$body$_EvaluateVisitor0: function(condition, operator) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, $async$temp1;\n      var $async$_async_evaluate0$_parenthesize$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (!(condition instanceof M.SupportsNegation0))\n                if (condition instanceof U.SupportsOperation0)\n                  t1 = operator == null || operator !== condition.operator;\n                else\n                  t1 = false;\n              else\n                t1 = true;\n              $async$goto = t1 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$temp1 = H;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(condition), $async$_async_evaluate0$_parenthesize$2);\n            case 6:\n              // returning from await.\n              $async$returnValue = \"(\" + $async$temp1.S($async$result) + \")\";\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = 7;\n              return P._asyncAwait($async$self._async_evaluate0$_visitSupportsCondition$1(condition), $async$_async_evaluate0$_parenthesize$2);\n            case 7:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_parenthesize$2, $async$completer);\n    },\n    visitVariableDeclaration$1: function(node) {\n      return this.visitVariableDeclaration$body$_EvaluateVisitor0(node);\n    },\n    visitVariableDeclaration$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, value, t2, $async$temp1, $async$temp2, $async$temp3;\n      var $async$visitVariableDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (node.isGuarded) {\n                if (node.namespace == null && $async$self._async_evaluate0$_environment._async_environment0$_variables.length === 1) {\n                  t1 = $async$self._async_evaluate0$_configuration._configuration$_values;\n                  t1 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, node.name);\n                  if (t1 != null) {\n                    $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure8($async$self, node, t1));\n                    $async$returnValue = null;\n                    // goto return\n                    $async$goto = 1;\n                    break;\n                  }\n                }\n                value = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableDeclaration_closure9($async$self, node));\n                if (value != null && !value.$eq(0, C.C_SassNull)) {\n                  $async$returnValue = null;\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n              }\n              if (node.isGlobal && !$async$self._async_evaluate0$_environment.globalVariableExists$1(node.name)) {\n                t1 = $async$self._async_evaluate0$_environment._async_environment0$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName0(node.span) + \": null` at the root of the\\nstylesheet.\";\n                t2 = node.span;\n                $async$self._async_evaluate0$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, $async$self._async_evaluate0$_stackTrace$1(t2));\n              }\n              $async$temp1 = node;\n              $async$temp2 = E;\n              $async$temp3 = node;\n              $async$goto = 3;\n              return P._asyncAwait(node.expression.accept$1($async$self), $async$visitVariableDeclaration$1);\n            case 3:\n              // returning from await.\n              $async$self._async_evaluate0$_addExceptionSpan$2($async$temp1, new $async$temp2._EvaluateVisitor_visitVariableDeclaration_closure10($async$self, $async$temp3, $async$result.withoutSlash$0()));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitVariableDeclaration$1, $async$completer);\n    },\n    visitUseRule$1: function(node) {\n      return this.visitUseRule$body$_EvaluateVisitor0(node);\n    },\n    visitUseRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, configuration, t3, _i, variable, t4, t5, t1, t2, $async$temp1, $async$temp2, $async$temp3;\n      var $async$visitUseRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.configuration;\n              t2 = t1.length;\n              $async$goto = t2 === 0 ? 3 : 5;\n              break;\n            case 3:\n              // then\n              configuration = C.Configuration_Map_empty_null_true0;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);\n              _i = 0;\n            case 6:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 8;\n                break;\n              }\n              variable = t1[_i];\n              t4 = variable.name;\n              t5 = variable.expression;\n              $async$temp1 = t3;\n              $async$temp2 = t4;\n              $async$temp3 = Z;\n              $async$goto = 9;\n              return P._asyncAwait(t5.accept$1($async$self), $async$visitUseRule$1);\n            case 9:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue0($async$result.withoutSlash$0(), variable.span, $async$self._async_evaluate0$_expressionNode$1(t5)));\n            case 7:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 6;\n              break;\n            case 8:\n              // after for\n              configuration = new A.Configuration0(t3, node, false);\n            case 4:\n              // join\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_loadModule$5$configuration(node.url, \"@use\", node, new E._EvaluateVisitor_visitUseRule_closure2($async$self, node), configuration), $async$visitUseRule$1);\n            case 10:\n              // returning from await.\n              $async$self._async_evaluate0$_assertConfigurationIsEmpty$1(configuration);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitUseRule$1, $async$completer);\n    },\n    visitWarnRule$1: function(node) {\n      return this.visitWarnRule$body$_EvaluateVisitor0(node);\n    },\n    visitWarnRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, value, t1;\n      var $async$visitWarnRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitWarnRule_closure2($async$self, node), type$.legacy_Value_2), $async$visitWarnRule$1);\n            case 3:\n              // returning from await.\n              value = $async$result;\n              t1 = value instanceof D.SassString0 ? value.text : $async$self._async_evaluate0$_serialize$2(value, node.expression);\n              $async$self._async_evaluate0$_logger.warn$2$trace(0, t1, $async$self._async_evaluate0$_stackTrace$1(node.span));\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitWarnRule$1, $async$completer);\n    },\n    visitWhileRule$1: function(node) {\n      return this._async_evaluate0$_environment.scope$1$3$semiGlobal$when(new E._EvaluateVisitor_visitWhileRule_closure2(this, node), true, node.hasDeclarations, type$.legacy_Value_2);\n    },\n    visitBinaryOperationExpression$1: function(node) {\n      return this._async_evaluate0$_addExceptionSpanAsync$1$2(node, new E._EvaluateVisitor_visitBinaryOperationExpression_closure2(this, node), type$.legacy_Value_2);\n    },\n    visitValueExpression$1: function(node) {\n      return this.visitValueExpression$body$_EvaluateVisitor0(node);\n    },\n    visitValueExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue;\n      var $async$visitValueExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitValueExpression$1, $async$completer);\n    },\n    visitVariableExpression$1: function(node) {\n      return this.visitVariableExpression$body$_EvaluateVisitor0(node);\n    },\n    visitVariableExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, result;\n      var $async$visitVariableExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              result = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitVariableExpression_closure2($async$self, node));\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              throw H.wrapException($async$self._async_evaluate0$_exception$2(\"Undefined variable.\", node.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitVariableExpression$1, $async$completer);\n    },\n    visitUnaryOperationExpression$1: function(node) {\n      return this.visitUnaryOperationExpression$body$_EvaluateVisitor0(node);\n    },\n    visitUnaryOperationExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, operand, t1;\n      var $async$visitUnaryOperationExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          $async$outer:\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                $async$goto = 3;\n                return P._asyncAwait(node.operand.accept$1($async$self), $async$visitUnaryOperationExpression$1);\n              case 3:\n                // returning from await.\n                operand = $async$result;\n                t1 = node.operator;\n                switch (t1) {\n                  case C.UnaryOperator_j2w0:\n                    $async$returnValue = operand.unaryPlus$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_U4G0:\n                    $async$returnValue = operand.unaryMinus$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_zDx0:\n                    operand.toString;\n                    $async$returnValue = new D.SassString0(\"/\" + N.serializeValue(operand, false, true), false);\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  case C.UnaryOperator_not_not0:\n                    $async$returnValue = operand.unaryNot$0();\n                    // goto return\n                    $async$goto = 1;\n                    break $async$outer;\n                  default:\n                    throw H.wrapException(P.StateError$(\"Unknown unary operator \" + H.S(t1) + \".\"));\n                }\n              case 1:\n                // return\n                return P._asyncReturn($async$returnValue, $async$completer);\n            }\n      });\n      return P._asyncStartSync($async$visitUnaryOperationExpression$1, $async$completer);\n    },\n    visitBooleanExpression$1: function(node) {\n      return this.visitBooleanExpression$body$_EvaluateVisitor0(node);\n    },\n    visitBooleanExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassBoolean_2),\n        $async$returnValue;\n      var $async$visitBooleanExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value ? C.SassBoolean_true : C.SassBoolean_false;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitBooleanExpression$1, $async$completer);\n    },\n    visitIfExpression$1: function(node) {\n      return this.visitIfExpression$body$_EvaluateVisitor0(node);\n    },\n    visitIfExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, condition, ifTrue, ifFalse, pair, positional, named, t1;\n      var $async$visitIfExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateMacroArguments$1(node), $async$visitIfExpression$1);\n            case 3:\n              // returning from await.\n              pair = $async$result;\n              positional = pair.item1;\n              named = pair.item2;\n              t1 = J.getInterceptor$asx(positional);\n              $async$self._async_evaluate0$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration0(), node);\n              condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, \"condition\");\n              ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, \"if-true\");\n              ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, \"if-false\");\n              $async$goto = 5;\n              return P._asyncAwait(condition.accept$1($async$self), $async$visitIfExpression$1);\n            case 5:\n              // returning from await.\n              $async$goto = 4;\n              return P._asyncAwait(($async$result.get$isTruthy() ? ifTrue : ifFalse).accept$1($async$self), $async$visitIfExpression$1);\n            case 4:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitIfExpression$1, $async$completer);\n    },\n    visitNullExpression$1: function(node) {\n      return this.visitNullExpression$body$_EvaluateVisitor0(node);\n    },\n    visitNullExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNull_2),\n        $async$returnValue;\n      var $async$visitNullExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = C.C_SassNull;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitNullExpression$1, $async$completer);\n    },\n    visitNumberExpression$1: function(node) {\n      return this.visitNumberExpression$body$_EvaluateVisitor0(node);\n    },\n    visitNumberExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),\n        $async$returnValue;\n      var $async$visitNumberExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = T.SassNumber$0(node.value, node.unit);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitNumberExpression$1, $async$completer);\n    },\n    visitParenthesizedExpression$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitColorExpression$1: function(node) {\n      return this.visitColorExpression$body$_EvaluateVisitor0(node);\n    },\n    visitColorExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassColor_2),\n        $async$returnValue;\n      var $async$visitColorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$returnValue = node.value;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitColorExpression$1, $async$completer);\n    },\n    visitListExpression$1: function(node) {\n      return this.visitListExpression$body$_EvaluateVisitor0(node);\n    },\n    visitListExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassList_2),\n        $async$returnValue, $async$self = this, $async$temp1;\n      var $async$visitListExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = D;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync0(node.contents, new E._EvaluateVisitor_visitListExpression_closure2($async$self), type$.legacy_Expression_2, type$.legacy_Value_2), $async$visitListExpression$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$temp1.SassList$0($async$result, node.separator, node.hasBrackets);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitListExpression$1, $async$completer);\n    },\n    visitMapExpression$1: function(node) {\n      return this.visitMapExpression$body$_EvaluateVisitor0(node);\n    },\n    visitMapExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassMap_2),\n        $async$returnValue, $async$self = this, t2, t3, _i, pair, t4, keyValue, valueValue, t1, map, keyNodes;\n      var $async$visitMapExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = type$.legacy_Value_2;\n              map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n              keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode_2);\n              t2 = node.pairs, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              pair = t2[_i];\n              t4 = pair.item1;\n              $async$goto = 6;\n              return P._asyncAwait(t4.accept$1($async$self), $async$visitMapExpression$1);\n            case 6:\n              // returning from await.\n              keyValue = $async$result;\n              $async$goto = 7;\n              return P._asyncAwait(pair.item2.accept$1($async$self), $async$visitMapExpression$1);\n            case 7:\n              // returning from await.\n              valueValue = $async$result;\n              if (map.containsKey$1(keyValue))\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(\"Duplicate key.\", t4.get$span(), \"second key\", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), \"first key\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(t4.get$span())));\n              map.$indexSet(0, keyValue, valueValue);\n              keyNodes.$indexSet(0, keyValue, t4);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitMapExpression$1, $async$completer);\n    },\n    visitFunctionExpression$1: function(node) {\n      return this.visitFunctionExpression$body$_EvaluateVisitor0(node);\n    },\n    visitFunctionExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, oldInFunction, result, t1, t2, plainName, $async$temp1, $async$temp2;\n      var $async$visitFunctionExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = {};\n              t2 = node.name;\n              plainName = t2.get$asPlain();\n              t1.$function = null;\n              $async$goto = (plainName != null ? t1.$function = $async$self._async_evaluate0$_addExceptionSpan$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure5($async$self, node, plainName)) : null) == null ? 3 : 4;\n              break;\n            case 3:\n              // then\n              if (node.namespace != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(\"Undefined function.\", node.span));\n              $async$temp1 = t1;\n              $async$temp2 = L;\n              $async$goto = 5;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$1(t2), $async$visitFunctionExpression$1);\n            case 5:\n              // returning from await.\n              $async$temp1.$function = new $async$temp2.PlainCssCallable0($async$result);\n            case 4:\n              // join\n              oldInFunction = $async$self._async_evaluate0$_inFunction;\n              $async$self._async_evaluate0$_inFunction = true;\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_addErrorSpan$1$2(node, new E._EvaluateVisitor_visitFunctionExpression_closure6(t1, $async$self, node), type$.legacy_Value_2), $async$visitFunctionExpression$1);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_inFunction = oldInFunction;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitFunctionExpression$1, $async$completer);\n    },\n    _async_evaluate0$_getFunction$2$namespace: function($name, namespace) {\n      var local = this._async_evaluate0$_environment.getFunction$2$namespace($name, namespace);\n      if (local != null || namespace != null)\n        return local;\n      return this._async_evaluate0$_builtInFunctions.$index(0, $name);\n    },\n    _async_evaluate0$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {\n      return this._runUserDefinedCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan, run);\n    },\n    _runUserDefinedCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan, run) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, evaluated, t1, $name;\n      var $async$_async_evaluate0$_runUserDefinedCallable$4 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateArguments$1($arguments), $async$_async_evaluate0$_runUserDefinedCallable$4);\n            case 3:\n              // returning from await.\n              evaluated = $async$result;\n              t1 = callable.declaration.name;\n              $name = t1 == null ? \"@content\" : t1 + \"()\";\n              $async$goto = 4;\n              return P._asyncAwait($async$self._async_evaluate0$_withStackFrame$1$3($name, nodeWithSpan, new E._EvaluateVisitor__runUserDefinedCallable_closure2($async$self, callable, evaluated, nodeWithSpan, run), type$.legacy_Value_2), $async$_async_evaluate0$_runUserDefinedCallable$4);\n            case 4:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_runUserDefinedCallable$4, $async$completer);\n    },\n    _async_evaluate0$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {\n      return this._runFunctionCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan);\n    },\n    _runFunctionCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, result, t1, t2, t3, first, _i, argument, rest, $async$temp1;\n      var $async$_async_evaluate0$_runFunctionCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = type$.legacy_AsyncBuiltInCallable_2._is(callable) ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait($async$self._async_evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan), $async$_async_evaluate0$_runFunctionCallable$3);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result == null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Custom, nodeWithSpan.get$span()));\n              $async$returnValue = result.withoutSlash$0();\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$goto = type$.legacy_UserDefinedCallable_legacy_AsyncEnvironment_2._is(callable) ? 7 : 9;\n              break;\n            case 7:\n              // then\n              $async$goto = 10;\n              return P._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new E._EvaluateVisitor__runFunctionCallable_closure2($async$self, callable)), $async$_async_evaluate0$_runFunctionCallable$3);\n            case 10:\n              // returning from await.\n              $async$returnValue = $async$result.withoutSlash$0();\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 8;\n              break;\n            case 9:\n              // else\n              $async$goto = callable instanceof L.PlainCssCallable0 ? 11 : 13;\n              break;\n            case 11:\n              // then\n              t1 = $arguments.named;\n              if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Plain_, nodeWithSpan.get$span()));\n              t1 = H.S(callable.name) + \"(\";\n              t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0;\n            case 14:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 16;\n                break;\n              }\n              argument = t2[_i];\n              if (first)\n                first = false;\n              else\n                t1 += \", \";\n              $async$temp1 = H;\n              $async$goto = 17;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateToCss$1(argument), $async$_async_evaluate0$_runFunctionCallable$3);\n            case 17:\n              // returning from await.\n              t1 += $async$temp1.S($async$result);\n            case 15:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 14;\n              break;\n            case 16:\n              // after for\n              t2 = $arguments.rest;\n              $async$goto = 18;\n              return P._asyncAwait(t2 == null ? null : t2.accept$1($async$self), $async$_async_evaluate0$_runFunctionCallable$3);\n            case 18:\n              // returning from await.\n              rest = $async$result;\n              if (rest != null) {\n                if (!first)\n                  t1 += \", \";\n                t2 = t1 + H.S($async$self._async_evaluate0$_serialize$2(rest, t2));\n                t1 = t2;\n              }\n              t1 += H.Primitives_stringFromCharCode(41);\n              $async$returnValue = new D.SassString0(t1.charCodeAt(0) == 0 ? t1 : t1, false);\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 12;\n              break;\n            case 13:\n              // else\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 12:\n              // join\n            case 8:\n              // join\n            case 4:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_runFunctionCallable$3, $async$completer);\n    },\n    _async_evaluate0$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {\n      return this._runBuiltInCallable$body$_EvaluateVisitor0($arguments, callable, nodeWithSpan);\n    },\n    _runBuiltInCallable$body$_EvaluateVisitor0: function($arguments, callable, nodeWithSpan) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, evaluated, oldCallableNode, $async$exception;\n      var $async$_async_evaluate0$_runBuiltInCallable$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_evaluateArguments$2$trackSpans($arguments, false), $async$_async_evaluate0$_runBuiltInCallable$3);\n            case 3:\n              // returning from await.\n              evaluated = $async$result;\n              oldCallableNode = $async$self._async_evaluate0$_callableNode;\n              $async$self._async_evaluate0$_callableNode = nodeWithSpan;\n              namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);\n              tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);\n              overload = tuple.item1;\n              callback = tuple.item2;\n              $async$self._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__runBuiltInCallable_closure5(overload, evaluated, namedSet));\n              declaredArguments = overload.$arguments;\n              i = evaluated.positional.length, t1 = declaredArguments.length;\n            case 4:\n              // for condition\n              if (!(i < t1)) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              argument = declaredArguments[i];\n              t2 = evaluated.positional;\n              t3 = evaluated.named.remove$1(0, argument.name);\n              $async$goto = t3 == null ? 7 : 8;\n              break;\n            case 7:\n              // then\n              t3 = argument.defaultValue;\n              $async$goto = 9;\n              return P._asyncAwait(t3 == null ? null : t3.accept$1($async$self), $async$_async_evaluate0$_runBuiltInCallable$3);\n            case 9:\n              // returning from await.\n              t3 = $async$result;\n            case 8:\n              // join\n              t2.push(t3);\n            case 5:\n              // for update\n              ++i;\n              // goto for condition\n              $async$goto = 4;\n              break;\n            case 6:\n              // after for\n              if (overload.restArgument != null) {\n                if (evaluated.positional.length > t1) {\n                  rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);\n                  C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);\n                } else\n                  rest = C.List_empty16;\n                t1 = evaluated.named;\n                argumentList = D.SassArgumentList$0(rest, t1, evaluated.separator === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : evaluated.separator);\n                evaluated.positional.push(argumentList);\n              } else\n                argumentList = null;\n              result = null;\n              $async$handler = 11;\n              $async$goto = 14;\n              return P._asyncAwait(callback.call$1(evaluated.positional), $async$_async_evaluate0$_runBuiltInCallable$3);\n            case 14:\n              // returning from await.\n              result = $async$result;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 13;\n              break;\n            case 11:\n              // catch\n              $async$handler = 10;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException_2._is(t1))\n                throw $async$exception;\n              else if (t1 instanceof E.MultiSpanSassScriptException0) {\n                error = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n              } else if (t1 instanceof E.MultiSpanSassException0) {\n                error0 = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(error0.get$span())));\n              } else {\n                error1 = t1;\n                message = null;\n                try {\n                  message = H._asStringS(J.get$message$x(error1));\n                } catch (exception) {\n                  H.unwrapException($async$exception);\n                  message0 = J.toString$0$(error1);\n                  message = message0;\n                }\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(message, nodeWithSpan.get$span()));\n              }\n              // goto after finally\n              $async$goto = 13;\n              break;\n            case 10:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 13:\n              // after finally\n              $async$self._async_evaluate0$_callableNode = oldCallableNode;\n              if (argumentList == null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = evaluated.named;\n              if (t1.get$isEmpty(t1)) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (argumentList._argument_list$_wereKeywordsAccessed) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = evaluated.named;\n              t1 = t1.get$keys(t1);\n              t1 = \"No \" + B.pluralize0(\"argument\", t1.get$length(t1), null) + \" named \";\n              t2 = evaluated.named;\n              throw H.wrapException(E.MultiSpanSassRuntimeException$0(t1 + H.S(B.toSentence0(t2.get$keys(t2).map$1$1(0, new E._EvaluateVisitor__runBuiltInCallable_closure6(), type$.legacy_Object), \"or\")) + \".\", nodeWithSpan.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_runBuiltInCallable$3, $async$completer);\n    },\n    _async_evaluate0$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {\n      return this._evaluateArguments$body$_EvaluateVisitor0($arguments, trackSpans);\n    },\n    _async_evaluate0$_evaluateArguments$1: function($arguments) {\n      return this._async_evaluate0$_evaluateArguments$2$trackSpans($arguments, null);\n    },\n    _evaluateArguments$body$_EvaluateVisitor0: function($arguments, trackSpans) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy__ArgumentResults_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, $async$temp1, $async$temp2;\n      var $async$_async_evaluate0$_evaluateArguments$2$trackSpans = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (trackSpans == null)\n                trackSpans = $async$self._async_evaluate0$_sourceMap;\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n              t2 = $arguments.positional, t3 = t2.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$temp1 = t1;\n              $async$goto = 6;\n              return P._asyncAwait(t2[_i].accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);\n            case 6:\n              // returning from await.\n              $async$temp1.push($async$result);\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t4 = type$.legacy_String;\n              t5 = type$.legacy_Value_2;\n              t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n              t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8);\n            case 7:\n              // for condition\n              if (!t8.moveNext$0()) {\n                // goto after for\n                $async$goto = 8;\n                break;\n              }\n              t9 = t8.get$current(t8);\n              $async$temp1 = t6;\n              $async$temp2 = t9.key;\n              $async$goto = 9;\n              return P._asyncAwait(t9.value.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);\n            case 9:\n              // returning from await.\n              $async$temp1.$indexSet(0, $async$temp2, $async$result);\n              // goto for condition\n              $async$goto = 7;\n              break;\n            case 8:\n              // after for\n              if (trackSpans) {\n                t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode_2);\n                for (_i = 0; _i < t3; ++_i)\n                  t8.push($async$self._async_evaluate0$_expressionNode$1(t2[_i]));\n                positionalNodes = t8;\n              } else\n                positionalNodes = null;\n              if (trackSpans) {\n                t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n                for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n                  t7 = t3.get$current(t3);\n                  t2.$indexSet(0, t7.key, $async$self._async_evaluate0$_expressionNode$1(t7.value));\n                }\n                namedNodes = t2;\n              } else\n                namedNodes = null;\n              t2 = $arguments.rest;\n              if (t2 == null) {\n                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided0);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 10;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);\n            case 10:\n              // returning from await.\n              rest = $async$result;\n              restNodeForSpan = trackSpans ? $async$self._async_evaluate0$_expressionNode$1(t2) : null;\n              if (rest instanceof A.SassMap0) {\n                $async$self._async_evaluate0$_addRestMap$1$3(t6, rest, t2, t5);\n                if (namedNodes != null) {\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n                  for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString_2; t3.moveNext$0();)\n                    t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);\n                  namedNodes.addAll$1(0, t2);\n                }\n                separator = C.ListSeparator_undecided0;\n              } else if (rest instanceof D.SassList0) {\n                t2 = rest._list1$_contents;\n                C.JSArray_methods.addAll$1(t1, t2);\n                if (positionalNodes != null)\n                  C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode_2));\n                separator = rest.separator;\n                if (rest instanceof D.SassArgumentList0) {\n                  rest._argument_list$_wereKeywordsAccessed = true;\n                  rest._argument_list$_keywords.forEach$1(0, new E._EvaluateVisitor__evaluateArguments_closure2(t6, namedNodes, restNodeForSpan));\n                }\n              } else {\n                t1.push(rest);\n                if (positionalNodes != null)\n                  positionalNodes.push(restNodeForSpan);\n                separator = C.ListSeparator_undecided0;\n              }\n              t2 = $arguments.keywordRest;\n              if (t2 == null) {\n                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, separator);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 11;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateArguments$2$trackSpans);\n            case 11:\n              // returning from await.\n              keywordRest = $async$result;\n              keywordRestNodeForSpan = trackSpans ? $async$self._async_evaluate0$_expressionNode$1(t2) : null;\n              if (keywordRest instanceof A.SassMap0) {\n                $async$self._async_evaluate0$_addRestMap$1$3(t6, keywordRest, t2, t5);\n                if (namedNodes != null) {\n                  t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n                  for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString_2; t3.moveNext$0();)\n                    t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);\n                  namedNodes.addAll$1(0, t2);\n                }\n                $async$returnValue = new E._ArgumentResults2(t1, positionalNodes, t6, namedNodes, separator);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", t2.get$span()));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_evaluateArguments$2$trackSpans, $async$completer);\n    },\n    _async_evaluate0$_evaluateMacroArguments$1: function(invocation) {\n      return this._evaluateMacroArguments$body$_EvaluateVisitor0(invocation);\n    },\n    _evaluateMacroArguments$body$_EvaluateVisitor0: function(invocation) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2),\n        $async$returnValue, $async$self = this, t3, positional, named, rest, keywordRest, t1, t2;\n      var $async$_async_evaluate0$_evaluateMacroArguments$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = invocation.$arguments;\n              t2 = t1.rest;\n              if (t2 == null) {\n                $async$returnValue = new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t3 = t1.positional;\n              positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1(\"JSArray<1>\"));\n              t3 = type$.legacy_Expression_2;\n              named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);\n              $async$goto = 3;\n              return P._asyncAwait(t2.accept$1($async$self), $async$_async_evaluate0$_evaluateMacroArguments$1);\n            case 3:\n              // returning from await.\n              rest = $async$result;\n              if (rest instanceof A.SassMap0)\n                $async$self._async_evaluate0$_addRestMap$1$4(named, rest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure11(), t3);\n              else if (rest instanceof D.SassList0) {\n                t2 = rest._list1$_contents;\n                C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new E._EvaluateVisitor__evaluateMacroArguments_closure12(), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Expression0*>\")));\n                if (rest instanceof D.SassArgumentList0) {\n                  rest._argument_list$_wereKeywordsAccessed = true;\n                  rest._argument_list$_keywords.forEach$1(0, new E._EvaluateVisitor__evaluateMacroArguments_closure13(named));\n                }\n              } else\n                positional.push(new F.ValueExpression0(rest, null));\n              t1 = t1.keywordRest;\n              if (t1 == null) {\n                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$goto = 4;\n              return P._asyncAwait(t1.accept$1($async$self), $async$_async_evaluate0$_evaluateMacroArguments$1);\n            case 4:\n              // returning from await.\n              keywordRest = $async$result;\n              if (keywordRest instanceof A.SassMap0) {\n                $async$self._async_evaluate0$_addRestMap$1$4(named, keywordRest, invocation, new E._EvaluateVisitor__evaluateMacroArguments_closure14(), t3);\n                $async$returnValue = new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", invocation.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_evaluateMacroArguments$1, $async$completer);\n    },\n    _async_evaluate0$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {\n      var t1 = {};\n      t1.convert = convert;\n      if (convert == null)\n        t1.convert = new E._EvaluateVisitor__addRestMap_closure5($T);\n      map.contents.forEach$1(0, new E._EvaluateVisitor__addRestMap_closure6(t1, this, values, map, nodeWithSpan));\n    },\n    _async_evaluate0$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {\n      return this._async_evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);\n    },\n    _async_evaluate0$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {\n      return this._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__verifyArguments_closure2($arguments, positional, named));\n    },\n    visitSelectorExpression$1: function(node) {\n      return this.visitSelectorExpression$body$_EvaluateVisitor0(node);\n    },\n    visitSelectorExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1;\n      var $async$visitSelectorExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_styleRule;\n              if (t1 == null) {\n                $async$returnValue = C.C_SassNull;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = t1.originalSelector.get$asSassList();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitSelectorExpression$1, $async$completer);\n    },\n    visitStringExpression$1: function(node) {\n      return this.visitStringExpression$body$_EvaluateVisitor0(node);\n    },\n    visitStringExpression$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassString_2),\n        $async$returnValue, $async$self = this, $async$temp1, $async$temp2;\n      var $async$visitStringExpression$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = D;\n              $async$temp2 = J;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync0(node.text.contents, new E._EvaluateVisitor_visitStringExpression_closure2($async$self), type$.legacy_Object, type$.legacy_String), $async$visitStringExpression$1);\n            case 3:\n              // returning from await.\n              $async$returnValue = new $async$temp1.SassString0($async$temp2.join$0$ax($async$result), node.hasQuotes);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitStringExpression$1, $async$completer);\n    },\n    visitCssAtRule$1: function(node) {\n      return this.visitCssAtRule$body$_EvaluateVisitor0(node);\n    },\n    visitCssAtRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, wasInKeyframes, wasInUnknownAtRule, t1;\n      var $async$visitCssAtRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.At_rul, node.span));\n              if (node.isChildless) {\n                $async$self._async_evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0(node.name, node.span, true, node.value));\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              wasInKeyframes = $async$self._async_evaluate0$_inKeyframes;\n              wasInUnknownAtRule = $async$self._async_evaluate0$_inUnknownAtRule;\n              t1 = node.name;\n              if (B.unvendor0(t1.get$value(t1)) === \"keyframes\")\n                $async$self._async_evaluate0$_inKeyframes = true;\n              else\n                $async$self._async_evaluate0$_inUnknownAtRule = true;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0(t1, node.span, false, node.value), new E._EvaluateVisitor_visitCssAtRule_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssAtRule_closure6(), type$.legacy_ModifiableCssAtRule_2, type$.Null), $async$visitCssAtRule$1);\n            case 3:\n              // returning from await.\n              $async$self._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n              $async$self._async_evaluate0$_inKeyframes = wasInKeyframes;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssAtRule$1, $async$completer);\n    },\n    visitCssComment$1: function(node) {\n      return this.visitCssComment$body$_EvaluateVisitor0(node);\n    },\n    visitCssComment$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1, t2;\n      var $async$visitCssComment$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_parent;\n              t2 = $async$self._async_evaluate0$_root;\n              if (t1 == t2 && $async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;\n              $async$self._async_evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(node.text, node.span));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssComment$1, $async$completer);\n    },\n    visitCssDeclaration$1: function(node) {\n      return this.visitCssDeclaration$body$_EvaluateVisitor0(node);\n    },\n    visitCssDeclaration$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1;\n      var $async$visitCssDeclaration$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = node.name;\n              $async$self._async_evaluate0$_parent.addChild$1(L.ModifiableCssDeclaration$0(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), \"--\"), node.valueSpanForMap));\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssDeclaration$1, $async$completer);\n    },\n    visitCssImport$1: function(node) {\n      return this.visitCssImport$body$_EvaluateVisitor0(node);\n    },\n    visitCssImport$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, modifiableNode, t1, t2;\n      var $async$visitCssImport$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              modifiableNode = F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports);\n              t1 = $async$self._async_evaluate0$_parent;\n              t2 = $async$self._async_evaluate0$_root;\n              if (t1 != t2)\n                t1.addChild$1(modifiableNode);\n              else if ($async$self._async_evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n                $async$self._async_evaluate0$_root.addChild$1(modifiableNode);\n                $async$self._async_evaluate0$_endOfImports = $async$self._async_evaluate0$_endOfImports + 1;\n              } else {\n                t1 = $async$self._async_evaluate0$_outOfOrderImports;\n                (t1 == null ? $async$self._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(modifiableNode);\n              }\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssImport$1, $async$completer);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      return this.visitCssKeyframeBlock$body$_EvaluateVisitor0(node);\n    },\n    visitCssKeyframeBlock$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this;\n      var $async$visitCssKeyframeBlock$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), new E._EvaluateVisitor_visitCssKeyframeBlock_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssKeyframeBlock_closure6(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null), $async$visitCssKeyframeBlock$1);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssKeyframeBlock$1, $async$completer);\n    },\n    visitCssMediaRule$1: function(node) {\n      return this.visitCssMediaRule$body$_EvaluateVisitor0(node);\n    },\n    visitCssMediaRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$returnValue, $async$self = this, t1, mergedQueries;\n      var $async$visitCssMediaRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Media_, node.span));\n              t1 = $async$self._async_evaluate0$_mediaQueries;\n              mergedQueries = t1 == null ? null : $async$self._async_evaluate0$_mergeMediaQueries$2(t1, node.queries);\n              t1 = mergedQueries == null;\n              if (!t1 && mergedQueries.length === 0) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = t1 ? node.queries : mergedQueries;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new E._EvaluateVisitor_visitCssMediaRule_closure5($async$self, mergedQueries, node), false, new E._EvaluateVisitor_visitCssMediaRule_closure6(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null), $async$visitCssMediaRule$1);\n            case 3:\n              // returning from await.\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssMediaRule$1, $async$completer);\n    },\n    visitCssStyleRule$1: function(node) {\n      return this.visitCssStyleRule$body$_EvaluateVisitor0(node);\n    },\n    visitCssStyleRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule;\n      var $async$visitCssStyleRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Style_, node.span));\n              t1 = node.selector;\n              t2 = t1.value;\n              t3 = $async$self._async_evaluate0$_styleRule;\n              t3 = t3 == null ? null : t3.originalSelector;\n              originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !$async$self._async_evaluate0$_atRootExcludingStyleRule);\n              rule = X.ModifiableCssStyleRule$0($async$self._async_evaluate0$_extender.addSelector$3(originalSelector, t1.span, $async$self._async_evaluate0$_mediaQueries), node.span, originalSelector);\n              oldAtRootExcludingStyleRule = $async$self._async_evaluate0$_atRootExcludingStyleRule;\n              $async$self._async_evaluate0$_atRootExcludingStyleRule = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(rule, new E._EvaluateVisitor_visitCssStyleRule_closure5($async$self, rule, node), false, new E._EvaluateVisitor_visitCssStyleRule_closure6(), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$visitCssStyleRule$1);\n            case 2:\n              // returning from await.\n              $async$self._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              if (!($async$self._async_evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n                t1 = $async$self._async_evaluate0$_parent.children;\n                t1 = !t1.get$isEmpty(t1);\n              } else\n                t1 = false;\n              if (t1) {\n                t1 = $async$self._async_evaluate0$_parent.children;\n                t1.get$last(t1).isGroupEnd = true;\n              }\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssStyleRule$1, $async$completer);\n    },\n    visitCssStylesheet$1: function(node) {\n      return this.visitCssStylesheet$body$_EvaluateVisitor0(node);\n    },\n    visitCssStylesheet$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this, t1;\n      var $async$visitCssStylesheet$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.get$iterator$ax(node.get$children(node));\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              $async$goto = 4;\n              return P._asyncAwait(t1.get$current(t1).accept$1($async$self), $async$visitCssStylesheet$1);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssStylesheet$1, $async$completer);\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this.visitCssSupportsRule$body$_EvaluateVisitor0(node);\n    },\n    visitCssSupportsRule$body$_EvaluateVisitor0: function(node) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.void),\n        $async$self = this;\n      var $async$visitCssSupportsRule$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if ($async$self._async_evaluate0$_declarationName != null)\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(string$.Suppor, node.span));\n              $async$goto = 2;\n              return P._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(node.condition, node.span), new E._EvaluateVisitor_visitCssSupportsRule_closure5($async$self, node), false, new E._EvaluateVisitor_visitCssSupportsRule_closure6(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null), $async$visitCssSupportsRule$1);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$visitCssSupportsRule$1, $async$completer);\n    },\n    _async_evaluate0$_handleReturn$1$2: function(list, callback) {\n      return this._handleReturn$body$_EvaluateVisitor0(list, callback);\n    },\n    _async_evaluate0$_handleReturn$2: function(list, callback) {\n      return this._async_evaluate0$_handleReturn$1$2(list, callback, type$.dynamic);\n    },\n    _handleReturn$body$_EvaluateVisitor0: function(list, callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, t1, _i, result;\n      var $async$_async_evaluate0$_handleReturn$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = list.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < list.length)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(callback.call$1(list[_i]), $async$_async_evaluate0$_handleReturn$1$2);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_handleReturn$1$2, $async$completer);\n    },\n    _async_evaluate0$_withEnvironment$1$2: function(environment, callback, $T) {\n      return this._withEnvironment$body$_EvaluateVisitor0(environment, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withEnvironment$body$_EvaluateVisitor0: function(environment, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldEnvironment;\n      var $async$_async_evaluate0$_withEnvironment$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldEnvironment = $async$self._async_evaluate0$_environment;\n              $async$self._async_evaluate0$_environment = environment;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withEnvironment$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_environment = oldEnvironment;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_withEnvironment$1$2, $async$completer);\n    },\n    _async_evaluate0$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {\n      return this._interpolationToValue$body$_EvaluateVisitor0(interpolation, trim, warnForColor);\n    },\n    _async_evaluate0$_interpolationToValue$1: function(interpolation) {\n      return this._async_evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);\n    },\n    _async_evaluate0$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {\n      return this._async_evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);\n    },\n    _interpolationToValue$body$_EvaluateVisitor0: function(interpolation, trim, warnForColor) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_CssValue_legacy_String_2),\n        $async$returnValue, $async$self = this, result, t1;\n      var $async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor), $async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              t1 = trim ? B.trimAscii0(result, true) : result;\n              $async$returnValue = new F.CssValue0(t1, interpolation.span, type$.CssValue_legacy_String_2);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_interpolationToValue$3$trim$warnForColor, $async$completer);\n    },\n    _async_evaluate0$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {\n      return this._performInterpolation$body$_EvaluateVisitor0(interpolation, warnForColor);\n    },\n    _async_evaluate0$_performInterpolation$1: function(interpolation) {\n      return this._async_evaluate0$_performInterpolation$2$warnForColor(interpolation, false);\n    },\n    _performInterpolation$body$_EvaluateVisitor0: function(interpolation, warnForColor) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, $async$temp1;\n      var $async$_async_evaluate0$_performInterpolation$2$warnForColor = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$temp1 = J;\n              $async$goto = 3;\n              return P._asyncAwait(B.mapAsync0(interpolation.contents, new E._EvaluateVisitor__performInterpolation_closure2($async$self, warnForColor), type$.legacy_Object, type$.legacy_String), $async$_async_evaluate0$_performInterpolation$2$warnForColor);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$temp1.join$0$ax($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_performInterpolation$2$warnForColor, $async$completer);\n    },\n    _async_evaluate0$_evaluateToCss$2$quote: function(expression, quote) {\n      return this._evaluateToCss$body$_EvaluateVisitor0(expression, quote);\n    },\n    _async_evaluate0$_evaluateToCss$1: function(expression) {\n      return this._async_evaluate0$_evaluateToCss$2$quote(expression, true);\n    },\n    _evaluateToCss$body$_EvaluateVisitor0: function(expression, quote) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this;\n      var $async$_async_evaluate0$_evaluateToCss$2$quote = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(expression.accept$1($async$self), $async$_async_evaluate0$_evaluateToCss$2$quote);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$self._async_evaluate0$_serialize$3$quote($async$result, expression, quote);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_evaluateToCss$2$quote, $async$completer);\n    },\n    _async_evaluate0$_serialize$3$quote: function(value, nodeWithSpan, quote) {\n      return this._async_evaluate0$_addExceptionSpan$2(nodeWithSpan, new E._EvaluateVisitor__serialize_closure2(value, quote));\n    },\n    _async_evaluate0$_serialize$2: function(value, nodeWithSpan) {\n      return this._async_evaluate0$_serialize$3$quote(value, nodeWithSpan, true);\n    },\n    _async_evaluate0$_expressionNode$1: function(expression) {\n      var t1;\n      if (!this._async_evaluate0$_sourceMap)\n        return null;\n      if (expression instanceof S.VariableExpression0) {\n        t1 = this._async_evaluate0$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);\n        return t1 == null ? expression : t1;\n      } else\n        return expression;\n    },\n    _async_evaluate0$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {\n      return this._withParent$body$_EvaluateVisitor0(node, callback, scopeWhen, through, $S, $T, $T._eval$1(\"0*\"));\n    },\n    _async_evaluate0$_withParent$2$2: function(node, callback, $S, $T) {\n      return this._async_evaluate0$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);\n    },\n    _async_evaluate0$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {\n      return this._async_evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);\n    },\n    _withParent$body$_EvaluateVisitor0: function(node, callback, scopeWhen, through, $S, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, oldParent, result;\n      var $async$_async_evaluate0$_withParent$2$4$scopeWhen$through = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$self._async_evaluate0$_addChild$2$through(node, through);\n              oldParent = $async$self._async_evaluate0$_parent;\n              $async$self._async_evaluate0$_parent = node;\n              $async$goto = 3;\n              return P._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1(\"0*\")), $async$_async_evaluate0$_withParent$2$4$scopeWhen$through);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_parent = oldParent;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_withParent$2$4$scopeWhen$through, $async$completer);\n    },\n    _async_evaluate0$_addChild$2$through: function(node, through) {\n      var grandparent,\n        $parent = this._async_evaluate0$_parent;\n      if (through != null) {\n        for (; through.call$1($parent);)\n          $parent = $parent._node2$_parent;\n        if ($parent.get$hasFollowingSibling()) {\n          grandparent = $parent._node2$_parent;\n          $parent = $parent.copyWithoutChildren$0();\n          grandparent.addChild$1($parent);\n        }\n      }\n      $parent.addChild$1(node);\n    },\n    _async_evaluate0$_addChild$1: function(node) {\n      return this._async_evaluate0$_addChild$2$through(node, null);\n    },\n    _async_evaluate0$_withStyleRule$1$2: function(rule, callback, $T) {\n      return this._withStyleRule$body$_EvaluateVisitor0(rule, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withStyleRule$body$_EvaluateVisitor0: function(rule, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldRule;\n      var $async$_async_evaluate0$_withStyleRule$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldRule = $async$self._async_evaluate0$_styleRule;\n              $async$self._async_evaluate0$_styleRule = rule;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withStyleRule$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_styleRule = oldRule;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_withStyleRule$1$2, $async$completer);\n    },\n    _async_evaluate0$_withMediaQueries$1$2: function(queries, callback, $T) {\n      return this._withMediaQueries$body$_EvaluateVisitor0(queries, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withMediaQueries$body$_EvaluateVisitor0: function(queries, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, result, oldMediaQueries;\n      var $async$_async_evaluate0$_withMediaQueries$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              oldMediaQueries = $async$self._async_evaluate0$_mediaQueries;\n              $async$self._async_evaluate0$_mediaQueries = queries;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withMediaQueries$1$2);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_mediaQueries = oldMediaQueries;\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_withMediaQueries$1$2, $async$completer);\n    },\n    _async_evaluate0$_withStackFrame$1$3: function(member, nodeWithSpan, callback, $T) {\n      return this._withStackFrame$body$_EvaluateVisitor0(member, nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _withStackFrame$body$_EvaluateVisitor0: function(member, nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$self = this, oldMember, result, t1;\n      var $async$_async_evaluate0$_withStackFrame$1$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self._async_evaluate0$_stack;\n              t1.push(new S.Tuple2($async$self._async_evaluate0$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode_2));\n              oldMember = $async$self._async_evaluate0$_member;\n              $async$self._async_evaluate0$_member = member;\n              $async$goto = 3;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_withStackFrame$1$3);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$self._async_evaluate0$_member = oldMember;\n              t1.pop();\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_withStackFrame$1$3, $async$completer);\n    },\n    _async_evaluate0$_stackFrame$2: function(member, span) {\n      var url = span.file.url;\n      return B.frameForSpan0(span, member, url != null && this._async_evaluate0$_importCache != null ? this._async_evaluate0$_importCache.humanize$1(url) : url);\n    },\n    _async_evaluate0$_stackTrace$1: function(span) {\n      var t2, cur, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      for (t2 = _this._async_evaluate0$_stack, t2 = new H.MappedListIterable(t2, new E._EvaluateVisitor__stackTrace_closure2(_this), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Frame*>\")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      if (span != null)\n        t1.push(_this._async_evaluate0$_stackFrame$2(_this._async_evaluate0$_member, span));\n      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    _async_evaluate0$_stackTrace$0: function() {\n      return this._async_evaluate0$_stackTrace$1(null);\n    },\n    _async_evaluate0$_warn$3$deprecation: function(message, span, deprecation) {\n      return this._async_evaluate0$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._async_evaluate0$_stackTrace$1(span));\n    },\n    _async_evaluate0$_warn$2: function(message, span) {\n      return this._async_evaluate0$_warn$3$deprecation(message, span, false);\n    },\n    _async_evaluate0$_exception$2: function(message, span) {\n      var t1 = span == null ? C.JSArray_methods.get$last(this._async_evaluate0$_stack).item2.get$span() : span;\n      return new E.SassRuntimeException0(this._async_evaluate0$_stackTrace$1(span), message, t1);\n    },\n    _async_evaluate0$_exception$1: function(message) {\n      return this._async_evaluate0$_exception$2(message, null);\n    },\n    _async_evaluate0$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {\n      var t1 = C.JSArray_methods.get$last(this._async_evaluate0$_stack).item2.get$span();\n      return new E.MultiSpanSassRuntimeException0(this._async_evaluate0$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);\n    },\n    _async_evaluate0$_adjustParseError$1$2: function(nodeWithSpan, callback) {\n      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException0) {\n          error = t1;\n          t1 = error;\n          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);\n          span = nodeWithSpan.get$span();\n          t1 = span;\n          t2 = span;\n          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);\n          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);\n          t1 = span;\n          t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n          t3 = error;\n          t3 = G.SourceSpanException.prototype.get$span.call(t3);\n          t3 = Y.FileLocation$_(t3.file, t3._file$_start);\n          t4 = span;\n          t4 = Y.FileLocation$_(t4.file, t4._file$_start);\n          t5 = error;\n          t5 = G.SourceSpanException.prototype.get$span.call(t5);\n          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);\n          throw H.wrapException(this._async_evaluate0$_exception$2(error._span_exception$_message, syntheticSpan));\n        } else\n          throw exception;\n      }\n    },\n    _async_evaluate0$_adjustParseError$2: function(nodeWithSpan, callback) {\n      return this._async_evaluate0$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _async_evaluate0$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {\n      var error, error0, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.MultiSpanSassScriptException0) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.SassScriptException0) {\n          error0 = t1;\n          throw H.wrapException(this._async_evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));\n        } else\n          throw exception;\n      }\n    },\n    _async_evaluate0$_addExceptionSpan$2: function(nodeWithSpan, callback) {\n      return this._async_evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _async_evaluate0$_addExceptionSpanAsync$1$2: function(nodeWithSpan, callback, $T) {\n      return this._addExceptionSpanAsync$body$_EvaluateVisitor0(nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _addExceptionSpanAsync$body$_EvaluateVisitor0: function(nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, error0, t1, exception, $async$exception;\n      var $async$_async_evaluate0$_addExceptionSpanAsync$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$goto = 7;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_addExceptionSpanAsync$1$2);\n            case 7:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (t1 instanceof E.MultiSpanSassScriptException0) {\n                error = t1;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, $async$self._async_evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n              } else if (t1 instanceof E.SassScriptException0) {\n                error0 = t1;\n                throw H.wrapException($async$self._async_evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_addExceptionSpanAsync$1$2, $async$completer);\n    },\n    _async_evaluate0$_addErrorSpan$1$2: function(nodeWithSpan, callback, $T) {\n      return this._addErrorSpan$body$_EvaluateVisitor0(nodeWithSpan, callback, $T, $T._eval$1(\"0*\"));\n    },\n    _addErrorSpan$body$_EvaluateVisitor0: function(nodeWithSpan, callback, $T, $async$type) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter($async$type),\n        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, error, t1, exception, $async$exception;\n      var $async$_async_evaluate0$_addErrorSpan$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$handler = 4;\n              $async$goto = 7;\n              return P._asyncAwait(callback.call$0(), $async$_async_evaluate0$_addErrorSpan$1$2);\n            case 7:\n              // returning from await.\n              t1 = $async$result;\n              $async$returnValue = t1;\n              // goto return\n              $async$goto = 1;\n              break;\n              $async$handler = 2;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 4:\n              // catch\n              $async$handler = 3;\n              $async$exception = $async$currentError;\n              t1 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException_2._is(t1)) {\n                error = t1;\n                t1 = error.get$span();\n                if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), \"@error\"))\n                  throw $async$exception;\n                throw H.wrapException(E.SassRuntimeException$0(error._span_exception$_message, nodeWithSpan.get$span(), $async$self._async_evaluate0$_stackTrace$0()));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 6;\n              break;\n            case 3:\n              // uncaught\n              // goto rethrow\n              $async$goto = 2;\n              break;\n            case 6:\n              // after finally\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n            case 2:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_evaluate0$_addErrorSpan$1$2, $async$completer);\n    }\n  };\n  E._EvaluateVisitor_closure29.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._async_evaluate0$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  E._EvaluateVisitor_closure30.prototype = {\n    call$1: function($arguments) {\n      var variable = J.$index$asx($arguments, 0).assertString$1(\"name\"),\n        t1 = this.$this._async_evaluate0$_environment,\n        t2 = variable.text;\n      t2.toString;\n      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, \"_\", \"-\")) != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  E._EvaluateVisitor_closure31.prototype = {\n    call$1: function($arguments) {\n      var module, t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this;\n      t2 = t1._async_evaluate0$_environment;\n      t3 = variable.text;\n      t3.toString;\n      t4 = H.stringReplaceAllUnchecked(t3, \"_\", \"-\");\n      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._async_evaluate0$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  E._EvaluateVisitor_closure32.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._async_evaluate0$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  E._EvaluateVisitor_closure33.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.$this._async_evaluate0$_environment;\n      if (!t1._async_environment0$_inMixin)\n        throw H.wrapException(E.SassScriptException$0(string$.conten));\n      return t1._async_environment0$_content != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  E._EvaluateVisitor_closure34.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._async_evaluate0$_environment._async_environment0$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString0(t4.key, true), t4.value);\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 37\n  };\n  E._EvaluateVisitor_closure35.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._async_evaluate0$_environment._async_environment0$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString0(t4.key, true), new F.SassFunction0(t4.value));\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 37\n  };\n  E._EvaluateVisitor_closure36.prototype = {\n    call$1: function($arguments) {\n      var module, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $name = t1.$index($arguments, 0).assertString$1(\"name\"),\n        css = t1.$index($arguments, 1).get$isTruthy();\n      t1 = t1.$index($arguments, 2).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      if (css && module != null)\n        throw H.wrapException(string$.x24css_a);\n      if (css)\n        callable = new L.PlainCssCallable0($name.text);\n      else {\n        t1 = this.$this;\n        callable = t1._async_evaluate0$_addExceptionSpan$2(t1._async_evaluate0$_callableNode, new E._EvaluateVisitor__closure10(t1, $name, module));\n      }\n      if (callable != null)\n        return new F.SassFunction0(callable);\n      throw H.wrapException(\"Function not found: \" + $name.toString$0(0));\n    },\n    $signature: 142\n  };\n  E._EvaluateVisitor__closure10.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this.name.text;\n      t1.toString;\n      t1 = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t2 = this.module;\n      t2 = t2 == null ? null : t2.text;\n      return this.$this._async_evaluate0$_getFunction$2$namespace(t1, t2);\n    },\n    $signature: 107\n  };\n  E._EvaluateVisitor_closure37.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$_EvaluateVisitor_closure2($arguments);\n    },\n    $call$body$_EvaluateVisitor_closure2: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable, t1, $function, args;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.getInterceptor$asx($arguments);\n              $function = t1.$index($arguments, 0);\n              args = type$.legacy_SassArgumentList_2._as(t1.$index($arguments, 1));\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n              t2 = type$.legacy_String;\n              t3 = type$.legacy_Expression_2;\n              t4 = $async$self.$this;\n              t5 = t4._async_evaluate0$_callableNode.get$span();\n              t6 = t4._async_evaluate0$_callableNode.get$span();\n              args._argument_list$_wereKeywordsAccessed = true;\n              t7 = args._argument_list$_keywords;\n              if (t7.get$isEmpty(t7))\n                t7 = null;\n              else {\n                t8 = type$.legacy_Value_2;\n                t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);\n                for (args._argument_list$_wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {\n                  t10 = t7.get$current(t7);\n                  t9.$indexSet(0, new D.SassString0(t10.key, false), t10.value);\n                }\n                t7 = new F.ValueExpression0(new A.SassMap0(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._async_evaluate0$_callableNode.get$span());\n              }\n              invocation = new X.ArgumentInvocation0(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression0(args, t6), t7, t5);\n              $async$goto = $function instanceof D.SassString0 ? 3 : 4;\n              break;\n            case 3:\n              // then\n              N.warn0(string$.Passins + $function.toString$0(0) + \")) instead.\", true);\n              $async$goto = 5;\n              return P._asyncAwait(t4.visitFunctionExpression$1(new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._async_evaluate0$_callableNode.get$span()), invocation, t4._async_evaluate0$_callableNode.get$span())), $async$call$1);\n            case 5:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 4:\n              // join\n              callable = $function.assertFunction$1(\"function\").callable;\n              $async$goto = type$.legacy_AsyncCallable_2._is(callable) ? 6 : 8;\n              break;\n            case 6:\n              // then\n              $async$goto = 9;\n              return P._asyncAwait(t4._async_evaluate0$_runFunctionCallable$3(invocation, callable, t4._async_evaluate0$_callableNode), $async$call$1);\n            case 9:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n              // goto join\n              $async$goto = 7;\n              break;\n            case 8:\n              // else\n              throw H.wrapException(E.SassScriptException$0(\"The function \" + H.S(callable.get$name(callable)) + string$.x20is_as));\n            case 7:\n              // join\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 144\n  };\n  E._EvaluateVisitor_closure38.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$_EvaluateVisitor_closure1($arguments);\n    },\n    $call$body$_EvaluateVisitor_closure1: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, withMap, values, configuration, t2, t3, t1, url;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = J.getInterceptor$asx($arguments);\n              url = P.Uri_parse(t1.$index($arguments, 0).assertString$1(\"url\").text);\n              t1 = t1.$index($arguments, 1).get$realNull();\n              t1 = t1 == null ? null : t1.assertMap$1(\"with\");\n              withMap = t1 == null ? null : t1.contents;\n              if (withMap != null) {\n                values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);\n                t1 = $async$self.$this;\n                withMap.forEach$1(0, new E._EvaluateVisitor__closure8(values, t1._async_evaluate0$_callableNode.get$span()));\n                configuration = new A.Configuration0(values, t1._async_evaluate0$_callableNode, false);\n              } else\n                configuration = C.Configuration_Map_empty_null_true0;\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_callableNode;\n              t3 = t2.get$span();\n              t3 = t3 == null ? null : t3.file.url;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, \"load-css()\", t2, new E._EvaluateVisitor__closure9(t1), t3, configuration, true), $async$call$1);\n            case 3:\n              // returning from await.\n              t1._async_evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, true);\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 134\n  };\n  E._EvaluateVisitor__closure8.prototype = {\n    call$2: function(variable, value) {\n      var $name,\n        t1 = variable.assertString$1(\"with key\").text;\n      t1.toString;\n      $name = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t1 = this.values;\n      if (t1.containsKey$1($name))\n        throw H.wrapException(\"The variable $\" + $name + \" was configured twice.\");\n      t1.$indexSet(0, $name, new Z.ConfiguredValue0(value, this.span, null));\n    },\n    $signature: 50\n  };\n  E._EvaluateVisitor__closure9.prototype = {\n    call$1: function(module) {\n      var t1 = this.$this;\n      return t1._async_evaluate0$_combineCss$2$clone(module, true).accept$1(t1);\n    },\n    $signature: 146\n  };\n  E._EvaluateVisitor_run_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_EvaluateResult_2),\n        $async$returnValue, $async$self = this, t2, t1, url, $async$temp1, $async$temp2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node;\n              url = t1.span.file.url;\n              if (url != null) {\n                t2 = $async$self.$this;\n                t2._async_evaluate0$_activeModules.$indexSet(0, url, null);\n                if (t2._async_evaluate0$_nodeImporter != null)\n                  if (url.get$scheme() === \"file\")\n                    t2._async_evaluate0$_includedFiles.add$1(0, $.$get$context().style.pathFromUri$1(M._parseUri(url)));\n                  else if (url.toString$0(0) !== \"stdin\")\n                    t2._async_evaluate0$_includedFiles.add$1(0, url.toString$0(0));\n              }\n              t2 = $async$self.$this;\n              $async$temp1 = E;\n              $async$temp2 = t2;\n              $async$goto = 3;\n              return P._asyncAwait(t2._async_evaluate0$_execute$2($async$self.importer, t1), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = new $async$temp1.EvaluateResult0($async$temp2._async_evaluate0$_combineCss$1($async$result), t2._async_evaluate0$_includedFiles);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 286\n  };\n  E._EvaluateVisitor__withWarnCallback_closure2.prototype = {\n    call$2: function(message, deprecation) {\n      var t1 = this.$this,\n        t2 = t1._async_evaluate0$_importSpan;\n      return t1._async_evaluate0$_warn$3$deprecation(message, t2 == null ? t1._async_evaluate0$_callableNode.get$span() : t2, deprecation);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 75\n  };\n  E._EvaluateVisitor__loadModule_closure5.prototype = {\n    call$0: function() {\n      return this.callback.call$1(this.builtInModule);\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor__loadModule_closure6.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, module, error, error0, error1, error2, message, previousLoad, exception, t1, t2, result, importer, stylesheet, canonicalUrl, t3, $async$exception;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1) {\n          $async$currentError = $async$result;\n          $async$goto = $async$handler;\n        }\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.nodeWithSpan;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_loadStylesheet$3$baseUrl(J.toString$0$($async$self.url), t2.get$span(), $async$self.baseUrl), $async$call$0);\n            case 2:\n              // returning from await.\n              result = $async$result;\n              importer = result.item1;\n              stylesheet = result.item2;\n              canonicalUrl = stylesheet.span.file.url;\n              t3 = t1._async_evaluate0$_activeModules;\n              if (t3.containsKey$1(canonicalUrl)) {\n                message = $async$self.namesInErrors ? \"Module loop: \" + H.S($.$get$context().prettyUri$1(canonicalUrl)) + \" is already being loaded.\" : string$.Module;\n                previousLoad = t3.$index(0, canonicalUrl);\n                throw H.wrapException(previousLoad == null ? t1._async_evaluate0$_exception$1(message) : t1._async_evaluate0$_multiSpanException$3(message, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n              }\n              t3.$indexSet(0, canonicalUrl, t2);\n              module = null;\n              $async$handler = 3;\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, $async$self.configuration, $async$self.namesInErrors, t2), $async$call$0);\n            case 6:\n              // returning from await.\n              module = $async$result;\n              $async$next.push(5);\n              // goto finally\n              $async$goto = 4;\n              break;\n            case 3:\n              // uncaught\n              $async$next = [1];\n            case 4:\n              // finally\n              $async$handler = 1;\n              t3.remove$1(0, canonicalUrl);\n              // goto the next finally handler\n              $async$goto = $async$next.pop();\n              break;\n            case 5:\n              // after finally\n              $async$handler = 8;\n              $async$goto = 11;\n              return P._asyncAwait($async$self.callback.call$1(module), $async$call$0);\n            case 11:\n              // returning from await.\n              $async$handler = 1;\n              // goto after finally\n              $async$goto = 10;\n              break;\n            case 8:\n              // catch\n              $async$handler = 7;\n              $async$exception = $async$currentError;\n              t2 = H.unwrapException($async$exception);\n              if (type$.legacy_SassRuntimeException_2._is(t2))\n                throw $async$exception;\n              else if (t2 instanceof E.MultiSpanSassException0) {\n                error = t2;\n                throw H.wrapException(E.MultiSpanSassRuntimeException$0(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._async_evaluate0$_stackTrace$1(error.get$span())));\n              } else if (t2 instanceof E.SassException0) {\n                error0 = t2;\n                throw H.wrapException(t1._async_evaluate0$_exception$2(error0._span_exception$_message, error0.get$span()));\n              } else if (t2 instanceof E.MultiSpanSassScriptException0) {\n                error1 = t2;\n                throw H.wrapException(t1._async_evaluate0$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));\n              } else if (t2 instanceof E.SassScriptException0) {\n                error2 = t2;\n                throw H.wrapException(t1._async_evaluate0$_exception$1(error2.message));\n              } else\n                throw $async$exception;\n              // goto after finally\n              $async$goto = 10;\n              break;\n            case 7:\n              // uncaught\n              // goto rethrow\n              $async$goto = 1;\n              break;\n            case 10:\n              // after finally\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n            case 1:\n              // rethrow\n              return P._asyncRethrow($async$currentError, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__execute_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t2, t3, t4, css, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldExtender, oldStyleRule, oldMediaQueries, oldDeclarationName, oldInUnknownAtRule, oldAtRootExcludingStyleRule, oldInKeyframes, oldConfiguration;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldImporter = t1._async_evaluate0$_importer;\n              oldStylesheet = t1._async_evaluate0$_stylesheet;\n              oldRoot = t1._async_evaluate0$_root;\n              oldParent = t1._async_evaluate0$_parent;\n              oldEndOfImports = t1._async_evaluate0$_endOfImports;\n              oldOutOfOrderImports = t1._async_evaluate0$_outOfOrderImports;\n              oldExtender = t1._async_evaluate0$_extender;\n              oldStyleRule = t1._async_evaluate0$_styleRule;\n              oldMediaQueries = t1._async_evaluate0$_mediaQueries;\n              oldDeclarationName = t1._async_evaluate0$_declarationName;\n              oldInUnknownAtRule = t1._async_evaluate0$_inUnknownAtRule;\n              oldAtRootExcludingStyleRule = t1._async_evaluate0$_atRootExcludingStyleRule;\n              oldInKeyframes = t1._async_evaluate0$_inKeyframes;\n              oldConfiguration = t1._async_evaluate0$_configuration;\n              t1._async_evaluate0$_importer = $async$self.importer;\n              t2 = t1._async_evaluate0$_stylesheet = $async$self.stylesheet;\n              t3 = t2.span;\n              t1._async_evaluate0$_parent = t1._async_evaluate0$_root = V.ModifiableCssStylesheet$0(t3);\n              t1._async_evaluate0$_endOfImports = 0;\n              t1._async_evaluate0$_outOfOrderImports = null;\n              t1._async_evaluate0$_extender = $async$self.extender;\n              t1._async_evaluate0$_declarationName = t1._async_evaluate0$_mediaQueries = t1._async_evaluate0$_styleRule = null;\n              t1._async_evaluate0$_inKeyframes = t1._async_evaluate0$_atRootExcludingStyleRule = t1._async_evaluate0$_inUnknownAtRule = false;\n              t4 = $async$self.configuration;\n              if (t4 != null)\n                t1._async_evaluate0$_configuration = t4;\n              $async$goto = 2;\n              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);\n            case 2:\n              // returning from await.\n              css = t1._async_evaluate0$_outOfOrderImports == null ? t1._async_evaluate0$_root : new V.CssStylesheet0(new P.UnmodifiableListView(t1._async_evaluate0$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode_2), t3);\n              $async$self._box_0.css = css;\n              t1._async_evaluate0$_importer = oldImporter;\n              t1._async_evaluate0$_stylesheet = oldStylesheet;\n              t1._async_evaluate0$_root = oldRoot;\n              t1._async_evaluate0$_parent = oldParent;\n              t1._async_evaluate0$_endOfImports = oldEndOfImports;\n              t1._async_evaluate0$_outOfOrderImports = oldOutOfOrderImports;\n              t1._async_evaluate0$_extender = oldExtender;\n              t1._async_evaluate0$_styleRule = oldStyleRule;\n              t1._async_evaluate0$_mediaQueries = oldMediaQueries;\n              t1._async_evaluate0$_declarationName = oldDeclarationName;\n              t1._async_evaluate0$_inUnknownAtRule = oldInUnknownAtRule;\n              t1._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              t1._async_evaluate0$_inKeyframes = oldInKeyframes;\n              t1._async_evaluate0$_configuration = oldConfiguration;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__combineCss_closure8.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 106\n  };\n  E._EvaluateVisitor__combineCss_closure9.prototype = {\n    call$1: function(target) {\n      return !this.selectors.contains$1(0, target);\n    },\n    $signature: 20\n  };\n  E._EvaluateVisitor__combineCss_closure10.prototype = {\n    call$1: function(module) {\n      return module.cloneCss$0();\n    },\n    $signature: 136\n  };\n  E._EvaluateVisitor__extendModules_closure5.prototype = {\n    call$1: function(target) {\n      return !this.originalSelectors.contains$1(0, target);\n    },\n    $signature: 20\n  };\n  E._EvaluateVisitor__extendModules_closure6.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender_2);\n    },\n    $signature: 148\n  };\n  E._EvaluateVisitor__topologicalModules_visitModule2.prototype = {\n    call$1: function(module) {\n      var t1, t2, t3, _i, upstream;\n      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        upstream = t1[_i];\n        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))\n          this.call$1(upstream);\n      }\n      this.sorted.addFirst$1(module);\n    },\n    $signature: 146\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure8.prototype = {\n    call$0: function() {\n      return V.AtRootQueryParser$0(this.resolved, this.$this._async_evaluate0$_logger, null).parse$0();\n    },\n    $signature: 97\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure9.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRootRule_closure10.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 2\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure17.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, oldParent;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldParent = t1._async_evaluate0$_parent;\n              t1._async_evaluate0$_parent = $async$self.newParent;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_environment.scope$1$2$when(callback, $async$self.node.hasDeclarations, type$.void), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate0$_parent = oldParent;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure18.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, oldAtRootExcludingStyleRule;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldAtRootExcludingStyleRule = t1._async_evaluate0$_atRootExcludingStyleRule;\n              t1._async_evaluate0$_atRootExcludingStyleRule = true;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure19.prototype = {\n    call$1: function(callback) {\n      return this.$this._async_evaluate0$_withMediaQueries$1$2(null, new E._EvaluateVisitor__scopeForAtRoot__closure2(this.innerScope, callback), type$.Null);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot__closure2.prototype = {\n    call$0: function() {\n      return this.innerScope.call$1(this.callback);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure20.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, wasInKeyframes;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              wasInKeyframes = t1._async_evaluate0$_inKeyframes;\n              t1._async_evaluate0$_inKeyframes = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate0$_inKeyframes = wasInKeyframes;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure21.prototype = {\n    call$1: function($parent) {\n      return type$.legacy_CssAtRule_2._is($parent);\n    },\n    $signature: 150\n  };\n  E._EvaluateVisitor__scopeForAtRoot_closure22.prototype = {\n    call$1: function(callback) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, wasInUnknownAtRule;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              wasInUnknownAtRule = t1._async_evaluate0$_inUnknownAtRule;\n              t1._async_evaluate0$_inUnknownAtRule = false;\n              $async$goto = 2;\n              return P._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);\n            case 2:\n              // returning from await.\n              t1._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 35\n  };\n  E._EvaluateVisitor_visitContentRule_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.content.declaration.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 6:\n              // returning from await.\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitDeclaration_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitEachRule_closure8.prototype = {\n    call$1: function(value) {\n      return this.$this._async_evaluate0$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);\n    },\n    $signature: 70\n  };\n  E._EvaluateVisitor_visitEachRule_closure9.prototype = {\n    call$1: function(value) {\n      return this.$this._async_evaluate0$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);\n    },\n    $signature: 70\n  };\n  E._EvaluateVisitor_visitEachRule_closure10.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._async_evaluate0$_handleReturn$2(_this.list.get$asList(), new E._EvaluateVisitor_visitEachRule__closure2(t1, _this.setVariables, _this.node));\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitEachRule__closure2.prototype = {\n    call$1: function(element) {\n      var t1;\n      this.setVariables.call$1(element);\n      t1 = this.$this;\n      return t1._async_evaluate0$_handleReturn$2(this.node.children, new E._EvaluateVisitor_visitEachRule___closure2(t1));\n    },\n    $signature: 293\n  };\n  E._EvaluateVisitor_visitEachRule___closure2.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 66\n  };\n  E._EvaluateVisitor_visitExtendRule_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.targetText;\n      return D.SelectorList_SelectorList$parse0(B.trimAscii0(t1.get$value(t1), true), false, true, this.$this._async_evaluate0$_logger);\n    },\n    $signature: 43\n  };\n  E._EvaluateVisitor_visitAtRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) || t1._async_evaluate0$_inKeyframes ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitAtRule__closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitAtRule_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitForRule_closure14.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),\n        $async$returnValue, $async$self = this;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.node.from.accept$1($async$self.$this), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result.assertNumber$0();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 156\n  };\n  E._EvaluateVisitor_visitForRule_closure15.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_SassNumber_2),\n        $async$returnValue, $async$self = this;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.node.to.accept$1($async$self.$this), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result.assertNumber$0();\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 156\n  };\n  E._EvaluateVisitor_visitForRule_closure16.prototype = {\n    call$0: function() {\n      var t1 = this.toNumber,\n        t2 = t1.numeratorUnits;\n      t1 = t1.denominatorUnits;\n      return T.SassNumber$withUnits0(this.fromNumber.valueInUnits$2(t2, t1), t1, t2).assertInt$0();\n    },\n    $signature: 11\n  };\n  E._EvaluateVisitor_visitForRule_closure17.prototype = {\n    call$0: function() {\n      return this.toNumber.assertInt$0();\n    },\n    $signature: 11\n  };\n  E._EvaluateVisitor_visitForRule_closure18.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, i, t3, t4, t5, result, t1, t2, nodeWithSpan;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.node;\n              nodeWithSpan = t1._async_evaluate0$_expressionNode$1(t2.from);\n              i = $async$self.from, t3 = $async$self._box_0, t4 = $async$self.direction, t5 = t2.variable, t2 = t2.children;\n            case 3:\n              // for condition\n              if (!(i !== t3.to)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              t1._async_evaluate0$_environment.setLocalVariable$3(t5, T.SassNumber$0(i, null), nodeWithSpan);\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_evaluate0$_handleReturn$2(t2, new E._EvaluateVisitor_visitForRule__closure2(t1)), $async$call$0);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              i += t4;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitForRule__closure2.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 66\n  };\n  E._EvaluateVisitor_visitForwardRule_closure5.prototype = {\n    call$1: function(module) {\n      this.$this._async_evaluate0$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 83\n  };\n  E._EvaluateVisitor_visitForwardRule_closure6.prototype = {\n    call$1: function(module) {\n      this.$this._async_evaluate0$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 83\n  };\n  E._EvaluateVisitor__assertConfigurationIsEmpty_closure2.prototype = {\n    call$2: function($name, value) {\n      var t1 = this.only;\n      if (t1 != null && !t1.contains$1(0, $name))\n        return;\n      t1 = this.nameInError ? \"$\" + H.S($name) + string$.x20was_n : string$.This_v;\n      throw H.wrapException(this.$this._async_evaluate0$_exception$2(t1, value.configurationSpan));\n    },\n    $signature: 158\n  };\n  E._EvaluateVisitor_visitIfRule_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      return t1._async_evaluate0$_handleReturn$2(this._box_0.clause.children, new E._EvaluateVisitor_visitIfRule__closure2(t1));\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitIfRule__closure2.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 66\n  };\n  E._EvaluateVisitor__visitDynamicImport_closure2.prototype = {\n    call$0: function() {\n      return this.$call$body$_EvaluateVisitor__visitDynamicImport_closure0();\n    },\n    $call$body$_EvaluateVisitor__visitDynamicImport_closure0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _box_0, t1, t2, result, importer, stylesheet, url, t3;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              _box_0 = {};\n              t1 = $async$self.$this;\n              t2 = $async$self.$import;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate0$_loadStylesheet$3$forImport(t2.url, t2.span, true), $async$call$0);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              importer = result.item1;\n              stylesheet = result.item2;\n              url = stylesheet.span.file.url;\n              t3 = t1._async_evaluate0$_activeModules;\n              if (t3.containsKey$1(url)) {\n                previousLoad = t3.$index(0, url);\n                throw H.wrapException(previousLoad == null ? t1._async_evaluate0$_exception$1(\"This file is already being loaded.\") : t1._async_evaluate0$_multiSpanException$3(\"This file is already being loaded.\", \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n              }\n              t3.$indexSet(0, url, t2);\n              t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_uses, type$.UnmodifiableListView_legacy_UseRule_2);\n              if (t2.get$length(t2) === 0) {\n                t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);\n                t2 = t2.get$length(t2) === 0;\n              } else\n                t2 = false;\n              $async$goto = t2 ? 4 : 5;\n              break;\n            case 4:\n              // then\n              oldImporter = t1._async_evaluate0$_importer;\n              oldStylesheet = t1._async_evaluate0$_stylesheet;\n              t1._async_evaluate0$_importer = importer;\n              t1._async_evaluate0$_stylesheet = stylesheet;\n              $async$goto = 6;\n              return P._asyncAwait(t1.visitStylesheet$1(stylesheet), $async$call$0);\n            case 6:\n              // returning from await.\n              t1._async_evaluate0$_importer = oldImporter;\n              t1._async_evaluate0$_stylesheet = oldStylesheet;\n              t3.remove$1(0, url);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // join\n              _box_0.children = null;\n              t2 = t1._async_evaluate0$_environment;\n              t4 = type$.legacy_String;\n              t5 = type$.legacy_Module_legacy_AsyncCallable_2;\n              t6 = type$.legacy_AstNode_2;\n              t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_AsyncCallable_2);\n              t8 = t2._async_environment0$_variables;\n              t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));\n              t9 = t2._async_environment0$_variableNodes;\n              if (t9 == null)\n                t9 = null;\n              else\n                t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));\n              t10 = t2._async_environment0$_functions;\n              t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));\n              t11 = t2._async_environment0$_mixins;\n              t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));\n              environment = Q.AsyncEnvironment$_0(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), null, null, null, t7, t8, t9, t10, t11, t2._async_environment0$_content);\n              $async$goto = 7;\n              return P._asyncAwait(t1._async_evaluate0$_withEnvironment$1$2(environment, new E._EvaluateVisitor__visitDynamicImport__closure2(_box_0, t1, importer, stylesheet, environment), type$.Null), $async$call$0);\n            case 7:\n              // returning from await.\n              module = Q._EnvironmentModule__EnvironmentModule2(environment, new V.CssStylesheet0(new P.UnmodifiableListView(C.List_empty12, type$.UnmodifiableListView_legacy_CssNode_2), Y.SourceFile$decoded(C.List_empty1, \"<dummy module>\").span$1(0)), C.C_EmptyExtender0, environment._async_environment0$_forwardedModules);\n              t1._async_evaluate0$_environment.importForwards$1(module);\n              $async$goto = module.transitivelyContainsCss ? 8 : 9;\n              break;\n            case 8:\n              // then\n              $async$goto = 10;\n              return P._asyncAwait(t1._async_evaluate0$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1), $async$call$0);\n            case 10:\n              // returning from await.\n            case 9:\n              // join\n              visitor = new E._ImportedCssVisitor2(t1);\n              for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)\n                t1.get$current(t1).accept$1(visitor);\n              t3.remove$1(0, url);\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor__visitDynamicImport__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t2, t3, t1, oldImporter, oldStylesheet, oldRoot, oldParent, oldEndOfImports, oldOutOfOrderImports, oldConfiguration;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              oldImporter = t1._async_evaluate0$_importer;\n              oldStylesheet = t1._async_evaluate0$_stylesheet;\n              oldRoot = t1._async_evaluate0$_root;\n              oldParent = t1._async_evaluate0$_parent;\n              oldEndOfImports = t1._async_evaluate0$_endOfImports;\n              oldOutOfOrderImports = t1._async_evaluate0$_outOfOrderImports;\n              oldConfiguration = t1._async_evaluate0$_configuration;\n              t1._async_evaluate0$_importer = $async$self.importer;\n              t2 = t1._async_evaluate0$_stylesheet = $async$self.stylesheet;\n              t1._async_evaluate0$_parent = t1._async_evaluate0$_root = V.ModifiableCssStylesheet$0(t2.span);\n              t1._async_evaluate0$_endOfImports = 0;\n              t1._async_evaluate0$_outOfOrderImports = null;\n              t3 = new P.UnmodifiableListView(t2._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);\n              if (!t3.get$isEmpty(t3))\n                t1._async_evaluate0$_configuration = $async$self.environment.toImplicitConfiguration$0();\n              $async$goto = 2;\n              return P._asyncAwait(t1.visitStylesheet$1(t2), $async$call$0);\n            case 2:\n              // returning from await.\n              $async$self._box_0.children = t1._async_evaluate0$_addOutOfOrderImports$0();\n              t1._async_evaluate0$_importer = oldImporter;\n              t1._async_evaluate0$_stylesheet = oldStylesheet;\n              t1._async_evaluate0$_root = oldRoot;\n              t1._async_evaluate0$_parent = oldParent;\n              t1._async_evaluate0$_endOfImports = oldEndOfImports;\n              t1._async_evaluate0$_outOfOrderImports = oldOutOfOrderImports;\n              t1._async_evaluate0$_configuration = oldConfiguration;\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure8.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate0$_environment.getMixin$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 107\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure9.prototype = {\n    call$0: function() {\n      return this.node.get$spanWithoutContent();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 32\n  };\n  E._EvaluateVisitor_visitIncludeRule_closure10.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate0$_environment.withContent$2($async$self.contentCallable, new E._EvaluateVisitor_visitIncludeRule__closure2(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$returnValue, $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1._async_evaluate0$_environment.asMixin$1(new E._EvaluateVisitor_visitIncludeRule___closure2(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);\n            case 3:\n              // returning from await.\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule___closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, t4, t5, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.mixin.declaration.children, t2 = t1.length, t3 = $async$self.$this, t4 = $async$self.nodeWithSpan, t5 = type$.legacy_Value_2, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t3._async_evaluate0$_addErrorSpan$1$2(t4, new E._EvaluateVisitor_visitIncludeRule____closure2(t3, t1[_i]), t5), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitIncludeRule____closure2.prototype = {\n    call$0: function() {\n      return this.statement.accept$1(this.$this);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitMediaRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.mergedQueries;\n              if (t2 == null)\n                t2 = $async$self.queries;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitMediaRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitMediaRule___closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule___closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitMediaRule_closure6.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor__visitMediaQueries_closure2.prototype = {\n    call$0: function() {\n      return F.MediaQueryParser$0(this.resolved, this.$this._async_evaluate0$_logger, null).parse$0();\n    },\n    $signature: 82\n  };\n  E._EvaluateVisitor_visitStyleRule_closure20.prototype = {\n    call$0: function() {\n      var t1 = this.selectorText;\n      return E.KeyframeSelectorParser$0(t1.get$value(t1), this.$this._async_evaluate0$_logger).parse$0();\n    },\n    $signature: 42\n  };\n  E._EvaluateVisitor_visitStyleRule_closure21.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule_closure22.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitStyleRule_closure23.prototype = {\n    call$0: function() {\n      var t2, t3,\n        t1 = this.selectorText;\n      t1 = t1.get$value(t1);\n      t2 = this.$this;\n      t3 = !t2._async_evaluate0$_stylesheet.plainCss;\n      return D.SelectorList_SelectorList$parse0(t1, t3, t3, t2._async_evaluate0$_logger);\n    },\n    $signature: 43\n  };\n  E._EvaluateVisitor_visitStyleRule_closure24.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.parsedSelector,\n        t2 = this.$this,\n        t3 = t2._async_evaluate0$_styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._async_evaluate0$_atRootExcludingStyleRule);\n    },\n    $signature: 43\n  };\n  E._EvaluateVisitor_visitStyleRule_closure25.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitStyleRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitStyleRule_closure26.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitSupportsRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t3, _i, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t3 = t2.length, _i = 0;\n            case 5:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 7;\n                break;\n              }\n              $async$goto = 8;\n              return P._asyncAwait(t2[_i].accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n            case 6:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 7:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 9;\n              return P._asyncAwait(t1._async_evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitSupportsRule__closure2(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);\n            case 9:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitSupportsRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, t3, _i;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;\n            case 2:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 5;\n              return P._asyncAwait(t1[_i].accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n            case 3:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 4:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitSupportsRule_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure8.prototype = {\n    call$0: function() {\n      var t1 = this.override;\n      this.$this._async_evaluate0$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);\n    },\n    $signature: 0\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure9.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 22\n  };\n  E._EvaluateVisitor_visitVariableDeclaration_closure10.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      t1._async_evaluate0$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._async_evaluate0$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);\n    },\n    $signature: 0\n  };\n  E._EvaluateVisitor_visitUseRule_closure2.prototype = {\n    call$1: function(module) {\n      var t1 = this.node;\n      this.$this._async_evaluate0$_environment.addModule$3$namespace(module, t1, t1.namespace);\n    },\n    $signature: 83\n  };\n  E._EvaluateVisitor_visitWarnRule_closure2.prototype = {\n    call$0: function() {\n      return this.node.expression.accept$1(this.$this);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitWhileRule_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, result;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node, t2 = t1.condition, t3 = $async$self.$this, t1 = t1.children;\n            case 3:\n              // for condition\n              $async$goto = 5;\n              return P._asyncAwait(t2.accept$1(t3), $async$call$0);\n            case 5:\n              // returning from await.\n              if (!$async$result.get$isTruthy()) {\n                // goto after for\n                $async$goto = 4;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t3._async_evaluate0$_handleReturn$2(t1, new E._EvaluateVisitor_visitWhileRule__closure2(t3)), $async$call$0);\n            case 6:\n              // returning from await.\n              result = $async$result;\n              if (result != null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 4:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitWhileRule__closure2.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 66\n  };\n  E._EvaluateVisitor_visitBinaryOperationExpression_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, right, result, t1, t2, left, $async$temp1, $async$temp2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node;\n              t2 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(t1.left.accept$1(t2), $async$call$0);\n            case 3:\n              // returning from await.\n              left = $async$result;\n            case 4:\n              // switch\n              switch (t1.operator) {\n                case C.BinaryOperator_kjl0:\n                  // goto case\n                  $async$goto = 6;\n                  break;\n                case C.BinaryOperator_or_or_10:\n                  // goto case\n                  $async$goto = 7;\n                  break;\n                case C.BinaryOperator_and_and_20:\n                  // goto case\n                  $async$goto = 8;\n                  break;\n                case C.BinaryOperator_YlX0:\n                  // goto case\n                  $async$goto = 9;\n                  break;\n                case C.BinaryOperator_i5H0:\n                  // goto case\n                  $async$goto = 10;\n                  break;\n                case C.BinaryOperator_AcR1:\n                  // goto case\n                  $async$goto = 11;\n                  break;\n                case C.BinaryOperator_1da0:\n                  // goto case\n                  $async$goto = 12;\n                  break;\n                case C.BinaryOperator_8qt0:\n                  // goto case\n                  $async$goto = 13;\n                  break;\n                case C.BinaryOperator_33h0:\n                  // goto case\n                  $async$goto = 14;\n                  break;\n                case C.BinaryOperator_AcR2:\n                  // goto case\n                  $async$goto = 15;\n                  break;\n                case C.BinaryOperator_iyO0:\n                  // goto case\n                  $async$goto = 16;\n                  break;\n                case C.BinaryOperator_O1M0:\n                  // goto case\n                  $async$goto = 17;\n                  break;\n                case C.BinaryOperator_RTB0:\n                  // goto case\n                  $async$goto = 18;\n                  break;\n                case C.BinaryOperator_2ad0:\n                  // goto case\n                  $async$goto = 19;\n                  break;\n                default:\n                  // goto default\n                  $async$goto = 20;\n                  break;\n              }\n              break;\n            case 6:\n              // case\n              $async$goto = 21;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 21:\n              // returning from await.\n              right = $async$result;\n              left.toString;\n              t1 = N.serializeValue(left, false, true) + \"=\";\n              right.toString;\n              $async$returnValue = new D.SassString0(t1 + N.serializeValue(right, false, true), false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 7:\n              // case\n              $async$goto = left.get$isTruthy() ? 22 : 24;\n              break;\n            case 22:\n              // then\n              $async$result = left;\n              // goto join\n              $async$goto = 23;\n              break;\n            case 24:\n              // else\n              $async$goto = 25;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 25:\n              // returning from await.\n            case 23:\n              // join\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 8:\n              // case\n              $async$goto = left.get$isTruthy() ? 26 : 28;\n              break;\n            case 26:\n              // then\n              $async$goto = 29;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 29:\n              // returning from await.\n              // goto join\n              $async$goto = 27;\n              break;\n            case 28:\n              // else\n              $async$result = left;\n            case 27:\n              // join\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 9:\n              // case\n              $async$temp1 = J;\n              $async$temp2 = left;\n              $async$goto = 30;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 30:\n              // returning from await.\n              $async$returnValue = $async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true : C.SassBoolean_false;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 10:\n              // case\n              $async$temp1 = J;\n              $async$temp2 = left;\n              $async$goto = 31;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 31:\n              // returning from await.\n              $async$returnValue = !$async$temp1.$eq$($async$temp2, $async$result) ? C.SassBoolean_true : C.SassBoolean_false;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 11:\n              // case\n              $async$temp1 = left;\n              $async$goto = 32;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 32:\n              // returning from await.\n              $async$returnValue = $async$temp1.greaterThan$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 12:\n              // case\n              $async$temp1 = left;\n              $async$goto = 33;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 33:\n              // returning from await.\n              $async$returnValue = $async$temp1.greaterThanOrEquals$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 13:\n              // case\n              $async$temp1 = left;\n              $async$goto = 34;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 34:\n              // returning from await.\n              $async$returnValue = $async$temp1.lessThan$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 14:\n              // case\n              $async$temp1 = left;\n              $async$goto = 35;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 35:\n              // returning from await.\n              $async$returnValue = $async$temp1.lessThanOrEquals$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 15:\n              // case\n              $async$temp1 = left;\n              $async$goto = 36;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 36:\n              // returning from await.\n              $async$returnValue = $async$temp1.plus$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 16:\n              // case\n              $async$temp1 = left;\n              $async$goto = 37;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 37:\n              // returning from await.\n              $async$returnValue = $async$temp1.minus$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 17:\n              // case\n              $async$temp1 = left;\n              $async$goto = 38;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 38:\n              // returning from await.\n              $async$returnValue = $async$temp1.times$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 18:\n              // case\n              $async$goto = 39;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 39:\n              // returning from await.\n              right = $async$result;\n              result = left.dividedBy$1(right);\n              if (t1.allowsSlash && left instanceof T.SassNumber0 && right instanceof T.SassNumber0) {\n                $async$returnValue = type$.legacy_SassNumber_2._as(result).withSlash$2(left, right);\n                // goto return\n                $async$goto = 1;\n                break;\n              } else {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 19:\n              // case\n              $async$temp1 = left;\n              $async$goto = 40;\n              return P._asyncAwait(t1.right.accept$1(t2), $async$call$0);\n            case 40:\n              // returning from await.\n              $async$returnValue = $async$temp1.modulo$1($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 20:\n              // default\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 5:\n              // after switch\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor_visitVariableExpression_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 22\n  };\n  E._EvaluateVisitor_visitListExpression_closure2.prototype = {\n    call$1: function(expression) {\n      return expression.accept$1(this.$this);\n    },\n    $signature: 302\n  };\n  E._EvaluateVisitor_visitFunctionExpression_closure5.prototype = {\n    call$0: function() {\n      var t1 = this.node.namespace,\n        t2 = this.plainName;\n      if (t1 == null)\n        t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return this.$this._async_evaluate0$_getFunction$2$namespace(t2, t1);\n    },\n    $signature: 107\n  };\n  E._EvaluateVisitor_visitFunctionExpression_closure6.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._async_evaluate0$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor__runUserDefinedCallable_closure2.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.callable;\n      return t1._async_evaluate0$_withEnvironment$1$2(t2.environment.closure$0(), new E._EvaluateVisitor__runUserDefinedCallable__closure2(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor__runUserDefinedCallable__closure2.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._async_evaluate0$_environment.scope$1$1(new E._EvaluateVisitor__runUserDefinedCallable___closure2(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor__runUserDefinedCallable___closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, declaredArguments, minLength, t8, i, t9, t10, t11, argument, value, t12, rest, argumentList, result, argumentWord, argumentNames, t1, t2, t3, t4, t5, t6, t7;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.evaluated;\n              t3 = t2.positional;\n              t4 = t3.length;\n              t5 = t2.named;\n              t6 = $async$self.callable.declaration.$arguments;\n              t7 = $async$self.nodeWithSpan;\n              t1._async_evaluate0$_verifyArguments$4(t4, t5, t6, t7);\n              declaredArguments = t6.$arguments;\n              t4 = declaredArguments.length;\n              minLength = Math.min(t3.length, t4);\n              for (t8 = t1._async_evaluate0$_sourceMap, i = 0; i < minLength; ++i) {\n                t9 = t1._async_evaluate0$_environment;\n                t10 = declaredArguments[i].name;\n                t11 = t3[i].withoutSlash$0();\n                t9.setLocalVariable$3(t10, t11, t8 ? t2.positionalNodes[i] : null);\n              }\n              i = t3.length;\n            case 3:\n              // for condition\n              if (!(i < t4)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              argument = declaredArguments[i];\n              t9 = argument.name;\n              value = t5.remove$1(0, t9);\n              $async$goto = value == null ? 6 : 7;\n              break;\n            case 6:\n              // then\n              $async$goto = 8;\n              return P._asyncAwait(argument.defaultValue.accept$1(t1), $async$call$0);\n            case 8:\n              // returning from await.\n              value = $async$result;\n            case 7:\n              // join\n              t10 = t1._async_evaluate0$_environment;\n              t11 = value.withoutSlash$0();\n              if (t8) {\n                t12 = t2.namedNodes.$index(0, t9);\n                if (t12 == null)\n                  t12 = t1._async_evaluate0$_expressionNode$1(argument.defaultValue);\n              } else\n                t12 = null;\n              t10.setLocalVariable$3(t9, t11, t12);\n            case 4:\n              // for update\n              ++i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              t8 = t6.restArgument;\n              if (t8 != null) {\n                rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty16;\n                t2 = t2.separator;\n                argumentList = D.SassArgumentList$0(rest, t5, t2 === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : t2);\n                t1._async_evaluate0$_environment.setLocalVariable$3(t8, argumentList, t7);\n              } else\n                argumentList = null;\n              $async$goto = 9;\n              return P._asyncAwait($async$self.run.call$0(), $async$call$0);\n            case 9:\n              // returning from await.\n              result = $async$result;\n              if (argumentList == null) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (t5.get$isEmpty(t5)) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              if (argumentList._argument_list$_wereKeywordsAccessed) {\n                $async$returnValue = result;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t2 = t5.get$keys(t5);\n              argumentWord = B.pluralize0(\"argument\", t2.get$length(t2), null);\n              t5 = t5.get$keys(t5);\n              argumentNames = B.toSentence0(H.MappedIterable_MappedIterable(t5, new E._EvaluateVisitor__runUserDefinedCallable____closure2(), H._instanceType(t5)._eval$1(\"Iterable.E\"), type$.legacy_Object), \"or\");\n              throw H.wrapException(E.MultiSpanSassRuntimeException$0(\"No \" + argumentWord + \" named \" + H.S(argumentNames) + \".\", t7.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), t1._async_evaluate0$_stackTrace$1(t7.get$span())));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor__runUserDefinedCallable____closure2.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  E._EvaluateVisitor__runFunctionCallable_closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t1, t2, t3, t4, _i, $returnValue;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = $async$self.$this, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t3)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait(t2[_i].accept$1(t4), $async$call$0);\n            case 6:\n              // returning from await.\n              $returnValue = $async$result;\n              if ($returnValue instanceof F.Value0) {\n                $async$returnValue = $returnValue;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              throw H.wrapException(t4._async_evaluate0$_exception$2(\"Function finished without @return.\", t1.span));\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 30\n  };\n  E._EvaluateVisitor__runBuiltInCallable_closure5.prototype = {\n    call$0: function() {\n      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor__runBuiltInCallable_closure6.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  E._EvaluateVisitor__evaluateArguments_closure2.prototype = {\n    call$2: function(key, value) {\n      var t1;\n      this.named.$indexSet(0, key, value);\n      t1 = this.namedNodes;\n      if (t1 != null)\n        t1.$indexSet(0, key, this.restNodeForSpan);\n    },\n    $signature: 61\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure11.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure12.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure13.prototype = {\n    call$2: function(key, value) {\n      this.named.$indexSet(0, key, new F.ValueExpression0(value, null));\n    },\n    $signature: 61\n  };\n  E._EvaluateVisitor__evaluateMacroArguments_closure14.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  E._EvaluateVisitor__addRestMap_closure5.prototype = {\n    call$1: function(value) {\n      return this.T._eval$1(\"0*\")._as(value);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(Value0*)\");\n    }\n  };\n  E._EvaluateVisitor__addRestMap_closure6.prototype = {\n    call$2: function(key, value) {\n      var _this = this;\n      if (key instanceof D.SassString0)\n        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));\n      else\n        throw H.wrapException(_this.$this._async_evaluate0$_exception$2(string$.Variab_ + H.S(key) + \" is not a string in \" + _this.map.toString$0(0) + \".\", _this.nodeWithSpan.get$span()));\n    },\n    $signature: 50\n  };\n  E._EvaluateVisitor__verifyArguments_closure2.prototype = {\n    call$0: function() {\n      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));\n    },\n    $signature: 1\n  };\n  E._EvaluateVisitor_visitStringExpression_closure2.prototype = {\n    call$1: function(value) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, result;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (typeof value == \"string\") {\n                $async$returnValue = value;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              type$.legacy_Expression_2._as(value);\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(value.accept$1(t1), $async$call$1);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              $async$returnValue = result instanceof D.SassString0 ? result.text : t1._async_evaluate0$_serialize$3$quote(result, value, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 63\n  };\n  E._EvaluateVisitor_visitCssAtRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssAtRule_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitCssKeyframeBlock_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssKeyframeBlock_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitCssMediaRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = $async$self.mergedQueries;\n              if (t2 == null)\n                t2 = $async$self.node.queries;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_withMediaQueries$1$2(t2, new E._EvaluateVisitor_visitCssMediaRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, cur, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));\n            case 5:\n              // for condition\n              if (!t2.moveNext$0()) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              cur = t2.__internal$_current;\n              $async$goto = 7;\n              return P._asyncAwait(cur.accept$1(t1), $async$call$0);\n            case 7:\n              // returning from await.\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 6:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 8;\n              return P._asyncAwait(t1._async_evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssMediaRule___closure2(t1, $async$self.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);\n            case 8:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule___closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssMediaRule_closure6.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitCssStyleRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              $async$goto = 2;\n              return P._asyncAwait(t1._async_evaluate0$_withStyleRule$1$2($async$self.rule, new E._EvaluateVisitor_visitCssStyleRule__closure2(t1, $async$self.node), type$.Null), $async$call$0);\n            case 2:\n              // returning from await.\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssStyleRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssStyleRule_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor_visitCssSupportsRule_closure5.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, cur, t1, t2;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this;\n              t2 = t1._async_evaluate0$_styleRule;\n              $async$goto = !(t2 != null && !t1._async_evaluate0$_atRootExcludingStyleRule) ? 2 : 4;\n              break;\n            case 2:\n              // then\n              t2 = $async$self.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2));\n            case 5:\n              // for condition\n              if (!t2.moveNext$0()) {\n                // goto after for\n                $async$goto = 6;\n                break;\n              }\n              cur = t2.__internal$_current;\n              $async$goto = 7;\n              return P._asyncAwait(cur.accept$1(t1), $async$call$0);\n            case 7:\n              // returning from await.\n              // goto for condition\n              $async$goto = 5;\n              break;\n            case 6:\n              // after for\n              // goto join\n              $async$goto = 3;\n              break;\n            case 4:\n              // else\n              $async$goto = 8;\n              return P._asyncAwait(t1._async_evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new E._EvaluateVisitor_visitCssSupportsRule__closure2(t1, $async$self.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null), $async$call$0);\n            case 8:\n              // returning from await.\n            case 3:\n              // join\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssSupportsRule__closure2.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),\n        $async$self = this, t1, t2, cur;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this;\n            case 2:\n              // for condition\n              if (!t1.moveNext$0()) {\n                // goto after for\n                $async$goto = 3;\n                break;\n              }\n              cur = t1.__internal$_current;\n              $async$goto = 4;\n              return P._asyncAwait(cur.accept$1(t2), $async$call$0);\n            case 4:\n              // returning from await.\n              // goto for condition\n              $async$goto = 2;\n              break;\n            case 3:\n              // after for\n              // implicit return\n              return P._asyncReturn(null, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 2\n  };\n  E._EvaluateVisitor_visitCssSupportsRule_closure6.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._EvaluateVisitor__performInterpolation_closure2.prototype = {\n    call$1: function(value) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_String),\n        $async$returnValue, $async$self = this, t1, result, t2, t3;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              if (typeof value == \"string\") {\n                $async$returnValue = value;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              type$.legacy_Expression_2._as(value);\n              t1 = $async$self.$this;\n              $async$goto = 3;\n              return P._asyncAwait(value.accept$1(t1), $async$call$1);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if ($async$self.warnForColor && result instanceof K.SassColor0 && $.$get$namesByColor0().containsKey$1(result)) {\n                t2 = X.Interpolation$0(H.setRuntimeTypeInfo([\"\"], type$.JSArray_legacy_Object), null);\n                t3 = $.$get$namesByColor0();\n                t1._async_evaluate0$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whic + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression0(C.BinaryOperator_AcR2, new D.StringExpression0(t2, true), value, false).toString$0(0) + \"'.\", value.get$span());\n              }\n              $async$returnValue = t1._async_evaluate0$_serialize$3$quote(result, value, false);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 63\n  };\n  E._EvaluateVisitor__serialize_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      t1.toString;\n      return N.serializeValue(t1, false, this.quote);\n    },\n    $signature: 13\n  };\n  E._EvaluateVisitor__stackTrace_closure2.prototype = {\n    call$1: function(tuple) {\n      return this.$this._async_evaluate0$_stackFrame$2(tuple.item1, tuple.item2.get$span());\n    },\n    $signature: 163\n  };\n  E._ImportedCssVisitor2.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless ? null : new E._ImportedCssVisitor_visitCssAtRule_closure2();\n      this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, t1);\n    },\n    visitCssComment$1: function(node) {\n      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$1(node);\n    },\n    visitCssDeclaration$1: function(node) {\n    },\n    visitCssImport$1: function(node) {\n      var t1 = this._async_evaluate0$_visitor,\n        t2 = t1._async_evaluate0$_parent,\n        t3 = t1._async_evaluate0$_root;\n      if (t2 != t3)\n        t1._async_evaluate0$_addChild$1(node);\n      else if (t1._async_evaluate0$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {\n        t1._async_evaluate0$_addChild$1(node);\n        t1._async_evaluate0$_endOfImports = t1._async_evaluate0$_endOfImports + 1;\n      } else {\n        t2 = t1._async_evaluate0$_outOfOrderImports;\n        (t2 == null ? t1._async_evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t2).push(node);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1 = this._async_evaluate0$_visitor,\n        t2 = t1._async_evaluate0$_mediaQueries;\n      t1._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssMediaRule_closure2(t2 == null || t1._async_evaluate0$_mergeMediaQueries$2(t2, node.queries) != null));\n    },\n    visitCssStyleRule$1: function(node) {\n      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssStyleRule_closure2());\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1, cur;\n      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(this);\n      }\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._async_evaluate0$_visitor._async_evaluate0$_addChild$2$through(node, new E._ImportedCssVisitor_visitCssSupportsRule_closure2());\n    }\n  };\n  E._ImportedCssVisitor_visitCssAtRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._ImportedCssVisitor_visitCssMediaRule_closure2.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  E._ImportedCssVisitor_visitCssStyleRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E._ImportedCssVisitor_visitCssSupportsRule_closure2.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  E.EvaluateResult0.prototype = {};\n  E._ArgumentResults2.prototype = {};\n  O.AsyncImportCache0.prototype = {\n    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      return this.canonicalize$body$AsyncImportCache0(url, baseImporter, baseUrl, forImport);\n    },\n    canonicalize$body$AsyncImportCache0: function(url, baseImporter, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri),\n        $async$returnValue, $async$self = this, resolvedUrl, canonicalUrl;\n      var $async$canonicalize$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = baseImporter != null ? 3 : 4;\n              break;\n            case 3:\n              // then\n              resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;\n              $async$goto = 5;\n              return P._asyncAwait($async$self._async_import_cache0$_canonicalize$3(baseImporter, resolvedUrl, forImport), $async$canonicalize$4$baseImporter$baseUrl$forImport);\n            case 5:\n              // returning from await.\n              canonicalUrl = $async$result;\n              if (canonicalUrl != null) {\n                $async$returnValue = new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // join\n              $async$goto = 6;\n              return P._asyncAwait(B.putIfAbsentAsync0($async$self._async_import_cache0$_canonicalizeCache, new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new O.AsyncImportCache_canonicalize_closure0($async$self, url, forImport), type$.legacy_Tuple2_of_legacy_Uri_and_legacy_bool, type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri), $async$canonicalize$4$baseImporter$baseUrl$forImport);\n            case 6:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$canonicalize$4$baseImporter$baseUrl$forImport, $async$completer);\n    },\n    _async_import_cache0$_canonicalize$3: function(importer, url, forImport) {\n      return this._canonicalize$body$AsyncImportCache0(importer, url, forImport);\n    },\n    _canonicalize$body$AsyncImportCache0: function(importer, url, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Uri),\n        $async$returnValue, $async$self = this, result;\n      var $async$_async_import_cache0$_canonicalize$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(forImport ? B.inImportRule0(new O.AsyncImportCache__canonicalize_closure0(importer, url)) : importer.canonicalize$1(url), $async$_async_import_cache0$_canonicalize$3);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if ((result == null ? null : result.get$scheme()) === \"\")\n                $async$self._async_import_cache0$_logger.warn$2$deprecation(0, \"Importer \" + H.S(importer) + \" canonicalized \" + url.toString$0(0) + \" to \" + H.S(result) + string$.x2ex0aRela, true);\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_async_import_cache0$_canonicalize$3, $async$completer);\n    },\n    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      return this.import$body$AsyncImportCache0(url, baseImporter, baseUrl, forImport);\n    },\n    import$body$AsyncImportCache0: function(url, baseImporter, baseUrl, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2),\n        $async$returnValue, $async$self = this, t1, stylesheet, tuple;\n      var $async$import$4$baseImporter$baseUrl$forImport = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait($async$self.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport), $async$import$4$baseImporter$baseUrl$forImport);\n            case 3:\n              // returning from await.\n              tuple = $async$result;\n              if (tuple == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t1 = tuple.item1;\n              $async$goto = 4;\n              return P._asyncAwait($async$self.importCanonical$3(t1, tuple.item2, tuple.item3), $async$import$4$baseImporter$baseUrl$forImport);\n            case 4:\n              // returning from await.\n              stylesheet = $async$result;\n              if (stylesheet == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              $async$returnValue = new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$import$4$baseImporter$baseUrl$forImport, $async$completer);\n    },\n    importCanonical$3: function(importer, canonicalUrl, originalUrl) {\n      return this.importCanonical$body$AsyncImportCache0(importer, canonicalUrl, originalUrl);\n    },\n    importCanonical$body$AsyncImportCache0: function(importer, canonicalUrl, originalUrl) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),\n        $async$returnValue, $async$self = this;\n      var $async$importCanonical$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              $async$goto = 3;\n              return P._asyncAwait(B.putIfAbsentAsync0($async$self._async_import_cache0$_importCache, canonicalUrl, new O.AsyncImportCache_importCanonical_closure0($async$self, importer, canonicalUrl, originalUrl), type$.legacy_Uri, type$.legacy_Stylesheet), $async$importCanonical$3);\n            case 3:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$importCanonical$3, $async$completer);\n    },\n    humanize$1: function(canonicalUrl) {\n      var t2, url,\n        t1 = this._async_import_cache0$_canonicalizeCache;\n      t1 = t1.get$values(t1);\n      t2 = H._instanceType(t1);\n      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new O.AsyncImportCache_humanize_closure2(canonicalUrl), t2._eval$1(\"WhereIterable<Iterable.E>\")), new O.AsyncImportCache_humanize_closure3(), t2._eval$1(\"MappedIterable<Iterable.E,Uri*>\")), new O.AsyncImportCache_humanize_closure4(), type$.legacy_Uri, type$.dynamic);\n      if (url == null)\n        return canonicalUrl;\n      t1 = $.$get$url();\n      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());\n    }\n  };\n  O.AsyncImportCache_canonicalize_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri),\n        $async$returnValue, $async$self = this, t1, t2, t3, _i, importer, canonicalUrl;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.$this, t2 = $async$self.url, t3 = $async$self.forImport, _i = 0;\n            case 3:\n              // for condition\n              if (true) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              importer = C.List_empty23[_i];\n              $async$goto = 6;\n              return P._asyncAwait(t1._async_import_cache0$_canonicalize$3(importer, t2, t3), $async$call$0);\n            case 6:\n              // returning from await.\n              canonicalUrl = $async$result;\n              if (canonicalUrl != null) {\n                $async$returnValue = new S.Tuple3(importer, canonicalUrl, t2, type$.Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = null;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 306\n  };\n  O.AsyncImportCache__canonicalize_closure0.prototype = {\n    call$0: function() {\n      return this.importer.canonicalize$1(this.url);\n    },\n    $signature: 181\n  };\n  O.AsyncImportCache_importCanonical_closure0.prototype = {\n    call$0: function() {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Stylesheet),\n        $async$returnValue, $async$self = this, t2, t3, t4, t5, t1, result;\n      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = $async$self.canonicalUrl;\n              $async$goto = 3;\n              return P._asyncAwait($async$self.importer.load$1(0, t1), $async$call$0);\n            case 3:\n              // returning from await.\n              result = $async$result;\n              if (result == null) {\n                $async$returnValue = null;\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n              t2 = $async$self.$this;\n              t2._async_import_cache0$_resultsCache.$indexSet(0, t1, result);\n              t3 = result.contents;\n              t4 = result.syntax;\n              t5 = $async$self.originalUrl;\n              t1 = t5 == null ? t1 : t5.resolveUri$1(t1);\n              $async$returnValue = V.Stylesheet_Stylesheet$parse0(t3, t4, t2._async_import_cache0$_logger, t1);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$0, $async$completer);\n    },\n    $signature: 307\n  };\n  O.AsyncImportCache_humanize_closure2.prototype = {\n    call$1: function(tuple) {\n      var t1 = tuple == null ? null : tuple.item2;\n      return J.$eq$(t1, this.canonicalUrl);\n    },\n    $signature: 308\n  };\n  O.AsyncImportCache_humanize_closure3.prototype = {\n    call$1: function(tuple) {\n      return tuple.item3;\n    },\n    $signature: 309\n  };\n  O.AsyncImportCache_humanize_closure4.prototype = {\n    call$1: function(url) {\n      return J.get$length$asx(J.get$path$x(url));\n    },\n    $signature: 41\n  };\n  V.AtRootQueryParser0.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new V.AtRootQueryParser_parse_closure0(this));\n    }\n  };\n  V.AtRootQueryParser_parse_closure0.prototype = {\n    call$0: function() {\n      var include, atRules,\n        t1 = this.$this,\n        t2 = t1.scanner;\n      t2.expectChar$1(40);\n      t1.whitespace$0();\n      include = t1.scanIdentifier$1(\"with\");\n      if (!include)\n        t1.expectIdentifier$2$name(\"without\", '\"with\" or \"without\"');\n      t1.whitespace$0();\n      t2.expectChar$1(58);\n      t1.whitespace$0();\n      atRules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      do {\n        atRules.add$1(0, t1.identifier$0().toLowerCase());\n        t1.whitespace$0();\n      } while (t1.lookingAtIdentifier$0());\n      t2.expectChar$1(41);\n      t2.expectDone$0();\n      return new V.AtRootQuery0(include, atRules, atRules.contains$1(0, \"all\"), atRules.contains$1(0, \"rule\"));\n    },\n    $signature: 97\n  };\n  V.AtRootQuery0.prototype = {\n    excludes$1: function(node) {\n      var t1, _this = this;\n      if (_this._at_root_query0$_all)\n        return !_this.include;\n      if (type$.legacy_CssStyleRule_2._is(node))\n        return _this._at_root_query0$_rule !== _this.include;\n      if (type$.legacy_CssMediaRule_2._is(node))\n        return _this.excludesName$1(\"media\");\n      if (type$.legacy_CssSupportsRule_2._is(node))\n        return _this.excludesName$1(\"supports\");\n      if (type$.legacy_CssAtRule_2._is(node)) {\n        t1 = node.name;\n        return _this.excludesName$1(t1.get$value(t1).toLowerCase());\n      }\n      return false;\n    },\n    excludesName$1: function($name) {\n      var t1 = this._at_root_query0$_all || this.names.contains$1(0, $name);\n      return t1 !== this.include;\n    }\n  };\n  V.AtRootRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitAtRootRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var buffer = new P.StringBuffer(\"@at-root \"),\n        t1 = this.query;\n      if (t1 != null)\n        buffer._contents = \"@at-root \" + (t1.toString$0(0) + \" \");\n      t1 = this.children;\n      return buffer.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.ModifiableCssAtRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssAtRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      var _this = this;\n      return U.ModifiableCssAtRule$0(_this.name, _this.span, _this.isChildless, _this.value);\n    },\n    addChild$1: function(child) {\n      this.super$ModifiableCssParentNode$addChild0(child);\n    },\n    $isCssAtRule0: 1,\n    get$isChildless: function() {\n      return this.isChildless;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.AtRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitAtRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = \"@\" + this.name.toString$0(0),\n        buffer = new P.StringBuffer(t1),\n        t2 = this.value;\n      if (t2 != null)\n        buffer._contents = t1 + (\" \" + t2.toString$0(0));\n      t1 = this.children;\n      return t1 == null ? buffer.toString$0(0) + \";\" : buffer.toString$0(0) + \" {\" + C.JSArray_methods.join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  N.AttributeSelector0.prototype = {\n    accept$1$1: function(visitor) {\n      var t2, _this = this,\n        t1 = visitor._buffer;\n      t1.writeCharCode$1(91);\n      t1.write$1(0, _this.name);\n      t2 = _this.op;\n      if (t2 != null) {\n        t1.write$1(0, t2);\n        t2 = _this.value;\n        if (G.Parser_isIdentifier0(t2) && !J.startsWith$1$s(t2, \"--\")) {\n          t1.write$1(0, t2);\n          t2 = _this.modifier;\n          if (t2 != null)\n            t1.writeCharCode$1(32);\n        } else {\n          visitor._serialize0$_visitQuotedString$1(t2);\n          t2 = _this.modifier;\n          if (t2 != null)\n            if (visitor._serialize0$_style !== C.OutputStyle_compressed0)\n              t1.writeCharCode$1(32);\n        }\n        if (t2 != null)\n          t1.write$1(0, t2);\n      }\n      t1.writeCharCode$1(93);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof N.AttributeSelector0 && other.name.$eq(0, _this.name) && other.op == _this.op && other.value == _this.value && other.modifier == _this.modifier;\n    },\n    get$hashCode: function(_) {\n      var _this = this,\n        t1 = _this.name;\n      return (C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace) ^ J.get$hashCode$(_this.op) ^ J.get$hashCode$(_this.value) ^ J.get$hashCode$(_this.modifier)) >>> 0;\n    }\n  };\n  N.AttributeOperator0.prototype = {\n    toString$0: function(_) {\n      return this._attribute0$_text;\n    }\n  };\n  V.BinaryOperationExpression0.prototype = {\n    get$span: function() {\n      var right,\n        left = this.left;\n      for (; left instanceof V.BinaryOperationExpression0;)\n        left = left.left;\n      right = this.right;\n      for (; right instanceof V.BinaryOperationExpression0;)\n        right = right.right;\n      return B.spanForList0(H.setRuntimeTypeInfo([left, right], type$.JSArray_legacy_AstNode_2));\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitBinaryOperationExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, right, rightNeedsParens, _this = this,\n        left = _this.left,\n        leftNeedsParens = left instanceof V.BinaryOperationExpression0 && left.operator.precedence < _this.operator.precedence,\n        t1 = leftNeedsParens ? H.Primitives_stringFromCharCode(40) : \"\";\n      t1 += H.S(left);\n      if (leftNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(41);\n      t2 = _this.operator;\n      t1 = t1 + H.Primitives_stringFromCharCode(32) + t2.operator + H.Primitives_stringFromCharCode(32);\n      right = _this.right;\n      rightNeedsParens = right instanceof V.BinaryOperationExpression0 && right.operator.precedence <= t2.precedence;\n      if (rightNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(40);\n      t1 += H.S(right);\n      if (rightNeedsParens)\n        t1 += H.Primitives_stringFromCharCode(41);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1\n  };\n  V.BinaryOperator0.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  Z.BooleanExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitBooleanExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return String(this.value);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Z.closure263.prototype = {\n    call$0: function() {\n      var $constructor = P.allowInterop(new Z._closure34());\n      B.injectSuperclass(C.SassBoolean_true, $constructor);\n      self.Object.defineProperty(C.SassBoolean_true.constructor, \"name\", {value: \"SassBoolean\"});\n      B.forwardToString($constructor);\n      $constructor.prototype.getValue = P.allowInteropCaptureThis(new Z._closure35());\n      $constructor.TRUE = C.SassBoolean_true;\n      $constructor.FALSE = C.SassBoolean_false;\n      return $constructor;\n    },\n    $signature: 164\n  };\n  Z._closure34.prototype = {\n    call$1: function(_) {\n      throw H.wrapException(\"new sass.types.Boolean() isn't allowed.\\nUse sass.types.Boolean.TRUE or sass.types.Boolean.FALSE instead.\");\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 90\n  };\n  Z._closure35.prototype = {\n    call$1: function(thisArg) {\n      return thisArg === C.SassBoolean_true;\n    },\n    $signature: 23\n  };\n  Z.SassBoolean0.prototype = {\n    get$isTruthy: function() {\n      return this.value;\n    },\n    accept$1$1: function(visitor) {\n      return visitor._buffer.write$1(0, String(this.value));\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unaryNot$0: function() {\n      return this.value ? C.SassBoolean_false : C.SassBoolean_true;\n    }\n  };\n  Q.BuiltInCallable0.prototype = {\n    callbackFor$2: function(positional, names) {\n      var t1, t2, fuzzyMatch, minMismatchDistance, _i, overload, t3, mismatchDistance, t4;\n      for (t1 = this._built_in$_overloads, t2 = t1.length, fuzzyMatch = null, minMismatchDistance = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        overload = t1[_i];\n        t3 = overload.item1;\n        if (t3.matches$2(positional, names))\n          return overload;\n        mismatchDistance = t3.$arguments.length - positional;\n        if (minMismatchDistance != null) {\n          t3 = Math.abs(mismatchDistance);\n          t4 = Math.abs(minMismatchDistance);\n          if (t3 > t4)\n            continue;\n          if (t3 === t4 && mismatchDistance < 0)\n            continue;\n        }\n        minMismatchDistance = mismatchDistance;\n        fuzzyMatch = overload;\n      }\n      return fuzzyMatch;\n    },\n    withName$1: function($name) {\n      return new Q.BuiltInCallable0($name, this._built_in$_overloads);\n    },\n    $isAsyncCallable0: 1,\n    $isAsyncBuiltInCallable0: 1,\n    $isCallable0: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  Q.BuiltInCallable$mixin_closure0.prototype = {\n    call$1: function($arguments) {\n      this.callback.call$1($arguments);\n      return null;\n    },\n    $signature: 109\n  };\n  Q.BuiltInModule0.prototype = {\n    get$upstream: function() {\n      return C.List_empty14;\n    },\n    get$variableNodes: function() {\n      return C.Map_empty7;\n    },\n    get$extender: function() {\n      return C.C_EmptyExtender0;\n    },\n    get$css: function(_) {\n      return new V.CssStylesheet0(C.List_empty12, Y.SourceFile$decoded(C.List_empty1, this.url).span$2(0, 0));\n    },\n    get$transitivelyContainsCss: function() {\n      return false;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return false;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      if (!this.variables.containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$0(\"Undefined variable.\"));\n      throw H.wrapException(E.SassScriptException$0(\"Cannot modify built-in variable.\"));\n    },\n    variableIdentity$1: function($name) {\n      return this;\n    },\n    cloneCss$0: function() {\n      return this;\n    },\n    $isModule0: 1,\n    get$url: function() {\n      return this.url;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$variables: function() {\n      return this.variables;\n    }\n  };\n  M.CallableDeclaration0.prototype = {\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.Chokidar0.prototype = {};\n  Y.ChokidarOptions0.prototype = {};\n  Y.ChokidarWatcher0.prototype = {};\n  X.ClassSelector0.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof X.ClassSelector0 && other.name === this.name;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._buffer;\n      t1.writeCharCode$1(46);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new X.ClassSelector0(this.name + suffix);\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  V._CloneCssVisitor0.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless,\n        rule = U.ModifiableCssAtRule$0(node.name, node.span, t1, node.value);\n      return t1 ? rule : this._clone_css$_visitChildren$2(rule, node);\n    },\n    visitCssComment$1: function(node) {\n      return new R.ModifiableCssComment0(node.text, node.span);\n    },\n    visitCssDeclaration$1: function(node) {\n      return L.ModifiableCssDeclaration$0(node.name, node.value, node.span, node.parsedAsCustomProperty, node.valueSpanForMap);\n    },\n    visitCssImport$1: function(node) {\n      return F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      return this._clone_css$_visitChildren$2(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), node);\n    },\n    visitCssMediaRule$1: function(node) {\n      return this._clone_css$_visitChildren$2(G.ModifiableCssMediaRule$0(node.queries, node.span), node);\n    },\n    visitCssStyleRule$1: function(node) {\n      var newSelector = this._clone_css$_oldToNewSelectors.$index(0, node.selector);\n      if (newSelector == null)\n        throw H.wrapException(P.StateError$(string$.The_Ex));\n      return this._clone_css$_visitChildren$2(X.ModifiableCssStyleRule$0(newSelector, node.span, node.originalSelector), node);\n    },\n    visitCssStylesheet$1: function(node) {\n      return this._clone_css$_visitChildren$2(V.ModifiableCssStylesheet$0(node.get$span()), node);\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._clone_css$_visitChildren$2(B.ModifiableCssSupportsRule$0(node.condition, node.span), node);\n    },\n    _clone_css$_visitChildren$1$2: function(newParent, oldParent) {\n      var t1, t2, newChild;\n      for (t1 = J.get$iterator$ax(oldParent.get$children(oldParent)); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        newChild = t2.accept$1(this);\n        newChild.isGroupEnd = t2.get$isGroupEnd();\n        newParent.addChild$1(newChild);\n      }\n      return newParent;\n    },\n    _clone_css$_visitChildren$2: function(newParent, oldParent) {\n      return this._clone_css$_visitChildren$1$2(newParent, oldParent, type$.legacy_ModifiableCssParentNode_2);\n    }\n  };\n  K.ColorExpression0.prototype = {\n    get$span: function() {\n      return this.value.originalSpan;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitColorExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return N.serializeValue(this.value, true, true);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1\n  };\n  K.closure159.prototype = {\n    call$1: function($arguments) {\n      return K._rgb0(\"rgb\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure160.prototype = {\n    call$1: function($arguments) {\n      return K._rgb0(\"rgb\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure161.prototype = {\n    call$1: function($arguments) {\n      return K._rgbTwoArg0(\"rgb\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure162.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels0(\"rgb\", H.setRuntimeTypeInfo([\"$red\", \"$green\", \"$blue\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString0 ? parsed : K._rgb0(\"rgb\", type$.legacy_List_legacy_Value_2._as(parsed));\n    },\n    $signature: 3\n  };\n  K.closure163.prototype = {\n    call$1: function($arguments) {\n      return K._rgb0(\"rgba\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure164.prototype = {\n    call$1: function($arguments) {\n      return K._rgb0(\"rgba\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure165.prototype = {\n    call$1: function($arguments) {\n      return K._rgbTwoArg0(\"rgba\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure166.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels0(\"rgba\", H.setRuntimeTypeInfo([\"$red\", \"$green\", \"$blue\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString0 ? parsed : K._rgb0(\"rgba\", type$.legacy_List_legacy_Value_2._as(parsed));\n    },\n    $signature: 3\n  };\n  K.closure167.prototype = {\n    call$1: function($arguments) {\n      var color, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        weight = t1.$index($arguments, 1).assertNumber$1(\"weight\");\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {\n        if (weight.value !== 100 || !weight.hasUnit$1(\"%\"))\n          throw H.wrapException(string$.Only_oa);\n        return K._functionString0(\"invert\", t1.take$1($arguments, 1));\n      }\n      color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      t1 = color.get$red();\n      t2 = color.get$green();\n      return K._mixColors0(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);\n    },\n    $signature: 3\n  };\n  K.closure168.prototype = {\n    call$1: function($arguments) {\n      return K._hsl0(\"hsl\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure169.prototype = {\n    call$1: function($arguments) {\n      return K._hsl0(\"hsl\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure170.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())\n        return K._functionString0(\"hsl\", $arguments);\n      else\n        throw H.wrapException(E.SassScriptException$0(\"Missing argument $lightness.\"));\n    },\n    $signature: 17\n  };\n  K.closure171.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels0(\"hsl\", H.setRuntimeTypeInfo([\"$hue\", \"$saturation\", \"$lightness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString0 ? parsed : K._hsl0(\"hsl\", type$.legacy_List_legacy_Value_2._as(parsed));\n    },\n    $signature: 3\n  };\n  K.closure172.prototype = {\n    call$1: function($arguments) {\n      return K._hsl0(\"hsla\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure173.prototype = {\n    call$1: function($arguments) {\n      return K._hsl0(\"hsla\", $arguments);\n    },\n    $signature: 3\n  };\n  K.closure174.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0).get$isVar() || t1.$index($arguments, 1).get$isVar())\n        return K._functionString0(\"hsla\", $arguments);\n      else\n        throw H.wrapException(E.SassScriptException$0(\"Missing argument $lightness.\"));\n    },\n    $signature: 17\n  };\n  K.closure175.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels0(\"hsla\", H.setRuntimeTypeInfo([\"$hue\", \"$saturation\", \"$lightness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      return parsed instanceof D.SassString0 ? parsed : K._hsl0(\"hsla\", type$.legacy_List_legacy_Value_2._as(parsed));\n    },\n    $signature: 3\n  };\n  K.closure176.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0)\n        return K._functionString0(\"grayscale\", $arguments);\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeHsl$1$saturation(0);\n    },\n    $signature: 3\n  };\n  K.closure177.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        degrees = t1.$index($arguments, 1).assertNumber$1(\"degrees\");\n      return color.changeHsl$1$hue(color.get$hue() + degrees.value);\n    },\n    $signature: 28\n  };\n  K.closure178.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() + amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 28\n  };\n  K.closure179.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$lightness(C.JSNumber_methods.clamp$2(color.get$lightness() - amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 28\n  };\n  K.closure180.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString0(\"saturate(\" + N.serializeValue(J.$index$asx($arguments, 0).assertNumber$1(\"amount\"), false, true) + \")\", false);\n    },\n    $signature: 17\n  };\n  K.closure181.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() + amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 28\n  };\n  K.closure182.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        color = t1.$index($arguments, 0).assertColor$1(\"color\"),\n        amount = t1.$index($arguments, 1).assertNumber$1(\"amount\");\n      return color.changeHsl$1$saturation(C.JSNumber_methods.clamp$2(color.get$saturation() - amount.valueInRange$3(0, 100, \"amount\"), 0, 100));\n    },\n    $signature: 28\n  };\n  K.closure183.prototype = {\n    call$1: function($arguments) {\n      var argument = J.$index$asx($arguments, 0);\n      if (argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0()))\n        return K._functionString0(\"alpha\", $arguments);\n      return T.SassNumber$0(argument.assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 3\n  };\n  K.closure184.prototype = {\n    call$1: function($arguments) {\n      var t1,\n        argList = J.$index$asx($arguments, 0).get$asList();\n      if (argList.length !== 0 && C.JSArray_methods.every$1(argList, new K._closure23()))\n        return K._functionString0(\"alpha\", $arguments);\n      t1 = argList.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$0(\"Missing argument $color.\"));\n      else\n        throw H.wrapException(E.SassScriptException$0(\"Only 1 argument allowed, but \" + t1 + \" were passed.\"));\n    },\n    $signature: 17\n  };\n  K._closure23.prototype = {\n    call$1: function(argument) {\n      return argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0());\n    },\n    $signature: 53\n  };\n  K.closure185.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0)\n        return K._functionString0(\"opacity\", $arguments);\n      return T.SassNumber$0(t1.$index($arguments, 0).assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 3\n  };\n  K.closure214.prototype = {\n    call$1: function($arguments) {\n      var result, color, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        weight = t1.$index($arguments, 1).assertNumber$1(\"weight\");\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {\n        if (weight.value !== 100 || !weight.hasUnit$1(\"%\"))\n          throw H.wrapException(string$.Only_oa);\n        result = K._functionString0(\"invert\", t1.take$1($arguments, 1));\n        N.warn0(string$.Passinni + result.toString$0(0), false);\n        return result;\n      }\n      color = t1.$index($arguments, 0).assertColor$1(\"color\");\n      t1 = color.get$red();\n      t2 = color.get$green();\n      return K._mixColors0(color.changeRgb$3$blue$green$red(255 - color.get$blue(), 255 - t2, 255 - t1), color, weight);\n    },\n    $signature: 3\n  };\n  K.closure215.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {\n        result = K._functionString0(\"grayscale\", t1.take$1($arguments, 1));\n        N.warn0(string$.Passinng + result.toString$0(0), false);\n        return result;\n      }\n      return t1.$index($arguments, 0).assertColor$1(\"color\").changeHsl$1$saturation(0);\n    },\n    $signature: 3\n  };\n  K.closure216.prototype = {\n    call$1: function($arguments) {\n      return K._hwb0($arguments);\n    },\n    $signature: 3\n  };\n  K.closure217.prototype = {\n    call$1: function($arguments) {\n      var parsed = K._parseChannels0(\"hwb\", H.setRuntimeTypeInfo([\"$hue\", \"$whiteness\", \"$blackness\"], type$.JSArray_legacy_String), J.get$first$ax($arguments));\n      if (parsed instanceof D.SassString0)\n        throw H.wrapException(E.SassScriptException$0('Expected numeric channels, got \"' + parsed.toString$0(0) + '\".'));\n      else\n        return K._hwb0(type$.legacy_List_legacy_Value_2._as(parsed));\n    },\n    $signature: 3\n  };\n  K.closure218.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$whiteness(), \"%\");\n    },\n    $signature: 9\n  };\n  K.closure219.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$blackness(), \"%\");\n    },\n    $signature: 9\n  };\n  K.closure220.prototype = {\n    call$1: function($arguments) {\n      var result,\n        argument = J.$index$asx($arguments, 0);\n      if (argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0())) {\n        result = K._functionString0(\"alpha\", $arguments);\n        N.warn0(string$.Using_ + result.toString$0(0), false);\n        return result;\n      }\n      return T.SassNumber$0(argument.assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 3\n  };\n  K.closure221.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (C.JSArray_methods.every$1(t1.$index($arguments, 0).get$asList(), new K._closure28())) {\n        result = K._functionString0(\"alpha\", $arguments);\n        N.warn0(string$.Using_ + result.toString$0(0), false);\n        return result;\n      }\n      throw H.wrapException(E.SassScriptException$0(\"Only 1 argument allowed, but \" + t1.get$length($arguments) + \" were passed.\"));\n    },\n    $signature: 17\n  };\n  K._closure28.prototype = {\n    call$1: function(argument) {\n      return argument instanceof D.SassString0 && !argument.hasQuotes && J.contains$1$asx(argument.text, $.$get$_microsoftFilterStart0());\n    },\n    $signature: 53\n  };\n  K.closure222.prototype = {\n    call$1: function($arguments) {\n      var result,\n        t1 = J.getInterceptor$asx($arguments);\n      if (t1.$index($arguments, 0) instanceof T.SassNumber0) {\n        result = K._functionString0(\"opacity\", $arguments);\n        N.warn0(string$.Passinno + result.toString$0(0), false);\n        return result;\n      }\n      return T.SassNumber$0(t1.$index($arguments, 0).assertColor$1(\"color\").alpha, null);\n    },\n    $signature: 3\n  };\n  K.closure197.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$red(), null);\n    },\n    $signature: 9\n  };\n  K.closure196.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$green(), null);\n    },\n    $signature: 9\n  };\n  K.closure195.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$blue(), null);\n    },\n    $signature: 9\n  };\n  K.closure194.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return K._mixColors0(t1.$index($arguments, 0).assertColor$1(\"color1\"), t1.$index($arguments, 1).assertColor$1(\"color2\"), t1.$index($arguments, 2).assertNumber$1(\"weight\"));\n    },\n    $signature: 28\n  };\n  K.closure193.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$hue(), \"deg\");\n    },\n    $signature: 9\n  };\n  K.closure192.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$saturation(), \"%\");\n    },\n    $signature: 9\n  };\n  K.closure191.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.get$first$ax($arguments).assertColor$1(\"color\").get$lightness(), \"%\");\n    },\n    $signature: 9\n  };\n  K.closure190.prototype = {\n    call$1: function($arguments) {\n      var color = J.$index$asx($arguments, 0).assertColor$1(\"color\");\n      return color.changeHsl$1$hue(color.get$hue() + 180);\n    },\n    $signature: 28\n  };\n  K.closure188.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents0($arguments, true, false, false);\n    },\n    $signature: 28\n  };\n  K.closure187.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents0($arguments, false, false, true);\n    },\n    $signature: 28\n  };\n  K.closure186.prototype = {\n    call$1: function($arguments) {\n      return K._updateComponents0($arguments, false, true, false);\n    },\n    $signature: 28\n  };\n  K.closure189.prototype = {\n    call$1: function($arguments) {\n      var color = J.$index$asx($arguments, 0).assertColor$1(\"color\"),\n        t1 = new K.closure_hexString0();\n      return new D.SassString0(\"#\" + H.S(t1.call$1(T.fuzzyRound0(color.alpha * 255))) + H.S(t1.call$1(color.get$red())) + H.S(t1.call$1(color.get$green())) + H.S(t1.call$1(color.get$blue())), false);\n    },\n    $signature: 17\n  };\n  K.closure_hexString0.prototype = {\n    call$1: function(component) {\n      return C.JSString_methods.padLeft$2(J.toRadixString$1$n(component, 16), 2, \"0\").toUpperCase();\n    },\n    $signature: 94\n  };\n  K._updateComponents_getParam0.prototype = {\n    call$3$assertPercent: function($name, max, assertPercent) {\n      var t1 = this.keywords.remove$1(0, $name),\n        number = t1 == null ? null : t1.assertNumber$1($name);\n      if (number == null)\n        return null;\n      t1 = this.scale;\n      if (t1 || assertPercent)\n        number.assertUnit$2(\"%\", $name);\n      if (t1)\n        max = 100;\n      return number.valueInRange$3(this.change ? 0 : -max, max, $name);\n    },\n    call$2: function($name, max) {\n      return this.call$3$assertPercent($name, max, false);\n    },\n    $signature: 168\n  };\n  K._updateComponents_closure0.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  K._updateComponents_updateValue0.prototype = {\n    call$3: function(current, param, max) {\n      var t1;\n      if (param == null)\n        return current;\n      if (this.change)\n        return param;\n      if (this.adjust)\n        return C.JSNumber_methods.clamp$2(current + param, 0, max);\n      t1 = param > 0 ? max - current : current;\n      return current + t1 * (param / 100);\n    },\n    $signature: 167\n  };\n  K._updateComponents_updateRgb0.prototype = {\n    call$2: function(current, param) {\n      return T.fuzzyRound0(this.updateValue.call$3(current, param, 255));\n    },\n    $signature: 166\n  };\n  K._functionString_closure0.prototype = {\n    call$1: function(argument) {\n      argument.toString;\n      return N.serializeValue(argument, false, true);\n    },\n    $signature: 477\n  };\n  K._removedColorFunction_closure0.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.name,\n        t2 = J.getInterceptor$asx($arguments),\n        t3 = \"The function \" + t1 + string$.x28__isn + H.S(t2.$index($arguments, 0)) + \", $\" + this.argument + \": \";\n      throw H.wrapException(E.SassScriptException$0(t3 + (this.negative ? \"-\" : \"\") + H.S(t2.$index($arguments, 1)) + string$.x29__Mor + t1));\n    },\n    $signature: 109\n  };\n  K._parseChannels_closure0.prototype = {\n    call$1: function(value) {\n      return value.get$isVar();\n    },\n    $signature: 53\n  };\n  K._NodeSassColor.prototype = {};\n  K.closure253.prototype = {\n    call$6: function(thisArg, redOrArgb, green, blue, alpha, dartValue) {\n      var red, t1, t2, t3, t4;\n      if (dartValue != null) {\n        J.set$dartValue$x(thisArg, dartValue);\n        return;\n      }\n      if (green == null) {\n        H._asIntS(redOrArgb);\n        alpha = C.JSInt_methods._shrOtherPositive$1(redOrArgb, 24) / 255;\n        red = C.JSInt_methods.$mod(C.JSInt_methods._shrOtherPositive$1(redOrArgb, 16), 256);\n        green = C.JSInt_methods.$mod(C.JSInt_methods._shrOtherPositive$1(redOrArgb, 8), 256);\n        blue = C.JSInt_methods.$mod(redOrArgb, 256);\n      } else\n        red = redOrArgb;\n      t1 = C.JSNumber_methods.round$0(J.clamp$2$n(red, 0, 255));\n      t2 = C.JSNumber_methods.round$0(C.JSNumber_methods.clamp$2(green, 0, 255));\n      t3 = C.JSNumber_methods.round$0(J.clamp$2$n(blue, 0, 255));\n      t4 = alpha == null ? null : C.JSNumber_methods.clamp$2(alpha, 0, 1);\n      J.set$dartValue$x(thisArg, K.SassColor$rgb0(t1, t2, t3, t4 == null ? 1 : t4, null));\n    },\n    call$2: function(thisArg, redOrArgb) {\n      return this.call$6(thisArg, redOrArgb, null, null, null, null);\n    },\n    call$3: function(thisArg, redOrArgb, green) {\n      return this.call$6(thisArg, redOrArgb, green, null, null, null);\n    },\n    call$4: function(thisArg, redOrArgb, green, blue) {\n      return this.call$6(thisArg, redOrArgb, green, blue, null, null);\n    },\n    call$5: function(thisArg, redOrArgb, green, blue, alpha) {\n      return this.call$6(thisArg, redOrArgb, green, blue, alpha, null);\n    },\n    \"call*\": \"call$6\",\n    $requiredArgCount: 2,\n    $defaultValues: function() {\n      return [null, null, null, null];\n    },\n    $signature: 318\n  };\n  K.closure254.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).get$red();\n    },\n    $signature: 117\n  };\n  K.closure255.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).get$green();\n    },\n    $signature: 117\n  };\n  K.closure256.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).get$blue();\n    },\n    $signature: 117\n  };\n  K.closure257.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).alpha;\n    },\n    $signature: 320\n  };\n  K.closure258.prototype = {\n    call$2: function(thisArg, value) {\n      var t1 = J.getInterceptor$x(thisArg);\n      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$red(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 65\n  };\n  K.closure259.prototype = {\n    call$2: function(thisArg, value) {\n      var t1 = J.getInterceptor$x(thisArg);\n      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$green(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 65\n  };\n  K.closure260.prototype = {\n    call$2: function(thisArg, value) {\n      var t1 = J.getInterceptor$x(thisArg);\n      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$blue(C.JSNumber_methods.round$0(J.clamp$2$n(value, 0, 255))));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 65\n  };\n  K.closure261.prototype = {\n    call$2: function(thisArg, value) {\n      var t1 = J.getInterceptor$x(thisArg);\n      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeRgb$1$alpha(J.clamp$2$n(value, 0, 1)));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 65\n  };\n  K.closure262.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(J.get$dartValue$x(thisArg));\n    },\n    $signature: 322\n  };\n  K.SassColor0.prototype = {\n    get$red: function() {\n      if (this._color0$_red == null)\n        this._color0$_hslToRgb$0();\n      return this._color0$_red;\n    },\n    get$green: function() {\n      if (this._color0$_green == null)\n        this._color0$_hslToRgb$0();\n      return this._color0$_green;\n    },\n    get$blue: function() {\n      if (this._color0$_blue == null)\n        this._color0$_hslToRgb$0();\n      return this._color0$_blue;\n    },\n    get$hue: function() {\n      if (this._color0$_hue == null)\n        this._color0$_rgbToHsl$0();\n      return this._color0$_hue;\n    },\n    get$saturation: function() {\n      if (this._color0$_saturation == null)\n        this._color0$_rgbToHsl$0();\n      return this._color0$_saturation;\n    },\n    get$lightness: function() {\n      if (this._color0$_lightness == null)\n        this._color0$_rgbToHsl$0();\n      return this._color0$_lightness;\n    },\n    get$whiteness: function() {\n      var t1 = this.get$red(),\n        t2 = this.get$green();\n      return Math.min(Math.min(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;\n    },\n    get$blackness: function() {\n      var t1 = this.get$red(),\n        t2 = this.get$green();\n      return 100 - Math.max(Math.max(H.checkNum(t1), H.checkNum(t2)), H.checkNum(this.get$blue())) / 255 * 100;\n    },\n    get$original: function() {\n      var t1 = this.originalSpan;\n      return t1 == null ? null : P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitColor$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertColor$1: function($name) {\n      return this;\n    },\n    changeRgb$4$alpha$blue$green$red: function(alpha, blue, green, red) {\n      var _this = this,\n        t1 = red == null ? _this.get$red() : red,\n        t2 = green == null ? _this.get$green() : green,\n        t3 = blue == null ? _this.get$blue() : blue;\n      return K.SassColor$rgb0(t1, t2, t3, alpha == null ? _this.alpha : alpha, null);\n    },\n    changeRgb$3$blue$green$red: function(blue, green, red) {\n      return this.changeRgb$4$alpha$blue$green$red(null, blue, green, red);\n    },\n    changeRgb$1$alpha: function(alpha) {\n      return this.changeRgb$4$alpha$blue$green$red(alpha, null, null, null);\n    },\n    changeRgb$1$blue: function(blue) {\n      return this.changeRgb$4$alpha$blue$green$red(null, blue, null, null);\n    },\n    changeRgb$1$green: function(green) {\n      return this.changeRgb$4$alpha$blue$green$red(null, null, green, null);\n    },\n    changeRgb$1$red: function(red) {\n      return this.changeRgb$4$alpha$blue$green$red(null, null, null, red);\n    },\n    changeHsl$4$alpha$hue$lightness$saturation: function(alpha, hue, lightness, saturation) {\n      var _this = this,\n        t1 = hue == null ? _this.get$hue() : hue,\n        t2 = saturation == null ? _this.get$saturation() : saturation,\n        t3 = lightness == null ? _this.get$lightness() : lightness;\n      return K.SassColor$hsl0(t1, t2, t3, alpha == null ? _this.alpha : alpha);\n    },\n    changeHsl$1$saturation: function(saturation) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, null, saturation);\n    },\n    changeHsl$1$lightness: function(lightness) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, lightness, null);\n    },\n    changeHsl$1$hue: function(hue) {\n      return this.changeHsl$4$alpha$hue$lightness$saturation(null, hue, null, null);\n    },\n    changeAlpha$1: function(alpha) {\n      var _this = this;\n      return new K.SassColor0(_this._color0$_red, _this._color0$_green, _this._color0$_blue, _this._color0$_hue, _this._color0$_saturation, _this._color0$_lightness, T.fuzzyAssertRange0(alpha, 0, 1, \"alpha\"), null);\n    },\n    plus$1: function(other) {\n      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))\n        return this.super$Value$plus0(other);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" + \" + H.S(other) + '\".'));\n    },\n    minus$1: function(other) {\n      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))\n        return this.super$Value$minus0(other);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" - \" + H.S(other) + '\".'));\n    },\n    dividedBy$1: function(other) {\n      if (!(other instanceof T.SassNumber0) && !(other instanceof K.SassColor0))\n        return this.super$Value$dividedBy0(other);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" / \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof K.SassColor0 && other.get$red() == _this.get$red() && other.get$green() == _this.get$green() && other.get$blue() == _this.get$blue() && other.alpha === _this.alpha;\n    },\n    get$hashCode: function(_) {\n      var _this = this;\n      return J.get$hashCode$(_this.get$red()) ^ J.get$hashCode$(_this.get$green()) ^ J.get$hashCode$(_this.get$blue()) ^ C.JSNumber_methods.get$hashCode(_this.alpha);\n    },\n    _color0$_rgbToHsl$0: function() {\n      var t2, t3, _this = this,\n        scaledRed = _this.get$red() / 255,\n        scaledGreen = _this.get$green() / 255,\n        scaledBlue = _this.get$blue() / 255,\n        max = Math.max(Math.max(scaledRed, scaledGreen), scaledBlue),\n        min = Math.min(Math.min(scaledRed, scaledGreen), scaledBlue),\n        delta = max - min,\n        t1 = max === min;\n      if (t1)\n        _this._color0$_hue = 0;\n      else if (max === scaledRed)\n        _this._color0$_hue = C.JSDouble_methods.$mod(60 * (scaledGreen - scaledBlue) / delta, 360);\n      else if (max === scaledGreen)\n        _this._color0$_hue = C.JSNumber_methods.$mod(120 + 60 * (scaledBlue - scaledRed) / delta, 360);\n      else if (max === scaledBlue)\n        _this._color0$_hue = C.JSNumber_methods.$mod(240 + 60 * (scaledRed - scaledGreen) / delta, 360);\n      t2 = max + min;\n      t3 = 50 * t2;\n      _this._color0$_lightness = t3;\n      if (t1)\n        _this._color0$_saturation = 0;\n      else {\n        t1 = 100 * delta;\n        if (t3 < 50)\n          _this._color0$_saturation = t1 / t2;\n        else\n          _this._color0$_saturation = t1 / (2 - max - min);\n      }\n    },\n    _color0$_hslToRgb$0: function() {\n      var _this = this,\n        scaledHue = _this.get$hue() / 360,\n        scaledSaturation = _this.get$saturation() / 100,\n        scaledLightness = _this.get$lightness() / 100,\n        m2 = scaledLightness <= 0.5 ? scaledLightness * (scaledSaturation + 1) : scaledLightness + scaledSaturation - scaledLightness * scaledSaturation,\n        m1 = scaledLightness * 2 - m2;\n      _this._color0$_red = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue + 0.3333333333333333) * 255);\n      _this._color0$_green = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue) * 255);\n      _this._color0$_blue = T.fuzzyRound0(K.SassColor__hueToRgb0(m1, m2, scaledHue - 0.3333333333333333) * 255);\n    }\n  };\n  K.SassColor_SassColor$hwb_toRgb0.prototype = {\n    call$1: function(hue) {\n      return T.fuzzyRound0((K.SassColor__hueToRgb0(0, 1, hue) * this.factor + this._box_0.scaledWhiteness) * 255);\n    },\n    $signature: 39\n  };\n  R.ModifiableCssComment0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $isCssComment0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U._compileStylesheet_closure1.prototype = {\n    call$1: function(url) {\n      var t1, t2, _null = null;\n      if (url === \"\")\n        t1 = P.Uri_Uri$dataFromString(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, _null), 0, _null), C.C_Utf8Codec, _null).get$_text();\n      else {\n        t1 = P.Uri_parse(url);\n        t2 = this.importCache._import_cache$_resultsCache.$index(0, t1);\n        t2 = t2 == null ? _null : t2.get$sourceMapUrl();\n        t1 = (t2 == null ? t1 : t2).toString$0(0);\n      }\n      return t1;\n    },\n    $signature: 8\n  };\n  S.ComplexSelector0.prototype = {\n    get$minSpecificity: function() {\n      if (this._complex0$_minSpecificity == null)\n        this._complex0$_computeSpecificity$0();\n      return this._complex0$_minSpecificity;\n    },\n    get$maxSpecificity: function() {\n      if (this._complex0$_maxSpecificity == null)\n        this._complex0$_computeSpecificity$0();\n      return this._complex0$_maxSpecificity;\n    },\n    get$isInvisible: function() {\n      var t1 = this._complex0$_isInvisible;\n      if (t1 != null)\n        return t1;\n      return this._complex0$_isInvisible = C.JSArray_methods.any$1(this.components, new S.ComplexSelector_isInvisible_closure0());\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitComplexSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    _complex0$_computeSpecificity$0: function() {\n      var t1, t2, component, t3, _this = this,\n        _i = _this._complex0$_maxSpecificity = _this._complex0$_minSpecificity = 0;\n      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {\n        component = t1[_i];\n        if (component instanceof X.CompoundSelector0) {\n          t3 = _this._complex0$_minSpecificity;\n          if (component._compound0$_minSpecificity == null)\n            component._compound0$_computeSpecificity$0();\n          _this._complex0$_minSpecificity = t3 + component._compound0$_minSpecificity;\n          t3 = _this._complex0$_maxSpecificity;\n          if (component._compound0$_maxSpecificity == null)\n            component._compound0$_computeSpecificity$0();\n          _this._complex0$_maxSpecificity = t3 + component._compound0$_maxSpecificity;\n        }\n      }\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof S.ComplexSelector0 && C.C_ListEquality.equals$2(0, this.components, other.components);\n    }\n  };\n  S.ComplexSelector_isInvisible_closure0.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector0 && component.get$isInvisible();\n    },\n    $signature: 111\n  };\n  S.Combinator0.prototype = {\n    toString$0: function(_) {\n      return this._complex0$_text;\n    },\n    $isComplexSelectorComponent0: 1\n  };\n  X.CompoundSelector0.prototype = {\n    get$isInvisible: function() {\n      return C.JSArray_methods.any$1(this.components, new X.CompoundSelector_isInvisible_closure0());\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitCompoundSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    _compound0$_computeSpecificity$0: function() {\n      var t1, t2, simple, _this = this,\n        _i = _this._compound0$_maxSpecificity = _this._compound0$_minSpecificity = 0;\n      for (t1 = _this.components, t2 = t1.length; _i < t2; ++_i) {\n        simple = t1[_i];\n        _this._compound0$_minSpecificity = _this._compound0$_minSpecificity + simple.get$minSpecificity();\n        _this._compound0$_maxSpecificity = _this._compound0$_maxSpecificity + simple.get$maxSpecificity();\n      }\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof X.CompoundSelector0 && C.C_ListEquality.equals$2(0, this.components, other.components);\n    },\n    $isComplexSelectorComponent0: 1\n  };\n  X.CompoundSelector_isInvisible_closure0.prototype = {\n    call$1: function(component) {\n      return component.get$isInvisible();\n    },\n    $signature: 20\n  };\n  A.Configuration0.prototype = {\n    throughForward$1: function($forward) {\n      var t1, t2,\n        newValues = this._configuration$_values;\n      if (newValues.get$isEmpty(newValues))\n        return C.Configuration_Map_empty_null_true0;\n      t1 = $forward.prefix;\n      if (t1 != null)\n        newValues = new R.UnprefixedMapView0(newValues, t1, type$.UnprefixedMapView_legacy_ConfiguredValue_2);\n      t1 = $forward.shownVariables;\n      if (t1 != null)\n        newValues = new K.LimitedMapView0(newValues, t1._base.intersection$1(new M.MapKeySet(newValues, type$.MapKeySet_legacy_Object)), type$.LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue_2);\n      else {\n        t1 = $forward.hiddenVariables;\n        if (t1 == null)\n          t2 = null;\n        else {\n          t2 = t1._base;\n          t2 = t2.get$isNotEmpty(t2);\n        }\n        if (t2 === true)\n          newValues = K.LimitedMapView$blocklist0(newValues, t1, type$.legacy_String, type$.legacy_ConfiguredValue_2);\n      }\n      return this.isImplicit ? new A.Configuration0(newValues, null, true) : new A.Configuration0(newValues, this.nodeWithSpan, false);\n    }\n  };\n  Z.ConfiguredValue0.prototype = {};\n  Z.ConfiguredVariable0.prototype = {\n    toString$0: function(_) {\n      var t1 = \"$\" + this.name + \": \" + H.S(this.expression);\n      return t1 + (this.isGuarded ? \" !default\" : \"\");\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Y.ContentBlock0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitContentBlock$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2,\n        t1 = this.$arguments;\n      t1 = t1.$arguments.length === 0 && t1.restArgument == null ? \"\" : \" using (\" + t1.toString$0(0) + \")\";\n      t2 = this.children;\n      return t1 + (\" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\");\n    }\n  };\n  Q.ContentRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitContentRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.$arguments;\n      return t1.get$isEmpty(t1) ? \"@content;\" : \"@content(\" + t1.toString$0(0) + \");\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Q.closure227.prototype = {\n    call$1: function($function) {\n      return $function.name;\n    },\n    $signature: 324\n  };\n  Q.CssParser0.prototype = {\n    get$plainCss: function() {\n      return true;\n    },\n    silentComment$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      this.super$Parser$silentComment0();\n      this.error$2(0, string$.Silent, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    atRule$2$root: function(child, root) {\n      var $name, urlStart, next, url, urlSpan, queries, t2, t3, t4, t5, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(64);\n      $name = _this.interpolatedIdentifier$0();\n      _this.whitespace$0();\n      switch ($name.get$asPlain()) {\n        case \"at-root\":\n        case \"content\":\n        case \"debug\":\n        case \"each\":\n        case \"error\":\n        case \"extend\":\n        case \"for\":\n        case \"function\":\n        case \"if\":\n        case \"include\":\n        case \"mixin\":\n        case \"return\":\n        case \"warn\":\n        case \"while\":\n          _this.almostAnyValue$0();\n          _this.error$2(0, \"This at-rule isn't allowed in plain CSS.\", t1.spanFrom$1(start));\n          break;\n        case \"charset\":\n          _this.string$0();\n          if (!root)\n            _this.error$2(0, \"This at-rule is not allowed here.\", t1.spanFrom$1(start));\n          return null;\n        case \"import\":\n          urlStart = new S._SpanScannerState(t1, t1._string_scanner$_position);\n          next = t1.peekChar$0();\n          url = next === 117 || next === 85 ? _this.dynamicUrl$0() : new D.StringExpression0(_this.interpolatedString$0().asInterpolation$1$static(true), false);\n          urlSpan = t1.spanFrom$1(urlStart);\n          _this.whitespace$0();\n          queries = _this.tryImportQueries$0();\n          _this.expectStatementSeparator$1(\"@import rule\");\n          t2 = X.Interpolation$0(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), urlSpan);\n          t3 = t1.spanFrom$1(urlStart);\n          t4 = queries == null;\n          t5 = t4 ? null : queries.item1;\n          t2 = H.setRuntimeTypeInfo([new Q.StaticImport0(t2, t5, t4 ? null : queries.item2, t3)], type$.JSArray_legacy_Import_2);\n          t1 = t1.spanFrom$1(start);\n          return new B.ImportRule0(P.List_List$unmodifiable(t2, type$.legacy_Import_2), t1);\n        case \"media\":\n          return _this.mediaRule$1(start);\n        case \"-moz-document\":\n          return _this.mozDocumentRule$2(start, $name);\n        case \"supports\":\n          return _this.supportsRule$1(start);\n        default:\n          return _this.unknownAtRule$2(start, $name);\n      }\n    },\n    identifierLike$0: function() {\n      var t2, $arguments, t3, t4, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        identifier = _this.interpolatedIdentifier$0(),\n        plain = identifier.get$asPlain(),\n        specialFunction = _this.trySpecialFunction$2(plain.toLowerCase(), start);\n      if (specialFunction != null)\n        return specialFunction;\n      t2 = t1._string_scanner$_position;\n      if (!t1.scanChar$1(40))\n        return new D.StringExpression0(identifier, false);\n      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n      if (!t1.scanChar$1(41)) {\n        do {\n          _this.whitespace$0();\n          $arguments.push(_this.expression$1$singleEquals(true));\n          _this.whitespace$0();\n        } while (t1.scanChar$1(44));\n        t1.expectChar$1(41);\n      }\n      if ($.$get$_disallowedFunctionNames0().contains$1(0, plain))\n        _this.error$2(0, string$.This_f, t1.spanFrom$1(start));\n      t3 = X.Interpolation$0(H.setRuntimeTypeInfo([new D.StringExpression0(identifier, false)], type$.JSArray_legacy_Object), identifier.span);\n      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      t4 = type$.legacy_Expression_2;\n      return new F.FunctionExpression0(null, t3, new X.ArgumentInvocation0(P.List_List$unmodifiable($arguments, t4), H.ConstantMap_ConstantMap$from(C.Map_empty9, type$.legacy_String, t4), null, null, t2), t1.spanFrom$1(start));\n    }\n  };\n  Q.DebugRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitDebugRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@debug \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.ModifiableCssDeclaration0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return H.S(this.name) + \": \" + this.value.toString$0(0) + \";\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.Declaration0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.SupportsDeclaration0.prototype = {\n    toString$0: function(_) {\n      return \"(\" + H.S(this.name) + \": \" + H.S(this.value) + \")\";\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.DynamicImport0.prototype = {\n    toString$0: function(_) {\n      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([this.url], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain();\n    },\n    $isImport0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.EachRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitEachRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.variables,\n        t2 = this.children;\n      return \"@each \" + new H.MappedListIterable(t1, new V.EachRule_toString_closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \", \") + \" in \" + H.S(this.list) + \" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.EachRule_toString_closure0.prototype = {\n    call$1: function(variable) {\n      return C.JSString_methods.$add(\"$\", variable);\n    },\n    $signature: 8\n  };\n  T.EmptyExtender0.prototype = {\n    get$isEmpty: function(_) {\n      return true;\n    },\n    get$simpleSelectors: function() {\n      return C.C_EmptyUnmodifiableSet0;\n    },\n    extensionsWhereTarget$1: function(callback) {\n      return C.List_empty13;\n    },\n    addExtensions$1: function(extenders) {\n      throw H.wrapException(P.UnsupportedError$(string$.addExt));\n    },\n    clone$0: function() {\n      return C.Tuple2_EmptyExtender_Map_empty0;\n    },\n    $isExtender0: 1\n  };\n  O.Environment0.prototype = {\n    closure$0: function() {\n      var t5, t6, t7, _this = this,\n        t1 = _this._environment0$_forwardedModules,\n        t2 = _this._environment0$_forwardedModuleNodes,\n        t3 = _this._environment0$_nestedForwardedModules,\n        t4 = _this._environment0$_variables;\n      t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));\n      t5 = _this._environment0$_variableNodes;\n      if (t5 == null)\n        t5 = null;\n      else\n        t5 = H.setRuntimeTypeInfo(t5.slice(0), H._arrayInstanceType(t5));\n      t6 = _this._environment0$_functions;\n      t6 = H.setRuntimeTypeInfo(t6.slice(0), H._arrayInstanceType(t6));\n      t7 = _this._environment0$_mixins;\n      t7 = H.setRuntimeTypeInfo(t7.slice(0), H._arrayInstanceType(t7));\n      return O.Environment$_0(_this._environment0$_modules, _this._environment0$_namespaceNodes, _this._environment0$_globalModules, _this._environment0$_globalModuleNodes, t1, t2, t3, _this._environment0$_allModules, t4, t5, t6, t7, _this._environment0$_content);\n    },\n    addModule$3$namespace: function(module, nodeWithSpan, namespace) {\n      var t1, t2, _this = this;\n      if (namespace == null) {\n        _this._environment0$_globalModules.add$1(0, module);\n        _this._environment0$_globalModuleNodes.$indexSet(0, module, nodeWithSpan);\n        _this._environment0$_allModules.push(module);\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.get$first(_this._environment0$_variables))); t1.moveNext$0();) {\n          t2 = t1.get$current(t1);\n          if (module.get$variables().containsKey$1(t2))\n            throw H.wrapException(E.SassScriptException$0(string$.This_ma + H.S(t2) + '\".'));\n        }\n      } else {\n        t1 = _this._environment0$_modules;\n        if (t1.containsKey$1(namespace))\n          throw H.wrapException(E.MultiSpanSassScriptException$0(string$.There_ + namespace + '\".', \"new @use\", P.LinkedHashMap_LinkedHashMap$_literal([_this._environment0$_namespaceNodes.$index(0, namespace).get$span(), \"original @use\"], type$.legacy_FileSpan, type$.legacy_String)));\n        t1.$indexSet(0, namespace, module);\n        _this._environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);\n        _this._environment0$_allModules.push(module);\n      }\n    },\n    forwardModule$2: function(module, rule) {\n      var view, t1, t2, _this = this;\n      if (_this._environment0$_forwardedModules == null)\n        _this._environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable_2);\n      if (_this._environment0$_forwardedModuleNodes == null)\n        _this._environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable_2, type$.legacy_AstNode_2);\n      view = R.ForwardedModuleView_ifNecessary0(module, rule, type$.legacy_Callable_2);\n      for (t1 = _this._environment0$_forwardedModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        t2 = t1._collection$_current;\n        _this._environment0$_assertNoConflicts$6(view.get$variables(), t2.get$variables(), view, t2, \"variable\", rule);\n        _this._environment0$_assertNoConflicts$6(view.get$functions(view), t2.get$functions(t2), view, t2, \"function\", rule);\n        _this._environment0$_assertNoConflicts$6(view.get$mixins(), t2.get$mixins(), view, t2, \"mixin\", rule);\n      }\n      _this._environment0$_allModules.push(module);\n      _this._environment0$_forwardedModules.add$1(0, view);\n      _this._environment0$_forwardedModuleNodes.$indexSet(0, view, rule);\n    },\n    _environment0$_assertNoConflicts$6: function(newMembers, oldMembers, newModule, oldModule, type, newModuleNodeWithSpan) {\n      var larger, smaller, t1, t2, $name;\n      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {\n        larger = oldMembers;\n        smaller = newMembers;\n      } else {\n        larger = newMembers;\n        smaller = oldMembers;\n      }\n      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === \"variable\"; t1.moveNext$0();) {\n        $name = t1.get$current(t1);\n        if (!larger.containsKey$1($name))\n          continue;\n        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))\n          continue;\n        if (t2)\n          $name = \"$\" + H.S($name);\n        throw H.wrapException(E.MultiSpanSassScriptException$0(\"Two forwarded modules both define a \" + type + \" named \" + H.S($name) + \".\", \"new @forward\", P.LinkedHashMap_LinkedHashMap$_literal([this._environment0$_forwardedModuleNodes.$index(0, oldModule).get$span(), \"original @forward\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n    },\n    importForwards$1: function(module) {\n      var t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, t6, t7, _i, shadowed, t8, _this = this,\n        t1 = module._environment0$_environment,\n        forwarded = t1._environment0$_forwardedModules;\n      if (forwarded == null)\n        return;\n      if (_this._environment0$_forwardedModules != null) {\n        t2 = P.LinkedHashSet_LinkedHashSet(type$.legacy_Module_legacy_Callable_2);\n        for (t3 = P._LinkedHashSetIterator$(forwarded, forwarded._collection$_modifications), t4 = _this._environment0$_globalModules; t3.moveNext$0();) {\n          t5 = t3._collection$_current;\n          if (!_this._environment0$_forwardedModules.contains$1(0, t5) || !t4.contains$1(0, t5))\n            t2.add$1(0, t5);\n        }\n        forwarded = t2;\n      }\n      if (_this._environment0$_forwardedModules == null)\n        _this._environment0$_forwardedModules = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_Module_legacy_Callable_2);\n      if (_this._environment0$_forwardedModuleNodes == null)\n        _this._environment0$_forwardedModuleNodes = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Module_legacy_Callable_2, type$.legacy_AstNode_2);\n      t2 = H._instanceType(forwarded)._eval$1(\"ExpandIterable<1,String*>\");\n      t3 = t2._eval$1(\"Iterable.E\");\n      forwardedVariableNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure3(), t2), t3);\n      forwardedFunctionNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure4(), t2), t3);\n      forwardedMixinNames = P.LinkedHashSet_LinkedHashSet$of(new H.ExpandIterable(forwarded, new O.Environment_importForwards_closure5(), t2), t3);\n      t2 = _this._environment0$_variables;\n      t3 = t2.length;\n      if (t3 === 1) {\n        for (t3 = _this._environment0$_globalModules, t4 = P.List_List$from(t3, true, H._instanceType(t3)._precomputed1), t5 = t4.length, t6 = type$.legacy_Callable_2, t7 = _this._environment0$_globalModuleNodes, _i = 0; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            t3.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view0$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              t3.add$1(0, shadowed);\n              t7.$indexSet(0, shadowed, t7.remove$1(0, module));\n            }\n          }\n        }\n        t4 = _this._environment0$_forwardedModules;\n        t4.toString;\n        t4 = P.List_List$from(t4, true, H._instanceType(t4)._precomputed1);\n        t5 = t4.length;\n        _i = 0;\n        for (; _i < t4.length; t4.length === t5 || (0, H.throwConcurrentModificationError)(t4), ++_i) {\n          module = t4[_i];\n          shadowed = B.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t6);\n          if (shadowed != null) {\n            _this._environment0$_forwardedModules.remove$1(0, module);\n            t8 = shadowed.variables;\n            if (t8.get$isEmpty(t8)) {\n              t8 = shadowed.functions;\n              if (t8.get$isEmpty(t8)) {\n                t8 = shadowed.mixins;\n                if (t8.get$isEmpty(t8)) {\n                  t8 = shadowed._shadowed_view0$_inner;\n                  t8 = t8.get$css(t8);\n                  t8 = J.get$isEmpty$asx(t8.get$children(t8));\n                } else\n                  t8 = false;\n              } else\n                t8 = false;\n            } else\n              t8 = false;\n            if (!t8) {\n              _this._environment0$_forwardedModules.add$1(0, shadowed);\n              t8 = _this._environment0$_forwardedModuleNodes;\n              t8.$indexSet(0, shadowed, t8.remove$1(0, module));\n            }\n          }\n        }\n        t3.addAll$1(0, forwarded);\n        t7.addAll$1(0, t1._environment0$_forwardedModuleNodes);\n        _this._environment0$_forwardedModules.addAll$1(0, forwarded);\n        _this._environment0$_forwardedModuleNodes.addAll$1(0, t1._environment0$_forwardedModuleNodes);\n      } else {\n        t1 = _this._environment0$_nestedForwardedModules;\n        J.addAll$1$ax(C.JSArray_methods.get$last(t1 == null ? _this._environment0$_nestedForwardedModules = P.List_List$generate(t3 - 1, new O.Environment_importForwards_closure6(), true, type$.legacy_List_legacy_Module_legacy_Callable_2) : t1), forwarded);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._environment0$_variableNodes, t4 = t3 != null, t5 = _this._environment0$_variableIndices; t1.moveNext$0();) {\n        t6 = t1._collection$_current;\n        t5.remove$1(0, t6);\n        J.remove$1$ax(C.JSArray_methods.get$last(t2), t6);\n        if (t4)\n          J.remove$1$ax(C.JSArray_methods.get$last(t3), t6);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._environment0$_functionIndices, t3 = _this._environment0$_functions; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n      for (t1 = P._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._environment0$_mixinIndices, t3 = _this._environment0$_mixins; t1.moveNext$0();) {\n        t4 = t1._collection$_current;\n        t2.remove$1(0, t4);\n        J.remove$1$ax(C.JSArray_methods.get$last(t3), t4);\n      }\n    },\n    getVariable$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._environment0$_getModule$1(namespace).get$variables().$index(0, $name);\n      if (_this._environment0$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._environment0$_variables[_this._environment0$_lastVariableIndex], $name);\n        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._environment0$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._environment0$_lastVariableName = $name;\n        _this._environment0$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._environment0$_variables[index], $name);\n        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;\n      }\n      index = _this._environment0$_variableIndex$1($name);\n      if (index == null)\n        return _this._environment0$_getVariableFromGlobalModule$1($name);\n      _this._environment0$_lastVariableName = $name;\n      _this._environment0$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._environment0$_variables[index], $name);\n      return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;\n    },\n    getVariable$1: function($name) {\n      return this.getVariable$2$namespace($name, null);\n    },\n    _environment0$_getVariableFromGlobalModule$1: function($name) {\n      return this._environment0$_fromOneModule$3($name, \"variable\", new O.Environment__getVariableFromGlobalModule_closure0($name));\n    },\n    getVariableNode$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);\n      if (_this._environment0$_lastVariableName === $name) {\n        t1 = J.$index$asx(_this._environment0$_variableNodes[_this._environment0$_lastVariableIndex], $name);\n        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      t1 = _this._environment0$_variableIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        _this._environment0$_lastVariableName = $name;\n        _this._environment0$_lastVariableIndex = index;\n        t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);\n        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n      }\n      index = _this._environment0$_variableIndex$1($name);\n      if (index == null)\n        return _this._environment0$_getVariableNodeFromGlobalModule$1($name);\n      _this._environment0$_lastVariableName = $name;\n      _this._environment0$_lastVariableIndex = index;\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);\n      return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;\n    },\n    _environment0$_getVariableNodeFromGlobalModule$1: function($name) {\n      var t1, value;\n      for (t1 = this._environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications); t1.moveNext$0();) {\n        value = t1._collection$_current.get$variableNodes().$index(0, $name);\n        if (value != null)\n          return value;\n      }\n      return null;\n    },\n    globalVariableExists$2$namespace: function($name, namespace) {\n      if (namespace != null)\n        return this._environment0$_getModule$1(namespace).get$variables().containsKey$1($name);\n      if (C.JSArray_methods.get$first(this._environment0$_variables).containsKey$1($name))\n        return true;\n      return this._environment0$_getVariableFromGlobalModule$1($name) != null;\n    },\n    globalVariableExists$1: function($name) {\n      return this.globalVariableExists$2$namespace($name, null);\n    },\n    _environment0$_variableIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._environment0$_variables, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    setVariable$5$global$namespace: function($name, value, nodeWithSpan, global, namespace) {\n      var t1, moduleWithName, cur, t2, index, _this = this;\n      if (namespace != null) {\n        _this._environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      if (global || _this._environment0$_variables.length === 1) {\n        _this._environment0$_variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure2(_this, $name));\n        t1 = _this._environment0$_variables;\n        if (!C.JSArray_methods.get$first(t1).containsKey$1($name)) {\n          moduleWithName = _this._environment0$_fromOneModule$3($name, \"variable\", new O.Environment_setVariable_closure3($name));\n          if (moduleWithName != null) {\n            moduleWithName.setVariable$3($name, value, nodeWithSpan);\n            return;\n          }\n        }\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, value);\n        t1 = _this._environment0$_variableNodes;\n        if (t1 != null)\n          J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n        return;\n      }\n      if (_this._environment0$_nestedForwardedModules != null && !_this._environment0$_variableIndices.containsKey$1($name) && _this._environment0$_variableIndex$1($name) == null) {\n        t1 = _this._environment0$_nestedForwardedModules;\n        t1.toString;\n        t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\"));\n        t1 = new H.ListIterator(t1, t1.get$length(t1));\n        for (; t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            if (cur.get$variables().containsKey$1($name)) {\n              cur.setVariable$3($name, value, nodeWithSpan);\n              return;\n            }\n          }\n        }\n      }\n      index = _this._environment0$_lastVariableName === $name ? _this._environment0$_lastVariableIndex : _this._environment0$_variableIndices.putIfAbsent$2($name, new O.Environment_setVariable_closure4(_this, $name));\n      if (!_this._environment0$_inSemiGlobalScope && index === 0) {\n        index = _this._environment0$_variables.length - 1;\n        _this._environment0$_variableIndices.$indexSet(0, $name, index);\n      }\n      _this._environment0$_lastVariableName = $name;\n      _this._environment0$_lastVariableIndex = index;\n      J.$indexSet$ax(_this._environment0$_variables[index], $name, value);\n      t1 = _this._environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    setVariable$4$global: function($name, value, nodeWithSpan, global) {\n      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);\n    },\n    setLocalVariable$3: function($name, value, nodeWithSpan) {\n      var index, _this = this,\n        t1 = _this._environment0$_variables,\n        t2 = t1.length;\n      _this._environment0$_lastVariableName = $name;\n      index = _this._environment0$_lastVariableIndex = t2 - 1;\n      _this._environment0$_variableIndices.$indexSet(0, $name, index);\n      J.$indexSet$ax(t1[index], $name, value);\n      t1 = _this._environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(t1[index], $name, nodeWithSpan);\n    },\n    getFunction$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null) {\n        t1 = _this._environment0$_getModule$1(namespace);\n        return t1.get$functions(t1).$index(0, $name);\n      }\n      t1 = _this._environment0$_functionIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._environment0$_functions[index], $name);\n        return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;\n      }\n      index = _this._environment0$_functionIndex$1($name);\n      if (index == null)\n        return _this._environment0$_getFunctionFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._environment0$_functions[index], $name);\n      return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;\n    },\n    _environment0$_getFunctionFromGlobalModule$1: function($name) {\n      return this._environment0$_fromOneModule$3($name, \"function\", new O.Environment__getFunctionFromGlobalModule_closure0($name));\n    },\n    _environment0$_functionIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._environment0$_functions, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    getMixin$2$namespace: function($name, namespace) {\n      var t1, index, _this = this;\n      if (namespace != null)\n        return _this._environment0$_getModule$1(namespace).get$mixins().$index(0, $name);\n      t1 = _this._environment0$_mixinIndices;\n      index = t1.$index(0, $name);\n      if (index != null) {\n        t1 = J.$index$asx(_this._environment0$_mixins[index], $name);\n        return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;\n      }\n      index = _this._environment0$_mixinIndex$1($name);\n      if (index == null)\n        return _this._environment0$_getMixinFromGlobalModule$1($name);\n      t1.$indexSet(0, $name, index);\n      t1 = J.$index$asx(_this._environment0$_mixins[index], $name);\n      return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;\n    },\n    _environment0$_getMixinFromGlobalModule$1: function($name) {\n      return this._environment0$_fromOneModule$3($name, \"mixin\", new O.Environment__getMixinFromGlobalModule_closure0($name));\n    },\n    _environment0$_mixinIndex$1: function($name) {\n      var t1, i;\n      for (t1 = this._environment0$_mixins, i = t1.length - 1; i >= 0; --i)\n        if (t1[i].containsKey$1($name))\n          return i;\n      return null;\n    },\n    scope$1$3$semiGlobal$when: function(callback, semiGlobal, when) {\n      var wasInSemiGlobalScope, wasInSemiGlobalScope0, $name, name0, name1, t1, t2, t3, t4, t5, _this = this;\n      if (!when) {\n        wasInSemiGlobalScope = _this._environment0$_inSemiGlobalScope;\n        _this._environment0$_inSemiGlobalScope = semiGlobal;\n        try {\n          t1 = callback.call$0();\n          return t1;\n        } finally {\n          _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope;\n        }\n      }\n      semiGlobal = semiGlobal && _this._environment0$_inSemiGlobalScope;\n      wasInSemiGlobalScope0 = _this._environment0$_inSemiGlobalScope;\n      _this._environment0$_inSemiGlobalScope = semiGlobal;\n      t1 = _this._environment0$_variables;\n      t2 = type$.legacy_String;\n      C.JSArray_methods.add$1(t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_Value_2));\n      t3 = _this._environment0$_variableNodes;\n      if (t3 != null)\n        C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_AstNode_2));\n      t3 = _this._environment0$_functions;\n      t4 = type$.legacy_Callable_2;\n      C.JSArray_methods.add$1(t3, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n      t5 = _this._environment0$_mixins;\n      C.JSArray_methods.add$1(t5, P.LinkedHashMap_LinkedHashMap$_empty(t2, t4));\n      t4 = _this._environment0$_nestedForwardedModules;\n      if (t4 != null)\n        C.JSArray_methods.add$1(t4, H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2));\n      try {\n        t2 = callback.call$0();\n        return t2;\n      } finally {\n        _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope0;\n        _this._environment0$_lastVariableIndex = _this._environment0$_lastVariableName = null;\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t1))), t2 = _this._environment0$_variableIndices; t1.moveNext$0();) {\n          $name = t1.get$current(t1);\n          t2.remove$1(0, $name);\n        }\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t3))), t2 = _this._environment0$_functionIndices; t1.moveNext$0();) {\n          name0 = t1.get$current(t1);\n          t2.remove$1(0, name0);\n        }\n        for (t1 = J.get$iterator$ax(J.get$keys$z(C.JSArray_methods.removeLast$0(t5))), t2 = _this._environment0$_mixinIndices; t1.moveNext$0();) {\n          name1 = t1.get$current(t1);\n          t2.remove$1(0, name1);\n        }\n        t1 = _this._environment0$_nestedForwardedModules;\n        if (t1 != null)\n          C.JSArray_methods.removeLast$0(t1);\n      }\n    },\n    scope$1$1: function(callback, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);\n    },\n    scope$1$2$when: function(callback, when, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);\n    },\n    scope$1$2$semiGlobal: function(callback, semiGlobal, $T) {\n      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);\n    },\n    toImplicitConfiguration$0: function() {\n      var t2, t3, t4, t5, i, values, nodes, t6, t7,\n        t1 = type$.legacy_String,\n        configuration = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_ConfiguredValue_2);\n      for (t2 = this._environment0$_variables, t3 = this._environment0$_variableNodes, t4 = t3 == null, t5 = type$.legacy_AstNode_2, i = 0; i < t2.length; ++i) {\n        values = t2[i];\n        nodes = t4 ? P.LinkedHashMap_LinkedHashMap$_empty(t1, t5) : t3[i];\n        for (t6 = J.get$iterator$ax(values.get$keys(values)); t6.moveNext$0();) {\n          t7 = t6.get$current(t6);\n          configuration.$indexSet(0, t7, new Z.ConfiguredValue0(values.$index(0, t7), null, nodes.$index(0, t7)));\n        }\n      }\n      return new A.Configuration0(configuration, null, true);\n    },\n    _environment0$_getModule$1: function(namespace) {\n      var module = this._environment0$_modules.$index(0, namespace);\n      if (module != null)\n        return module;\n      throw H.wrapException(E.SassScriptException$0('There is no module with the namespace \"' + namespace + '\".'));\n    },\n    _environment0$_fromOneModule$1$3: function($name, type, callback) {\n      var cur, t2, value, identity, t3, valueInModule, identityFromModule, t4, t5,\n        t1 = this._environment0$_nestedForwardedModules;\n      if (t1 != null)\n        for (t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1(\"ReversedListIterable<1>\")), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          for (t2 = J.get$reversed$ax(cur), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n            cur = t2.__internal$_current;\n            value = callback.call$1(cur);\n            if (value != null)\n              return value;\n          }\n        }\n      for (t1 = this._environment0$_globalModules, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = type$.legacy_Callable_2, value = null, identity = null; t1.moveNext$0();) {\n        t3 = t1._collection$_current;\n        valueInModule = callback.call$1(t3);\n        if (valueInModule == null)\n          continue;\n        identityFromModule = t2._is(valueInModule) ? valueInModule : t3.variableIdentity$1($name);\n        if (identityFromModule.$eq(0, identity))\n          continue;\n        if (value != null) {\n          t1 = \"This \" + type + string$.x20is_av;\n          t2 = type + \" use\";\n          t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          for (t4 = this._environment0$_globalModuleNodes, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            if (callback.call$1(t5.key) != null)\n              t3.$indexSet(0, t5.value.get$span(), \"includes \" + type);\n          }\n          throw H.wrapException(E.MultiSpanSassScriptException$0(t1, t2, t3));\n        }\n        identity = identityFromModule;\n        value = valueInModule;\n      }\n      return value;\n    },\n    _environment0$_fromOneModule$3: function($name, type, callback) {\n      return this._environment0$_fromOneModule$1$3($name, type, callback, type$.dynamic);\n    }\n  };\n  O.Environment_importForwards_closure3.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$variables();\n      return t1.get$keys(t1);\n    },\n    $signature: 110\n  };\n  O.Environment_importForwards_closure4.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$functions(module);\n      return t1.get$keys(t1);\n    },\n    $signature: 110\n  };\n  O.Environment_importForwards_closure5.prototype = {\n    call$1: function(module) {\n      var t1 = module.get$mixins();\n      return t1.get$keys(t1);\n    },\n    $signature: 110\n  };\n  O.Environment_importForwards_closure6.prototype = {\n    call$1: function(_) {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2);\n    },\n    $signature: 326\n  };\n  O.Environment__getVariableFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$variables().$index(0, this.name);\n    },\n    $signature: 327\n  };\n  O.Environment_setVariable_closure2.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._environment0$_lastVariableName = this.name;\n      return t1._environment0$_lastVariableIndex = 0;\n    },\n    $signature: 11\n  };\n  O.Environment_setVariable_closure3.prototype = {\n    call$1: function(module) {\n      return module.get$variables().containsKey$1(this.name) ? module : null;\n    },\n    $signature: 175\n  };\n  O.Environment_setVariable_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._environment0$_variableIndex$1(this.name);\n      return t2 == null ? t1._environment0$_variables.length - 1 : t2;\n    },\n    $signature: 11\n  };\n  O.Environment__getFunctionFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module).$index(0, this.name);\n    },\n    $signature: 176\n  };\n  O.Environment__getMixinFromGlobalModule_closure0.prototype = {\n    call$1: function(module) {\n      return module.get$mixins().$index(0, this.name);\n    },\n    $signature: 176\n  };\n  O._EnvironmentModule1.prototype = {\n    get$url: function() {\n      return this.css.get$span().file.url;\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var t1, t2,\n        module = this._environment0$_modulesByVariable.$index(0, $name);\n      if (module != null) {\n        module.setVariable$3($name, value, nodeWithSpan);\n        return;\n      }\n      t1 = this._environment0$_environment;\n      t2 = t1._environment0$_variables;\n      if (!C.JSArray_methods.get$first(t2).containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$0(\"Undefined variable.\"));\n      J.$indexSet$ax(C.JSArray_methods.get$first(t2), $name, value);\n      t1 = t1._environment0$_variableNodes;\n      if (t1 != null)\n        J.$indexSet$ax(C.JSArray_methods.get$first(t1), $name, nodeWithSpan);\n      return;\n    },\n    variableIdentity$1: function($name) {\n      var module = this._environment0$_modulesByVariable.$index(0, $name);\n      return module == null ? this : module.variableIdentity$1($name);\n    },\n    cloneCss$0: function() {\n      var newCssAndExtender, _this = this,\n        t1 = _this.css;\n      if (J.get$isEmpty$asx(t1.get$children(t1)))\n        return _this;\n      newCssAndExtender = V.cloneCssStylesheet0(t1, _this.extender);\n      return O._EnvironmentModule$_1(_this._environment0$_environment, newCssAndExtender.item1, newCssAndExtender.item2, _this._environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);\n    },\n    toString$0: function(_) {\n      var t1 = this.css;\n      if (t1.get$span().file.url == null)\n        t1 = \"<unknown url>\";\n      else {\n        t1 = t1.get$span();\n        t1 = $.$get$context().prettyUri$1(t1.file.url);\n      }\n      return t1;\n    },\n    $isModule0: 1,\n    get$upstream: function() {\n      return this.upstream;\n    },\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    },\n    get$extender: function() {\n      return this.extender;\n    },\n    get$css: function(receiver) {\n      return this.css;\n    },\n    get$transitivelyContainsCss: function() {\n      return this.transitivelyContainsCss;\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this.transitivelyContainsExtensions;\n    }\n  };\n  O._EnvironmentModule__EnvironmentModule_closure11.prototype = {\n    call$1: function(module) {\n      return module.get$variables();\n    },\n    $signature: 330\n  };\n  O._EnvironmentModule__EnvironmentModule_closure12.prototype = {\n    call$1: function(module) {\n      return module.get$variableNodes();\n    },\n    $signature: 331\n  };\n  O._EnvironmentModule__EnvironmentModule_closure13.prototype = {\n    call$1: function(module) {\n      return module.get$functions(module);\n    },\n    $signature: 177\n  };\n  O._EnvironmentModule__EnvironmentModule_closure14.prototype = {\n    call$1: function(module) {\n      return module.get$mixins();\n    },\n    $signature: 177\n  };\n  O._EnvironmentModule__EnvironmentModule_closure15.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 103\n  };\n  O._EnvironmentModule__EnvironmentModule_closure16.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsExtensions();\n    },\n    $signature: 103\n  };\n  D.ErrorRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitErrorRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@error \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  R._EvaluateVisitor1.prototype = {\n    _EvaluateVisitor$5$functions$importCache$logger$nodeImporter$sourceMap1: function(functions, importCache, logger, nodeImporter, sourceMap) {\n      var t2, cur, _i, metaModule, t3, module, $function, t4, _this = this,\n        _s20_ = \"$name, $module: null\",\n        _s9_ = \"sass:meta\",\n        metaFunctions = [Q.BuiltInCallable$function0(\"global-variable-exists\", _s20_, new R._EvaluateVisitor_closure19(_this), _s9_), Q.BuiltInCallable$function0(\"variable-exists\", \"$name\", new R._EvaluateVisitor_closure20(_this), _s9_), Q.BuiltInCallable$function0(\"function-exists\", _s20_, new R._EvaluateVisitor_closure21(_this), _s9_), Q.BuiltInCallable$function0(\"mixin-exists\", _s20_, new R._EvaluateVisitor_closure22(_this), _s9_), Q.BuiltInCallable$function0(\"content-exists\", \"\", new R._EvaluateVisitor_closure23(_this), _s9_), Q.BuiltInCallable$function0(\"module-variables\", \"$module\", new R._EvaluateVisitor_closure24(_this), _s9_), Q.BuiltInCallable$function0(\"module-functions\", \"$module\", new R._EvaluateVisitor_closure25(_this), _s9_), Q.BuiltInCallable$function0(\"get-function\", \"$name, $css: false, $module: null\", new R._EvaluateVisitor_closure26(_this), _s9_), Q.BuiltInCallable$function0(\"call\", \"$function, $args...\", new R._EvaluateVisitor_closure27(_this), _s9_)],\n        t1 = type$.JSArray_legacy_BuiltInCallable_2,\n        metaMixins = H.setRuntimeTypeInfo([Q.BuiltInCallable$mixin0(\"load-css\", \"$url, $with: null\", new R._EvaluateVisitor_closure28(_this), _s9_)], t1);\n      t1 = H.setRuntimeTypeInfo([], t1);\n      for (t2 = $.$get$global6(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      metaModule = Q.BuiltInModule$0(\"meta\", t1, metaMixins, null, type$.legacy_BuiltInCallable_2);\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable_2);\n      for (t2 = $.$get$coreModules0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      t1.push(metaModule);\n      t2 = t1.length;\n      t3 = _this._evaluate0$_builtInModules;\n      _i = 0;\n      for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        module = t1[_i];\n        t3.$indexSet(0, module.url, module);\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Callable_2);\n      for (t2 = new H.ListIterator(functions, functions.get$length(functions)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (t2 = $.$get$globalFunctions0(), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      for (_i = 0; _i < 9; ++_i)\n        t1.push(metaFunctions[_i]);\n      for (t2 = t1.length, t3 = _this._evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        $function = t1[_i];\n        t4 = $function.get$name($function);\n        t4.toString;\n        t3.$indexSet(0, H.stringReplaceAllUnchecked(t4, \"_\", \"-\"), $function);\n      }\n    },\n    run$2: function(_, importer, node) {\n      return this._evaluate0$_withWarnCallback$1$1(new R._EvaluateVisitor_run_closure1(this, node, importer), type$.legacy_EvaluateResult_2);\n    },\n    _evaluate0$_withWarnCallback$1$1: function(callback, $T) {\n      return N.withWarnCallback0(new R._EvaluateVisitor__withWarnCallback_closure1(this), callback, $T._eval$1(\"0*\"));\n    },\n    _evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors: function(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {\n      var t1, _this = this,\n        builtInModule = _this._evaluate0$_builtInModules.$index(0, url);\n      if (builtInModule != null) {\n        if (configuration != null && !configuration.isImplicit) {\n          t1 = namesInErrors ? \"Built-in module \" + H.S(url) + \" can't be configured.\" : \"Built-in modules can't be configured.\";\n          throw H.wrapException(_this._evaluate0$_exception$2(t1, nodeWithSpan.get$span()));\n        }\n        _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__loadModule_closure3(callback, builtInModule));\n        return;\n      }\n      _this._evaluate0$_withStackFrame$3(stackFrame, nodeWithSpan, new R._EvaluateVisitor__loadModule_closure4(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));\n    },\n    _evaluate0$_loadModule$5$configuration: function(url, stackFrame, nodeWithSpan, callback, configuration) {\n      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);\n    },\n    _evaluate0$_loadModule$4: function(url, stackFrame, nodeWithSpan, callback) {\n      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);\n    },\n    _evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan: function(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {\n      var message, existingNode, environment, extender, module, _this = this, t1 = {},\n        url = stylesheet.span.file.url,\n        t2 = _this._evaluate0$_modules,\n        alreadyLoaded = t2.$index(0, url);\n      if (alreadyLoaded != null) {\n        t1 = configuration == null;\n        if (!(t1 ? _this._evaluate0$_configuration : configuration).isImplicit) {\n          message = namesInErrors ? H.S($.$get$context().prettyUri$1(url)) + string$.x20was_a : string$.This_mw;\n          existingNode = _this._evaluate0$_moduleNodes.$index(0, url);\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_FileSpan, type$.legacy_String);\n          if (existingNode != null)\n            t2.$indexSet(0, existingNode.get$span(), \"original load\");\n          if (t1)\n            t2.$indexSet(0, _this._evaluate0$_configuration.nodeWithSpan.get$span(), \"configuration\");\n          throw H.wrapException(t2.get$isEmpty(t2) ? _this._evaluate0$_exception$1(message) : _this._evaluate0$_multiSpanException$3(message, \"new load\", t2));\n        }\n        return alreadyLoaded;\n      }\n      environment = O.Environment$0(_this._evaluate0$_sourceMap);\n      t1.css = null;\n      extender = F.Extender$0();\n      _this._evaluate0$_withEnvironment$2(environment, new R._EvaluateVisitor__execute_closure1(t1, _this, importer, stylesheet, extender, configuration));\n      module = O._EnvironmentModule__EnvironmentModule1(environment, t1.css, extender, environment._environment0$_forwardedModules);\n      t2.$indexSet(0, url, module);\n      _this._evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);\n      return module;\n    },\n    _evaluate0$_execute$2: function(importer, stylesheet) {\n      return this._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);\n    },\n    _evaluate0$_addOutOfOrderImports$0: function() {\n      var t1, statements, _this = this;\n      if (_this._evaluate0$_outOfOrderImports == null)\n        return _this._evaluate0$_root.children;\n      t1 = new Array(J.get$length$asx(_this._evaluate0$_root.children._collection$_source) + _this._evaluate0$_outOfOrderImports.length);\n      t1.fixed$length = Array;\n      statements = new G.FixedLengthListBuilder0(H.setRuntimeTypeInfo(t1, type$.JSArray_legacy_ModifiableCssNode_2), type$.FixedLengthListBuilder_legacy_ModifiableCssNode_2);\n      statements.addRange$3(_this._evaluate0$_root.children, 0, _this._evaluate0$_endOfImports);\n      statements.addAll$1(0, _this._evaluate0$_outOfOrderImports);\n      statements.addRange$2(_this._evaluate0$_root.children, _this._evaluate0$_endOfImports);\n      return statements.build$0();\n    },\n    _evaluate0$_combineCss$2$clone: function(root, clone) {\n      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, cur, t2, statements, index, _this = this;\n      if (!C.JSArray_methods.any$1(root.get$upstream(), new R._EvaluateVisitor__combineCss_closure5())) {\n        selectors = root.get$extender().get$simpleSelectors();\n        unsatisfiedExtension = B.firstOrNull0(root.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__combineCss_closure6(selectors)));\n        if (unsatisfiedExtension != null)\n          _this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);\n        return root.get$css(root);\n      }\n      sortedModules = _this._evaluate0$_topologicalModules$1(root);\n      if (clone) {\n        t1 = sortedModules.$ti._eval$1(\"MappedListIterable<ListMixin.E,Module0<Callable0*>*>\");\n        sortedModules = P.List_List$from(new H.MappedListIterable(sortedModules, new R._EvaluateVisitor__combineCss_closure7(), t1), true, t1._eval$1(\"ListIterable.E\"));\n      }\n      _this._evaluate0$_extendModules$1(sortedModules);\n      t1 = type$.JSArray_legacy_CssNode_2;\n      imports = H.setRuntimeTypeInfo([], t1);\n      css = H.setRuntimeTypeInfo([], t1);\n      for (t1 = J.get$reversed$ax(sortedModules), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2 = cur.get$css(cur);\n        statements = t2.get$children(t2);\n        index = _this._evaluate0$_indexAfterImports$1(statements);\n        t2 = J.getInterceptor$ax(statements);\n        C.JSArray_methods.addAll$1(imports, t2.getRange$2(statements, 0, index));\n        C.JSArray_methods.addAll$1(css, t2.getRange$2(statements, index, t2.get$length(statements)));\n      }\n      return new V.CssStylesheet0(new P.UnmodifiableListView(C.JSArray_methods.$add(imports, css), type$.UnmodifiableListView_legacy_CssNode_2), root.get$css(root).get$span());\n    },\n    _evaluate0$_combineCss$1: function(root) {\n      return this._evaluate0$_combineCss$2$clone(root, false);\n    },\n    _evaluate0$_extendModules$1: function(sortedModules) {\n      var t1, t2, originalSelectors, extenders, t3, t4, _i,\n        downstreamExtenders = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_Uri, type$.legacy_List_legacy_Extender_2),\n        unsatisfiedExtensions = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_Extension_2);\n      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {\n        t2 = t1.get$current(t1);\n        originalSelectors = t2.get$extender().get$simpleSelectors().toSet$0(0);\n        unsatisfiedExtensions.addAll$1(0, t2.get$extender().extensionsWhereTarget$1(new R._EvaluateVisitor__extendModules_closure3(originalSelectors)));\n        extenders = downstreamExtenders.$index(0, t2.get$url());\n        if (extenders != null)\n          t2.get$extender().addExtensions$1(extenders);\n        t3 = t2.get$extender();\n        if (t3.get$isEmpty(t3))\n          continue;\n        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)\n          J.add$1$ax(downstreamExtenders.putIfAbsent$2(t3[_i].get$url(), new R._EvaluateVisitor__extendModules_closure4()), t2.get$extender());\n        unsatisfiedExtensions.removeAll$1(t2.get$extender().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));\n      }\n      if (unsatisfiedExtensions._collection$_length !== 0)\n        this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));\n    },\n    _evaluate0$_throwForUnsatisfiedExtension$1: function(extension) {\n      throw H.wrapException(E.SassException$0(string$.The_ta + H.S(extension.target) + ' !optional\" to avoid this error.', extension.span));\n    },\n    _evaluate0$_topologicalModules$1: function(root) {\n      var t1 = type$.legacy_Module_legacy_Callable_2,\n        sorted = Q.QueueList$(null, t1);\n      new R._EvaluateVisitor__topologicalModules_visitModule1(P.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);\n      return sorted;\n    },\n    _evaluate0$_indexAfterImports$1: function(statements) {\n      var t1, t2, t3, lastImport, i, statement;\n      for (t1 = J.getInterceptor$asx(statements), t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {\n        statement = t1.$index(statements, i);\n        if (t3._is(statement))\n          lastImport = i;\n        else if (!t2._is(statement))\n          break;\n      }\n      return lastImport + 1;\n    },\n    visitStylesheet$1: function(node) {\n      var t1, t2, _i;\n      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(this);\n      return null;\n    },\n    visitAtRootRule$1: function(node) {\n      var root, innerCopy, outerCopy, cur, copy, _this = this, _null = null,\n        t1 = node.query,\n        query = t1 != null ? _this._evaluate0$_adjustParseError$2(t1, new R._EvaluateVisitor_visitAtRootRule_closure5(_this, _this._evaluate0$_performInterpolation$2$warnForColor(t1, true))) : C.AtRootQuery_UsS0,\n        $parent = _this._evaluate0$_parent,\n        included = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssParentNode_2);\n      for (t1 = type$.legacy_CssStylesheet_2; !t1._is($parent);) {\n        if (!query.excludes$1($parent))\n          included.push($parent);\n        $parent = $parent._node2$_parent;\n      }\n      root = _this._evaluate0$_trimIncluded$1(included);\n      if (root == _this._evaluate0$_parent) {\n        _this._evaluate0$_environment.scope$1$2$when(new R._EvaluateVisitor_visitAtRootRule_closure6(_this, node), node.hasDeclarations, type$.Null);\n        return _null;\n      }\n      innerCopy = included.length === 0 ? _null : C.JSArray_methods.get$first(included).copyWithoutChildren$0();\n      for (t1 = H.SubListIterable$(included, 1, _null, type$.legacy_ModifiableCssParentNode_2), t1 = new H.ListIterator(t1, t1.get$length(t1)), outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {\n        cur = t1.__internal$_current;\n        copy = cur.copyWithoutChildren$0();\n        copy.addChild$1(outerCopy);\n      }\n      if (outerCopy != null)\n        root.addChild$1(outerCopy);\n      _this._evaluate0$_scopeForAtRoot$4(node, innerCopy == null ? root : innerCopy, query, included).call$1(new R._EvaluateVisitor_visitAtRootRule_closure7(_this, node));\n      return _null;\n    },\n    _evaluate0$_trimIncluded$1: function(nodes) {\n      var $parent, innermostContiguous, i, t2, root,\n        t1 = nodes.length;\n      if (t1 === 0)\n        return this._evaluate0$_root;\n      $parent = this._evaluate0$_parent;\n      for (innermostContiguous = null, i = 0; i < t1; ++i) {\n        for (; $parent != nodes[i]; innermostContiguous = null)\n          $parent = $parent._node2$_parent;\n        if (innermostContiguous == null)\n          innermostContiguous = i;\n        $parent = $parent._node2$_parent;\n      }\n      t2 = this._evaluate0$_root;\n      if ($parent != t2)\n        return t2;\n      root = nodes[innermostContiguous];\n      C.JSArray_methods.removeRange$2(nodes, innermostContiguous, t1);\n      return root;\n    },\n    _evaluate0$_scopeForAtRoot$4: function(node, newParent, query, included) {\n      var _this = this,\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure11(_this, newParent, node),\n        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;\n      if (t1 !== query.include)\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure12(_this, scope);\n      if (_this._evaluate0$_mediaQueries != null && query.excludesName$1(\"media\"))\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure13(_this, scope);\n      if (_this._evaluate0$_inKeyframes && query.excludesName$1(\"keyframes\"))\n        scope = new R._EvaluateVisitor__scopeForAtRoot_closure14(_this, scope);\n      return _this._evaluate0$_inUnknownAtRule && !C.JSArray_methods.any$1(included, new R._EvaluateVisitor__scopeForAtRoot_closure15()) ? new R._EvaluateVisitor__scopeForAtRoot_closure16(_this, scope) : scope;\n    },\n    visitContentBlock$1: function(node) {\n      return H.throwExpression(P.UnsupportedError$(string$.Evalua));\n    },\n    visitContentRule$1: function(node) {\n      var $content = this._evaluate0$_environment._environment0$_content;\n      if ($content == null)\n        return null;\n      this._evaluate0$_runUserDefinedCallable$4(node.$arguments, $content, node, new R._EvaluateVisitor_visitContentRule_closure1(this, $content));\n      return null;\n    },\n    visitDebugRule$1: function(node) {\n      var value = node.expression.accept$1(this),\n        t1 = value instanceof D.SassString0 ? value.text : J.toString$0$(value);\n      this._evaluate0$_logger.debug$2(0, t1, node.span);\n      return null;\n    },\n    visitDeclaration$1: function(node) {\n      var t1, $name, t2, cssValue, t3, oldDeclarationName, _this = this;\n      if (!(_this._evaluate0$_styleRule != null && !_this._evaluate0$_atRootExcludingStyleRule) && !_this._evaluate0$_inUnknownAtRule && !_this._evaluate0$_inKeyframes)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Declarm, node.span));\n      t1 = node.name;\n      $name = _this._evaluate0$_interpolationToValue$2$warnForColor(t1, true);\n      t2 = _this._evaluate0$_declarationName;\n      if (t2 != null)\n        $name = new F.CssValue0(t2 + \"-\" + H.S($name.value), $name.span, type$.CssValue_legacy_String_2);\n      t2 = node.value;\n      cssValue = t2 == null ? null : new F.CssValue0(t2.accept$1(_this), t2.get$span(), type$.CssValue_legacy_Value_2);\n      if (cssValue != null) {\n        t3 = cssValue.value;\n        t3 = !t3.get$isBlank() || t3.get$asList().length === 0;\n      } else\n        t3 = false;\n      if (t3) {\n        t3 = _this._evaluate0$_parent;\n        t1 = C.JSString_methods.startsWith$1(t1.get$initialPlain(), \"--\");\n        t2 = _this._evaluate0$_expressionNode$1(t2);\n        t2 = t2 == null ? null : t2.get$span();\n        t3.addChild$1(L.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));\n      } else if (J.startsWith$1$s($name.value, \"--\") && node.children == null)\n        throw H.wrapException(_this._evaluate0$_exception$2(\"Custom property values may not be empty.\", t2.get$span()));\n      if (node.children != null) {\n        oldDeclarationName = _this._evaluate0$_declarationName;\n        _this._evaluate0$_declarationName = $name.value;\n        _this._evaluate0$_environment.scope$1$2$when(new R._EvaluateVisitor_visitDeclaration_closure1(_this, node), node.hasDeclarations, type$.Null);\n        _this._evaluate0$_declarationName = oldDeclarationName;\n      }\n      return null;\n    },\n    visitEachRule$1: function(node) {\n      var _this = this,\n        t1 = node.list,\n        list = t1.accept$1(_this),\n        nodeWithSpan = _this._evaluate0$_expressionNode$1(t1),\n        setVariables = node.variables.length === 1 ? new R._EvaluateVisitor_visitEachRule_closure5(_this, node, nodeWithSpan) : new R._EvaluateVisitor_visitEachRule_closure6(_this, node, nodeWithSpan);\n      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitEachRule_closure7(_this, list, setVariables, node), true, type$.legacy_Value_2);\n    },\n    _evaluate0$_setMultipleVariables$3: function(variables, value, nodeWithSpan) {\n      var i,\n        list = value.get$asList(),\n        t1 = variables.length,\n        minLength = Math.min(t1, list.length);\n      for (i = 0; i < minLength; ++i)\n        this._evaluate0$_environment.setLocalVariable$3(variables[i], list[i].withoutSlash$0(), nodeWithSpan);\n      for (i = minLength; i < t1; ++i)\n        this._evaluate0$_environment.setLocalVariable$3(variables[i], C.C_SassNull, nodeWithSpan);\n    },\n    visitErrorRule$1: function(node) {\n      throw H.wrapException(this._evaluate0$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));\n    },\n    visitExtendRule$1: function(node) {\n      var targetText, t1, t2, t3, _i, t4, _this = this;\n      if (!(_this._evaluate0$_styleRule != null && !_this._evaluate0$_atRootExcludingStyleRule) || _this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.x40exten, node.span));\n      targetText = _this._evaluate0$_interpolationToValue$2$warnForColor(node.selector, true);\n      for (t1 = _this._evaluate0$_adjustParseError$2(targetText, new R._EvaluateVisitor_visitExtendRule_closure1(_this, targetText)).components, t2 = t1.length, t3 = type$.legacy_CompoundSelector_2, _i = 0; _i < t2; ++_i) {\n        t4 = t1[_i].components;\n        if (t4.length !== 1 || !(C.JSArray_methods.get$first(t4) instanceof X.CompoundSelector0))\n          throw H.wrapException(E.SassFormatException$0(\"complex selectors may not be extended.\", targetText.span));\n        t4 = t3._as(C.JSArray_methods.get$first(t4)).components;\n        if (t4.length !== 1)\n          throw H.wrapException(E.SassFormatException$0(string$.compou + C.JSArray_methods.join$1(t4, \", \") + string$.x60_inst, targetText.span));\n        _this._evaluate0$_extender.addExtension$4(_this._evaluate0$_styleRule.selector, C.JSArray_methods.get$first(t4), node, _this._evaluate0$_mediaQueries);\n      }\n      return null;\n    },\n    visitAtRule$1: function(node) {\n      var $name, t1, value, wasInKeyframes, wasInUnknownAtRule, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));\n      $name = _this._evaluate0$_interpolationToValue$1(node.name);\n      t1 = node.value;\n      value = t1 == null ? null : _this._evaluate0$_interpolationToValue$3$trim$warnForColor(t1, true, true);\n      if (node.children == null) {\n        _this._evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0($name, node.span, true, value));\n        return null;\n      }\n      wasInKeyframes = _this._evaluate0$_inKeyframes;\n      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;\n      if (B.unvendor0($name.value) === \"keyframes\")\n        _this._evaluate0$_inKeyframes = true;\n      else\n        _this._evaluate0$_inUnknownAtRule = true;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0($name, node.span, false, value), new R._EvaluateVisitor_visitAtRule_closure3(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitAtRule_closure4(), type$.legacy_ModifiableCssAtRule_2, type$.Null);\n      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n      _this._evaluate0$_inKeyframes = wasInKeyframes;\n      return null;\n    },\n    visitForRule$1: function(node) {\n      var _this = this, t1 = {},\n        t2 = node.from,\n        fromNumber = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure9(_this, node)),\n        t3 = node.to,\n        toNumber = _this._evaluate0$_addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure10(_this, node)),\n        from = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitForRule_closure11(fromNumber, toNumber)),\n        to = t1.to = _this._evaluate0$_addExceptionSpan$2(t3, new R._EvaluateVisitor_visitForRule_closure12(toNumber)),\n        direction = from > to ? -1 : 1;\n      if (from === (!node.isExclusive ? t1.to = to + direction : to))\n        return null;\n      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new R._EvaluateVisitor_visitForRule_closure13(t1, _this, node, from, direction), true, type$.legacy_Value_2);\n    },\n    visitForwardRule$1: function(node) {\n      var newConfiguration, t4, _i, variable, _this = this,\n        _s8_ = \"@forward\",\n        oldConfiguration = _this._evaluate0$_configuration,\n        adjustedConfiguration = oldConfiguration.throughForward$1(node),\n        t1 = node.configuration,\n        t2 = t1.length,\n        t3 = node.url;\n      if (t2 !== 0) {\n        newConfiguration = _this._evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node);\n        _this._evaluate0$_loadModule$5$configuration(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure3(_this, node), newConfiguration);\n        t3 = type$.legacy_String;\n        t4 = P.LinkedHashSet_LinkedHashSet(t3);\n        for (_i = 0; _i < t2; ++_i) {\n          variable = t1[_i];\n          if (!variable.isGuarded)\n            t4.add$1(0, variable.name);\n        }\n        _this._evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);\n        t3 = P.LinkedHashSet_LinkedHashSet(t3);\n        for (_i = 0; _i < t2; ++_i)\n          t3.add$1(0, t1[_i].name);\n        _this._evaluate0$_assertConfigurationIsEmpty$2$only(newConfiguration, t3);\n      } else {\n        _this._evaluate0$_configuration = adjustedConfiguration;\n        _this._evaluate0$_loadModule$4(t3, _s8_, node, new R._EvaluateVisitor_visitForwardRule_closure4(_this, node));\n        _this._evaluate0$_configuration = oldConfiguration;\n      }\n      return null;\n    },\n    _evaluate0$_addForwardConfiguration$2: function(configuration, node) {\n      var t2, t3, _i, variable, t4, t5,\n        t1 = configuration._configuration$_values,\n        newValues = P.LinkedHashMap_LinkedHashMap$of(new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue_2), type$.legacy_String, type$.legacy_ConfiguredValue_2);\n      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        variable = t2[_i];\n        if (variable.isGuarded) {\n          t4 = variable.name;\n          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);\n          if (t5 != null && !J.$eq$(t5.value, C.C_SassNull)) {\n            newValues.$indexSet(0, t4, t5);\n            continue;\n          }\n        }\n        t4 = variable.name;\n        t5 = variable.expression;\n        newValues.$indexSet(0, t4, new Z.ConfiguredValue0(t5.accept$1(this).withoutSlash$0(), variable.span, this._evaluate0$_expressionNode$1(t5)));\n      }\n      return new A.Configuration0(newValues, node, false);\n    },\n    _evaluate0$_removeUsedConfiguration$3$except: function(upstream, downstream, except) {\n      var t1, t2, t3, t4, _i, $name;\n      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._configuration$_values, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {\n        $name = t2[_i];\n        if (except.contains$1(0, $name))\n          continue;\n        if (!t4.containsKey$1($name))\n          if (!t1.get$isEmpty(t1))\n            t1.remove$1(0, $name);\n      }\n    },\n    _evaluate0$_assertConfigurationIsEmpty$3$nameInError$only: function(configuration, nameInError, only) {\n      configuration._configuration$_values.forEach$1(0, new R._EvaluateVisitor__assertConfigurationIsEmpty_closure1(this, only, nameInError));\n    },\n    _evaluate0$_assertConfigurationIsEmpty$2$nameInError: function(configuration, nameInError) {\n      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, nameInError, null);\n    },\n    _evaluate0$_assertConfigurationIsEmpty$1: function(configuration) {\n      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, null);\n    },\n    _evaluate0$_assertConfigurationIsEmpty$2$only: function(configuration, only) {\n      return this._evaluate0$_assertConfigurationIsEmpty$3$nameInError$only(configuration, false, only);\n    },\n    visitFunctionRule$1: function(node) {\n      var t1 = this._evaluate0$_environment,\n        t2 = t1.closure$0(),\n        t3 = t1._environment0$_functions,\n        index = t3.length - 1,\n        t4 = node.name;\n      t1._environment0$_functionIndices.$indexSet(0, t4, index);\n      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_Environment_2));\n      return null;\n    },\n    visitIfRule$1: function(node) {\n      var t1, t2, _i, clauseToCheck, _box_0 = {};\n      _box_0.clause = node.lastClause;\n      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        clauseToCheck = t1[_i];\n        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {\n          _box_0.clause = clauseToCheck;\n          break;\n        }\n      }\n      t1 = _box_0.clause;\n      if (t1 == null)\n        return null;\n      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitIfRule_closure1(_box_0, this), true, t1.hasDeclarations, type$.legacy_Value_2);\n    },\n    visitImportRule$1: function(node) {\n      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, supports, t8, t9, resolvedSupports, mediaQuery, t10, result0, _this = this, _null = null;\n      for (t1 = node.imports, t2 = t1.length, t3 = type$.legacy_CssMediaQuery_2, t4 = type$.CssValue_legacy_String_2, t5 = type$.legacy_StaticImport_2, t6 = type$.JSArray_legacy_ModifiableCssImport_2, _i = 0; _i < t2; ++_i) {\n        $import = t1[_i];\n        if ($import instanceof B.DynamicImport0)\n          _this._evaluate0$_visitDynamicImport$1($import);\n        else {\n          t5._as($import);\n          t7 = $import.url;\n          result = _this._evaluate0$_performInterpolation$2$warnForColor(t7, false);\n          supports = $import.supports;\n          if (supports instanceof L.SupportsDeclaration0) {\n            t8 = supports.name;\n            t8 = H.S(_this._evaluate0$_serialize$3$quote(t8.accept$1(_this), t8, true)) + \": \";\n            t9 = supports.value;\n            resolvedSupports = t8 + H.S(_this._evaluate0$_serialize$3$quote(t9.accept$1(_this), t9, true));\n          } else\n            resolvedSupports = supports == null ? _null : _this._evaluate0$_visitSupportsCondition$1(supports);\n          t8 = $import.media;\n          mediaQuery = t8 == null ? _null : _this._evaluate0$_visitMediaQueries$1(t8);\n          t8 = $import.span;\n          t9 = resolvedSupports == null ? _null : new F.CssValue0(\"supports(\" + resolvedSupports + \")\", supports.get$span(), t4);\n          if (mediaQuery == null)\n            t10 = _null;\n          else {\n            result0 = P.List_List$from(mediaQuery, false, t3);\n            result0.fixed$length = Array;\n            result0.immutable$list = Array;\n            t10 = result0;\n          }\n          node = new F.ModifiableCssImport0(new F.CssValue0(result, t7.span, t4), t9, t10, t8);\n          t7 = _this._evaluate0$_parent;\n          t8 = _this._evaluate0$_root;\n          if (t7 != t8)\n            t7.addChild$1(node);\n          else if (_this._evaluate0$_endOfImports === J.get$length$asx(t8.children._collection$_source)) {\n            t7 = _this._evaluate0$_root;\n            t7.toString;\n            node._node2$_parent = t7;\n            t7 = t7._node2$_children;\n            node._node2$_indexInParent = t7.length;\n            t7.push(node);\n            _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;\n          } else {\n            t7 = _this._evaluate0$_outOfOrderImports;\n            (t7 == null ? _this._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], t6) : t7).push(node);\n          }\n        }\n      }\n      return _null;\n    },\n    _evaluate0$_visitDynamicImport$1: function($import) {\n      return this._evaluate0$_withStackFrame$3(\"@import\", $import, new R._EvaluateVisitor__visitDynamicImport_closure1(this, $import));\n    },\n    _evaluate0$_loadStylesheet$4$baseUrl$forImport: function(url, span, baseUrl, forImport) {\n      var stylesheet, tuple, error, error0, message, t1, t2, t3, exception, message0, _this = this;\n      try {\n        _this._evaluate0$_importSpan = span;\n        if (_this._nodeImporter != null) {\n          stylesheet = _this._importLikeNode$2(url, forImport);\n          if (stylesheet != null)\n            return new S.Tuple2(null, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet_2);\n        } else {\n          t1 = P.Uri_parse(url);\n          t2 = _this._evaluate0$_importer;\n          if (baseUrl == null) {\n            t3 = _this._evaluate0$_stylesheet;\n            t3 = t3 == null ? null : t3.span;\n            t3 = t3 == null ? null : t3.file.url;\n          } else\n            t3 = baseUrl;\n          tuple = _this._evaluate0$_importCache.import$4$baseImporter$baseUrl$forImport(t1, t2, t3, forImport);\n          if (tuple != null)\n            return tuple;\n        }\n        if (C.JSString_methods.startsWith$1(url, \"package:\") && true)\n          throw H.wrapException(string$.x22packa);\n        else\n          throw H.wrapException(\"Can't find stylesheet to import.\");\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassException0) {\n          error = t1;\n          t1 = _this._evaluate0$_exception$2(error._span_exception$_message, error.get$span());\n          throw H.wrapException(t1);\n        } else {\n          error0 = t1;\n          message = null;\n          try {\n            message = H._asStringS(J.get$message$x(error0));\n          } catch (exception) {\n            H.unwrapException(exception);\n            message0 = J.toString$0$(error0);\n            message = message0;\n          }\n          t1 = _this._evaluate0$_exception$1(message);\n          throw H.wrapException(t1);\n        }\n      } finally {\n        _this._evaluate0$_importSpan = null;\n      }\n    },\n    _evaluate0$_loadStylesheet$3$baseUrl: function(url, span, baseUrl) {\n      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);\n    },\n    _evaluate0$_loadStylesheet$3$forImport: function(url, span, forImport) {\n      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);\n    },\n    _importLikeNode$2: function(originalUrl, forImport) {\n      var contents, url, _this = this,\n        t1 = _this._evaluate0$_stylesheet.span,\n        result = _this._nodeImporter.load$3(0, originalUrl, t1.file.url, forImport);\n      if (result == null)\n        return null;\n      contents = result.item1;\n      url = result.item2;\n      t1 = J.getInterceptor$s(url).startsWith$1(url, \"file:\") ? $.$get$context().style.pathFromUri$1(M._parseUri(url)) : url;\n      _this._includedFiles.add$1(0, t1);\n      t1 = C.JSString_methods.startsWith$1(url, \"file\") ? M.Syntax_forPath0(url) : C.Syntax_SCSS0;\n      return V.Stylesheet_Stylesheet$parse0(contents, t1, _this._evaluate0$_logger, url);\n    },\n    visitIncludeRule$1: function(node) {\n      var nodeWithSpan, t1, t2, contentCallable, _this = this,\n        _s37_ = \"Mixin doesn't accept a content block.\",\n        mixin = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitIncludeRule_closure5(_this, node));\n      if (mixin == null)\n        throw H.wrapException(_this._evaluate0$_exception$2(\"Undefined mixin.\", node.span));\n      nodeWithSpan = new B._FakeAstNode0(new R._EvaluateVisitor_visitIncludeRule_closure6(node));\n      if (mixin instanceof Q.BuiltInCallable0) {\n        if (node.content != null)\n          throw H.wrapException(_this._evaluate0$_exception$2(_s37_, node.span));\n        _this._evaluate0$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);\n      } else if (type$.legacy_UserDefinedCallable_legacy_Environment_2._is(mixin)) {\n        t1 = node.content;\n        t2 = t1 == null;\n        if (!t2 && !type$.legacy_MixinRule_2._as(mixin.declaration).hasContent)\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(_s37_, node.get$spanWithoutContent(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate0$_stackTrace$1(node.get$spanWithoutContent())));\n        contentCallable = t2 ? null : new E.UserDefinedCallable0(t1, _this._evaluate0$_environment.closure$0(), type$.UserDefinedCallable_legacy_Environment_2);\n        _this._evaluate0$_runUserDefinedCallable$4(node.$arguments, mixin, nodeWithSpan, new R._EvaluateVisitor_visitIncludeRule_closure7(_this, contentCallable, mixin, nodeWithSpan));\n      } else\n        throw H.wrapException(P.UnsupportedError$(\"Unknown callable type \" + mixin.toString$0(0) + \".\"));\n      return null;\n    },\n    visitMixinRule$1: function(node) {\n      var t1 = this._evaluate0$_environment,\n        t2 = t1.closure$0(),\n        t3 = t1._environment0$_mixins,\n        index = t3.length - 1,\n        t4 = node.name;\n      t1._environment0$_mixinIndices.$indexSet(0, t4, index);\n      J.$indexSet$ax(t3[index], t4, new E.UserDefinedCallable0(node, t2, type$.UserDefinedCallable_legacy_Environment_2));\n      return null;\n    },\n    visitLoudComment$1: function(node) {\n      var t1, t2, _this = this;\n      if (_this._evaluate0$_inFunction)\n        return null;\n      t1 = _this._evaluate0$_parent;\n      t2 = _this._evaluate0$_root;\n      if (t1 == t2 && _this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;\n      t1 = node.text;\n      _this._evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(_this._evaluate0$_performInterpolation$1(t1), t1.span));\n      return null;\n    },\n    visitMediaRule$1: function(node) {\n      var queries, t1, mergedQueries, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));\n      queries = _this._evaluate0$_visitMediaQueries$1(node.query);\n      t1 = _this._evaluate0$_mediaQueries;\n      mergedQueries = t1 == null ? null : _this._evaluate0$_mergeMediaQueries$2(t1, queries);\n      t1 = mergedQueries == null;\n      if (!t1 && mergedQueries.length === 0)\n        return null;\n      t1 = t1 ? queries : mergedQueries;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new R._EvaluateVisitor_visitMediaRule_closure3(_this, mergedQueries, queries, node), node.hasDeclarations, new R._EvaluateVisitor_visitMediaRule_closure4(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null);\n      return null;\n    },\n    _evaluate0$_visitMediaQueries$1: function(interpolation) {\n      return this._evaluate0$_adjustParseError$2(interpolation, new R._EvaluateVisitor__visitMediaQueries_closure1(this, this._evaluate0$_performInterpolation$2$warnForColor(interpolation, true)));\n    },\n    _evaluate0$_mergeMediaQueries$2: function(queries1, queries2) {\n      var t1, t2, t3, t4, t5, result,\n        queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2);\n      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.legacy_MediaQuerySuccessfulMergeResult_2; t1.moveNext$0();) {\n        t4 = t1.get$current(t1);\n        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {\n          result = t4.merge$1(t5.get$current(t5));\n          if (result === C._SingletonCssMediaQueryMergeResult_empty0)\n            continue;\n          if (result === C._SingletonCssMediaQueryMergeResult_unrepresentable0)\n            return null;\n          queries.push(t3._as(result).query);\n        }\n      }\n      return queries;\n    },\n    visitReturnRule$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitSilentComment$1: function(node) {\n      return null;\n    },\n    visitStyleRule$1: function(node) {\n      var t2, selectorText, parsedSelector, rule, oldAtRootExcludingStyleRule, _this = this, t1 = {};\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));\n      t2 = node.selector;\n      selectorText = _this._evaluate0$_interpolationToValue$3$trim$warnForColor(t2, true, true);\n      if (_this._evaluate0$_inKeyframes) {\n        _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(new F.CssValue0(P.List_List$unmodifiable(_this._evaluate0$_adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure13(_this, selectorText)), type$.legacy_String), t2.span, type$.CssValue_legacy_List_legacy_String_2), node.span), new R._EvaluateVisitor_visitStyleRule_closure14(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure15(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null);\n        return null;\n      }\n      t1.parsedSelector = _this._evaluate0$_adjustParseError$2(t2, new R._EvaluateVisitor_visitStyleRule_closure16(_this, selectorText));\n      parsedSelector = _this._evaluate0$_addExceptionSpan$2(t2, new R._EvaluateVisitor_visitStyleRule_closure17(t1, _this));\n      t1.parsedSelector = parsedSelector;\n      rule = X.ModifiableCssStyleRule$0(_this._evaluate0$_extender.addSelector$3(parsedSelector, t2.span, _this._evaluate0$_mediaQueries), node.span, t1.parsedSelector);\n      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;\n      _this._evaluate0$_atRootExcludingStyleRule = false;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitStyleRule_closure18(_this, rule, node), node.hasDeclarations, new R._EvaluateVisitor_visitStyleRule_closure19(), type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      if (!(_this._evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n        t1 = _this._evaluate0$_parent.children;\n        t1 = !t1.get$isEmpty(t1);\n      } else\n        t1 = false;\n      if (t1) {\n        t1 = _this._evaluate0$_parent.children;\n        t1.get$last(t1).isGroupEnd = true;\n      }\n      return null;\n    },\n    visitSupportsRule$1: function(node) {\n      var t1, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));\n      t1 = node.condition;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(new F.CssValue0(_this._evaluate0$_visitSupportsCondition$1(t1), t1.get$span(), type$.CssValue_legacy_String_2), node.span), new R._EvaluateVisitor_visitSupportsRule_closure3(_this, node), node.hasDeclarations, new R._EvaluateVisitor_visitSupportsRule_closure4(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null);\n      return null;\n    },\n    _evaluate0$_visitSupportsCondition$1: function(condition) {\n      var t1, t2, _this = this;\n      if (condition instanceof U.SupportsOperation0) {\n        t1 = condition.left;\n        t2 = condition.operator;\n        return H.S(_this._evaluate0$_parenthesize$2(t1, t2)) + \" \" + t2 + \" \" + H.S(_this._evaluate0$_parenthesize$2(condition.right, t2));\n      } else if (condition instanceof M.SupportsNegation0)\n        return \"not \" + H.S(_this._evaluate0$_parenthesize$1(condition.condition));\n      else if (condition instanceof X.SupportsInterpolation0) {\n        t1 = condition.expression;\n        return _this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, false);\n      } else if (condition instanceof L.SupportsDeclaration0) {\n        t1 = condition.name;\n        t1 = \"(\" + H.S(_this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, true)) + \": \";\n        t2 = condition.value;\n        return t1 + H.S(_this._evaluate0$_serialize$3$quote(t2.accept$1(_this), t2, true)) + \")\";\n      } else if (condition instanceof F.SupportsFunction0)\n        return _this._evaluate0$_performInterpolation$1(condition.name) + \"(\" + _this._evaluate0$_performInterpolation$1(condition.$arguments) + \")\";\n      else if (condition instanceof Y.SupportsAnything0)\n        return \"(\" + _this._evaluate0$_performInterpolation$1(condition.contents) + \")\";\n      else\n        return null;\n    },\n    _evaluate0$_parenthesize$2: function(condition, operator) {\n      var t1;\n      if (!(condition instanceof M.SupportsNegation0))\n        if (condition instanceof U.SupportsOperation0)\n          t1 = operator == null || operator !== condition.operator;\n        else\n          t1 = false;\n      else\n        t1 = true;\n      if (t1)\n        return \"(\" + H.S(this._evaluate0$_visitSupportsCondition$1(condition)) + \")\";\n      else\n        return this._evaluate0$_visitSupportsCondition$1(condition);\n    },\n    _evaluate0$_parenthesize$1: function(condition) {\n      return this._evaluate0$_parenthesize$2(condition, null);\n    },\n    visitVariableDeclaration$1: function(node) {\n      var t1, value, t2, _this = this, _null = null;\n      if (node.isGuarded) {\n        if (node.namespace == null && _this._evaluate0$_environment._environment0$_variables.length === 1) {\n          t1 = _this._evaluate0$_configuration._configuration$_values;\n          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);\n          if (t1 != null) {\n            _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure5(_this, node, t1));\n            return _null;\n          }\n        }\n        value = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure6(_this, node));\n        if (value != null && !value.$eq(0, C.C_SassNull))\n          return _null;\n      }\n      if (node.isGlobal && !_this._evaluate0$_environment.globalVariableExists$1(node.name)) {\n        t1 = _this._evaluate0$_environment._environment0$_variables.length === 1 ? string$.As_of_S : string$.As_of_C + B.declarationName0(node.span) + \": null` at the root of the\\nstylesheet.\";\n        t2 = node.span;\n        _this._evaluate0$_logger.warn$4$deprecation$span$trace(0, t1, true, t2, _this._evaluate0$_stackTrace$1(t2));\n      }\n      _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableDeclaration_closure7(_this, node, node.expression.accept$1(_this).withoutSlash$0()));\n      return _null;\n    },\n    visitUseRule$1: function(node) {\n      var configuration, t3, _i, variable, t4, t5, _this = this,\n        t1 = node.configuration,\n        t2 = t1.length;\n      if (t2 === 0)\n        configuration = C.Configuration_Map_empty_null_true0;\n      else {\n        t3 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);\n        for (_i = 0; _i < t2; ++_i) {\n          variable = t1[_i];\n          t4 = variable.name;\n          t5 = variable.expression;\n          t3.$indexSet(0, t4, new Z.ConfiguredValue0(t5.accept$1(_this).withoutSlash$0(), variable.span, _this._evaluate0$_expressionNode$1(t5)));\n        }\n        configuration = new A.Configuration0(t3, node, false);\n      }\n      _this._evaluate0$_loadModule$5$configuration(node.url, \"@use\", node, new R._EvaluateVisitor_visitUseRule_closure1(_this, node), configuration);\n      _this._evaluate0$_assertConfigurationIsEmpty$1(configuration);\n      return null;\n    },\n    visitWarnRule$1: function(node) {\n      var _this = this,\n        value = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitWarnRule_closure1(_this, node)),\n        t1 = value instanceof D.SassString0 ? value.text : _this._evaluate0$_serialize$2(value, node.expression);\n      _this._evaluate0$_logger.warn$2$trace(0, t1, _this._evaluate0$_stackTrace$1(node.span));\n      return null;\n    },\n    visitWhileRule$1: function(node) {\n      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new R._EvaluateVisitor_visitWhileRule_closure1(this, node), true, node.hasDeclarations, type$.legacy_Value_2);\n    },\n    visitBinaryOperationExpression$1: function(node) {\n      return this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitBinaryOperationExpression_closure1(this, node));\n    },\n    visitValueExpression$1: function(node) {\n      return node.value;\n    },\n    visitVariableExpression$1: function(node) {\n      var result = this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitVariableExpression_closure1(this, node));\n      if (result != null)\n        return result;\n      throw H.wrapException(this._evaluate0$_exception$2(\"Undefined variable.\", node.span));\n    },\n    visitUnaryOperationExpression$1: function(node) {\n      var operand = node.operand.accept$1(this),\n        t1 = node.operator;\n      switch (t1) {\n        case C.UnaryOperator_j2w0:\n          return operand.unaryPlus$0();\n        case C.UnaryOperator_U4G0:\n          return operand.unaryMinus$0();\n        case C.UnaryOperator_zDx0:\n          operand.toString;\n          return new D.SassString0(\"/\" + N.serializeValue(operand, false, true), false);\n        case C.UnaryOperator_not_not0:\n          return operand.unaryNot$0();\n        default:\n          throw H.wrapException(P.StateError$(\"Unknown unary operator \" + H.S(t1) + \".\"));\n      }\n    },\n    visitBooleanExpression$1: function(node) {\n      return node.value ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    visitIfExpression$1: function(node) {\n      var condition, ifTrue, ifFalse, _this = this,\n        pair = _this._evaluate0$_evaluateMacroArguments$1(node),\n        positional = pair.item1,\n        named = pair.item2,\n        t1 = J.getInterceptor$asx(positional);\n      _this._evaluate0$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration0(), node);\n      condition = t1.get$length(positional) > 0 ? t1.$index(positional, 0) : named.$index(0, \"condition\");\n      ifTrue = t1.get$length(positional) > 1 ? t1.$index(positional, 1) : named.$index(0, \"if-true\");\n      ifFalse = t1.get$length(positional) > 2 ? t1.$index(positional, 2) : named.$index(0, \"if-false\");\n      return (condition.accept$1(_this).get$isTruthy() ? ifTrue : ifFalse).accept$1(_this);\n    },\n    visitNullExpression$1: function(node) {\n      return C.C_SassNull;\n    },\n    visitNumberExpression$1: function(node) {\n      return T.SassNumber$0(node.value, node.unit);\n    },\n    visitParenthesizedExpression$1: function(node) {\n      return node.expression.accept$1(this);\n    },\n    visitColorExpression$1: function(node) {\n      return node.value;\n    },\n    visitListExpression$1: function(node) {\n      var t1 = node.contents;\n      return D.SassList$0(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitListExpression_closure1(this), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value0*>\")), node.separator, node.hasBrackets);\n    },\n    visitMapExpression$1: function(node) {\n      var t2, t3, _i, pair, t4, keyValue, valueValue,\n        t1 = type$.legacy_Value_2,\n        map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1),\n        keyNodes = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_AstNode_2);\n      for (t2 = node.pairs, t3 = t2.length, _i = 0; _i < t3; ++_i) {\n        pair = t2[_i];\n        t4 = pair.item1;\n        keyValue = t4.accept$1(this);\n        valueValue = pair.item2.accept$1(this);\n        if (map.containsKey$1(keyValue))\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(\"Duplicate key.\", t4.get$span(), \"second key\", P.LinkedHashMap_LinkedHashMap$_literal([keyNodes.$index(0, keyValue).get$span(), \"first key\"], type$.legacy_FileSpan, type$.legacy_String), this._evaluate0$_stackTrace$1(t4.get$span())));\n        map.$indexSet(0, keyValue, valueValue);\n        keyNodes.$indexSet(0, keyValue, t4);\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));\n    },\n    visitFunctionExpression$1: function(node) {\n      var oldInFunction, result, _this = this, t1 = {},\n        t2 = node.name,\n        plainName = t2.get$asPlain();\n      t1.$function = null;\n      if ((plainName != null ? t1.$function = _this._evaluate0$_addExceptionSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure3(_this, node, plainName)) : null) == null) {\n        if (node.namespace != null)\n          throw H.wrapException(_this._evaluate0$_exception$2(\"Undefined function.\", node.span));\n        t1.$function = new L.PlainCssCallable0(_this._evaluate0$_performInterpolation$1(t2));\n      }\n      oldInFunction = _this._evaluate0$_inFunction;\n      _this._evaluate0$_inFunction = true;\n      result = _this._evaluate0$_addErrorSpan$2(node, new R._EvaluateVisitor_visitFunctionExpression_closure4(t1, _this, node));\n      _this._evaluate0$_inFunction = oldInFunction;\n      return result;\n    },\n    _evaluate0$_getFunction$2$namespace: function($name, namespace) {\n      var local = this._evaluate0$_environment.getFunction$2$namespace($name, namespace);\n      if (local != null || namespace != null)\n        return local;\n      return this._evaluate0$_builtInFunctions.$index(0, $name);\n    },\n    _evaluate0$_runUserDefinedCallable$4: function($arguments, callable, nodeWithSpan, run) {\n      var evaluated = this._evaluate0$_evaluateArguments$1($arguments),\n        t1 = callable.declaration.name,\n        $name = t1 == null ? \"@content\" : t1 + \"()\";\n      return this._evaluate0$_withStackFrame$3($name, nodeWithSpan, new R._EvaluateVisitor__runUserDefinedCallable_closure1(this, callable, evaluated, nodeWithSpan, run));\n    },\n    _evaluate0$_runFunctionCallable$3: function($arguments, callable, nodeWithSpan) {\n      var result, t1, t2, t3, first, _i, argument, rest, _this = this;\n      if (callable instanceof Q.BuiltInCallable0) {\n        result = _this._evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan);\n        if (result == null)\n          throw H.wrapException(_this._evaluate0$_exception$2(string$.Custom, nodeWithSpan.get$span()));\n        return result.withoutSlash$0();\n      } else if (type$.legacy_UserDefinedCallable_legacy_Environment_2._is(callable))\n        return _this._evaluate0$_runUserDefinedCallable$4($arguments, callable, nodeWithSpan, new R._EvaluateVisitor__runFunctionCallable_closure1(_this, callable)).withoutSlash$0();\n      else if (callable instanceof L.PlainCssCallable0) {\n        t1 = $arguments.named;\n        if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)\n          throw H.wrapException(_this._evaluate0$_exception$2(string$.Plain_, nodeWithSpan.get$span()));\n        t1 = H.S(callable.name) + \"(\";\n        for (t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0; _i < t3; ++_i) {\n          argument = t2[_i];\n          if (first)\n            first = false;\n          else\n            t1 += \", \";\n          t1 += H.S(_this._evaluate0$_serialize$3$quote(argument.accept$1(_this), argument, true));\n        }\n        t2 = $arguments.rest;\n        rest = t2 == null ? null : t2.accept$1(_this);\n        if (rest != null) {\n          if (!first)\n            t1 += \", \";\n          t2 = t1 + H.S(_this._evaluate0$_serialize$2(rest, t2));\n          t1 = t2;\n        }\n        t1 += H.Primitives_stringFromCharCode(41);\n        return new D.SassString0(t1.charCodeAt(0) == 0 ? t1 : t1, false);\n      } else\n        return null;\n    },\n    _evaluate0$_runBuiltInCallable$3: function($arguments, callable, nodeWithSpan) {\n      var callback, result, error, error0, error1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, message0, _this = this,\n        evaluated = _this._evaluate0$_evaluateArguments$2$trackSpans($arguments, false),\n        oldCallableNode = _this._evaluate0$_callableNode;\n      _this._evaluate0$_callableNode = nodeWithSpan;\n      namedSet = new M.MapKeySet(evaluated.named, type$.MapKeySet_legacy_String);\n      tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);\n      overload = tuple.item1;\n      callback = tuple.item2;\n      _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__runBuiltInCallable_closure3(overload, evaluated, namedSet));\n      declaredArguments = overload.$arguments;\n      for (i = evaluated.positional.length, t1 = declaredArguments.length; i < t1; ++i) {\n        argument = declaredArguments[i];\n        t2 = evaluated.positional;\n        t3 = evaluated.named.remove$1(0, argument.name);\n        if (t3 == null) {\n          t3 = argument.defaultValue;\n          t3 = t3 == null ? null : t3.accept$1(_this);\n        }\n        t2.push(t3);\n      }\n      if (overload.restArgument != null) {\n        if (evaluated.positional.length > t1) {\n          rest = C.JSArray_methods.sublist$1(evaluated.positional, t1);\n          C.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);\n        } else\n          rest = C.List_empty16;\n        t1 = evaluated.named;\n        argumentList = D.SassArgumentList$0(rest, t1, evaluated.separator === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : evaluated.separator);\n        evaluated.positional.push(argumentList);\n      } else\n        argumentList = null;\n      result = null;\n      try {\n        result = callback.call$1(evaluated.positional);\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException_2._is(t1))\n          throw exception;\n        else if (t1 instanceof E.MultiSpanSassScriptException0) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, _this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.MultiSpanSassException0) {\n          error0 = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error0._span_exception$_message, error0.get$span(), error0.primaryLabel, error0.secondarySpans, _this._evaluate0$_stackTrace$1(error0.get$span())));\n        } else {\n          error1 = t1;\n          message = null;\n          try {\n            message = H._asStringS(J.get$message$x(error1));\n          } catch (exception) {\n            H.unwrapException(exception);\n            message0 = J.toString$0$(error1);\n            message = message0;\n          }\n          throw H.wrapException(_this._evaluate0$_exception$2(message, nodeWithSpan.get$span()));\n        }\n      }\n      _this._evaluate0$_callableNode = oldCallableNode;\n      if (argumentList == null)\n        return result;\n      t1 = evaluated.named;\n      if (t1.get$isEmpty(t1))\n        return result;\n      if (argumentList._argument_list$_wereKeywordsAccessed)\n        return result;\n      t1 = evaluated.named;\n      t1 = t1.get$keys(t1);\n      t1 = \"No \" + B.pluralize0(\"argument\", t1.get$length(t1), null) + \" named \";\n      t2 = evaluated.named;\n      throw H.wrapException(E.MultiSpanSassRuntimeException$0(t1 + H.S(B.toSentence0(t2.get$keys(t2).map$1$1(0, new R._EvaluateVisitor__runBuiltInCallable_closure4(), type$.legacy_Object), \"or\")) + \".\", nodeWithSpan.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), _this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n    },\n    _evaluate0$_evaluateArguments$2$trackSpans: function($arguments, trackSpans) {\n      var t1, t2, t3, _i, t4, t5, t6, t7, t8, t9, positionalNodes, namedNodes, rest, restNodeForSpan, separator, keywordRest, keywordRestNodeForSpan, _this = this, _null = null;\n      if (trackSpans == null)\n        trackSpans = _this._evaluate0$_sourceMap;\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      for (t2 = $arguments.positional, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i].accept$1(_this));\n      t4 = type$.legacy_String;\n      t5 = type$.legacy_Value_2;\n      t6 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n      for (t7 = $arguments.named, t8 = t7.get$entries(t7), t8 = t8.get$iterator(t8); t8.moveNext$0();) {\n        t9 = t8.get$current(t8);\n        t6.$indexSet(0, t9.key, t9.value.accept$1(_this));\n      }\n      if (trackSpans) {\n        t8 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_AstNode_2);\n        for (_i = 0; _i < t3; ++_i)\n          t8.push(_this._evaluate0$_expressionNode$1(t2[_i]));\n        positionalNodes = t8;\n      } else\n        positionalNodes = _null;\n      if (trackSpans) {\n        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n        for (t3 = t7.get$entries(t7), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n          t7 = t3.get$current(t3);\n          t2.$indexSet(0, t7.key, _this._evaluate0$_expressionNode$1(t7.value));\n        }\n        namedNodes = t2;\n      } else\n        namedNodes = _null;\n      t2 = $arguments.rest;\n      if (t2 == null)\n        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, C.ListSeparator_undecided0);\n      rest = t2.accept$1(_this);\n      restNodeForSpan = trackSpans ? _this._evaluate0$_expressionNode$1(t2) : _null;\n      if (rest instanceof A.SassMap0) {\n        _this._evaluate0$_addRestMap$1$3(t6, rest, t2, t5);\n        if (namedNodes != null) {\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n          for (t3 = rest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t7 = type$.legacy_SassString_2; t3.moveNext$0();)\n            t2.$indexSet(0, t7._as(t3.get$current(t3)).text, restNodeForSpan);\n          namedNodes.addAll$1(0, t2);\n        }\n        separator = C.ListSeparator_undecided0;\n      } else if (rest instanceof D.SassList0) {\n        t2 = rest._list1$_contents;\n        C.JSArray_methods.addAll$1(t1, t2);\n        if (positionalNodes != null)\n          C.JSArray_methods.addAll$1(positionalNodes, P.List_List$filled(t2.length, restNodeForSpan, false, type$.legacy_AstNode_2));\n        separator = rest.separator;\n        if (rest instanceof D.SassArgumentList0) {\n          rest._argument_list$_wereKeywordsAccessed = true;\n          rest._argument_list$_keywords.forEach$1(0, new R._EvaluateVisitor__evaluateArguments_closure1(t6, namedNodes, restNodeForSpan));\n        }\n      } else {\n        t1.push(rest);\n        if (positionalNodes != null)\n          positionalNodes.push(restNodeForSpan);\n        separator = C.ListSeparator_undecided0;\n      }\n      t2 = $arguments.keywordRest;\n      if (t2 == null)\n        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, separator);\n      keywordRest = t2.accept$1(_this);\n      keywordRestNodeForSpan = trackSpans ? _this._evaluate0$_expressionNode$1(t2) : _null;\n      if (keywordRest instanceof A.SassMap0) {\n        _this._evaluate0$_addRestMap$1$3(t6, keywordRest, t2, t5);\n        if (namedNodes != null) {\n          t2 = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.legacy_AstNode_2);\n          for (t3 = keywordRest.contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), t4 = type$.legacy_SassString_2; t3.moveNext$0();)\n            t2.$indexSet(0, t4._as(t3.get$current(t3)).text, keywordRestNodeForSpan);\n          namedNodes.addAll$1(0, t2);\n        }\n        return new R._ArgumentResults1(t1, positionalNodes, t6, namedNodes, separator);\n      } else\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", t2.get$span()));\n    },\n    _evaluate0$_evaluateArguments$1: function($arguments) {\n      return this._evaluate0$_evaluateArguments$2$trackSpans($arguments, null);\n    },\n    _evaluate0$_evaluateMacroArguments$1: function(invocation) {\n      var t3, positional, named, rest, keywordRest, _this = this,\n        t1 = invocation.$arguments,\n        t2 = t1.rest;\n      if (t2 == null)\n        return new S.Tuple2(t1.positional, t1.named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n      t3 = t1.positional;\n      positional = H.setRuntimeTypeInfo(t3.slice(0), H._arrayInstanceType(t3)._eval$1(\"JSArray<1>\"));\n      t3 = type$.legacy_Expression_2;\n      named = P.LinkedHashMap_LinkedHashMap$of(t1.named, type$.legacy_String, t3);\n      rest = t2.accept$1(_this);\n      if (rest instanceof A.SassMap0)\n        _this._evaluate0$_addRestMap$1$4(named, rest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure7(), t3);\n      else if (rest instanceof D.SassList0) {\n        t2 = rest._list1$_contents;\n        C.JSArray_methods.addAll$1(positional, new H.MappedListIterable(t2, new R._EvaluateVisitor__evaluateMacroArguments_closure8(), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Expression0*>\")));\n        if (rest instanceof D.SassArgumentList0) {\n          rest._argument_list$_wereKeywordsAccessed = true;\n          rest._argument_list$_keywords.forEach$1(0, new R._EvaluateVisitor__evaluateMacroArguments_closure9(named));\n        }\n      } else\n        positional.push(new F.ValueExpression0(rest, null));\n      t1 = t1.keywordRest;\n      if (t1 == null)\n        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n      keywordRest = t1.accept$1(_this);\n      if (keywordRest instanceof A.SassMap0) {\n        _this._evaluate0$_addRestMap$1$4(named, keywordRest, invocation, new R._EvaluateVisitor__evaluateMacroArguments_closure10(), t3);\n        return new S.Tuple2(positional, named, type$.Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2);\n      } else\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Variabs + H.S(keywordRest) + \").\", invocation.span));\n    },\n    _evaluate0$_addRestMap$1$4: function(values, map, nodeWithSpan, convert, $T) {\n      var t1 = {};\n      t1.convert = convert;\n      if (convert == null)\n        t1.convert = new R._EvaluateVisitor__addRestMap_closure3($T);\n      map.contents.forEach$1(0, new R._EvaluateVisitor__addRestMap_closure4(t1, this, values, map, nodeWithSpan));\n    },\n    _evaluate0$_addRestMap$1$3: function(values, map, nodeWithSpan, $T) {\n      return this._evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, null, $T);\n    },\n    _evaluate0$_verifyArguments$4: function(positional, named, $arguments, nodeWithSpan) {\n      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__verifyArguments_closure1($arguments, positional, named));\n    },\n    visitSelectorExpression$1: function(node) {\n      var t1 = this._evaluate0$_styleRule;\n      if (t1 == null)\n        return C.C_SassNull;\n      return t1.originalSelector.get$asSassList();\n    },\n    visitStringExpression$1: function(node) {\n      var t1 = node.text.contents;\n      return new D.SassString0(new H.MappedListIterable(t1, new R._EvaluateVisitor_visitStringExpression_closure1(this), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0), node.hasQuotes);\n    },\n    visitCssAtRule$1: function(node) {\n      var wasInKeyframes, wasInUnknownAtRule, t1, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));\n      if (node.isChildless) {\n        _this._evaluate0$_parent.addChild$1(U.ModifiableCssAtRule$0(node.name, node.span, true, node.value));\n        return null;\n      }\n      wasInKeyframes = _this._evaluate0$_inKeyframes;\n      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;\n      t1 = node.name;\n      if (B.unvendor0(t1.get$value(t1)) === \"keyframes\")\n        _this._evaluate0$_inKeyframes = true;\n      else\n        _this._evaluate0$_inUnknownAtRule = true;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssAtRule$0(t1, node.span, false, node.value), new R._EvaluateVisitor_visitCssAtRule_closure3(_this, node), false, new R._EvaluateVisitor_visitCssAtRule_closure4(), type$.legacy_ModifiableCssAtRule_2, type$.Null);\n      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n      _this._evaluate0$_inKeyframes = wasInKeyframes;\n    },\n    visitCssComment$1: function(node) {\n      var _this = this,\n        t1 = _this._evaluate0$_parent,\n        t2 = _this._evaluate0$_root;\n      if (t1 == t2 && _this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source))\n        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;\n      _this._evaluate0$_parent.addChild$1(new R.ModifiableCssComment0(node.text, node.span));\n    },\n    visitCssDeclaration$1: function(node) {\n      var t1 = node.name;\n      this._evaluate0$_parent.addChild$1(L.ModifiableCssDeclaration$0(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), \"--\"), node.valueSpanForMap));\n    },\n    visitCssImport$1: function(node) {\n      var _this = this,\n        modifiableNode = F.ModifiableCssImport$0(node.url, node.span, node.media, node.supports),\n        t1 = _this._evaluate0$_parent,\n        t2 = _this._evaluate0$_root;\n      if (t1 != t2)\n        t1.addChild$1(modifiableNode);\n      else if (_this._evaluate0$_endOfImports === J.get$length$asx(t2.children._collection$_source)) {\n        _this._evaluate0$_root.addChild$1(modifiableNode);\n        _this._evaluate0$_endOfImports = _this._evaluate0$_endOfImports + 1;\n      } else {\n        t1 = _this._evaluate0$_outOfOrderImports;\n        (t1 == null ? _this._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t1).push(modifiableNode);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      this._evaluate0$_withParent$2$4$scopeWhen$through(U.ModifiableCssKeyframeBlock$0(node.selector, node.span), new R._EvaluateVisitor_visitCssKeyframeBlock_closure3(this, node), false, new R._EvaluateVisitor_visitCssKeyframeBlock_closure4(), type$.legacy_ModifiableCssKeyframeBlock_2, type$.Null);\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1, mergedQueries, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));\n      t1 = _this._evaluate0$_mediaQueries;\n      mergedQueries = t1 == null ? null : _this._evaluate0$_mergeMediaQueries$2(t1, node.queries);\n      t1 = mergedQueries == null;\n      if (!t1 && mergedQueries.length === 0)\n        return null;\n      t1 = t1 ? node.queries : mergedQueries;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(G.ModifiableCssMediaRule$0(t1, node.span), new R._EvaluateVisitor_visitCssMediaRule_closure3(_this, mergedQueries, node), false, new R._EvaluateVisitor_visitCssMediaRule_closure4(mergedQueries), type$.legacy_ModifiableCssMediaRule_2, type$.Null);\n    },\n    visitCssStyleRule$1: function(node) {\n      var t1, t2, t3, originalSelector, rule, oldAtRootExcludingStyleRule, _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));\n      t1 = node.selector;\n      t2 = t1.value;\n      t3 = _this._evaluate0$_styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      originalSelector = t2.resolveParentSelectors$2$implicitParent(t3, !_this._evaluate0$_atRootExcludingStyleRule);\n      rule = X.ModifiableCssStyleRule$0(_this._evaluate0$_extender.addSelector$3(originalSelector, t1.span, _this._evaluate0$_mediaQueries), node.span, originalSelector);\n      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;\n      _this._evaluate0$_atRootExcludingStyleRule = false;\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new R._EvaluateVisitor_visitCssStyleRule_closure3(_this, rule, node), false, new R._EvaluateVisitor_visitCssStyleRule_closure4(), type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      if (!(_this._evaluate0$_styleRule != null && !oldAtRootExcludingStyleRule)) {\n        t1 = _this._evaluate0$_parent.children;\n        t1 = !t1.get$isEmpty(t1);\n      } else\n        t1 = false;\n      if (t1) {\n        t1 = _this._evaluate0$_parent.children;\n        t1.get$last(t1).isGroupEnd = true;\n      }\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1;\n      for (t1 = J.get$iterator$ax(node.get$children(node)); t1.moveNext$0();)\n        t1.get$current(t1).accept$1(this);\n    },\n    visitCssSupportsRule$1: function(node) {\n      var _this = this;\n      if (_this._evaluate0$_declarationName != null)\n        throw H.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));\n      _this._evaluate0$_withParent$2$4$scopeWhen$through(B.ModifiableCssSupportsRule$0(node.condition, node.span), new R._EvaluateVisitor_visitCssSupportsRule_closure3(_this, node), false, new R._EvaluateVisitor_visitCssSupportsRule_closure4(), type$.legacy_ModifiableCssSupportsRule_2, type$.Null);\n    },\n    _evaluate0$_handleReturn$1$2: function(list, callback) {\n      var t1, _i, result;\n      for (t1 = list.length, _i = 0; _i < list.length; list.length === t1 || (0, H.throwConcurrentModificationError)(list), ++_i) {\n        result = callback.call$1(list[_i]);\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    _evaluate0$_handleReturn$2: function(list, callback) {\n      return this._evaluate0$_handleReturn$1$2(list, callback, type$.dynamic);\n    },\n    _evaluate0$_withEnvironment$1$2: function(environment, callback) {\n      var result,\n        oldEnvironment = this._evaluate0$_environment;\n      this._evaluate0$_environment = environment;\n      result = callback.call$0();\n      this._evaluate0$_environment = oldEnvironment;\n      return result;\n    },\n    _evaluate0$_withEnvironment$2: function(environment, callback) {\n      return this._evaluate0$_withEnvironment$1$2(environment, callback, type$.dynamic);\n    },\n    _evaluate0$_interpolationToValue$3$trim$warnForColor: function(interpolation, trim, warnForColor) {\n      var result = this._evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor),\n        t1 = trim ? B.trimAscii0(result, true) : result;\n      return new F.CssValue0(t1, interpolation.span, type$.CssValue_legacy_String_2);\n    },\n    _evaluate0$_interpolationToValue$1: function(interpolation) {\n      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);\n    },\n    _evaluate0$_interpolationToValue$2$warnForColor: function(interpolation, warnForColor) {\n      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);\n    },\n    _evaluate0$_performInterpolation$2$warnForColor: function(interpolation, warnForColor) {\n      var t1 = interpolation.contents;\n      return new H.MappedListIterable(t1, new R._EvaluateVisitor__performInterpolation_closure1(this, warnForColor), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    _evaluate0$_performInterpolation$1: function(interpolation) {\n      return this._evaluate0$_performInterpolation$2$warnForColor(interpolation, false);\n    },\n    _evaluate0$_serialize$3$quote: function(value, nodeWithSpan, quote) {\n      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new R._EvaluateVisitor__serialize_closure1(value, quote));\n    },\n    _evaluate0$_serialize$2: function(value, nodeWithSpan) {\n      return this._evaluate0$_serialize$3$quote(value, nodeWithSpan, true);\n    },\n    _evaluate0$_expressionNode$1: function(expression) {\n      var t1;\n      if (!this._evaluate0$_sourceMap)\n        return null;\n      if (expression instanceof S.VariableExpression0) {\n        t1 = this._evaluate0$_environment.getVariableNode$2$namespace(expression.name, expression.namespace);\n        return t1 == null ? expression : t1;\n      } else\n        return expression;\n    },\n    _evaluate0$_withParent$2$4$scopeWhen$through: function(node, callback, scopeWhen, through, $S, $T) {\n      var oldParent, result, _this = this;\n      _this._evaluate0$_addChild$2$through(node, through);\n      oldParent = _this._evaluate0$_parent;\n      _this._evaluate0$_parent = node;\n      result = _this._evaluate0$_environment.scope$1$2$when(callback, scopeWhen, $T._eval$1(\"0*\"));\n      _this._evaluate0$_parent = oldParent;\n      return result;\n    },\n    _evaluate0$_withParent$2$3$scopeWhen: function(node, callback, scopeWhen, $S, $T) {\n      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);\n    },\n    _evaluate0$_withParent$2$2: function(node, callback, $S, $T) {\n      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);\n    },\n    _evaluate0$_addChild$2$through: function(node, through) {\n      var grandparent,\n        $parent = this._evaluate0$_parent;\n      if (through != null) {\n        for (; through.call$1($parent);)\n          $parent = $parent._node2$_parent;\n        if ($parent.get$hasFollowingSibling()) {\n          grandparent = $parent._node2$_parent;\n          $parent = $parent.copyWithoutChildren$0();\n          grandparent.addChild$1($parent);\n        }\n      }\n      $parent.addChild$1(node);\n    },\n    _evaluate0$_addChild$1: function(node) {\n      return this._evaluate0$_addChild$2$through(node, null);\n    },\n    _evaluate0$_withStyleRule$1$2: function(rule, callback) {\n      var result,\n        oldRule = this._evaluate0$_styleRule;\n      this._evaluate0$_styleRule = rule;\n      result = callback.call$0();\n      this._evaluate0$_styleRule = oldRule;\n      return result;\n    },\n    _evaluate0$_withStyleRule$2: function(rule, callback) {\n      return this._evaluate0$_withStyleRule$1$2(rule, callback, type$.dynamic);\n    },\n    _evaluate0$_withMediaQueries$1$2: function(queries, callback) {\n      var result,\n        oldMediaQueries = this._evaluate0$_mediaQueries;\n      this._evaluate0$_mediaQueries = queries;\n      result = callback.call$0();\n      this._evaluate0$_mediaQueries = oldMediaQueries;\n      return result;\n    },\n    _evaluate0$_withMediaQueries$2: function(queries, callback) {\n      return this._evaluate0$_withMediaQueries$1$2(queries, callback, type$.dynamic);\n    },\n    _evaluate0$_withStackFrame$1$3: function(member, nodeWithSpan, callback) {\n      var oldMember, result, _this = this,\n        t1 = _this._evaluate0$_stack;\n      t1.push(new S.Tuple2(_this._evaluate0$_member, nodeWithSpan, type$.Tuple2_of_legacy_String_and_legacy_AstNode_2));\n      oldMember = _this._evaluate0$_member;\n      _this._evaluate0$_member = member;\n      result = callback.call$0();\n      _this._evaluate0$_member = oldMember;\n      t1.pop();\n      return result;\n    },\n    _evaluate0$_withStackFrame$3: function(member, nodeWithSpan, callback) {\n      return this._evaluate0$_withStackFrame$1$3(member, nodeWithSpan, callback, type$.dynamic);\n    },\n    _evaluate0$_stackFrame$2: function(member, span) {\n      var url = span.file.url;\n      return B.frameForSpan0(span, member, url != null && this._evaluate0$_importCache != null ? this._evaluate0$_importCache.humanize$1(url) : url);\n    },\n    _evaluate0$_stackTrace$1: function(span) {\n      var t2, cur, _this = this,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Frame);\n      for (t2 = _this._evaluate0$_stack, t2 = new H.MappedListIterable(t2, new R._EvaluateVisitor__stackTrace_closure1(_this), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Frame*>\")), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        t1.push(cur);\n      }\n      if (span != null)\n        t1.push(_this._evaluate0$_stackFrame$2(_this._evaluate0$_member, span));\n      return new Y.Trace(P.List_List$unmodifiable(new H.ReversedListIterable(t1, type$.ReversedListIterable_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    _evaluate0$_stackTrace$0: function() {\n      return this._evaluate0$_stackTrace$1(null);\n    },\n    _evaluate0$_warn$3$deprecation: function(message, span, deprecation) {\n      return this._evaluate0$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, this._evaluate0$_stackTrace$1(span));\n    },\n    _evaluate0$_warn$2: function(message, span) {\n      return this._evaluate0$_warn$3$deprecation(message, span, false);\n    },\n    _evaluate0$_exception$2: function(message, span) {\n      var t1 = span == null ? C.JSArray_methods.get$last(this._evaluate0$_stack).item2.get$span() : span;\n      return new E.SassRuntimeException0(this._evaluate0$_stackTrace$1(span), message, t1);\n    },\n    _evaluate0$_exception$1: function(message) {\n      return this._evaluate0$_exception$2(message, null);\n    },\n    _evaluate0$_multiSpanException$3: function(message, primaryLabel, secondaryLabels) {\n      var t1 = C.JSArray_methods.get$last(this._evaluate0$_stack).item2.get$span();\n      return new E.MultiSpanSassRuntimeException0(this._evaluate0$_stackTrace$0(), primaryLabel, H.ConstantMap_ConstantMap$from(secondaryLabels, type$.legacy_FileSpan, type$.legacy_String), message, t1);\n    },\n    _evaluate0$_adjustParseError$1$2: function(nodeWithSpan, callback) {\n      var error, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, _null = null;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException0) {\n          error = t1;\n          t1 = error;\n          errorText = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(t1).file._decodedChars, 0, _null), 0, _null);\n          span = nodeWithSpan.get$span();\n          t1 = span;\n          t2 = span;\n          syntheticFile = C.JSString_methods.replaceRange$3(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), Y.FileLocation$_(t1.file, t1._file$_start).offset, Y.FileLocation$_(t2.file, t2._end).offset, errorText);\n          t2 = Y.SourceFile$fromString(syntheticFile, span.file.url);\n          t1 = span;\n          t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n          t3 = error;\n          t3 = G.SourceSpanException.prototype.get$span.call(t3);\n          t3 = Y.FileLocation$_(t3.file, t3._file$_start);\n          t4 = span;\n          t4 = Y.FileLocation$_(t4.file, t4._file$_start);\n          t5 = error;\n          t5 = G.SourceSpanException.prototype.get$span.call(t5);\n          syntheticSpan = t2.span$2(t1.offset + t3.offset, t4.offset + Y.FileLocation$_(t5.file, t5._end).offset);\n          throw H.wrapException(this._evaluate0$_exception$2(error._span_exception$_message, syntheticSpan));\n        } else\n          throw exception;\n      }\n    },\n    _evaluate0$_adjustParseError$2: function(nodeWithSpan, callback) {\n      return this._evaluate0$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _evaluate0$_addExceptionSpan$1$2: function(nodeWithSpan, callback) {\n      var error, error0, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.MultiSpanSassScriptException0) {\n          error = t1;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error.message, nodeWithSpan.get$span(), error.primaryLabel, error.secondarySpans, this._evaluate0$_stackTrace$1(nodeWithSpan.get$span())));\n        } else if (t1 instanceof E.SassScriptException0) {\n          error0 = t1;\n          throw H.wrapException(this._evaluate0$_exception$2(error0.message, nodeWithSpan.get$span()));\n        } else\n          throw exception;\n      }\n    },\n    _evaluate0$_addExceptionSpan$2: function(nodeWithSpan, callback) {\n      return this._evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    },\n    _evaluate0$_addErrorSpan$1$2: function(nodeWithSpan, callback) {\n      var error, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException_2._is(t1)) {\n          error = t1;\n          t1 = error.get$span();\n          if (!C.JSString_methods.startsWith$1(P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), \"@error\"))\n            throw exception;\n          throw H.wrapException(E.SassRuntimeException$0(error._span_exception$_message, nodeWithSpan.get$span(), this._evaluate0$_stackTrace$0()));\n        } else\n          throw exception;\n      }\n    },\n    _evaluate0$_addErrorSpan$2: function(nodeWithSpan, callback) {\n      return this._evaluate0$_addErrorSpan$1$2(nodeWithSpan, callback, type$.dynamic);\n    }\n  };\n  R._EvaluateVisitor_closure19.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._evaluate0$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module.text) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  R._EvaluateVisitor_closure20.prototype = {\n    call$1: function($arguments) {\n      var variable = J.$index$asx($arguments, 0).assertString$1(\"name\"),\n        t1 = this.$this._evaluate0$_environment,\n        t2 = variable.text;\n      t2.toString;\n      return t1.getVariable$1(H.stringReplaceAllUnchecked(t2, \"_\", \"-\")) != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  R._EvaluateVisitor_closure21.prototype = {\n    call$1: function($arguments) {\n      var module, t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this;\n      t2 = t1._evaluate0$_environment;\n      t3 = variable.text;\n      t3.toString;\n      t4 = H.stringReplaceAllUnchecked(t3, \"_\", \"-\");\n      return t2.getFunction$2$namespace(t4, module == null ? null : module.text) != null || t1._evaluate0$_builtInFunctions.containsKey$1(t3) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  R._EvaluateVisitor_closure22.prototype = {\n    call$1: function($arguments) {\n      var module, t2,\n        t1 = J.getInterceptor$asx($arguments),\n        variable = t1.$index($arguments, 0).assertString$1(\"name\");\n      t1 = t1.$index($arguments, 1).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      t1 = this.$this._evaluate0$_environment;\n      t2 = variable.text;\n      t2.toString;\n      t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return t1.getMixin$2$namespace(t2, module == null ? null : module.text) != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  R._EvaluateVisitor_closure23.prototype = {\n    call$1: function($arguments) {\n      var t1 = this.$this._evaluate0$_environment;\n      if (!t1._environment0$_inMixin)\n        throw H.wrapException(E.SassScriptException$0(string$.conten));\n      return t1._environment0$_content != null ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  R._EvaluateVisitor_closure24.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString0(t4.key, true), t4.value);\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 37\n  };\n  R._EvaluateVisitor_closure25.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.$index$asx($arguments, 0).assertString$1(\"module\").text,\n        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);\n      if (module == null)\n        throw H.wrapException('There is no module with namespace \"' + H.S(t1) + '\".');\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, new D.SassString0(t4.key, true), new F.SassFunction0(t4.value));\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 37\n  };\n  R._EvaluateVisitor_closure26.prototype = {\n    call$1: function($arguments) {\n      var module, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $name = t1.$index($arguments, 0).assertString$1(\"name\"),\n        css = t1.$index($arguments, 1).get$isTruthy();\n      t1 = t1.$index($arguments, 2).get$realNull();\n      module = t1 == null ? null : t1.assertString$1(\"module\");\n      if (css && module != null)\n        throw H.wrapException(string$.x24css_a);\n      if (css)\n        callable = new L.PlainCssCallable0($name.text);\n      else {\n        t1 = this.$this;\n        callable = t1._evaluate0$_addExceptionSpan$2(t1._evaluate0$_callableNode, new R._EvaluateVisitor__closure7(t1, $name, module));\n      }\n      if (callable != null)\n        return new F.SassFunction0(callable);\n      throw H.wrapException(\"Function not found: \" + $name.toString$0(0));\n    },\n    $signature: 142\n  };\n  R._EvaluateVisitor__closure7.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this.name.text;\n      t1.toString;\n      t1 = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t2 = this.module;\n      t2 = t2 == null ? null : t2.text;\n      return this.$this._evaluate0$_getFunction$2$namespace(t1, t2);\n    },\n    $signature: 124\n  };\n  R._EvaluateVisitor_closure27.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, invocation, callable,\n        t1 = J.getInterceptor$asx($arguments),\n        $function = t1.$index($arguments, 0),\n        args = type$.legacy_SassArgumentList_2._as(t1.$index($arguments, 1));\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n      t2 = type$.legacy_String;\n      t3 = type$.legacy_Expression_2;\n      t4 = this.$this;\n      t5 = t4._evaluate0$_callableNode.get$span();\n      t6 = t4._evaluate0$_callableNode.get$span();\n      args._argument_list$_wereKeywordsAccessed = true;\n      t7 = args._argument_list$_keywords;\n      if (t7.get$isEmpty(t7))\n        t7 = null;\n      else {\n        t8 = type$.legacy_Value_2;\n        t9 = P.LinkedHashMap_LinkedHashMap$_empty(t8, t8);\n        for (args._argument_list$_wereKeywordsAccessed = true, t7 = t7.get$entries(t7), t7 = t7.get$iterator(t7); t7.moveNext$0();) {\n          t10 = t7.get$current(t7);\n          t9.$indexSet(0, new D.SassString0(t10.key, false), t10.value);\n        }\n        t7 = new F.ValueExpression0(new A.SassMap0(H.ConstantMap_ConstantMap$from(t9, t8, t8)), t4._evaluate0$_callableNode.get$span());\n      }\n      invocation = new X.ArgumentInvocation0(P.List_List$unmodifiable(t1, t3), H.ConstantMap_ConstantMap$from(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), t2, t3), new F.ValueExpression0(args, t6), t7, t5);\n      if ($function instanceof D.SassString0) {\n        N.warn0(string$.Passins + $function.toString$0(0) + \")) instead.\", true);\n        return t4.visitFunctionExpression$1(new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo([$function.text], type$.JSArray_legacy_Object), t4._evaluate0$_callableNode.get$span()), invocation, t4._evaluate0$_callableNode.get$span()));\n      }\n      callable = $function.assertFunction$1(\"function\").callable;\n      if (type$.legacy_Callable_2._is(callable))\n        return t4._evaluate0$_runFunctionCallable$3(invocation, callable, t4._evaluate0$_callableNode);\n      else\n        throw H.wrapException(E.SassScriptException$0(\"The function \" + H.S(callable.get$name(callable)) + string$.x20is_as));\n    },\n    $signature: 3\n  };\n  R._EvaluateVisitor_closure28.prototype = {\n    call$1: function($arguments) {\n      var withMap, values, configuration, t2, t3, _null = null,\n        t1 = J.getInterceptor$asx($arguments),\n        url = P.Uri_parse(t1.$index($arguments, 0).assertString$1(\"url\").text);\n      t1 = t1.$index($arguments, 1).get$realNull();\n      t1 = t1 == null ? _null : t1.assertMap$1(\"with\");\n      withMap = t1 == null ? _null : t1.contents;\n      if (withMap != null) {\n        values = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_ConfiguredValue_2);\n        t1 = this.$this;\n        withMap.forEach$1(0, new R._EvaluateVisitor__closure5(values, t1._evaluate0$_callableNode.get$span()));\n        configuration = new A.Configuration0(values, t1._evaluate0$_callableNode, false);\n      } else\n        configuration = C.Configuration_Map_empty_null_true0;\n      t1 = this.$this;\n      t2 = t1._evaluate0$_callableNode;\n      t3 = t2.get$span();\n      t3 = t3 == null ? _null : t3.file.url;\n      t1._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, \"load-css()\", t2, new R._EvaluateVisitor__closure6(t1), t3, configuration, true);\n      t1._evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, true);\n      return _null;\n    },\n    $signature: 109\n  };\n  R._EvaluateVisitor__closure5.prototype = {\n    call$2: function(variable, value) {\n      var $name,\n        t1 = variable.assertString$1(\"with key\").text;\n      t1.toString;\n      $name = H.stringReplaceAllUnchecked(t1, \"_\", \"-\");\n      t1 = this.values;\n      if (t1.containsKey$1($name))\n        throw H.wrapException(\"The variable $\" + $name + \" was configured twice.\");\n      t1.$indexSet(0, $name, new Z.ConfiguredValue0(value, this.span, null));\n    },\n    $signature: 50\n  };\n  R._EvaluateVisitor__closure6.prototype = {\n    call$1: function(module) {\n      var t1 = this.$this;\n      return t1._evaluate0$_combineCss$2$clone(module, true).accept$1(t1);\n    },\n    $signature: 180\n  };\n  R._EvaluateVisitor_run_closure1.prototype = {\n    call$0: function() {\n      var t2, _this = this,\n        t1 = _this.node,\n        url = t1.span.file.url;\n      if (url != null) {\n        t2 = _this.$this;\n        t2._evaluate0$_activeModules.$indexSet(0, url, null);\n        if (t2._nodeImporter != null)\n          if (url.get$scheme() === \"file\")\n            t2._includedFiles.add$1(0, $.$get$context().style.pathFromUri$1(M._parseUri(url)));\n          else if (url.toString$0(0) !== \"stdin\")\n            t2._includedFiles.add$1(0, url.toString$0(0));\n      }\n      t2 = _this.$this;\n      return new E.EvaluateResult0(t2._evaluate0$_combineCss$1(t2._evaluate0$_execute$2(_this.importer, t1)), t2._includedFiles);\n    },\n    $signature: 336\n  };\n  R._EvaluateVisitor__withWarnCallback_closure1.prototype = {\n    call$2: function(message, deprecation) {\n      var t1 = this.$this,\n        t2 = t1._evaluate0$_importSpan;\n      return t1._evaluate0$_warn$3$deprecation(message, t2 == null ? t1._evaluate0$_callableNode.get$span() : t2, deprecation);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 75\n  };\n  R._EvaluateVisitor__loadModule_closure3.prototype = {\n    call$0: function() {\n      return this.callback.call$1(this.builtInModule);\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor__loadModule_closure4.prototype = {\n    call$0: function() {\n      var module, error, error0, error1, error2, message, previousLoad, exception, _this = this,\n        t1 = _this.$this,\n        t2 = _this.nodeWithSpan,\n        result = t1._evaluate0$_loadStylesheet$3$baseUrl(J.toString$0$(_this.url), t2.get$span(), _this.baseUrl),\n        importer = result.item1,\n        stylesheet = result.item2,\n        canonicalUrl = stylesheet.span.file.url,\n        t3 = t1._evaluate0$_activeModules;\n      if (t3.containsKey$1(canonicalUrl)) {\n        message = _this.namesInErrors ? \"Module loop: \" + H.S($.$get$context().prettyUri$1(canonicalUrl)) + \" is already being loaded.\" : string$.Module;\n        previousLoad = t3.$index(0, canonicalUrl);\n        throw H.wrapException(previousLoad == null ? t1._evaluate0$_exception$1(message) : t1._evaluate0$_multiSpanException$3(message, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      t3.$indexSet(0, canonicalUrl, t2);\n      module = null;\n      try {\n        module = t1._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, _this.configuration, _this.namesInErrors, t2);\n      } finally {\n        t3.remove$1(0, canonicalUrl);\n      }\n      try {\n        _this.callback.call$1(module);\n      } catch (exception) {\n        t2 = H.unwrapException(exception);\n        if (type$.legacy_SassRuntimeException_2._is(t2))\n          throw exception;\n        else if (t2 instanceof E.MultiSpanSassException0) {\n          error = t2;\n          throw H.wrapException(E.MultiSpanSassRuntimeException$0(error._span_exception$_message, error.get$span(), error.primaryLabel, error.secondarySpans, t1._evaluate0$_stackTrace$1(error.get$span())));\n        } else if (t2 instanceof E.SassException0) {\n          error0 = t2;\n          throw H.wrapException(t1._evaluate0$_exception$2(error0._span_exception$_message, error0.get$span()));\n        } else if (t2 instanceof E.MultiSpanSassScriptException0) {\n          error1 = t2;\n          throw H.wrapException(t1._evaluate0$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans));\n        } else if (t2 instanceof E.SassScriptException0) {\n          error2 = t2;\n          throw H.wrapException(t1._evaluate0$_exception$1(error2.message));\n        } else\n          throw exception;\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__execute_closure1.prototype = {\n    call$0: function() {\n      var t2, t3, t4, css, _this = this,\n        t1 = _this.$this,\n        oldImporter = t1._evaluate0$_importer,\n        oldStylesheet = t1._evaluate0$_stylesheet,\n        oldRoot = t1._evaluate0$_root,\n        oldParent = t1._evaluate0$_parent,\n        oldEndOfImports = t1._evaluate0$_endOfImports,\n        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,\n        oldExtender = t1._evaluate0$_extender,\n        oldStyleRule = t1._evaluate0$_styleRule,\n        oldMediaQueries = t1._evaluate0$_mediaQueries,\n        oldDeclarationName = t1._evaluate0$_declarationName,\n        oldInUnknownAtRule = t1._evaluate0$_inUnknownAtRule,\n        oldAtRootExcludingStyleRule = t1._evaluate0$_atRootExcludingStyleRule,\n        oldInKeyframes = t1._evaluate0$_inKeyframes,\n        oldConfiguration = t1._evaluate0$_configuration;\n      t1._evaluate0$_importer = _this.importer;\n      t2 = t1._evaluate0$_stylesheet = _this.stylesheet;\n      t3 = t2.span;\n      t1._evaluate0$_parent = t1._evaluate0$_root = V.ModifiableCssStylesheet$0(t3);\n      t1._evaluate0$_endOfImports = 0;\n      t1._evaluate0$_outOfOrderImports = null;\n      t1._evaluate0$_extender = _this.extender;\n      t1._evaluate0$_declarationName = t1._evaluate0$_mediaQueries = t1._evaluate0$_styleRule = null;\n      t1._evaluate0$_inKeyframes = t1._evaluate0$_atRootExcludingStyleRule = t1._evaluate0$_inUnknownAtRule = false;\n      t4 = _this.configuration;\n      if (t4 != null)\n        t1._evaluate0$_configuration = t4;\n      t1.visitStylesheet$1(t2);\n      css = t1._evaluate0$_outOfOrderImports == null ? t1._evaluate0$_root : new V.CssStylesheet0(new P.UnmodifiableListView(t1._evaluate0$_addOutOfOrderImports$0(), type$.UnmodifiableListView_legacy_CssNode_2), t3);\n      _this._box_0.css = css;\n      t1._evaluate0$_importer = oldImporter;\n      t1._evaluate0$_stylesheet = oldStylesheet;\n      t1._evaluate0$_root = oldRoot;\n      t1._evaluate0$_parent = oldParent;\n      t1._evaluate0$_endOfImports = oldEndOfImports;\n      t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;\n      t1._evaluate0$_extender = oldExtender;\n      t1._evaluate0$_styleRule = oldStyleRule;\n      t1._evaluate0$_mediaQueries = oldMediaQueries;\n      t1._evaluate0$_declarationName = oldDeclarationName;\n      t1._evaluate0$_inUnknownAtRule = oldInUnknownAtRule;\n      t1._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n      t1._evaluate0$_inKeyframes = oldInKeyframes;\n      t1._evaluate0$_configuration = oldConfiguration;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__combineCss_closure5.prototype = {\n    call$1: function(module) {\n      return module.get$transitivelyContainsCss();\n    },\n    $signature: 103\n  };\n  R._EvaluateVisitor__combineCss_closure6.prototype = {\n    call$1: function(target) {\n      return !this.selectors.contains$1(0, target);\n    },\n    $signature: 20\n  };\n  R._EvaluateVisitor__combineCss_closure7.prototype = {\n    call$1: function(module) {\n      return module.cloneCss$0();\n    },\n    $signature: 175\n  };\n  R._EvaluateVisitor__extendModules_closure3.prototype = {\n    call$1: function(target) {\n      return !this.originalSelectors.contains$1(0, target);\n    },\n    $signature: 20\n  };\n  R._EvaluateVisitor__extendModules_closure4.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extender_2);\n    },\n    $signature: 148\n  };\n  R._EvaluateVisitor__topologicalModules_visitModule1.prototype = {\n    call$1: function(module) {\n      var t1, t2, t3, _i, upstream;\n      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        upstream = t1[_i];\n        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))\n          this.call$1(upstream);\n      }\n      this.sorted.addFirst$1(module);\n    },\n    $signature: 180\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure5.prototype = {\n    call$0: function() {\n      return V.AtRootQueryParser$0(this.resolved, this.$this._evaluate0$_logger, null).parse$0();\n    },\n    $signature: 97\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure6.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRootRule_closure7.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure11.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        oldParent = t1._evaluate0$_parent;\n      t1._evaluate0$_parent = this.newParent;\n      t1._evaluate0$_environment.scope$1$2$when(callback, this.node.hasDeclarations, type$.void);\n      t1._evaluate0$_parent = oldParent;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure12.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        oldAtRootExcludingStyleRule = t1._evaluate0$_atRootExcludingStyleRule;\n      t1._evaluate0$_atRootExcludingStyleRule = true;\n      this.innerScope.call$1(callback);\n      t1._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure13.prototype = {\n    call$1: function(callback) {\n      return this.$this._evaluate0$_withMediaQueries$2(null, new R._EvaluateVisitor__scopeForAtRoot__closure1(this.innerScope, callback));\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot__closure1.prototype = {\n    call$0: function() {\n      return this.innerScope.call$1(this.callback);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure14.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        wasInKeyframes = t1._evaluate0$_inKeyframes;\n      t1._evaluate0$_inKeyframes = false;\n      this.innerScope.call$1(callback);\n      t1._evaluate0$_inKeyframes = wasInKeyframes;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure15.prototype = {\n    call$1: function($parent) {\n      return type$.legacy_CssAtRule_2._is($parent);\n    },\n    $signature: 150\n  };\n  R._EvaluateVisitor__scopeForAtRoot_closure16.prototype = {\n    call$1: function(callback) {\n      var t1 = this.$this,\n        wasInUnknownAtRule = t1._evaluate0$_inUnknownAtRule;\n      t1._evaluate0$_inUnknownAtRule = false;\n      this.innerScope.call$1(callback);\n      t1._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;\n    },\n    $signature: 33\n  };\n  R._EvaluateVisitor_visitContentRule_closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.content.declaration.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitDeclaration_closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitEachRule_closure5.prototype = {\n    call$1: function(value) {\n      return this.$this._evaluate0$_environment.setLocalVariable$3(C.JSArray_methods.get$first(this.node.variables), value.withoutSlash$0(), this.nodeWithSpan);\n    },\n    $signature: 70\n  };\n  R._EvaluateVisitor_visitEachRule_closure6.prototype = {\n    call$1: function(value) {\n      return this.$this._evaluate0$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);\n    },\n    $signature: 70\n  };\n  R._EvaluateVisitor_visitEachRule_closure7.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._evaluate0$_handleReturn$2(_this.list.get$asList(), new R._EvaluateVisitor_visitEachRule__closure1(t1, _this.setVariables, _this.node));\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitEachRule__closure1.prototype = {\n    call$1: function(element) {\n      var t1;\n      this.setVariables.call$1(element);\n      t1 = this.$this;\n      return t1._evaluate0$_handleReturn$2(this.node.children, new R._EvaluateVisitor_visitEachRule___closure1(t1));\n    },\n    $signature: 73\n  };\n  R._EvaluateVisitor_visitEachRule___closure1.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 67\n  };\n  R._EvaluateVisitor_visitExtendRule_closure1.prototype = {\n    call$0: function() {\n      return D.SelectorList_SelectorList$parse0(B.trimAscii0(this.targetText.value, true), false, true, this.$this._evaluate0$_logger);\n    },\n    $signature: 43\n  };\n  R._EvaluateVisitor_visitAtRule_closure3.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._evaluate0$_styleRule;\n      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule) || t1._evaluate0$_inKeyframes)\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitAtRule__closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRule__closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitAtRule_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitForRule_closure9.prototype = {\n    call$0: function() {\n      return this.node.from.accept$1(this.$this).assertNumber$0();\n    },\n    $signature: 183\n  };\n  R._EvaluateVisitor_visitForRule_closure10.prototype = {\n    call$0: function() {\n      return this.node.to.accept$1(this.$this).assertNumber$0();\n    },\n    $signature: 183\n  };\n  R._EvaluateVisitor_visitForRule_closure11.prototype = {\n    call$0: function() {\n      var t1 = this.toNumber,\n        t2 = t1.numeratorUnits;\n      t1 = t1.denominatorUnits;\n      return T.SassNumber$withUnits0(this.fromNumber.valueInUnits$2(t2, t1), t1, t2).assertInt$0();\n    },\n    $signature: 11\n  };\n  R._EvaluateVisitor_visitForRule_closure12.prototype = {\n    call$0: function() {\n      return this.toNumber.assertInt$0();\n    },\n    $signature: 11\n  };\n  R._EvaluateVisitor_visitForRule_closure13.prototype = {\n    call$0: function() {\n      var i, t3, t4, t5, result, _this = this,\n        t1 = _this.$this,\n        t2 = _this.node,\n        nodeWithSpan = t1._evaluate0$_expressionNode$1(t2.from);\n      for (i = _this.from, t3 = _this._box_0, t4 = _this.direction, t5 = t2.variable, t2 = t2.children; i !== t3.to; i += t4) {\n        t1._evaluate0$_environment.setLocalVariable$3(t5, T.SassNumber$0(i, null), nodeWithSpan);\n        result = t1._evaluate0$_handleReturn$2(t2, new R._EvaluateVisitor_visitForRule__closure1(t1));\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitForRule__closure1.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 67\n  };\n  R._EvaluateVisitor_visitForwardRule_closure3.prototype = {\n    call$1: function(module) {\n      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 98\n  };\n  R._EvaluateVisitor_visitForwardRule_closure4.prototype = {\n    call$1: function(module) {\n      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);\n    },\n    $signature: 98\n  };\n  R._EvaluateVisitor__assertConfigurationIsEmpty_closure1.prototype = {\n    call$2: function($name, value) {\n      var t1 = this.only;\n      if (t1 != null && !t1.contains$1(0, $name))\n        return;\n      t1 = this.nameInError ? \"$\" + H.S($name) + string$.x20was_n : string$.This_v;\n      throw H.wrapException(this.$this._evaluate0$_exception$2(t1, value.configurationSpan));\n    },\n    $signature: 158\n  };\n  R._EvaluateVisitor_visitIfRule_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      return t1._evaluate0$_handleReturn$2(this._box_0.clause.children, new R._EvaluateVisitor_visitIfRule__closure1(t1));\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitIfRule__closure1.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 67\n  };\n  R._EvaluateVisitor__visitDynamicImport_closure1.prototype = {\n    call$0: function() {\n      var previousLoad, oldImporter, oldStylesheet, t4, t5, t6, t7, t8, t9, t10, t11, environment, module, visitor, _null = null,\n        _s34_ = \"This file is already being loaded.\",\n        _box_0 = {},\n        t1 = this.$this,\n        t2 = this.$import,\n        result = t1._evaluate0$_loadStylesheet$3$forImport(t2.url, t2.span, true),\n        importer = result.item1,\n        stylesheet = result.item2,\n        url = stylesheet.span.file.url,\n        t3 = t1._evaluate0$_activeModules;\n      if (t3.containsKey$1(url)) {\n        previousLoad = t3.$index(0, url);\n        throw H.wrapException(previousLoad == null ? t1._evaluate0$_exception$1(_s34_) : t1._evaluate0$_multiSpanException$3(_s34_, \"new load\", P.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(), \"original load\"], type$.legacy_FileSpan, type$.legacy_String)));\n      }\n      t3.$indexSet(0, url, t2);\n      t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_uses, type$.UnmodifiableListView_legacy_UseRule_2);\n      if (t2.get$length(t2) === 0) {\n        t2 = new P.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);\n        t2 = t2.get$length(t2) === 0;\n      } else\n        t2 = false;\n      if (t2) {\n        oldImporter = t1._evaluate0$_importer;\n        oldStylesheet = t1._evaluate0$_stylesheet;\n        t1._evaluate0$_importer = importer;\n        t1._evaluate0$_stylesheet = stylesheet;\n        t1.visitStylesheet$1(stylesheet);\n        t1._evaluate0$_importer = oldImporter;\n        t1._evaluate0$_stylesheet = oldStylesheet;\n        t3.remove$1(0, url);\n        return;\n      }\n      _box_0.children = null;\n      t2 = t1._evaluate0$_environment;\n      t4 = type$.legacy_String;\n      t5 = type$.legacy_Module_legacy_Callable_2;\n      t6 = type$.legacy_AstNode_2;\n      t7 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Module_legacy_Callable_2);\n      t8 = t2._environment0$_variables;\n      t8 = H.setRuntimeTypeInfo(t8.slice(0), H._arrayInstanceType(t8));\n      t9 = t2._environment0$_variableNodes;\n      if (t9 == null)\n        t9 = _null;\n      else\n        t9 = H.setRuntimeTypeInfo(t9.slice(0), H._arrayInstanceType(t9));\n      t10 = t2._environment0$_functions;\n      t10 = H.setRuntimeTypeInfo(t10.slice(0), H._arrayInstanceType(t10));\n      t11 = t2._environment0$_mixins;\n      t11 = H.setRuntimeTypeInfo(t11.slice(0), H._arrayInstanceType(t11));\n      environment = O.Environment$_0(P.LinkedHashMap_LinkedHashMap$_empty(t4, t5), P.LinkedHashMap_LinkedHashMap$_empty(t4, t6), P.LinkedHashSet_LinkedHashSet$_empty(t5), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), _null, _null, _null, t7, t8, t9, t10, t11, t2._environment0$_content);\n      t1._evaluate0$_withEnvironment$2(environment, new R._EvaluateVisitor__visitDynamicImport__closure1(_box_0, t1, importer, stylesheet, environment));\n      module = O._EnvironmentModule__EnvironmentModule1(environment, new V.CssStylesheet0(new P.UnmodifiableListView(C.List_empty12, type$.UnmodifiableListView_legacy_CssNode_2), Y.SourceFile$decoded(C.List_empty1, \"<dummy module>\").span$1(0)), C.C_EmptyExtender0, environment._environment0$_forwardedModules);\n      t1._evaluate0$_environment.importForwards$1(module);\n      if (module.transitivelyContainsCss)\n        t1._evaluate0$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1);\n      visitor = new R._ImportedCssVisitor1(t1);\n      for (t1 = J.get$iterator$ax(_box_0.children); t1.moveNext$0();)\n        t1.get$current(t1).accept$1(visitor);\n      t3.remove$1(0, url);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor__visitDynamicImport__closure1.prototype = {\n    call$0: function() {\n      var t2, t3, _this = this,\n        t1 = _this.$this,\n        oldImporter = t1._evaluate0$_importer,\n        oldStylesheet = t1._evaluate0$_stylesheet,\n        oldRoot = t1._evaluate0$_root,\n        oldParent = t1._evaluate0$_parent,\n        oldEndOfImports = t1._evaluate0$_endOfImports,\n        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,\n        oldConfiguration = t1._evaluate0$_configuration;\n      t1._evaluate0$_importer = _this.importer;\n      t2 = t1._evaluate0$_stylesheet = _this.stylesheet;\n      t1._evaluate0$_parent = t1._evaluate0$_root = V.ModifiableCssStylesheet$0(t2.span);\n      t1._evaluate0$_endOfImports = 0;\n      t1._evaluate0$_outOfOrderImports = null;\n      t3 = new P.UnmodifiableListView(t2._stylesheet1$_forwards, type$.UnmodifiableListView_legacy_ForwardRule_2);\n      if (!t3.get$isEmpty(t3))\n        t1._evaluate0$_configuration = _this.environment.toImplicitConfiguration$0();\n      t1.visitStylesheet$1(t2);\n      _this._box_0.children = t1._evaluate0$_addOutOfOrderImports$0();\n      t1._evaluate0$_importer = oldImporter;\n      t1._evaluate0$_stylesheet = oldStylesheet;\n      t1._evaluate0$_root = oldRoot;\n      t1._evaluate0$_parent = oldParent;\n      t1._evaluate0$_endOfImports = oldEndOfImports;\n      t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;\n      t1._evaluate0$_configuration = oldConfiguration;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure5.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate0$_environment.getMixin$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 124\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure6.prototype = {\n    call$0: function() {\n      return this.node.get$spanWithoutContent();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 32\n  };\n  R._EvaluateVisitor_visitIncludeRule_closure7.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = t1._evaluate0$_environment,\n        oldContent = t2._environment0$_content;\n      t2._environment0$_content = _this.contentCallable;\n      new R._EvaluateVisitor_visitIncludeRule__closure1(t1, _this.mixin, _this.nodeWithSpan).call$0();\n      t2._environment0$_content = oldContent;\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule__closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._evaluate0$_environment,\n        oldInMixin = t2._environment0$_inMixin;\n      t2._environment0$_inMixin = true;\n      new R._EvaluateVisitor_visitIncludeRule___closure1(t1, this.mixin, this.nodeWithSpan).call$0();\n      t2._environment0$_inMixin = oldInMixin;\n      return null;\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule___closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, _i;\n      for (t1 = this.mixin.declaration.children, t2 = t1.length, t3 = this.$this, t4 = this.nodeWithSpan, _i = 0; _i < t2; ++_i)\n        t3._evaluate0$_addErrorSpan$2(t4, new R._EvaluateVisitor_visitIncludeRule____closure1(t3, t1[_i]));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitIncludeRule____closure1.prototype = {\n    call$0: function() {\n      return this.statement.accept$1(this.$this);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitMediaRule_closure3.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.mergedQueries;\n      if (t2 == null)\n        t2 = _this.queries;\n      t1._evaluate0$_withMediaQueries$2(t2, new R._EvaluateVisitor_visitMediaRule__closure1(t1, _this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule__closure1.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._evaluate0$_styleRule;\n      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitMediaRule___closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule___closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitMediaRule_closure4.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor__visitMediaQueries_closure1.prototype = {\n    call$0: function() {\n      return F.MediaQueryParser$0(this.resolved, this.$this._evaluate0$_logger, null).parse$0();\n    },\n    $signature: 82\n  };\n  R._EvaluateVisitor_visitStyleRule_closure13.prototype = {\n    call$0: function() {\n      return E.KeyframeSelectorParser$0(this.selectorText.value, this.$this._evaluate0$_logger).parse$0();\n    },\n    $signature: 42\n  };\n  R._EvaluateVisitor_visitStyleRule_closure14.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule_closure15.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitStyleRule_closure16.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = !t1._evaluate0$_stylesheet.plainCss;\n      return D.SelectorList_SelectorList$parse0(this.selectorText.value, t2, t2, t1._evaluate0$_logger);\n    },\n    $signature: 43\n  };\n  R._EvaluateVisitor_visitStyleRule_closure17.prototype = {\n    call$0: function() {\n      var t1 = this._box_0.parsedSelector,\n        t2 = this.$this,\n        t3 = t2._evaluate0$_styleRule;\n      t3 = t3 == null ? null : t3.originalSelector;\n      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._evaluate0$_atRootExcludingStyleRule);\n    },\n    $signature: 43\n  };\n  R._EvaluateVisitor_visitStyleRule_closure18.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._evaluate0$_withStyleRule$2(this.rule, new R._EvaluateVisitor_visitStyleRule__closure1(t1, this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule__closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitStyleRule_closure19.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitSupportsRule_closure3.prototype = {\n    call$0: function() {\n      var t3, _i,\n        t1 = this.$this,\n        t2 = t1._evaluate0$_styleRule;\n      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))\n        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t2[_i].accept$1(t1);\n      else\n        t1._evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitSupportsRule__closure1(t1, this.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitSupportsRule__closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i;\n      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)\n        t1[_i].accept$1(t3);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitSupportsRule_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure5.prototype = {\n    call$0: function() {\n      var t1 = this.override;\n      this.$this._evaluate0$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure6.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitVariableDeclaration_closure7.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      t1._evaluate0$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._evaluate0$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitUseRule_closure1.prototype = {\n    call$1: function(module) {\n      var t1 = this.node;\n      this.$this._evaluate0$_environment.addModule$3$namespace(module, t1, t1.namespace);\n    },\n    $signature: 98\n  };\n  R._EvaluateVisitor_visitWarnRule_closure1.prototype = {\n    call$0: function() {\n      return this.node.expression.accept$1(this.$this);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitWhileRule_closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, result;\n      for (t1 = this.node, t2 = t1.condition, t3 = this.$this, t1 = t1.children; t2.accept$1(t3).get$isTruthy();) {\n        result = t3._evaluate0$_handleReturn$2(t1, new R._EvaluateVisitor_visitWhileRule__closure1(t3));\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitWhileRule__closure1.prototype = {\n    call$1: function(child) {\n      return child.accept$1(this.$this);\n    },\n    $signature: 67\n  };\n  R._EvaluateVisitor_visitBinaryOperationExpression_closure1.prototype = {\n    call$0: function() {\n      var right, result,\n        t1 = this.node,\n        t2 = this.$this,\n        left = t1.left.accept$1(t2);\n      switch (t1.operator) {\n        case C.BinaryOperator_kjl0:\n          right = t1.right.accept$1(t2);\n          left.toString;\n          t1 = N.serializeValue(left, false, true) + \"=\";\n          right.toString;\n          return new D.SassString0(t1 + N.serializeValue(right, false, true), false);\n        case C.BinaryOperator_or_or_10:\n          return left.get$isTruthy() ? left : t1.right.accept$1(t2);\n        case C.BinaryOperator_and_and_20:\n          return left.get$isTruthy() ? t1.right.accept$1(t2) : left;\n        case C.BinaryOperator_YlX0:\n          return J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true : C.SassBoolean_false;\n        case C.BinaryOperator_i5H0:\n          return !J.$eq$(left, t1.right.accept$1(t2)) ? C.SassBoolean_true : C.SassBoolean_false;\n        case C.BinaryOperator_AcR1:\n          return left.greaterThan$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_1da0:\n          return left.greaterThanOrEquals$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_8qt0:\n          return left.lessThan$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_33h0:\n          return left.lessThanOrEquals$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_AcR2:\n          return left.plus$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_iyO0:\n          return left.minus$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_O1M0:\n          return left.times$1(t1.right.accept$1(t2));\n        case C.BinaryOperator_RTB0:\n          right = t1.right.accept$1(t2);\n          result = left.dividedBy$1(right);\n          if (t1.allowsSlash && left instanceof T.SassNumber0 && right instanceof T.SassNumber0)\n            return type$.legacy_SassNumber_2._as(result).withSlash$2(left, right);\n          else\n            return result;\n        case C.BinaryOperator_2ad0:\n          return left.modulo$1(t1.right.accept$1(t2));\n        default:\n          return null;\n      }\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitVariableExpression_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor_visitListExpression_closure1.prototype = {\n    call$1: function(expression) {\n      return expression.accept$1(this.$this);\n    },\n    $signature: 341\n  };\n  R._EvaluateVisitor_visitFunctionExpression_closure3.prototype = {\n    call$0: function() {\n      var t1 = this.node.namespace,\n        t2 = this.plainName;\n      if (t1 == null)\n        t2 = H.stringReplaceAllUnchecked(t2, \"_\", \"-\");\n      return this.$this._evaluate0$_getFunction$2$namespace(t2, t1);\n    },\n    $signature: 124\n  };\n  R._EvaluateVisitor_visitFunctionExpression_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.node;\n      return this.$this._evaluate0$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor__runUserDefinedCallable_closure1.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.callable;\n      return t1._evaluate0$_withEnvironment$2(t2.environment.closure$0(), new R._EvaluateVisitor__runUserDefinedCallable__closure1(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run));\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor__runUserDefinedCallable__closure1.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this;\n      return t1._evaluate0$_environment.scope$1$1(new R._EvaluateVisitor__runUserDefinedCallable___closure1(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run), type$.legacy_Value_2);\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor__runUserDefinedCallable___closure1.prototype = {\n    call$0: function() {\n      var declaredArguments, minLength, t8, t9, i, t10, t11, t12, argument, value, t13, rest, argumentList, result, argumentWord, argumentNames, _this = this, _null = null,\n        t1 = _this.$this,\n        t2 = _this.evaluated,\n        t3 = t2.positional,\n        t4 = t3.length,\n        t5 = t2.named,\n        t6 = _this.callable.declaration.$arguments,\n        t7 = _this.nodeWithSpan;\n      t1._evaluate0$_verifyArguments$4(t4, t5, t6, t7);\n      declaredArguments = t6.$arguments;\n      t4 = declaredArguments.length;\n      minLength = Math.min(t3.length, t4);\n      for (t8 = t1._evaluate0$_sourceMap, t9 = t2.positionalNodes, i = 0; i < minLength; ++i) {\n        t10 = t1._evaluate0$_environment;\n        t11 = declaredArguments[i].name;\n        t12 = t3[i].withoutSlash$0();\n        t10.setLocalVariable$3(t11, t12, t8 ? t9[i] : _null);\n      }\n      for (i = t3.length, t9 = t2.namedNodes; i < t4; ++i) {\n        argument = declaredArguments[i];\n        t10 = argument.name;\n        value = t5.remove$1(0, t10);\n        if (value == null)\n          value = argument.defaultValue.accept$1(t1);\n        t11 = t1._evaluate0$_environment;\n        t12 = value.withoutSlash$0();\n        if (t8) {\n          t13 = t9.$index(0, t10);\n          if (t13 == null)\n            t13 = t1._evaluate0$_expressionNode$1(argument.defaultValue);\n        } else\n          t13 = _null;\n        t11.setLocalVariable$3(t10, t12, t13);\n      }\n      t8 = t6.restArgument;\n      if (t8 != null) {\n        rest = t3.length > t4 ? C.JSArray_methods.sublist$1(t3, t4) : C.List_empty16;\n        t2 = t2.separator;\n        argumentList = D.SassArgumentList$0(rest, t5, t2 === C.ListSeparator_undecided0 ? C.ListSeparator_comma0 : t2);\n        t1._evaluate0$_environment.setLocalVariable$3(t8, argumentList, t7);\n      } else\n        argumentList = _null;\n      result = _this.run.call$0();\n      if (argumentList == null)\n        return result;\n      if (t5.get$isEmpty(t5))\n        return result;\n      if (argumentList._argument_list$_wereKeywordsAccessed)\n        return result;\n      t2 = t5.get$keys(t5);\n      argumentWord = B.pluralize0(\"argument\", t2.get$length(t2), _null);\n      t5 = t5.get$keys(t5);\n      argumentNames = B.toSentence0(H.MappedIterable_MappedIterable(t5, new R._EvaluateVisitor__runUserDefinedCallable____closure1(), H._instanceType(t5)._eval$1(\"Iterable.E\"), type$.legacy_Object), \"or\");\n      throw H.wrapException(E.MultiSpanSassRuntimeException$0(\"No \" + argumentWord + \" named \" + H.S(argumentNames) + \".\", t7.get$span(), \"invocation\", P.LinkedHashMap_LinkedHashMap$_literal([t6.get$spanWithName(), \"declaration\"], type$.legacy_FileSpan, type$.legacy_String), t1._evaluate0$_stackTrace$1(t7.get$span())));\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor__runUserDefinedCallable____closure1.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  R._EvaluateVisitor__runFunctionCallable_closure1.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, _i, $returnValue;\n      for (t1 = this.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = this.$this, _i = 0; _i < t3; ++_i) {\n        $returnValue = t2[_i].accept$1(t4);\n        if ($returnValue instanceof F.Value0)\n          return $returnValue;\n      }\n      throw H.wrapException(t4._evaluate0$_exception$2(\"Function finished without @return.\", t1.span));\n    },\n    $signature: 22\n  };\n  R._EvaluateVisitor__runBuiltInCallable_closure3.prototype = {\n    call$0: function() {\n      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor__runBuiltInCallable_closure4.prototype = {\n    call$1: function($name) {\n      return \"$\" + H.S($name);\n    },\n    $signature: 8\n  };\n  R._EvaluateVisitor__evaluateArguments_closure1.prototype = {\n    call$2: function(key, value) {\n      var t1;\n      this.named.$indexSet(0, key, value);\n      t1 = this.namedNodes;\n      if (t1 != null)\n        t1.$indexSet(0, key, this.restNodeForSpan);\n    },\n    $signature: 61\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure7.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure8.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure9.prototype = {\n    call$2: function(key, value) {\n      this.named.$indexSet(0, key, new F.ValueExpression0(value, null));\n    },\n    $signature: 61\n  };\n  R._EvaluateVisitor__evaluateMacroArguments_closure10.prototype = {\n    call$1: function(value) {\n      return new F.ValueExpression0(value, null);\n    },\n    $signature: 48\n  };\n  R._EvaluateVisitor__addRestMap_closure3.prototype = {\n    call$1: function(value) {\n      return this.T._eval$1(\"0*\")._as(value);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(Value0*)\");\n    }\n  };\n  R._EvaluateVisitor__addRestMap_closure4.prototype = {\n    call$2: function(key, value) {\n      var _this = this;\n      if (key instanceof D.SassString0)\n        _this.values.$indexSet(0, key.text, _this._box_0.convert.call$1(value));\n      else\n        throw H.wrapException(_this.$this._evaluate0$_exception$2(string$.Variab_ + H.S(key) + \" is not a string in \" + _this.map.toString$0(0) + \".\", _this.nodeWithSpan.get$span()));\n    },\n    $signature: 50\n  };\n  R._EvaluateVisitor__verifyArguments_closure1.prototype = {\n    call$0: function() {\n      return this.$arguments.verify$2(this.positional, new M.MapKeySet(this.named, type$.MapKeySet_legacy_String));\n    },\n    $signature: 1\n  };\n  R._EvaluateVisitor_visitStringExpression_closure1.prototype = {\n    call$1: function(value) {\n      var t1, result;\n      if (typeof value == \"string\")\n        return value;\n      type$.legacy_Expression_2._as(value);\n      t1 = this.$this;\n      result = value.accept$1(t1);\n      return result instanceof D.SassString0 ? result.text : t1._evaluate0$_serialize$3$quote(result, value, false);\n    },\n    $signature: 44\n  };\n  R._EvaluateVisitor_visitCssAtRule_closure3.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssAtRule_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitCssKeyframeBlock_closure3.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssKeyframeBlock_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitCssMediaRule_closure3.prototype = {\n    call$0: function() {\n      var _this = this,\n        t1 = _this.$this,\n        t2 = _this.mergedQueries;\n      if (t2 == null)\n        t2 = _this.node.queries;\n      t1._evaluate0$_withMediaQueries$2(t2, new R._EvaluateVisitor_visitCssMediaRule__closure1(t1, _this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule__closure1.prototype = {\n    call$0: function() {\n      var cur,\n        t1 = this.$this,\n        t2 = t1._evaluate0$_styleRule;\n      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))\n        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          cur.accept$1(t1);\n        }\n      else\n        t1._evaluate0$_withParent$2$3$scopeWhen(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssMediaRule___closure1(t1, this.node), false, type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule___closure1.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssMediaRule_closure4.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.mergedQueries != null && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitCssStyleRule_closure3.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      t1._evaluate0$_withStyleRule$2(this.rule, new R._EvaluateVisitor_visitCssStyleRule__closure1(t1, this.node));\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssStyleRule__closure1.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssStyleRule_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor_visitCssSupportsRule_closure3.prototype = {\n    call$0: function() {\n      var cur,\n        t1 = this.$this,\n        t2 = t1._evaluate0$_styleRule;\n      if (!(t2 != null && !t1._evaluate0$_atRootExcludingStyleRule))\n        for (t2 = this.node.children, t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          cur.accept$1(t1);\n        }\n      else\n        t1._evaluate0$_withParent$2$2(X.ModifiableCssStyleRule$0(t2.selector, t2.span, t2.originalSelector), new R._EvaluateVisitor_visitCssSupportsRule__closure1(t1, this.node), type$.legacy_ModifiableCssStyleRule_2, type$.Null);\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssSupportsRule__closure1.prototype = {\n    call$0: function() {\n      var t1, t2, cur;\n      for (t1 = this.node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = this.$this; t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(t2);\n      }\n    },\n    $signature: 0\n  };\n  R._EvaluateVisitor_visitCssSupportsRule_closure4.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._EvaluateVisitor__performInterpolation_closure1.prototype = {\n    call$1: function(value) {\n      var t1, result, t2, t3;\n      if (typeof value == \"string\")\n        return value;\n      type$.legacy_Expression_2._as(value);\n      t1 = this.$this;\n      result = value.accept$1(t1);\n      if (this.warnForColor && result instanceof K.SassColor0 && $.$get$namesByColor0().containsKey$1(result)) {\n        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([\"\"], type$.JSArray_legacy_Object), null);\n        t3 = $.$get$namesByColor0();\n        t1._evaluate0$_warn$2(string$.You_pr + H.S(t3.$index(0, result)) + string$.x20in_in + H.S(result) + string$.x2c_whic + H.S(t3.$index(0, result)) + string$.x22x29__If + new V.BinaryOperationExpression0(C.BinaryOperator_AcR2, new D.StringExpression0(t2, true), value, false).toString$0(0) + \"'.\", value.get$span());\n      }\n      return t1._evaluate0$_serialize$3$quote(result, value, false);\n    },\n    $signature: 44\n  };\n  R._EvaluateVisitor__serialize_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      t1.toString;\n      return N.serializeValue(t1, false, this.quote);\n    },\n    $signature: 13\n  };\n  R._EvaluateVisitor__stackTrace_closure1.prototype = {\n    call$1: function(tuple) {\n      return this.$this._evaluate0$_stackFrame$2(tuple.item1, tuple.item2.get$span());\n    },\n    $signature: 163\n  };\n  R._ImportedCssVisitor1.prototype = {\n    visitCssAtRule$1: function(node) {\n      var t1 = node.isChildless ? null : new R._ImportedCssVisitor_visitCssAtRule_closure1();\n      this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, t1);\n    },\n    visitCssComment$1: function(node) {\n      return this._evaluate0$_visitor._evaluate0$_addChild$1(node);\n    },\n    visitCssDeclaration$1: function(node) {\n    },\n    visitCssImport$1: function(node) {\n      var t1 = this._evaluate0$_visitor,\n        t2 = t1._evaluate0$_parent,\n        t3 = t1._evaluate0$_root;\n      if (t2 != t3)\n        t1._evaluate0$_addChild$1(node);\n      else if (t1._evaluate0$_endOfImports === J.get$length$asx(t3.children._collection$_source)) {\n        t1._evaluate0$_addChild$1(node);\n        t1._evaluate0$_endOfImports = t1._evaluate0$_endOfImports + 1;\n      } else {\n        t2 = t1._evaluate0$_outOfOrderImports;\n        (t2 == null ? t1._evaluate0$_outOfOrderImports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ModifiableCssImport_2) : t2).push(node);\n      }\n    },\n    visitCssKeyframeBlock$1: function(node) {\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1 = this._evaluate0$_visitor,\n        t2 = t1._evaluate0$_mediaQueries;\n      t1._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssMediaRule_closure1(t2 == null || t1._evaluate0$_mergeMediaQueries$2(t2, node.queries) != null));\n    },\n    visitCssStyleRule$1: function(node) {\n      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssStyleRule_closure1());\n    },\n    visitCssStylesheet$1: function(node) {\n      var t1, cur;\n      for (t1 = node.children, t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        cur.accept$1(this);\n      }\n    },\n    visitCssSupportsRule$1: function(node) {\n      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new R._ImportedCssVisitor_visitCssSupportsRule_closure1());\n    }\n  };\n  R._ImportedCssVisitor_visitCssAtRule_closure1.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._ImportedCssVisitor_visitCssMediaRule_closure1.prototype = {\n    call$1: function(node) {\n      var t1;\n      if (!type$.legacy_CssStyleRule_2._is(node))\n        t1 = this.hasBeenMerged && type$.legacy_CssMediaRule_2._is(node);\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 7\n  };\n  R._ImportedCssVisitor_visitCssStyleRule_closure1.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._ImportedCssVisitor_visitCssSupportsRule_closure1.prototype = {\n    call$1: function(node) {\n      return type$.legacy_CssStyleRule_2._is(node);\n    },\n    $signature: 7\n  };\n  R._ArgumentResults1.prototype = {};\n  E.SassException0.prototype = {\n    get$trace: function(_) {\n      return new Y.Trace(P.List_List$unmodifiable(H.setRuntimeTypeInfo([B.frameForSpan0(G.SourceSpanException.prototype.get$span.call(this), \"root stylesheet\", null)], type$.JSArray_legacy_Frame), type$.legacy_Frame), new P._StringStackTrace(null));\n    },\n    get$span: function() {\n      return G.SourceSpanException.prototype.get$span.call(this);\n    },\n    toString$0: function(_) {\n      var t2, _i, frame, t3, _this = this,\n        buffer = new P.StringBuffer(\"\"),\n        t1 = \"Error: \" + H.S(_this._span_exception$_message) + \"\\n\";\n      buffer._contents = t1;\n      buffer._contents = t1 + G.SourceSpanException.prototype.get$span.call(_this).highlight$1$color(null);\n      for (t1 = _this.get$trace(_this).toString$0(0).split(\"\\n\"), t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        frame = t1[_i];\n        frame.toString;\n        if (J.get$length$asx(frame) === 0)\n          continue;\n        t3 = buffer._contents += \"\\n\";\n        buffer._contents = t3 + (\"  \" + H.S(frame));\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  E.MultiSpanSassException0.prototype = {\n    toString$0: function(_) {\n      var t2, _i, frame, t3, _this = this,\n        buffer = new P.StringBuffer(\"\"),\n        t1 = \"Error: \" + H.S(_this._span_exception$_message) + \"\\n\";\n      buffer._contents = t1;\n      buffer._contents = t1 + U.Highlighter$multiple(G.SourceSpanException.prototype.get$span.call(_this), _this.primaryLabel, _this.secondarySpans, false, null, null).highlight$0();\n      for (t1 = _this.get$trace(_this).toString$0(0).split(\"\\n\"), t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        frame = t1[_i];\n        frame.toString;\n        if (J.get$length$asx(frame) === 0)\n          continue;\n        t3 = buffer._contents += \"\\n\";\n        buffer._contents = t3 + (\"  \" + H.S(frame));\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  E.SassRuntimeException0.prototype = {\n    get$trace: function(receiver) {\n      return this.trace;\n    }\n  };\n  E.MultiSpanSassRuntimeException0.prototype = {$isSassRuntimeException0: 1,\n    get$trace: function(receiver) {\n      return this.trace;\n    }\n  };\n  E.SassFormatException0.prototype = {\n    get$source: function() {\n      return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(G.SourceSpanException.prototype.get$span.call(this).file._decodedChars, 0, null), 0, null);\n    },\n    $isFormatException: 1,\n    $isSourceSpanFormatException: 1\n  };\n  E.SassScriptException0.prototype = {\n    toString$0: function(_) {\n      return this.message + string$.x0a_BUG_;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    }\n  };\n  E.MultiSpanSassScriptException0.prototype = {};\n  D.Exports.prototype = {};\n  X.ExtendRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitExtendRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@extend \" + this.selector.toString$0(0);\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.Extender0.prototype = {\n    get$isEmpty: function(_) {\n      var t1 = this._extender$_extensions;\n      return t1.get$isEmpty(t1);\n    },\n    get$simpleSelectors: function() {\n      return new M.MapKeySet(this._extender$_selectors, type$.MapKeySet_legacy_SimpleSelector_2);\n    },\n    extensionsWhereTarget$1: function($async$callback) {\n      var $async$self = this;\n      return P._makeSyncStarIterable(function() {\n        var callback = $async$callback;\n        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, t4;\n        return function $async$extensionsWhereTarget$1($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                t1 = $async$self._extender$_extensions, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2);\n              case 2:\n                // for condition\n                if (!t2.moveNext$0()) {\n                  // goto after for\n                  $async$goto = 3;\n                  break;\n                }\n                t3 = t2.get$current(t2);\n                if (!callback.call$1(t3)) {\n                  // goto for condition\n                  $async$goto = 2;\n                  break;\n                }\n                t3 = J.get$values$z(t1.$index(0, t3)), t3 = t3.get$iterator(t3);\n              case 4:\n                // for condition\n                if (!t3.moveNext$0()) {\n                  // goto after for\n                  $async$goto = 5;\n                  break;\n                }\n                t4 = t3.get$current(t3);\n                $async$goto = t4 instanceof A.MergedExtension0 ? 6 : 8;\n                break;\n              case 6:\n                // then\n                t4 = t4.unmerge$0();\n                $async$goto = 9;\n                return P._IterationMarker_yieldStar(new H.WhereIterable(t4, new F.Extender_extensionsWhereTarget_closure0(), t4.$ti._eval$1(\"WhereIterable<Iterable.E>\")));\n              case 9:\n                // after yield\n                // goto join\n                $async$goto = 7;\n                break;\n              case 8:\n                // else\n                $async$goto = !t4.isOptional ? 10 : 11;\n                break;\n              case 10:\n                // then\n                $async$goto = 12;\n                return t4;\n              case 12:\n                // after yield\n              case 11:\n                // join\n              case 7:\n                // join\n                // goto for condition\n                $async$goto = 4;\n                break;\n              case 5:\n                // after for\n                // goto for condition\n                $async$goto = 2;\n                break;\n              case 3:\n                // after for\n                // implicit return\n                return P._IterationMarker_endOfIteration();\n              case 1:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, type$.legacy_Extension_2);\n    },\n    addSelector$3: function(selector, span, mediaContext) {\n      var originalSelector, error, t1, t2, t3, _i, exception, modifiableSelector, _this = this;\n      selector = selector;\n      originalSelector = selector;\n      if (!originalSelector.get$isInvisible())\n        for (t1 = originalSelector.components, t2 = t1.length, t3 = _this._extender$_originals, _i = 0; _i < t2; ++_i)\n          t3.add$1(0, t1[_i]);\n      t1 = _this._extender$_extensions;\n      if (t1.get$isNotEmpty(t1))\n        try {\n          selector = _this._extender$_extendList$3(originalSelector, t1, mediaContext);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException0) {\n            error = t1;\n            throw H.wrapException(E.SassException$0(\"From \" + error.get$span().message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), span));\n          } else\n            throw exception;\n        }\n      modifiableSelector = new F.ModifiableCssValue0(selector, span, type$.ModifiableCssValue_legacy_SelectorList_2);\n      if (mediaContext != null)\n        _this._extender$_mediaContexts.$indexSet(0, modifiableSelector, mediaContext);\n      _this._extender$_registerSelector$2(selector, modifiableSelector);\n      return modifiableSelector;\n    },\n    _extender$_registerSelector$2: function(list, selector) {\n      var t1, t2, t3, _i, t4, t5, _i0, component, t6, t7, _i1, simple;\n      for (t1 = list.components, t2 = t1.length, t3 = this._extender$_selectors, _i = 0; _i < t2; ++_i)\n        for (t4 = t1[_i].components, t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {\n          component = t4[_i0];\n          if (component instanceof X.CompoundSelector0)\n            for (t6 = component.components, t7 = t6.length, _i1 = 0; _i1 < t7; ++_i1) {\n              simple = t6[_i1];\n              J.add$1$ax(t3.putIfAbsent$2(simple, new F.Extender__registerSelector_closure0()), selector);\n              if (simple instanceof D.PseudoSelector0 && simple.selector != null)\n                this._extender$_registerSelector$2(simple.selector, selector);\n            }\n        }\n    },\n    addExtension$4: function(extender, target, extend, mediaContext) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, newExtensions, _i, complex, t12, state, existingState, t13, _i0, component, t14, t15, _i1, simple, newExtensionsByTarget, additionalExtensions, _this = this,\n        selectors = _this._extender$_selectors.$index(0, target),\n        t1 = _this._extender$_extensionsByExtender,\n        existingExtensions = t1.$index(0, target),\n        sources = _this._extender$_extensions.putIfAbsent$2(target, new F.Extender_addExtension_closure2());\n      for (t2 = extender.value.components, t3 = t2.length, t4 = selectors == null, t5 = _this._extender$_sourceSpecificity, t6 = extender.span, t7 = extend.span, t8 = extend.isOptional, t9 = existingExtensions != null, t10 = type$.legacy_ComplexSelector_2, t11 = type$.legacy_Extension_2, newExtensions = null, _i = 0; _i < t3; ++_i) {\n        complex = t2[_i];\n        if (complex._complex0$_maxSpecificity == null)\n          complex._complex0$_computeSpecificity$0();\n        t12 = complex._complex0$_maxSpecificity;\n        state = new S.Extension0(complex, target, t12, t8, false, mediaContext, t6, t7);\n        existingState = sources.$index(0, complex);\n        if (existingState != null) {\n          sources.$indexSet(0, complex, A.MergedExtension_merge0(existingState, state));\n          continue;\n        }\n        sources.$indexSet(0, complex, state);\n        for (t12 = complex.components, t13 = t12.length, _i0 = 0; _i0 < t13; ++_i0) {\n          component = t12[_i0];\n          if (component instanceof X.CompoundSelector0)\n            for (t14 = component.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1) {\n              simple = t14[_i1];\n              J.add$1$ax(t1.putIfAbsent$2(simple, new F.Extender_addExtension_closure3()), state);\n              t5.putIfAbsent$2(simple, new F.Extender_addExtension_closure4(complex));\n            }\n        }\n        if (!t4 || t9) {\n          if (newExtensions == null)\n            newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t10, t11);\n          newExtensions.$indexSet(0, complex, state);\n        }\n      }\n      if (newExtensions == null)\n        return;\n      t1 = type$.legacy_SimpleSelector_2;\n      newExtensionsByTarget = P.LinkedHashMap_LinkedHashMap$_literal([target, newExtensions], t1, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2);\n      if (t9) {\n        additionalExtensions = _this._extender$_extendExistingExtensions$2(existingExtensions, newExtensionsByTarget);\n        if (additionalExtensions != null)\n          B.mapAddAll20(newExtensionsByTarget, additionalExtensions, t1, t10, t11);\n      }\n      if (!t4)\n        _this._extender$_extendExistingSelectors$2(selectors, newExtensionsByTarget);\n    },\n    _extender$_extendExistingExtensions$2: function(extensions, newExtensions) {\n      var extension, selectors, error, t1, t2, t3, t4, t5, t6, additionalExtensions, _i, sources, exception, containsExtension, t7, t8, first, _i0, complex, t9, t10, t11, t12, t13, t14, withExtender, existingExtension, _i1, component, _i2;\n      for (t1 = J.toList$0$ax(extensions), t2 = t1.length, t3 = this._extender$_extensionsByExtender, t4 = type$.legacy_SimpleSelector_2, t5 = type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2, t6 = this._extender$_extensions, additionalExtensions = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        extension = t1[_i];\n        sources = t6.$index(0, extension.target);\n        selectors = null;\n        try {\n          selectors = this._extender$_extendComplex$3(extension.extender, newExtensions, extension.mediaContext);\n          if (selectors == null)\n            continue;\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException0) {\n            error = t1;\n            throw H.wrapException(E.SassException$0(\"From \" + extension.extenderSpan.message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), error.get$span()));\n          } else\n            throw exception;\n        }\n        containsExtension = J.$eq$(J.get$first$ax(selectors), extension.extender);\n        for (t7 = selectors, t8 = t7.length, first = false, _i0 = 0; _i0 < t7.length; t7.length === t8 || (0, H.throwConcurrentModificationError)(t7), ++_i0) {\n          complex = t7[_i0];\n          if (containsExtension && first) {\n            first = false;\n            continue;\n          }\n          t9 = extension;\n          t10 = t9.target;\n          t11 = t9.extenderSpan;\n          t12 = t9.span;\n          t13 = t9.mediaContext;\n          t14 = t9.specificity;\n          t9 = t9.isOptional;\n          if (t14 == null) {\n            if (complex._complex0$_maxSpecificity == null)\n              complex._complex0$_computeSpecificity$0();\n            t14 = complex._complex0$_maxSpecificity;\n          }\n          withExtender = new S.Extension0(complex, t10, t14, t9, false, t13, t11, t12);\n          existingExtension = sources.$index(0, complex);\n          if (existingExtension != null)\n            sources.$indexSet(0, complex, A.MergedExtension_merge0(existingExtension, withExtender));\n          else {\n            sources.$indexSet(0, complex, withExtender);\n            for (t9 = complex.components, t10 = t9.length, _i1 = 0; _i1 < t10; ++_i1) {\n              component = t9[_i1];\n              if (component instanceof X.CompoundSelector0)\n                for (t11 = component.components, t12 = t11.length, _i2 = 0; _i2 < t12; ++_i2)\n                  J.add$1$ax(t3.putIfAbsent$2(t11[_i2], new F.Extender__extendExistingExtensions_closure1()), withExtender);\n            }\n            if (newExtensions.containsKey$1(extension.target)) {\n              if (additionalExtensions == null)\n                additionalExtensions = P.LinkedHashMap_LinkedHashMap$_empty(t4, t5);\n              additionalExtensions.putIfAbsent$2(extension.target, new F.Extender__extendExistingExtensions_closure2()).$indexSet(0, complex, withExtender);\n            }\n          }\n        }\n        if (!containsExtension)\n          sources.remove$1(0, extension.extender);\n      }\n      return additionalExtensions;\n    },\n    _extender$_extendExistingSelectors$2: function(selectors, newExtensions) {\n      var selector, error, t1, t2, oldValue, exception;\n      for (t1 = selectors.get$iterator(selectors), t2 = this._extender$_mediaContexts; t1.moveNext$0();) {\n        selector = t1.get$current(t1);\n        oldValue = selector.value;\n        try {\n          selector.value = this._extender$_extendList$3(selector.value, newExtensions, t2.$index(0, selector));\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.SassException0) {\n            error = t1;\n            throw H.wrapException(E.SassException$0(\"From \" + selector.span.message$1(0, \"\") + \"\\n\" + H.S(error._span_exception$_message), error.get$span()));\n          } else\n            throw exception;\n        }\n        if (oldValue == selector.value)\n          continue;\n        this._extender$_registerSelector$2(selector.value, selector);\n      }\n    },\n    addExtensions$1: function(extenders) {\n      var t1, t2, t3, _this = this, _box_0 = {};\n      _box_0.newExtensions = _box_0.selectorsToExtend = _box_0.extensionsToExtend = null;\n      for (t1 = J.get$iterator$ax(extenders), t2 = _this._extender$_sourceSpecificity; t1.moveNext$0();) {\n        t3 = t1.get$current(t1);\n        if (t3.get$isEmpty(t3))\n          continue;\n        t2.addAll$1(0, t3.get$_extender$_sourceSpecificity());\n        t3.get$_extender$_extensions().forEach$1(0, new F.Extender_addExtensions_closure0(_box_0, _this, t3));\n      }\n      t1 = _box_0.newExtensions;\n      if (t1 == null)\n        return;\n      t2 = _box_0.extensionsToExtend;\n      if (t2 != null)\n        _this._extender$_extendExistingExtensions$2(t2, t1);\n      t1 = _box_0.selectorsToExtend;\n      if (t1 != null)\n        _this._extender$_extendExistingSelectors$2(t1, _box_0.newExtensions);\n    },\n    _extender$_extendList$3: function(list, extensions, mediaQueryContext) {\n      var t1, t2, t3, extended, i, complex, result, t4;\n      for (t1 = list.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector_2, extended = null, i = 0; i < t2; ++i) {\n        complex = t1[i];\n        result = this._extender$_extendComplex$3(complex, extensions, mediaQueryContext);\n        if (result == null) {\n          if (extended != null)\n            extended.push(complex);\n        } else {\n          if (extended == null)\n            if (i === 0)\n              extended = H.setRuntimeTypeInfo([], t3);\n            else {\n              t4 = C.JSArray_methods.sublist$2(t1, 0, i);\n              extended = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4)._eval$1(\"JSArray<1>\"));\n            }\n          C.JSArray_methods.addAll$1(extended, result);\n        }\n      }\n      if (extended == null)\n        return list;\n      t1 = this._extender$_originals;\n      return D.SelectorList$0(J.where$1$ax(this._extender$_trim$2(extended, t1.get$contains(t1)), new F.Extender__extendList_closure0()));\n    },\n    _extender$_extendComplex$3: function(complex, extensions, mediaQueryContext) {\n      var t1, t2, t3, t4, t5, t6, t7, t8, t9, extendedNotExpanded, i, component, extended, result, t10,\n        _s28_ = \"components may not be empty.\",\n        _box_0 = {},\n        isOriginal = this._extender$_originals.contains$1(0, complex);\n      for (t1 = complex.components, t2 = t1.length, t3 = type$.JSArray_legacy_ComplexSelector_2, t4 = type$.JSArray_legacy_ComplexSelectorComponent_2, t5 = type$.legacy_ComplexSelectorComponent_2, t6 = H._arrayInstanceType(t1), t7 = t6._precomputed1, t6 = t6._eval$1(\"SubListIterable<1>\"), t8 = t6._eval$1(\"MappedListIterable<ListIterable.E,List<ComplexSelector0*>*>\"), t9 = t8._eval$1(\"ListIterable.E\"), extendedNotExpanded = null, i = 0; i < t2; ++i) {\n        component = t1[i];\n        if (component instanceof X.CompoundSelector0) {\n          extended = this._extender$_extendCompound$4$inOriginal(component, extensions, mediaQueryContext, isOriginal);\n          if (extended == null) {\n            if (extendedNotExpanded != null) {\n              result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t10 = result;\n              if (t10.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector0(t10, false)], t3));\n            }\n          } else {\n            if (extendedNotExpanded == null) {\n              t10 = new H.SubListIterable(t1, 0, i, t6);\n              t10.SubListIterable$3(t1, 0, i, t7);\n              extendedNotExpanded = P.List_List$from(new H.MappedListIterable(t10, new F.Extender__extendComplex_closure1(complex), t8), true, t9);\n            }\n            C.JSArray_methods.add$1(extendedNotExpanded, extended);\n          }\n        } else if (extendedNotExpanded != null) {\n          result = P.List_List$from(H.setRuntimeTypeInfo([component], t4), false, t5);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          t10 = result;\n          if (t10.length === 0)\n            H.throwExpression(P.ArgumentError$(_s28_));\n          C.JSArray_methods.add$1(extendedNotExpanded, H.setRuntimeTypeInfo([new S.ComplexSelector0(t10, false)], t3));\n        }\n      }\n      if (extendedNotExpanded == null)\n        return null;\n      _box_0.first = true;\n      t1 = type$.legacy_ComplexSelector_2;\n      t1 = J.expand$1$1$ax(Y.paths0(extendedNotExpanded, t1), new F.Extender__extendComplex_closure2(_box_0, this, complex), t1);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    _extender$_extendCompound$4$inOriginal: function(compound, extensions, mediaQueryContext, inOriginal) {\n      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, options, i, simple, extended, result, t13, t14, unifiedPaths, isOriginal, _this = this, _null = null,\n        _s28_ = \"components may not be empty.\",\n        _box_1 = {},\n        t1 = _this._extender$_mode,\n        targetsUsed = t1 === C.ExtendMode_normal0 || extensions.get$length(extensions) < 2 ? _null : P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_SimpleSelector_2);\n      for (t2 = compound.components, t3 = t2.length, t4 = type$.JSArray_legacy_List_legacy_Extension_2, t5 = type$.JSArray_legacy_Extension_2, t6 = type$.JSArray_legacy_ComplexSelectorComponent_2, t7 = type$.legacy_ComplexSelectorComponent_2, t8 = H._arrayInstanceType(t2), t9 = t8._precomputed1, t8 = t8._eval$1(\"SubListIterable<1>\"), t10 = type$.legacy_SimpleSelector_2, t11 = _this._extender$_sourceSpecificity, t12 = type$.JSArray_legacy_SimpleSelector_2, options = _null, i = 0; i < t3; ++i) {\n        simple = t2[i];\n        extended = _this._extender$_extendSimple$4(simple, extensions, mediaQueryContext, targetsUsed);\n        if (extended == null) {\n          if (options != null) {\n            result = P.List_List$from(H.setRuntimeTypeInfo([simple], t12), false, t10);\n            result.fixed$length = Array;\n            result.immutable$list = Array;\n            t13 = result;\n            if (t13.length === 0)\n              H.throwExpression(P.ArgumentError$(_s28_));\n            result = P.List_List$from(H.setRuntimeTypeInfo([new X.CompoundSelector0(t13)], t6), false, t7);\n            result.fixed$length = Array;\n            result.immutable$list = Array;\n            t13 = result;\n            if (t13.length === 0)\n              H.throwExpression(P.ArgumentError$(_s28_));\n            t14 = t11.$index(0, simple);\n            if (t14 == null)\n              t14 = 0;\n            options.push(H.setRuntimeTypeInfo([new S.Extension0(new S.ComplexSelector0(t13, false), _null, t14, true, true, _null, _null, _null)], t5));\n          }\n        } else {\n          if (options == null) {\n            options = H.setRuntimeTypeInfo([], t4);\n            if (i !== 0) {\n              t13 = new H.SubListIterable(t2, 0, i, t8);\n              t13.SubListIterable$3(t2, 0, i, t9);\n              result = P.List_List$from(t13, false, t10);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t13 = result;\n              compound = new X.CompoundSelector0(t13);\n              if (t13.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              result = P.List_List$from(H.setRuntimeTypeInfo([compound], t6), false, t7);\n              result.fixed$length = Array;\n              result.immutable$list = Array;\n              t13 = result;\n              if (t13.length === 0)\n                H.throwExpression(P.ArgumentError$(_s28_));\n              t14 = _this._extender$_sourceSpecificityFor$1(compound);\n              options.push(H.setRuntimeTypeInfo([new S.Extension0(new S.ComplexSelector0(t13, false), _null, t14, true, true, _null, _null, _null)], t5));\n            }\n          }\n          C.JSArray_methods.addAll$1(options, extended);\n        }\n      }\n      if (options == null)\n        return _null;\n      if (targetsUsed != null && targetsUsed._collection$_length !== extensions.get$length(extensions))\n        return _null;\n      if (options.length === 1)\n        return J.map$1$1$ax(C.JSArray_methods.get$first(options), new F.Extender__extendCompound_closure5(mediaQueryContext), type$.legacy_ComplexSelector_2).toList$0(0);\n      t1 = _box_1.first = t1 !== C.ExtendMode_replace0;\n      unifiedPaths = J.map$1$1$ax(Y.paths0(options, type$.legacy_Extension_2), new F.Extender__extendCompound_closure6(_box_1, mediaQueryContext), type$.legacy_List_legacy_ComplexSelector_2);\n      isOriginal = new F.Extender__extendCompound_closure7();\n      if (inOriginal && t1)\n        isOriginal = new F.Extender__extendCompound_closure8(J.get$first$ax(unifiedPaths.get$first(unifiedPaths)));\n      t1 = unifiedPaths.where$1(0, new F.Extender__extendCompound_closure9());\n      t2 = t1.$ti._eval$1(\"ExpandIterable<Iterable.E,ComplexSelector0*>\");\n      return _this._extender$_trim$2(P.List_List$from(new H.ExpandIterable(t1, new F.Extender__extendCompound_closure10(), t2), true, t2._eval$1(\"Iterable.E\")), isOriginal);\n    },\n    _extender$_extendSimple$4: function(simple, extensions, mediaQueryContext, targetsUsed) {\n      var extended, result,\n        t1 = new F.Extender__extendSimple_withoutPseudo0(this, extensions, targetsUsed);\n      if (simple instanceof D.PseudoSelector0 && simple.selector != null) {\n        extended = this._extender$_extendPseudo$3(simple, extensions, mediaQueryContext);\n        if (extended != null)\n          return new H.MappedListIterable(extended, new F.Extender__extendSimple_closure0(this, t1), H._arrayInstanceType(extended)._eval$1(\"MappedListIterable<1,List<Extension0*>*>\"));\n      }\n      result = t1.call$1(simple);\n      return result == null ? null : H.setRuntimeTypeInfo([result], type$.JSArray_legacy_List_legacy_Extension_2);\n    },\n    _extender$_extensionForSimple$1: function(simple) {\n      var t1 = S.ComplexSelector$0(H.setRuntimeTypeInfo([X.CompoundSelector$0(H.setRuntimeTypeInfo([simple], type$.JSArray_legacy_SimpleSelector_2))], type$.JSArray_legacy_ComplexSelectorComponent_2), false),\n        t2 = this._extender$_sourceSpecificity.$index(0, simple);\n      return S.Extension$oneOff0(t1, true, t2 == null ? 0 : t2);\n    },\n    _extender$_extendPseudo$3: function(pseudo, extensions, mediaQueryContext) {\n      var complexes, t2, result,\n        t1 = pseudo.selector,\n        extended = this._extender$_extendList$3(t1, extensions, mediaQueryContext);\n      if (extended == t1)\n        return null;\n      complexes = extended.components;\n      t2 = pseudo.normalizedName === \"not\";\n      if (t2 && !C.JSArray_methods.any$1(t1.components, new F.Extender__extendPseudo_closure4()) && C.JSArray_methods.any$1(complexes, new F.Extender__extendPseudo_closure5()))\n        complexes = new H.WhereIterable(complexes, new F.Extender__extendPseudo_closure6(), H._arrayInstanceType(complexes)._eval$1(\"WhereIterable<1>\"));\n      complexes = J.expand$1$1$ax(complexes, new F.Extender__extendPseudo_closure7(pseudo), type$.legacy_ComplexSelector_2);\n      if (t2 && t1.components.length === 1) {\n        t1 = H.MappedIterable_MappedIterable(complexes, new F.Extender__extendPseudo_closure8(pseudo), complexes.$ti._eval$1(\"Iterable.E\"), type$.legacy_PseudoSelector_2);\n        result = P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n        return result.length === 0 ? null : result;\n      } else\n        return H.setRuntimeTypeInfo([D.PseudoSelector$0(pseudo.name, pseudo.argument, !pseudo.isClass, D.SelectorList$0(complexes))], type$.JSArray_legacy_PseudoSelector_2);\n    },\n    _extender$_trim$2: function(selectors, isOriginal) {\n      var result, i, t1, t2, numOriginals, _box_0, complex1, j, t3, t4, _i, component;\n      if (selectors.length > 100)\n        return selectors;\n      result = Q.QueueList$(null, type$.legacy_ComplexSelector_2);\n      $label0$0:\n        for (i = selectors.length - 1, t1 = H._arrayInstanceType(selectors), t2 = t1._precomputed1, t1 = t1._eval$1(\"SubListIterable<1>\"), numOriginals = 0; i >= 0; --i) {\n          _box_0 = {};\n          complex1 = selectors[i];\n          if (isOriginal.call$1(complex1)) {\n            for (j = 0; j < numOriginals; ++j)\n              if (J.$eq$(result.$index(0, j), complex1)) {\n                B.rotateSlice0(result, 0, j + 1);\n                continue $label0$0;\n              }\n            ++numOriginals;\n            result.addFirst$1(complex1);\n            continue $label0$0;\n          }\n          _box_0.maxSpecificity = 0;\n          for (t3 = complex1.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {\n            component = t3[_i];\n            if (component instanceof X.CompoundSelector0)\n              _box_0.maxSpecificity = Math.max(_box_0.maxSpecificity, this._extender$_sourceSpecificityFor$1(component));\n          }\n          if (result.any$1(result, new F.Extender__trim_closure1(_box_0, complex1)))\n            continue $label0$0;\n          t3 = new H.SubListIterable(selectors, 0, i, t1);\n          t3.SubListIterable$3(selectors, 0, i, t2);\n          if (t3.any$1(0, new F.Extender__trim_closure2(_box_0, complex1)))\n            continue $label0$0;\n          result.addFirst$1(complex1);\n        }\n      return result;\n    },\n    _extender$_sourceSpecificityFor$1: function(compound) {\n      var t1, t2, t3, specificity, _i, t4;\n      for (t1 = compound.components, t2 = t1.length, t3 = this._extender$_sourceSpecificity, specificity = 0, _i = 0; _i < t2; ++_i) {\n        t4 = t3.$index(0, t1[_i]);\n        specificity = Math.max(specificity, H.checkNum(t4 == null ? 0 : t4));\n      }\n      return specificity;\n    },\n    clone$0: function() {\n      var t3, t4, _this = this,\n        t1 = type$.legacy_SimpleSelector_2,\n        newSelectors = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList_2),\n        t2 = type$.legacy_ModifiableCssValue_legacy_SelectorList_2,\n        newMediaContexts = P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.legacy_List_legacy_CssMediaQuery_2),\n        oldToNewSelectors = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_CssValue_legacy_SelectorList_2, t2);\n      _this._extender$_selectors.forEach$1(0, new F.Extender_clone_closure0(_this, newSelectors, oldToNewSelectors, newMediaContexts));\n      t2 = type$.legacy_Extension_2;\n      t3 = B.copyMapOfMap0(_this._extender$_extensions, t1, type$.legacy_ComplexSelector_2, t2);\n      t2 = B.copyMapOfList0(_this._extender$_extensionsByExtender, t1, t2);\n      t1 = P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(t1, type$.legacy_int);\n      t1.addAll$1(0, _this._extender$_sourceSpecificity);\n      t4 = new P._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_legacy_ComplexSelector_2);\n      t4.addAll$1(0, _this._extender$_originals);\n      return new S.Tuple2(new F.Extender0(newSelectors, t3, t2, newMediaContexts, t1, t4, C.ExtendMode_normal0), oldToNewSelectors, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList_2);\n    },\n    get$_extender$_extensions: function() {\n      return this._extender$_extensions;\n    },\n    get$_extender$_sourceSpecificity: function() {\n      return this._extender$_sourceSpecificity;\n    }\n  };\n  F.Extender_extensionsWhereTarget_closure0.prototype = {\n    call$1: function(extension) {\n      return !extension.isOptional;\n    },\n    $signature: 342\n  };\n  F.Extender__registerSelector_closure0.prototype = {\n    call$0: function() {\n      return P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2);\n    },\n    $signature: 343\n  };\n  F.Extender_addExtension_closure2.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);\n    },\n    $signature: 95\n  };\n  F.Extender_addExtension_closure3.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);\n    },\n    $signature: 186\n  };\n  F.Extender_addExtension_closure4.prototype = {\n    call$0: function() {\n      return this.complex.get$maxSpecificity();\n    },\n    $signature: 11\n  };\n  F.Extender__extendExistingExtensions_closure1.prototype = {\n    call$0: function() {\n      return H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);\n    },\n    $signature: 186\n  };\n  F.Extender__extendExistingExtensions_closure2.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);\n    },\n    $signature: 95\n  };\n  F.Extender_addExtensions_closure0.prototype = {\n    call$2: function(target, newSources) {\n      var t1, extensionsForTarget, t2, t3, t4, selectorsForTarget, t5, existingSources, _this = this;\n      if (target instanceof N.PlaceholderSelector0 && T.isPrivate0(target.name))\n        return;\n      t1 = _this.$this;\n      extensionsForTarget = t1._extender$_extensionsByExtender.$index(0, target);\n      t2 = extensionsForTarget == null;\n      if (!t2) {\n        t3 = _this._box_0;\n        t4 = t3.extensionsToExtend;\n        C.JSArray_methods.addAll$1(t4 == null ? t3.extensionsToExtend = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2) : t4, extensionsForTarget);\n      }\n      selectorsForTarget = t1._extender$_selectors.$index(0, target);\n      t3 = selectorsForTarget != null;\n      if (t3) {\n        t4 = _this._box_0;\n        t5 = t4.selectorsToExtend;\n        (t5 == null ? t4.selectorsToExtend = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2) : t5).addAll$1(0, selectorsForTarget);\n      }\n      t1 = t1._extender$_extensions;\n      existingSources = t1.$index(0, target);\n      if (existingSources == null) {\n        t4 = _this.extender;\n        t1.$indexSet(0, target, t4.get$_extender$_extensions().$index(0, target));\n        if (!t2 || t3) {\n          t1 = _this._box_0;\n          t2 = t1.newExtensions;\n          t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector_2, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2) : t2;\n          t1.$indexSet(0, target, t4.get$_extender$_extensions().$index(0, target));\n        }\n      } else\n        newSources.forEach$1(0, new F.Extender_addExtensions__closure0(_this._box_0, existingSources, extensionsForTarget, selectorsForTarget, target));\n    },\n    $signature: 346\n  };\n  F.Extender_addExtensions__closure0.prototype = {\n    call$2: function(extender, extension) {\n      var t2, _this = this,\n        t1 = _this.existingSources;\n      if (t1.containsKey$1(extender))\n        return;\n      t1.$indexSet(0, extender, extension);\n      if (_this.extensionsForTarget != null || _this.selectorsForTarget != null) {\n        t1 = _this._box_0;\n        t2 = t1.newExtensions;\n        t1 = t2 == null ? t1.newExtensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SimpleSelector_2, type$.legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2) : t2;\n        t1.putIfAbsent$2(_this.target, new F.Extender_addExtensions___closure1()).putIfAbsent$2(extender, new F.Extender_addExtensions___closure2(extension));\n      }\n    },\n    $signature: 347\n  };\n  F.Extender_addExtensions___closure1.prototype = {\n    call$0: function() {\n      return P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_ComplexSelector_2, type$.legacy_Extension_2);\n    },\n    $signature: 95\n  };\n  F.Extender_addExtensions___closure2.prototype = {\n    call$0: function() {\n      return this.extension;\n    },\n    $signature: 348\n  };\n  F.Extender__extendList_closure0.prototype = {\n    call$1: function(complex) {\n      return complex != null;\n    },\n    $signature: 14\n  };\n  F.Extender__extendComplex_closure1.prototype = {\n    call$1: function(component) {\n      return H.setRuntimeTypeInfo([S.ComplexSelector$0(H.setRuntimeTypeInfo([component], type$.JSArray_legacy_ComplexSelectorComponent_2), this.complex.lineBreak)], type$.JSArray_legacy_ComplexSelector_2);\n    },\n    $signature: 350\n  };\n  F.Extender__extendComplex_closure2.prototype = {\n    call$1: function(path) {\n      var t1 = Y.weave0(J.map$1$1$ax(path, new F.Extender__extendComplex__closure1(), type$.legacy_List_legacy_ComplexSelectorComponent_2).toList$0(0));\n      return new H.MappedListIterable(t1, new F.Extender__extendComplex__closure2(this._box_0, this.$this, this.complex, path), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector0*>\"));\n    },\n    $signature: 351\n  };\n  F.Extender__extendComplex__closure1.prototype = {\n    call$1: function(complex) {\n      return complex.components;\n    },\n    $signature: 352\n  };\n  F.Extender__extendComplex__closure2.prototype = {\n    call$1: function(components) {\n      var _this = this,\n        t1 = _this.complex,\n        outputComplex = S.ComplexSelector$0(components, t1.lineBreak || J.any$1$ax(_this.path, new F.Extender__extendComplex___closure0())),\n        t2 = _this._box_0;\n      if (t2.first && _this.$this._extender$_originals.contains$1(0, t1))\n        _this.$this._extender$_originals.add$1(0, outputComplex);\n      t2.first = false;\n      return outputComplex;\n    },\n    $signature: 72\n  };\n  F.Extender__extendComplex___closure0.prototype = {\n    call$1: function(inputComplex) {\n      return inputComplex.lineBreak;\n    },\n    $signature: 14\n  };\n  F.Extender__extendCompound_closure5.prototype = {\n    call$1: function(state) {\n      state.assertCompatibleMediaContext$1(this.mediaQueryContext);\n      return state.extender;\n    },\n    $signature: 354\n  };\n  F.Extender__extendCompound_closure6.prototype = {\n    call$1: function(path) {\n      var complexes, toUnify, t2, t3, originals, t4, _box_0 = {},\n        t1 = this._box_1;\n      if (t1.first) {\n        t1.first = false;\n        complexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([X.CompoundSelector$0(J.expand$1$1$ax(path, new F.Extender__extendCompound__closure1(), type$.legacy_SimpleSelector_2))], type$.JSArray_legacy_ComplexSelectorComponent_2)], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2);\n      } else {\n        toUnify = Q.QueueList$(null, type$.legacy_List_legacy_ComplexSelectorComponent_2);\n        for (t1 = J.get$iterator$ax(path), t2 = type$.legacy_CompoundSelector_2, t3 = type$.JSArray_legacy_SimpleSelector_2, originals = null; t1.moveNext$0();) {\n          t4 = t1.get$current(t1);\n          if (t4.isOriginal) {\n            if (originals == null)\n              originals = H.setRuntimeTypeInfo([], t3);\n            C.JSArray_methods.addAll$1(originals, t2._as(C.JSArray_methods.get$last(t4.extender.components)).components);\n          } else\n            toUnify._queue_list$_add$1(t4.extender.components);\n        }\n        if (originals != null)\n          toUnify.addFirst$1(H.setRuntimeTypeInfo([X.CompoundSelector$0(originals)], type$.JSArray_legacy_ComplexSelectorComponent_2));\n        complexes = Y.unifyComplex0(toUnify);\n        if (complexes == null)\n          return null;\n      }\n      _box_0.lineBreak = false;\n      for (t1 = J.get$iterator$ax(path), t2 = this.mediaQueryContext; t1.moveNext$0();) {\n        t3 = t1.get$current(t1);\n        t3.assertCompatibleMediaContext$1(t2);\n        _box_0.lineBreak = _box_0.lineBreak || t3.extender.lineBreak;\n      }\n      t1 = J.map$1$1$ax(complexes, new F.Extender__extendCompound__closure2(_box_0), type$.legacy_ComplexSelector_2);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"ListIterable.E\"));\n    },\n    $signature: 355\n  };\n  F.Extender__extendCompound__closure1.prototype = {\n    call$1: function(state) {\n      return type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$last(state.extender.components)).components;\n    },\n    $signature: 356\n  };\n  F.Extender__extendCompound__closure2.prototype = {\n    call$1: function(components) {\n      return S.ComplexSelector$0(components, this._box_0.lineBreak);\n    },\n    $signature: 72\n  };\n  F.Extender__extendCompound_closure7.prototype = {\n    call$1: function(_) {\n      return false;\n    },\n    $signature: 14\n  };\n  F.Extender__extendCompound_closure8.prototype = {\n    call$1: function(complex) {\n      return J.$eq$(complex, this.original);\n    },\n    $signature: 14\n  };\n  F.Extender__extendCompound_closure9.prototype = {\n    call$1: function(complexes) {\n      return complexes != null;\n    },\n    $signature: 357\n  };\n  F.Extender__extendCompound_closure10.prototype = {\n    call$1: function(l) {\n      return l;\n    },\n    $signature: 358\n  };\n  F.Extender__extendSimple_withoutPseudo0.prototype = {\n    call$1: function(simple) {\n      var t1, t2,\n        extenders = this.extensions.$index(0, simple);\n      if (extenders == null)\n        return null;\n      t1 = this.targetsUsed;\n      if (t1 != null)\n        t1.add$1(0, simple);\n      t1 = this.$this;\n      if (t1._extender$_mode === C.ExtendMode_replace0) {\n        t1 = extenders.get$values(extenders);\n        return P.List_List$from(t1, true, H._instanceType(t1)._eval$1(\"Iterable.E\"));\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Extension_2);\n      t2.push(t1._extender$_extensionForSimple$1(simple));\n      for (t1 = extenders.get$values(extenders), t1 = t1.get$iterator(t1); t1.moveNext$0();)\n        t2.push(t1.get$current(t1));\n      return t2;\n    },\n    $signature: 359\n  };\n  F.Extender__extendSimple_closure0.prototype = {\n    call$1: function(pseudo) {\n      var t1 = this.withoutPseudo.call$1(pseudo);\n      return t1 == null ? H.setRuntimeTypeInfo([this.$this._extender$_extensionForSimple$1(pseudo)], type$.JSArray_legacy_Extension_2) : t1;\n    },\n    $signature: 360\n  };\n  F.Extender__extendPseudo_closure4.prototype = {\n    call$1: function(complex) {\n      return complex.components.length > 1;\n    },\n    $signature: 14\n  };\n  F.Extender__extendPseudo_closure5.prototype = {\n    call$1: function(complex) {\n      return complex.components.length === 1;\n    },\n    $signature: 14\n  };\n  F.Extender__extendPseudo_closure6.prototype = {\n    call$1: function(complex) {\n      return complex.components.length <= 1;\n    },\n    $signature: 14\n  };\n  F.Extender__extendPseudo_closure7.prototype = {\n    call$1: function(complex) {\n      var innerPseudo, t2,\n        t1 = complex.components;\n      if (t1.length !== 1)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n      if (!(C.JSArray_methods.get$first(t1) instanceof X.CompoundSelector0))\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n      t1 = type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$first(t1)).components;\n      if (t1.length !== 1)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n      if (!(C.JSArray_methods.get$first(t1) instanceof D.PseudoSelector0))\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n      innerPseudo = type$.legacy_PseudoSelector_2._as(C.JSArray_methods.get$first(t1));\n      t1 = innerPseudo.selector;\n      if (t1 == null)\n        return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n      t2 = this.pseudo;\n      switch (t2.normalizedName) {\n        case \"not\":\n          if (innerPseudo.normalizedName !== \"matches\")\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);\n          return t1.components;\n        case \"matches\":\n        case \"any\":\n        case \"current\":\n        case \"nth-child\":\n        case \"nth-last-child\":\n          if (innerPseudo.name !== t2.name)\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);\n          if (innerPseudo.argument != t2.argument)\n            return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);\n          return t1.components;\n        case \"has\":\n        case \"host\":\n        case \"host-context\":\n        case \"slotted\":\n          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n        default:\n          return H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelector_2);\n      }\n    },\n    $signature: 361\n  };\n  F.Extender__extendPseudo_closure8.prototype = {\n    call$1: function(complex) {\n      var t1 = this.pseudo;\n      return D.PseudoSelector$0(t1.name, t1.argument, !t1.isClass, D.SelectorList$0(H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2)));\n    },\n    $signature: 362\n  };\n  F.Extender__trim_closure1.prototype = {\n    call$1: function(complex2) {\n      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector0(complex2.components, this.complex1.components);\n    },\n    $signature: 14\n  };\n  F.Extender__trim_closure2.prototype = {\n    call$1: function(complex2) {\n      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && Y.complexIsSuperselector0(complex2.components, this.complex1.components);\n    },\n    $signature: 14\n  };\n  F.Extender_clone_closure0.prototype = {\n    call$2: function(simple, selectors) {\n      var t1, t2, t3, t4, t5, t6, newSelector, mediaContext, _this = this,\n        newSelectorSet = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_ModifiableCssValue_legacy_SelectorList_2);\n      _this.newSelectors.$indexSet(0, simple, newSelectorSet);\n      for (t1 = selectors.get$iterator(selectors), t2 = type$.ModifiableCssValue_legacy_SelectorList_2, t3 = _this.oldToNewSelectors, t4 = _this.$this._extender$_mediaContexts, t5 = _this.newMediaContexts; t1.moveNext$0();) {\n        t6 = t1.get$current(t1);\n        newSelector = new F.ModifiableCssValue0(t6.value, t6.span, t2);\n        newSelectorSet.add$1(0, newSelector);\n        t3.$indexSet(0, t6, newSelector);\n        mediaContext = t4.$index(0, t6);\n        if (mediaContext != null)\n          t5.$indexSet(0, newSelector, mediaContext);\n      }\n    },\n    $signature: 363\n  };\n  S.Extension0.prototype = {\n    assertCompatibleMediaContext$1: function(mediaContext) {\n      var t1 = this.mediaContext;\n      if (t1 == null)\n        return;\n      if (mediaContext != null && C.C_ListEquality.equals$2(0, t1, mediaContext))\n        return;\n      throw H.wrapException(E.SassException$0(string$.You_ma, this.span));\n    },\n    toString$0: function(_) {\n      var t1 = H.S(this.extender) + \" {@extend \" + H.S(this.target);\n      return t1 + (this.isOptional ? \" !optional\" : \"\") + \"}\";\n    },\n    get$target: function() {\n      return this.target;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  E.FiberClass.prototype = {};\n  E.Fiber.prototype = {};\n  F.FilesystemImporter0.prototype = {\n    canonicalize$1: function(url) {\n      var t1, resolved;\n      if (url.get$scheme() !== \"file\" && url.get$scheme() !== \"\")\n        return null;\n      t1 = $.$get$context();\n      resolved = B.resolveImportPath0(D.join(this._filesystem$_loadPath, t1.style.pathFromUri$1(M._parseUri(url)), null));\n      return resolved == null ? null : t1.toUri$1(t1.canonicalize$1(resolved));\n    },\n    load$1: function(_, url) {\n      var t3, t4,\n        t1 = $.$get$context(),\n        path = t1.style.pathFromUri$1(M._parseUri(url)),\n        t2 = B.readFile0(path);\n      t1 = J.$eq$(J.get$platform$x(self.process), \"win32\") || J.$eq$(J.get$platform$x(self.process), \"darwin\") ? t1.toUri$1(F.realCasePath0(path)) : url;\n      t3 = M.Syntax_forPath0(path);\n      t4 = t1.get$scheme();\n      if (t4 === \"\")\n        H.throwExpression(P.ArgumentError$value(t1, \"sourceMapUrl\", \"must be absolute\"));\n      return new E.ImporterResult0(t2, t1, t3);\n    },\n    toString$0: function(_) {\n      return this._filesystem$_loadPath;\n    }\n  };\n  G.FixedLengthListBuilder0.prototype = {\n    add$1: function(_, element) {\n      var t1, _this = this;\n      _this._fixed_length_list_builder0$_checkUnbuilt$0();\n      t1 = _this._fixed_length_list_builder0$_index;\n      _this._fixed_length_list_builder0$_list[t1] = element;\n      _this._fixed_length_list_builder0$_index = t1 + 1;\n    },\n    addAll$1: function(_, elements) {\n      var _this = this;\n      _this._fixed_length_list_builder0$_checkUnbuilt$0();\n      C.JSArray_methods.setAll$2(_this._fixed_length_list_builder0$_list, _this._fixed_length_list_builder0$_index, elements);\n      _this._fixed_length_list_builder0$_index = _this._fixed_length_list_builder0$_index + elements.length;\n    },\n    addRange$3: function(elements, start, end) {\n      var $length, t1, _this = this;\n      _this._fixed_length_list_builder0$_checkUnbuilt$0();\n      $length = (end == null ? J.get$length$asx(elements._collection$_source) : end) - start;\n      t1 = _this._fixed_length_list_builder0$_index;\n      C.JSArray_methods.setRange$4(_this._fixed_length_list_builder0$_list, t1, t1 + $length, elements, start);\n      _this._fixed_length_list_builder0$_index += $length;\n    },\n    addRange$2: function(elements, start) {\n      return this.addRange$3(elements, start, null);\n    },\n    build$0: function() {\n      this._fixed_length_list_builder0$_checkUnbuilt$0();\n      this._fixed_length_list_builder0$_index = -1;\n      return this._fixed_length_list_builder0$_list;\n    },\n    _fixed_length_list_builder0$_checkUnbuilt$0: function() {\n      if (this._fixed_length_list_builder0$_index === -1)\n        throw H.wrapException(P.StateError$(\"build() has already been called.\"));\n    }\n  };\n  B.ForRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitForRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = \"@for $\" + _this.variable + \" from \" + H.S(_this.from) + \" \",\n        t2 = _this.children;\n      return t1 + (_this.isExclusive ? \"to\" : \"through\") + \" \" + H.S(_this.to) + \" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  L.ForwardRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitForwardRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t3, _this = this,\n        t1 = \"@forward \" + H.S(new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([J.toString$0$(_this.url)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),\n        t2 = _this.shownMixinsAndFunctions;\n      if (t2 != null)\n        t1 = t1 + \" show \" + _this._forward_rule0$_memberList$2(t2, _this.shownVariables);\n      else {\n        t2 = _this.hiddenMixinsAndFunctions;\n        if (t2 != null) {\n          t3 = t2._base;\n          t3 = t3.get$isNotEmpty(t3);\n        } else\n          t3 = false;\n        if (t3)\n          t1 = t1 + \" hide \" + _this._forward_rule0$_memberList$2(t2, _this.hiddenVariables);\n      }\n      t2 = _this.prefix;\n      if (t2 != null)\n        t1 += \" as \" + t2 + \"*\";\n      t2 = _this.configuration;\n      t1 = (t2.length !== 0 ? t1 + (\" with (\" + C.JSArray_methods.join$1(t2, \", \") + \")\") : t1) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _forward_rule0$_memberList$2: function(mixinsAndFunctions, variables) {\n      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),\n        t2 = this.shownMixinsAndFunctions;\n      if (t2 != null)\n        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)\n          t1.push(t2.get$current(t2));\n      t2 = this.shownVariables;\n      if (t2 != null)\n        for (t2 = t2._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)\n          t1.push(\"$\" + H.S(t2.get$current(t2)));\n      return C.JSArray_methods.join$1(t1, \", \");\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  R.ForwardedModuleView0.prototype = {\n    get$url: function() {\n      return this._forwarded_view0$_inner.get$url();\n    },\n    get$upstream: function() {\n      return this._forwarded_view0$_inner.get$upstream();\n    },\n    get$extender: function() {\n      return this._forwarded_view0$_inner.get$extender();\n    },\n    get$css: function(_) {\n      var t1 = this._forwarded_view0$_inner;\n      return t1.get$css(t1);\n    },\n    get$transitivelyContainsCss: function() {\n      return this._forwarded_view0$_inner.get$transitivelyContainsCss();\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this._forwarded_view0$_inner.get$transitivelyContainsExtensions();\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      var _s19_ = \"Undefined variable.\",\n        t1 = this._forwarded_view0$_rule,\n        t2 = t1.shownVariables;\n      if (t2 != null && !t2._base.contains$1(0, $name))\n        throw H.wrapException(E.SassScriptException$0(_s19_));\n      else {\n        t2 = t1.hiddenVariables;\n        if (t2 != null && t2._base.contains$1(0, $name))\n          throw H.wrapException(E.SassScriptException$0(_s19_));\n      }\n      t1 = t1.prefix;\n      if (t1 != null) {\n        if (!C.JSString_methods.startsWith$1($name, t1))\n          throw H.wrapException(E.SassScriptException$0(_s19_));\n        $name = C.JSString_methods.substring$1($name, t1.length);\n      }\n      return this._forwarded_view0$_inner.setVariable$3($name, value, nodeWithSpan);\n    },\n    variableIdentity$1: function($name) {\n      var t1 = this._forwarded_view0$_rule.prefix;\n      if (t1 != null)\n        $name = J.substring$1$s($name, t1.length);\n      return this._forwarded_view0$_inner.variableIdentity$1($name);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof R.ForwardedModuleView0 && J.$eq$(this._forwarded_view0$_inner, other._forwarded_view0$_inner) && this._forwarded_view0$_rule === other._forwarded_view0$_rule;\n    },\n    get$hashCode: function(_) {\n      return (J.get$hashCode$(this._forwarded_view0$_inner) ^ H.Primitives_objectHashCode(this._forwarded_view0$_rule)) >>> 0;\n    },\n    cloneCss$0: function() {\n      return R.ForwardedModuleView$0(this._forwarded_view0$_inner.cloneCss$0(), this._forwarded_view0$_rule, this.$ti._eval$1(\"1*\"));\n    },\n    toString$0: function(_) {\n      return \"forwarded \" + H.S(this._forwarded_view0$_inner);\n    },\n    $isModule0: 1,\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    }\n  };\n  F.FunctionExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitFunctionExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? t1 + \".\" : \"\";\n      t1 += this.name.toString$0(0) + this.$arguments.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.JSFunction0.prototype = {};\n  F.SupportsFunction0.prototype = {\n    toString$0: function(_) {\n      return this.name.toString$0(0) + \"(\" + this.$arguments.toString$0(0) + \")\";\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.SassFunction0.prototype = {\n    accept$1$1: function(visitor) {\n      var t1, t2;\n      if (!visitor._inspect)\n        H.throwExpression(E.SassScriptException$0(this.toString$0(0) + \" isn't a valid CSS value.\"));\n      t1 = visitor._buffer;\n      t1.write$1(0, \"get-function(\");\n      t2 = this.callable;\n      visitor._serialize0$_visitQuotedString$1(t2.get$name(t2));\n      t1.writeCharCode$1(41);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertFunction$1: function($name) {\n      return this;\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.SassFunction0 && J.$eq$(this.callable, other.callable);\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.callable);\n    }\n  };\n  M.FunctionRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitFunctionRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@function \" + H.S(this.name) + \"(\" + H.S(this.$arguments) + \") {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    }\n  };\n  Y.unifyComplex_closure0.prototype = {\n    call$1: function(complex) {\n      var t1 = J.getInterceptor$asx(complex);\n      return t1.sublist$2(complex, 0, t1.get$length(complex) - 1);\n    },\n    $signature: 85\n  };\n  Y._weaveParents_closure6.prototype = {\n    call$2: function(group1, group2) {\n      var unified, t1, _null = null;\n      if (C.C_ListEquality.equals$2(0, group1, group2))\n        return group1;\n      if (!(J.get$first$ax(group1) instanceof X.CompoundSelector0) || !(J.get$first$ax(group2) instanceof X.CompoundSelector0))\n        return _null;\n      if (Y.complexIsParentSuperselector0(group1, group2))\n        return group2;\n      if (Y.complexIsParentSuperselector0(group2, group1))\n        return group1;\n      if (!Y._mustUnify0(group1, group2))\n        return _null;\n      unified = Y.unifyComplex0(H.setRuntimeTypeInfo([group1, group2], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n      if (unified == null)\n        return _null;\n      t1 = J.getInterceptor$asx(unified);\n      if (t1.get$length(unified) > 1)\n        return _null;\n      return t1.get$first(unified);\n    },\n    $signature: 365\n  };\n  Y._weaveParents_closure7.prototype = {\n    call$1: function(sequence) {\n      return Y.complexIsParentSuperselector0(sequence.get$first(sequence), this.group);\n    },\n    $signature: 366\n  };\n  Y._weaveParents_closure8.prototype = {\n    call$1: function(chunk) {\n      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure4(), type$.legacy_ComplexSelectorComponent_2);\n    },\n    $signature: 190\n  };\n  Y._weaveParents__closure4.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 85\n  };\n  Y._weaveParents_closure9.prototype = {\n    call$1: function(sequence) {\n      return sequence.get$length(sequence) === 0;\n    },\n    $signature: 169\n  };\n  Y._weaveParents_closure10.prototype = {\n    call$1: function(chunk) {\n      return J.expand$1$1$ax(chunk, new Y._weaveParents__closure3(), type$.legacy_ComplexSelectorComponent_2);\n    },\n    $signature: 190\n  };\n  Y._weaveParents__closure3.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 85\n  };\n  Y._weaveParents_closure11.prototype = {\n    call$1: function(choice) {\n      return J.get$isNotEmpty$asx(choice);\n    },\n    $signature: 368\n  };\n  Y._weaveParents_closure12.prototype = {\n    call$1: function(path) {\n      var t1 = J.expand$1$1$ax(path, new Y._weaveParents__closure2(), type$.legacy_ComplexSelectorComponent_2);\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    $signature: 369\n  };\n  Y._weaveParents__closure2.prototype = {\n    call$1: function(group) {\n      return group;\n    },\n    $signature: 370\n  };\n  Y._mustUnify_closure0.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(component.components, new Y._mustUnify__closure0(this.uniqueSelectors));\n    },\n    $signature: 111\n  };\n  Y._mustUnify__closure0.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (!(simple instanceof N.IDSelector0))\n        t1 = simple instanceof D.PseudoSelector0 && !simple.isClass;\n      else\n        t1 = true;\n      return t1 && this.uniqueSelectors.contains$1(0, simple);\n    },\n    $signature: 20\n  };\n  Y.paths_closure0.prototype = {\n    call$2: function(paths, choice) {\n      var t1 = this.T;\n      t1 = J.expand$1$1$ax(choice, new Y.paths__closure0(paths, t1), t1._eval$1(\"List<0*>*\"));\n      return P.List_List$from(t1, true, t1.$ti._eval$1(\"Iterable.E\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<List<0*>*>*(List<List<0*>*>*,List<0*>*)\");\n    }\n  };\n  Y.paths__closure0.prototype = {\n    call$1: function(option) {\n      var t1 = this.T;\n      return J.map$1$1$ax(this.paths, new Y.paths___closure0(option, t1), t1._eval$1(\"List<0*>*\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"Iterable<List<0*>*>*(0*)\");\n    }\n  };\n  Y.paths___closure0.prototype = {\n    call$1: function(path) {\n      var t2,\n        t1 = H.setRuntimeTypeInfo([], this.T._eval$1(\"JSArray<0*>\"));\n      for (t2 = J.get$iterator$ax(path); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(this.option);\n      return t1;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(List<0*>*)\");\n    }\n  };\n  Y._hasRoot_closure0.prototype = {\n    call$1: function(simple) {\n      return simple instanceof D.PseudoSelector0 && simple.isClass && simple.normalizedName === \"root\";\n    },\n    $signature: 20\n  };\n  Y.listIsSuperselector_closure0.prototype = {\n    call$1: function(complex1) {\n      return C.JSArray_methods.any$1(this.list1, new Y.listIsSuperselector__closure0(complex1));\n    },\n    $signature: 14\n  };\n  Y.listIsSuperselector__closure0.prototype = {\n    call$1: function(complex2) {\n      return Y.complexIsSuperselector0(complex2.components, this.complex1.components);\n    },\n    $signature: 14\n  };\n  Y._simpleIsSuperselectorOfCompound_closure0.prototype = {\n    call$1: function(theirSimple) {\n      var t1 = this.simple;\n      if (J.$eq$(t1, theirSimple))\n        return true;\n      if (theirSimple instanceof D.PseudoSelector0 && theirSimple.selector != null && $._subselectorPseudos0.contains$1(0, theirSimple.normalizedName))\n        return C.JSArray_methods.every$1(theirSimple.selector.components, new Y._simpleIsSuperselectorOfCompound__closure0(t1));\n      else\n        return false;\n    },\n    $signature: 20\n  };\n  Y._simpleIsSuperselectorOfCompound__closure0.prototype = {\n    call$1: function(complex) {\n      var t1 = complex.components;\n      if (t1.length !== 1)\n        return false;\n      return C.JSArray_methods.contains$1(type$.legacy_CompoundSelector_2._as(C.JSArray_methods.get$single(t1)).components, this.simple);\n    },\n    $signature: 14\n  };\n  Y._selectorPseudoIsSuperselector_closure6.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 55\n  };\n  Y._selectorPseudoIsSuperselector_closure7.prototype = {\n    call$1: function(complex1) {\n      var t1 = complex1.components,\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2),\n        t3 = this.parents;\n      if (t3 != null)\n        for (t3 = t3.get$iterator(t3); t3.moveNext$0();)\n          t2.push(t3.get$current(t3));\n      t2.push(this.compound2);\n      return Y.complexIsSuperselector0(t1, t2);\n    },\n    $signature: 14\n  };\n  Y._selectorPseudoIsSuperselector_closure8.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 55\n  };\n  Y._selectorPseudoIsSuperselector_closure9.prototype = {\n    call$1: function(pseudo2) {\n      var t1 = pseudo2.selector;\n      return Y.listIsSuperselector0(this.pseudo1.selector.components, t1.components);\n    },\n    $signature: 55\n  };\n  Y._selectorPseudoIsSuperselector_closure10.prototype = {\n    call$1: function(complex) {\n      return C.JSArray_methods.any$1(this.compound2.components, new Y._selectorPseudoIsSuperselector__closure0(complex, this.pseudo1));\n    },\n    $signature: 14\n  };\n  Y._selectorPseudoIsSuperselector__closure0.prototype = {\n    call$1: function(simple2) {\n      var compound1, _this = this;\n      if (simple2 instanceof F.TypeSelector0) {\n        compound1 = C.JSArray_methods.get$last(_this.complex.components);\n        return compound1 instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure1(simple2));\n      } else if (simple2 instanceof N.IDSelector0) {\n        compound1 = C.JSArray_methods.get$last(_this.complex.components);\n        return compound1 instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(compound1.components, new Y._selectorPseudoIsSuperselector___closure2(simple2));\n      } else if (simple2 instanceof D.PseudoSelector0 && simple2.name === _this.pseudo1.name && simple2.selector != null)\n        return Y.listIsSuperselector0(simple2.selector.components, H.setRuntimeTypeInfo([_this.complex], type$.JSArray_legacy_ComplexSelector_2));\n      else\n        return false;\n    },\n    $signature: 20\n  };\n  Y._selectorPseudoIsSuperselector___closure1.prototype = {\n    call$1: function(simple1) {\n      var t1;\n      if (simple1 instanceof F.TypeSelector0) {\n        t1 = this.simple2.name.$eq(0, simple1.name);\n        t1 = !t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 20\n  };\n  Y._selectorPseudoIsSuperselector___closure2.prototype = {\n    call$1: function(simple1) {\n      var t1;\n      if (simple1 instanceof N.IDSelector0) {\n        t1 = simple1.name;\n        t1 = this.simple2.name !== t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 20\n  };\n  Y._selectorPseudoIsSuperselector_closure11.prototype = {\n    call$1: function(pseudo2) {\n      return J.$eq$(this.pseudo1.selector, pseudo2.selector);\n    },\n    $signature: 55\n  };\n  Y._selectorPseudoIsSuperselector_closure12.prototype = {\n    call$1: function(pseudo2) {\n      var t1, t2;\n      if (pseudo2 instanceof D.PseudoSelector0) {\n        t1 = this.pseudo1;\n        if (pseudo2.name === t1.name)\n          if (pseudo2.argument == t1.argument) {\n            t2 = pseudo2.selector;\n            t2 = Y.listIsSuperselector0(t1.selector.components, t2.components);\n            t1 = t2;\n          } else\n            t1 = false;\n        else\n          t1 = false;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 20\n  };\n  Y._selectorPseudosNamed_closure0.prototype = {\n    call$1: function(pseudo) {\n      return pseudo.isClass === this.isClass && pseudo.selector != null && pseudo.name === this.name;\n    },\n    $signature: 55\n  };\n  Y.closure114.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return t1.$index($arguments, 0).get$isTruthy() ? t1.$index($arguments, 1) : t1.$index($arguments, 2);\n    },\n    $signature: 3\n  };\n  N.IDSelector0.prototype = {\n    get$minSpecificity: function() {\n      return H._asIntS(Math.pow(M.SimpleSelector0.prototype.get$minSpecificity.call(this), 2));\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._buffer;\n      t1.writeCharCode$1(35);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new N.IDSelector0(this.name + suffix);\n    },\n    unify$1: function(compound) {\n      if (C.JSArray_methods.any$1(compound, new N.IDSelector_unify_closure0(this)))\n        return null;\n      return this.super$SimpleSelector$unify0(compound);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.IDSelector0 && other.name === this.name;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  N.IDSelector_unify_closure0.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (simple instanceof N.IDSelector0) {\n        t1 = simple.name;\n        t1 = this.$this.name !== t1;\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 20\n  };\n  L.IfExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitIfExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"if\" + this.$arguments.toString$0(0);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.IfRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitIfRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, t1 = {};\n      t1.first = true;\n      t2 = this.clauses;\n      return new H.MappedListIterable(t2, new V.IfRule_toString_closure0(t1), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \" \");\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.IfRule_toString_closure0.prototype = {\n    call$1: function(clause) {\n      var t1 = this._box_0,\n        $name = t1.first ? \"if\" : \"else\";\n      t1.first = false;\n      return \"@\" + $name + \" \" + H.S(clause.expression) + \" {\" + C.JSArray_methods.join$1(clause.children, \" \") + \"}\";\n    },\n    $signature: 372\n  };\n  V.IfClause0.prototype = {\n    toString$0: function(_) {\n      var t1 = this.expression;\n      t1 = t1 == null ? \"@else\" : \"@if \" + t1.toString$0(0);\n      return t1 + (\" {\" + C.JSArray_methods.join$1(this.children, \" \") + \"}\");\n    }\n  };\n  V.IfClause$__closure0.prototype = {\n    call$1: function(child) {\n      var t1;\n      if (!(child instanceof Z.VariableDeclaration0))\n        if (!(child instanceof M.FunctionRule0))\n          if (!(child instanceof T.MixinRule0))\n            t1 = child instanceof B.ImportRule0 && C.JSArray_methods.any$1(child.imports, new V.IfClause$___closure0());\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 192\n  };\n  V.IfClause$___closure0.prototype = {\n    call$1: function($import) {\n      return $import instanceof B.DynamicImport0;\n    },\n    $signature: 193\n  };\n  F.NodeImporter.prototype = {\n    load$3: function(_, url, previous, forImport) {\n      var result, previousString, t1, t2, t3, t4, _i, value, _this = this,\n        parsed = P.Uri_parse(url);\n      if (parsed.get$scheme() === \"\" || parsed.get$scheme() === \"file\") {\n        result = _this._resolveRelativePath$3($.$get$context().style.pathFromUri$1(M._parseUri(parsed)), previous, forImport);\n        if (result != null)\n          return result;\n      }\n      previousString = previous.get$scheme() === \"file\" ? $.$get$context().style.pathFromUri$1(M._parseUri(previous)) : previous.toString$0(0);\n      for (t1 = _this._implementation$_importers, t2 = t1.length, t3 = _this._implementation$_context, t4 = type$.JSArray_legacy_Object, _i = 0; _i < t2; ++_i) {\n        value = J.apply$2$x(t1[_i], t3, H.setRuntimeTypeInfo([url, previousString], t4));\n        if (value != null)\n          return _this._handleImportResult$4(url, previous, value, forImport);\n      }\n      return _this._resolveLoadPathFromUrl$3(parsed, previous, forImport);\n    },\n    loadAsync$3: function(url, previous, forImport) {\n      return this.loadAsync$body$NodeImporter(url, previous, forImport);\n    },\n    loadAsync$body$NodeImporter: function(url, previous, forImport) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Tuple2_of_legacy_String_and_legacy_String),\n        $async$returnValue, $async$self = this, result, previousString, t1, t2, _i, value, parsed;\n      var $async$loadAsync$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              parsed = P.Uri_parse(url);\n              if (parsed.get$scheme() === \"\" || parsed.get$scheme() === \"file\") {\n                result = $async$self._resolveRelativePath$3($.$get$context().style.pathFromUri$1(M._parseUri(parsed)), previous, forImport);\n                if (result != null) {\n                  $async$returnValue = result;\n                  // goto return\n                  $async$goto = 1;\n                  break;\n                }\n              }\n              previousString = previous.get$scheme() === \"file\" ? $.$get$context().style.pathFromUri$1(M._parseUri(previous)) : previous.toString$0(0);\n              t1 = $async$self._implementation$_importers, t2 = t1.length, _i = 0;\n            case 3:\n              // for condition\n              if (!(_i < t2)) {\n                // goto after for\n                $async$goto = 5;\n                break;\n              }\n              $async$goto = 6;\n              return P._asyncAwait($async$self._callImporterAsync$3(t1[_i], url, previousString), $async$loadAsync$3);\n            case 6:\n              // returning from await.\n              value = $async$result;\n              if (value != null) {\n                $async$returnValue = $async$self._handleImportResult$4(url, previous, value, forImport);\n                // goto return\n                $async$goto = 1;\n                break;\n              }\n            case 4:\n              // for update\n              ++_i;\n              // goto for condition\n              $async$goto = 3;\n              break;\n            case 5:\n              // after for\n              $async$returnValue = $async$self._resolveLoadPathFromUrl$3(parsed, previous, forImport);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$loadAsync$3, $async$completer);\n    },\n    _resolveRelativePath$3: function(path, previous, forImport) {\n      var result,\n        t1 = $.$get$context(),\n        t2 = t1.style;\n      if (t2.rootLength$1(path) > 0)\n        return this._tryPath$2(path, forImport);\n      if (previous.get$scheme() === \"file\") {\n        result = this._tryPath$2(D.join(t1.dirname$1(t2.pathFromUri$1(M._parseUri(previous))), path, null), forImport);\n        if (result != null)\n          return result;\n      }\n      return null;\n    },\n    _resolveLoadPathFromUrl$3: function(url, previous, forImport) {\n      return url.get$scheme() === \"\" || url.get$scheme() === \"file\" ? this._resolveLoadPath$3($.$get$context().style.pathFromUri$1(M._parseUri(url)), previous, forImport) : null;\n    },\n    _resolveLoadPath$3: function(path, previous, forImport) {\n      var t1, t2, _i, includePath, t3, result, _null = null,\n        cwdResult = this._tryPath$2(D.absolute(path), forImport);\n      if (cwdResult != null)\n        return cwdResult;\n      for (t1 = this._includePaths, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        includePath = t1[_i];\n        t3 = $.$get$context();\n        result = this._tryPath$2(t3.absolute$7(t3.join$8(0, includePath, path, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null, _null), forImport);\n        if (result != null)\n          return result;\n      }\n      return _null;\n    },\n    _tryPath$2: function(path, forImport) {\n      var resolved = forImport ? B.inImportRule0(new F.NodeImporter__tryPath_closure(path)) : B.resolveImportPath0(path);\n      return resolved == null ? null : new S.Tuple2(B.readFile0(resolved), $.$get$context().toUri$1(resolved).toString$0(0), type$.Tuple2_of_legacy_String_and_legacy_String);\n    },\n    _handleImportResult$4: function(url, previous, value, forImport) {\n      var resolved,\n        t1 = self.Error;\n      if (H._asBoolS($.$get$_jsInstanceOf().call$2(value, t1)))\n        throw H.wrapException(value);\n      if (!type$.legacy_NodeImporterResult._is(value))\n        return null;\n      t1 = J.getInterceptor$x(value);\n      if (t1.get$file(value) == null) {\n        t1 = t1.get$contents(value);\n        if (t1 == null)\n          t1 = \"\";\n        return new S.Tuple2(t1, url, type$.Tuple2_of_legacy_String_and_legacy_String);\n      } else if (t1.get$contents(value) != null)\n        return new S.Tuple2(t1.get$contents(value), t1.get$file(value), type$.Tuple2_of_legacy_String_and_legacy_String);\n      else {\n        resolved = this._resolveRelativePath$3(t1.get$file(value), previous, forImport);\n        if (resolved == null)\n          resolved = this._resolveLoadPath$3(t1.get$file(value), previous, forImport);\n        if (resolved != null)\n          return resolved;\n        throw H.wrapException(\"Can't find stylesheet to import.\");\n      }\n    },\n    _callImporterAsync$3: function(importer, url, previousString) {\n      return this._callImporterAsync$body$NodeImporter(importer, url, previousString);\n    },\n    _callImporterAsync$body$NodeImporter: function(importer, url, previousString) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Object),\n        $async$returnValue, $async$self = this, t1, result;\n      var $async$_callImporterAsync$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              t1 = new P._Future($.Zone__current, type$._Future_legacy_Object);\n              result = J.apply$2$x(importer, $async$self._implementation$_context, H.setRuntimeTypeInfo([url, previousString, P.allowInterop(new P._AsyncCompleter(t1, type$._AsyncCompleter_legacy_Object).get$complete())], type$.JSArray_legacy_Object));\n              $async$goto = H._asBoolS($.$get$_isUndefined().call$1(result)) ? 3 : 4;\n              break;\n            case 3:\n              // then\n              $async$goto = 5;\n              return P._asyncAwait(t1, $async$_callImporterAsync$3);\n            case 5:\n              // returning from await.\n              $async$returnValue = $async$result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 4:\n              // join\n              $async$returnValue = result;\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$_callImporterAsync$3, $async$completer);\n    }\n  };\n  F.NodeImporter__tryPath_closure.prototype = {\n    call$0: function() {\n      return B.resolveImportPath0(this.path);\n    },\n    $signature: 13\n  };\n  F.ModifiableCssImport0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssImport$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $isCssImport0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  R.ImportCache0.prototype = {\n    canonicalize$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      var resolvedUrl, canonicalUrl;\n      if (baseImporter != null) {\n        resolvedUrl = baseUrl != null ? baseUrl.resolveUri$1(url) : url;\n        canonicalUrl = this._import_cache$_canonicalize$3(baseImporter, resolvedUrl, forImport);\n        if (canonicalUrl != null)\n          return new S.Tuple3(baseImporter, canonicalUrl, resolvedUrl, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2);\n      }\n      return this._import_cache$_canonicalizeCache.putIfAbsent$2(new S.Tuple2(url, forImport, type$.Tuple2_of_legacy_Uri_and_legacy_bool), new R.ImportCache_canonicalize_closure0(this, url, forImport));\n    },\n    _import_cache$_canonicalize$3: function(importer, url, forImport) {\n      var result = forImport ? B.inImportRule0(new R.ImportCache__canonicalize_closure0(importer, url)) : importer.canonicalize$1(url);\n      if ((result == null ? null : result.get$scheme()) === \"\")\n        this._import_cache$_logger.warn$2$deprecation(0, \"Importer \" + H.S(importer) + \" canonicalized \" + url.toString$0(0) + \" to \" + H.S(result) + string$.x2ex0aRela, true);\n      return result;\n    },\n    import$4$baseImporter$baseUrl$forImport: function(url, baseImporter, baseUrl, forImport) {\n      var t1, stylesheet,\n        tuple = this.canonicalize$4$baseImporter$baseUrl$forImport(url, baseImporter, baseUrl, forImport);\n      if (tuple == null)\n        return null;\n      t1 = tuple.item1;\n      stylesheet = this.importCanonical$3(t1, tuple.item2, tuple.item3);\n      if (stylesheet == null)\n        return null;\n      return new S.Tuple2(t1, stylesheet, type$.Tuple2_of_legacy_Importer_and_legacy_Stylesheet_2);\n    },\n    importCanonical$3: function(importer, canonicalUrl, originalUrl) {\n      return this._import_cache$_importCache.putIfAbsent$2(canonicalUrl, new R.ImportCache_importCanonical_closure0(this, importer, canonicalUrl, originalUrl));\n    },\n    humanize$1: function(canonicalUrl) {\n      var t2, url,\n        t1 = this._import_cache$_canonicalizeCache;\n      t1 = t1.get$values(t1);\n      t2 = H._instanceType(t1);\n      url = Y.minBy(new H.MappedIterable(new H.WhereIterable(t1, new R.ImportCache_humanize_closure2(canonicalUrl), t2._eval$1(\"WhereIterable<Iterable.E>\")), new R.ImportCache_humanize_closure3(), t2._eval$1(\"MappedIterable<Iterable.E,Uri*>\")), new R.ImportCache_humanize_closure4(), type$.legacy_Uri, type$.dynamic);\n      if (url == null)\n        return canonicalUrl;\n      t1 = $.$get$url();\n      return url.resolve$1(X.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());\n    }\n  };\n  R.ImportCache_canonicalize_closure0.prototype = {\n    call$0: function() {\n      var t1, t2, t3, _i, importer, canonicalUrl;\n      for (t1 = this.$this, t2 = this.url, t3 = this.forImport, _i = 0; false; ++_i) {\n        importer = C.List_empty17[_i];\n        canonicalUrl = t1._import_cache$_canonicalize$3(importer, t2, t3);\n        if (canonicalUrl != null)\n          return new S.Tuple3(importer, canonicalUrl, t2, type$.Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2);\n      }\n      return null;\n    },\n    $signature: 375\n  };\n  R.ImportCache__canonicalize_closure0.prototype = {\n    call$0: function() {\n      return this.importer.canonicalize$1(this.url);\n    },\n    $signature: 161\n  };\n  R.ImportCache_importCanonical_closure0.prototype = {\n    call$0: function() {\n      var t3, _this = this,\n        t1 = _this.canonicalUrl,\n        result = _this.importer.load$1(0, t1),\n        t2 = _this.$this;\n      t2._import_cache$_resultsCache.$indexSet(0, t1, result);\n      t3 = _this.originalUrl;\n      t1 = t3 == null ? t1 : t3.resolveUri$1(t1);\n      return V.Stylesheet_Stylesheet$parse0(result.contents, result.syntax, t2._import_cache$_logger, t1);\n    },\n    $signature: 194\n  };\n  R.ImportCache_humanize_closure2.prototype = {\n    call$1: function(tuple) {\n      var t1 = tuple == null ? null : tuple.item2;\n      return J.$eq$(t1, this.canonicalUrl);\n    },\n    $signature: 377\n  };\n  R.ImportCache_humanize_closure3.prototype = {\n    call$1: function(tuple) {\n      return tuple.item3;\n    },\n    $signature: 378\n  };\n  R.ImportCache_humanize_closure4.prototype = {\n    call$1: function(url) {\n      return J.get$length$asx(J.get$path$x(url));\n    },\n    $signature: 41\n  };\n  B.ImportRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitImportRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@import \" + C.JSArray_methods.join$1(this.imports, \", \") + \";\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.Importer0.prototype = {};\n  F.NodeImporterResult0.prototype = {};\n  A.IncludeRule0.prototype = {\n    get$spanWithoutContent: function() {\n      var t2, t3,\n        t1 = this.span;\n      if (!(this.content == null)) {\n        t2 = t1.file;\n        t3 = this.$arguments.span;\n        t3 = B.SpanExtensions_trim0(t2.span$2(Y.FileLocation$_(t2, t1._file$_start).offset, Y.FileLocation$_(t3.file, t3._end).offset));\n        t1 = t3;\n      }\n      return t1;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitIncludeRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t2, _this = this,\n        t1 = _this.namespace;\n      t1 = t1 != null ? \"@include \" + (t1 + \".\") : \"@include \";\n      t1 += _this.name;\n      t2 = _this.$arguments;\n      if (!t2.get$isEmpty(t2))\n        t1 += \"(\" + t2.toString$0(0) + \")\";\n      t2 = _this.content;\n      t1 += t2 == null ? \";\" : \" \" + t2.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.Interpolation0.prototype = {\n    get$asPlain: function() {\n      var first,\n        t1 = this.contents,\n        t2 = t1.length;\n      if (t2 === 0)\n        return \"\";\n      if (t2 > 1)\n        return null;\n      first = C.JSArray_methods.get$first(t1);\n      return typeof first == \"string\" ? first : null;\n    },\n    get$initialPlain: function() {\n      var first = C.JSArray_methods.get$first(this.contents);\n      return typeof first == \"string\" ? first : \"\";\n    },\n    Interpolation$20: function(contents, span) {\n      var t1, t2, t3, i, t4, t5,\n        _s8_ = \"contents\";\n      for (t1 = this.contents, t2 = t1.length, t3 = type$.legacy_Expression_2, i = 0; i < t2; ++i) {\n        t4 = t1[i];\n        t5 = typeof t4 == \"string\";\n        if (!t5 && !t3._is(t4))\n          throw H.wrapException(P.ArgumentError$value(t1, _s8_, string$.May_on));\n        if (i !== 0 && typeof t1[i - 1] == \"string\" && t5)\n          throw H.wrapException(P.ArgumentError$value(t1, _s8_, \"May not contain adjacent Strings.\"));\n      }\n    },\n    toString$0: function(_) {\n      var t1 = this.contents;\n      return new H.MappedListIterable(t1, new X.Interpolation_toString_closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$0(0);\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.Interpolation_toString_closure0.prototype = {\n    call$1: function(value) {\n      return typeof value == \"string\" ? value : \"#{\" + H.S(value) + \"}\";\n    },\n    $signature: 44\n  };\n  X.SupportsInterpolation0.prototype = {\n    toString$0: function(_) {\n      return \"#{\" + H.S(this.expression) + \"}\";\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Z.InterpolationBuffer0.prototype = {\n    add$1: function(_, expression) {\n      this._interpolation_buffer0$_flushText$0();\n      this._interpolation_buffer0$_contents.push(expression);\n    },\n    addInterpolation$1: function(interpolation) {\n      var first, t1, _this = this,\n        toAdd = interpolation.contents;\n      if (toAdd.length === 0)\n        return;\n      first = C.JSArray_methods.get$first(toAdd);\n      if (typeof first == \"string\") {\n        _this._interpolation_buffer0$_text._contents += first;\n        toAdd = H.SubListIterable$(toAdd, 1, null, H._arrayInstanceType(toAdd)._precomputed1);\n      }\n      _this._interpolation_buffer0$_flushText$0();\n      t1 = _this._interpolation_buffer0$_contents;\n      C.JSArray_methods.addAll$1(t1, toAdd);\n      if (typeof C.JSArray_methods.get$last(t1) == \"string\")\n        _this._interpolation_buffer0$_text._contents += H.S(t1.pop());\n    },\n    _interpolation_buffer0$_flushText$0: function() {\n      var t1 = this._interpolation_buffer0$_text,\n        t2 = t1._contents;\n      if (t2.length === 0)\n        return;\n      this._interpolation_buffer0$_contents.push(t2.charCodeAt(0) == 0 ? t2 : t2);\n      t1._contents = \"\";\n    },\n    interpolation$1: function(span) {\n      var t2, t3, _i,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n      for (t2 = this._interpolation_buffer0$_contents, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      t2 = this._interpolation_buffer0$_text._contents;\n      if (t2.length !== 0)\n        t1.push(t2.charCodeAt(0) == 0 ? t2 : t2);\n      return X.Interpolation$0(t1, span);\n    },\n    toString$0: function(_) {\n      var t1, t2, _i, t3, element;\n      for (t1 = this._interpolation_buffer0$_contents, t2 = t1.length, _i = 0, t3 = \"\"; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        element = t1[_i];\n        t3 = typeof element == \"string\" ? t3 + element : t3 + \"#{\" + H.S(element) + H.Primitives_stringFromCharCode(125);\n      }\n      t1 = t3 + this._interpolation_buffer0$_text.toString$0(0);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  F.realCasePath_closure0.prototype = {\n    call$1: function(realPath) {\n      return B.equalsIgnoreCase0(X.ParsedPath_ParsedPath$parse(realPath, $.$get$context().style).get$basename(), this.basename);\n    },\n    $signature: 5\n  };\n  U.ModifiableCssKeyframeBlock0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssKeyframeBlock$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return U.ModifiableCssKeyframeBlock$0(this.selector, this.span);\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  E.KeyframeSelectorParser0.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new E.KeyframeSelectorParser_parse_closure0(this));\n    },\n    _keyframe_selector$_percentage$0: function() {\n      var t3, next,\n        t1 = this.scanner,\n        t2 = t1.scanChar$1(43) ? H.Primitives_stringFromCharCode(43) : \"\",\n        second = t1.peekChar$0();\n      if (!T.isDigit0(second) && second !== 46)\n        t1.error$1(0, \"Expected number.\");\n      while (true) {\n        t3 = t1.peekChar$0();\n        if (!(t3 != null && t3 >= 48 && t3 <= 57))\n          break;\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      if (t1.peekChar$0() === 46) {\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n      }\n      if (this.scanIdentifier$1(\"e\")) {\n        t2 += t1.readChar$0();\n        next = t1.peekChar$0();\n        if (next === 43 || next === 45)\n          t2 += t1.readChar$0();\n        if (!T.isDigit0(t1.peekChar$0()))\n          t1.error$1(0, \"Expected digit.\");\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n      }\n      t1.expectChar$1(37);\n      t2 += H.Primitives_stringFromCharCode(37);\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    }\n  };\n  E.KeyframeSelectorParser_parse_closure0.prototype = {\n    call$0: function() {\n      var selectors = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String),\n        t1 = this.$this,\n        t2 = t1.scanner;\n      do {\n        t1.whitespace$0();\n        if (t1.lookingAtIdentifier$0())\n          if (t1.scanIdentifier$1(\"from\"))\n            selectors.push(\"from\");\n          else {\n            t1.expectIdentifier$2$name(\"to\", '\"to\" or \"from\"');\n            selectors.push(\"to\");\n          }\n        else\n          selectors.push(t1._keyframe_selector$_percentage$0());\n        t1.whitespace$0();\n      } while (t2.scanChar$1(44));\n      t2.expectDone$0();\n      return selectors;\n    },\n    $signature: 42\n  };\n  K.LimitedMapView0.prototype = {\n    get$keys: function(_) {\n      return this._limited_map_view0$_keys;\n    },\n    get$length: function(_) {\n      return this._limited_map_view0$_keys._collection$_length;\n    },\n    get$isEmpty: function(_) {\n      return this._limited_map_view0$_keys._collection$_length === 0;\n    },\n    get$isNotEmpty: function(_) {\n      return this._limited_map_view0$_keys._collection$_length !== 0;\n    },\n    $index: function(_, key) {\n      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.$index(0, key) : null;\n    },\n    containsKey$1: function(key) {\n      return this._limited_map_view0$_keys.contains$1(0, key);\n    },\n    remove$1: function(_, key) {\n      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.remove$1(0, key) : null;\n    }\n  };\n  D.ListExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitListExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var _this = this,\n        t1 = _this.hasBrackets,\n        t2 = t1 ? H.Primitives_stringFromCharCode(91) : \"\",\n        t3 = _this.contents,\n        t4 = _this.separator === C.ListSeparator_comma0 ? \", \" : \" \";\n      t4 = t2 + new H.MappedListIterable(t3, new D.ListExpression_toString_closure0(_this), H._arrayInstanceType(t3)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, t4);\n      t1 = t1 ? t4 + H.Primitives_stringFromCharCode(93) : t4;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    _list3$_elementNeedsParens$1: function(expression) {\n      var t1, t2;\n      if (expression instanceof D.ListExpression0) {\n        if (expression.contents.length < 2)\n          return false;\n        if (expression.hasBrackets)\n          return false;\n        t1 = this.separator;\n        t2 = t1 === C.ListSeparator_comma0;\n        return t2 ? t2 : t1 !== C.ListSeparator_undecided0;\n      }\n      if (this.separator !== C.ListSeparator_space0)\n        return false;\n      if (expression instanceof X.UnaryOperationExpression0) {\n        t1 = expression.operator;\n        return t1 === C.UnaryOperator_j2w0 || t1 === C.UnaryOperator_U4G0;\n      }\n      return false;\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  D.ListExpression_toString_closure0.prototype = {\n    call$1: function(element) {\n      return this.$this._list3$_elementNeedsParens$1(element) ? \"(\" + H.S(element) + \")\" : J.toString$0$(element);\n    },\n    $signature: 379\n  };\n  D.closure158.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.$index$asx($arguments, 0).get$asList().length, null);\n    },\n    $signature: 9\n  };\n  D.closure157.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        index = t1.$index($arguments, 1);\n      return list.get$asList()[list.sassIndexToListIndex$2(index, \"n\")];\n    },\n    $signature: 3\n  };\n  D.closure156.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        index = t1.$index($arguments, 1),\n        value = t1.$index($arguments, 2),\n        t2 = list.get$asList(),\n        newList = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));\n      newList[list.sassIndexToListIndex$2(index, \"n\")] = value;\n      return t1.$index($arguments, 0).changeListContents$1(newList);\n    },\n    $signature: 27\n  };\n  D.closure155.prototype = {\n    call$1: function($arguments) {\n      var separator, bracketed, t2, t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        list1 = t1.$index($arguments, 0),\n        list2 = t1.$index($arguments, 1),\n        separatorParam = t1.$index($arguments, 2).assertString$1(\"separator\"),\n        bracketedParam = t1.$index($arguments, 3);\n      t1 = separatorParam.text;\n      if (t1 === \"auto\")\n        if (list1.get$separator() !== C.ListSeparator_undecided0)\n          separator = list1.get$separator();\n        else\n          separator = list2.get$separator() !== C.ListSeparator_undecided0 ? list2.get$separator() : C.ListSeparator_space0;\n      else if (t1 === \"space\")\n        separator = C.ListSeparator_space0;\n      else {\n        if (t1 !== \"comma\")\n          throw H.wrapException(E.SassScriptException$0(string$.x24separ));\n        separator = C.ListSeparator_comma0;\n      }\n      bracketed = bracketedParam instanceof D.SassString0 && bracketedParam.text === \"auto\" ? list1.get$hasBrackets() : bracketedParam.get$isTruthy();\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      for (t2 = list1.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      for (t2 = list2.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      return D.SassList$0(t1, separator, bracketed);\n    },\n    $signature: 27\n  };\n  D.closure154.prototype = {\n    call$1: function($arguments) {\n      var separator, t2, t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        list = t1.$index($arguments, 0),\n        value = t1.$index($arguments, 1);\n      t1 = t1.$index($arguments, 2).assertString$1(\"separator\").text;\n      if (t1 === \"auto\")\n        separator = list.get$separator() === C.ListSeparator_undecided0 ? C.ListSeparator_space0 : list.get$separator();\n      else if (t1 === \"space\")\n        separator = C.ListSeparator_space0;\n      else {\n        if (t1 !== \"comma\")\n          throw H.wrapException(E.SassScriptException$0(string$.x24separ));\n        separator = C.ListSeparator_comma0;\n      }\n      t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      for (t2 = list.get$asList(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        t1.push(t2[_i]);\n      t1.push(value);\n      return list.changeListContents$2$separator(t1, separator);\n    },\n    $signature: 27\n  };\n  D.closure153.prototype = {\n    call$1: function($arguments) {\n      var results, result, _box_0 = {},\n        t1 = J.$index$asx($arguments, 0).get$asList(),\n        t2 = H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,List<Value0*>*>\"),\n        lists = P.List_List$from(new H.MappedListIterable(t1, new D._closure20(), t2), true, t2._eval$1(\"ListIterable.E\"));\n      if (lists.length === 0)\n        return C.SassList_lmy0;\n      _box_0.i = 0;\n      results = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SassList_2);\n      for (t1 = H._arrayInstanceType(lists)._eval$1(\"MappedListIterable<1,Value0*>\"), t2 = type$.legacy_Value_2; C.JSArray_methods.every$1(lists, new D._closure21(_box_0));) {\n        result = P.List_List$from(new H.MappedListIterable(lists, new D._closure22(_box_0), t1), false, t2);\n        result.fixed$length = Array;\n        result.immutable$list = Array;\n        results.push(new D.SassList0(result, C.ListSeparator_space0, false));\n        ++_box_0.i;\n      }\n      return D.SassList$0(results, C.ListSeparator_comma0, false);\n    },\n    $signature: 27\n  };\n  D._closure20.prototype = {\n    call$1: function(list) {\n      return list.get$asList();\n    },\n    $signature: 381\n  };\n  D._closure21.prototype = {\n    call$1: function(list) {\n      return this._box_0.i !== J.get$length$asx(list);\n    },\n    $signature: 382\n  };\n  D._closure22.prototype = {\n    call$1: function(list) {\n      return J.$index$asx(list, this._box_0.i);\n    },\n    $signature: 3\n  };\n  D.closure152.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        index = C.JSArray_methods.indexOf$1(t1.$index($arguments, 0).get$asList(), t1.$index($arguments, 1));\n      return index === -1 ? C.C_SassNull : T.SassNumber$0(index + 1, null);\n    },\n    $signature: 3\n  };\n  D.closure150.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).get$separator() === C.ListSeparator_comma0 ? new D.SassString0(\"comma\", false) : new D.SassString0(\"space\", false);\n    },\n    $signature: 17\n  };\n  D.closure151.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).get$hasBrackets() ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  D.SelectorList0.prototype = {\n    get$isInvisible: function() {\n      return C.JSArray_methods.every$1(this.components, new D.SelectorList_isInvisible_closure0());\n    },\n    get$asSassList: function() {\n      var t1 = this.components;\n      return D.SassList$0(new H.MappedListIterable(t1, new D.SelectorList_asSassList_closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value0*>\")), C.ListSeparator_comma0, false);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitSelectorList$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(other) {\n      var t1 = this.components,\n        t2 = H._arrayInstanceType(t1)._eval$1(\"ExpandIterable<1,ComplexSelector0*>\"),\n        contents = P.List_List$from(new H.ExpandIterable(t1, new D.SelectorList_unify_closure0(other), t2), true, t2._eval$1(\"Iterable.E\"));\n      return contents.length === 0 ? null : D.SelectorList$0(contents);\n    },\n    resolveParentSelectors$2$implicitParent: function($parent, implicitParent) {\n      var t1, _this = this;\n      if ($parent == null) {\n        if (!C.JSArray_methods.any$1(_this.components, _this.get$_list2$_complexContainsParentSelector()))\n          return _this;\n        throw H.wrapException(E.SassScriptException$0(string$.Top_le));\n      }\n      t1 = _this.components;\n      return D.SelectorList$0(B.flattenVertically0(new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors_closure0(_this, implicitParent, $parent), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Iterable<ComplexSelector0*>*>\")), type$.legacy_ComplexSelector_2));\n    },\n    resolveParentSelectors$1: function($parent) {\n      return this.resolveParentSelectors$2$implicitParent($parent, true);\n    },\n    _list2$_complexContainsParentSelector$1: function(complex) {\n      return C.JSArray_methods.any$1(complex.components, new D.SelectorList__complexContainsParentSelector_closure0());\n    },\n    _list2$_resolveParentSelectorsCompound$2: function(compound, $parent) {\n      var resolvedMembers0, parentSelector, t1,\n        resolvedMembers = compound.components,\n        containsSelectorPseudo = C.JSArray_methods.any$1(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure2());\n      if (!containsSelectorPseudo && !(C.JSArray_methods.get$first(resolvedMembers) instanceof M.ParentSelector0))\n        return null;\n      resolvedMembers0 = containsSelectorPseudo ? new H.MappedListIterable(resolvedMembers, new D.SelectorList__resolveParentSelectorsCompound_closure3($parent), H._arrayInstanceType(resolvedMembers)._eval$1(\"MappedListIterable<1,SimpleSelector0*>\")) : resolvedMembers;\n      parentSelector = C.JSArray_methods.get$first(resolvedMembers);\n      if (parentSelector instanceof M.ParentSelector0) {\n        if (resolvedMembers.length === 1 && parentSelector.suffix == null)\n          return $parent.components;\n      } else\n        return H.setRuntimeTypeInfo([S.ComplexSelector$0(H.setRuntimeTypeInfo([X.CompoundSelector$0(resolvedMembers0)], type$.JSArray_legacy_ComplexSelectorComponent_2), false)], type$.JSArray_legacy_ComplexSelector_2);\n      t1 = $parent.components;\n      return new H.MappedListIterable(t1, new D.SelectorList__resolveParentSelectorsCompound_closure4(compound, resolvedMembers0), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector0*>\"));\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this.components);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.SelectorList0 && C.C_ListEquality.equals$2(0, this.components, other.components);\n    }\n  };\n  D.SelectorList_isInvisible_closure0.prototype = {\n    call$1: function(complex) {\n      return complex.get$isInvisible();\n    },\n    $signature: 14\n  };\n  D.SelectorList_asSassList_closure0.prototype = {\n    call$1: function(complex) {\n      var t1 = complex.components;\n      return D.SassList$0(new H.MappedListIterable(t1, new D.SelectorList_asSassList__closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value0*>\")), C.ListSeparator_space0, false);\n    },\n    $signature: 383\n  };\n  D.SelectorList_asSassList__closure0.prototype = {\n    call$1: function(component) {\n      return new D.SassString0(J.toString$0$(component), false);\n    },\n    $signature: 384\n  };\n  D.SelectorList_unify_closure0.prototype = {\n    call$1: function(complex1) {\n      var t1 = this.other.components;\n      return new H.ExpandIterable(t1, new D.SelectorList_unify__closure0(complex1), H._arrayInstanceType(t1)._eval$1(\"ExpandIterable<1,ComplexSelector0*>\"));\n    },\n    $signature: 92\n  };\n  D.SelectorList_unify__closure0.prototype = {\n    call$1: function(complex2) {\n      var unified = Y.unifyComplex0(H.setRuntimeTypeInfo([this.complex1.components, complex2.components], type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2));\n      if (unified == null)\n        return C.List_empty15;\n      return J.map$1$1$ax(unified, new D.SelectorList_unify___closure0(), type$.legacy_ComplexSelector_2);\n    },\n    $signature: 92\n  };\n  D.SelectorList_unify___closure0.prototype = {\n    call$1: function(complex) {\n      return S.ComplexSelector$0(complex, false);\n    },\n    $signature: 72\n  };\n  D.SelectorList_resolveParentSelectors_closure0.prototype = {\n    call$1: function(complex) {\n      var t2, t3, newComplexes, t4, t5, t6, t7, _i, component, resolved, t8, _i0, previousLineBreaks, newComplexes0, t9, i, newComplex, i0, lineBreak, t10, t11, t12, t13, t14, t15, _i1, _this = this, _box_0 = {},\n        t1 = _this.$this;\n      if (!t1._list2$_complexContainsParentSelector$1(complex)) {\n        if (!_this.implicitParent)\n          return H.setRuntimeTypeInfo([complex], type$.JSArray_legacy_ComplexSelector_2);\n        t1 = _this.parent.components;\n        return new H.MappedListIterable(t1, new D.SelectorList_resolveParentSelectors__closure1(complex), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector0*>\"));\n      }\n      t2 = type$.JSArray_legacy_ComplexSelectorComponent_2;\n      t3 = type$.JSArray_legacy_List_legacy_ComplexSelectorComponent_2;\n      newComplexes = H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([], t2)], t3);\n      t4 = type$.JSArray_legacy_bool;\n      _box_0.lineBreaks = H.setRuntimeTypeInfo([false], t4);\n      for (t5 = complex.components, t6 = t5.length, t7 = _this.parent, _i = 0; _i < t6; ++_i) {\n        component = t5[_i];\n        if (component instanceof X.CompoundSelector0) {\n          resolved = t1._list2$_resolveParentSelectorsCompound$2(component, t7);\n          if (resolved == null) {\n            for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)\n              newComplexes[_i0].push(component);\n            continue;\n          }\n          previousLineBreaks = _box_0.lineBreaks;\n          newComplexes0 = H.setRuntimeTypeInfo([], t3);\n          _box_0.lineBreaks = H.setRuntimeTypeInfo([], t4);\n          for (t8 = newComplexes.length, t9 = J.getInterceptor$ax(resolved), i = 0, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0, i = i0) {\n            newComplex = newComplexes[_i0];\n            i0 = i + 1;\n            lineBreak = previousLineBreaks[i];\n            for (t10 = t9.get$iterator(resolved), t11 = !lineBreak; t10.moveNext$0();) {\n              t12 = t10.get$current(t10);\n              t13 = H.setRuntimeTypeInfo([], t2);\n              for (t14 = C.JSArray_methods.get$iterator(newComplex); t14.moveNext$0();)\n                t13.push(t14.get$current(t14));\n              for (t14 = t12.components, t15 = t14.length, _i1 = 0; _i1 < t15; ++_i1)\n                t13.push(t14[_i1]);\n              newComplexes0.push(t13);\n              t13 = _box_0.lineBreaks;\n              t13.push(!t11 || t12.lineBreak);\n            }\n          }\n          newComplexes = newComplexes0;\n        } else\n          for (t8 = newComplexes.length, _i0 = 0; _i0 < newComplexes.length; newComplexes.length === t8 || (0, H.throwConcurrentModificationError)(newComplexes), ++_i0)\n            newComplexes[_i0].push(component);\n      }\n      _box_0.i = 0;\n      return new H.MappedListIterable(newComplexes, new D.SelectorList_resolveParentSelectors__closure2(_box_0), H._arrayInstanceType(newComplexes)._eval$1(\"MappedListIterable<1,ComplexSelector0*>\"));\n    },\n    $signature: 92\n  };\n  D.SelectorList_resolveParentSelectors__closure1.prototype = {\n    call$1: function(parentComplex) {\n      var t2, t3, _i, t4,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);\n      for (t2 = parentComplex.components, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t1.push(t2[_i]);\n      for (t2 = this.complex, t3 = t2.components, t4 = t3.length, _i = 0; _i < t4; ++_i)\n        t1.push(t3[_i]);\n      return S.ComplexSelector$0(t1, t2.lineBreak || parentComplex.lineBreak);\n    },\n    $signature: 88\n  };\n  D.SelectorList_resolveParentSelectors__closure2.prototype = {\n    call$1: function(newComplex) {\n      var t1 = this._box_0;\n      return S.ComplexSelector$0(newComplex, t1.lineBreaks[t1.i++]);\n    },\n    $signature: 72\n  };\n  D.SelectorList__complexContainsParentSelector_closure0.prototype = {\n    call$1: function(component) {\n      return component instanceof X.CompoundSelector0 && C.JSArray_methods.any$1(component.components, new D.SelectorList__complexContainsParentSelector__closure0());\n    },\n    $signature: 111\n  };\n  D.SelectorList__complexContainsParentSelector__closure0.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (!(simple instanceof M.ParentSelector0))\n        if (simple instanceof D.PseudoSelector0) {\n          t1 = simple.selector;\n          t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector());\n        } else\n          t1 = false;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 20\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure2.prototype = {\n    call$1: function(simple) {\n      var t1;\n      if (simple instanceof D.PseudoSelector0) {\n        t1 = simple.selector;\n        t1 = t1 != null && C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector());\n      } else\n        t1 = false;\n      return t1;\n    },\n    $signature: 20\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure3.prototype = {\n    call$1: function(simple) {\n      var t1, t2, t3;\n      if (simple instanceof D.PseudoSelector0) {\n        t1 = simple.selector;\n        if (t1 == null)\n          return simple;\n        if (!C.JSArray_methods.any$1(t1.components, t1.get$_list2$_complexContainsParentSelector()))\n          return simple;\n        t1 = t1.resolveParentSelectors$2$implicitParent(this.parent, false);\n        t2 = simple.name;\n        t3 = simple.isClass;\n        return D.PseudoSelector$0(t2, simple.argument, !t3, t1);\n      } else\n        return simple;\n    },\n    $signature: 387\n  };\n  D.SelectorList__resolveParentSelectorsCompound_closure4.prototype = {\n    call$1: function(complex) {\n      var suffix, t2, t3, t4, cur, last, _i,\n        t1 = complex.components,\n        lastComponent = C.JSArray_methods.get$last(t1);\n      if (!(lastComponent instanceof X.CompoundSelector0))\n        throw H.wrapException(E.SassScriptException$0('Parent \"' + complex.toString$0(0) + '\" is incompatible with this selector.'));\n      suffix = type$.legacy_ParentSelector_2._as(C.JSArray_methods.get$first(this.compound.components)).suffix;\n      t2 = type$.JSArray_legacy_SimpleSelector_2;\n      if (suffix != null) {\n        t2 = H.setRuntimeTypeInfo([], t2);\n        for (t3 = lastComponent.components, t4 = H.SubListIterable$(t3, 0, t3.length - 1, H._arrayInstanceType(t3)._precomputed1), t4 = new H.ListIterator(t4, t4.get$length(t4)); t4.moveNext$0();) {\n          cur = t4.__internal$_current;\n          t2.push(cur);\n        }\n        t2.push(C.JSArray_methods.get$last(t3).addSuffix$1(suffix));\n        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {\n          cur = t3.__internal$_current;\n          t2.push(cur);\n        }\n        last = X.CompoundSelector$0(t2);\n      } else {\n        t2 = H.setRuntimeTypeInfo([], t2);\n        for (t3 = lastComponent.components, t4 = t3.length, _i = 0; _i < t4; ++_i)\n          t2.push(t3[_i]);\n        for (t3 = J.skip$1$ax(this.resolvedMembers, 1), t3 = new H.ListIterator(t3, t3.get$length(t3)); t3.moveNext$0();) {\n          cur = t3.__internal$_current;\n          t2.push(cur);\n        }\n        last = X.CompoundSelector$0(t2);\n      }\n      t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);\n      for (t1 = H.SubListIterable$(t1, 0, t1.length - 1, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n        cur = t1.__internal$_current;\n        t2.push(cur);\n      }\n      t2.push(last);\n      return S.ComplexSelector$0(t2, complex.lineBreak);\n    },\n    $signature: 88\n  };\n  D._NodeSassList.prototype = {};\n  D.closure246.prototype = {\n    call$4: function(thisArg, $length, commaSeparator, dartValue) {\n      var t1;\n      if (dartValue == null) {\n        t1 = P.Iterable_Iterable$generate($length, new D._closure33(), type$.legacy_Value_2);\n        t1 = D.SassList$0(t1, commaSeparator !== false ? C.ListSeparator_comma0 : C.ListSeparator_space0, false);\n      } else\n        t1 = dartValue;\n      J.set$dartValue$x(thisArg, t1);\n    },\n    call$2: function(thisArg, $length) {\n      return this.call$4(thisArg, $length, null, null);\n    },\n    call$3: function(thisArg, $length, commaSeparator) {\n      return this.call$4(thisArg, $length, commaSeparator, null);\n    },\n    \"call*\": \"call$4\",\n    $requiredArgCount: 2,\n    $defaultValues: function() {\n      return [null, null];\n    },\n    $signature: 388\n  };\n  D._closure33.prototype = {\n    call$1: function(_) {\n      return C.C_SassNull;\n    },\n    $signature: 198\n  };\n  D.closure247.prototype = {\n    call$2: function(thisArg, index) {\n      return F.wrapValue(J.get$dartValue$x(thisArg)._list1$_contents[index]);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 390\n  };\n  D.closure248.prototype = {\n    call$3: function(thisArg, index, value) {\n      var t1 = J.getInterceptor$x(thisArg),\n        t2 = t1.get$dartValue(thisArg)._list1$_contents,\n        mutable = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2)._eval$1(\"JSArray<1>\"));\n      mutable[index] = F.unwrapValue(value);\n      t1.set$dartValue(thisArg, t1.get$dartValue(thisArg).changeListContents$1(mutable));\n    },\n    \"call*\": \"call$3\",\n    $requiredArgCount: 3,\n    $signature: 391\n  };\n  D.closure249.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).separator === C.ListSeparator_comma0;\n    },\n    $signature: 392\n  };\n  D.closure250.prototype = {\n    call$2: function(thisArg, isComma) {\n      var t1 = J.getInterceptor$x(thisArg),\n        t2 = t1.get$dartValue(thisArg)._list1$_contents,\n        t3 = isComma ? C.ListSeparator_comma0 : C.ListSeparator_space0;\n      t1.set$dartValue(thisArg, D.SassList$0(t2, t3, t1.get$dartValue(thisArg).hasBrackets));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 393\n  };\n  D.closure251.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg)._list1$_contents.length;\n    },\n    $signature: 394\n  };\n  D.closure252.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(J.get$dartValue$x(thisArg));\n    },\n    $signature: 395\n  };\n  D.SassList0.prototype = {\n    get$isBlank: function() {\n      return C.JSArray_methods.every$1(this._list1$_contents, new D.SassList_isBlank_closure0());\n    },\n    get$asList: function() {\n      return this._list1$_contents;\n    },\n    get$lengthAsList: function() {\n      return this._list1$_contents.length;\n    },\n    SassList$3$brackets0: function(contents, separator, brackets) {\n      if (this.separator === C.ListSeparator_undecided0 && this._list1$_contents.length > 1)\n        throw H.wrapException(P.ArgumentError$(string$.A_list));\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitList$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertMap$1: function($name) {\n      return this._list1$_contents.length === 0 ? C.SassMap_Map_empty0 : this.super$Value$assertMap0($name);\n    },\n    tryMap$0: function() {\n      return this._list1$_contents.length === 0 ? C.SassMap_Map_empty0 : null;\n    },\n    $eq: function(_, other) {\n      var t1, _this = this;\n      if (other == null)\n        return false;\n      if (!(other instanceof D.SassList0 && other.separator === _this.separator && other.hasBrackets === _this.hasBrackets && C.C_ListEquality.equals$2(0, other._list1$_contents, _this._list1$_contents)))\n        t1 = _this._list1$_contents.length === 0 && other instanceof A.SassMap0 && other.get$asList().length === 0;\n      else\n        t1 = true;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      return C.C_ListEquality.hash$1(this._list1$_contents);\n    },\n    get$separator: function() {\n      return this.separator;\n    },\n    get$hasBrackets: function() {\n      return this.hasBrackets;\n    }\n  };\n  D.SassList_isBlank_closure0.prototype = {\n    call$1: function(element) {\n      return element.get$isBlank();\n    },\n    $signature: 53\n  };\n  D.ListSeparator0.prototype = {\n    toString$0: function(_) {\n      return this._list1$_name;\n    }\n  };\n  L.LoudComment0.prototype = {\n    get$span: function() {\n      return this.text.span;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitLoudComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return this.text.toString$0(0);\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1\n  };\n  A.MapExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMapExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.pairs;\n      return \"(\" + new H.MappedListIterable(t1, new A.MapExpression_toString_closure0(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,String*>\")).join$1(0, \", \") + \")\";\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  A.MapExpression_toString_closure0.prototype = {\n    call$1: function(pair) {\n      return H.S(pair.item1) + \": \" + H.S(pair.item2);\n    },\n    $signature: 396\n  };\n  A.closure149.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, cur, value,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {\n        cur = t1.__internal$_current;\n        value = map.contents.$index(0, cur);\n        if (!(value instanceof A.SassMap0))\n          return C.C_SassNull;\n      }\n      t1 = map.contents.$index(0, C.JSArray_methods.get$last(t2));\n      return t1 == null ? C.C_SassNull : t1;\n    },\n    $signature: 3\n  };\n  A.closure212.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return A._modify0(t1.$index($arguments, 0).assertMap$1(\"map\"), H.setRuntimeTypeInfo([t1.$index($arguments, 1)], type$.JSArray_legacy_Value_2), new A._closure27($arguments));\n    },\n    $signature: 3\n  };\n  A._closure27.prototype = {\n    call$1: function(_) {\n      return J.$index$asx(this.$arguments, 2);\n    },\n    $signature: 73\n  };\n  A.closure213.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        args = t1.$index($arguments, 1).get$asList();\n      t1 = args.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$0(\"Expected $args to contain a key.\"));\n      else if (t1 === 1)\n        throw H.wrapException(E.SassScriptException$0(\"Expected $args to contain a value.\"));\n      return A._modify0(map, C.JSArray_methods.sublist$2(args, 0, t1 - 1), new A._closure26(args));\n    },\n    $signature: 3\n  };\n  A._closure26.prototype = {\n    call$1: function(_) {\n      return C.JSArray_methods.get$last(this.args);\n    },\n    $signature: 73\n  };\n  A.closure147.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4,\n        t1 = J.getInterceptor$asx($arguments),\n        map1 = t1.$index($arguments, 0).assertMap$1(\"map1\"),\n        map2 = t1.$index($arguments, 1).assertMap$1(\"map2\");\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = map1.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      for (t3 = map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 37\n  };\n  A.closure148.prototype = {\n    call$1: function($arguments) {\n      var map2,\n        t1 = J.getInterceptor$asx($arguments),\n        map1 = t1.$index($arguments, 0).assertMap$1(\"map1\"),\n        args = t1.$index($arguments, 1).get$asList();\n      t1 = args.length;\n      if (t1 === 0)\n        throw H.wrapException(E.SassScriptException$0(\"Expected $args to contain a key.\"));\n      else if (t1 === 1)\n        throw H.wrapException(E.SassScriptException$0(\"Expected $args to contain a map.\"));\n      map2 = C.JSArray_methods.get$last(args).assertMap$1(\"map2\");\n      return A._modify0(map1, H.SubListIterable$(args, 0, args.length - 1, H._arrayInstanceType(args)._precomputed1), new A._closure19(map2));\n    },\n    $signature: 3\n  };\n  A._closure19.prototype = {\n    call$1: function(oldValue) {\n      var t1, t2, t3, t4,\n        nestedMap = oldValue == null ? null : oldValue.tryMap$0();\n      if (nestedMap == null)\n        return this.map2;\n      t1 = type$.legacy_Value_2;\n      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n      for (t3 = nestedMap.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      for (t3 = this.map2.contents, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        t2.$indexSet(0, t4.key, t4.value);\n      }\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n    },\n    $signature: 397\n  };\n  A.closure211.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return A._deepMergeImpl0(t1.$index($arguments, 0).assertMap$1(\"map1\"), t1.$index($arguments, 1).assertMap$1(\"map2\"));\n    },\n    $signature: 37\n  };\n  A.closure210.prototype = {\n    call$1: function($arguments) {\n      var t3, _i,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      return A._modify0(map, H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), new A._closure25(t2));\n    },\n    $signature: 3\n  };\n  A._closure25.prototype = {\n    call$1: function(value) {\n      var t2,\n        nestedMap = value == null ? null : value.tryMap$0(),\n        t1 = nestedMap == null ? null : nestedMap.contents;\n      t1 = t1 == null ? null : t1.containsKey$1(C.JSArray_methods.get$last(this.keys));\n      if (t1 === true) {\n        t1 = type$.legacy_Value_2;\n        t2 = P.LinkedHashMap_LinkedHashMap$of(nestedMap.contents, t1, t1);\n        t2.remove$1(0, C.JSArray_methods.get$last(this.keys));\n        return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n      }\n      return value;\n    },\n    $signature: 73\n  };\n  A.closure145.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).assertMap$1(\"map\");\n    },\n    $signature: 37\n  };\n  A.closure146.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, mutableMap,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      t1 = type$.legacy_Value_2;\n      mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1);\n      for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)\n        mutableMap.remove$1(0, t2[_i]);\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n    },\n    $signature: 37\n  };\n  A.closure144.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertMap$1(\"map\").contents;\n      return D.SassList$0(t1.get$keys(t1), C.ListSeparator_comma0, false);\n    },\n    $signature: 27\n  };\n  A.closure143.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertMap$1(\"map\").contents;\n      return D.SassList$0(t1.get$values(t1), C.ListSeparator_comma0, false);\n    },\n    $signature: 27\n  };\n  A.closure142.prototype = {\n    call$1: function($arguments) {\n      var t3, _i, cur, value,\n        t1 = J.getInterceptor$asx($arguments),\n        map = t1.$index($arguments, 0).assertMap$1(\"map\"),\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      t2.push(t1.$index($arguments, 1));\n      for (t1 = t1.$index($arguments, 2).get$asList(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)\n        t2.push(t1[_i]);\n      for (t1 = H.SubListIterable$(t2, 0, t2.length - 1, type$.legacy_Value_2), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0(); map = value) {\n        cur = t1.__internal$_current;\n        value = map.contents.$index(0, cur);\n        if (!(value instanceof A.SassMap0))\n          return C.SassBoolean_false;\n      }\n      return map.contents.containsKey$1(C.JSArray_methods.get$last(t2)) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  A._modify__modifyNestedMap0.prototype = {\n    call$2: function(map, newValue) {\n      var nestedMap, _this = this,\n        t1 = type$.legacy_Value_2,\n        mutableMap = P.LinkedHashMap_LinkedHashMap$of(map.contents, t1, t1),\n        t2 = _this.keyIterator,\n        key = t2.get$current(t2);\n      if (!t2.moveNext$0()) {\n        mutableMap.$indexSet(0, key, newValue == null ? _this.modify.call$1(mutableMap.$index(0, key)) : newValue);\n        return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n      }\n      t2 = mutableMap.$index(0, key);\n      nestedMap = t2 == null ? null : t2.tryMap$0();\n      t2 = nestedMap == null;\n      if (t2) {\n        newValue = _this.modify.call$1(null);\n        if (newValue == null)\n          return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n      }\n      mutableMap.$indexSet(0, key, _this.call$2(t2 ? C.SassMap_Map_empty0 : nestedMap, newValue));\n      return new A.SassMap0(H.ConstantMap_ConstantMap$from(mutableMap, t1, t1));\n    },\n    call$1: function(map) {\n      return this.call$2(map, null);\n    },\n    $signature: 398\n  };\n  A._deepMergeImpl__ensureMutable0.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      if (t1.mutable)\n        return;\n      t1.mutable = true;\n      t2 = type$.legacy_Value_2;\n      t1.result = P.LinkedHashMap_LinkedHashMap$of(t1.result, t2, t2);\n    },\n    $signature: 1\n  };\n  A._deepMergeImpl_closure0.prototype = {\n    call$2: function(key, value) {\n      var resultMap, valueMap, merged,\n        t1 = this._box_0,\n        resultValue = t1.result.$index(0, key);\n      if (resultValue == null) {\n        this._ensureMutable.call$0();\n        t1.result.$indexSet(0, key, value);\n      } else {\n        resultMap = resultValue.tryMap$0();\n        valueMap = value.tryMap$0();\n        if (resultMap != null && valueMap != null) {\n          merged = A._deepMergeImpl0(valueMap, resultMap);\n          if (merged === resultMap)\n            return;\n          this._ensureMutable.call$0();\n          t1.result.$indexSet(0, key, merged);\n        }\n      }\n    },\n    $signature: 50\n  };\n  A._NodeSassMap.prototype = {};\n  A.closure239.prototype = {\n    call$3: function(thisArg, $length, dartValue) {\n      var t1, t2, t3, map;\n      if (dartValue == null) {\n        t1 = type$.legacy_Value_2;\n        t2 = P.Iterable_Iterable$generate($length, new A._closure31(), t1);\n        t3 = P.Iterable_Iterable$generate($length, new A._closure32(), t1);\n        map = P.LinkedHashMap_LinkedHashMap(null, null, null, t1, t1);\n        P.MapBase__fillMapWithIterables(map, t2, t3);\n        t1 = new A.SassMap0(H.ConstantMap_ConstantMap$from(map, t1, t1));\n      } else\n        t1 = dartValue;\n      J.set$dartValue$x(thisArg, t1);\n    },\n    call$2: function(thisArg, $length) {\n      return this.call$3(thisArg, $length, null);\n    },\n    \"call*\": \"call$3\",\n    $requiredArgCount: 2,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 399\n  };\n  A._closure31.prototype = {\n    call$1: function(i) {\n      return T.SassNumber$0(i, null);\n    },\n    $signature: 400\n  };\n  A._closure32.prototype = {\n    call$1: function(_) {\n      return C.C_SassNull;\n    },\n    $signature: 198\n  };\n  A.closure240.prototype = {\n    call$2: function(thisArg, index) {\n      var t1 = J.get$dartValue$x(thisArg).contents;\n      return F.wrapValue(J.elementAt$1$ax(t1.get$keys(t1), index));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 199\n  };\n  A.closure241.prototype = {\n    call$2: function(thisArg, index) {\n      var t1 = J.get$dartValue$x(thisArg).contents;\n      return F.wrapValue(t1.get$values(t1).elementAt$1(0, index));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 199\n  };\n  A.closure242.prototype = {\n    call$1: function(thisArg) {\n      var t1 = J.get$dartValue$x(thisArg).contents;\n      return t1.get$length(t1);\n    },\n    $signature: 402\n  };\n  A.closure243.prototype = {\n    call$3: function(thisArg, index, key) {\n      var newKey, t2, newMap, t3, i, t4,\n        t1 = J.getInterceptor$x(thisArg),\n        oldMap = t1.get$dartValue(thisArg).contents;\n      P.RangeError_checkValidIndex(index, oldMap, \"index\");\n      newKey = F.unwrapValue(key);\n      t2 = type$.legacy_Value_2;\n      newMap = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);\n      for (t3 = t1.get$dartValue(thisArg).contents, t3 = J.get$iterator$ax(t3.get$keys(t3)), i = 0; t3.moveNext$0();) {\n        t4 = t3.get$current(t3);\n        if (i === index)\n          newMap.$indexSet(0, newKey, oldMap.$index(0, t4));\n        else {\n          if (newKey.$eq(0, t4))\n            throw H.wrapException(P.ArgumentError$value(key, \"key\", \"is already in the map\"));\n          newMap.$indexSet(0, t4, oldMap.$index(0, t4));\n        }\n        ++i;\n      }\n      t1.set$dartValue(thisArg, new A.SassMap0(H.ConstantMap_ConstantMap$from(newMap, t2, t2)));\n    },\n    \"call*\": \"call$3\",\n    $requiredArgCount: 3,\n    $signature: 200\n  };\n  A.closure244.prototype = {\n    call$3: function(thisArg, index, value) {\n      var t3, t4, t5,\n        t1 = J.getInterceptor$x(thisArg),\n        t2 = t1.get$dartValue(thisArg).contents,\n        key = J.elementAt$1$ax(t2.get$keys(t2), index);\n      t2 = type$.legacy_Value_2;\n      t3 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);\n      for (t4 = t1.get$dartValue(thisArg).contents, t4 = t4.get$entries(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n        t5 = t4.get$current(t4);\n        t3.$indexSet(0, t5.key, t5.value);\n      }\n      t3.$indexSet(0, key, F.unwrapValue(value));\n      t1.set$dartValue(thisArg, new A.SassMap0(H.ConstantMap_ConstantMap$from(t3, t2, t2)));\n    },\n    \"call*\": \"call$3\",\n    $requiredArgCount: 3,\n    $signature: 200\n  };\n  A.closure245.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(J.get$dartValue$x(thisArg));\n    },\n    $signature: 404\n  };\n  A.SassMap0.prototype = {\n    get$separator: function() {\n      var t1 = this.contents;\n      return t1.get$isEmpty(t1) ? C.ListSeparator_undecided0 : C.ListSeparator_comma0;\n    },\n    get$asList: function() {\n      var result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Value_2);\n      this.contents.forEach$1(0, new A.SassMap_asList_closure0(result));\n      return result;\n    },\n    get$lengthAsList: function() {\n      var t1 = this.contents;\n      return t1.get$length(t1);\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitMap$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertMap$1: function($name) {\n      return this;\n    },\n    tryMap$0: function() {\n      return this;\n    },\n    $eq: function(_, other) {\n      var t1;\n      if (other == null)\n        return false;\n      if (!(other instanceof A.SassMap0 && C.C_MapEquality.equals$2(0, other.contents, this.contents))) {\n        t1 = this.contents;\n        t1 = t1.get$isEmpty(t1) && other instanceof D.SassList0 && other._list1$_contents.length === 0;\n      } else\n        t1 = true;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var t1 = this.contents;\n      return t1.get$isEmpty(t1) ? C.C_ListEquality.hash$1(C.List_empty16) : C.C_MapEquality.hash$1(t1);\n    }\n  };\n  A.SassMap_asList_closure0.prototype = {\n    call$2: function(key, value) {\n      this.result.push(D.SassList$0(H.setRuntimeTypeInfo([key, value], type$.JSArray_legacy_Value_2), C.ListSeparator_space0, false));\n    },\n    $signature: 50\n  };\n  K.closure140.prototype = {\n    call$1: function(value) {\n      return J.ceil$0$n(value);\n    },\n    $signature: 39\n  };\n  K.closure205.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, arg2, arg2Name, unit1, unit2,\n        _s11_ = \"is unitless\",\n        t1 = J.getInterceptor$asx($arguments),\n        min = t1.$index($arguments, 0).assertNumber$1(\"min\"),\n        number = t1.$index($arguments, 1).assertNumber$1(\"number\"),\n        max = t1.$index($arguments, 2).assertNumber$1(\"max\");\n      t1 = min.numeratorUnits.length === 0;\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      t3 = number.numeratorUnits.length === 0;\n      if (t2 === (!t3 || number.denominatorUnits.length !== 0)) {\n        t2 = !t3 || number.denominatorUnits.length !== 0;\n        t2 = t2 === (max.numeratorUnits.length !== 0 || max.denominatorUnits.length !== 0);\n      } else\n        t2 = false;\n      if (t2) {\n        if (min.greaterThanOrEquals$1(max).value)\n          return min;\n        if (min.greaterThanOrEquals$1(number).value)\n          return min;\n        if (number.greaterThanOrEquals$1(max).value)\n          return max;\n        return number;\n      }\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      arg2 = t2 !== (!t3 || number.denominatorUnits.length !== 0) ? number : max;\n      t2 = !t1 || min.denominatorUnits.length !== 0;\n      arg2Name = t2 !== (!t3 || number.denominatorUnits.length !== 0) ? \"$number\" : \"$max\";\n      unit1 = !t1 || min.denominatorUnits.length !== 0 ? \"has unit \" + min.get$unitString() : _s11_;\n      unit2 = arg2.numeratorUnits.length !== 0 || arg2.denominatorUnits.length !== 0 ? \"has unit \" + arg2.get$unitString() : _s11_;\n      throw H.wrapException(E.SassScriptException$0(\"$min \" + unit1 + \" but \" + arg2Name + \" \" + unit2 + string$.x2ex20Argu));\n    },\n    $signature: 9\n  };\n  K.closure139.prototype = {\n    call$1: function(value) {\n      return J.floor$0$n(value);\n    },\n    $signature: 39\n  };\n  K.closure138.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, max, _i, number;\n      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, max = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        number = t1[_i].assertNumber$0();\n        if (max == null || max.lessThan$1(number).value)\n          max = number;\n      }\n      if (max != null)\n        return max;\n      throw H.wrapException(E.SassScriptException$0(\"At least one argument must be passed.\"));\n    },\n    $signature: 9\n  };\n  K.closure137.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, min, _i, number;\n      for (t1 = J.$index$asx($arguments, 0).get$asList(), t2 = t1.length, min = null, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {\n        number = t1[_i].assertNumber$0();\n        if (min == null || min.greaterThan$1(number).value)\n          min = number;\n      }\n      if (min != null)\n        return min;\n      throw H.wrapException(E.SassScriptException$0(\"At least one argument must be passed.\"));\n    },\n    $signature: 9\n  };\n  K.closure141.prototype = {\n    call$1: function(value) {\n      return Math.abs(value);\n    },\n    $signature: 179\n  };\n  K.closure203.prototype = {\n    call$1: function($arguments) {\n      var numeratorUnits, denominatorUnits, subtotal, i, number, t3, t4, t5, t6, t7, result, unit1, unit2,\n        _s11_ = \"is unitless\",\n        t1 = J.$index$asx($arguments, 0).get$asList(),\n        t2 = H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,SassNumber0*>\"),\n        numbers = P.List_List$from(new H.MappedListIterable(t1, new K._closure24(), t2), true, t2._eval$1(\"ListIterable.E\"));\n      if (numbers.length === 0)\n        throw H.wrapException(E.SassScriptException$0(\"At least one argument must be passed.\"));\n      t1 = numbers[0];\n      numeratorUnits = t1.numeratorUnits;\n      denominatorUnits = t1.denominatorUnits;\n      for (t1 = type$.legacy_String, subtotal = 0, i = 0; i < numbers.length; ++i) {\n        number = numbers[i];\n        t2 = number.numeratorUnits;\n        t3 = t2.length === 0;\n        t4 = !t3 || number.denominatorUnits.length !== 0;\n        t5 = numbers[0];\n        t6 = t5.numeratorUnits;\n        t7 = t6.length === 0;\n        if (t4 === (!t7 || t5.denominatorUnits.length !== 0)) {\n          t2 = number.valueInUnits$2(numeratorUnits, denominatorUnits);\n          result = P.List_List$from(numeratorUnits, false, t1);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          result = P.List_List$from(denominatorUnits, false, t1);\n          result.fixed$length = Array;\n          result.immutable$list = Array;\n          H.checkNum(t2);\n          subtotal += Math.pow(t2, 2);\n        } else {\n          if (!t7 || t5.denominatorUnits.length !== 0)\n            unit1 = \"has unit \" + (!t7 || t5.denominatorUnits.length !== 0 ? t5._number1$_unitString$2(t6, t5.denominatorUnits) : \"\");\n          else\n            unit1 = _s11_;\n          if (!t3 || number.denominatorUnits.length !== 0)\n            unit2 = \"has unit \" + (!t3 || number.denominatorUnits.length !== 0 ? number._number1$_unitString$2(t2, number.denominatorUnits) : \"\");\n          else\n            unit2 = _s11_;\n          throw H.wrapException(E.SassScriptException$0(\"Argument 1 \" + unit1 + \" but argument \" + (i + 1) + \" \" + unit2 + string$.x2ex20Argu));\n        }\n      }\n      return T.SassNumber$withUnits0(Math.sqrt(subtotal), denominatorUnits, numeratorUnits);\n    },\n    $signature: 9\n  };\n  K._closure24.prototype = {\n    call$1: function(argument) {\n      return argument.assertNumber$0();\n    },\n    $signature: 405\n  };\n  K.closure202.prototype = {\n    call$1: function($arguments) {\n      var numberValue, base, baseValue,\n        _s18_ = \" to have no units.\",\n        t1 = J.getInterceptor$asx($arguments),\n        number = t1.$index($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + _s18_));\n      numberValue = K._fuzzyRoundIfZero0(number.value);\n      if (J.$eq$(t1.$index($arguments, 1), C.C_SassNull))\n        return T.SassNumber$0(Math.log(H.checkNum(numberValue)), null);\n      base = t1.$index($arguments, 1).assertNumber$1(\"base\");\n      if (base.numeratorUnits.length !== 0 || base.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$base: Expected \" + base.toString$0(0) + _s18_));\n      t1 = base.value;\n      baseValue = Math.abs(t1 - 1) < $.$get$epsilon0() ? T.fuzzyRound0(t1) : K._fuzzyRoundIfZero0(t1);\n      return T.SassNumber$0(Math.log(H.checkNum(numberValue)) / Math.log(H.checkNum(baseValue)), null);\n    },\n    $signature: 9\n  };\n  K.closure201.prototype = {\n    call$1: function($arguments) {\n      var baseValue, exponentValue, t2, t3, _null = null,\n        _s18_ = \" to have no units.\",\n        t1 = J.getInterceptor$asx($arguments),\n        base = t1.$index($arguments, 0).assertNumber$1(\"base\"),\n        exponent = t1.$index($arguments, 1).assertNumber$1(\"exponent\");\n      if (base.numeratorUnits.length !== 0 || base.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$base: Expected \" + base.toString$0(0) + _s18_));\n      else if (exponent.numeratorUnits.length !== 0 || exponent.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$exponent: Expected \" + exponent.toString$0(0) + _s18_));\n      baseValue = K._fuzzyRoundIfZero0(base.value);\n      exponentValue = K._fuzzyRoundIfZero0(exponent.value);\n      t1 = $.$get$epsilon0();\n      if (Math.abs(Math.abs(baseValue) - 1) < t1) {\n        exponentValue.toString;\n        t2 = exponentValue == 1 / 0 || exponentValue == -1 / 0;\n      } else\n        t2 = false;\n      if (t2)\n        return T.SassNumber$0(0 / 0, _null);\n      else {\n        t2 = Math.abs(baseValue - 0);\n        if (t2 < t1) {\n          exponentValue.toString;\n          if (isFinite(exponentValue))\n            if (T.fuzzyIsInt0(exponentValue))\n              t1 = C.JSInt_methods.$mod(T.fuzzyIsInt0(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;\n            else\n              t1 = false;\n          else\n            t1 = false;\n          if (t1)\n            exponentValue = T.fuzzyRound0(exponentValue);\n        } else {\n          if (isFinite(baseValue))\n            if (baseValue < 0 && !(t2 < t1)) {\n              exponentValue.toString;\n              t3 = isFinite(exponentValue) && T.fuzzyIsInt0(exponentValue);\n            } else\n              t3 = false;\n          else\n            t3 = false;\n          if (t3)\n            exponentValue = T.fuzzyRound0(exponentValue);\n          else {\n            if (baseValue == 1 / 0 || baseValue == -1 / 0)\n              if (baseValue < 0 && !(t2 < t1)) {\n                exponentValue.toString;\n                if (isFinite(exponentValue))\n                  if (T.fuzzyIsInt0(exponentValue))\n                    t1 = C.JSInt_methods.$mod(T.fuzzyIsInt0(exponentValue) ? C.JSNumber_methods.round$0(exponentValue) : _null, 2) === 1;\n                  else\n                    t1 = false;\n                else\n                  t1 = false;\n              } else\n                t1 = false;\n            else\n              t1 = false;\n            if (t1)\n              exponentValue = T.fuzzyRound0(exponentValue);\n          }\n        }\n      }\n      H.checkNum(exponentValue);\n      return T.SassNumber$0(Math.pow(baseValue, exponentValue), _null);\n    },\n    $signature: 9\n  };\n  K.closure199.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      return T.SassNumber$0(Math.sqrt(H.checkNum(K._fuzzyRoundIfZero0(number.value))), null);\n    },\n    $signature: 9\n  };\n  K.closure209.prototype = {\n    call$1: function($arguments) {\n      var numberValue,\n        number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      numberValue = number.value;\n      if (Math.abs(Math.abs(numberValue) - 1) < $.$get$epsilon0())\n        numberValue = T.fuzzyRound0(numberValue);\n      return T.SassNumber$withUnits0(Math.acos(numberValue) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 9\n  };\n  K.closure208.prototype = {\n    call$1: function($arguments) {\n      var t1,\n        number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      t1 = number.value;\n      return T.SassNumber$withUnits0(Math.asin(H.checkNum(Math.abs(Math.abs(t1) - 1) < $.$get$epsilon0() ? T.fuzzyRound0(t1) : K._fuzzyRoundIfZero0(t1))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 9\n  };\n  K.closure207.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      if (number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"$number: Expected \" + number.toString$0(0) + \" to have no units.\"));\n      return T.SassNumber$withUnits0(Math.atan(H.checkNum(K._fuzzyRoundIfZero0(number.value))) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 9\n  };\n  K.closure206.prototype = {\n    call$1: function($arguments) {\n      var t2, t3, t4, unit1, unit2, xValue,\n        _s11_ = \"is unitless\",\n        t1 = J.getInterceptor$asx($arguments),\n        y = t1.$index($arguments, 0).assertNumber$1(\"y\"),\n        x = t1.$index($arguments, 1).assertNumber$1(\"x\");\n      t1 = y.numeratorUnits;\n      t2 = t1.length === 0;\n      t3 = !t2 || y.denominatorUnits.length !== 0;\n      t4 = x.numeratorUnits.length === 0;\n      if (t3 !== (!t4 || x.denominatorUnits.length !== 0)) {\n        unit1 = !t2 || y.denominatorUnits.length !== 0 ? \"has unit \" + y.get$unitString() : _s11_;\n        unit2 = !t4 || x.denominatorUnits.length !== 0 ? \"has unit \" + x.get$unitString() : _s11_;\n        throw H.wrapException(E.SassScriptException$0(\"$y \" + unit1 + \" but $x \" + unit2 + string$.x2ex20Argu));\n      }\n      t2 = y.denominatorUnits;\n      xValue = K._fuzzyRoundIfZero0(T.SassNumber$withUnits0(x.valueInUnits$2(t1, t2), t2, t1).value);\n      return T.SassNumber$withUnits0(Math.atan2(H.checkNum(K._fuzzyRoundIfZero0(y.value)), H.checkNum(xValue)) * 180 / 3.141592653589793, null, H.setRuntimeTypeInfo([\"deg\"], type$.JSArray_legacy_String));\n    },\n    $signature: 9\n  };\n  K.closure204.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(Math.cos(H.checkNum(K._coerceToRad0(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value)), null);\n    },\n    $signature: 9\n  };\n  K.closure200.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(Math.sin(H.checkNum(K._fuzzyRoundIfZero0(K._coerceToRad0(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value))), null);\n    },\n    $signature: 9\n  };\n  K.closure198.prototype = {\n    call$1: function($arguments) {\n      var t1 = K._coerceToRad0(J.$index$asx($arguments, 0).assertNumber$1(\"number\")).value,\n        t2 = C.JSNumber_methods.$mod(t1 - 1.5707963267948966, 6.283185307179586),\n        t3 = $.$get$epsilon0();\n      if (Math.abs(t2 - 0) < t3)\n        return T.SassNumber$0(1 / 0, null);\n      else if (Math.abs(C.JSNumber_methods.$mod(t1 + 1.5707963267948966, 6.283185307179586) - 0) < t3)\n        return T.SassNumber$0(-1 / 0, null);\n      else\n        return T.SassNumber$0(Math.tan(H.checkNum(K._fuzzyRoundIfZero0(t1))), null);\n    },\n    $signature: 9\n  };\n  K.closure133.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments);\n      return t1.$index($arguments, 0).assertNumber$1(\"number1\").isComparableTo$1(t1.$index($arguments, 1).assertNumber$1(\"number2\")) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  K.closure132.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      return !(number.numeratorUnits.length !== 0 || number.denominatorUnits.length !== 0) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  K.closure134.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString0(J.$index$asx($arguments, 0).assertNumber$1(\"number\").get$unitString(), true);\n    },\n    $signature: 17\n  };\n  K.closure136.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      number.assertNoUnits$1(\"number\");\n      return T.SassNumber$0(number.value * 100, \"%\");\n    },\n    $signature: 9\n  };\n  K.closure135.prototype = {\n    call$1: function($arguments) {\n      var limit,\n        t1 = J.getInterceptor$asx($arguments);\n      if (J.$eq$(t1.$index($arguments, 0), C.C_SassNull))\n        return T.SassNumber$0($.$get$_random2().nextDouble$0(), null);\n      limit = t1.$index($arguments, 0).assertNumber$1(\"limit\").assertInt$1(\"limit\");\n      if (limit < 1)\n        throw H.wrapException(E.SassScriptException$0(\"$limit: Must be greater than 0, was \" + limit + \".\"));\n      return T.SassNumber$0($.$get$_random2().nextInt$1(limit) + 1, null);\n    },\n    $signature: 9\n  };\n  K._numberFunction_closure0.prototype = {\n    call$1: function($arguments) {\n      var number = J.$index$asx($arguments, 0).assertNumber$1(\"number\");\n      return T.SassNumber$withUnits0(this.transform.call$1(number.value), number.denominatorUnits, number.numeratorUnits);\n    },\n    $signature: 9\n  };\n  F.CssMediaQuery0.prototype = {\n    merge$1: function(other) {\n      var _i, t8, negativeFeatures, features, type, modifier, fewerFeatures, fewerFeatures0, moreFeatures, _this = this, _null = null, _s3_ = \"all\",\n        t1 = _this.modifier,\n        ourModifier = t1 == null ? _null : t1.toLowerCase(),\n        t2 = _this.type,\n        t3 = t2 == null,\n        ourType = t3 ? _null : t2.toLowerCase(),\n        t4 = other.modifier,\n        theirModifier = t4 == null ? _null : t4.toLowerCase(),\n        t5 = other.type,\n        t6 = t5 == null,\n        theirType = t6 ? _null : t5.toLowerCase(),\n        t7 = ourType == null;\n      if (t7 && theirType == null) {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n        for (t2 = _this.features, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t1.push(t2[_i]);\n        for (t2 = other.features, t3 = t2.length, _i = 0; _i < t3; ++_i)\n          t1.push(t2[_i]);\n        return new F.MediaQuerySuccessfulMergeResult0(new F.CssMediaQuery0(_null, _null, P.List_List$unmodifiable(t1, type$.legacy_String)));\n      }\n      t8 = ourModifier === \"not\";\n      if (t8 !== (theirModifier === \"not\")) {\n        if (ourType == theirType) {\n          negativeFeatures = t8 ? _this.features : other.features;\n          if (C.JSArray_methods.every$1(negativeFeatures, C.JSArray_methods.get$contains(t8 ? other.features : _this.features)))\n            return C._SingletonCssMediaQueryMergeResult_empty0;\n          else\n            return C._SingletonCssMediaQueryMergeResult_unrepresentable0;\n        } else if (t3 || B.equalsIgnoreCase0(t2, _s3_) || t6 || B.equalsIgnoreCase0(t5, _s3_))\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;\n        if (t8) {\n          features = other.features;\n          type = theirType;\n          modifier = theirModifier;\n        } else {\n          features = _this.features;\n          type = ourType;\n          modifier = ourModifier;\n        }\n      } else if (t8) {\n        if (ourType != theirType)\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;\n        fewerFeatures = _this.features;\n        fewerFeatures0 = other.features;\n        t3 = fewerFeatures.length > fewerFeatures0.length;\n        moreFeatures = t3 ? fewerFeatures : fewerFeatures0;\n        if (t3)\n          fewerFeatures = fewerFeatures0;\n        if (!C.JSArray_methods.every$1(fewerFeatures, C.JSArray_methods.get$contains(moreFeatures)))\n          return C._SingletonCssMediaQueryMergeResult_unrepresentable0;\n        features = moreFeatures;\n        type = ourType;\n        modifier = ourModifier;\n      } else if (t3 || B.equalsIgnoreCase0(t2, _s3_)) {\n        type = (t6 || B.equalsIgnoreCase0(t5, _s3_)) && t7 ? _null : theirType;\n        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n        for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n          t3.push(t6[_i]);\n        for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n          t3.push(t6[_i]);\n        features = t3;\n        modifier = theirModifier;\n      } else {\n        if (t6 || B.equalsIgnoreCase0(t5, _s3_)) {\n          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n          for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n            t3.push(t6[_i]);\n          for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n            t3.push(t6[_i]);\n          features = t3;\n          modifier = ourModifier;\n        } else {\n          if (ourType != theirType)\n            return C._SingletonCssMediaQueryMergeResult_empty0;\n          else {\n            modifier = ourModifier == null ? theirModifier : ourModifier;\n            t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n            for (t6 = _this.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n              t3.push(t6[_i]);\n            for (t6 = other.features, t7 = t6.length, _i = 0; _i < t7; ++_i)\n              t3.push(t6[_i]);\n          }\n          features = t3;\n        }\n        type = ourType;\n      }\n      t2 = type == ourType ? t2 : t5;\n      t1 = modifier == ourModifier ? t1 : t4;\n      t3 = P.List_List$unmodifiable(features, type$.legacy_String);\n      return new F.MediaQuerySuccessfulMergeResult0(new F.CssMediaQuery0(t1, t2, t3));\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.CssMediaQuery0 && other.modifier == this.modifier && other.type == this.type && C.C_ListEquality.equals$2(0, other.features, this.features);\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.modifier) ^ J.get$hashCode$(this.type) ^ C.C_ListEquality.hash$1(this.features);\n    },\n    toString$0: function(_) {\n      var t2, _this = this,\n        t1 = _this.modifier;\n      t1 = t1 != null ? t1 + \" \" : \"\";\n      t2 = _this.type;\n      if (t2 != null) {\n        t1 += t2;\n        if (_this.features.length !== 0)\n          t1 += \" and \";\n      }\n      t1 += C.JSArray_methods.join$1(_this.features, \" and \");\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    }\n  };\n  F._SingletonCssMediaQueryMergeResult0.prototype = {\n    toString$0: function(_) {\n      return this._media_query1$_name;\n    }\n  };\n  F.MediaQuerySuccessfulMergeResult0.prototype = {};\n  F.MediaQueryParser0.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new F.MediaQueryParser_parse_closure0(this));\n    },\n    _media_query0$_mediaQuery$0: function() {\n      var identifier1, identifier2, type, modifier, features, _this = this, _null = null,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() !== 40) {\n        identifier1 = _this.identifier$0();\n        _this.whitespace$0();\n        if (!_this.lookingAtIdentifier$0())\n          return new F.CssMediaQuery0(_null, identifier1, C.List_empty);\n        identifier2 = _this.identifier$0();\n        _this.whitespace$0();\n        if (B.equalsIgnoreCase0(identifier2, \"and\")) {\n          type = identifier1;\n          modifier = _null;\n        } else {\n          if (_this.scanIdentifier$1(\"and\"))\n            _this.whitespace$0();\n          else\n            return new F.CssMediaQuery0(identifier1, identifier2, C.List_empty);\n          type = identifier2;\n          modifier = identifier1;\n        }\n      } else {\n        type = _null;\n        modifier = type;\n      }\n      features = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      do {\n        _this.whitespace$0();\n        t1.expectChar$1(40);\n        features.push(\"(\" + _this.declarationValue$0() + \")\");\n        t1.expectChar$1(41);\n        _this.whitespace$0();\n      } while (_this.scanIdentifier$1(\"and\"));\n      if (type == null)\n        return new F.CssMediaQuery0(_null, _null, P.List_List$unmodifiable(features, type$.legacy_String));\n      else {\n        t1 = P.List_List$unmodifiable(features, type$.legacy_String);\n        return new F.CssMediaQuery0(modifier, type, t1);\n      }\n    }\n  };\n  F.MediaQueryParser_parse_closure0.prototype = {\n    call$0: function() {\n      var queries = H.setRuntimeTypeInfo([], type$.JSArray_legacy_CssMediaQuery_2),\n        t1 = this.$this,\n        t2 = t1.scanner;\n      do {\n        t1.whitespace$0();\n        queries.push(t1._media_query0$_mediaQuery$0());\n      } while (t2.scanChar$1(44));\n      t2.expectDone$0();\n      return queries;\n    },\n    $signature: 82\n  };\n  G.ModifiableCssMediaRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssMediaRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return G.ModifiableCssMediaRule$0(this.queries, this.span);\n    },\n    $isCssMediaRule0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  G.MediaRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMediaRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@media \" + this.query.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  A.MergedExtension0.prototype = {\n    unmerge$0: function() {\n      var $async$self = this;\n      return P._makeSyncStarIterable(function() {\n        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;\n        return function $async$unmerge$0($async$errorCode, $async$result) {\n          if ($async$errorCode === 1) {\n            $async$currentError = $async$result;\n            $async$goto = $async$handler;\n          }\n          while (true)\n            switch ($async$goto) {\n              case 0:\n                // Function start\n                t1 = $async$self.left;\n                $async$goto = t1 instanceof A.MergedExtension0 ? 2 : 4;\n                break;\n              case 2:\n                // then\n                $async$goto = 5;\n                return P._IterationMarker_yieldStar(t1.unmerge$0());\n              case 5:\n                // after yield\n                // goto join\n                $async$goto = 3;\n                break;\n              case 4:\n                // else\n                $async$goto = 6;\n                return t1;\n              case 6:\n                // after yield\n              case 3:\n                // join\n                $async$goto = 7;\n                return $async$self.right;\n              case 7:\n                // after yield\n                // implicit return\n                return P._IterationMarker_endOfIteration();\n              case 1:\n                // rethrow\n                return P._IterationMarker_uncaughtError($async$currentError);\n            }\n        };\n      }, type$.legacy_Extension_2);\n    }\n  };\n  Z.MergedMapView0.prototype = {\n    get$keys: function(_) {\n      var t1 = this._merged_map_view$_mapsByKey;\n      return t1.get$keys(t1);\n    },\n    get$length: function(_) {\n      var t1 = this._merged_map_view$_mapsByKey;\n      return t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._merged_map_view$_mapsByKey;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._merged_map_view$_mapsByKey;\n      return t1.get$isNotEmpty(t1);\n    },\n    MergedMapView$10: function(maps, $K, $V) {\n      var t1, t2, t3, _i, map, t4, t5;\n      for (t1 = maps.length, t2 = this._merged_map_view$_mapsByKey, t3 = $K._eval$1(\"@<0>\")._bind$1($V)._eval$1(\"MergedMapView0<1*,2*>*\"), _i = 0; _i < maps.length; maps.length === t1 || (0, H.throwConcurrentModificationError)(maps), ++_i) {\n        map = maps[_i];\n        if (t3._is(map))\n          for (t4 = map._merged_map_view$_mapsByKey, t4 = t4.get$values(t4), t4 = t4.get$iterator(t4); t4.moveNext$0();) {\n            t5 = t4.get$current(t4);\n            B.setAll0(t2, t5.get$keys(t5), t5);\n          }\n        else\n          B.setAll0(t2, map.get$keys(map), map);\n      }\n    },\n    $index: function(_, key) {\n      var child = this._merged_map_view$_mapsByKey.$index(0, key);\n      return child == null ? null : child.$index(0, key);\n    },\n    $indexSet: function(_, key, value) {\n      var child = this._merged_map_view$_mapsByKey.$index(0, key);\n      if (child == null)\n        throw H.wrapException(P.UnsupportedError$(string$.New_en));\n      child.$indexSet(0, key, value);\n    },\n    remove$1: function(_, key) {\n      throw H.wrapException(P.UnsupportedError$(string$.Entrie));\n    },\n    containsKey$1: function(key) {\n      return this._merged_map_view$_mapsByKey.containsKey$1(key);\n    }\n  };\n  Q.closure223.prototype = {\n    call$1: function($arguments) {\n      return $._features0.contains$1(0, J.$index$asx($arguments, 0).assertString$1(\"feature\").text) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  Q.closure224.prototype = {\n    call$1: function($arguments) {\n      return new D.SassString0(J.toString$0$(J.get$first$ax($arguments)), false);\n    },\n    $signature: 17\n  };\n  Q.closure225.prototype = {\n    call$1: function($arguments) {\n      var value = J.$index$asx($arguments, 0);\n      if (value instanceof D.SassArgumentList0)\n        return new D.SassString0(\"arglist\", false);\n      if (value instanceof Z.SassBoolean0)\n        return new D.SassString0(\"bool\", false);\n      if (value instanceof K.SassColor0)\n        return new D.SassString0(\"color\", false);\n      if (value instanceof D.SassList0)\n        return new D.SassString0(\"list\", false);\n      if (value instanceof A.SassMap0)\n        return new D.SassString0(\"map\", false);\n      if (value instanceof O.SassNull0)\n        return new D.SassString0(\"null\", false);\n      if (value instanceof T.SassNumber0)\n        return new D.SassString0(\"number\", false);\n      if (value instanceof F.SassFunction0)\n        return new D.SassString0(\"function\", false);\n      return new D.SassString0(\"string\", false);\n    },\n    $signature: 17\n  };\n  Q.closure226.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, t4,\n        argumentList = J.$index$asx($arguments, 0);\n      if (argumentList instanceof D.SassArgumentList0) {\n        t1 = type$.legacy_Value_2;\n        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);\n        for (argumentList._argument_list$_wereKeywordsAccessed = true, t3 = argumentList._argument_list$_keywords, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {\n          t4 = t3.get$current(t3);\n          t2.$indexSet(0, new D.SassString0(t4.key, false), t4.value);\n        }\n        return new A.SassMap0(H.ConstantMap_ConstantMap$from(t2, t1, t1));\n      } else\n        throw H.wrapException(\"$args: \" + H.S(argumentList) + \" is not an argument list.\");\n    },\n    $signature: 37\n  };\n  T.MixinRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitMixinRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = \"@mixin \" + H.S(this.name),\n        t2 = this.$arguments;\n      if (!(t2.$arguments.length === 0 && t2.restArgument == null))\n        t1 += \"(\" + t2.toString$0(0) + \")\";\n      t2 = this.children;\n      t2 = t1 + (\" {\" + (t2 && C.JSArray_methods).join$1(t2, \" \") + \"}\");\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    }\n  };\n  L.ExtendMode0.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  M.SupportsNegation0.prototype = {\n    toString$0: function(_) {\n      var t1 = this.condition;\n      if (t1 instanceof M.SupportsNegation0 || t1 instanceof U.SupportsOperation0)\n        return \"not (\" + t1.toString$0(0) + \")\";\n      else\n        return \"not \" + t1.toString$0(0);\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  N.NoSourceMapBuffer.prototype = {\n    get$length: function(_) {\n      return this._no_source_map_buffer$_buffer._contents.length;\n    },\n    get$sourceFiles: function() {\n      return C.Map_empty;\n    },\n    forSpan$1$2: function(span, callback) {\n      return callback.call$0();\n    },\n    forSpan$2: function(span, callback) {\n      return this.forSpan$1$2(span, callback, type$.dynamic);\n    },\n    write$1: function(_, object) {\n      this._no_source_map_buffer$_buffer._contents += H.S(object);\n      return null;\n    },\n    writeCharCode$1: function(charCode) {\n      this._no_source_map_buffer$_buffer._contents += H.Primitives_stringFromCharCode(charCode);\n      return null;\n    },\n    toString$0: function(_) {\n      var t1 = this._no_source_map_buffer$_buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    buildSourceMap$1$prefix: function(prefix) {\n      return H.throwExpression(P.UnsupportedError$(string$.NoSour));\n    },\n    $isStringBuffer: 1\n  };\n  B.AstNode0.prototype = {};\n  B._FakeAstNode0.prototype = {\n    get$span: function() {\n      return this._node3$_callback.call$0();\n    },\n    $isAstNode0: 1\n  };\n  B.CssNode0.prototype = {\n    toString$0: function(_) {\n      return N.serialize0(this, true, null, true, null, false, null, true).css;\n    }\n  };\n  B.CssParentNode0.prototype = {};\n  B.FileSystemException0.prototype = {\n    toString$0: function(_) {\n      var t1 = $.$get$context();\n      return H.S(t1.prettyUri$1(t1.toUri$1(this.path))) + \": \" + this.message;\n    },\n    get$message: function(receiver) {\n      return this.message;\n    },\n    get$path: function(receiver) {\n      return this.path;\n    }\n  };\n  B.Stderr0.prototype = {\n    writeln$1: function(object) {\n      J.write$1$x(this._node1$_stderr, (object == null ? \"\" : object) + \"\\n\");\n    },\n    writeln$0: function() {\n      return this.writeln$1(null);\n    }\n  };\n  B._readFile_closure0.prototype = {\n    call$0: function() {\n      return J.readFileSync$2$x(D.fs(), this.path, this.encoding);\n    },\n    $signature: 74\n  };\n  B.fileExists_closure0.prototype = {\n    call$0: function() {\n      var error, systemError, exception,\n        t1 = this.path;\n      if (!J.existsSync$1$x(D.fs(), t1))\n        return false;\n      try {\n        t1 = J.isFile$0$x(J.statSync$1$x(D.fs(), t1));\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        if (J.$eq$(J.get$code$x(systemError), \"ENOENT\"))\n          return false;\n        throw exception;\n      }\n    },\n    $signature: 34\n  };\n  B.dirExists_closure0.prototype = {\n    call$0: function() {\n      var error, systemError, exception,\n        t1 = this.path;\n      if (!J.existsSync$1$x(D.fs(), t1))\n        return false;\n      try {\n        t1 = J.isDirectory$0$x(J.statSync$1$x(D.fs(), t1));\n        return t1;\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        systemError = type$.legacy_JsSystemError._as(error);\n        if (J.$eq$(J.get$code$x(systemError), \"ENOENT\"))\n          return false;\n        throw exception;\n      }\n    },\n    $signature: 34\n  };\n  B.listDir_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.path;\n      if (!this.recursive)\n        return J.map$1$1$ax(J.readdirSync$1$x(D.fs(), t1), new B.listDir__closure1(t1), type$.legacy_String).where$1(0, new B.listDir__closure2());\n      else\n        return new B.listDir_closure_list0().call$1(t1);\n    },\n    $signature: 160\n  };\n  B.listDir__closure1.prototype = {\n    call$1: function(child) {\n      return D.join(this.path, H._asStringS(child), null);\n    },\n    $signature: 99\n  };\n  B.listDir__closure2.prototype = {\n    call$1: function(child) {\n      return !B.dirExists0(child);\n    },\n    $signature: 5\n  };\n  B.listDir_closure_list0.prototype = {\n    call$1: function($parent) {\n      return J.expand$1$1$ax(J.readdirSync$1$x(D.fs(), $parent), new B.listDir__list_closure0($parent, this), type$.legacy_String);\n    },\n    $signature: 159\n  };\n  B.listDir__list_closure0.prototype = {\n    call$1: function(child) {\n      var path = D.join(this.parent, H._asStringS(child), null);\n      return B.dirExists0(path) ? this.list.call$1(path) : H.setRuntimeTypeInfo([path], type$.JSArray_legacy_String);\n    },\n    $signature: 157\n  };\n  B.ModifiableCssNode0.prototype = {\n    get$hasFollowingSibling: function() {\n      var siblings, i, t2,\n        t1 = this._node2$_parent;\n      if (t1 == null)\n        return false;\n      siblings = t1.children;\n      for (i = this._node2$_indexInParent + 1, t1 = siblings._collection$_source, t2 = J.getInterceptor$asx(t1); i < t2.get$length(t1); ++i)\n        if (!this._node2$_isInvisible$1(t2.elementAt$1(t1, i)))\n          return true;\n      return false;\n    },\n    _node2$_isInvisible$1: function(node) {\n      if (type$.legacy_CssParentNode_2._is(node)) {\n        if (type$.legacy_CssAtRule_2._is(node))\n          return false;\n        if (type$.legacy_CssStyleRule_2._is(node) && node.selector.value.get$isInvisible())\n          return true;\n        return J.every$1$ax(node.get$children(node), this.get$_node2$_isInvisible());\n      } else\n        return false;\n    },\n    get$isGroupEnd: function() {\n      return this.isGroupEnd;\n    }\n  };\n  B.ModifiableCssParentNode0.prototype = {\n    get$isChildless: function() {\n      return false;\n    },\n    addChild$1: function(child) {\n      var t1;\n      child._node2$_parent = this;\n      t1 = this._node2$_children;\n      child._node2$_indexInParent = t1.length;\n      t1.push(child);\n    },\n    $isCssParentNode0: 1,\n    get$children: function(receiver) {\n      return this.children;\n    }\n  };\n  B._render_closure.prototype = {\n    call$0: function() {\n      var error, exception;\n      try {\n        this.callback.call$2(null, B._renderSync(this.options));\n      } catch (exception) {\n        error = H.unwrapException(exception);\n        this.callback.call$2(type$.legacy_JsError._as(error), null);\n      }\n      return null;\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 0\n  };\n  B._render_closure0.prototype = {\n    call$1: function(result) {\n      this.callback.call$2(null, result);\n    },\n    $signature: 406\n  };\n  B._render_closure1.prototype = {\n    call$2: function(error, stackTrace) {\n      var _null = null,\n        t1 = this.callback;\n      if (error instanceof E.SassException0)\n        t1.call$2(B._wrapException(error), _null);\n      else\n        t1.call$2(B._newRenderError(J.toString$0$(error), _null, _null, _null, 3), _null);\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 407\n  };\n  B._parseFunctions_closure.prototype = {\n    call$2: function(signature, callback) {\n      var error, exception, t1, _this = this, tuple = null;\n      try {\n        tuple = L.ScssParser$0(signature, null, null).parseSignature$0();\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException0) {\n          error = t1;\n          throw H.wrapException(E.SassFormatException$0('Invalid signature \"' + H.S(signature) + '\": ' + H.S(error._span_exception$_message), error.get$span()));\n        } else\n          throw exception;\n      }\n      t1 = _this.options;\n      if (J.get$fiber$x(t1) != null)\n        _this.result.push(Q.BuiltInCallable$parsed(tuple.item1, tuple.item2, new B._parseFunctions__closure(t1, callback)));\n      else {\n        t1 = _this.result;\n        if (!_this.asynch)\n          t1.push(Q.BuiltInCallable$parsed(tuple.item1, tuple.item2, new B._parseFunctions__closure0(callback)));\n        else\n          t1.push(new S.AsyncBuiltInCallable0(tuple.item1, tuple.item2, new B._parseFunctions__closure1(callback)));\n      }\n    },\n    $signature: 408\n  };\n  B._parseFunctions__closure.prototype = {\n    call$1: function($arguments) {\n      var t4, result,\n        t1 = this.options,\n        t2 = J.getInterceptor$x(t1),\n        fiber = J.get$current$x(t2.get$fiber(t1)),\n        t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n      for (t4 = J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), type$.legacy_Object), t4 = t4.get$iterator(t4); t4.moveNext$0();)\n        t3.push(t4.get$current(t4));\n      t3.push(P.allowInterop(new B._parseFunctions___closure0(fiber)));\n      result = P.Function_apply(type$.legacy_Function._as(this.callback), t3);\n      return F.unwrapValue(H._asBoolS($.$get$_isUndefined().call$1(result)) ? J.yield$0$x(t2.get$fiber(t1)) : result);\n    },\n    $signature: 3\n  };\n  B._parseFunctions___closure0.prototype = {\n    call$1: function(result) {\n      P.scheduleMicrotask(new B._parseFunctions____closure(this.fiber, result));\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 62\n  };\n  B._parseFunctions____closure.prototype = {\n    call$0: function() {\n      return J.run$1$x(this.fiber, this.result);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 201\n  };\n  B._parseFunctions__closure0.prototype = {\n    call$1: function($arguments) {\n      return F.unwrapValue(P.Function_apply(type$.legacy_Function._as(this.callback), J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), type$.legacy_Object).toList$0(0)));\n    },\n    $signature: 3\n  };\n  B._parseFunctions__closure1.prototype = {\n    call$1: function($arguments) {\n      return this.$call$body$_parseFunctions__closure($arguments);\n    },\n    $call$body$_parseFunctions__closure: function($arguments) {\n      var $async$goto = 0,\n        $async$completer = P._makeAsyncAwaitCompleter(type$.legacy_Value_2),\n        $async$returnValue, $async$self = this, t2, result, completer, t1, $async$temp1;\n      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {\n        if ($async$errorCode === 1)\n          return P._asyncRethrow($async$result, $async$completer);\n        while (true)\n          switch ($async$goto) {\n            case 0:\n              // Function start\n              completer = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_legacy_Object), type$._AsyncCompleter_legacy_Object);\n              t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n              for (t2 = J.map$1$1$ax($arguments, F.value1__wrapValue$closure(), type$.legacy_Object), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n                t1.push(t2.get$current(t2));\n              t1.push(P.allowInterop(new B._parseFunctions___closure(completer)));\n              result = P.Function_apply(type$.legacy_Function._as($async$self.callback), t1);\n              $async$temp1 = F;\n              $async$goto = H._asBoolS($.$get$_isUndefined().call$1(result)) ? 3 : 5;\n              break;\n            case 3:\n              // then\n              $async$goto = 6;\n              return P._asyncAwait(completer.future, $async$call$1);\n            case 6:\n              // returning from await.\n              // goto join\n              $async$goto = 4;\n              break;\n            case 5:\n              // else\n              $async$result = result;\n            case 4:\n              // join\n              $async$returnValue = $async$temp1.unwrapValue($async$result);\n              // goto return\n              $async$goto = 1;\n              break;\n            case 1:\n              // return\n              return P._asyncReturn($async$returnValue, $async$completer);\n          }\n      });\n      return P._asyncStartSync($async$call$1, $async$completer);\n    },\n    $signature: 144\n  };\n  B._parseFunctions___closure.prototype = {\n    call$1: function(result) {\n      return this.completer.complete$1(result);\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 410\n  };\n  B._parseImporter_closure.prototype = {\n    call$1: function(importer) {\n      return type$.legacy_JSFunction._as(P.allowInteropCaptureThis(new B._parseImporter__closure(this.options, importer)));\n    },\n    $signature: 411\n  };\n  B._parseImporter__closure.prototype = {\n    call$4: function(thisArg, url, previous, _) {\n      var t1 = this.options,\n        t2 = J.getInterceptor$x(t1),\n        result = J.apply$2$x(this.importer, thisArg, H.setRuntimeTypeInfo([url, previous, P.allowInterop(new B._parseImporter___closure(J.get$current$x(t2.get$fiber(t1))))], type$.JSArray_legacy_Object));\n      if (H._asBoolS($.$get$_isUndefined().call$1(result)))\n        return J.yield$0$x(t2.get$fiber(t1));\n      return result;\n    },\n    call$3: function(thisArg, url, previous) {\n      return this.call$4(thisArg, url, previous, null);\n    },\n    \"call*\": \"call$4\",\n    $requiredArgCount: 3,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 412\n  };\n  B._parseImporter___closure.prototype = {\n    call$1: function(result) {\n      P.scheduleMicrotask(new B._parseImporter____closure(this.fiber, result));\n    },\n    $signature: 413\n  };\n  B._parseImporter____closure.prototype = {\n    call$0: function() {\n      return J.run$1$x(this.fiber, this.result);\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 201\n  };\n  O.NullExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitNullExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"null\";\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  O.closure238.prototype = {\n    call$0: function() {\n      var $constructor = P.allowInterop(new O._closure29());\n      B.injectSuperclass(C.C_SassNull, $constructor);\n      self.Object.defineProperty(C.C_SassNull.constructor, \"name\", {value: \"SassNull\"});\n      B.forwardToString($constructor);\n      $constructor.NULL = C.C_SassNull;\n      C.C_SassNull.toString = P.allowInterop(new O._closure30());\n      return $constructor;\n    },\n    $signature: 164\n  };\n  O._closure29.prototype = {\n    call$1: function(_) {\n      throw H.wrapException(\"new sass.types.Null() isn't allowed. Use sass.types.Null.NULL instead.\");\n    },\n    call$0: function() {\n      return this.call$1(null);\n    },\n    \"call*\": \"call$1\",\n    $requiredArgCount: 0,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 90\n  };\n  O._closure30.prototype = {\n    call$0: function() {\n      return \"null\";\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: 13\n  };\n  O.SassNull0.prototype = {\n    get$isTruthy: function() {\n      return false;\n    },\n    get$isBlank: function() {\n      return true;\n    },\n    get$realNull: function() {\n      return null;\n    },\n    accept$1$1: function(visitor) {\n      if (visitor._inspect)\n        visitor._buffer.write$1(0, \"null\");\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unaryNot$0: function() {\n      return C.SassBoolean_true;\n    }\n  };\n  T.NumberExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitNumberExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = H.S(this.value),\n        t2 = this.unit;\n      return t1 + (t2 == null ? \"\" : t2);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T._NodeSassNumber.prototype = {};\n  T.closure232.prototype = {\n    call$4: function(thisArg, value, unit, dartValue) {\n      J.set$dartValue$x(thisArg, dartValue == null ? T._parseNumber(value, unit) : dartValue);\n    },\n    call$2: function(thisArg, value) {\n      return this.call$4(thisArg, value, null, null);\n    },\n    call$3: function(thisArg, value, unit) {\n      return this.call$4(thisArg, value, unit, null);\n    },\n    \"call*\": \"call$4\",\n    $requiredArgCount: 2,\n    $defaultValues: function() {\n      return [null, null];\n    },\n    $signature: 414\n  };\n  T.closure233.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).value;\n    },\n    $signature: 415\n  };\n  T.closure234.prototype = {\n    call$2: function(thisArg, value) {\n      var t1 = J.getInterceptor$x(thisArg),\n        t2 = t1.get$dartValue(thisArg).numeratorUnits;\n      t1.set$dartValue(thisArg, T.SassNumber$withUnits0(value, t1.get$dartValue(thisArg).denominatorUnits, t2));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 416\n  };\n  T.closure235.prototype = {\n    call$1: function(thisArg) {\n      var t1 = J.getInterceptor$x(thisArg),\n        t2 = C.JSArray_methods.join$1(t1.get$dartValue(thisArg).numeratorUnits, \"*\");\n      return t2 + (t1.get$dartValue(thisArg).denominatorUnits.length === 0 ? \"\" : \"/\") + C.JSArray_methods.join$1(t1.get$dartValue(thisArg).denominatorUnits, \"*\");\n    },\n    $signature: 202\n  };\n  T.closure236.prototype = {\n    call$2: function(thisArg, unit) {\n      var t1 = J.getInterceptor$x(thisArg);\n      t1.set$dartValue(thisArg, T._parseNumber(t1.get$dartValue(thisArg).value, unit));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 418\n  };\n  T.closure237.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(J.get$dartValue$x(thisArg));\n    },\n    $signature: 202\n  };\n  T._parseNumber_closure.prototype = {\n    call$1: function(unit) {\n      return unit.length === 0;\n    },\n    $signature: 5\n  };\n  T._parseNumber_closure0.prototype = {\n    call$1: function(unit) {\n      return unit.length === 0;\n    },\n    $signature: 5\n  };\n  T.SassNumber0.prototype = {\n    get$unitString: function() {\n      var _this = this,\n        t1 = _this.numeratorUnits;\n      return t1.length !== 0 || _this.denominatorUnits.length !== 0 ? _this._number1$_unitString$2(t1, _this.denominatorUnits) : \"\";\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitNumber$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    withoutSlash$0: function() {\n      var _this = this;\n      if (_this.asSlash == null)\n        return _this;\n      return new T.SassNumber0(_this.value, _this.numeratorUnits, _this.denominatorUnits, null);\n    },\n    withSlash$2: function(numerator, denominator) {\n      return new T.SassNumber0(this.value, this.numeratorUnits, this.denominatorUnits, new S.Tuple2(numerator, denominator, type$.Tuple2_of_legacy_SassNumber_and_legacy_SassNumber_2));\n    },\n    assertNumber$1: function($name) {\n      return this;\n    },\n    assertNumber$0: function() {\n      return this.assertNumber$1(null);\n    },\n    assertInt$1: function($name) {\n      var t1 = this.value,\n        integer = T.fuzzyIsInt0(t1) ? J.round$0$n(t1) : null;\n      if (integer != null)\n        return integer;\n      throw H.wrapException(this._number1$_exception$2(this.toString$0(0) + \" is not an int.\", $name));\n    },\n    assertInt$0: function() {\n      return this.assertInt$1(null);\n    },\n    valueInRange$3: function(min, max, $name) {\n      var _this = this,\n        result = T.fuzzyCheckRange0(_this.value, min, max);\n      if (result != null)\n        return result;\n      throw H.wrapException(_this._number1$_exception$2(\"Expected \" + _this.toString$0(0) + \" to be within \" + min + _this.get$unitString() + \" and \" + max + _this.get$unitString() + \".\", $name));\n    },\n    hasUnit$1: function(unit) {\n      var t1 = this.numeratorUnits;\n      return t1.length === 1 && this.denominatorUnits.length === 0 && J.$eq$(C.JSArray_methods.get$first(t1), unit);\n    },\n    assertUnit$2: function(unit, $name) {\n      if (this.hasUnit$1(unit))\n        return;\n      throw H.wrapException(this._number1$_exception$2(\"Expected \" + this.toString$0(0) + ' to have unit \"' + unit + '\".', $name));\n    },\n    assertNoUnits$1: function($name) {\n      var _this = this;\n      if (!(_this.numeratorUnits.length !== 0 || _this.denominatorUnits.length !== 0))\n        return;\n      throw H.wrapException(_this._number1$_exception$2(\"Expected \" + _this.toString$0(0) + \" to have no units.\", $name));\n    },\n    valueInUnits$2: function(newNumerators, newDenominators) {\n      var t1, oldNumerators, t2, _i, oldDenominators, t3, _this = this, _box_0 = {};\n      if (!(newNumerators.length === 0 && newDenominators.length === 0)) {\n        t1 = _this.numeratorUnits;\n        if (!(t1.length === 0 && _this.denominatorUnits.length === 0))\n          t1 = C.C_ListEquality.equals$2(0, t1, newNumerators) && C.C_ListEquality.equals$2(0, _this.denominatorUnits, newDenominators);\n        else\n          t1 = true;\n      } else\n        t1 = true;\n      if (t1)\n        return _this.value;\n      _box_0.value = _this.value;\n      t1 = _this.numeratorUnits;\n      oldNumerators = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1)._eval$1(\"JSArray<1>\"));\n      for (t2 = newNumerators.length, _i = 0; _i < newNumerators.length; newNumerators.length === t2 || (0, H.throwConcurrentModificationError)(newNumerators), ++_i)\n        B.removeFirstWhere0(oldNumerators, new T.SassNumber_valueInUnits_closure3(_box_0, _this, newNumerators[_i]), new T.SassNumber_valueInUnits_closure4(_this, newNumerators, newDenominators));\n      t2 = _this.denominatorUnits;\n      oldDenominators = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2)._eval$1(\"JSArray<1>\"));\n      for (t3 = newDenominators.length, _i = 0; _i < newDenominators.length; newDenominators.length === t3 || (0, H.throwConcurrentModificationError)(newDenominators), ++_i)\n        B.removeFirstWhere0(oldDenominators, new T.SassNumber_valueInUnits_closure5(_box_0, _this, newDenominators[_i]), new T.SassNumber_valueInUnits_closure6(_this, newNumerators, newDenominators));\n      if (oldNumerators.length !== 0 || oldDenominators.length !== 0)\n        throw H.wrapException(E.SassScriptException$0(\"Incompatible units \" + _this._number1$_unitString$2(t1, t2) + \" and \" + _this._number1$_unitString$2(newNumerators, newDenominators) + \".\"));\n      return _box_0.value;\n    },\n    isComparableTo$1: function(other) {\n      var t1, exception;\n      if (this.numeratorUnits.length !== 0 || this.denominatorUnits.length !== 0)\n        t1 = !(other.numeratorUnits.length !== 0 || other.denominatorUnits.length !== 0);\n      else\n        t1 = true;\n      if (t1)\n        return true;\n      try {\n        this.greaterThan$1(other);\n        return true;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassScriptException0)\n          return false;\n        else\n          throw exception;\n      }\n    },\n    greaterThan$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceUnits$2(other, T.number2__fuzzyGreaterThan$closure()) ? C.SassBoolean_true : C.SassBoolean_false;\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" > \" + H.S(other) + '\".'));\n    },\n    greaterThanOrEquals$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceUnits$2(other, T.number2__fuzzyGreaterThanOrEquals$closure()) ? C.SassBoolean_true : C.SassBoolean_false;\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" >= \" + H.S(other) + '\".'));\n    },\n    lessThan$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceUnits$2(other, T.number2__fuzzyLessThan$closure()) ? C.SassBoolean_true : C.SassBoolean_false;\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" < \" + H.S(other) + '\".'));\n    },\n    lessThanOrEquals$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceUnits$2(other, T.number2__fuzzyLessThanOrEquals$closure()) ? C.SassBoolean_true : C.SassBoolean_false;\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" <= \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceNumber$2(other, new T.SassNumber_modulo_closure0());\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    plus$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceNumber$2(other, new T.SassNumber_plus_closure0());\n      if (!(other instanceof K.SassColor0))\n        return this.super$Value$plus0(other);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" + \" + other.toString$0(0) + '\".'));\n    },\n    minus$1: function(other) {\n      if (other instanceof T.SassNumber0)\n        return this._number1$_coerceNumber$2(other, new T.SassNumber_minus_closure0());\n      if (!(other instanceof K.SassColor0))\n        return this.super$Value$minus0(other);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" - \" + other.toString$0(0) + '\".'));\n    },\n    times$1: function(other) {\n      var _this = this;\n      if (other instanceof T.SassNumber0)\n        return _this._number1$_multiplyUnits$5(_this.value * other.value, _this.numeratorUnits, _this.denominatorUnits, other.numeratorUnits, other.denominatorUnits);\n      throw H.wrapException(E.SassScriptException$0('Undefined operation \"' + _this.toString$0(0) + \" * \" + H.S(other) + '\".'));\n    },\n    dividedBy$1: function(other) {\n      var _this = this;\n      if (other instanceof T.SassNumber0)\n        return _this._number1$_multiplyUnits$5(_this.value / other.value, _this.numeratorUnits, _this.denominatorUnits, other.denominatorUnits, other.numeratorUnits);\n      return _this.super$Value$dividedBy0(other);\n    },\n    unaryPlus$0: function() {\n      return this;\n    },\n    unaryMinus$0: function() {\n      return T.SassNumber$withUnits0(-this.value, this.denominatorUnits, this.numeratorUnits);\n    },\n    _number1$_coerceNumber$2: function(other, operation) {\n      var _this = this,\n        result = _this._number1$_coerceUnits$2(other, operation),\n        t1 = _this.numeratorUnits,\n        t2 = t1.length === 0;\n      t1 = !t2 || _this.denominatorUnits.length !== 0 ? t1 : other.numeratorUnits;\n      return T.SassNumber$withUnits0(result, !t2 || _this.denominatorUnits.length !== 0 ? _this.denominatorUnits : other.denominatorUnits, t1);\n    },\n    _number1$_coerceUnits$1$2: function(other, operation) {\n      var num1, num2, _this = this,\n        t1 = _this.numeratorUnits;\n      if (t1.length !== 0 || _this.denominatorUnits.length !== 0) {\n        num1 = _this.value;\n        num2 = other.valueInUnits$2(t1, _this.denominatorUnits);\n      } else {\n        num1 = _this.valueInUnits$2(other.numeratorUnits, other.denominatorUnits);\n        num2 = other.value;\n      }\n      return operation.call$2(num1, num2);\n    },\n    _number1$_coerceUnits$2: function(other, operation) {\n      return this._number1$_coerceUnits$1$2(other, operation, type$.dynamic);\n    },\n    _number1$_multiplyUnits$5: function(value, numerators1, denominators1, numerators2, denominators2) {\n      var t1, newNumerators, mutableDenominators2, _i, numerator, mutableDenominators1, _this = this, _box_0 = {};\n      _box_0.value = value;\n      t1 = numerators1.length;\n      if (t1 === 0) {\n        if (denominators2.length === 0 && !_this._number1$_areAnyConvertible$2(denominators1, numerators2))\n          return T.SassNumber$withUnits0(value, denominators1, numerators2);\n        else if (denominators1.length === 0)\n          return T.SassNumber$withUnits0(value, denominators2, numerators2);\n      } else if (numerators2.length === 0)\n        if (denominators2.length === 0)\n          return T.SassNumber$withUnits0(value, denominators2, numerators1);\n        else if (denominators1.length === 0 && !_this._number1$_areAnyConvertible$2(numerators1, denominators2))\n          return T.SassNumber$withUnits0(value, denominators2, numerators1);\n      newNumerators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      mutableDenominators2 = H.setRuntimeTypeInfo(denominators2.slice(0), H._arrayInstanceType(denominators2)._eval$1(\"JSArray<1>\"));\n      for (_i = 0; _i < t1; ++_i) {\n        numerator = numerators1[_i];\n        B.removeFirstWhere0(mutableDenominators2, new T.SassNumber__multiplyUnits_closure3(_box_0, _this, numerator), new T.SassNumber__multiplyUnits_closure4(newNumerators, numerator));\n      }\n      mutableDenominators1 = H.setRuntimeTypeInfo(denominators1.slice(0), H._arrayInstanceType(denominators1)._eval$1(\"JSArray<1>\"));\n      for (t1 = numerators2.length, _i = 0; _i < t1; ++_i) {\n        numerator = numerators2[_i];\n        B.removeFirstWhere0(mutableDenominators1, new T.SassNumber__multiplyUnits_closure5(_box_0, _this, numerator), new T.SassNumber__multiplyUnits_closure6(newNumerators, numerator));\n      }\n      t1 = _box_0.value;\n      C.JSArray_methods.addAll$1(mutableDenominators1, mutableDenominators2);\n      return T.SassNumber$withUnits0(t1, mutableDenominators1, newNumerators);\n    },\n    _number1$_areAnyConvertible$2: function(units1, units2) {\n      return C.JSArray_methods.any$1(units1, new T.SassNumber__areAnyConvertible_closure0(this, units2));\n    },\n    _number1$_conversionFactor$2: function(unit1, unit2) {\n      var innerMap;\n      if (unit1 == unit2)\n        return 1;\n      innerMap = $.$get$_conversions0().$index(0, unit1);\n      if (innerMap == null)\n        return null;\n      return innerMap.$index(0, unit2);\n    },\n    _number1$_unitString$2: function(numerators, denominators) {\n      var t1;\n      if (numerators.length === 0) {\n        t1 = denominators.length;\n        if (t1 === 0)\n          return \"no units\";\n        if (t1 === 1)\n          return J.$add$ansx(C.JSArray_methods.get$single(denominators), \"^-1\");\n        return \"(\" + C.JSArray_methods.join$1(denominators, \"*\") + \")^-1\";\n      }\n      if (denominators.length === 0)\n        return C.JSArray_methods.join$1(numerators, \"*\");\n      return C.JSArray_methods.join$1(numerators, \"*\") + \"/\" + C.JSArray_methods.join$1(denominators, \"*\");\n    },\n    $eq: function(_, other) {\n      var t1, t2, t3, exception, _this = this;\n      if (other == null)\n        return false;\n      other = other;\n      if (other instanceof T.SassNumber0) {\n        t1 = _this.numeratorUnits.length === 0;\n        t2 = !t1 || _this.denominatorUnits.length !== 0;\n        t3 = other;\n        if (t2 !== (t3.numeratorUnits.length !== 0 || t3.denominatorUnits.length !== 0))\n          return false;\n        if (!(!t1 || _this.denominatorUnits.length !== 0))\n          return Math.abs(_this.value - other.value) < $.$get$epsilon0();\n        try {\n          t1 = _this._number1$_coerceUnits$2(other, T.number2__fuzzyEquals$closure());\n          return t1;\n        } catch (exception) {\n          if (H.unwrapException(exception) instanceof E.SassScriptException0)\n            return false;\n          else\n            throw exception;\n        }\n      } else\n        return false;\n    },\n    get$hashCode: function(_) {\n      var _this = this,\n        t1 = _this.value * _this._number1$_canonicalMultiplier$1(_this.numeratorUnits) / _this._number1$_canonicalMultiplier$1(_this.denominatorUnits);\n      return t1 == 1 / 0 || t1 == -1 / 0 || isNaN(t1) ? C.JSDouble_methods.get$hashCode(t1) : C.JSInt_methods.get$hashCode(C.JSDouble_methods.round$0(t1 * $.$get$_inverseEpsilon0()));\n    },\n    _number1$_canonicalMultiplier$1: function(units) {\n      return C.JSArray_methods.fold$2(units, 1, new T.SassNumber__canonicalMultiplier_closure0());\n    },\n    _number1$_exception$2: function(message, $name) {\n      return new E.SassScriptException0($name == null ? message : \"$\" + $name + \": \" + message);\n    }\n  };\n  T.SassNumber_valueInUnits_closure3.prototype = {\n    call$1: function(oldNumerator) {\n      var t1,\n        factor = this.$this._number1$_conversionFactor$2(this.newNumerator, oldNumerator);\n      if (factor == null)\n        return false;\n      t1 = this._box_0;\n      t1.value = t1.value * factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber_valueInUnits_closure4.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      throw H.wrapException(E.SassScriptException$0(\"Incompatible units \" + t1._number1$_unitString$2(t1.numeratorUnits, t1.denominatorUnits) + \" and \" + t1._number1$_unitString$2(this.newNumerators, this.newDenominators) + \".\"));\n    },\n    $signature: 0\n  };\n  T.SassNumber_valueInUnits_closure5.prototype = {\n    call$1: function(oldDenominator) {\n      var t1,\n        factor = this.$this._number1$_conversionFactor$2(this.newDenominator, oldDenominator);\n      if (factor == null)\n        return false;\n      t1 = this._box_0;\n      t1.value = t1.value / factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber_valueInUnits_closure6.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      throw H.wrapException(E.SassScriptException$0(\"Incompatible units \" + t1._number1$_unitString$2(t1.numeratorUnits, t1.denominatorUnits) + \" and \" + t1._number1$_unitString$2(this.newNumerators, this.newDenominators) + \".\"));\n    },\n    $signature: 0\n  };\n  T.SassNumber_modulo_closure0.prototype = {\n    call$2: function(num1, num2) {\n      var t1;\n      if (num2 > 0)\n        return C.JSNumber_methods.$mod(num1, num2);\n      if (num2 === 0)\n        return 0 / 0;\n      t1 = C.JSNumber_methods.$mod(num1, num2);\n      return t1 === 0 ? 0 : t1 + num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber_plus_closure0.prototype = {\n    call$2: function(num1, num2) {\n      return num1 + num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber_minus_closure0.prototype = {\n    call$2: function(num1, num2) {\n      return num1 - num2;\n    },\n    $signature: 45\n  };\n  T.SassNumber__multiplyUnits_closure3.prototype = {\n    call$1: function(denominator) {\n      var factor = this.$this._number1$_conversionFactor$2(this.numerator, denominator);\n      if (factor == null)\n        return false;\n      this._box_0.value /= factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber__multiplyUnits_closure4.prototype = {\n    call$0: function() {\n      this.newNumerators.push(this.numerator);\n      return null;\n    },\n    $signature: 0\n  };\n  T.SassNumber__multiplyUnits_closure5.prototype = {\n    call$1: function(denominator) {\n      var factor = this.$this._number1$_conversionFactor$2(this.numerator, denominator);\n      if (factor == null)\n        return false;\n      this._box_0.value /= factor;\n      return true;\n    },\n    $signature: 5\n  };\n  T.SassNumber__multiplyUnits_closure6.prototype = {\n    call$0: function() {\n      this.newNumerators.push(this.numerator);\n      return null;\n    },\n    $signature: 0\n  };\n  T.SassNumber__areAnyConvertible_closure0.prototype = {\n    call$1: function(unit1) {\n      var t1 = $.$get$_conversions0();\n      if (!t1.containsKey$1(unit1))\n        return C.JSArray_methods.contains$1(this.units2, unit1);\n      return C.JSArray_methods.any$1(this.units2, t1.$index(0, unit1).get$containsKey());\n    },\n    $signature: 5\n  };\n  T.SassNumber__canonicalMultiplier_closure0.prototype = {\n    call$2: function(multiplier, unit) {\n      var t1,\n        innerMap = $.$get$_conversions0().$index(0, unit);\n      if (innerMap == null)\n        t1 = multiplier;\n      else {\n        t1 = innerMap.get$values(innerMap);\n        t1 = multiplier / t1.get$first(t1);\n      }\n      return t1;\n    },\n    $signature: 145\n  };\n  U.SupportsOperation0.prototype = {\n    toString$0: function(_) {\n      var _this = this;\n      return _this._operation0$_parenthesize$1(_this.left) + \" \" + _this.operator + \" \" + _this._operation0$_parenthesize$1(_this.right);\n    },\n    _operation0$_parenthesize$1: function(condition) {\n      var t1;\n      if (!(condition instanceof M.SupportsNegation0))\n        t1 = condition instanceof U.SupportsOperation0 && condition.operator === this.operator;\n      else\n        t1 = true;\n      return t1 ? \"(\" + condition.toString$0(0) + \")\" : condition.toString$0(0);\n    },\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.ParentSelector0.prototype = {\n    accept$1$1: function(visitor) {\n      var t2,\n        t1 = visitor._buffer;\n      t1.writeCharCode$1(38);\n      t2 = this.suffix;\n      if (t2 != null)\n        t1.write$1(0, t2);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(compound) {\n      return H.throwExpression(P.UnsupportedError$(\"& doesn't support unification.\"));\n    }\n  };\n  M.ParentStatement0.prototype = {$isAstNode0: 1, $isStatement0: 1};\n  M.ParentStatement_closure0.prototype = {\n    call$1: function(child) {\n      var t1;\n      if (!(child instanceof Z.VariableDeclaration0))\n        if (!(child instanceof M.FunctionRule0))\n          if (!(child instanceof T.MixinRule0))\n            t1 = child instanceof B.ImportRule0 && C.JSArray_methods.any$1(child.imports, new M.ParentStatement__closure0());\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    $signature: 192\n  };\n  M.ParentStatement__closure0.prototype = {\n    call$1: function($import) {\n      return $import instanceof B.DynamicImport0;\n    },\n    $signature: 193\n  };\n  T.ParenthesizedExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitParenthesizedExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.expression);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  G.Parser1.prototype = {\n    _parser$_parseIdentifier$0: function() {\n      return this.wrapSpanFormatException$1(new G.Parser__parseIdentifier_closure0(this));\n    },\n    whitespace$0: function() {\n      do\n        this.whitespaceWithoutComments$0();\n      while (this.scanComment$0());\n    },\n    whitespaceWithoutComments$0: function() {\n      var t3,\n        t1 = this.scanner,\n        t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    spaces$0: function() {\n      var t3,\n        t1 = this.scanner,\n        t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = t3 === 32 || t3 === 9;\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    scanComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      if (t1.peekChar$0() !== 47)\n        return false;\n      next = t1.peekChar$1(1);\n      if (next === 47) {\n        this.silentComment$0();\n        return true;\n      } else if (next === 42) {\n        this.loudComment$0();\n        return true;\n      } else\n        return false;\n    },\n    silentComment$0: function() {\n      var t2, t3,\n        t1 = this.scanner;\n      t1.expect$1(\"//\");\n      t2 = t1.string.length;\n      while (true) {\n        if (t1._string_scanner$_position !== t2) {\n          t3 = t1.peekChar$0();\n          t3 = !(t3 === 10 || t3 === 13 || t3 === 12);\n        } else\n          t3 = false;\n        if (!t3)\n          break;\n        t1.readChar$0();\n      }\n    },\n    loudComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      t1.expect$1(\"/*\");\n      for (; true;) {\n        if (t1.readChar$0() !== 42)\n          continue;\n        do\n          next = t1.readChar$0();\n        while (next === 42);\n        if (next === 47)\n          break;\n      }\n    },\n    identifier$2$normalize$unit: function(normalize, unit) {\n      var t2, first, _this = this,\n        _s20_ = \"Expected identifier.\",\n        text = new P.StringBuffer(\"\"),\n        t1 = _this.scanner;\n      if (t1.scanChar$1(45)) {\n        t2 = text._contents = H.Primitives_stringFromCharCode(45);\n        if (t1.scanChar$1(45)) {\n          text._contents = t2 + H.Primitives_stringFromCharCode(45);\n          _this._parser$_identifierBody$3$normalize$unit(text, normalize, unit);\n          t1 = text._contents;\n          return t1.charCodeAt(0) == 0 ? t1 : t1;\n        }\n      } else\n        t2 = \"\";\n      first = t1.peekChar$0();\n      if (first == null)\n        t1.error$1(0, _s20_);\n      else if (normalize && first === 95) {\n        t1.readChar$0();\n        text._contents = t2 + H.Primitives_stringFromCharCode(45);\n      } else if (first === 95 || T.isAlphabetic1(first) || first >= 128)\n        text._contents = t2 + H.Primitives_stringFromCharCode(t1.readChar$0());\n      else if (first === 92)\n        text._contents = t2 + H.S(_this.escape$1$identifierStart(true));\n      else\n        t1.error$1(0, _s20_);\n      _this._parser$_identifierBody$3$normalize$unit(text, normalize, unit);\n      t1 = text._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    identifier$0: function() {\n      return this.identifier$2$normalize$unit(false, false);\n    },\n    identifier$1$normalize: function(normalize) {\n      return this.identifier$2$normalize$unit(normalize, false);\n    },\n    identifier$1$unit: function(unit) {\n      return this.identifier$2$normalize$unit(false, unit);\n    },\n    _parser$_identifierBody$3$normalize$unit: function(text, normalize, unit) {\n      var t1, next, second, t2;\n      for (t1 = this.scanner; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else if (unit && next === 45) {\n          second = t1.peekChar$1(1);\n          if (second != null)\n            if (second !== 46)\n              t2 = second >= 48 && second <= 57;\n            else\n              t2 = true;\n          else\n            t2 = false;\n          if (t2)\n            break;\n          text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n        } else if (normalize && next === 95) {\n          t1.readChar$0();\n          text._contents += H.Primitives_stringFromCharCode(45);\n        } else {\n          if (next !== 95) {\n            if (!(next >= 97 && next <= 122))\n              t2 = next >= 65 && next <= 90;\n            else\n              t2 = true;\n            t2 = t2 || next >= 128;\n          } else\n            t2 = true;\n          if (!t2) {\n            t2 = next >= 48 && next <= 57;\n            t2 = t2 || next === 45;\n          } else\n            t2 = true;\n          if (t2)\n            text._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            text._contents += H.S(this.escape$0());\n          else\n            break;\n        }\n      }\n    },\n    _parser$_identifierBody$1: function(text) {\n      return this._parser$_identifierBody$3$normalize$unit(text, false, false);\n    },\n    string$0: function() {\n      var t2, buffer, next,\n        t1 = this.scanner,\n        quote = t1.readChar$0();\n      if (quote !== 39 && quote !== 34) {\n        t2 = t1._string_scanner$_position;\n        t1.error$2$position(0, \"Expected string.\", t2 - 1);\n      }\n      buffer = new P.StringBuffer(\"\");\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next === quote) {\n          t1.readChar$0();\n          break;\n        } else if (next == null || next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"Expected \" + H.Primitives_stringFromCharCode(quote) + \".\");\n        else if (next === 92) {\n          t2 = t1.peekChar$1(1);\n          if (t2 === 10 || t2 === 13 || t2 === 12) {\n            t1.readChar$0();\n            t1.readChar$0();\n          } else\n            buffer._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());\n        } else\n          buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    naturalNumber$0: function() {\n      var number, t2,\n        t1 = this.scanner,\n        first = t1.readChar$0();\n      if (!T.isDigit0(first))\n        t1.error$2$position(0, \"Expected digit.\", t1._string_scanner$_position - 1);\n      number = first - 48;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        number = number * 10 + (t1.readChar$0() - 48);\n      }\n      return number;\n    },\n    declarationValue$1$allowEmpty: function(allowEmpty) {\n      var t1, t2, wroteNewline, next, start, end, t3, url, _this = this,\n        buffer = new P.StringBuffer(\"\"),\n        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);\n      $label0$1:\n        for (t1 = _this.scanner, t2 = _this.get$string(), wroteNewline = false; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              buffer._contents += H.S(_this.escape$1$identifierStart(true));\n              wroteNewline = false;\n              break;\n            case 34:\n            case 39:\n              start = t1._string_scanner$_position;\n              t2.call$0();\n              end = t1._string_scanner$_position;\n              buffer._contents += J.substring$2$s(t1.string, start, end);\n              wroteNewline = false;\n              break;\n            case 47:\n              if (t1.peekChar$1(1) === 42) {\n                t3 = _this.get$loudComment();\n                start = t1._string_scanner$_position;\n                t3.call$0();\n                end = t1._string_scanner$_position;\n                buffer._contents += J.substring$2$s(t1.string, start, end);\n              } else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 32:\n            case 9:\n              if (!wroteNewline) {\n                t3 = t1.peekChar$1(1);\n                t3 = !(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12);\n              } else\n                t3 = true;\n              if (t3)\n                buffer._contents += H.Primitives_stringFromCharCode(32);\n              t1.readChar$0();\n              break;\n            case 10:\n            case 13:\n            case 12:\n              t3 = t1.peekChar$1(-1);\n              if (!(t3 === 10 || t3 === 13 || t3 === 12))\n                buffer._contents += \"\\n\";\n              t1.readChar$0();\n              wroteNewline = true;\n              break;\n            case 40:\n            case 123:\n            case 91:\n              buffer._contents += H.Primitives_stringFromCharCode(next);\n              brackets.push(T.opposite0(t1.readChar$0()));\n              wroteNewline = false;\n              break;\n            case 41:\n            case 125:\n            case 93:\n              if (brackets.length === 0)\n                break $label0$1;\n              buffer._contents += H.Primitives_stringFromCharCode(next);\n              t1.expectChar$1(brackets.pop());\n              wroteNewline = false;\n              break;\n            case 59:\n              if (brackets.length === 0)\n                break $label0$1;\n              buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 117:\n            case 85:\n              url = _this.tryUrl$0();\n              if (url != null)\n                buffer._contents += url;\n              else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                buffer._contents += _this.identifier$0();\n              else\n                buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n          }\n        }\n      if (brackets.length !== 0)\n        t1.expectChar$1(C.JSArray_methods.get$last(brackets));\n      if (!allowEmpty && buffer._contents.length === 0)\n        t1.error$1(0, \"Expected token.\");\n      t1 = buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    declarationValue$0: function() {\n      return this.declarationValue$1$allowEmpty(false);\n    },\n    tryUrl$0: function() {\n      var buffer, next, t2, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (!_this.scanIdentifier$1(\"url\"))\n        return null;\n      if (!t1.scanChar$1(40)) {\n        t1.set$state(start);\n        return null;\n      }\n      _this.whitespace$0();\n      buffer = new P.StringBuffer(\"\");\n      buffer._contents = \"url(\";\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 37)\n            if (next !== 38)\n              if (next !== 35)\n                t2 = next >= 42 && next <= 126 || next >= 128;\n              else\n                t2 = true;\n            else\n              t2 = true;\n          else\n            t2 = true;\n          if (t2)\n            buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            buffer._contents += H.S(_this.escape$0());\n          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {\n            _this.whitespace$0();\n            if (t1.peekChar$0() !== 41)\n              break;\n          } else if (next === 41) {\n            t2 = buffer._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            return t2.charCodeAt(0) == 0 ? t2 : t2;\n          } else\n            break;\n        }\n      }\n      t1.set$state(start);\n      return null;\n    },\n    variableName$0: function() {\n      this.scanner.expectChar$1(36);\n      return this.identifier$1$normalize(true);\n    },\n    escape$1$identifierStart: function(identifierStart) {\n      var value, first, i, next, t2, exception,\n        t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      t1.expectChar$1(92);\n      value = 0;\n      first = t1.peekChar$0();\n      if (first == null)\n        return \"\";\n      else if (T.isNewline0(first))\n        t1.error$1(0, \"Expected escape sequence.\");\n      else if (T.isHex0(first)) {\n        for (i = 0; i < 6; ++i) {\n          next = t1.peekChar$0();\n          if (next == null || !T.isHex0(next))\n            break;\n          value *= 16;\n          value += T.asHex0(t1.readChar$0());\n        }\n        this.scanCharIf$1(T.character0__isWhitespace$closure());\n      } else\n        value = t1.readChar$0();\n      if (identifierStart) {\n        t2 = value;\n        t2 = t2 === 95 || T.isAlphabetic1(t2) || t2 >= 128;\n      } else {\n        t2 = value;\n        t2 = t2 === 95 || T.isAlphabetic1(t2) || t2 >= 128 || T.isDigit0(t2) || t2 === 45;\n      }\n      if (t2)\n        try {\n          t2 = H.Primitives_stringFromCharCode(value);\n          return t2;\n        } catch (exception) {\n          if (type$.legacy_RangeError._is(H.unwrapException(exception)))\n            t1.error$3$length$position(0, \"Invalid Unicode code point.\", t1._string_scanner$_position - start, start);\n          else\n            throw exception;\n        }\n      else {\n        if (!(value <= 31))\n          if (!J.$eq$(value, 127))\n            t1 = identifierStart && T.isDigit0(value);\n          else\n            t1 = true;\n        else\n          t1 = true;\n        if (t1) {\n          t1 = H.Primitives_stringFromCharCode(92);\n          if (value > 15)\n            t1 += H.Primitives_stringFromCharCode(T.hexCharFor0(C.JSNumber_methods._shrOtherPositive$1(value, 4)));\n          t1 = t1 + H.Primitives_stringFromCharCode(T.hexCharFor0(value & 15)) + H.Primitives_stringFromCharCode(32);\n          return t1.charCodeAt(0) == 0 ? t1 : t1;\n        } else\n          return P.String_String$fromCharCodes(H.setRuntimeTypeInfo([92, value], type$.JSArray_legacy_int), 0, null);\n      }\n    },\n    escape$0: function() {\n      return this.escape$1$identifierStart(false);\n    },\n    escapeCharacter$0: function() {\n      var first, value, i, next, t2,\n        t1 = this.scanner;\n      t1.expectChar$1(92);\n      first = t1.peekChar$0();\n      if (first == null)\n        return 65533;\n      else if (T.isNewline0(first))\n        t1.error$1(0, \"Expected escape sequence.\");\n      else if (T.isHex0(first)) {\n        for (value = 0, i = 0; i < 6; ++i) {\n          next = t1.peekChar$0();\n          if (next == null || !T.isHex0(next))\n            break;\n          value = (value << 4 >>> 0) + T.asHex0(t1.readChar$0());\n        }\n        t2 = t1.peekChar$0();\n        if (t2 === 32 || t2 === 9 || T.isNewline0(t2))\n          t1.readChar$0();\n        if (value !== 0)\n          t1 = value >= 55296 && value <= 57343 || value >= 1114111;\n        else\n          t1 = true;\n        if (t1)\n          return 65533;\n        else\n          return value;\n      } else\n        return t1.readChar$0();\n    },\n    scanCharIf$1: function(condition) {\n      var t1 = this.scanner;\n      if (!condition.call$1(t1.peekChar$0()))\n        return false;\n      t1.readChar$0();\n      return true;\n    },\n    scanIdentChar$2$caseSensitive: function(char, caseSensitive) {\n      var t3,\n        t1 = new G.Parser_scanIdentChar_matches0(caseSensitive, char),\n        t2 = this.scanner,\n        next = t2.peekChar$0();\n      if (next != null && t1.call$1(next)) {\n        t2.readChar$0();\n        return true;\n      } else if (next === 92) {\n        t3 = t2._string_scanner$_position;\n        if (t1.call$1(this.escapeCharacter$0()))\n          return true;\n        t2.set$state(new S._SpanScannerState(t2, t3));\n      }\n      return false;\n    },\n    scanIdentChar$1: function(char) {\n      return this.scanIdentChar$2$caseSensitive(char, false);\n    },\n    expectIdentChar$1: function(letter) {\n      var t1;\n      if (this.scanIdentChar$2$caseSensitive(letter, false))\n        return;\n      t1 = this.scanner;\n      t1.error$2$position(0, 'Expected \"' + H.Primitives_stringFromCharCode(letter) + '\".', t1._string_scanner$_position);\n    },\n    lookingAtNumber$0: function() {\n      var second, third,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (T.isDigit0(first))\n        return true;\n      if (first === 46) {\n        second = t1.peekChar$1(1);\n        return second != null && T.isDigit0(second);\n      } else if (first === 43 || first === 45) {\n        second = t1.peekChar$1(1);\n        if (second == null)\n          return false;\n        if (T.isDigit0(second))\n          return true;\n        if (second !== 46)\n          return false;\n        third = t1.peekChar$1(2);\n        return third != null && T.isDigit0(third);\n      } else\n        return false;\n    },\n    lookingAtIdentifier$1: function($forward) {\n      var t1, first, second;\n      if ($forward == null)\n        $forward = 0;\n      t1 = this.scanner;\n      first = t1.peekChar$1($forward);\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || first === 92)\n        return true;\n      if (first !== 45)\n        return false;\n      second = t1.peekChar$1($forward + 1);\n      if (second == null)\n        return false;\n      return second === 95 || T.isAlphabetic1(second) || second >= 128 || second === 92 || second === 45;\n    },\n    lookingAtIdentifier$0: function() {\n      return this.lookingAtIdentifier$1(null);\n    },\n    lookingAtIdentifierBody$0: function() {\n      var t1,\n        next = this.scanner.peekChar$0();\n      if (next != null)\n        t1 = next === 95 || T.isAlphabetic1(next) || next >= 128 || T.isDigit0(next) || next === 45 || next === 92;\n      else\n        t1 = false;\n      return t1;\n    },\n    scanIdentifier$2$caseSensitive: function(text, caseSensitive) {\n      var t1, start, t2, cur, _this = this;\n      if (!_this.lookingAtIdentifier$0())\n        return false;\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        if (_this.scanIdentChar$2$caseSensitive(cur, caseSensitive))\n          continue;\n        if (start._scanner !== t1)\n          H.throwExpression(P.ArgumentError$(string$.The_gi));\n        t2 = start.position;\n        if (t2 < 0 || t2 > t1.string.length)\n          H.throwExpression(P.ArgumentError$(\"Invalid position \" + t2));\n        t1._string_scanner$_position = t2;\n        t1._lastMatch = null;\n        return false;\n      }\n      if (!_this.lookingAtIdentifierBody$0())\n        return true;\n      t1.set$state(start);\n      return false;\n    },\n    scanIdentifier$1: function(text) {\n      return this.scanIdentifier$2$caseSensitive(text, false);\n    },\n    expectIdentifier$2$name: function(text, $name) {\n      var t1, start, t2, cur;\n      if ($name == null)\n        $name = '\"' + text + '\"';\n      t1 = this.scanner;\n      start = t1._string_scanner$_position;\n      for (t2 = new H.CodeUnits(text), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n        cur = t2.__internal$_current;\n        if (this.scanIdentChar$2$caseSensitive(cur, false))\n          continue;\n        t1.error$2$position(0, \"Expected \" + $name + \".\", start);\n      }\n      if (!this.lookingAtIdentifierBody$0())\n        return;\n      t1.error$2$position(0, \"Expected \" + $name, start);\n    },\n    expectIdentifier$1: function(text) {\n      return this.expectIdentifier$2$name(text, null);\n    },\n    rawText$1: function(consumer) {\n      var t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      consumer.call$0();\n      return t1.substring$1(0, start);\n    },\n    error$2: function(_, message, span) {\n      return H.throwExpression(E.StringScannerException$(message, span, this.scanner.string));\n    },\n    withErrorMessage$1$2: function(message, callback) {\n      var error, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SourceSpanFormatException._is(t1)) {\n          error = t1;\n          throw H.wrapException(G.SourceSpanFormatException$(message, error.get$span(), error.get$source()));\n        } else\n          throw exception;\n      }\n    },\n    withErrorMessage$2: function(message, callback) {\n      return this.withErrorMessage$1$2(message, callback, type$.dynamic);\n    },\n    wrapSpanFormatException$1$1: function(callback) {\n      var error, span, startPosition, t1, exception;\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (type$.legacy_SourceSpanFormatException._is(t1)) {\n          error = t1;\n          span = error.get$span();\n          if (B.startsWithIgnoreCase0(error._span_exception$_message, \"expected\")) {\n            t1 = span;\n            t1 = t1._end - t1._file$_start === 0;\n          } else\n            t1 = false;\n          if (t1) {\n            t1 = span;\n            startPosition = this._parser$_firstNewlineBefore$1(Y.FileLocation$_(t1.file, t1._file$_start).offset);\n            t1 = span;\n            if (!J.$eq$(startPosition, Y.FileLocation$_(t1.file, t1._file$_start).offset))\n              span = span.file.span$2(startPosition, startPosition);\n          }\n          throw H.wrapException(E.SassFormatException$0(error._span_exception$_message, span));\n        } else\n          throw exception;\n      }\n    },\n    wrapSpanFormatException$1: function(callback) {\n      return this.wrapSpanFormatException$1$1(callback, type$.dynamic);\n    },\n    _parser$_firstNewlineBefore$1: function(position) {\n      var t1, t2, lastNewline, codeUnit,\n        index = position - 1;\n      for (t1 = this.scanner.string, t2 = J.getInterceptor$s(t1), lastNewline = null; index >= 0;) {\n        codeUnit = t2.codeUnitAt$1(t1, index);\n        if (!(codeUnit === 32 || codeUnit === 9 || codeUnit === 10 || codeUnit === 13 || codeUnit === 12))\n          return lastNewline == null ? position : lastNewline;\n        if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12)\n          lastNewline = index;\n        --index;\n      }\n      return position;\n    }\n  };\n  G.Parser__parseIdentifier_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        result = t1.identifier$0();\n      t1.scanner.expectDone$0();\n      return result;\n    },\n    $signature: 13\n  };\n  G.Parser_scanIdentChar_matches0.prototype = {\n    call$1: function(actual) {\n      var t1 = this.char;\n      return this.caseSensitive ? actual === t1 : T.characterEqualsIgnoreCase0(t1, actual);\n    },\n    $signature: 24\n  };\n  N.PlaceholderSelector0.prototype = {\n    get$isInvisible: function() {\n      return true;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._buffer;\n      t1.writeCharCode$1(37);\n      t1.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      return new N.PlaceholderSelector0(this.name + suffix);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.PlaceholderSelector0 && other.name === this.name;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name);\n    }\n  };\n  L.PlainCssCallable0.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof L.PlainCssCallable0 && this.name == other.name;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.name);\n    },\n    $isAsyncCallable0: 1,\n    $isCallable0: 1,\n    get$name: function(receiver) {\n      return this.name;\n    }\n  };\n  F.PrefixedMapView0.prototype = {\n    get$keys: function(_) {\n      return new F._PrefixedKeys0(this);\n    },\n    get$length: function(_) {\n      var t1 = this._prefixed_map_view0$_map;\n      return t1.get$length(t1);\n    },\n    get$isEmpty: function(_) {\n      var t1 = this._prefixed_map_view0$_map;\n      return t1.get$isEmpty(t1);\n    },\n    get$isNotEmpty: function(_) {\n      var t1 = this._prefixed_map_view0$_map;\n      return t1.get$isNotEmpty(t1);\n    },\n    $index: function(_, key) {\n      return typeof key == \"string\" && C.JSString_methods.startsWith$1(key, this._prefixed_map_view0$_prefix) ? this._prefixed_map_view0$_map.$index(0, J.substring$1$s(key, this._prefixed_map_view0$_prefix.length)) : null;\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && C.JSString_methods.startsWith$1(key, this._prefixed_map_view0$_prefix) && this._prefixed_map_view0$_map.containsKey$1(J.substring$1$s(key, this._prefixed_map_view0$_prefix.length));\n    }\n  };\n  F._PrefixedKeys0.prototype = {\n    get$length: function(_) {\n      var t1 = this._prefixed_map_view0$_view._prefixed_map_view0$_map;\n      return t1.get$length(t1);\n    },\n    get$iterator: function(_) {\n      var t1 = this._prefixed_map_view0$_view._prefixed_map_view0$_map;\n      t1 = J.map$1$1$ax(t1.get$keys(t1), new F._PrefixedKeys_iterator_closure0(this), type$.legacy_String);\n      return t1.get$iterator(t1);\n    },\n    contains$1: function(_, key) {\n      return this._prefixed_map_view0$_view.containsKey$1(key);\n    }\n  };\n  F._PrefixedKeys_iterator_closure0.prototype = {\n    call$1: function(key) {\n      return this.$this._prefixed_map_view0$_view._prefixed_map_view0$_prefix + H.S(key);\n    },\n    $signature: 8\n  };\n  D.PseudoSelector0.prototype = {\n    get$minSpecificity: function() {\n      if (this._pseudo0$_minSpecificity == null)\n        this._pseudo0$_computeSpecificity$0();\n      return this._pseudo0$_minSpecificity;\n    },\n    get$maxSpecificity: function() {\n      if (this._pseudo0$_maxSpecificity == null)\n        this._pseudo0$_computeSpecificity$0();\n      return this._pseudo0$_maxSpecificity;\n    },\n    get$isInvisible: function() {\n      var t1 = this.selector;\n      if (t1 == null)\n        return false;\n      return this.name !== \"not\" && t1.get$isInvisible();\n    },\n    addSuffix$1: function(suffix) {\n      var _this = this;\n      if (_this.argument != null || _this.selector != null)\n        _this.super$SimpleSelector$addSuffix0(suffix);\n      return D.PseudoSelector$0(_this.name + suffix, null, !_this.isClass, null);\n    },\n    unify$1: function(compound) {\n      var result, t1, t2, addedThis, _i, simple, _this = this;\n      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0)\n        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2));\n      if (C.JSArray_methods.contains$1(compound, _this))\n        return compound;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n      for (t1 = compound.length, t2 = !_this.isClass, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {\n        simple = compound[_i];\n        if (simple instanceof D.PseudoSelector0 && !simple.isClass) {\n          if (t2)\n            return null;\n          result.push(_this);\n          addedThis = true;\n        }\n        result.push(simple);\n      }\n      if (!addedThis)\n        result.push(_this);\n      return result;\n    },\n    _pseudo0$_computeSpecificity$0: function() {\n      var t1, _i, t2, complex, t3, t4, _this = this;\n      if (!_this.isClass) {\n        _this._pseudo0$_maxSpecificity = _this._pseudo0$_minSpecificity = 1;\n        return;\n      }\n      t1 = _this.selector;\n      if (t1 == null) {\n        _this._pseudo0$_minSpecificity = M.SimpleSelector0.prototype.get$minSpecificity.call(_this);\n        _this._pseudo0$_maxSpecificity = M.SimpleSelector0.prototype.get$maxSpecificity.call(_this);\n        return;\n      }\n      if (_this.name === \"not\") {\n        _i = _this._pseudo0$_maxSpecificity = _this._pseudo0$_minSpecificity = 0;\n        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {\n          complex = t1[_i];\n          t3 = _this._pseudo0$_minSpecificity;\n          if (complex._complex0$_minSpecificity == null)\n            complex._complex0$_computeSpecificity$0();\n          t4 = complex._complex0$_minSpecificity;\n          _this._pseudo0$_minSpecificity = Math.max(H.checkNum(t3), H.checkNum(t4));\n          t4 = _this._pseudo0$_maxSpecificity;\n          if (complex._complex0$_maxSpecificity == null)\n            complex._complex0$_computeSpecificity$0();\n          t3 = complex._complex0$_maxSpecificity;\n          _this._pseudo0$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));\n        }\n      } else {\n        _this._pseudo0$_minSpecificity = H._asIntS(Math.pow(M.SimpleSelector0.prototype.get$minSpecificity.call(_this), 3));\n        _i = _this._pseudo0$_maxSpecificity = 0;\n        for (t1 = t1.components, t2 = t1.length; _i < t2; ++_i) {\n          complex = t1[_i];\n          t3 = _this._pseudo0$_minSpecificity;\n          if (complex._complex0$_minSpecificity == null)\n            complex._complex0$_computeSpecificity$0();\n          t4 = complex._complex0$_minSpecificity;\n          _this._pseudo0$_minSpecificity = Math.min(H.checkNum(t3), H.checkNum(t4));\n          t4 = _this._pseudo0$_maxSpecificity;\n          if (complex._complex0$_maxSpecificity == null)\n            complex._complex0$_computeSpecificity$0();\n          t3 = complex._complex0$_maxSpecificity;\n          _this._pseudo0$_maxSpecificity = Math.max(H.checkNum(t4), H.checkNum(t3));\n        }\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitPseudoSelector$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    $eq: function(_, other) {\n      var _this = this;\n      if (other == null)\n        return false;\n      return other instanceof D.PseudoSelector0 && other.name === _this.name && other.isClass === _this.isClass && other.argument == _this.argument && J.$eq$(other.selector, _this.selector);\n    },\n    get$hashCode: function(_) {\n      var _this = this;\n      return (C.JSString_methods.get$hashCode(_this.name) ^ C.JSBool_methods.get$hashCode(!_this.isClass) ^ J.get$hashCode$(_this.argument) ^ J.get$hashCode$(_this.selector)) >>> 0;\n    }\n  };\n  U.PublicMemberMapView0.prototype = {\n    get$keys: function(_) {\n      var t1 = this._public_member_map_view$_inner;\n      return J.where$1$ax(t1.get$keys(t1), B.utils0__isPublic$closure());\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && B.isPublic0(key) && this._public_member_map_view$_inner.containsKey$1(key);\n    },\n    $index: function(_, key) {\n      if (typeof key == \"string\" && B.isPublic0(key))\n        return this._public_member_map_view$_inner.$index(0, key);\n      return null;\n    }\n  };\n  D.QualifiedName0.prototype = {\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.QualifiedName0 && other.name === this.name && other.namespace == this.namespace;\n    },\n    get$hashCode: function(_) {\n      return C.JSString_methods.get$hashCode(this.name) ^ J.get$hashCode$(this.namespace);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace,\n        t2 = this.name;\n      return t1 == null ? t2 : t1 + \"|\" + t2;\n    }\n  };\n  Z.RenderContext.prototype = {};\n  L.RenderContextOptions.prototype = {};\n  R.RenderOptions.prototype = {};\n  U.RenderResult.prototype = {};\n  U.RenderResultStats.prototype = {};\n  E.ImporterResult0.prototype = {\n    get$sourceMapUrl: function() {\n      return this._result$_sourceMapUrl;\n    }\n  };\n  B.ReturnRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitReturnRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@return \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  U.main_printError.prototype = {\n    call$2: function(error, stackTrace) {\n      var t1 = this._box_0;\n      if (t1.printedError)\n        $.$get$stderr().writeln$0();\n      t1.printedError = true;\n      t1 = $.$get$stderr();\n      t1.writeln$1(error);\n      if (stackTrace != null) {\n        t1.writeln$0();\n        t1.writeln$1(C.JSString_methods.trimRight$0(Y.Trace_Trace$from(stackTrace).get$terse().toString$0(0)));\n      }\n    },\n    $signature: 419\n  };\n  U.main_closure.prototype = {\n    call$0: function() {\n      var t1, exception;\n      try {\n        t1 = this.destination;\n        if (t1 != null && !this._box_0.options.get$emitErrorCss())\n          B.deleteFile(t1);\n      } catch (exception) {\n        if (!(H.unwrapException(exception) instanceof B.FileSystemException))\n          throw exception;\n      }\n    },\n    $signature: 0\n  };\n  U.SassParser0.prototype = {\n    get$currentIndentation: function() {\n      return this._sass0$_currentIndentation;\n    },\n    get$indented: function() {\n      return true;\n    },\n    styleRuleSelector$0: function() {\n      var t4,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer0(t3, []);\n      do {\n        buffer.addInterpolation$1(this.almostAnyValue$1$omitComments(true));\n        t4 = t3._contents += H.Primitives_stringFromCharCode(10);\n      } while (C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), \",\") && this.scanCharIf$1(T.character0__isNewline$closure()));\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    expectStatementSeparator$1: function($name) {\n      var _this = this;\n      if (!_this.atEndOfStatement$0())\n        _this._sass0$_expectNewline$0();\n      if (_this._sass0$_peekIndentation$0() <= _this._sass0$_currentIndentation)\n        return;\n      _this.scanner.error$2$position(0, \"Nothing may be indented \" + ($name == null ? \"here\" : \"beneath a \" + $name) + \".\", _this._sass0$_nextIndentationEnd.position);\n    },\n    expectStatementSeparator$0: function() {\n      return this.expectStatementSeparator$1(null);\n    },\n    atEndOfStatement$0: function() {\n      var next = this.scanner.peekChar$0();\n      return next == null || T.isNewline0(next);\n    },\n    lookingAtChildren$0: function() {\n      return this.atEndOfStatement$0() && this._sass0$_peekIndentation$0() > this._sass0$_currentIndentation;\n    },\n    importArgument$0: function() {\n      var url, span, innerError, start, next, t2, exception, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 117:\n        case 85:\n          start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n          if (_this.scanIdentifier$1(\"url\"))\n            if (t1.scanChar$1(40)) {\n              t1.set$state(start);\n              return _this.super$StylesheetParser$importArgument0();\n            } else\n              t1.set$state(start);\n          break;\n        case 39:\n        case 34:\n          return _this.super$StylesheetParser$importArgument0();\n      }\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      next = t1.peekChar$0();\n      while (true) {\n        if (next != null)\n          if (next !== 44)\n            if (next !== 59)\n              t2 = !(next === 10 || next === 13 || next === 12);\n            else\n              t2 = false;\n          else\n            t2 = false;\n        else\n          t2 = false;\n        if (!t2)\n          break;\n        t1.readChar$0();\n        next = t1.peekChar$0();\n      }\n      url = t1.substring$1(0, start.position);\n      span = t1.spanFrom$1(start);\n      if (_this.isPlainImportUrl$1(url))\n        return new Q.StaticImport0(X.Interpolation$0(H.setRuntimeTypeInfo([N.serializeValue(new D.SassString0(url, true), true, true)], type$.JSArray_legacy_Object), span), null, null, span);\n      else\n        try {\n          t1 = _this.parseImportUrl$1(url);\n          return new B.DynamicImport0(t1, span);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (type$.legacy_FormatException._is(t1)) {\n            innerError = t1;\n            _this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), span);\n          } else\n            throw exception;\n        }\n    },\n    scanElse$1: function(ifIndentation) {\n      var t1, t2, startIndentation, startNextIndentation, startNextIndentationEnd, _this = this;\n      if (_this._sass0$_peekIndentation$0() != ifIndentation)\n        return false;\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      startIndentation = _this._sass0$_currentIndentation;\n      startNextIndentation = _this._sass0$_nextIndentation;\n      startNextIndentationEnd = _this._sass0$_nextIndentationEnd;\n      _this._sass0$_readIndentation$0();\n      if (t1.scanChar$1(64) && _this.scanIdentifier$1(\"else\"))\n        return true;\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      _this._sass0$_currentIndentation = startIndentation;\n      _this._sass0$_nextIndentation = startNextIndentation;\n      _this._sass0$_nextIndentationEnd = startNextIndentationEnd;\n      return false;\n    },\n    children$1: function(_, child) {\n      var children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);\n      this._sass0$_whileIndentedLower$1(new U.SassParser_children_closure0(this, children, child));\n      return children;\n    },\n    statements$1: function(statement) {\n      var statements, t2, child,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first === 9 || first === 32)\n        t1.error$3$length$position(0, string$.Indent, t1._string_scanner$_position, 0);\n      statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);\n      for (t2 = t1.string.length; t1._string_scanner$_position !== t2;) {\n        child = this._sass0$_child$1(statement);\n        if (child != null)\n          statements.push(child);\n        this._sass0$_readIndentation$0();\n      }\n      return statements;\n    },\n    _sass0$_child$1: function(child) {\n      var _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 13:\n        case 10:\n        case 12:\n          return null;\n        case 36:\n          return _this.variableDeclarationWithoutNamespace$0();\n        case 47:\n          switch (t1.peekChar$1(1)) {\n            case 47:\n              return _this._sass0$_silentComment$0();\n            case 42:\n              return _this._sass0$_loudComment$0();\n            default:\n              return child.call$0();\n          }\n        default:\n          return child.call$0();\n      }\n    },\n    _sass0$_silentComment$0: function() {\n      var buffer, parentIndentation, t3, commentPrefix, i, t4, i0, t5, t6, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"//\");\n      buffer = new P.StringBuffer(\"\");\n      parentIndentation = _this._sass0$_currentIndentation;\n      t3 = t1.string;\n      $label0$0:\n        do {\n          commentPrefix = t1.scanChar$1(47) ? \"///\" : \"//\";\n          for (i = commentPrefix.length; true;) {\n            t4 = buffer._contents += commentPrefix;\n            for (i0 = i; i0 < _this._sass0$_currentIndentation - parentIndentation; ++i0) {\n              t4 += H.Primitives_stringFromCharCode(32);\n              buffer._contents = t4;\n            }\n            t5 = t3.length;\n            while (true) {\n              if (t1._string_scanner$_position !== t5) {\n                t6 = t1.peekChar$0();\n                t6 = !(t6 === 10 || t6 === 13 || t6 === 12);\n              } else\n                t6 = false;\n              if (!t6)\n                break;\n              t4 += H.Primitives_stringFromCharCode(t1.readChar$0());\n              buffer._contents = t4;\n            }\n            buffer._contents = t4 + \"\\n\";\n            if (_this._sass0$_peekIndentation$0() < parentIndentation)\n              break $label0$0;\n            if (_this._sass0$_peekIndentation$0() === parentIndentation) {\n              if (t1.peekChar$1(1 + parentIndentation) === 47 && t1.peekChar$1(2 + parentIndentation) === 47)\n                _this._sass0$_readIndentation$0();\n              break;\n            }\n            _this._sass0$_readIndentation$0();\n          }\n        } while (t1.scan$1(\"//\"));\n      t3 = buffer._contents;\n      return _this.lastSilentComment = new B.SilentComment0(t3.charCodeAt(0) == 0 ? t3 : t3, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _sass0$_loudComment$0: function() {\n      var t3, t4, buffer, parentIndentation, t5, first, beginningOfComment, t6, end, i, t7, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"/*\");\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      t3._contents = \"/*\";\n      parentIndentation = _this._sass0$_currentIndentation;\n      for (t5 = t1.string, first = true; true; first = false) {\n        if (first) {\n          beginningOfComment = t1._string_scanner$_position;\n          _this.spaces$0();\n          t6 = t1.peekChar$0();\n          if (t6 === 10 || t6 === 13 || t6 === 12) {\n            _this._sass0$_readIndentation$0();\n            t3._contents += H.Primitives_stringFromCharCode(32);\n          } else {\n            end = t1._string_scanner$_position;\n            t3._contents += J.substring$2$s(t5, beginningOfComment, end);\n          }\n        } else {\n          t6 = t3._contents += \"\\n\";\n          t3._contents = t6 + \" * \";\n        }\n        for (i = 3; i < _this._sass0$_currentIndentation - parentIndentation; ++i)\n          t3._contents += H.Primitives_stringFromCharCode(32);\n        $label0$1:\n          for (t6 = t5.length; t1._string_scanner$_position !== t6;)\n            switch (t1.peekChar$0()) {\n              case 10:\n              case 13:\n              case 12:\n                break $label0$1;\n              case 35:\n                if (t1.peekChar$1(1) === 123) {\n                  t7 = _this.singleInterpolation$0();\n                  buffer._interpolation_buffer0$_flushText$0();\n                  t4.push(t7);\n                } else\n                  t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n              default:\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n            }\n        if (_this._sass0$_peekIndentation$0() <= parentIndentation)\n          break;\n        for (; _this._sass0$_lookingAtDoubleNewline$0();) {\n          _this._sass0$_expectNewline$0();\n          t6 = t3._contents += \"\\n\";\n          t3._contents = t6 + \" *\";\n        }\n        _this._sass0$_readIndentation$0();\n      }\n      t4 = t3._contents;\n      if (!C.JSString_methods.endsWith$1(C.JSString_methods.trimRight$0(t4.charCodeAt(0) == 0 ? t4 : t4), \"*/\"))\n        t3._contents += \" */\";\n      return new L.LoudComment0(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))));\n    },\n    whitespaceWithoutComments$0: function() {\n      var t1, t2, next;\n      for (t1 = this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;) {\n        next = t1.peekChar$0();\n        if (next !== 9 && next !== 32)\n          break;\n        t1.readChar$0();\n      }\n    },\n    loudComment$0: function() {\n      var next,\n        t1 = this.scanner;\n      t1.expect$1(\"/*\");\n      for (; true;) {\n        next = t1.readChar$0();\n        if (next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"expected */.\");\n        if (next !== 42)\n          continue;\n        do\n          next = t1.readChar$0();\n        while (next === 42);\n        if (next === 47)\n          break;\n      }\n    },\n    _sass0$_expectNewline$0: function() {\n      var t1 = this.scanner;\n      switch (t1.peekChar$0()) {\n        case 59:\n          t1.error$1(0, string$.semico);\n          break;\n        case 13:\n          t1.readChar$0();\n          if (t1.peekChar$0() === 10)\n            t1.readChar$0();\n          return;\n        case 10:\n        case 12:\n          t1.readChar$0();\n          return;\n        default:\n          t1.error$1(0, \"expected newline.\");\n      }\n    },\n    _sass0$_lookingAtDoubleNewline$0: function() {\n      var nextChar,\n        t1 = this.scanner;\n      switch (t1.peekChar$0()) {\n        case 13:\n          nextChar = t1.peekChar$1(1);\n          if (nextChar === 10)\n            return T.isNewline0(t1.peekChar$1(2));\n          return nextChar === 13 || nextChar === 12;\n        case 10:\n        case 12:\n          return T.isNewline0(t1.peekChar$1(1));\n        default:\n          return false;\n      }\n    },\n    _sass0$_whileIndentedLower$1: function(body) {\n      var t1, t2, childIndentation, indentation, t3, t4, t5, _this = this,\n        parentIndentation = _this._sass0$_currentIndentation;\n      for (t1 = _this.scanner, t2 = t1._sourceFile, childIndentation = null; _this._sass0$_peekIndentation$0() > parentIndentation;) {\n        indentation = _this._sass0$_readIndentation$0();\n        if (childIndentation == null)\n          childIndentation = indentation;\n        if (childIndentation != indentation) {\n          t3 = \"Inconsistent indentation, expected \" + H.S(childIndentation) + \" spaces.\";\n          t4 = t1._string_scanner$_position;\n          t5 = t2.getColumn$1(t4);\n          t1.error$3$length$position(0, t3, t2.getColumn$1(t1._string_scanner$_position), t4 - t5);\n        }\n        body.call$0();\n      }\n    },\n    _sass0$_readIndentation$0: function() {\n      var _this = this;\n      if (_this._sass0$_nextIndentation == null)\n        _this._sass0$_peekIndentation$0();\n      _this._sass0$_currentIndentation = _this._sass0$_nextIndentation;\n      _this.scanner.set$state(_this._sass0$_nextIndentationEnd);\n      _this._sass0$_nextIndentationEnd = _this._sass0$_nextIndentation = null;\n      return _this._sass0$_currentIndentation;\n    },\n    _sass0$_peekIndentation$0: function() {\n      var t2, t3, start, containsTab, containsSpace, next, t4, _this = this,\n        t1 = _this._sass0$_nextIndentation;\n      if (t1 != null)\n        return t1;\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      t3 = t1.string.length;\n      if (t2 === t3) {\n        _this._sass0$_nextIndentation = 0;\n        _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t2);\n        return 0;\n      }\n      start = new S._SpanScannerState(t1, t2);\n      if (!_this.scanCharIf$1(T.character0__isNewline$closure()))\n        t1.error$2$position(0, \"Expected newline.\", t1._string_scanner$_position);\n      do {\n        _this._sass0$_nextIndentation = 0;\n        for (containsTab = false, containsSpace = false; true;) {\n          next = t1.peekChar$0();\n          if (next === 32)\n            containsSpace = true;\n          else {\n            if (next !== 9)\n              break;\n            containsTab = true;\n          }\n          _this._sass0$_nextIndentation = _this._sass0$_nextIndentation + 1;\n          t1.readChar$0();\n        }\n        t2 = t1._string_scanner$_position;\n        if (t2 === t3) {\n          _this._sass0$_nextIndentation = 0;\n          _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t2);\n          t1.set$state(start);\n          return 0;\n        }\n      } while (_this.scanCharIf$1(T.character0__isNewline$closure()));\n      if (containsTab) {\n        if (containsSpace) {\n          t2 = t1._string_scanner$_position;\n          t3 = t1._sourceFile;\n          t4 = t3.getColumn$1(t2);\n          t1.error$3$length$position(0, \"Tabs and spaces may not be mixed.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n        } else if (_this._sass0$_spaces === true) {\n          t2 = t1._string_scanner$_position;\n          t3 = t1._sourceFile;\n          t4 = t3.getColumn$1(t2);\n          t1.error$3$length$position(0, \"Expected spaces, was tabs.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n        }\n      } else if (containsSpace && _this._sass0$_spaces === false) {\n        t2 = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        t4 = t3.getColumn$1(t2);\n        t1.error$3$length$position(0, \"Expected tabs, was spaces.\", t3.getColumn$1(t1._string_scanner$_position), t2 - t4);\n      }\n      if (_this._sass0$_nextIndentation > 0)\n        if (_this._sass0$_spaces == null)\n          _this._sass0$_spaces = containsSpace;\n      _this._sass0$_nextIndentationEnd = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.set$state(start);\n      return _this._sass0$_nextIndentation;\n    }\n  };\n  U.SassParser_children_closure0.prototype = {\n    call$0: function() {\n      this.children.push(this.$this._sass0$_child$1(this.child));\n    },\n    $signature: 0\n  };\n  R._Exports.prototype = {};\n  R._wrapMain_closure.prototype = {\n    call$1: function(_) {\n      return R._translateReturnValue(this.main.call$0());\n    },\n    $signature: 203\n  };\n  R._wrapMain_closure0.prototype = {\n    call$1: function(args) {\n      return R._translateReturnValue(this.main.call$1(P.List_List$from(type$.legacy_List_legacy_Object._as(args), true, type$.legacy_String)));\n    },\n    $signature: 203\n  };\n  L.ScssParser0.prototype = {\n    get$indented: function() {\n      return false;\n    },\n    get$currentIndentation: function() {\n      return null;\n    },\n    styleRuleSelector$0: function() {\n      return this.almostAnyValue$0();\n    },\n    expectStatementSeparator$1: function($name) {\n      var t1, next;\n      this.whitespaceWithoutComments$0();\n      t1 = this.scanner;\n      if (t1._string_scanner$_position === t1.string.length)\n        return;\n      next = t1.peekChar$0();\n      if (next === 59 || next === 125)\n        return;\n      t1.expectChar$1(59);\n    },\n    expectStatementSeparator$0: function() {\n      return this.expectStatementSeparator$1(null);\n    },\n    atEndOfStatement$0: function() {\n      var next = this.scanner.peekChar$0();\n      return next == null || next === 59 || next === 125 || next === 123;\n    },\n    lookingAtChildren$0: function() {\n      return this.scanner.peekChar$0() === 123;\n    },\n    scanElse$1: function(_) {\n      var t3, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      _this.whitespace$0();\n      t3 = t1._string_scanner$_position;\n      if (t1.scanChar$1(64)) {\n        if (_this.scanIdentifier$2$caseSensitive(\"else\", true))\n          return true;\n        if (_this.scanIdentifier$2$caseSensitive(\"elseif\", true)) {\n          _this.logger.warn$3$deprecation$span(0, string$.x40elsei, true, t1.spanFrom$1(new S._SpanScannerState(t1, t3)));\n          t1.set$position(t1._string_scanner$_position - 2);\n          return true;\n        }\n      }\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      return false;\n    },\n    children$1: function(_, child) {\n      var children, _this = this,\n        t1 = _this.scanner;\n      t1.expectChar$1(123);\n      _this.whitespaceWithoutComments$0();\n      children = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);\n      for (; true;)\n        switch (t1.peekChar$0()) {\n          case 36:\n            children.push(_this.variableDeclarationWithoutNamespace$0());\n            break;\n          case 47:\n            switch (t1.peekChar$1(1)) {\n              case 47:\n                children.push(_this._scss0$_silentComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              case 42:\n                children.push(_this._scss0$_loudComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              default:\n                children.push(child.call$0());\n                break;\n            }\n            break;\n          case 59:\n            t1.readChar$0();\n            _this.whitespaceWithoutComments$0();\n            break;\n          case 125:\n            t1.expectChar$1(125);\n            return children;\n          default:\n            children.push(child.call$0());\n            break;\n        }\n    },\n    statements$1: function(statement) {\n      var t1, t2, child, _this = this,\n        statements = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Statement_2);\n      _this.whitespaceWithoutComments$0();\n      for (t1 = _this.scanner, t2 = t1.string.length; t1._string_scanner$_position !== t2;)\n        switch (t1.peekChar$0()) {\n          case 36:\n            statements.push(_this.variableDeclarationWithoutNamespace$0());\n            break;\n          case 47:\n            switch (t1.peekChar$1(1)) {\n              case 47:\n                statements.push(_this._scss0$_silentComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              case 42:\n                statements.push(_this._scss0$_loudComment$0());\n                _this.whitespaceWithoutComments$0();\n                break;\n              default:\n                child = statement.call$0();\n                if (child != null)\n                  statements.push(child);\n                break;\n            }\n            break;\n          case 59:\n            t1.readChar$0();\n            _this.whitespaceWithoutComments$0();\n            break;\n          default:\n            child = statement.call$0();\n            if (child != null)\n              statements.push(child);\n            break;\n        }\n      return statements;\n    },\n    _scss0$_silentComment$0: function() {\n      var t2, t3, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expect$1(\"//\");\n      t2 = t1.string.length;\n      do {\n        while (true) {\n          if (t1._string_scanner$_position !== t2) {\n            t3 = t1.readChar$0();\n            t3 = !(t3 === 10 || t3 === 13 || t3 === 12);\n          } else\n            t3 = false;\n          if (!t3)\n            break;\n        }\n        if (t1._string_scanner$_position === t2)\n          break;\n        _this.whitespaceWithoutComments$0();\n      } while (t1.scan$1(\"//\"));\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Silent, t1.spanFrom$1(start));\n      return _this.lastSilentComment = new B.SilentComment0(t1.substring$1(0, start.position), t1.spanFrom$1(start));\n    },\n    _scss0$_loudComment$0: function() {\n      var t3, t4, buffer, t5, endPosition,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"/*\");\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      t3._contents = \"/*\";\n      for (; true;)\n        switch (t1.peekChar$0()) {\n          case 35:\n            if (t1.peekChar$1(1) === 123) {\n              t5 = this.singleInterpolation$0();\n              buffer._interpolation_buffer0$_flushText$0();\n              t4.push(t5);\n            } else\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            break;\n          case 42:\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            if (t1.peekChar$0() !== 47)\n              break;\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            endPosition = t1._string_scanner$_position;\n            t3 = t1._sourceFile;\n            t4 = new S._SpanScannerState(t1, t2).position;\n            t1 = new Y._FileSpan(t3, t4, endPosition);\n            t1._FileSpan$3(t3, t4, endPosition);\n            return new L.LoudComment0(buffer.interpolation$1(t1));\n          case 13:\n            t1.readChar$0();\n            if (t1.peekChar$0() !== 10)\n              t3._contents += H.Primitives_stringFromCharCode(10);\n            break;\n          case 12:\n            t1.readChar$0();\n            t3._contents += H.Primitives_stringFromCharCode(10);\n            break;\n          default:\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            break;\n        }\n    }\n  };\n  T.Selector0.prototype = {\n    get$isInvisible: function() {\n      return false;\n    },\n    toString$0: function(_) {\n      var visitor = N._SerializeVisitor$(null, true, null, true, false, null, true);\n      this.accept$1(visitor);\n      return visitor._buffer.toString$0(0);\n    }\n  };\n  T.SelectorExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSelectorExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"&\";\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  T.closure128.prototype = {\n    call$1: function($arguments) {\n      var t1 = {},\n        selectors = J.$index$asx($arguments, 0).get$asList();\n      if (selectors.length === 0)\n        throw H.wrapException(E.SassScriptException$0(string$.x24selec));\n      t1.first = true;\n      return new H.MappedListIterable(selectors, new T._closure16(t1), H._arrayInstanceType(selectors)._eval$1(\"MappedListIterable<1,SelectorList0*>\")).reduce$1(0, new T._closure17()).get$asSassList();\n    },\n    $signature: 27\n  };\n  T._closure16.prototype = {\n    call$1: function(selector) {\n      var t1 = this._box_0,\n        result = selector.assertSelector$1$allowParent(!t1.first);\n      t1.first = false;\n      return result;\n    },\n    $signature: 204\n  };\n  T._closure17.prototype = {\n    call$2: function($parent, child) {\n      return child.resolveParentSelectors$1($parent);\n    },\n    $signature: 205\n  };\n  T.closure127.prototype = {\n    call$1: function($arguments) {\n      var selectors = J.$index$asx($arguments, 0).get$asList();\n      if (selectors.length === 0)\n        throw H.wrapException(E.SassScriptException$0(string$.x24selec));\n      return new H.MappedListIterable(selectors, new T._closure14(), H._arrayInstanceType(selectors)._eval$1(\"MappedListIterable<1,SelectorList0*>\")).reduce$1(0, new T._closure15()).get$asSassList();\n    },\n    $signature: 27\n  };\n  T._closure14.prototype = {\n    call$1: function(selector) {\n      return selector.assertSelector$0();\n    },\n    $signature: 204\n  };\n  T._closure15.prototype = {\n    call$2: function($parent, child) {\n      var t1 = child.components;\n      return D.SelectorList$0(new H.MappedListIterable(t1, new T.__closure0($parent), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,ComplexSelector0*>\"))).resolveParentSelectors$1($parent);\n    },\n    $signature: 205\n  };\n  T.__closure0.prototype = {\n    call$1: function(complex) {\n      var newCompound, t2, cur,\n        t1 = complex.components,\n        compound = C.JSArray_methods.get$first(t1);\n      if (compound instanceof X.CompoundSelector0) {\n        newCompound = T._prependParent0(compound);\n        if (newCompound == null)\n          throw H.wrapException(E.SassScriptException$0(\"Can't append \" + complex.toString$0(0) + \" to \" + H.S(this.parent) + \".\"));\n        t2 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);\n        t2.push(newCompound);\n        for (t1 = H.SubListIterable$(t1, 1, null, H._arrayInstanceType(t1)._precomputed1), t1 = new H.ListIterator(t1, t1.get$length(t1)); t1.moveNext$0();) {\n          cur = t1.__internal$_current;\n          t2.push(cur);\n        }\n        return S.ComplexSelector$0(t2, false);\n      } else\n        throw H.wrapException(E.SassScriptException$0(\"Can't append \" + complex.toString$0(0) + \" to \" + H.S(this.parent) + \".\"));\n    },\n    $signature: 88\n  };\n  T.closure126.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector = t1.$index($arguments, 0).assertSelector$1$name(\"selector\"),\n        target = t1.$index($arguments, 1).assertSelector$1$name(\"extendee\");\n      return F.Extender__extendOrReplace0(selector, t1.$index($arguments, 2).assertSelector$1$name(\"extender\"), target, C.ExtendMode_allTargets0).get$asSassList();\n    },\n    $signature: 27\n  };\n  T.closure125.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector = t1.$index($arguments, 0).assertSelector$1$name(\"selector\"),\n        target = t1.$index($arguments, 1).assertSelector$1$name(\"original\");\n      return F.Extender__extendOrReplace0(selector, t1.$index($arguments, 2).assertSelector$1$name(\"replacement\"), target, C.ExtendMode_replace0).get$asSassList();\n    },\n    $signature: 27\n  };\n  T.closure124.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        result = t1.$index($arguments, 0).assertSelector$1$name(\"selector1\").unify$1(t1.$index($arguments, 1).assertSelector$1$name(\"selector2\"));\n      return result == null ? C.C_SassNull : result.get$asSassList();\n    },\n    $signature: 3\n  };\n  T.closure131.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        selector1 = t1.$index($arguments, 0).assertSelector$1$name(\"super\"),\n        selector2 = t1.$index($arguments, 1).assertSelector$1$name(\"sub\");\n      return Y.listIsSuperselector0(selector1.components, selector2.components) ? C.SassBoolean_true : C.SassBoolean_false;\n    },\n    $signature: 18\n  };\n  T.closure130.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.$index$asx($arguments, 0).assertCompoundSelector$1$name(\"selector\").components;\n      return D.SassList$0(new H.MappedListIterable(t1, new T._closure18(), H._arrayInstanceType(t1)._eval$1(\"MappedListIterable<1,Value0*>\")), C.ListSeparator_comma0, false);\n    },\n    $signature: 27\n  };\n  T._closure18.prototype = {\n    call$1: function(simple) {\n      return new D.SassString0(J.toString$0$(simple), false);\n    },\n    $signature: 423\n  };\n  T.closure129.prototype = {\n    call$1: function($arguments) {\n      return J.$index$asx($arguments, 0).assertSelector$1$name(\"selector\").get$asSassList();\n    },\n    $signature: 27\n  };\n  T.SelectorParser0.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new T.SelectorParser_parse_closure0(this));\n    },\n    parseCompoundSelector$0: function() {\n      return this.wrapSpanFormatException$1(new T.SelectorParser_parseCompoundSelector_closure0(this));\n    },\n    _selector$_selectorList$0: function() {\n      var t3, t4, lineBreak, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._sourceFile,\n        previousLine = t2.getLine$1(t1._string_scanner$_position),\n        components = H.setRuntimeTypeInfo([_this._selector$_complexSelector$0()], type$.JSArray_legacy_ComplexSelector_2);\n      _this.whitespace$0();\n      for (t3 = t1.string; t1.scanChar$1(44);) {\n        _this.whitespace$0();\n        if (t1.peekChar$0() === 44)\n          continue;\n        t4 = t1._string_scanner$_position;\n        if (t4 === t3.length)\n          break;\n        lineBreak = t2.getLine$1(t4) != previousLine;\n        if (lineBreak)\n          previousLine = t2.getLine$1(t1._string_scanner$_position);\n        components.push(_this._selector$_complexSelector$1$lineBreak(lineBreak));\n      }\n      return D.SelectorList$0(components);\n    },\n    _selector$_complexSelector$1$lineBreak: function(lineBreak) {\n      var t1, next, _this = this,\n        _s58_ = string$.x22x26__ma,\n        components = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ComplexSelectorComponent_2);\n      $label0$1:\n        for (t1 = _this.scanner; true;) {\n          _this.whitespace$0();\n          next = t1.peekChar$0();\n          switch (next) {\n            case 43:\n              t1.readChar$0();\n              components.push(C.Combinator_uzg0);\n              break;\n            case 62:\n              t1.readChar$0();\n              components.push(C.Combinator_sgq0);\n              break;\n            case 126:\n              t1.readChar$0();\n              components.push(C.Combinator_CzM0);\n              break;\n            case 91:\n            case 46:\n            case 35:\n            case 37:\n            case 58:\n            case 38:\n            case 42:\n            case 124:\n              components.push(_this._selector$_compoundSelector$0());\n              if (t1.peekChar$0() === 38)\n                t1.error$1(0, _s58_);\n              break;\n            default:\n              if (next == null || !_this.lookingAtIdentifier$0())\n                break $label0$1;\n              components.push(_this._selector$_compoundSelector$0());\n              if (t1.peekChar$0() === 38)\n                t1.error$1(0, _s58_);\n              break;\n          }\n        }\n      if (components.length === 0)\n        t1.error$1(0, \"expected selector.\");\n      return S.ComplexSelector$0(components, lineBreak);\n    },\n    _selector$_complexSelector$0: function() {\n      return this._selector$_complexSelector$1$lineBreak(false);\n    },\n    _selector$_compoundSelector$0: function() {\n      var t2,\n        components = H.setRuntimeTypeInfo([this._selector$_simpleSelector$0()], type$.JSArray_legacy_SimpleSelector_2),\n        t1 = this.scanner;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 === 42 || t2 === 91 || t2 === 46 || t2 === 35 || t2 === 37 || t2 === 58))\n          break;\n        components.push(this._selector$_simpleSelector$1$allowParent(false));\n      }\n      return X.CompoundSelector$0(components);\n    },\n    _selector$_simpleSelector$1$allowParent: function(allowParent) {\n      var $name, text, t2, suffix, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (allowParent == null)\n        allowParent = _this._selector$_allowParent;\n      switch (t1.peekChar$0()) {\n        case 91:\n          return _this._selector$_attributeSelector$0();\n        case 46:\n          t1.expectChar$1(46);\n          return new X.ClassSelector0(_this.identifier$0());\n        case 35:\n          t1.expectChar$1(35);\n          return new N.IDSelector0(_this.identifier$0());\n        case 37:\n          t1.expectChar$1(37);\n          $name = _this.identifier$0();\n          if (!_this._selector$_allowPlaceholder)\n            _this.error$2(0, string$.Placeh, t1.spanFrom$1(start));\n          return new N.PlaceholderSelector0($name);\n        case 58:\n          return _this._selector$_pseudoSelector$0();\n        case 38:\n          t1.expectChar$1(38);\n          if (_this.lookingAtIdentifierBody$0()) {\n            text = new P.StringBuffer(\"\");\n            _this._parser$_identifierBody$1(text);\n            if (text._contents.length === 0)\n              t1.error$1(0, \"Expected identifier body.\");\n            t2 = text._contents;\n            suffix = t2.charCodeAt(0) == 0 ? t2 : t2;\n          } else\n            suffix = null;\n          if (!allowParent)\n            _this.error$2(0, \"Parent selectors aren't allowed here.\", t1.spanFrom$1(start));\n          return new M.ParentSelector0(suffix);\n        default:\n          return _this._selector$_typeOrUniversalSelector$0();\n      }\n    },\n    _selector$_simpleSelector$0: function() {\n      return this._selector$_simpleSelector$1$allowParent(null);\n    },\n    _selector$_attributeSelector$0: function() {\n      var $name, operator, next, value, modifier, _this = this, _null = null,\n        t1 = _this.scanner;\n      t1.expectChar$1(91);\n      _this.whitespace$0();\n      $name = _this._selector$_attributeName$0();\n      _this.whitespace$0();\n      if (t1.scanChar$1(93))\n        return new N.AttributeSelector0($name, _null, _null, _null);\n      operator = _this._selector$_attributeOperator$0();\n      _this.whitespace$0();\n      next = t1.peekChar$0();\n      value = next === 39 || next === 34 ? _this.string$0() : _this.identifier$0();\n      _this.whitespace$0();\n      modifier = T.isAlphabetic1(t1.peekChar$0()) ? H.Primitives_stringFromCharCode(t1.readChar$0()) : _null;\n      t1.expectChar$1(93);\n      return new N.AttributeSelector0($name, operator, value, modifier);\n    },\n    _selector$_attributeName$0: function() {\n      var nameOrNamespace, _this = this,\n        t1 = _this.scanner;\n      if (t1.scanChar$1(42)) {\n        t1.expectChar$1(124);\n        return new D.QualifiedName0(_this.identifier$0(), \"*\");\n      }\n      nameOrNamespace = _this.identifier$0();\n      if (t1.peekChar$0() !== 124 || t1.peekChar$1(1) === 61)\n        return new D.QualifiedName0(nameOrNamespace, null);\n      t1.readChar$0();\n      return new D.QualifiedName0(_this.identifier$0(), nameOrNamespace);\n    },\n    _selector$_attributeOperator$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      switch (t1.readChar$0()) {\n        case 61:\n          return C.AttributeOperator_sEs0;\n        case 126:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_fz10;\n        case 124:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_AuK0;\n        case 94:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_4L50;\n        case 36:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_mOX0;\n        case 42:\n          t1.expectChar$1(61);\n          return C.AttributeOperator_gqZ0;\n        default:\n          t1.error$2$position(0, 'Expected \"]\".', t2);\n      }\n    },\n    _selector$_pseudoSelector$0: function() {\n      var element, $name, unvendored, selector, argument, t2, _this = this, _null = null,\n        t1 = _this.scanner;\n      t1.expectChar$1(58);\n      element = t1.scanChar$1(58);\n      $name = _this.identifier$0();\n      if (!t1.scanChar$1(40))\n        return D.PseudoSelector$0($name, _null, element, _null);\n      _this.whitespace$0();\n      unvendored = B.unvendor0($name);\n      if (element)\n        if ($._selectorPseudoElements0.contains$1(0, unvendored)) {\n          selector = _this._selector$_selectorList$0();\n          argument = _null;\n        } else {\n          argument = _this.declarationValue$1$allowEmpty(true);\n          selector = _null;\n        }\n      else if ($._selectorPseudoClasses0.contains$1(0, unvendored)) {\n        selector = _this._selector$_selectorList$0();\n        argument = _null;\n      } else if (unvendored === \"nth-child\" || unvendored === \"nth-last-child\") {\n        argument = _this._selector$_aNPlusB$0();\n        _this.whitespace$0();\n        t2 = t1.peekChar$1(-1);\n        if ((t2 === 32 || t2 === 9 || T.isNewline0(t2)) && t1.peekChar$0() !== 41) {\n          _this.expectIdentifier$1(\"of\");\n          argument += \" of\";\n          _this.whitespace$0();\n          selector = _this._selector$_selectorList$0();\n        } else\n          selector = _null;\n      } else {\n        argument = C.JSString_methods.trimRight$0(_this.declarationValue$1$allowEmpty(true));\n        selector = _null;\n      }\n      t1.expectChar$1(41);\n      return D.PseudoSelector$0($name, argument, element, selector);\n    },\n    _selector$_aNPlusB$0: function() {\n      var t2, first, t3, next, last, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 101:\n        case 69:\n          _this.expectIdentifier$1(\"even\");\n          return \"even\";\n        case 111:\n        case 79:\n          _this.expectIdentifier$1(\"odd\");\n          return \"odd\";\n        case 43:\n        case 45:\n          t2 = H.Primitives_stringFromCharCode(t1.readChar$0());\n          break;\n        default:\n          t2 = \"\";\n      }\n      first = t1.peekChar$0();\n      if (first != null && T.isDigit0(first)) {\n        while (true) {\n          t3 = t1.peekChar$0();\n          if (!(t3 != null && t3 >= 48 && t3 <= 57))\n            break;\n          t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n        }\n        _this.whitespace$0();\n        if (!_this.scanIdentChar$1(110))\n          return t2.charCodeAt(0) == 0 ? t2 : t2;\n      } else\n        _this.expectIdentChar$1(110);\n      t2 += H.Primitives_stringFromCharCode(110);\n      _this.whitespace$0();\n      next = t1.peekChar$0();\n      if (next !== 43 && next !== 45)\n        return t2.charCodeAt(0) == 0 ? t2 : t2;\n      t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      _this.whitespace$0();\n      last = t1.peekChar$0();\n      if (last == null || !T.isDigit0(last))\n        t1.error$1(0, \"Expected a number.\");\n      while (true) {\n        t3 = t1.peekChar$0();\n        if (!(t3 != null && t3 >= 48 && t3 <= 57))\n          break;\n        t2 += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      return t2.charCodeAt(0) == 0 ? t2 : t2;\n    },\n    _selector$_typeOrUniversalSelector$0: function() {\n      var nameOrNamespace, _this = this,\n        t1 = _this.scanner,\n        first = t1.peekChar$0();\n      if (first === 42) {\n        t1.readChar$0();\n        if (!t1.scanChar$1(124))\n          return new N.UniversalSelector0(null);\n        if (t1.scanChar$1(42))\n          return new N.UniversalSelector0(\"*\");\n        else\n          return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), \"*\"));\n      } else if (first === 124) {\n        t1.readChar$0();\n        if (t1.scanChar$1(42))\n          return new N.UniversalSelector0(\"\");\n        else\n          return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), \"\"));\n      }\n      nameOrNamespace = _this.identifier$0();\n      if (!t1.scanChar$1(124))\n        return new F.TypeSelector0(new D.QualifiedName0(nameOrNamespace, null));\n      else if (t1.scanChar$1(42))\n        return new N.UniversalSelector0(nameOrNamespace);\n      else\n        return new F.TypeSelector0(new D.QualifiedName0(_this.identifier$0(), nameOrNamespace));\n    }\n  };\n  T.SelectorParser_parse_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        selector = t1._selector$_selectorList$0();\n      t1 = t1.scanner;\n      if (t1._string_scanner$_position !== t1.string.length)\n        t1.error$1(0, \"expected selector.\");\n      return selector;\n    },\n    $signature: 43\n  };\n  T.SelectorParser_parseCompoundSelector_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        compound = t1._selector$_compoundSelector$0();\n      t1 = t1.scanner;\n      if (t1._string_scanner$_position !== t1.string.length)\n        t1.error$1(0, \"expected selector.\");\n      return compound;\n    },\n    $signature: 424\n  };\n  N.serialize_closure0.prototype = {\n    call$1: function(codeUnit) {\n      return codeUnit > 127;\n    },\n    $signature: 24\n  };\n  N._SerializeVisitor.prototype = {\n    visitCssStylesheet$1: function(node) {\n      var t1, t2, t3, t4, t5, previous, i, child, _this = this;\n      for (t1 = _this._serialize0$_style !== C.OutputStyle_compressed0, t2 = type$.legacy_CssComment_2, t3 = type$.legacy_CssParentNode_2, t4 = _this._buffer, t5 = _this._lineFeed.text, previous = null, i = 0; i < J.get$length$asx(node.get$children(node)); ++i) {\n        child = J.$index$asx(node.get$children(node), i);\n        if (_this._serialize0$_isInvisible$1(child))\n          continue;\n        if (previous != null) {\n          if (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous))\n            t4.writeCharCode$1(59);\n          if (t1)\n            t4.write$1(0, t5);\n          if (previous.get$isGroupEnd())\n            if (t1)\n              t4.write$1(0, t5);\n        }\n        child.accept$1(_this);\n        previous = child;\n      }\n      if (previous != null)\n        t1 = (t3._is(previous) ? previous.get$isChildless() : !t2._is(previous)) && t1;\n      else\n        t1 = false;\n      if (t1)\n        t4.writeCharCode$1(59);\n    },\n    visitCssComment$1: function(node) {\n      this._buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssComment_closure0(this, node));\n    },\n    visitCssAtRule$1: function(node) {\n      var t1, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = _this._buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssAtRule_closure0(_this, node));\n      if (!node.isChildless) {\n        if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n          t1.writeCharCode$1(32);\n        _this._serialize0$_visitChildren$1(node.children);\n      }\n    },\n    visitCssMediaRule$1: function(node) {\n      var t1, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = _this._buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssMediaRule_closure0(_this, node));\n      if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n        t1.writeCharCode$1(32);\n      _this._serialize0$_visitChildren$1(node.children);\n    },\n    visitCssImport$1: function(node) {\n      this._serialize0$_writeIndentation$0();\n      this._buffer.forSpan$2(node.span, new N._SerializeVisitor_visitCssImport_closure0(this, node));\n    },\n    _serialize0$_writeImportUrl$1: function(url) {\n      var urlContents, maybeQuote, _this = this;\n      if (_this._serialize0$_style !== C.OutputStyle_compressed0 || J._codeUnitAt$1$s(url, 0) !== 117) {\n        _this._buffer.write$1(0, url);\n        return;\n      }\n      urlContents = J.substring$2$s(url, 4, url.length - 1);\n      maybeQuote = C.JSString_methods._codeUnitAt$1(urlContents, 0);\n      if (maybeQuote === 39 || maybeQuote === 34)\n        _this._buffer.write$1(0, urlContents);\n      else\n        _this._serialize0$_visitQuotedString$1(urlContents);\n    },\n    visitCssKeyframeBlock$1: function(node) {\n      var t1, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = _this._buffer;\n      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssKeyframeBlock_closure0(_this, node));\n      if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n        t1.writeCharCode$1(32);\n      _this._serialize0$_visitChildren$1(node.children);\n    },\n    _serialize0$_visitMediaQuery$1: function(query) {\n      var t2, t3, _this = this,\n        t1 = query.modifier;\n      if (t1 != null) {\n        t2 = _this._buffer;\n        t2.write$1(0, t1);\n        t2.writeCharCode$1(32);\n      }\n      t1 = query.type;\n      if (t1 != null) {\n        t2 = _this._buffer;\n        t2.write$1(0, t1);\n        if (query.features.length !== 0)\n          t2.write$1(0, \" and \");\n      }\n      t1 = query.features;\n      t2 = _this._serialize0$_style === C.OutputStyle_compressed0 ? \"and \" : \" and \";\n      t3 = _this._buffer;\n      _this._serialize0$_writeBetween$3(t1, t2, t3.get$write(t3));\n    },\n    visitCssStyleRule$1: function(node) {\n      var t1, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = _this._buffer;\n      t1.forSpan$2(node.selector.span, new N._SerializeVisitor_visitCssStyleRule_closure0(_this, node));\n      if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n        t1.writeCharCode$1(32);\n      _this._serialize0$_visitChildren$1(node.children);\n    },\n    visitCssSupportsRule$1: function(node) {\n      var t1, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = _this._buffer;\n      t1.forSpan$2(node.span, new N._SerializeVisitor_visitCssSupportsRule_closure0(_this, node));\n      if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n        t1.writeCharCode$1(32);\n      _this._serialize0$_visitChildren$1(node.children);\n    },\n    visitCssDeclaration$1: function(node) {\n      var error, error0, t1, t2, exception, _this = this;\n      _this._serialize0$_writeIndentation$0();\n      t1 = node.name;\n      _this._serialize0$_write$1(t1);\n      t2 = _this._buffer;\n      t2.writeCharCode$1(58);\n      if (J.startsWith$1$s(t1.get$value(t1), \"--\") && node.parsedAsCustomProperty)\n        t2.forSpan$2(node.value.span, new N._SerializeVisitor_visitCssDeclaration_closure1(_this, node));\n      else {\n        if (_this._serialize0$_style !== C.OutputStyle_compressed0)\n          t2.writeCharCode$1(32);\n        try {\n          t2.forSpan$2(node.valueSpanForMap, new N._SerializeVisitor_visitCssDeclaration_closure2(_this, node));\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (t1 instanceof E.MultiSpanSassScriptException0) {\n            error = t1;\n            throw H.wrapException(E.MultiSpanSassException$0(error.message, node.value.span, error.primaryLabel, error.secondarySpans));\n          } else if (t1 instanceof E.SassScriptException0) {\n            error0 = t1;\n            throw H.wrapException(E.SassException$0(error0.message, node.value.span));\n          } else\n            throw exception;\n        }\n      }\n    },\n    _serialize0$_writeFoldedValue$1: function(node) {\n      var t1, t2, next, t3,\n        scanner = X.StringScanner$(type$.legacy_SassString_2._as(node.value.value).text, null, null);\n      for (t1 = scanner.string.length, t2 = this._buffer; scanner._string_scanner$_position !== t1;) {\n        next = scanner.readChar$0();\n        if (next !== 10) {\n          t2.writeCharCode$1(next);\n          continue;\n        }\n        t2.writeCharCode$1(32);\n        while (true) {\n          t3 = scanner.peekChar$0();\n          if (!(t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12))\n            break;\n          scanner.readChar$0();\n        }\n      }\n    },\n    _serialize0$_writeReindentedValue$1: function(node) {\n      var _this = this,\n        t1 = node.value,\n        value = type$.legacy_SassString_2._as(t1.value).text,\n        minimumIndentation = _this._serialize0$_minimumIndentation$1(value);\n      if (minimumIndentation == null) {\n        _this._buffer.write$1(0, value);\n        return;\n      } else if (minimumIndentation === -1) {\n        t1 = _this._buffer;\n        t1.write$1(0, B.trimAsciiRight0(value, true));\n        t1.writeCharCode$1(32);\n        return;\n      }\n      if (t1.span != null) {\n        t1 = node.name.get$span();\n        t1 = Y.FileLocation$_(t1.file, t1._file$_start);\n        minimumIndentation = Math.min(minimumIndentation, t1.file.getColumn$1(t1.offset));\n      }\n      _this._serialize0$_writeWithIndent$2(value, minimumIndentation);\n    },\n    _serialize0$_minimumIndentation$1: function(text) {\n      var character, t2, min, next, min0,\n        scanner = Z.LineScanner$(text),\n        t1 = scanner.string.length;\n      while (true) {\n        if (scanner._string_scanner$_position !== t1) {\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          t2 = character !== 10;\n        } else\n          t2 = false;\n        if (!t2)\n          break;\n      }\n      if (scanner._string_scanner$_position === t1)\n        return scanner.peekChar$1(-1) === 10 ? -1 : null;\n      for (min = null; scanner._string_scanner$_position !== t1;) {\n        for (; scanner._string_scanner$_position !== t1;) {\n          next = scanner.peekChar$0();\n          if (next !== 32 && next !== 9)\n            break;\n          scanner._adjustLineAndColumn$1(scanner.super$StringScanner$readChar());\n        }\n        if (scanner._string_scanner$_position === t1 || scanner.scanChar$1(10))\n          continue;\n        min0 = scanner._line_scanner$_column;\n        min = min == null ? min0 : Math.min(min, min0);\n        while (true) {\n          if (scanner._string_scanner$_position !== t1) {\n            character = scanner.super$StringScanner$readChar();\n            scanner._adjustLineAndColumn$1(character);\n            t2 = character !== 10;\n          } else\n            t2 = false;\n          if (!t2)\n            break;\n        }\n      }\n      return min == null ? -1 : min;\n    },\n    _serialize0$_writeWithIndent$2: function(text, minimumIndentation) {\n      var t1, t2, t3, character, t4, lineStart, newlines, end,\n        scanner = Z.LineScanner$(text);\n      for (t1 = scanner.string, t2 = t1.length, t3 = this._buffer; scanner._string_scanner$_position !== t2;) {\n        character = scanner.super$StringScanner$readChar();\n        scanner._adjustLineAndColumn$1(character);\n        if (character === 10)\n          break;\n        t3.writeCharCode$1(character);\n      }\n      for (t4 = J.getInterceptor$s(t1); true;) {\n        lineStart = scanner._string_scanner$_position;\n        for (newlines = 1; true;) {\n          if (scanner._string_scanner$_position === t2) {\n            t3.writeCharCode$1(32);\n            return;\n          }\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          if (character === 32 || character === 9)\n            continue;\n          if (character !== 10)\n            break;\n          lineStart = scanner._string_scanner$_position;\n          ++newlines;\n        }\n        this._serialize0$_writeTimes$2(10, newlines);\n        this._serialize0$_writeIndentation$0();\n        end = scanner._string_scanner$_position;\n        t3.write$1(0, t4.substring$2(t1, lineStart + minimumIndentation, end));\n        for (; true;) {\n          if (scanner._string_scanner$_position === t2)\n            return;\n          character = scanner.super$StringScanner$readChar();\n          scanner._adjustLineAndColumn$1(character);\n          if (character === 10)\n            break;\n          t3.writeCharCode$1(character);\n        }\n      }\n    },\n    visitColor$1: function(value) {\n      var $name, hexLength, t2, t3, _this = this,\n        t1 = _this._serialize0$_style === C.OutputStyle_compressed0;\n      if (t1 && Math.abs(value.alpha - 1) < $.$get$epsilon0()) {\n        $name = $.$get$namesByColor0().$index(0, value);\n        hexLength = _this._serialize0$_canUseShortHex$1(value) ? 4 : 7;\n        if ($name != null && $name.length <= hexLength)\n          _this._buffer.write$1(0, $name);\n        else {\n          t1 = _this._buffer;\n          if (_this._serialize0$_canUseShortHex$1(value)) {\n            t1.writeCharCode$1(35);\n            t1.writeCharCode$1(T.hexCharFor0(value.get$red() & 15));\n            t1.writeCharCode$1(T.hexCharFor0(value.get$green() & 15));\n            t1.writeCharCode$1(T.hexCharFor0(value.get$blue() & 15));\n          } else {\n            t1.writeCharCode$1(35);\n            _this._serialize0$_writeHexComponent$1(value.get$red());\n            _this._serialize0$_writeHexComponent$1(value.get$green());\n            _this._serialize0$_writeHexComponent$1(value.get$blue());\n          }\n        }\n        return;\n      }\n      if (value.get$original() != null)\n        _this._buffer.write$1(0, value.get$original());\n      else {\n        t2 = $.$get$namesByColor0();\n        if (t2.containsKey$1(value) && !(Math.abs(value.alpha - 0) < $.$get$epsilon0()))\n          _this._buffer.write$1(0, t2.$index(0, value));\n        else {\n          t2 = value.alpha;\n          t3 = _this._buffer;\n          if (Math.abs(t2 - 1) < $.$get$epsilon0()) {\n            t3.writeCharCode$1(35);\n            _this._serialize0$_writeHexComponent$1(value.get$red());\n            _this._serialize0$_writeHexComponent$1(value.get$green());\n            _this._serialize0$_writeHexComponent$1(value.get$blue());\n          } else {\n            t3.write$1(0, \"rgba(\" + H.S(value.get$red()));\n            t3.write$1(0, t1 ? \",\" : \", \");\n            t3.write$1(0, value.get$green());\n            t3.write$1(0, t1 ? \",\" : \", \");\n            t3.write$1(0, value.get$blue());\n            t3.write$1(0, t1 ? \",\" : \", \");\n            _this._serialize0$_writeNumber$1(t2);\n            t3.writeCharCode$1(41);\n          }\n        }\n      }\n    },\n    _serialize0$_canUseShortHex$1: function(color) {\n      var t1 = color.get$red();\n      if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {\n        t1 = color.get$green();\n        if ((t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4)) {\n          t1 = color.get$blue();\n          t1 = (t1 & 15) === C.JSInt_methods._shrOtherPositive$1(t1, 4);\n        } else\n          t1 = false;\n      } else\n        t1 = false;\n      return t1;\n    },\n    _serialize0$_writeHexComponent$1: function(color) {\n      var t1 = this._buffer;\n      t1.writeCharCode$1(T.hexCharFor0(C.JSInt_methods._shrOtherPositive$1(color, 4)));\n      t1.writeCharCode$1(T.hexCharFor0(color & 15));\n    },\n    visitList$1: function(value) {\n      var t2, singleton, t3, t4, _this = this,\n        t1 = value.hasBrackets;\n      if (t1)\n        _this._buffer.writeCharCode$1(91);\n      else if (value._list1$_contents.length === 0) {\n        if (!_this._inspect)\n          throw H.wrapException(E.SassScriptException$0(\"() isn't a valid CSS value.\"));\n        _this._buffer.write$1(0, \"()\");\n        return;\n      }\n      t2 = _this._inspect;\n      singleton = t2 && value._list1$_contents.length === 1 && value.separator === C.ListSeparator_comma0;\n      if (singleton && !t1)\n        _this._buffer.writeCharCode$1(40);\n      t3 = value._list1$_contents;\n      t3 = t2 ? t3 : new H.WhereIterable(t3, new N._SerializeVisitor_visitList_closure2(), H._arrayInstanceType(t3)._eval$1(\"WhereIterable<1>\"));\n      if (value.separator === C.ListSeparator_space0)\n        t4 = \" \";\n      else\n        t4 = _this._serialize0$_style === C.OutputStyle_compressed0 ? \",\" : \", \";\n      _this._serialize0$_writeBetween$3(t3, t4, t2 ? new N._SerializeVisitor_visitList_closure3(_this, value) : new N._SerializeVisitor_visitList_closure4(_this));\n      if (singleton) {\n        t2 = _this._buffer;\n        t2.writeCharCode$1(44);\n        if (!t1)\n          t2.writeCharCode$1(41);\n      }\n      if (t1)\n        _this._buffer.writeCharCode$1(93);\n    },\n    _serialize0$_elementNeedsParens$2: function(separator, value) {\n      var t1;\n      if (value instanceof D.SassList0) {\n        if (value._list1$_contents.length < 2)\n          return false;\n        if (value.hasBrackets)\n          return false;\n        t1 = value.separator;\n        return separator === C.ListSeparator_comma0 ? t1 === C.ListSeparator_comma0 : t1 !== C.ListSeparator_undecided0;\n      }\n      return false;\n    },\n    visitMap$1: function(map) {\n      var t1, t2, _this = this;\n      if (!_this._inspect)\n        throw H.wrapException(E.SassScriptException$0(map.toString$0(0) + \" isn't a valid CSS value.\"));\n      t1 = _this._buffer;\n      t1.writeCharCode$1(40);\n      t2 = map.contents;\n      _this._serialize0$_writeBetween$3(t2.get$keys(t2), \", \", new N._SerializeVisitor_visitMap_closure0(_this, map));\n      t1.writeCharCode$1(41);\n    },\n    _serialize0$_writeMapElement$1: function(value) {\n      var needsParens = value instanceof D.SassList0 && value.separator === C.ListSeparator_comma0 && !value.hasBrackets;\n      if (needsParens)\n        this._buffer.writeCharCode$1(40);\n      value.accept$1(this);\n      if (needsParens)\n        this._buffer.writeCharCode$1(41);\n    },\n    visitNumber$1: function(value) {\n      var t2, _this = this,\n        t1 = value.asSlash;\n      if (t1 != null) {\n        _this.visitNumber$1(t1.item1);\n        _this._buffer.writeCharCode$1(47);\n        _this.visitNumber$1(t1.item2);\n        return;\n      }\n      _this._serialize0$_writeNumber$1(value.value);\n      if (!_this._inspect) {\n        t1 = value.numeratorUnits;\n        t2 = t1.length;\n        if (t2 > 1 || value.denominatorUnits.length !== 0)\n          throw H.wrapException(E.SassScriptException$0(value.toString$0(0) + \" isn't a valid CSS value.\"));\n        if (t2 !== 0)\n          _this._buffer.write$1(0, C.JSArray_methods.get$first(t1));\n      } else\n        _this._buffer.write$1(0, value.get$unitString());\n    },\n    _serialize0$_writeNumber$1: function(number) {\n      var t1, text, text0, _this = this,\n        integer = T.fuzzyIsInt0(number) ? J.round$0$n(number) : null;\n      if (integer != null) {\n        t1 = integer >= 1e21 ? _this._serialize0$_removeExponent$1(C.JSInt_methods.toString$0(integer)) : C.JSInt_methods.toString$0(integer);\n        _this._buffer.write$1(0, t1);\n        return;\n      }\n      text = number >= 1e21 ? _this._serialize0$_removeExponent$1(C.JSNumber_methods.toString$0(number)) : C.JSNumber_methods.toString$0(number);\n      text0 = _this._serialize0$_style === C.OutputStyle_compressed0 && C.JSString_methods._codeUnitAt$1(text, 0) === 48 ? C.JSString_methods.substring$1(text, 1) : text;\n      if (text.length < 12) {\n        _this._buffer.write$1(0, text0);\n        return;\n      }\n      _this._serialize0$_writeDecimal$1(text0);\n    },\n    _serialize0$_removeExponent$1: function(text) {\n      var buffer, exponent, t2, additionalZeroes, negative,\n        t1 = text.length,\n        i = 0;\n      while (true) {\n        if (!(i < t1)) {\n          buffer = null;\n          exponent = null;\n          break;\n        }\n        c$0: {\n          if (C.JSString_methods._codeUnitAt$1(text, i) !== 101)\n            break c$0;\n          buffer = new P.StringBuffer(\"\");\n          t2 = H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(text, 0));\n          buffer._contents = t2;\n          if (i > 2)\n            buffer._contents = t2 + C.JSString_methods.substring$2(text, 2, i);\n          exponent = P.int_parse(C.JSString_methods.substring$2(text, i + 1, t1), null);\n          break;\n        }\n        ++i;\n      }\n      if (buffer == null)\n        return text;\n      if (exponent > 0) {\n        t1 = buffer._contents;\n        additionalZeroes = exponent - (t1.length - 1);\n        for (i = 0; i < additionalZeroes; ++i)\n          t1 = buffer._contents += H.Primitives_stringFromCharCode(48);\n        return t1.charCodeAt(0) == 0 ? t1 : t1;\n      } else {\n        negative = C.JSString_methods._codeUnitAt$1(text, 0) === 45;\n        t1 = (negative ? H.Primitives_stringFromCharCode(45) : \"\") + \"0.\";\n        for (i = -1; i > exponent; --i)\n          t1 += H.Primitives_stringFromCharCode(48);\n        if (negative) {\n          t2 = buffer._contents;\n          t2 = C.JSString_methods.substring$1(t2.charCodeAt(0) == 0 ? t2 : t2, 1);\n        } else\n          t2 = buffer;\n        t2 = t1 + H.S(t2);\n        return t2.charCodeAt(0) == 0 ? t2 : t2;\n      }\n    },\n    _serialize0$_writeDecimal$1: function(text) {\n      var t1, t2, textIndex, codeUnit, digits, t3, digitsIndex, digitsIndex0, textIndex0, newDigit, i;\n      for (t1 = text.length, t2 = this._buffer, textIndex = 0; textIndex < t1; ++textIndex) {\n        codeUnit = C.JSString_methods._codeUnitAt$1(text, textIndex);\n        if (codeUnit === 46) {\n          if (textIndex === t1 - 2 && C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 48)\n            return;\n          t2.writeCharCode$1(codeUnit);\n          ++textIndex;\n          break;\n        }\n        t2.writeCharCode$1(codeUnit);\n      }\n      if (textIndex === t1)\n        return;\n      digits = new Uint8Array(10);\n      t3 = digits.length;\n      digitsIndex = 0;\n      while (true) {\n        if (!(textIndex < t1 && digitsIndex < t3))\n          break;\n        digitsIndex0 = digitsIndex + 1;\n        textIndex0 = textIndex + 1;\n        digits[digitsIndex] = C.JSString_methods._codeUnitAt$1(text, textIndex) - 48;\n        digitsIndex = digitsIndex0;\n        textIndex = textIndex0;\n      }\n      if (textIndex !== t1 && C.JSString_methods._codeUnitAt$1(text, textIndex) - 48 >= 5)\n        for (; digitsIndex >= 0; digitsIndex = digitsIndex0) {\n          digitsIndex0 = digitsIndex - 1;\n          newDigit = digits[digitsIndex0] + 1;\n          digits[digitsIndex0] = newDigit;\n          if (newDigit !== 10)\n            break;\n        }\n      while (true) {\n        if (!(digitsIndex > 0 && digits[digitsIndex - 1] === 0))\n          break;\n        --digitsIndex;\n      }\n      for (i = 0; i < digitsIndex; ++i)\n        t2.writeCharCode$1(48 + digits[i]);\n    },\n    _serialize0$_visitQuotedString$2$forceDoubleQuote: function(string, forceDoubleQuote) {\n      var t1, includesSingleQuote, includesDoubleQuote, i, char, t2, next, quote, _this = this,\n        buffer = forceDoubleQuote ? _this._buffer : new P.StringBuffer(\"\");\n      if (forceDoubleQuote)\n        buffer.writeCharCode$1(34);\n      for (t1 = string.length, includesSingleQuote = false, includesDoubleQuote = false, i = 0; i < t1; ++i) {\n        char = C.JSString_methods._codeUnitAt$1(string, i);\n        switch (char) {\n          case 39:\n            if (forceDoubleQuote)\n              buffer.writeCharCode$1(39);\n            else {\n              if (includesDoubleQuote) {\n                _this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, true);\n                return;\n              } else\n                buffer.writeCharCode$1(39);\n              includesSingleQuote = true;\n            }\n            break;\n          case 34:\n            if (forceDoubleQuote) {\n              buffer.writeCharCode$1(92);\n              buffer.writeCharCode$1(34);\n            } else {\n              if (includesSingleQuote) {\n                _this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, true);\n                return;\n              } else\n                buffer.writeCharCode$1(34);\n              includesDoubleQuote = true;\n            }\n            break;\n          case 0:\n          case 1:\n          case 2:\n          case 3:\n          case 4:\n          case 5:\n          case 6:\n          case 7:\n          case 8:\n          case 10:\n          case 11:\n          case 12:\n          case 13:\n          case 14:\n          case 15:\n          case 16:\n          case 17:\n          case 18:\n          case 19:\n          case 20:\n          case 21:\n          case 22:\n          case 23:\n          case 24:\n          case 25:\n          case 26:\n          case 27:\n          case 28:\n          case 29:\n          case 30:\n          case 31:\n            buffer.writeCharCode$1(92);\n            if (char > 15) {\n              t2 = char >>> 4;\n              buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n            }\n            t2 = char & 15;\n            buffer.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);\n            t2 = i + 1;\n            if (t1 === t2)\n              break;\n            next = C.JSString_methods._codeUnitAt$1(string, t2);\n            if (T.isHex0(next) || next === 32 || next === 9)\n              buffer.writeCharCode$1(32);\n            break;\n          case 92:\n            buffer.writeCharCode$1(92);\n            buffer.writeCharCode$1(92);\n            break;\n          default:\n            buffer.writeCharCode$1(char);\n            break;\n        }\n      }\n      if (forceDoubleQuote)\n        buffer.writeCharCode$1(34);\n      else {\n        quote = includesDoubleQuote ? 39 : 34;\n        t1 = _this._buffer;\n        t1.writeCharCode$1(quote);\n        t1.write$1(0, buffer);\n        t1.writeCharCode$1(quote);\n      }\n    },\n    _serialize0$_visitQuotedString$1: function(string) {\n      return this._serialize0$_visitQuotedString$2$forceDoubleQuote(string, false);\n    },\n    _serialize0$_visitUnquotedString$1: function(string) {\n      var t1, t2, afterNewline, i, char;\n      for (t1 = string.length, t2 = this._buffer, afterNewline = false, i = 0; i < t1; ++i) {\n        char = C.JSString_methods._codeUnitAt$1(string, i);\n        switch (char) {\n          case 10:\n            t2.writeCharCode$1(32);\n            afterNewline = true;\n            break;\n          case 32:\n            if (!afterNewline)\n              t2.writeCharCode$1(32);\n            break;\n          default:\n            t2.writeCharCode$1(char);\n            afterNewline = false;\n            break;\n        }\n      }\n    },\n    visitComplexSelector$1: function(complex) {\n      var t1, t2, t3, t4, lastComponent, _i, component, t5;\n      for (t1 = complex.components, t2 = t1.length, t3 = this._buffer, t4 = this._serialize0$_style === C.OutputStyle_compressed0, lastComponent = null, _i = 0; _i < t2; ++_i, lastComponent = component) {\n        component = t1[_i];\n        if (lastComponent != null)\n          if (!(t4 && lastComponent instanceof S.Combinator0))\n            t5 = !(t4 && component instanceof S.Combinator0);\n          else\n            t5 = false;\n        else\n          t5 = false;\n        if (t5)\n          t3.write$1(0, \" \");\n        if (component instanceof X.CompoundSelector0)\n          this.visitCompoundSelector$1(component);\n        else\n          t3.write$1(0, component);\n      }\n    },\n    visitCompoundSelector$1: function(compound) {\n      var t2, t3, _i,\n        t1 = this._buffer,\n        start = t1.get$length(t1);\n      for (t2 = compound.components, t3 = t2.length, _i = 0; _i < t3; ++_i)\n        t2[_i].accept$1(this);\n      if (t1.get$length(t1) === start)\n        t1.writeCharCode$1(42);\n    },\n    visitSelectorList$1: function(list) {\n      var complexes, t1, t2, t3, t4, first, t5, _this = this;\n      if (_this._inspect)\n        complexes = list.components;\n      else {\n        t1 = list.components;\n        complexes = new H.WhereIterable(t1, new N._SerializeVisitor_visitSelectorList_closure0(), H._arrayInstanceType(t1)._eval$1(\"WhereIterable<1>\"));\n      }\n      for (t1 = J.get$iterator$ax(complexes), t2 = _this._serialize0$_style !== C.OutputStyle_compressed0, t3 = _this._buffer, t4 = _this._lineFeed.text, first = true; t1.moveNext$0();) {\n        t5 = t1.get$current(t1);\n        if (first)\n          first = false;\n        else {\n          t3.writeCharCode$1(44);\n          if (t5.lineBreak) {\n            if (t2)\n              t3.write$1(0, t4);\n          } else if (t2)\n            t3.writeCharCode$1(32);\n        }\n        _this.visitComplexSelector$1(t5);\n      }\n    },\n    visitPseudoSelector$1: function(pseudo) {\n      var t4, t5, t6,\n        t1 = pseudo.selector,\n        t2 = t1 == null,\n        t3 = !t2;\n      if (t3 && pseudo.name === \"not\" && t1.get$isInvisible())\n        return;\n      t4 = this._buffer;\n      t4.writeCharCode$1(58);\n      if (!pseudo.isSyntacticClass)\n        t4.writeCharCode$1(58);\n      t4.write$1(0, pseudo.name);\n      t5 = pseudo.argument;\n      t6 = t5 == null;\n      if (t6 && t2)\n        return;\n      t4.writeCharCode$1(40);\n      if (!t6) {\n        t4.write$1(0, t5);\n        if (t3)\n          t4.writeCharCode$1(32);\n      }\n      if (t3)\n        this.visitSelectorList$1(t1);\n      t4.writeCharCode$1(41);\n    },\n    _serialize0$_write$1: function(value) {\n      return this._buffer.forSpan$2(value.get$span(), new N._SerializeVisitor__write_closure0(this, value));\n    },\n    _serialize0$_visitChildren$1: function(children) {\n      var _this = this, t1 = {},\n        t2 = _this._buffer;\n      t2.writeCharCode$1(123);\n      if (children.every$1(children, _this.get$_serialize0$_isInvisible())) {\n        t2.writeCharCode$1(125);\n        return;\n      }\n      _this._serialize0$_writeLineFeed$0();\n      t1.previous = null;\n      ++_this._serialize0$_indentation;\n      new N._SerializeVisitor__visitChildren_closure0(t1, _this, children).call$0();\n      --_this._serialize0$_indentation;\n      t1 = t1.previous;\n      if ((type$.legacy_CssParentNode_2._is(t1) ? t1.get$isChildless() : !type$.legacy_CssComment_2._is(t1)) && _this._serialize0$_style !== C.OutputStyle_compressed0)\n        t2.writeCharCode$1(59);\n      _this._serialize0$_writeLineFeed$0();\n      _this._serialize0$_writeIndentation$0();\n      t2.writeCharCode$1(125);\n    },\n    _serialize0$_writeLineFeed$0: function() {\n      if (this._serialize0$_style !== C.OutputStyle_compressed0)\n        this._buffer.write$1(0, this._lineFeed.text);\n    },\n    _serialize0$_writeIndentation$0: function() {\n      var _this = this;\n      if (_this._serialize0$_style === C.OutputStyle_compressed0)\n        return;\n      _this._serialize0$_writeTimes$2(_this._serialize0$_indentCharacter, _this._serialize0$_indentation * _this._serialize0$_indentWidth);\n    },\n    _serialize0$_writeTimes$2: function(char, times) {\n      var t1, i;\n      for (t1 = this._buffer, i = 0; i < times; ++i)\n        t1.writeCharCode$1(char);\n    },\n    _serialize0$_writeBetween$1$3: function(iterable, text, callback) {\n      var t1, t2, first, value;\n      for (t1 = J.get$iterator$ax(iterable), t2 = this._buffer, first = true; t1.moveNext$0();) {\n        value = t1.get$current(t1);\n        if (first)\n          first = false;\n        else\n          t2.write$1(0, text);\n        callback.call$1(value);\n      }\n    },\n    _serialize0$_writeBetween$3: function(iterable, text, callback) {\n      return this._serialize0$_writeBetween$1$3(iterable, text, callback, type$.dynamic);\n    },\n    _serialize0$_isInvisible$1: function(node) {\n      if (this._inspect)\n        return false;\n      if (this._serialize0$_style === C.OutputStyle_compressed0 && type$.legacy_CssComment_2._is(node) && J._codeUnitAt$1$s(node.text, 2) !== 33)\n        return true;\n      if (type$.legacy_CssParentNode_2._is(node)) {\n        if (type$.legacy_CssAtRule_2._is(node))\n          return false;\n        if (type$.legacy_CssStyleRule_2._is(node) && node.selector.value.get$isInvisible())\n          return true;\n        return J.every$1$ax(node.get$children(node), this.get$_serialize0$_isInvisible());\n      } else\n        return false;\n    }\n  };\n  N._SerializeVisitor_visitCssComment_closure0.prototype = {\n    call$0: function() {\n      var t2, t3, minimumIndentation,\n        t1 = this.$this;\n      if (t1._serialize0$_style === C.OutputStyle_compressed0 && J._codeUnitAt$1$s(this.node.text, 2) !== 33)\n        return;\n      t2 = this.node;\n      t3 = t2.text;\n      minimumIndentation = t1._serialize0$_minimumIndentation$1(t3);\n      if (minimumIndentation == null) {\n        t1._serialize0$_writeIndentation$0();\n        t1._buffer.write$1(0, t3);\n        return;\n      }\n      t2 = t2.span;\n      if (t2 != null) {\n        t2 = Y.FileLocation$_(t2.file, t2._file$_start);\n        minimumIndentation = Math.min(minimumIndentation, t2.file.getColumn$1(t2.offset));\n      }\n      t1._serialize0$_writeIndentation$0();\n      t1._serialize0$_writeWithIndent$2(t3, minimumIndentation);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssAtRule_closure0.prototype = {\n    call$0: function() {\n      var t3,\n        t1 = this.$this,\n        t2 = t1._buffer;\n      t2.writeCharCode$1(64);\n      t3 = this.node;\n      t1._serialize0$_write$1(t3.name);\n      t3 = t3.value;\n      if (t3 != null) {\n        t2.writeCharCode$1(32);\n        t1._serialize0$_write$1(t3);\n      }\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssMediaRule_closure0.prototype = {\n    call$0: function() {\n      var t3, t4,\n        t1 = this.$this,\n        t2 = t1._buffer;\n      t2.write$1(0, \"@media\");\n      t3 = t1._serialize0$_style === C.OutputStyle_compressed0;\n      if (t3) {\n        t4 = C.JSArray_methods.get$first(this.node.queries);\n        t4 = !(t4.modifier == null && t4.type == null);\n      } else\n        t4 = true;\n      if (t4)\n        t2.writeCharCode$1(32);\n      t2 = t3 ? \",\" : \", \";\n      t1._serialize0$_writeBetween$3(this.node.queries, t2, t1.get$_serialize0$_visitMediaQuery());\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssImport_closure0.prototype = {\n    call$0: function() {\n      var t3, t4, t5, t6,\n        t1 = this.$this,\n        t2 = t1._buffer;\n      t2.write$1(0, \"@import\");\n      t3 = t1._serialize0$_style === C.OutputStyle_compressed0;\n      t4 = !t3;\n      if (t4)\n        t2.writeCharCode$1(32);\n      t5 = this.node;\n      t2.forSpan$2(t5.url.get$span(), new N._SerializeVisitor_visitCssImport__closure0(t1, t5));\n      t6 = t5.supports;\n      if (t6 != null) {\n        if (t4)\n          t2.writeCharCode$1(32);\n        t1._serialize0$_write$1(t6);\n      }\n      t5 = t5.media;\n      if (t5 != null) {\n        if (t4)\n          t2.writeCharCode$1(32);\n        t2 = t3 ? \",\" : \", \";\n        t1._serialize0$_writeBetween$3(t5, t2, t1.get$_serialize0$_visitMediaQuery());\n      }\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssImport__closure0.prototype = {\n    call$0: function() {\n      var t1 = this.node.url;\n      return this.$this._serialize0$_writeImportUrl$1(t1.get$value(t1));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssKeyframeBlock_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._serialize0$_style === C.OutputStyle_compressed0 ? \",\" : \", \",\n        t3 = t1._buffer;\n      return t1._serialize0$_writeBetween$3(this.node.selector.value, t2, t3.get$write(t3));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssStyleRule_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.node.selector.value;\n      t1.toString;\n      return this.$this.visitSelectorList$1(t1);\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitCssSupportsRule_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = t1._buffer;\n      t2.write$1(0, \"@supports\");\n      if (!(t1._serialize0$_style === C.OutputStyle_compressed0 && J.codeUnitAt$1$s(this.node.condition.value, 0) === 40))\n        t2.writeCharCode$1(32);\n      t1._serialize0$_write$1(this.node.condition);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssDeclaration_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this,\n        t2 = this.node;\n      if (t1._serialize0$_style === C.OutputStyle_compressed0)\n        t1._serialize0$_writeFoldedValue$1(t2);\n      else\n        t1._serialize0$_writeReindentedValue$1(t2);\n    },\n    $signature: 0\n  };\n  N._SerializeVisitor_visitCssDeclaration_closure2.prototype = {\n    call$0: function() {\n      return this.node.value.value.accept$1(this.$this);\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor_visitList_closure2.prototype = {\n    call$1: function(element) {\n      return !element.get$isBlank();\n    },\n    $signature: 53\n  };\n  N._SerializeVisitor_visitList_closure3.prototype = {\n    call$1: function(element) {\n      var t1 = this.$this,\n        needsParens = t1._serialize0$_elementNeedsParens$2(this.value.separator, element);\n      if (needsParens)\n        t1._buffer.writeCharCode$1(40);\n      element.accept$1(t1);\n      if (needsParens)\n        t1._buffer.writeCharCode$1(41);\n    },\n    $signature: 122\n  };\n  N._SerializeVisitor_visitList_closure4.prototype = {\n    call$1: function(element) {\n      element.accept$1(this.$this);\n    },\n    $signature: 122\n  };\n  N._SerializeVisitor_visitMap_closure0.prototype = {\n    call$1: function(key) {\n      var t1 = this.$this;\n      t1._serialize0$_writeMapElement$1(key);\n      t1._buffer.write$1(0, \": \");\n      t1._serialize0$_writeMapElement$1(this.map.contents.$index(0, key));\n    },\n    $signature: 122\n  };\n  N._SerializeVisitor_visitSelectorList_closure0.prototype = {\n    call$1: function(complex) {\n      return !complex.get$isInvisible();\n    },\n    $signature: 14\n  };\n  N._SerializeVisitor__write_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.value;\n      return this.$this._buffer.write$1(0, t1.get$value(t1));\n    },\n    $signature: 1\n  };\n  N._SerializeVisitor__visitChildren_closure0.prototype = {\n    call$0: function() {\n      var t1, t2, t3, t4, t5, t6, t7, t8, i, child, t9;\n      for (t1 = this.children._collection$_source, t2 = J.getInterceptor$asx(t1), t3 = this._box_0, t4 = this.$this, t5 = type$.legacy_CssComment_2, t6 = type$.legacy_CssParentNode_2, t7 = t4._buffer, t8 = t4._lineFeed.text, i = 0; i < t2.get$length(t1); ++i) {\n        child = t2.elementAt$1(t1, i);\n        if (t4._serialize0$_isInvisible$1(child))\n          continue;\n        t9 = t3.previous;\n        if (t9 != null) {\n          if (t6._is(t9) ? t9.get$isChildless() : !t5._is(t9))\n            t7.writeCharCode$1(59);\n          t9 = t4._serialize0$_style !== C.OutputStyle_compressed0;\n          if (t9)\n            t7.write$1(0, t8);\n          if (t3.previous.get$isGroupEnd())\n            if (t9)\n              t7.write$1(0, t8);\n        }\n        t3.previous = child;\n        child.accept$1(t4);\n      }\n    },\n    $signature: 0\n  };\n  N.OutputStyle0.prototype = {\n    toString$0: function(_) {\n      return this._name;\n    }\n  };\n  N.LineFeed0.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  N.SerializeResult0.prototype = {};\n  B.ShadowedModuleView0.prototype = {\n    get$url: function() {\n      return this._shadowed_view0$_inner.get$url();\n    },\n    get$upstream: function() {\n      return this._shadowed_view0$_inner.get$upstream();\n    },\n    get$extender: function() {\n      return this._shadowed_view0$_inner.get$extender();\n    },\n    get$css: function(_) {\n      var t1 = this._shadowed_view0$_inner;\n      return t1.get$css(t1);\n    },\n    get$transitivelyContainsCss: function() {\n      return this._shadowed_view0$_inner.get$transitivelyContainsCss();\n    },\n    get$transitivelyContainsExtensions: function() {\n      return this._shadowed_view0$_inner.get$transitivelyContainsExtensions();\n    },\n    setVariable$3: function($name, value, nodeWithSpan) {\n      if (!this.variables.containsKey$1($name))\n        throw H.wrapException(E.SassScriptException$0(\"Undefined variable.\"));\n      else\n        return this._shadowed_view0$_inner.setVariable$3($name, value, nodeWithSpan);\n    },\n    variableIdentity$1: function($name) {\n      return this._shadowed_view0$_inner.variableIdentity$1($name);\n    },\n    $eq: function(_, other) {\n      var t1, t2, _this = this;\n      if (other == null)\n        return false;\n      if (other instanceof B.ShadowedModuleView0)\n        if (_this._shadowed_view0$_inner.$eq(0, other._shadowed_view0$_inner)) {\n          t1 = _this.variables;\n          t1 = t1.get$keys(t1);\n          t2 = other.variables;\n          if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {\n            t1 = _this.functions;\n            t1 = t1.get$keys(t1);\n            t2 = other.functions;\n            if (C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2))) {\n              t1 = _this.mixins;\n              t1 = t1.get$keys(t1);\n              t2 = other.mixins;\n              t2 = C.C_IterableEquality.equals$2(0, t1, t2.get$keys(t2));\n              t1 = t2;\n            } else\n              t1 = false;\n          } else\n            t1 = false;\n        } else\n          t1 = false;\n      else\n        t1 = false;\n      return t1;\n    },\n    get$hashCode: function(_) {\n      var t1 = this._shadowed_view0$_inner;\n      return t1.get$hashCode(t1);\n    },\n    cloneCss$0: function() {\n      var _this = this;\n      return new B.ShadowedModuleView0(_this._shadowed_view0$_inner.cloneCss$0(), _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.$ti._eval$1(\"ShadowedModuleView0<1*>\"));\n    },\n    toString$0: function(_) {\n      return \"shadowed \" + this._shadowed_view0$_inner.toString$0(0);\n    },\n    $isModule0: 1,\n    get$variables: function() {\n      return this.variables;\n    },\n    get$variableNodes: function() {\n      return this.variableNodes;\n    },\n    get$functions: function(receiver) {\n      return this.functions;\n    },\n    get$mixins: function() {\n      return this.mixins;\n    }\n  };\n  B.SilentComment0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSilentComment$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return this.text;\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.SimpleSelector0.prototype = {\n    get$minSpecificity: function() {\n      return 1000;\n    },\n    get$maxSpecificity: function() {\n      return this.get$minSpecificity();\n    },\n    addSuffix$1: function(suffix) {\n      return H.throwExpression(E.SassScriptException$0('Invalid parent selector \"' + this.toString$0(0) + '\"'));\n    },\n    unify$1: function(compound) {\n      var result, t1, addedThis, _i, simple, _this = this;\n      if (compound.length === 1 && C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0)\n        return C.JSArray_methods.get$first(compound).unify$1(H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2));\n      if (C.JSArray_methods.contains$1(compound, _this))\n        return compound;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n      for (t1 = compound.length, addedThis = false, _i = 0; _i < compound.length; compound.length === t1 || (0, H.throwConcurrentModificationError)(compound), ++_i) {\n        simple = compound[_i];\n        if (!addedThis && simple instanceof D.PseudoSelector0) {\n          result.push(_this);\n          addedThis = true;\n        }\n        result.push(simple);\n      }\n      if (!addedThis)\n        result.push(_this);\n      return result;\n    }\n  };\n  D.SourceMapBuffer.prototype = {\n    get$sourceFiles: function() {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_String, type$.legacy_SourceFile);\n      for (t2 = this._source_map_buffer$_sourceFiles, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, J.toString$0$(t3.key), t3.value);\n      }\n      return new P.UnmodifiableMapView(t1, type$.UnmodifiableMapView_of_legacy_String_and_legacy_SourceFile);\n    },\n    get$_targetLocation: function() {\n      var t1 = this._source_map_buffer$_buffer._contents,\n        t2 = this._line;\n      return V.SourceLocation$(t1.length, this._column, t2, null);\n    },\n    get$length: function(_) {\n      return this._source_map_buffer$_buffer._contents.length;\n    },\n    forSpan$1$2: function(span, callback) {\n      var t1, _this = this,\n        wasInSpan = _this._inSpan;\n      _this._inSpan = true;\n      _this._source_map_buffer$_addEntry$2(Y.FileLocation$_(span.file, span._file$_start), _this.get$_targetLocation());\n      try {\n        t1 = callback.call$0();\n        return t1;\n      } finally {\n        _this._inSpan = wasInSpan;\n      }\n    },\n    forSpan$2: function(span, callback) {\n      return this.forSpan$1$2(span, callback, type$.dynamic);\n    },\n    _source_map_buffer$_addEntry$2: function(source, target) {\n      var entry, t2,\n        t1 = this._entries;\n      if (t1.length !== 0) {\n        entry = C.JSArray_methods.get$last(t1);\n        t2 = entry.source;\n        if (t2.file.getLine$1(t2.offset) == source.file.getLine$1(source.offset) && entry.target.line === target.line)\n          return;\n        if (entry.target.offset === target.offset)\n          return;\n      }\n      this._source_map_buffer$_sourceFiles.putIfAbsent$2(source.file.url, new D.SourceMapBuffer__addEntry_closure0(source));\n      t1.push(new L.Entry(source, target, null));\n    },\n    write$1: function(_, object) {\n      var t1, i,\n        string = J.toString$0$(object);\n      this._source_map_buffer$_buffer._contents += H.S(string);\n      for (t1 = string.length, i = 0; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1(string, i) === 10)\n          this._writeLine$0();\n        else\n          ++this._column;\n    },\n    writeCharCode$1: function(charCode) {\n      this._source_map_buffer$_buffer._contents += H.Primitives_stringFromCharCode(charCode);\n      if (charCode === 10)\n        this._writeLine$0();\n      else\n        ++this._column;\n    },\n    _writeLine$0: function() {\n      var _this = this,\n        t1 = _this._entries;\n      if (C.JSArray_methods.get$last(t1).target.line === _this._line && C.JSArray_methods.get$last(t1).target.column === _this._column)\n        t1.pop();\n      ++_this._line;\n      _this._column = 0;\n      if (_this._inSpan)\n        t1.push(new L.Entry(C.JSArray_methods.get$last(t1).source, _this.get$_targetLocation(), null));\n    },\n    toString$0: function(_) {\n      var t1 = this._source_map_buffer$_buffer._contents;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    buildSourceMap$1$prefix: function(prefix) {\n      var i, t2, prefixColumn, _box_0 = {},\n        t1 = prefix.length;\n      if (t1 === 0)\n        return T.SingleMapping_SingleMapping$fromEntries(this._entries);\n      _box_0.prefixColumn = _box_0.prefixLines = 0;\n      for (i = 0, t2 = 0; i < t1; ++i)\n        if (C.JSString_methods._codeUnitAt$1(prefix, i) === 10) {\n          ++_box_0.prefixLines;\n          _box_0.prefixColumn = 0;\n          t2 = 0;\n        } else {\n          prefixColumn = t2 + 1;\n          _box_0.prefixColumn = prefixColumn;\n          t2 = prefixColumn;\n        }\n      t2 = this._entries;\n      return T.SingleMapping_SingleMapping$fromEntries(new H.MappedListIterable(t2, new D.SourceMapBuffer_buildSourceMap_closure0(_box_0, t1), H._arrayInstanceType(t2)._eval$1(\"MappedListIterable<1,Entry*>\")));\n    },\n    $isStringBuffer: 1\n  };\n  D.SourceMapBuffer__addEntry_closure0.prototype = {\n    call$0: function() {\n      return this.source.file;\n    },\n    $signature: 96\n  };\n  D.SourceMapBuffer_buildSourceMap_closure0.prototype = {\n    call$1: function(entry) {\n      var t1 = entry.source,\n        t2 = entry.target,\n        t3 = t2.line,\n        t4 = this._box_0,\n        t5 = t4.prefixLines;\n      t4 = t3 === 0 ? t4.prefixColumn : 0;\n      return new L.Entry(t1, V.SourceLocation$(t2.offset + this.prefixLength, t2.column + t4, t3 + t5, null), entry.identifierName);\n    },\n    $signature: 149\n  };\n  Q.StaticImport0.prototype = {\n    toString$0: function(_) {\n      var t1 = this.url.toString$0(0),\n        t2 = this.supports;\n      if (t2 != null)\n        t1 += \" supports(\" + t2.toString$0(0) + \")\";\n      t2 = this.media;\n      if (t2 != null)\n        t1 += \" \" + t2.toString$0(0);\n      t1 += H.Primitives_stringFromCharCode(59);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isImport0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  S.StderrLogger0.prototype = {\n    warn$4$deprecation$span$trace: function(_, message, deprecation, span, trace) {\n      var t1;\n      if (deprecation)\n        J.write$1$x($.$get$stderr0()._node1$_stderr, \"DEPRECATION \");\n      J.write$1$x($.$get$stderr0()._node1$_stderr, \"WARNING\");\n      if (span == null) {\n        t1 = $.$get$stderr0();\n        t1.writeln$1(\": \" + H.S(message));\n      } else if (trace != null) {\n        t1 = $.$get$stderr0();\n        t1.writeln$1(\": \" + H.S(message) + \"\\n\\n\" + span.highlight$1$color(false));\n      } else {\n        t1 = $.$get$stderr0();\n        t1.writeln$1(\" on \" + span.message$2$color(0, C.JSString_methods.$add(\"\\n\", message), false));\n      }\n      if (trace != null)\n        t1.writeln$1(B.indent0(C.JSString_methods.trimRight$0(trace.toString$0(0)), 4));\n      t1.writeln$0();\n    },\n    warn$2$span: function($receiver, message, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, span, null);\n    },\n    warn$2$deprecation: function($receiver, message, deprecation) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, null, null);\n    },\n    warn$3$deprecation$span: function($receiver, message, deprecation, span) {\n      return this.warn$4$deprecation$span$trace($receiver, message, deprecation, span, null);\n    },\n    warn$2$trace: function($receiver, message, trace) {\n      return this.warn$4$deprecation$span$trace($receiver, message, false, null, trace);\n    },\n    debug$2: function(_, message, span) {\n      var url, t3, t4,\n        t1 = span.file,\n        t2 = span._file$_start;\n      if (Y.FileLocation$_(t1, t2).file.url == null)\n        url = \"-\";\n      else {\n        t3 = Y.FileLocation$_(t1, t2);\n        url = $.$get$context().prettyUri$1(t3.file.url);\n      }\n      t3 = $.$get$stderr0();\n      t4 = H.S(url) + \":\";\n      t2 = Y.FileLocation$_(t1, t2);\n      t2 = t4 + (t2.file.getLine$1(t2.offset) + 1) + \" \";\n      t4 = t3._node1$_stderr;\n      J.write$1$x(t4, t2);\n      J.write$1$x(t4, \"DEBUG\");\n      t3.writeln$1(\": \" + H.S(message));\n    }\n  };\n  D.StringExpression0.prototype = {\n    get$span: function() {\n      return this.text.span;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitStringExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    asInterpolation$1$static: function($static) {\n      var quote, t1, t2, buffer, t3, t4, t5, t6, _i, value, t7, t8, i, codeUnit, next, t9, _this = this;\n      if (!_this.hasQuotes)\n        return _this.text;\n      quote = _this._string0$_bestQuote$0();\n      t1 = new P.StringBuffer(\"\");\n      t2 = [];\n      buffer = new Z.InterpolationBuffer0(t1, t2);\n      t1._contents += H.Primitives_stringFromCharCode(quote);\n      for (t3 = _this.text, t4 = t3.contents, t5 = t4.length, t6 = type$.legacy_Expression_2, _i = 0; _i < t5; ++_i) {\n        value = t4[_i];\n        if (t6._is(value)) {\n          buffer._interpolation_buffer0$_flushText$0();\n          t2.push(value);\n        } else if (typeof value == \"string\")\n          for (t7 = value.length, t8 = t7 - 1, i = 0; i < t7; ++i) {\n            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);\n            if (codeUnit === 10 || codeUnit === 13 || codeUnit === 12) {\n              t1._contents += H.Primitives_stringFromCharCode(92);\n              t1._contents += H.Primitives_stringFromCharCode(97);\n              if (i !== t8) {\n                next = C.JSString_methods._codeUnitAt$1(value, i + 1);\n                if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12 || T.isHex0(next))\n                  t1._contents += H.Primitives_stringFromCharCode(32);\n              }\n            } else {\n              if (codeUnit !== quote)\n                if (codeUnit !== 92)\n                  t9 = $static && codeUnit === 35 && i < t8 && C.JSString_methods._codeUnitAt$1(value, i + 1) === 123;\n                else\n                  t9 = true;\n              else\n                t9 = true;\n              if (t9)\n                t1._contents += H.Primitives_stringFromCharCode(92);\n              t1._contents += H.Primitives_stringFromCharCode(codeUnit);\n            }\n          }\n      }\n      t1._contents += H.Primitives_stringFromCharCode(quote);\n      return buffer.interpolation$1(t3.span);\n    },\n    asInterpolation$0: function() {\n      return this.asInterpolation$1$static(false);\n    },\n    _string0$_bestQuote$0: function() {\n      var t1, t2, containsDoubleQuote, _i, value, t3, i, codeUnit;\n      for (t1 = this.text.contents, t2 = t1.length, containsDoubleQuote = false, _i = 0; _i < t2; ++_i) {\n        value = t1[_i];\n        if (typeof value == \"string\")\n          for (t3 = value.length, i = 0; i < t3; ++i) {\n            codeUnit = C.JSString_methods._codeUnitAt$1(value, i);\n            if (codeUnit === 39)\n              return 34;\n            if (codeUnit === 34)\n              containsDoubleQuote = true;\n          }\n      }\n      return containsDoubleQuote ? 39 : 34;\n    },\n    toString$0: function(_) {\n      return this.asInterpolation$0().toString$0(0);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1\n  };\n  D.closure123.prototype = {\n    call$1: function($arguments) {\n      var string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      if (!string.hasQuotes)\n        return string;\n      return new D.SassString0(string.text, false);\n    },\n    $signature: 17\n  };\n  D.closure122.prototype = {\n    call$1: function($arguments) {\n      var string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      if (string.hasQuotes)\n        return string;\n      return new D.SassString0(string.text, true);\n    },\n    $signature: 17\n  };\n  D.closure118.prototype = {\n    call$1: function($arguments) {\n      return T.SassNumber$0(J.$index$asx($arguments, 0).assertString$1(\"string\").get$sassLength(), null);\n    },\n    $signature: 9\n  };\n  D.closure117.prototype = {\n    call$1: function($arguments) {\n      var indexInt, codeUnitIndex, _s5_ = \"index\",\n        t1 = J.getInterceptor$asx($arguments),\n        string = t1.$index($arguments, 0).assertString$1(\"string\"),\n        insert = t1.$index($arguments, 1).assertString$1(\"insert\"),\n        index = t1.$index($arguments, 2).assertNumber$1(_s5_);\n      index.assertNoUnits$1(_s5_);\n      indexInt = index.assertInt$1(_s5_);\n      if (indexInt < 0)\n        indexInt = string.get$sassLength() + indexInt + 2;\n      t1 = string.text;\n      codeUnitIndex = B.codepointIndexToCodeUnitIndex0(t1, D._codepointForIndex0(indexInt, string.get$sassLength(), false));\n      return new D.SassString0(J.replaceRange$3$asx(t1, codeUnitIndex, codeUnitIndex, insert.text), string.hasQuotes);\n    },\n    $signature: 17\n  };\n  D.closure116.prototype = {\n    call$1: function($arguments) {\n      var t1 = J.getInterceptor$asx($arguments),\n        t2 = t1.$index($arguments, 0).assertString$1(\"string\").text,\n        codeUnitIndex = J.indexOf$1$asx(t2, t1.$index($arguments, 1).assertString$1(\"substring\").text);\n      if (codeUnitIndex === -1)\n        return C.C_SassNull;\n      return T.SassNumber$0(B.codeUnitIndexToCodepointIndex0(t2, codeUnitIndex) + 1, null);\n    },\n    $signature: 3\n  };\n  D.closure115.prototype = {\n    call$1: function($arguments) {\n      var lengthInCodepoints, endInt, startCodepoint, endCodepoint,\n        t1 = J.getInterceptor$asx($arguments),\n        string = t1.$index($arguments, 0).assertString$1(\"string\"),\n        start = t1.$index($arguments, 1).assertNumber$1(\"start-at\"),\n        end = t1.$index($arguments, 2).assertNumber$1(\"end-at\");\n      start.assertNoUnits$1(\"start\");\n      end.assertNoUnits$1(\"end\");\n      lengthInCodepoints = string.get$sassLength();\n      endInt = end.assertInt$0();\n      if (endInt === 0)\n        return string.hasQuotes ? $.$get$_emptyQuoted0() : $.$get$_emptyUnquoted0();\n      startCodepoint = D._codepointForIndex0(start.assertInt$0(), lengthInCodepoints, false);\n      endCodepoint = D._codepointForIndex0(endInt, lengthInCodepoints, true);\n      if (endCodepoint === lengthInCodepoints)\n        --endCodepoint;\n      if (endCodepoint < startCodepoint)\n        return string.hasQuotes ? $.$get$_emptyQuoted0() : $.$get$_emptyUnquoted0();\n      t1 = string.text;\n      return new D.SassString0(J.substring$2$s(t1, B.codepointIndexToCodeUnitIndex0(t1, startCodepoint), B.codepointIndexToCodeUnitIndex0(t1, endCodepoint + 1)), string.hasQuotes);\n    },\n    $signature: 17\n  };\n  D.closure121.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, i, t4, t5,\n        string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = \"\"; i < t2; ++i) {\n        t5 = t3._codeUnitAt$1(t1, i);\n        t4 += H.Primitives_stringFromCharCode(t5 >= 97 && t5 <= 122 ? t5 & 4294967263 : t5);\n      }\n      return new D.SassString0(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);\n    },\n    $signature: 17\n  };\n  D.closure120.prototype = {\n    call$1: function($arguments) {\n      var t1, t2, t3, i, t4, t5,\n        string = J.$index$asx($arguments, 0).assertString$1(\"string\");\n      for (t1 = string.text, t2 = t1.length, t3 = J.getInterceptor$s(t1), i = 0, t4 = \"\"; i < t2; ++i) {\n        t5 = t3._codeUnitAt$1(t1, i);\n        t4 += H.Primitives_stringFromCharCode(t5 >= 65 && t5 <= 90 ? t5 | 32 : t5);\n      }\n      return new D.SassString0(t4.charCodeAt(0) == 0 ? t4 : t4, string.hasQuotes);\n    },\n    $signature: 17\n  };\n  D.closure119.prototype = {\n    call$1: function($arguments) {\n      var t1 = $.$get$_previousUniqueId0() + ($.$get$_random1().nextInt$1(36) + 1);\n      $._previousUniqueId0 = t1;\n      if (t1 > Math.pow(36, 6))\n        $._previousUniqueId0 = C.JSInt_methods.$mod($.$get$_previousUniqueId0(), H._asIntS(Math.pow(36, 6)));\n      return new D.SassString0(\"u\" + C.JSString_methods.padLeft$2(J.toRadixString$1$n($.$get$_previousUniqueId0(), 36), 6, \"0\"), false);\n    },\n    $signature: 17\n  };\n  D._NodeSassString.prototype = {};\n  D.closure228.prototype = {\n    call$3: function(thisArg, value, dartValue) {\n      J.set$dartValue$x(thisArg, dartValue == null ? new D.SassString0(value, false) : dartValue);\n    },\n    call$2: function(thisArg, value) {\n      return this.call$3(thisArg, value, null);\n    },\n    \"call*\": \"call$3\",\n    $requiredArgCount: 2,\n    $defaultValues: function() {\n      return [null];\n    },\n    $signature: 427\n  };\n  D.closure229.prototype = {\n    call$1: function(thisArg) {\n      return J.get$dartValue$x(thisArg).text;\n    },\n    $signature: 207\n  };\n  D.closure230.prototype = {\n    call$2: function(thisArg, value) {\n      J.set$dartValue$x(thisArg, new D.SassString0(value, false));\n    },\n    \"call*\": \"call$2\",\n    $requiredArgCount: 2,\n    $signature: 429\n  };\n  D.closure231.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(J.get$dartValue$x(thisArg));\n    },\n    $signature: 207\n  };\n  D.SassString0.prototype = {\n    get$sassLength: function() {\n      var t1 = this._string$_sassLength;\n      if (t1 == null) {\n        t1 = this.text;\n        t1.toString;\n        t1 = new P.Runes(t1);\n        t1 = this._string$_sassLength = t1.get$length(t1);\n      }\n      return t1;\n    },\n    get$isSpecialNumber: function() {\n      var t1, t2;\n      if (this.hasQuotes)\n        return false;\n      t1 = this.text;\n      if (t1.length < 6)\n        return false;\n      t2 = J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32;\n      if (t2 === 99) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 108)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 99)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 4) === 40;\n      } else if (t2 === 118) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 114)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n      } else if (t2 === 101) {\n        if ((C.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 110)\n          return false;\n        if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 118)\n          return false;\n        return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n      } else if (t2 === 109) {\n        t2 = C.JSString_methods._codeUnitAt$1(t1, 1) | 32;\n        if (t2 === 97) {\n          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 120)\n            return false;\n          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n        } else if (t2 === 105) {\n          if ((C.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 110)\n            return false;\n          return C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n        } else\n          return false;\n      } else\n        return false;\n    },\n    get$isVar: function() {\n      if (this.hasQuotes)\n        return false;\n      var t1 = this.text;\n      if (t1.length < 8)\n        return false;\n      return (J.getInterceptor$s(t1)._codeUnitAt$1(t1, 0) | 32) === 118 && (C.JSString_methods._codeUnitAt$1(t1, 1) | 32) === 97 && (C.JSString_methods._codeUnitAt$1(t1, 2) | 32) === 114 && C.JSString_methods._codeUnitAt$1(t1, 3) === 40;\n    },\n    get$isBlank: function() {\n      return !this.hasQuotes && this.text.length === 0;\n    },\n    accept$1$1: function(visitor) {\n      var t1 = visitor._serialize0$_quote && this.hasQuotes,\n        t2 = this.text;\n      if (t1)\n        visitor._serialize0$_visitQuotedString$1(t2);\n      else\n        visitor._serialize0$_visitUnquotedString$1(t2);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    assertString$1: function($name) {\n      return this;\n    },\n    plus$1: function(other) {\n      var t1 = this.text,\n        t2 = this.hasQuotes;\n      if (other instanceof D.SassString0)\n        return new D.SassString0(J.$add$ansx(t1, other.text), t2);\n      else {\n        other.toString;\n        return new D.SassString0(J.$add$ansx(t1, N.serializeValue(other, false, true)), t2);\n      }\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof D.SassString0 && this.text == other.text;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.text);\n    }\n  };\n  X.ModifiableCssStyleRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStyleRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return X.ModifiableCssStyleRule$0(this.selector, this.span, this.originalSelector);\n    },\n    $isCssStyleRule0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.StyleRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitStyleRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return this.selector.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.CssStylesheet0.prototype = {\n    get$isGroupEnd: function() {\n      return false;\n    },\n    get$isChildless: function() {\n      return false;\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    get$children: function(receiver) {\n      return this.children;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.ModifiableCssStylesheet0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return V.ModifiableCssStylesheet$0(this.span);\n    },\n    $isCssStylesheet0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  V.StylesheetParser0.prototype = {\n    parse$0: function() {\n      return this.wrapSpanFormatException$1(new V.StylesheetParser_parse_closure0(this));\n    },\n    parseArgumentDeclaration$0: function() {\n      return this._stylesheet0$_parseSingleProduction$1$1(new V.StylesheetParser_parseArgumentDeclaration_closure0(this), type$.legacy_ArgumentDeclaration_2);\n    },\n    _stylesheet0$_parseSingleProduction$1$1: function(production, $T) {\n      return this.wrapSpanFormatException$1(new V.StylesheetParser__parseSingleProduction_closure0(this, production, $T));\n    },\n    parseSignature$0: function() {\n      return this.wrapSpanFormatException$1(new V.StylesheetParser_parseSignature_closure(this));\n    },\n    _stylesheet0$_statement$1$root: function(root) {\n      var t2, _this = this,\n        t1 = _this.scanner;\n      switch (t1.peekChar$0()) {\n        case 64:\n          return _this.atRule$2$root(new V.StylesheetParser__statement_closure0(_this), root);\n        case 43:\n          if (!_this.get$indented() || !_this.lookingAtIdentifier$1(1))\n            return _this._stylesheet0$_styleRule$0();\n          _this._stylesheet0$_isUseAllowed = false;\n          t2 = t1._string_scanner$_position;\n          t1.readChar$0();\n          return _this._stylesheet0$_includeRule$1(new S._SpanScannerState(t1, t2));\n        case 61:\n          if (!_this.get$indented())\n            return _this._stylesheet0$_styleRule$0();\n          _this._stylesheet0$_isUseAllowed = false;\n          t2 = t1._string_scanner$_position;\n          t1.readChar$0();\n          _this.whitespace$0();\n          return _this._stylesheet0$_mixinRule$1(new S._SpanScannerState(t1, t2));\n        case 125:\n          t1.error$2$length(0, 'unmatched \"}\".', 1);\n          break;\n        default:\n          return _this._stylesheet0$_inStyleRule || _this._stylesheet0$_inUnknownAtRule || _this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock ? _this._stylesheet0$_declarationOrStyleRule$0() : _this._stylesheet0$_variableDeclarationOrStyleRule$0();\n      }\n    },\n    _stylesheet0$_statement$0: function() {\n      return this._stylesheet0$_statement$1$root(false);\n    },\n    variableDeclarationWithoutNamespace$2: function(namespace, start) {\n      var precedingComment, t1, $name, t2, value, flagStart, guarded, global, flag, endPosition, t3, t4, t5, declaration, _this = this, _box_0 = {};\n      _box_0.start = start;\n      precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      if (start == null) {\n        t1 = _this.scanner;\n        _box_0.start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      }\n      $name = _this.variableName$0();\n      t1 = namespace != null;\n      if (t1)\n        _this._stylesheet0$_assertPublic$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure1(_box_0, _this));\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Sass_v, _this.scanner.spanFrom$1(_box_0.start));\n      _this.whitespace$0();\n      t2 = _this.scanner;\n      t2.expectChar$1(58);\n      _this.whitespace$0();\n      value = _this.expression$0();\n      flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      for (guarded = false, global = false; t2.scanChar$1(33);) {\n        flag = _this.identifier$0();\n        if (flag === \"default\")\n          guarded = true;\n        else if (flag === \"global\") {\n          if (t1) {\n            endPosition = t2._string_scanner$_position;\n            t3 = t2._sourceFile;\n            t4 = flagStart.position;\n            t5 = new Y._FileSpan(t3, t4, endPosition);\n            t5._FileSpan$3(t3, t4, endPosition);\n            _this.error$2(0, string$.x21globa, t5);\n          }\n          global = true;\n        } else {\n          endPosition = t2._string_scanner$_position;\n          t3 = t2._sourceFile;\n          t4 = flagStart.position;\n          t5 = new Y._FileSpan(t3, t4, endPosition);\n          t5._FileSpan$3(t3, t4, endPosition);\n          _this.error$2(0, \"Invalid flag name.\", t5);\n        }\n        _this.whitespace$0();\n        flagStart = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      }\n      _this.expectStatementSeparator$1(\"variable declaration\");\n      declaration = Z.VariableDeclaration$0($name, value, t2.spanFrom$1(_box_0.start), precedingComment, global, guarded, namespace);\n      if (global)\n        _this._stylesheet0$_globalVariables.putIfAbsent$2($name, new V.StylesheetParser_variableDeclarationWithoutNamespace_closure2(declaration));\n      return declaration;\n    },\n    variableDeclarationWithoutNamespace$0: function() {\n      return this.variableDeclarationWithoutNamespace$2(null, null);\n    },\n    _stylesheet0$_variableDeclarationOrStyleRule$0: function() {\n      var t1, t2, variableOrInterpolation, t3, _this = this;\n      if (_this.get$plainCss())\n        return _this._stylesheet0$_styleRule$0();\n      if (_this.get$indented() && _this.scanner.scanChar$1(92))\n        return _this._stylesheet0$_styleRule$0();\n      if (!_this.lookingAtIdentifier$0())\n        return _this._stylesheet0$_styleRule$0();\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      variableOrInterpolation = _this._stylesheet0$_variableDeclarationOrInterpolation$0();\n      if (variableOrInterpolation instanceof Z.VariableDeclaration0)\n        return variableOrInterpolation;\n      else {\n        t3 = new Z.InterpolationBuffer0(new P.StringBuffer(\"\"), []);\n        t3.addInterpolation$1(type$.legacy_Interpolation_2._as(variableOrInterpolation));\n        return _this._stylesheet0$_styleRule$2(t3, new S._SpanScannerState(t1, t2));\n      }\n    },\n    _stylesheet0$_declarationOrStyleRule$0: function() {\n      var t1, t2, declarationOrBuffer, _this = this;\n      if (_this.get$plainCss() && _this._stylesheet0$_inStyleRule && !_this._stylesheet0$_inUnknownAtRule)\n        return _this._stylesheet0$_propertyOrVariableDeclaration$0();\n      if (_this.get$indented() && _this.scanner.scanChar$1(92))\n        return _this._stylesheet0$_styleRule$0();\n      t1 = _this.scanner;\n      t2 = t1._string_scanner$_position;\n      declarationOrBuffer = _this._stylesheet0$_declarationOrBuffer$0();\n      return type$.legacy_Statement_2._is(declarationOrBuffer) ? declarationOrBuffer : _this._stylesheet0$_styleRule$2(type$.legacy_InterpolationBuffer_2._as(declarationOrBuffer), new S._SpanScannerState(t1, t2));\n    },\n    _stylesheet0$_declarationOrBuffer$0: function() {\n      var midBuffer, couldBeSelector, beforeDeclaration, additional, t3, startsWithPunctuation, variableOrInterpolation, t4, $name, postColonWhitespace, t5, value, exception, _this = this, t1 = {},\n        t2 = _this.scanner,\n        start = new S._SpanScannerState(t2, t2._string_scanner$_position),\n        nameBuffer = new Z.InterpolationBuffer0(new P.StringBuffer(\"\"), []),\n        first = t2.peekChar$0();\n      if (first !== 58)\n        if (first !== 42)\n          if (first !== 46)\n            t3 = first === 35 && t2.peekChar$1(1) !== 123;\n          else\n            t3 = true;\n        else\n          t3 = true;\n      else\n        t3 = true;\n      if (t3) {\n        t3 = t2.readChar$0();\n        nameBuffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(t3);\n        t3 = _this.rawText$1(_this.get$whitespace());\n        nameBuffer._interpolation_buffer0$_text._contents += t3;\n        startsWithPunctuation = true;\n      } else\n        startsWithPunctuation = false;\n      if (!_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())\n        return nameBuffer;\n      variableOrInterpolation = startsWithPunctuation ? _this.interpolatedIdentifier$0() : _this._stylesheet0$_variableDeclarationOrInterpolation$0();\n      if (variableOrInterpolation instanceof Z.VariableDeclaration0)\n        return variableOrInterpolation;\n      else\n        nameBuffer.addInterpolation$1(type$.legacy_Interpolation_2._as(variableOrInterpolation));\n      _this._stylesheet0$_isUseAllowed = false;\n      if (t2.matches$1(\"/*\")) {\n        t3 = _this.rawText$1(_this.get$loudComment());\n        nameBuffer._interpolation_buffer0$_text._contents += t3;\n      }\n      midBuffer = new P.StringBuffer(\"\");\n      t3 = _this.get$whitespace();\n      midBuffer._contents += _this.rawText$1(t3);\n      t4 = t2._string_scanner$_position;\n      if (!t2.scanChar$1(58)) {\n        if (midBuffer._contents.length !== 0)\n          nameBuffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(32);\n        return nameBuffer;\n      }\n      midBuffer._contents += H.Primitives_stringFromCharCode(58);\n      $name = nameBuffer.interpolation$1(t2.spanFrom$2(start, new S._SpanScannerState(t2, t4)));\n      if (C.JSString_methods.startsWith$1($name.get$initialPlain(), \"--\")) {\n        t1 = _this._stylesheet0$_interpolatedDeclarationValue$0();\n        _this.expectStatementSeparator$1(\"custom property\");\n        return L.Declaration$0($name, t2.spanFrom$1(start), null, new D.StringExpression0(t1, false));\n      }\n      if (t2.scanChar$1(58)) {\n        t1 = nameBuffer;\n        t2 = t1._interpolation_buffer0$_text;\n        t2._contents += H.S(midBuffer);\n        t2._contents += H.Primitives_stringFromCharCode(58);\n        return t1;\n      } else if (_this.get$indented() && _this._stylesheet0$_lookingAtInterpolatedIdentifier$0()) {\n        t1 = nameBuffer;\n        t1._interpolation_buffer0$_text._contents += H.S(midBuffer);\n        return t1;\n      }\n      postColonWhitespace = _this.rawText$1(t3);\n      if (_this.lookingAtChildren$0())\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure1($name));\n      midBuffer._contents += postColonWhitespace;\n      couldBeSelector = postColonWhitespace.length === 0 && _this._stylesheet0$_lookingAtInterpolatedIdentifier$0();\n      beforeDeclaration = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      t1.value = null;\n      try {\n        if (_this.lookingAtChildren$0()) {\n          t3 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Object);\n          t4 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n          t5 = t4.offset;\n          value = new D.StringExpression0(X.Interpolation$0(t3, Y._FileSpan$(t4.file, t5, t5)), true);\n        } else\n          value = _this.expression$0();\n        t3 = t1.value = value;\n        if (_this.lookingAtChildren$0()) {\n          if (couldBeSelector)\n            _this.expectStatementSeparator$0();\n        } else if (!_this.atEndOfStatement$0())\n          _this.expectStatementSeparator$0();\n      } catch (exception) {\n        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {\n          if (!couldBeSelector)\n            throw exception;\n          t2.set$state(beforeDeclaration);\n          additional = _this.almostAnyValue$0();\n          if (!_this.get$indented() && t2.peekChar$0() === 59)\n            throw exception;\n          nameBuffer._interpolation_buffer0$_text._contents += H.S(midBuffer);\n          nameBuffer.addInterpolation$1(additional);\n          return nameBuffer;\n        } else\n          throw exception;\n      }\n      if (_this.lookingAtChildren$0())\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__declarationOrBuffer_closure2(t1, $name));\n      else {\n        _this.expectStatementSeparator$0();\n        return L.Declaration$0($name, t2.spanFrom$1(start), null, t3);\n      }\n    },\n    _stylesheet0$_variableDeclarationOrInterpolation$0: function() {\n      var t1, start, identifier, t2, buffer, _this = this;\n      if (!_this.lookingAtIdentifier$0())\n        return _this.interpolatedIdentifier$0();\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      identifier = _this.identifier$0();\n      if (t1.matches$1(\".$\")) {\n        t1.readChar$0();\n        return _this.variableDeclarationWithoutNamespace$2(identifier, start);\n      } else {\n        t2 = new P.StringBuffer(\"\");\n        buffer = new Z.InterpolationBuffer0(t2, []);\n        t2._contents = identifier;\n        if (_this._stylesheet0$_lookingAtInterpolatedIdentifierBody$0())\n          buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        return buffer.interpolation$1(t1.spanFrom$1(start));\n      }\n    },\n    _stylesheet0$_styleRule$2: function(buffer, start) {\n      var t2, interpolation, t3, wasInStyleRule, _this = this, t1 = {};\n      t1.start = start;\n      _this._stylesheet0$_isUseAllowed = false;\n      if (start == null) {\n        t2 = _this.scanner;\n        t2 = t1.start = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      } else\n        t2 = start;\n      interpolation = t1.interpolation = _this.styleRuleSelector$0();\n      if (buffer != null) {\n        buffer.addInterpolation$1(interpolation);\n        t3 = t1.interpolation = buffer.interpolation$1(_this.scanner.spanFrom$1(t2));\n      } else\n        t3 = interpolation;\n      if (t3.contents.length === 0)\n        _this.scanner.error$1(0, 'expected \"}\".');\n      wasInStyleRule = _this._stylesheet0$_inStyleRule;\n      _this._stylesheet0$_inStyleRule = true;\n      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), t2, new V.StylesheetParser__styleRule_closure0(t1, _this, wasInStyleRule));\n    },\n    _stylesheet0$_styleRule$0: function() {\n      return this._stylesheet0$_styleRule$2(null, null);\n    },\n    _stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties: function(parseCustomProperties) {\n      var first, t3, nameBuffer, variableOrInterpolation, $name, value, _this = this,\n        _s48_ = string$.Nested,\n        t1 = {},\n        t2 = _this.scanner,\n        start = new S._SpanScannerState(t2, t2._string_scanner$_position);\n      t1.name = null;\n      first = t2.peekChar$0();\n      if (first !== 58)\n        if (first !== 42)\n          if (first !== 46)\n            t3 = first === 35 && t2.peekChar$1(1) !== 123;\n          else\n            t3 = true;\n        else\n          t3 = true;\n      else\n        t3 = true;\n      if (t3) {\n        t3 = new P.StringBuffer(\"\");\n        nameBuffer = new Z.InterpolationBuffer0(t3, []);\n        t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());\n        t3._contents += _this.rawText$1(_this.get$whitespace());\n        nameBuffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        t3 = t1.name = nameBuffer.interpolation$1(t2.spanFrom$1(start));\n      } else if (!_this.get$plainCss()) {\n        variableOrInterpolation = _this._stylesheet0$_variableDeclarationOrInterpolation$0();\n        if (variableOrInterpolation instanceof Z.VariableDeclaration0)\n          return variableOrInterpolation;\n        else {\n          type$.legacy_Interpolation_2._as(variableOrInterpolation);\n          t1.name = variableOrInterpolation;\n        }\n        t3 = variableOrInterpolation;\n      } else {\n        $name = _this.interpolatedIdentifier$0();\n        t1.name = $name;\n        t3 = $name;\n      }\n      _this.whitespace$0();\n      t2.expectChar$1(58);\n      if (parseCustomProperties && C.JSString_methods.startsWith$1(t3.get$initialPlain(), \"--\")) {\n        t1 = _this._stylesheet0$_interpolatedDeclarationValue$0();\n        _this.expectStatementSeparator$1(\"custom property\");\n        return L.Declaration$0(t3, t2.spanFrom$1(start), null, new D.StringExpression0(t1, false));\n      }\n      _this.whitespace$0();\n      if (_this.lookingAtChildren$0()) {\n        if (_this.get$plainCss())\n          t2.error$1(0, _s48_);\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure1(t1));\n      }\n      value = _this.expression$0();\n      if (_this.lookingAtChildren$0()) {\n        if (_this.get$plainCss())\n          t2.error$1(0, _s48_);\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_declarationChild(), start, new V.StylesheetParser__propertyOrVariableDeclaration_closure2(t1, value));\n      } else {\n        _this.expectStatementSeparator$0();\n        return L.Declaration$0(t3, t2.spanFrom$1(start), null, value);\n      }\n    },\n    _stylesheet0$_propertyOrVariableDeclaration$0: function() {\n      return this._stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties(true);\n    },\n    _stylesheet0$_declarationChild$0: function() {\n      if (this.scanner.peekChar$0() === 64)\n        return this._stylesheet0$_declarationAtRule$0();\n      return this._stylesheet0$_propertyOrVariableDeclaration$1$parseCustomProperties(false);\n    },\n    atRule$2$root: function(child, root) {\n      var $name, wasUseAllowed, value, optional, url, namespace, configuration, span, _this = this,\n        _s9_ = \"@use rule\",\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$2$name(64, \"@-rule\");\n      $name = _this.interpolatedIdentifier$0();\n      _this.whitespace$0();\n      wasUseAllowed = _this._stylesheet0$_isUseAllowed;\n      _this._stylesheet0$_isUseAllowed = false;\n      switch ($name.get$asPlain()) {\n        case \"at-root\":\n          return _this._stylesheet0$_atRootRule$1(start);\n        case \"charset\":\n          _this._stylesheet0$_isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._stylesheet0$_disallowedAtRule$1(start);\n          _this.string$0();\n          return null;\n        case \"content\":\n          return _this._stylesheet0$_contentRule$1(start);\n        case \"debug\":\n          return _this._stylesheet0$_debugRule$1(start);\n        case \"each\":\n          return _this._stylesheet0$_eachRule$2(start, child);\n        case \"else\":\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n        case \"error\":\n          return _this._stylesheet0$_errorRule$1(start);\n        case \"extend\":\n          if (!_this._stylesheet0$_inStyleRule && !_this._stylesheet0$_inMixin && !_this._stylesheet0$_inContentBlock)\n            _this.error$2(0, string$.x40exten, t1.spanFrom$1(start));\n          value = _this.almostAnyValue$0();\n          optional = t1.scanChar$1(33);\n          if (optional)\n            _this.expectIdentifier$1(\"optional\");\n          _this.expectStatementSeparator$1(\"@extend rule\");\n          return new X.ExtendRule0(value, optional, t1.spanFrom$1(start));\n        case \"for\":\n          return _this._stylesheet0$_forRule$2(start, child);\n        case \"forward\":\n          _this._stylesheet0$_isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._stylesheet0$_disallowedAtRule$1(start);\n          return _this._stylesheet0$_forwardRule$1(start);\n        case \"function\":\n          return _this._stylesheet0$_functionRule$1(start);\n        case \"if\":\n          return _this._stylesheet0$_ifRule$2(start, child);\n        case \"import\":\n          return _this._stylesheet0$_importRule$1(start);\n        case \"include\":\n          return _this._stylesheet0$_includeRule$1(start);\n        case \"media\":\n          return _this.mediaRule$1(start);\n        case \"mixin\":\n          return _this._stylesheet0$_mixinRule$1(start);\n        case \"-moz-document\":\n          return _this.mozDocumentRule$2(start, $name);\n        case \"return\":\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n        case \"supports\":\n          return _this.supportsRule$1(start);\n        case \"use\":\n          _this._stylesheet0$_isUseAllowed = wasUseAllowed;\n          if (!root)\n            _this._stylesheet0$_disallowedAtRule$1(start);\n          url = _this._stylesheet0$_urlString$0();\n          _this.whitespace$0();\n          namespace = _this._stylesheet0$_useNamespace$2(url, start);\n          _this.whitespace$0();\n          configuration = _this._stylesheet0$_configuration$0();\n          _this.expectStatementSeparator$1(_s9_);\n          span = t1.spanFrom$1(start);\n          if (!_this._stylesheet0$_isUseAllowed)\n            _this.error$2(0, string$.x40use_r, span);\n          _this.expectStatementSeparator$1(_s9_);\n          t1 = new T.UseRule0(url, namespace, configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2), span);\n          t1.UseRule$4$configuration0(url, namespace, span, configuration);\n          return t1;\n        case \"warn\":\n          return _this._stylesheet0$_warnRule$1(start);\n        case \"while\":\n          return _this._stylesheet0$_whileRule$2(start, child);\n        default:\n          return _this.unknownAtRule$2(start, $name);\n      }\n    },\n    _stylesheet0$_declarationAtRule$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      switch (_this._stylesheet0$_plainAtRuleName$0()) {\n        case \"content\":\n          return _this._stylesheet0$_contentRule$1(start);\n        case \"debug\":\n          return _this._stylesheet0$_debugRule$1(start);\n        case \"each\":\n          return _this._stylesheet0$_eachRule$2(start, _this.get$_stylesheet0$_declarationChild());\n        case \"else\":\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n        case \"error\":\n          return _this._stylesheet0$_errorRule$1(start);\n        case \"for\":\n          return _this._stylesheet0$_forRule$2(start, _this.get$_stylesheet0$_declarationAtRule());\n        case \"if\":\n          return _this._stylesheet0$_ifRule$2(start, _this.get$_stylesheet0$_declarationChild());\n        case \"include\":\n          return _this._stylesheet0$_includeRule$1(start);\n        case \"warn\":\n          return _this._stylesheet0$_warnRule$1(start);\n        case \"while\":\n          return _this._stylesheet0$_whileRule$2(start, _this.get$_stylesheet0$_declarationChild());\n        default:\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n      }\n    },\n    _stylesheet0$_functionChild$0: function() {\n      var state, variableDeclarationError, statement, t2, namespace, exception, t3, start, value, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() !== 64) {\n        t2 = t1._string_scanner$_position;\n        state = new S._SpanScannerState(t1, t2);\n        try {\n          namespace = _this.identifier$0();\n          t1.expectChar$1(46);\n          t2 = _this.variableDeclarationWithoutNamespace$2(namespace, new S._SpanScannerState(t1, t2));\n          return t2;\n        } catch (exception) {\n          t2 = H.unwrapException(exception);\n          t3 = type$.legacy_SourceSpanFormatException;\n          if (t3._is(t2)) {\n            variableDeclarationError = t2;\n            t1.set$state(state);\n            statement = null;\n            try {\n              statement = _this._stylesheet0$_declarationOrStyleRule$0();\n            } catch (exception) {\n              if (t3._is(H.unwrapException(exception)))\n                throw H.wrapException(variableDeclarationError);\n              else\n                throw exception;\n            }\n            _this.error$2(0, \"@function rules may not contain \" + (statement instanceof X.StyleRule0 ? \"style rules\" : \"declarations\") + \".\", statement.get$span());\n          } else\n            throw exception;\n        }\n      }\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      switch (_this._stylesheet0$_plainAtRuleName$0()) {\n        case \"debug\":\n          return _this._stylesheet0$_debugRule$1(start);\n        case \"each\":\n          return _this._stylesheet0$_eachRule$2(start, _this.get$_stylesheet0$_functionChild());\n        case \"else\":\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n        case \"error\":\n          return _this._stylesheet0$_errorRule$1(start);\n        case \"for\":\n          return _this._stylesheet0$_forRule$2(start, _this.get$_stylesheet0$_functionChild());\n        case \"if\":\n          return _this._stylesheet0$_ifRule$2(start, _this.get$_stylesheet0$_functionChild());\n        case \"return\":\n          value = _this.expression$0();\n          _this.expectStatementSeparator$1(\"@return rule\");\n          return new B.ReturnRule0(value, t1.spanFrom$1(start));\n        case \"warn\":\n          return _this._stylesheet0$_warnRule$1(start);\n        case \"while\":\n          return _this._stylesheet0$_whileRule$2(start, _this.get$_stylesheet0$_functionChild());\n        default:\n          return _this._stylesheet0$_disallowedAtRule$1(start);\n      }\n    },\n    _stylesheet0$_plainAtRuleName$0: function() {\n      this.scanner.expectChar$2$name(64, \"@-rule\");\n      var $name = this.identifier$0();\n      this.whitespace$0();\n      return $name;\n    },\n    _stylesheet0$_atRootRule$1: function(start) {\n      var query, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 40) {\n        query = _this._stylesheet0$_atRootQuery$0();\n        _this.whitespace$0();\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__atRootRule_closure1(query));\n      } else if (_this.lookingAtChildren$0())\n        return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__atRootRule_closure2());\n      else\n        return V.AtRootRule$0(H.setRuntimeTypeInfo([_this._stylesheet0$_styleRule$0()], type$.JSArray_legacy_Statement_2), t1.spanFrom$1(start), null);\n    },\n    _stylesheet0$_atRootQuery$0: function() {\n      var interpolation, t2, t3, t4, buffer, t5, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 35) {\n        interpolation = _this.singleInterpolation$0();\n        return X.Interpolation$0(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());\n      }\n      t2 = t1._string_scanner$_position;\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      t1.expectChar$1(40);\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      _this.whitespace$0();\n      t5 = _this.expression$0();\n      buffer._interpolation_buffer0$_flushText$0();\n      t4.push(t5);\n      if (t1.scanChar$1(58)) {\n        _this.whitespace$0();\n        t3._contents += H.Primitives_stringFromCharCode(58);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n        t5 = _this.expression$0();\n        buffer._interpolation_buffer0$_flushText$0();\n        t4.push(t5);\n      }\n      t1.expectChar$1(41);\n      _this.whitespace$0();\n      t3._contents += H.Primitives_stringFromCharCode(41);\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_contentRule$1: function(start) {\n      var t1, $arguments, t2, t3, _this = this;\n      if (!_this._stylesheet0$_inMixin)\n        _this.error$2(0, string$.x40conte, _this.scanner.spanFrom$1(start));\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      if (t1.peekChar$0() === 40)\n        $arguments = _this._stylesheet0$_argumentInvocation$1$mixin(true);\n      else {\n        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);\n        t3 = t2.offset;\n        $arguments = X.ArgumentInvocation$empty0(Y._FileSpan$(t2.file, t3, t3));\n      }\n      _this._stylesheet0$_mixinHasContent = true;\n      _this.expectStatementSeparator$1(\"@content rule\");\n      return new Q.ContentRule0(t1.spanFrom$1(start), $arguments);\n    },\n    _stylesheet0$_debugRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@debug rule\");\n      return new Q.DebugRule0(value, this.scanner.spanFrom$1(start));\n    },\n    _stylesheet0$_eachRule$2: function(start, child) {\n      var variables, t1, _this = this,\n        wasInControlDirective = _this._stylesheet0$_inControlDirective;\n      _this._stylesheet0$_inControlDirective = true;\n      variables = H.setRuntimeTypeInfo([_this.variableName$0()], type$.JSArray_legacy_String);\n      _this.whitespace$0();\n      for (t1 = _this.scanner; t1.scanChar$1(44);) {\n        _this.whitespace$0();\n        t1.expectChar$1(36);\n        variables.push(_this.identifier$1$normalize(true));\n        _this.whitespace$0();\n      }\n      _this.expectIdentifier$1(\"in\");\n      _this.whitespace$0();\n      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__eachRule_closure0(_this, wasInControlDirective, variables, _this.expression$0()));\n    },\n    _stylesheet0$_errorRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@error rule\");\n      return new D.ErrorRule0(value, this.scanner.spanFrom$1(start));\n    },\n    _stylesheet0$_functionRule$1: function(start) {\n      var $name, $arguments, _this = this,\n        precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      $name = _this.identifier$1$normalize(true);\n      _this.whitespace$0();\n      $arguments = _this._stylesheet0$_argumentDeclaration$0();\n      if (_this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock)\n        _this.error$2(0, string$.Mixinscf, _this.scanner.spanFrom$1(start));\n      else if (_this._stylesheet0$_inControlDirective)\n        _this.error$2(0, string$.Functi, _this.scanner.spanFrom$1(start));\n      switch (B.unvendor0($name)) {\n        case \"calc\":\n        case \"element\":\n        case \"expression\":\n        case \"url\":\n        case \"and\":\n        case \"or\":\n        case \"not\":\n          _this.error$2(0, \"Invalid function name.\", _this.scanner.spanFrom$1(start));\n          break;\n      }\n      _this.whitespace$0();\n      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_functionChild(), start, new V.StylesheetParser__functionRule_closure0($name, $arguments, precedingComment));\n    },\n    _stylesheet0$_forRule$2: function(start, child) {\n      var variable, from, _this = this, t1 = {},\n        wasInControlDirective = _this._stylesheet0$_inControlDirective;\n      _this._stylesheet0$_inControlDirective = true;\n      variable = _this.variableName$0();\n      _this.whitespace$0();\n      _this.expectIdentifier$1(\"from\");\n      _this.whitespace$0();\n      t1.exclusive = null;\n      from = _this.expression$1$until(new V.StylesheetParser__forRule_closure1(t1, _this));\n      if (t1.exclusive == null)\n        _this.scanner.error$1(0, 'Expected \"to\" or \"through\".');\n      _this.whitespace$0();\n      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__forRule_closure2(t1, _this, wasInControlDirective, variable, from, _this.expression$0()));\n    },\n    _stylesheet0$_forwardRule$1: function(start) {\n      var prefix, members, shownMixinsAndFunctions, shownVariables, hiddenVariables, hiddenMixinsAndFunctions, configuration, span, t1, t2, t3, t4, _this = this, _null = null,\n        url = _this._stylesheet0$_urlString$0();\n      _this.whitespace$0();\n      if (_this.scanIdentifier$1(\"as\")) {\n        _this.whitespace$0();\n        prefix = _this.identifier$1$normalize(true);\n        _this.scanner.expectChar$1(42);\n        _this.whitespace$0();\n      } else\n        prefix = _null;\n      if (_this.scanIdentifier$1(\"show\")) {\n        members = _this._stylesheet0$_memberList$0();\n        shownMixinsAndFunctions = members.item1;\n        shownVariables = members.item2;\n        hiddenVariables = _null;\n        hiddenMixinsAndFunctions = hiddenVariables;\n      } else {\n        if (_this.scanIdentifier$1(\"hide\")) {\n          members = _this._stylesheet0$_memberList$0();\n          hiddenMixinsAndFunctions = members.item1;\n          hiddenVariables = members.item2;\n        } else {\n          hiddenVariables = _null;\n          hiddenMixinsAndFunctions = hiddenVariables;\n        }\n        shownVariables = _null;\n        shownMixinsAndFunctions = shownVariables;\n      }\n      configuration = _this._stylesheet0$_configuration$1$allowGuarded(true);\n      _this.expectStatementSeparator$1(\"@forward rule\");\n      span = _this.scanner.spanFrom$1(start);\n      if (!_this._stylesheet0$_isUseAllowed)\n        _this.error$2(0, string$.x40forwa, span);\n      if (shownMixinsAndFunctions != null) {\n        t1 = type$.legacy_String;\n        t2 = P.LinkedHashSet_LinkedHashSet$of(shownMixinsAndFunctions, t1);\n        t3 = type$.UnmodifiableSetView_legacy_String;\n        t1 = P.LinkedHashSet_LinkedHashSet$of(shownVariables, t1);\n        t4 = configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2);\n        return new L.ForwardRule0(url, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), _null, _null, prefix, t4, span);\n      } else if (hiddenMixinsAndFunctions != null) {\n        t1 = type$.legacy_String;\n        t2 = P.LinkedHashSet_LinkedHashSet$of(hiddenMixinsAndFunctions, t1);\n        t3 = type$.UnmodifiableSetView_legacy_String;\n        t1 = P.LinkedHashSet_LinkedHashSet$of(hiddenVariables, t1);\n        t4 = configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2);\n        return new L.ForwardRule0(url, _null, _null, new L.UnmodifiableSetView(t2, t3), new L.UnmodifiableSetView(t1, t3), prefix, t4, span);\n      } else\n        return new L.ForwardRule0(url, _null, _null, _null, _null, prefix, configuration == null ? C.List_empty18 : P.List_List$unmodifiable(configuration, type$.legacy_ConfiguredVariable_2), span);\n    },\n    _stylesheet0$_memberList$0: function() {\n      var _this = this,\n        t1 = type$.legacy_String,\n        identifiers = P.LinkedHashSet_LinkedHashSet$_empty(t1),\n        variables = P.LinkedHashSet_LinkedHashSet$_empty(t1);\n      t1 = _this.scanner;\n      do {\n        _this.whitespace$0();\n        _this.withErrorMessage$2(string$.Expect, new V.StylesheetParser__memberList_closure0(_this, variables, identifiers));\n        _this.whitespace$0();\n      } while (t1.scanChar$1(44));\n      return new S.Tuple2(identifiers, variables, type$.Tuple2_of_legacy_Set_legacy_String_and_legacy_Set_legacy_String);\n    },\n    _stylesheet0$_ifRule$2: function(start, child) {\n      var condition, children, clauses, lastClause, span, _this = this,\n        ifIndentation = _this.get$currentIndentation(),\n        wasInControlDirective = _this._stylesheet0$_inControlDirective;\n      _this._stylesheet0$_inControlDirective = true;\n      condition = _this.expression$0();\n      children = _this.children$1(0, child);\n      _this.whitespaceWithoutComments$0();\n      clauses = H.setRuntimeTypeInfo([V.IfClause$0(condition, children)], type$.JSArray_legacy_IfClause_2);\n      while (true) {\n        if (!_this.scanElse$1(ifIndentation)) {\n          lastClause = null;\n          break;\n        }\n        _this.whitespace$0();\n        if (_this.scanIdentifier$1(\"if\")) {\n          _this.whitespace$0();\n          clauses.push(V.IfClause$0(_this.expression$0(), _this.children$1(0, child)));\n        } else {\n          lastClause = V.IfClause$last0(_this.children$1(0, child));\n          break;\n        }\n      }\n      _this._stylesheet0$_inControlDirective = wasInControlDirective;\n      span = _this.scanner.spanFrom$1(start);\n      _this.whitespaceWithoutComments$0();\n      return new V.IfRule0(P.List_List$unmodifiable(clauses, type$.legacy_IfClause_2), lastClause, span);\n    },\n    _stylesheet0$_importRule$1: function(start) {\n      var argument, _this = this,\n        imports = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Import_2),\n        t1 = _this.scanner;\n      do {\n        _this.whitespace$0();\n        argument = _this.importArgument$0();\n        if ((_this._stylesheet0$_inControlDirective || _this._stylesheet0$_inMixin) && argument instanceof B.DynamicImport0)\n          _this._stylesheet0$_disallowedAtRule$1(start);\n        imports.push(argument);\n        _this.whitespace$0();\n      } while (t1.scanChar$1(44));\n      _this.expectStatementSeparator$1(\"@import rule\");\n      t1 = t1.spanFrom$1(start);\n      return new B.ImportRule0(P.List_List$unmodifiable(imports, type$.legacy_Import_2), t1);\n    },\n    importArgument$0: function() {\n      var url, urlSpan, innerError, queries, t2, t3, t4, exception, _this = this, _null = null,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        next = t1.peekChar$0();\n      if (next === 117 || next === 85) {\n        url = _this.dynamicUrl$0();\n        _this.whitespace$0();\n        queries = _this.tryImportQueries$0();\n        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([url], type$.JSArray_legacy_Object), t1.spanFrom$1(start));\n        t1 = t1.spanFrom$1(start);\n        t3 = queries == null;\n        t4 = t3 ? _null : queries.item1;\n        return new Q.StaticImport0(t2, t4, t3 ? _null : queries.item2, t1);\n      }\n      url = _this.string$0();\n      urlSpan = t1.spanFrom$1(start);\n      _this.whitespace$0();\n      queries = _this.tryImportQueries$0();\n      if (_this.isPlainImportUrl$1(url) || queries != null) {\n        t2 = urlSpan;\n        t2 = X.Interpolation$0(H.setRuntimeTypeInfo([P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, _null)], type$.JSArray_legacy_Object), urlSpan);\n        t1 = t1.spanFrom$1(start);\n        t3 = queries == null;\n        t4 = t3 ? _null : queries.item1;\n        return new Q.StaticImport0(t2, t4, t3 ? _null : queries.item2, t1);\n      } else\n        try {\n          t1 = _this.parseImportUrl$1(url);\n          return new B.DynamicImport0(t1, urlSpan);\n        } catch (exception) {\n          t1 = H.unwrapException(exception);\n          if (type$.legacy_FormatException._is(t1)) {\n            innerError = t1;\n            _this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), urlSpan);\n          } else\n            throw exception;\n        }\n    },\n    parseImportUrl$1: function(url) {\n      var t1 = $.$get$windows();\n      if (t1.style.rootLength$1(url) > 0)\n        return t1.toUri$1(url).toString$0(0);\n      P.Uri_parse(url);\n      return url;\n    },\n    isPlainImportUrl$1: function(url) {\n      var first;\n      if (url.length < 5)\n        return false;\n      if (C.JSString_methods.endsWith$1(url, \".css\"))\n        return true;\n      first = C.JSString_methods._codeUnitAt$1(url, 0);\n      if (first === 47)\n        return C.JSString_methods._codeUnitAt$1(url, 1) === 47;\n      if (first !== 104)\n        return false;\n      return C.JSString_methods.startsWith$1(url, \"http://\") || C.JSString_methods.startsWith$1(url, \"https://\");\n    },\n    tryImportQueries$0: function() {\n      var t1, start, supports, $name, media, _this = this;\n      if (_this.scanIdentifier$1(\"supports\")) {\n        t1 = _this.scanner;\n        t1.expectChar$1(40);\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n        if (_this.scanIdentifier$1(\"not\")) {\n          _this.whitespace$0();\n          supports = new M.SupportsNegation0(_this._stylesheet0$_supportsConditionInParens$0(), t1.spanFrom$1(start));\n        } else if (t1.peekChar$0() === 40)\n          supports = _this._stylesheet0$_supportsCondition$0();\n        else {\n          $name = _this.expression$0();\n          t1.expectChar$1(58);\n          _this.whitespace$0();\n          supports = new L.SupportsDeclaration0($name, _this.expression$0(), t1.spanFrom$1(start));\n        }\n        t1.expectChar$1(41);\n        _this.whitespace$0();\n      } else\n        supports = null;\n      media = _this._stylesheet0$_lookingAtInterpolatedIdentifier$0() || _this.scanner.peekChar$0() === 40 ? _this._stylesheet0$_mediaQueryList$0() : null;\n      if (supports == null && media == null)\n        return null;\n      return new S.Tuple2(supports, media, type$.Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation_2);\n    },\n    _stylesheet0$_includeRule$1: function(start) {\n      var name0, namespace, $arguments, t3, t4, wasInContentBlock, $content, _this = this, _null = null, t1 = {},\n        $name = _this.identifier$0(),\n        t2 = _this.scanner;\n      if (t2.scanChar$1(46)) {\n        name0 = _this._stylesheet0$_publicIdentifier$0();\n        namespace = $name;\n        $name = name0;\n      } else {\n        $name = H.stringReplaceAllUnchecked($name, \"_\", \"-\");\n        namespace = _null;\n      }\n      _this.whitespace$0();\n      if (t2.peekChar$0() === 40)\n        $arguments = _this._stylesheet0$_argumentInvocation$1$mixin(true);\n      else {\n        t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n        t4 = t3.offset;\n        $arguments = X.ArgumentInvocation$empty0(Y._FileSpan$(t3.file, t4, t4));\n      }\n      _this.whitespace$0();\n      t1.contentArguments = null;\n      if (_this.scanIdentifier$1(\"using\")) {\n        _this.whitespace$0();\n        t3 = t1.contentArguments = _this._stylesheet0$_argumentDeclaration$0();\n        _this.whitespace$0();\n      } else\n        t3 = _null;\n      t3 = t3 == null;\n      if (!t3 || _this.lookingAtChildren$0()) {\n        if (t3) {\n          t3 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n          t4 = t3.offset;\n          t1.contentArguments = new B.ArgumentDeclaration0(C.List_empty20, _null, Y._FileSpan$(t3.file, t4, t4));\n        }\n        wasInContentBlock = _this._stylesheet0$_inContentBlock;\n        _this._stylesheet0$_inContentBlock = true;\n        $content = _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__includeRule_closure0(t1));\n        _this._stylesheet0$_inContentBlock = wasInContentBlock;\n      } else {\n        _this.expectStatementSeparator$0();\n        $content = _null;\n      }\n      t1 = t2.spanFrom$2(start, start);\n      return new A.IncludeRule0(namespace, $name, $arguments, $content, t1.expand$1(0, ($content == null ? $arguments : $content).get$span()));\n    },\n    mediaRule$1: function(start) {\n      return this._stylesheet0$_withChildren$3(this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_mediaRule_closure0(this._stylesheet0$_mediaQueryList$0()));\n    },\n    _stylesheet0$_mixinRule$1: function(start) {\n      var $name, t1, $arguments, t2, t3, _this = this,\n        precedingComment = _this.lastSilentComment;\n      _this.lastSilentComment = null;\n      $name = _this.identifier$1$normalize(true);\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      if (t1.peekChar$0() === 40)\n        $arguments = _this._stylesheet0$_argumentDeclaration$0();\n      else {\n        t2 = Y.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);\n        t3 = t2.offset;\n        $arguments = new B.ArgumentDeclaration0(C.List_empty20, null, Y._FileSpan$(t2.file, t3, t3));\n      }\n      if (_this._stylesheet0$_inMixin || _this._stylesheet0$_inContentBlock)\n        _this.error$2(0, string$.Mixinscm, t1.spanFrom$1(start));\n      else if (_this._stylesheet0$_inControlDirective)\n        _this.error$2(0, string$.Mixinsb, t1.spanFrom$1(start));\n      _this.whitespace$0();\n      _this._stylesheet0$_inMixin = true;\n      _this._stylesheet0$_mixinHasContent = false;\n      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser__mixinRule_closure0(_this, $name, $arguments, precedingComment));\n    },\n    mozDocumentRule$2: function(start, $name) {\n      var t5, t6, identifier, contents, argument, trailing, endPosition, t7, t8, start0, end, _this = this, _box_0 = {},\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        t4 = [],\n        buffer = new Z.InterpolationBuffer0(t3, t4);\n      _box_0.needsDeprecationWarning = false;\n      for (t5 = _this.get$whitespace(); true;) {\n        if (t1.peekChar$0() === 35) {\n          t6 = _this.singleInterpolation$0();\n          buffer._interpolation_buffer0$_flushText$0();\n          t4.push(t6);\n          _box_0.needsDeprecationWarning = true;\n        } else {\n          t6 = t1._string_scanner$_position;\n          identifier = _this.identifier$0();\n          switch (identifier) {\n            case \"url\":\n            case \"url-prefix\":\n            case \"domain\":\n              contents = _this._stylesheet0$_tryUrlContents$2$name(new S._SpanScannerState(t1, t6), identifier);\n              if (contents != null)\n                buffer.addInterpolation$1(contents);\n              else {\n                t1.expectChar$1(40);\n                _this.whitespace$0();\n                argument = _this.interpolatedString$0();\n                t1.expectChar$1(41);\n                t3._contents += identifier;\n                t3._contents += H.Primitives_stringFromCharCode(40);\n                buffer.addInterpolation$1(argument.asInterpolation$0());\n                t3._contents += H.Primitives_stringFromCharCode(41);\n              }\n              t6 = t3._contents;\n              trailing = t6.charCodeAt(0) == 0 ? t6 : t6;\n              if (!C.JSString_methods.endsWith$1(trailing, \"url-prefix()\") && !C.JSString_methods.endsWith$1(trailing, \"url-prefix('')\") && !C.JSString_methods.endsWith$1(trailing, 'url-prefix(\"\")'))\n                _box_0.needsDeprecationWarning = true;\n              break;\n            case \"regexp\":\n              t3._contents += \"regexp(\";\n              t1.expectChar$1(40);\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              t1.expectChar$1(41);\n              t3._contents += H.Primitives_stringFromCharCode(41);\n              _box_0.needsDeprecationWarning = true;\n              break;\n            default:\n              endPosition = t1._string_scanner$_position;\n              t7 = t1._sourceFile;\n              t8 = new Y._FileSpan(t7, t6, endPosition);\n              t8._FileSpan$3(t7, t6, endPosition);\n              _this.error$2(0, \"Invalid function name.\", t8);\n          }\n        }\n        _this.whitespace$0();\n        if (!t1.scanChar$1(44))\n          break;\n        t3._contents += H.Primitives_stringFromCharCode(44);\n        start0 = t1._string_scanner$_position;\n        t5.call$0();\n        end = t1._string_scanner$_position;\n        t3._contents += J.substring$2$s(t1.string, start0, end);\n      }\n      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_mozDocumentRule_closure0(_box_0, _this, $name, buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)))));\n    },\n    supportsRule$1: function(start) {\n      var _this = this,\n        condition = _this._stylesheet0$_supportsCondition$0();\n      _this.whitespace$0();\n      return _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_supportsRule_closure0(condition));\n    },\n    _stylesheet0$_useNamespace$2: function(url, start) {\n      var namespace, basename, dot, t1, exception, _this = this;\n      if (_this.scanIdentifier$1(\"as\")) {\n        _this.whitespace$0();\n        return _this.scanner.scanChar$1(42) ? null : _this.identifier$0();\n      }\n      basename = url.get$pathSegments().length === 0 ? \"\" : C.JSArray_methods.get$last(url.get$pathSegments());\n      dot = J.getInterceptor$asx(basename).indexOf$1(basename, \".\");\n      t1 = C.JSString_methods.startsWith$1(basename, \"_\") ? 1 : 0;\n      namespace = C.JSString_methods.substring$2(basename, t1, dot === -1 ? basename.length : dot);\n      try {\n        t1 = S.SpanScanner$(namespace, null);\n        t1 = new G.Parser1(t1, _this.logger)._parser$_parseIdentifier$0();\n        return t1;\n      } catch (exception) {\n        if (H.unwrapException(exception) instanceof E.SassFormatException0)\n          _this.error$2(0, 'Invalid Sass identifier \"' + H.S(namespace) + '\"', _this.scanner.spanFrom$1(start));\n        else\n          throw exception;\n      }\n    },\n    _stylesheet0$_configuration$1$allowGuarded: function(allowGuarded) {\n      var variableNames, configuration, t1, t2, $name, expression, t3, guarded, endPosition, t4, t5, span, _this = this;\n      if (!_this.scanIdentifier$1(\"with\"))\n        return null;\n      variableNames = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      configuration = H.setRuntimeTypeInfo([], type$.JSArray_legacy_ConfiguredVariable_2);\n      _this.whitespace$0();\n      t1 = _this.scanner;\n      t1.expectChar$1(40);\n      for (; true;) {\n        _this.whitespace$0();\n        t2 = t1._string_scanner$_position;\n        t1.expectChar$1(36);\n        $name = _this.identifier$1$normalize(true);\n        _this.whitespace$0();\n        t1.expectChar$1(58);\n        _this.whitespace$0();\n        expression = _this._stylesheet0$_expressionUntilComma$0();\n        t3 = t1._string_scanner$_position;\n        if (allowGuarded && t1.scanChar$1(33))\n          if (_this.identifier$0() === \"default\")\n            guarded = true;\n          else {\n            endPosition = t1._string_scanner$_position;\n            t4 = t1._sourceFile;\n            t5 = new Y._FileSpan(t4, t3, endPosition);\n            t5._FileSpan$3(t4, t3, endPosition);\n            _this.error$2(0, \"Invalid flag name.\", t5);\n            guarded = false;\n          }\n        else\n          guarded = false;\n        endPosition = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        span = new Y._FileSpan(t3, t2, endPosition);\n        span._FileSpan$3(t3, t2, endPosition);\n        if (variableNames.contains$1(0, $name))\n          _this.error$2(0, string$.The_sa, span);\n        variableNames.add$1(0, $name);\n        configuration.push(new Z.ConfiguredVariable0($name, expression, guarded, span));\n        if (!t1.scanChar$1(44))\n          break;\n        _this.whitespace$0();\n        if (!_this._stylesheet0$_lookingAtExpression$0())\n          break;\n      }\n      t1.expectChar$1(41);\n      return configuration;\n    },\n    _stylesheet0$_configuration$0: function() {\n      return this._stylesheet0$_configuration$1$allowGuarded(false);\n    },\n    _stylesheet0$_warnRule$1: function(start) {\n      var value = this.expression$0();\n      this.expectStatementSeparator$1(\"@warn rule\");\n      return new Y.WarnRule0(value, this.scanner.spanFrom$1(start));\n    },\n    _stylesheet0$_whileRule$2: function(start, child) {\n      var _this = this,\n        wasInControlDirective = _this._stylesheet0$_inControlDirective;\n      _this._stylesheet0$_inControlDirective = true;\n      return _this._stylesheet0$_withChildren$3(child, start, new V.StylesheetParser__whileRule_closure0(_this, wasInControlDirective, _this.expression$0()));\n    },\n    unknownAtRule$2: function(start, $name) {\n      var t2, t3, rule, _this = this, t1 = {},\n        wasInUnknownAtRule = _this._stylesheet0$_inUnknownAtRule;\n      _this._stylesheet0$_inUnknownAtRule = true;\n      t1.value = null;\n      t2 = _this.scanner;\n      t3 = t2.peekChar$0() !== 33 && !_this.atEndOfStatement$0() ? t1.value = _this.almostAnyValue$0() : null;\n      if (_this.lookingAtChildren$0())\n        rule = _this._stylesheet0$_withChildren$3(_this.get$_stylesheet0$_statement(), start, new V.StylesheetParser_unknownAtRule_closure0(t1, $name));\n      else {\n        _this.expectStatementSeparator$0();\n        rule = U.AtRule$0($name, t2.spanFrom$1(start), null, t3);\n      }\n      _this._stylesheet0$_inUnknownAtRule = wasInUnknownAtRule;\n      return rule;\n    },\n    _stylesheet0$_disallowedAtRule$1: function(start) {\n      this.almostAnyValue$0();\n      this.error$2(0, \"This at-rule is not allowed here.\", this.scanner.spanFrom$1(start));\n    },\n    _stylesheet0$_argumentDeclaration$0: function() {\n      var $arguments, named, restArgument, t3, $name, defaultValue, endPosition, t4, t5, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      $arguments = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Argument_2);\n      named = P.LinkedHashSet_LinkedHashSet$_empty(type$.legacy_String);\n      while (true) {\n        if (!(t1.peekChar$0() === 36)) {\n          restArgument = null;\n          break;\n        }\n        t3 = t1._string_scanner$_position;\n        t1.expectChar$1(36);\n        $name = _this.identifier$1$normalize(true);\n        _this.whitespace$0();\n        if (t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          defaultValue = _this._stylesheet0$_expressionUntilComma$0();\n        } else {\n          if (t1.scanChar$1(46)) {\n            t1.expectChar$1(46);\n            t1.expectChar$1(46);\n            _this.whitespace$0();\n            restArgument = $name;\n            break;\n          }\n          defaultValue = null;\n        }\n        endPosition = t1._string_scanner$_position;\n        t4 = t1._sourceFile;\n        t5 = new Y._FileSpan(t4, t3, endPosition);\n        t5._FileSpan$3(t4, t3, endPosition);\n        $arguments.push(new Z.Argument0($name, defaultValue, t5));\n        if (!named.add$1(0, $name))\n          _this.error$2(0, \"Duplicate argument.\", C.JSArray_methods.get$last($arguments).span);\n        if (!t1.scanChar$1(44)) {\n          restArgument = null;\n          break;\n        }\n        _this.whitespace$0();\n      }\n      t1.expectChar$1(41);\n      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new B.ArgumentDeclaration0(P.List_List$unmodifiable($arguments, type$.legacy_Argument_2), restArgument, t1);\n    },\n    _stylesheet0$_argumentInvocation$1$mixin: function(mixin) {\n      var positional, t3, t4, named, keywordRest, t5, rest, expression, t6, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      positional = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n      t3 = type$.legacy_String;\n      t4 = type$.legacy_Expression_2;\n      named = P.LinkedHashMap_LinkedHashMap$_empty(t3, t4);\n      t5 = !mixin;\n      rest = null;\n      while (true) {\n        if (!_this._stylesheet0$_lookingAtExpression$0()) {\n          keywordRest = null;\n          break;\n        }\n        expression = _this._stylesheet0$_expressionUntilComma$1$singleEquals(t5);\n        _this.whitespace$0();\n        if (expression instanceof S.VariableExpression0 && t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          t6 = expression.name;\n          if (named.containsKey$1(t6))\n            _this.error$2(0, \"Duplicate argument.\", expression.span);\n          named.$indexSet(0, t6, _this._stylesheet0$_expressionUntilComma$1$singleEquals(t5));\n        } else if (t1.scanChar$1(46)) {\n          t1.expectChar$1(46);\n          t1.expectChar$1(46);\n          if (rest != null) {\n            _this.whitespace$0();\n            keywordRest = expression;\n            break;\n          }\n          rest = expression;\n        } else if (named.get$isNotEmpty(named))\n          _this.error$2(0, string$.Positi, expression.get$span());\n        else\n          positional.push(expression);\n        _this.whitespace$0();\n        if (!t1.scanChar$1(44)) {\n          keywordRest = null;\n          break;\n        }\n        _this.whitespace$0();\n      }\n      t1.expectChar$1(41);\n      t1 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new X.ArgumentInvocation0(P.List_List$unmodifiable(positional, t4), H.ConstantMap_ConstantMap$from(named, t3, t4), rest, keywordRest, t1);\n    },\n    _stylesheet0$_argumentInvocation$0: function() {\n      return this._stylesheet0$_argumentInvocation$1$mixin(false);\n    },\n    expression$3$bracketList$singleEquals$until: function(bracketList, singleEquals, until) {\n      var t2, beforeBracket, t3, wasInParentheses, resetState, resolveOneOperation, resolveOperations, addSingleExpression, addOperator, resolveSpaceExpressions, first, next, t4, _this = this,\n        _s20_ = \"Expected expression.\",\n        _box_0 = {},\n        t1 = until != null;\n      if (t1 && until.call$0())\n        _this.scanner.error$1(0, _s20_);\n      if (bracketList) {\n        t2 = _this.scanner;\n        beforeBracket = new S._SpanScannerState(t2, t2._string_scanner$_position);\n        t2.expectChar$1(91);\n        _this.whitespace$0();\n        if (t2.scanChar$1(93))\n          return D.ListExpression$0(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2), C.ListSeparator_undecided0, true, t2.spanFrom$1(beforeBracket));\n      } else\n        beforeBracket = null;\n      t2 = _this.scanner;\n      t3 = t2._string_scanner$_position;\n      wasInParentheses = _this._stylesheet0$_inParentheses;\n      _box_0.operands = _box_0.operators = _box_0.spaceExpressions = _box_0.commaExpressions = null;\n      _box_0.allowSlash = _this.lookingAtNumber$0();\n      _box_0.singleExpression = _this._stylesheet0$_singleExpression$0();\n      resetState = new V.StylesheetParser_expression_resetState0(_box_0, _this, new S._SpanScannerState(t2, t3));\n      resolveOneOperation = new V.StylesheetParser_expression_resolveOneOperation0(_box_0, _this);\n      resolveOperations = new V.StylesheetParser_expression_resolveOperations0(_box_0, resolveOneOperation);\n      addSingleExpression = new V.StylesheetParser_expression_addSingleExpression0(_box_0, _this, resetState, resolveOperations);\n      addOperator = new V.StylesheetParser_expression_addOperator0(_box_0, _this, resolveOneOperation);\n      resolveSpaceExpressions = new V.StylesheetParser_expression_resolveSpaceExpressions0(_box_0, resolveOperations);\n      $label0$0:\n        for (t3 = type$.JSArray_legacy_Expression_2; true;) {\n          _this.whitespace$0();\n          if (t1 && until.call$0())\n            break $label0$0;\n          first = t2.peekChar$0();\n          switch (first) {\n            case 40:\n              addSingleExpression.call$1(_this._stylesheet0$_parentheses$0());\n              break;\n            case 91:\n              addSingleExpression.call$1(_this.expression$1$bracketList(true));\n              break;\n            case 36:\n              addSingleExpression.call$1(_this._stylesheet0$_variable$0());\n              break;\n            case 38:\n              addSingleExpression.call$1(_this._stylesheet0$_selector$0());\n              break;\n            case 39:\n            case 34:\n              addSingleExpression.call$1(_this.interpolatedString$0());\n              break;\n            case 35:\n              addSingleExpression.call$1(_this._stylesheet0$_hashExpression$0());\n              break;\n            case 61:\n              t2.readChar$0();\n              if (singleEquals && t2.peekChar$0() !== 61)\n                addOperator.call$1(C.BinaryOperator_kjl0);\n              else {\n                t2.expectChar$1(61);\n                addOperator.call$1(C.BinaryOperator_YlX0);\n              }\n              break;\n            case 33:\n              next = t2.peekChar$1(1);\n              if (next === 61) {\n                t2.readChar$0();\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_i5H0);\n              } else {\n                if (next != null)\n                  if ((next | 32) !== 105)\n                    t4 = next === 32 || next === 9 || next === 10 || next === 13 || next === 12;\n                  else\n                    t4 = true;\n                else\n                  t4 = true;\n                if (t4)\n                  addSingleExpression.call$1(_this._stylesheet0$_importantExpression$0());\n                else\n                  break $label0$0;\n              }\n              break;\n            case 60:\n              t2.readChar$0();\n              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_33h0 : C.BinaryOperator_8qt0);\n              break;\n            case 62:\n              t2.readChar$0();\n              addOperator.call$1(t2.scanChar$1(61) ? C.BinaryOperator_1da0 : C.BinaryOperator_AcR1);\n              break;\n            case 42:\n              t2.readChar$0();\n              addOperator.call$1(C.BinaryOperator_O1M0);\n              break;\n            case 43:\n              if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_AcR2);\n              }\n              break;\n            case 45:\n              next = t2.peekChar$1(1);\n              if (next != null && next >= 48 && next <= 57 || next === 46)\n                if (_box_0.singleExpression != null) {\n                  t4 = t2.peekChar$1(-1);\n                  t4 = t4 === 32 || t4 === 9 || t4 === 10 || t4 === 13 || t4 === 12;\n                } else\n                  t4 = true;\n              else\n                t4 = false;\n              if (t4)\n                addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);\n              else if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())\n                addSingleExpression.call$1(_this.identifierLike$0());\n              else if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_iyO0);\n              }\n              break;\n            case 47:\n              if (_box_0.singleExpression == null)\n                addSingleExpression.call$1(_this._stylesheet0$_unaryOperation$0());\n              else {\n                t2.readChar$0();\n                addOperator.call$1(C.BinaryOperator_RTB0);\n              }\n              break;\n            case 37:\n              t2.readChar$0();\n              addOperator.call$1(C.BinaryOperator_2ad0);\n              break;\n            case 48:\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n              addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);\n              break;\n            case 46:\n              if (t2.peekChar$1(1) === 46)\n                break $label0$0;\n              addSingleExpression.call$2$number(_this._stylesheet0$_number$0(), true);\n              break;\n            case 97:\n              if (!_this.get$plainCss() && _this.scanIdentifier$1(\"and\"))\n                addOperator.call$1(C.BinaryOperator_and_and_20);\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 111:\n              if (!_this.get$plainCss() && _this.scanIdentifier$1(\"or\"))\n                addOperator.call$1(C.BinaryOperator_or_or_10);\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 117:\n            case 85:\n              if (t2.peekChar$1(1) === 43)\n                addSingleExpression.call$1(_this._stylesheet0$_unicodeRange$0());\n              else\n                addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 98:\n            case 99:\n            case 100:\n            case 101:\n            case 102:\n            case 103:\n            case 104:\n            case 105:\n            case 106:\n            case 107:\n            case 108:\n            case 109:\n            case 110:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 118:\n            case 119:\n            case 120:\n            case 121:\n            case 122:\n            case 65:\n            case 66:\n            case 67:\n            case 68:\n            case 69:\n            case 70:\n            case 71:\n            case 72:\n            case 73:\n            case 74:\n            case 75:\n            case 76:\n            case 77:\n            case 78:\n            case 79:\n            case 80:\n            case 81:\n            case 82:\n            case 83:\n            case 84:\n            case 86:\n            case 87:\n            case 88:\n            case 89:\n            case 90:\n            case 95:\n            case 92:\n              addSingleExpression.call$1(_this.identifierLike$0());\n              break;\n            case 44:\n              if (_this._stylesheet0$_inParentheses) {\n                _this._stylesheet0$_inParentheses = false;\n                if (_box_0.allowSlash) {\n                  resetState.call$0();\n                  break;\n                }\n              }\n              if (_box_0.commaExpressions == null)\n                _box_0.commaExpressions = H.setRuntimeTypeInfo([], t3);\n              if (_box_0.singleExpression == null)\n                t2.error$1(0, _s20_);\n              resolveSpaceExpressions.call$0();\n              _box_0.commaExpressions.push(_box_0.singleExpression);\n              t2.readChar$0();\n              _box_0.allowSlash = true;\n              _box_0.singleExpression = null;\n              break;\n            default:\n              if (first != null && first >= 128) {\n                addSingleExpression.call$1(_this.identifierLike$0());\n                break;\n              } else\n                break $label0$0;\n          }\n        }\n      if (bracketList)\n        t2.expectChar$1(93);\n      if (_box_0.commaExpressions != null) {\n        resolveSpaceExpressions.call$0();\n        _this._stylesheet0$_inParentheses = wasInParentheses;\n        t1 = _box_0.singleExpression;\n        if (t1 != null)\n          _box_0.commaExpressions.push(t1);\n        t1 = _box_0.commaExpressions;\n        return D.ListExpression$0(t1, C.ListSeparator_comma0, bracketList, bracketList ? t2.spanFrom$1(beforeBracket) : null);\n      } else if (bracketList && _box_0.spaceExpressions != null) {\n        resolveOperations.call$0();\n        t1 = _box_0.spaceExpressions;\n        t1.push(_box_0.singleExpression);\n        return D.ListExpression$0(t1, C.ListSeparator_space0, true, t2.spanFrom$1(beforeBracket));\n      } else {\n        resolveSpaceExpressions.call$0();\n        if (bracketList)\n          _box_0.singleExpression = D.ListExpression$0(H.setRuntimeTypeInfo([_box_0.singleExpression], t3), C.ListSeparator_undecided0, true, t2.spanFrom$1(beforeBracket));\n        return _box_0.singleExpression;\n      }\n    },\n    expression$2$singleEquals$until: function(singleEquals, until) {\n      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, until);\n    },\n    expression$1$bracketList: function(bracketList) {\n      return this.expression$3$bracketList$singleEquals$until(bracketList, false, null);\n    },\n    expression$0: function() {\n      return this.expression$3$bracketList$singleEquals$until(false, false, null);\n    },\n    expression$1$singleEquals: function(singleEquals) {\n      return this.expression$3$bracketList$singleEquals$until(false, singleEquals, null);\n    },\n    expression$1$until: function(until) {\n      return this.expression$3$bracketList$singleEquals$until(false, false, until);\n    },\n    _stylesheet0$_expressionUntilComma$1$singleEquals: function(singleEquals) {\n      return this.expression$2$singleEquals$until(singleEquals, new V.StylesheetParser__expressionUntilComma_closure0(this));\n    },\n    _stylesheet0$_expressionUntilComma$0: function() {\n      return this._stylesheet0$_expressionUntilComma$1$singleEquals(false);\n    },\n    _stylesheet0$_singleExpression$0: function() {\n      var next, _this = this,\n        t1 = _this.scanner,\n        first = t1.peekChar$0();\n      switch (first) {\n        case 40:\n          return _this._stylesheet0$_parentheses$0();\n        case 47:\n          return _this._stylesheet0$_unaryOperation$0();\n        case 46:\n          return _this._stylesheet0$_number$0();\n        case 91:\n          return _this.expression$1$bracketList(true);\n        case 36:\n          return _this._stylesheet0$_variable$0();\n        case 38:\n          return _this._stylesheet0$_selector$0();\n        case 39:\n        case 34:\n          return _this.interpolatedString$0();\n        case 35:\n          return _this._stylesheet0$_hashExpression$0();\n        case 43:\n          next = t1.peekChar$1(1);\n          return T.isDigit0(next) || next === 46 ? _this._stylesheet0$_number$0() : _this._stylesheet0$_unaryOperation$0();\n        case 45:\n          return _this._stylesheet0$_minusExpression$0();\n        case 33:\n          return _this._stylesheet0$_importantExpression$0();\n        case 117:\n        case 85:\n          if (t1.peekChar$1(1) === 43)\n            return _this._stylesheet0$_unicodeRange$0();\n          else\n            return _this.identifierLike$0();\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          return _this._stylesheet0$_number$0();\n        case 97:\n        case 98:\n        case 99:\n        case 100:\n        case 101:\n        case 102:\n        case 103:\n        case 104:\n        case 105:\n        case 106:\n        case 107:\n        case 108:\n        case 109:\n        case 110:\n        case 111:\n        case 112:\n        case 113:\n        case 114:\n        case 115:\n        case 116:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n        case 65:\n        case 66:\n        case 67:\n        case 68:\n        case 69:\n        case 70:\n        case 71:\n        case 72:\n        case 73:\n        case 74:\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 84:\n        case 86:\n        case 87:\n        case 88:\n        case 89:\n        case 90:\n        case 95:\n        case 92:\n          return _this.identifierLike$0();\n        default:\n          if (first != null && first >= 128)\n            return _this.identifierLike$0();\n          t1.error$1(0, \"Expected expression.\");\n      }\n    },\n    _stylesheet0$_parentheses$0: function() {\n      var wasInParentheses, start, first, expressions, t1, _this = this;\n      if (_this.get$plainCss())\n        _this.scanner.error$2$length(0, \"Parentheses aren't allowed in plain CSS.\", 1);\n      wasInParentheses = _this._stylesheet0$_inParentheses;\n      _this._stylesheet0$_inParentheses = true;\n      try {\n        t1 = _this.scanner;\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n        t1.expectChar$1(40);\n        _this.whitespace$0();\n        if (!_this._stylesheet0$_lookingAtExpression$0()) {\n          t1.expectChar$1(41);\n          t1 = D.ListExpression$0(H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2), C.ListSeparator_undecided0, false, t1.spanFrom$1(start));\n          return t1;\n        }\n        first = _this._stylesheet0$_expressionUntilComma$0();\n        if (t1.scanChar$1(58)) {\n          _this.whitespace$0();\n          t1 = _this._stylesheet0$_map$2(first, start);\n          return t1;\n        }\n        if (!t1.scanChar$1(44)) {\n          t1.expectChar$1(41);\n          t1 = t1.spanFrom$1(start);\n          return new T.ParenthesizedExpression0(first, t1);\n        }\n        _this.whitespace$0();\n        expressions = H.setRuntimeTypeInfo([first], type$.JSArray_legacy_Expression_2);\n        for (; true;) {\n          if (!_this._stylesheet0$_lookingAtExpression$0())\n            break;\n          J.add$1$ax(expressions, _this._stylesheet0$_expressionUntilComma$0());\n          if (!t1.scanChar$1(44))\n            break;\n          _this.whitespace$0();\n        }\n        t1.expectChar$1(41);\n        t1 = D.ListExpression$0(expressions, C.ListSeparator_comma0, false, t1.spanFrom$1(start));\n        return t1;\n      } finally {\n        _this._stylesheet0$_inParentheses = wasInParentheses;\n      }\n    },\n    _stylesheet0$_map$2: function(first, start) {\n      var t2, key, _this = this,\n        t1 = type$.Tuple2_of_legacy_Expression_and_legacy_Expression_2,\n        pairs = H.setRuntimeTypeInfo([new S.Tuple2(first, _this._stylesheet0$_expressionUntilComma$0(), t1)], type$.JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2);\n      for (t2 = _this.scanner; t2.scanChar$1(44);) {\n        _this.whitespace$0();\n        if (!_this._stylesheet0$_lookingAtExpression$0())\n          break;\n        key = _this._stylesheet0$_expressionUntilComma$0();\n        t2.expectChar$1(58);\n        _this.whitespace$0();\n        pairs.push(new S.Tuple2(key, _this._stylesheet0$_expressionUntilComma$0(), t1));\n      }\n      t2.expectChar$1(41);\n      t1 = t2.spanFrom$1(start);\n      return new A.MapExpression0(P.List_List$unmodifiable(pairs, type$.legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2), t1);\n    },\n    _stylesheet0$_hashExpression$0: function() {\n      var start, first, t2, identifier, buffer, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$1(1) === 123)\n        return _this.identifierLike$0();\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(35);\n      first = t1.peekChar$0();\n      if (first != null && T.isDigit0(first))\n        return new K.ColorExpression0(_this._stylesheet0$_hexColorContents$1(start));\n      t2 = t1._string_scanner$_position;\n      identifier = _this.interpolatedIdentifier$0();\n      if (_this._stylesheet0$_isHexColor$1(identifier)) {\n        t1.set$state(new S._SpanScannerState(t1, t2));\n        return new K.ColorExpression0(_this._stylesheet0$_hexColorContents$1(start));\n      }\n      t2 = new P.StringBuffer(\"\");\n      buffer = new Z.InterpolationBuffer0(t2, []);\n      t2._contents += H.Primitives_stringFromCharCode(35);\n      buffer.addInterpolation$1(identifier);\n      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n    },\n    _stylesheet0$_hexColorContents$1: function(start) {\n      var red, green, blue, alpha, digit4, t2, t3, _this = this,\n        digit1 = _this._stylesheet0$_hexDigit$0(),\n        digit2 = _this._stylesheet0$_hexDigit$0(),\n        digit3 = _this._stylesheet0$_hexDigit$0(),\n        t1 = _this.scanner;\n      if (!T.isHex0(t1.peekChar$0())) {\n        red = (digit1 << 4 >>> 0) + digit1;\n        green = (digit2 << 4 >>> 0) + digit2;\n        blue = (digit3 << 4 >>> 0) + digit3;\n        alpha = 1;\n      } else {\n        digit4 = _this._stylesheet0$_hexDigit$0();\n        t2 = digit1 << 4 >>> 0;\n        t3 = digit3 << 4 >>> 0;\n        if (!T.isHex0(t1.peekChar$0())) {\n          red = t2 + digit1;\n          green = (digit2 << 4 >>> 0) + digit2;\n          blue = t3 + digit3;\n          alpha = ((digit4 << 4 >>> 0) + digit4) / 255;\n        } else {\n          red = t2 + digit2;\n          green = t3 + digit4;\n          blue = (_this._stylesheet0$_hexDigit$0() << 4 >>> 0) + _this._stylesheet0$_hexDigit$0();\n          alpha = T.isHex0(t1.peekChar$0()) ? ((_this._stylesheet0$_hexDigit$0() << 4 >>> 0) + _this._stylesheet0$_hexDigit$0()) / 255 : 1;\n        }\n      }\n      return K.SassColor$rgb0(red, green, blue, alpha, t1.spanFrom$1(start));\n    },\n    _stylesheet0$_isHexColor$1: function(interpolation) {\n      var t1,\n        plain = interpolation.get$asPlain();\n      if (plain == null)\n        return false;\n      t1 = plain.length;\n      if (t1 !== 3 && t1 !== 4 && t1 !== 6 && t1 !== 8)\n        return false;\n      t1 = new H.CodeUnits(plain);\n      return t1.every$1(t1, T.character0__isHex$closure());\n    },\n    _stylesheet0$_hexDigit$0: function() {\n      var t1 = this.scanner,\n        char = t1.peekChar$0();\n      if (char == null || !T.isHex0(char))\n        t1.error$1(0, \"Expected hex digit.\");\n      return T.asHex0(t1.readChar$0());\n    },\n    _stylesheet0$_minusExpression$0: function() {\n      var _this = this,\n        next = _this.scanner.peekChar$1(1);\n      if (T.isDigit0(next) || next === 46)\n        return _this._stylesheet0$_number$0();\n      if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())\n        return _this.identifierLike$0();\n      return _this._stylesheet0$_unaryOperation$0();\n    },\n    _stylesheet0$_importantExpression$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.readChar$0();\n      this.whitespace$0();\n      this.expectIdentifier$1(\"important\");\n      t2 = t1.spanFrom$1(new S._SpanScannerState(t1, t2));\n      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([\"!important\"], type$.JSArray_legacy_Object), t2), false);\n    },\n    _stylesheet0$_unaryOperation$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        operator = _this._stylesheet0$_unaryOperatorFor$1(t1.readChar$0());\n      if (operator == null)\n        t1.error$2$position(0, \"Expected unary operator.\", t1._string_scanner$_position - 1);\n      else if (_this.get$plainCss() && operator !== C.UnaryOperator_zDx0)\n        t1.error$3$length$position(0, \"Operators aren't allowed in plain CSS.\", 1, t1._string_scanner$_position - 1);\n      _this.whitespace$0();\n      return new X.UnaryOperationExpression0(operator, _this._stylesheet0$_singleExpression$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_unaryOperatorFor$1: function(character) {\n      switch (character) {\n        case 43:\n          return C.UnaryOperator_j2w0;\n        case 45:\n          return C.UnaryOperator_U4G0;\n        case 47:\n          return C.UnaryOperator_zDx0;\n        default:\n          return null;\n      }\n    },\n    _stylesheet0$_number$0: function() {\n      var number, t4, unit, t5, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        first = t1.peekChar$0(),\n        t3 = first === 45,\n        sign = t3 ? -1 : 1;\n      if (first === 43 || t3)\n        t1.readChar$0();\n      number = t1.peekChar$0() === 46 ? 0 : _this.naturalNumber$0();\n      t3 = _this._stylesheet0$_tryDecimal$1$allowTrailingDot(t1._string_scanner$_position !== t2);\n      t4 = _this._stylesheet0$_tryExponent$0();\n      if (t1.scanChar$1(37))\n        unit = \"%\";\n      else {\n        if (_this.lookingAtIdentifier$0())\n          t5 = t1.peekChar$0() !== 45 || t1.peekChar$1(1) !== 45;\n        else\n          t5 = false;\n        unit = t5 ? _this.identifier$1$unit(true) : null;\n      }\n      return new T.NumberExpression0(sign * ((number + t3) * t4), unit, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_tryDecimal$1$allowTrailingDot: function(allowTrailingDot) {\n      var t2,\n        t1 = this.scanner,\n        start = t1._string_scanner$_position;\n      if (t1.peekChar$0() !== 46)\n        return 0;\n      if (!T.isDigit0(t1.peekChar$1(1))) {\n        if (allowTrailingDot)\n          return 0;\n        t1.error$2$position(0, \"Expected digit.\", t1._string_scanner$_position + 1);\n      }\n      t1.readChar$0();\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        t1.readChar$0();\n      }\n      return P.double_parse(t1.substring$1(0, start));\n    },\n    _stylesheet0$_tryExponent$0: function() {\n      var next, t2, exponentSign, exponent,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first !== 101 && first !== 69)\n        return 1;\n      next = t1.peekChar$1(1);\n      if (!T.isDigit0(next) && next !== 45 && next !== 43)\n        return 1;\n      t1.readChar$0();\n      t2 = next === 45;\n      exponentSign = t2 ? -1 : 1;\n      if (next === 43 || t2)\n        t1.readChar$0();\n      if (!T.isDigit0(t1.peekChar$0()))\n        t1.error$1(0, \"Expected digit.\");\n      exponent = 0;\n      while (true) {\n        t2 = t1.peekChar$0();\n        if (!(t2 != null && t2 >= 48 && t2 <= 57))\n          break;\n        exponent = exponent * 10 + (t1.readChar$0() - 48);\n      }\n      return Math.pow(10, exponentSign * exponent);\n    },\n    _stylesheet0$_unicodeRange$0: function() {\n      var i, t2, j, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.expectIdentChar$1(117);\n      t1.expectChar$1(43);\n      for (i = 0; i < 6; ++i)\n        if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure1()))\n          break;\n      if (t1.scanChar$1(63)) {\n        ++i;\n        for (; i < 6; ++i)\n          if (!t1.scanChar$1(63))\n            break;\n        t2 = t1.substring$1(0, start.position);\n        t1 = t1.spanFrom$1(start);\n        return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);\n      }\n      if (i === 0)\n        t1.error$1(0, 'Expected hex digit or \"?\".');\n      if (t1.scanChar$1(45)) {\n        for (j = 0; j < 6; ++j)\n          if (!_this.scanCharIf$1(new V.StylesheetParser__unicodeRange_closure2()))\n            break;\n        if (j === 0)\n          t1.error$1(0, \"Expected hex digit.\");\n      }\n      if (_this._stylesheet0$_lookingAtInterpolatedIdentifierBody$0())\n        t1.error$1(0, \"Expected end of identifier.\");\n      t2 = t1.substring$1(0, start.position);\n      t1 = t1.spanFrom$1(start);\n      return new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([t2], type$.JSArray_legacy_Object), t1), false);\n    },\n    _stylesheet0$_variable$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        $name = _this.variableName$0();\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Sass_v, t1.spanFrom$1(start));\n      return new S.VariableExpression0(null, $name, t1.spanFrom$1(start));\n    },\n    _stylesheet0$_selector$0: function() {\n      var t1, start, _this = this;\n      if (_this.get$plainCss())\n        _this.scanner.error$2$length(0, string$.The_pa, 1);\n      t1 = _this.scanner;\n      start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      t1.expectChar$1(38);\n      if (t1.scanChar$1(38)) {\n        _this.logger.warn$2$span(0, string$.In_Sas, t1.spanFrom$1(start));\n        t1.set$position(t1._string_scanner$_position - 1);\n      }\n      return new T.SelectorExpression0(t1.spanFrom$1(start));\n    },\n    interpolatedString$0: function() {\n      var t3, t4, buffer, next, second, t5,\n        t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        quote = t1.readChar$0();\n      if (quote !== 39 && quote !== 34)\n        t1.error$2$position(0, \"Expected string.\", t2);\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next === quote) {\n          t1.readChar$0();\n          break;\n        } else if (next == null || next === 10 || next === 13 || next === 12)\n          t1.error$1(0, \"Expected \" + H.Primitives_stringFromCharCode(quote) + \".\");\n        else if (next === 92) {\n          second = t1.peekChar$1(1);\n          if (second === 10 || second === 13 || second === 12) {\n            t1.readChar$0();\n            t1.readChar$0();\n            if (second === 13)\n              t1.scanChar$1(10);\n          } else\n            t3._contents += H.Primitives_stringFromCharCode(this.escapeCharacter$0());\n        } else if (next === 35)\n          if (t1.peekChar$1(1) === 123) {\n            t5 = this.singleInterpolation$0();\n            buffer._interpolation_buffer0$_flushText$0();\n            t4.push(t5);\n          } else\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n        else\n          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      }\n      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2))), true);\n    },\n    identifierLike$0: function() {\n      var invocation, lower, color, specialFunction, $name, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        identifier = _this.interpolatedIdentifier$0(),\n        plain = identifier.get$asPlain(),\n        t2 = plain == null;\n      if (!t2) {\n        if (plain === \"if\") {\n          invocation = _this._stylesheet0$_argumentInvocation$0();\n          return new L.IfExpression0(invocation, B.spanForList0(H.setRuntimeTypeInfo([identifier, invocation], type$.JSArray_legacy_AstNode_2)));\n        } else if (plain === \"not\") {\n          _this.whitespace$0();\n          return new X.UnaryOperationExpression0(C.UnaryOperator_not_not0, _this._stylesheet0$_singleExpression$0(), identifier.span);\n        }\n        lower = plain.toLowerCase();\n        if (t1.peekChar$0() !== 40) {\n          switch (plain) {\n            case \"false\":\n              return new Z.BooleanExpression0(false, identifier.span);\n            case \"null\":\n              return new O.NullExpression0(identifier.span);\n            case \"true\":\n              return new Z.BooleanExpression0(true, identifier.span);\n          }\n          color = $.$get$colorsByName0().$index(0, lower);\n          if (color != null)\n            return new K.ColorExpression0(K.SassColor$rgb0(color.get$red(), color.get$green(), color.get$blue(), color.alpha, identifier.span));\n        }\n        specialFunction = _this.trySpecialFunction$2(lower, start);\n        if (specialFunction != null)\n          return specialFunction;\n      }\n      switch (t1.peekChar$0()) {\n        case 46:\n          if (t1.peekChar$1(1) === 46)\n            return new D.StringExpression0(identifier, false);\n          t1.readChar$0();\n          if (t2)\n            _this.error$2(0, string$.Interpn, identifier.span);\n          if (t1.peekChar$0() === 36) {\n            $name = _this.variableName$0();\n            _this._stylesheet0$_assertPublic$2($name, new V.StylesheetParser_identifierLike_closure0(_this, start));\n            return new S.VariableExpression0(plain, $name, t1.spanFrom$1(start));\n          }\n          t2 = t1._string_scanner$_position;\n          return new F.FunctionExpression0(plain, X.Interpolation$0(H.setRuntimeTypeInfo([_this._stylesheet0$_publicIdentifier$0()], type$.JSArray_legacy_Object), t1.spanFrom$1(new S._SpanScannerState(t1, t2))), _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));\n        case 40:\n          return new F.FunctionExpression0(null, identifier, _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));\n        default:\n          return new D.StringExpression0(identifier, false);\n      }\n    },\n    trySpecialFunction$2: function($name, start) {\n      var t1, buffer, t2, t3, next, contents, _this = this, _null = null;\n      switch (B.unvendor0($name)) {\n        case \"calc\":\n        case \"element\":\n        case \"expression\":\n          if (!_this.scanner.scanChar$1(40))\n            return _null;\n          t1 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer0(t1, []);\n          t1._contents = $name;\n          t1._contents += H.Primitives_stringFromCharCode(40);\n          break;\n        case \"min\":\n        case \"max\":\n          t1 = _this.scanner;\n          t2 = t1._string_scanner$_position;\n          if (!t1.scanChar$1(40))\n            return _null;\n          _this.whitespace$0();\n          t3 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer0(t3, []);\n          t3._contents = $name;\n          t3._contents += H.Primitives_stringFromCharCode(40);\n          if (!_this._stylesheet0$_tryMinMaxContents$1(buffer)) {\n            t1.set$state(new S._SpanScannerState(t1, t2));\n            return _null;\n          }\n          return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n        case \"progid\":\n          t1 = _this.scanner;\n          if (!t1.scanChar$1(58))\n            return _null;\n          t2 = new P.StringBuffer(\"\");\n          buffer = new Z.InterpolationBuffer0(t2, []);\n          t2._contents = $name;\n          t2._contents += H.Primitives_stringFromCharCode(58);\n          next = t1.peekChar$0();\n          while (true) {\n            if (next != null) {\n              if (!(next >= 97 && next <= 122))\n                t3 = next >= 65 && next <= 90;\n              else\n                t3 = true;\n              t3 = t3 || next === 46;\n            } else\n              t3 = false;\n            if (!t3)\n              break;\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            next = t1.peekChar$0();\n          }\n          t1.expectChar$1(40);\n          t2._contents += H.Primitives_stringFromCharCode(40);\n          break;\n        case \"url\":\n          contents = _this._stylesheet0$_tryUrlContents$1(start);\n          return contents == null ? _null : new D.StringExpression0(contents, false);\n        default:\n          return _null;\n      }\n      buffer.addInterpolation$1(_this._stylesheet0$_interpolatedDeclarationValue$1$allowEmpty(true));\n      t1 = _this.scanner;\n      t1.expectChar$1(41);\n      buffer._interpolation_buffer0$_text._contents += H.Primitives_stringFromCharCode(41);\n      return new D.StringExpression0(buffer.interpolation$1(t1.spanFrom$1(start)), false);\n    },\n    _stylesheet0$_tryMinMaxContents$2$allowComma: function(buffer, allowComma) {\n      var t1, t2, t3, t4, start, end, exception, t5, _this = this;\n      for (t1 = _this.scanner, t2 = buffer._interpolation_buffer0$_text, t3 = !allowComma, t4 = _this.get$_stylesheet0$_number(); true;) {\n        switch (t1.peekChar$0()) {\n          case 45:\n          case 43:\n          case 48:\n          case 49:\n          case 50:\n          case 51:\n          case 52:\n          case 53:\n          case 54:\n          case 55:\n          case 56:\n          case 57:\n            try {\n              start = t1._string_scanner$_position;\n              t4.call$0();\n              end = t1._string_scanner$_position;\n              t2._contents += J.substring$2$s(t1.string, start, end);\n            } catch (exception) {\n              if (type$.legacy_FormatException._is(H.unwrapException(exception)))\n                return false;\n              else\n                throw exception;\n            }\n            break;\n          case 35:\n            if (t1.peekChar$1(1) !== 123)\n              return false;\n            t5 = _this.singleInterpolation$0();\n            buffer._interpolation_buffer0$_flushText$0();\n            buffer._interpolation_buffer0$_contents.push(t5);\n            break;\n          case 99:\n          case 67:\n            if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, \"calc\"))\n              return false;\n            break;\n          case 101:\n          case 69:\n            if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, \"env\"))\n              return false;\n            break;\n          case 118:\n          case 86:\n            if (!_this._stylesheet0$_tryMinMaxFunction$2(buffer, \"var\"))\n              return false;\n            break;\n          case 40:\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            if (!_this._stylesheet0$_tryMinMaxContents$2$allowComma(buffer, false))\n              return false;\n            break;\n          case 109:\n          case 77:\n            t1.readChar$0();\n            if (_this.scanIdentChar$1(105)) {\n              if (!_this.scanIdentChar$1(110))\n                return false;\n              t2._contents += \"min(\";\n            } else if (_this.scanIdentChar$1(97)) {\n              if (!_this.scanIdentChar$1(120))\n                return false;\n              t2._contents += \"max(\";\n            } else\n              return false;\n            if (!t1.scanChar$1(40))\n              return false;\n            if (!_this._stylesheet0$_tryMinMaxContents$1(buffer))\n              return false;\n            break;\n          default:\n            return false;\n        }\n        _this.whitespace$0();\n        switch (t1.peekChar$0()) {\n          case 41:\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            return true;\n          case 43:\n          case 45:\n          case 42:\n          case 47:\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            break;\n          case 44:\n            if (t3)\n              return false;\n            t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            t2._contents += H.Primitives_stringFromCharCode(32);\n            break;\n          default:\n            return false;\n        }\n        _this.whitespace$0();\n      }\n    },\n    _stylesheet0$_tryMinMaxContents$1: function(buffer) {\n      return this._stylesheet0$_tryMinMaxContents$2$allowComma(buffer, true);\n    },\n    _stylesheet0$_tryMinMaxFunction$2: function(buffer, $name) {\n      var t1, t2;\n      if (!this.scanIdentifier$1($name))\n        return false;\n      t1 = this.scanner;\n      if (!t1.scanChar$1(40))\n        return false;\n      t2 = buffer._interpolation_buffer0$_text;\n      t2._contents += $name;\n      t2._contents += H.Primitives_stringFromCharCode(40);\n      buffer.addInterpolation$1(this._stylesheet0$_interpolatedDeclarationValue$1$allowEmpty(true));\n      t2._contents += H.Primitives_stringFromCharCode(41);\n      if (!t1.scanChar$1(41))\n        return false;\n      return true;\n    },\n    _stylesheet0$_tryUrlContents$2$name: function(start, $name) {\n      var t3, t4, buffer, next, t5, endPosition, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      if (!t1.scanChar$1(40))\n        return null;\n      _this.whitespaceWithoutComments$0();\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      t3._contents = $name == null ? \"url\" : $name;\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      for (; true;) {\n        next = t1.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 33)\n            if (next !== 37)\n              if (next !== 38)\n                t5 = next >= 42 && next <= 126 || next >= 128;\n              else\n                t5 = true;\n            else\n              t5 = true;\n          else\n            t5 = true;\n          if (t5)\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 92)\n            t3._contents += H.S(_this.escape$0());\n          else if (next === 35)\n            if (t1.peekChar$1(1) === 123) {\n              t5 = _this.singleInterpolation$0();\n              buffer._interpolation_buffer0$_flushText$0();\n              t4.push(t5);\n            } else\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          else if (next === 32 || next === 9 || next === 10 || next === 13 || next === 12) {\n            _this.whitespaceWithoutComments$0();\n            if (t1.peekChar$0() !== 41)\n              break;\n          } else if (next === 41) {\n            t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n            endPosition = t1._string_scanner$_position;\n            t2 = t1._sourceFile;\n            t3 = start.position;\n            t1 = new Y._FileSpan(t2, t3, endPosition);\n            t1._FileSpan$3(t2, t3, endPosition);\n            return buffer.interpolation$1(t1);\n          } else\n            break;\n        }\n      }\n      t1.set$state(new S._SpanScannerState(t1, t2));\n      return null;\n    },\n    _stylesheet0$_tryUrlContents$1: function(start) {\n      return this._stylesheet0$_tryUrlContents$2$name(start, null);\n    },\n    dynamicUrl$0: function() {\n      var contents, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.expectIdentifier$1(\"url\");\n      contents = _this._stylesheet0$_tryUrlContents$1(start);\n      if (contents != null)\n        return new D.StringExpression0(contents, false);\n      return new F.FunctionExpression0(null, X.Interpolation$0(H.setRuntimeTypeInfo([\"url\"], type$.JSArray_legacy_Object), t1.spanFrom$1(start)), _this._stylesheet0$_argumentInvocation$0(), t1.spanFrom$1(start));\n    },\n    almostAnyValue$1$omitComments: function(omitComments) {\n      var t4, t5, next, commentStart, end, t6, contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer0(t3, []);\n      $label0$1:\n        for (t4 = t1.string, t5 = !omitComments; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 34:\n            case 39:\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              break;\n            case 47:\n              commentStart = t1._string_scanner$_position;\n              if (_this.scanComment$0()) {\n                if (t5) {\n                  end = t1._string_scanner$_position;\n                  t3._contents += J.substring$2$s(t4, commentStart, end);\n                }\n              } else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 35:\n              if (t1.peekChar$1(1) === 123)\n                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 13:\n            case 10:\n            case 12:\n              if (_this.get$indented())\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n            case 33:\n            case 59:\n            case 123:\n            case 125:\n              break $label0$1;\n            case 117:\n            case 85:\n              t6 = t1._string_scanner$_position;\n              if (!_this.scanIdentifier$1(\"url\")) {\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                break;\n              }\n              contents = _this._stylesheet0$_tryUrlContents$1(new S._SpanScannerState(t1, t6));\n              if (contents == null) {\n                if (t6 < 0 || t6 > t4.length)\n                  H.throwExpression(P.ArgumentError$(\"Invalid position \" + t6));\n                t1._string_scanner$_position = t6;\n                t1._lastMatch = null;\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              } else\n                buffer.addInterpolation$1(contents);\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                t3._contents += _this.identifier$0();\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              break;\n          }\n        }\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    almostAnyValue$0: function() {\n      return this.almostAnyValue$1$omitComments(false);\n    },\n    _stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon: function(allowColon, allowEmpty, allowSemicolon) {\n      var t4, t5, t6, wroteNewline, next, t7, start, end, contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer0(t3, []),\n        brackets = H.setRuntimeTypeInfo([], type$.JSArray_legacy_int);\n      $label0$1:\n        for (t4 = t1.string, t5 = !allowColon, t6 = !allowSemicolon, wroteNewline = false; true;) {\n          next = t1.peekChar$0();\n          switch (next) {\n            case 92:\n              t3._contents += H.S(_this.escape$1$identifierStart(true));\n              wroteNewline = false;\n              break;\n            case 34:\n            case 39:\n              buffer.addInterpolation$1(_this.interpolatedString$0().asInterpolation$0());\n              wroteNewline = false;\n              break;\n            case 47:\n              if (t1.peekChar$1(1) === 42) {\n                t7 = _this.get$loudComment();\n                start = t1._string_scanner$_position;\n                t7.call$0();\n                end = t1._string_scanner$_position;\n                t3._contents += J.substring$2$s(t4, start, end);\n              } else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 35:\n              if (t1.peekChar$1(1) === 123)\n                buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 32:\n            case 9:\n              if (!wroteNewline) {\n                t7 = t1.peekChar$1(1);\n                t7 = !(t7 === 32 || t7 === 9 || t7 === 10 || t7 === 13 || t7 === 12);\n              } else\n                t7 = true;\n              if (t7)\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              else\n                t1.readChar$0();\n              break;\n            case 10:\n            case 13:\n            case 12:\n              if (_this.get$indented())\n                break $label0$1;\n              t7 = t1.peekChar$1(-1);\n              if (!(t7 === 10 || t7 === 13 || t7 === 12))\n                t3._contents += \"\\n\";\n              t1.readChar$0();\n              wroteNewline = true;\n              break;\n            case 40:\n            case 123:\n            case 91:\n              t3._contents += H.Primitives_stringFromCharCode(next);\n              brackets.push(T.opposite0(t1.readChar$0()));\n              wroteNewline = false;\n              break;\n            case 41:\n            case 125:\n            case 93:\n              if (brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(next);\n              t1.expectChar$1(brackets.pop());\n              wroteNewline = false;\n              break;\n            case 59:\n              if (t6 && brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 58:\n              if (t5 && brackets.length === 0)\n                break $label0$1;\n              t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n            case 117:\n            case 85:\n              t7 = t1._string_scanner$_position;\n              if (!_this.scanIdentifier$1(\"url\")) {\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n                wroteNewline = false;\n                break;\n              }\n              contents = _this._stylesheet0$_tryUrlContents$1(new S._SpanScannerState(t1, t7));\n              if (contents == null) {\n                if (t7 < 0 || t7 > t4.length)\n                  H.throwExpression(P.ArgumentError$(\"Invalid position \" + t7));\n                t1._string_scanner$_position = t7;\n                t1._lastMatch = null;\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              } else\n                buffer.addInterpolation$1(contents);\n              wroteNewline = false;\n              break;\n            default:\n              if (next == null)\n                break $label0$1;\n              if (_this.lookingAtIdentifier$0())\n                t3._contents += _this.identifier$0();\n              else\n                t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n              wroteNewline = false;\n              break;\n          }\n        }\n      if (brackets.length !== 0)\n        t1.expectChar$1(C.JSArray_methods.get$last(brackets));\n      if (!allowEmpty && buffer._interpolation_buffer0$_contents.length === 0 && t3._contents.length === 0)\n        t1.error$1(0, \"Expected token.\");\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_interpolatedDeclarationValue$1$allowEmpty: function(allowEmpty) {\n      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, false);\n    },\n    _stylesheet0$_interpolatedDeclarationValue$2$allowEmpty$allowSemicolon: function(allowEmpty, allowSemicolon) {\n      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, allowEmpty, allowSemicolon);\n    },\n    _stylesheet0$_interpolatedDeclarationValue$0: function() {\n      return this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(true, false, false);\n    },\n    interpolatedIdentifier$0: function() {\n      var first, _this = this,\n        _s20_ = \"Expected identifier.\",\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        t2 = new P.StringBuffer(\"\"),\n        t3 = [],\n        buffer = new Z.InterpolationBuffer0(t2, t3);\n      if (t1.scanChar$1(45)) {\n        t2._contents += H.Primitives_stringFromCharCode(45);\n        if (t1.scanChar$1(45)) {\n          t2._contents += H.Primitives_stringFromCharCode(45);\n          _this._stylesheet0$_interpolatedIdentifierBody$1(buffer);\n          return buffer.interpolation$1(t1.spanFrom$1(start));\n        }\n      }\n      first = t1.peekChar$0();\n      if (first == null)\n        t1.error$1(0, _s20_);\n      else if (first === 95 || T.isAlphabetic1(first) || first >= 128)\n        t2._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n      else if (first === 92)\n        t2._contents += H.S(_this.escape$1$identifierStart(true));\n      else if (first === 35 && t1.peekChar$1(1) === 123) {\n        t2 = _this.singleInterpolation$0();\n        buffer._interpolation_buffer0$_flushText$0();\n        t3.push(t2);\n      } else\n        t1.error$1(0, _s20_);\n      _this._stylesheet0$_interpolatedIdentifierBody$1(buffer);\n      return buffer.interpolation$1(t1.spanFrom$1(start));\n    },\n    _stylesheet0$_interpolatedIdentifierBody$1: function(buffer) {\n      var t1, t2, t3, next, t4;\n      for (t1 = buffer._interpolation_buffer0$_contents, t2 = this.scanner, t3 = buffer._interpolation_buffer0$_text; true;) {\n        next = t2.peekChar$0();\n        if (next == null)\n          break;\n        else {\n          if (next !== 95)\n            if (next !== 45) {\n              if (!(next >= 97 && next <= 122))\n                t4 = next >= 65 && next <= 90;\n              else\n                t4 = true;\n              if (!t4)\n                t4 = next >= 48 && next <= 57;\n              else\n                t4 = true;\n              t4 = t4 || next >= 128;\n            } else\n              t4 = true;\n          else\n            t4 = true;\n          if (t4)\n            t3._contents += H.Primitives_stringFromCharCode(t2.readChar$0());\n          else if (next === 92)\n            t3._contents += H.S(this.escape$0());\n          else if (next === 35 && t2.peekChar$1(1) === 123) {\n            t4 = this.singleInterpolation$0();\n            buffer._interpolation_buffer0$_flushText$0();\n            t1.push(t4);\n          } else\n            break;\n        }\n      }\n    },\n    singleInterpolation$0: function() {\n      var contents, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      t1.expect$1(\"#{\");\n      _this.whitespace$0();\n      contents = _this.expression$0();\n      t1.expectChar$1(125);\n      if (_this.get$plainCss())\n        _this.error$2(0, string$.Interpp, t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n      return contents;\n    },\n    _stylesheet0$_mediaQueryList$0: function() {\n      var t1 = this.scanner,\n        t2 = t1._string_scanner$_position,\n        t3 = new P.StringBuffer(\"\"),\n        buffer = new Z.InterpolationBuffer0(t3, []);\n      for (; true;) {\n        this.whitespace$0();\n        this._stylesheet0$_mediaQuery$1(buffer);\n        if (!t1.scanChar$1(44))\n          break;\n        t3._contents += H.Primitives_stringFromCharCode(44);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n      }\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_mediaQuery$1: function(buffer) {\n      var t1, identifier, _this = this;\n      if (_this.scanner.peekChar$0() !== 40) {\n        buffer.addInterpolation$1(_this.interpolatedIdentifier$0());\n        _this.whitespace$0();\n        if (!_this._stylesheet0$_lookingAtInterpolatedIdentifier$0())\n          return;\n        t1 = buffer._interpolation_buffer0$_text;\n        t1._contents += H.Primitives_stringFromCharCode(32);\n        identifier = _this.interpolatedIdentifier$0();\n        _this.whitespace$0();\n        if (B.equalsIgnoreCase0(identifier.get$asPlain(), \"and\"))\n          t1._contents += \" and \";\n        else {\n          buffer.addInterpolation$1(identifier);\n          if (_this.scanIdentifier$1(\"and\")) {\n            _this.whitespace$0();\n            t1._contents += \" and \";\n          } else\n            return;\n        }\n      }\n      for (t1 = buffer._interpolation_buffer0$_text; true;) {\n        _this.whitespace$0();\n        buffer.addInterpolation$1(_this._stylesheet0$_mediaFeature$0());\n        _this.whitespace$0();\n        if (!_this.scanIdentifier$1(\"and\"))\n          break;\n        t1._contents += \" and \";\n      }\n    },\n    _stylesheet0$_mediaFeature$0: function() {\n      var interpolation, t2, t3, t4, buffer, t5, next, isAngle, _this = this,\n        t1 = _this.scanner;\n      if (t1.peekChar$0() === 35) {\n        interpolation = _this.singleInterpolation$0();\n        return X.Interpolation$0(H.setRuntimeTypeInfo([interpolation], type$.JSArray_legacy_Object), interpolation.get$span());\n      }\n      t2 = t1._string_scanner$_position;\n      t3 = new P.StringBuffer(\"\");\n      t4 = [];\n      buffer = new Z.InterpolationBuffer0(t3, t4);\n      t1.expectChar$1(40);\n      t3._contents += H.Primitives_stringFromCharCode(40);\n      _this.whitespace$0();\n      t5 = _this._stylesheet0$_expressionUntilComparison$0();\n      buffer._interpolation_buffer0$_flushText$0();\n      t4.push(t5);\n      if (t1.scanChar$1(58)) {\n        _this.whitespace$0();\n        t3._contents += H.Primitives_stringFromCharCode(58);\n        t3._contents += H.Primitives_stringFromCharCode(32);\n        t5 = _this.expression$0();\n        buffer._interpolation_buffer0$_flushText$0();\n        t4.push(t5);\n      } else {\n        next = t1.peekChar$0();\n        isAngle = next === 60 || next === 62;\n        if (isAngle || next === 61) {\n          t3._contents += H.Primitives_stringFromCharCode(32);\n          t3._contents += H.Primitives_stringFromCharCode(t1.readChar$0());\n          if (isAngle && t1.scanChar$1(61))\n            t3._contents += H.Primitives_stringFromCharCode(61);\n          t3._contents += H.Primitives_stringFromCharCode(32);\n          _this.whitespace$0();\n          t5 = _this._stylesheet0$_expressionUntilComparison$0();\n          buffer._interpolation_buffer0$_flushText$0();\n          t4.push(t5);\n          if (isAngle && t1.scanChar$1(next)) {\n            t3._contents += H.Primitives_stringFromCharCode(32);\n            t3._contents += H.Primitives_stringFromCharCode(next);\n            if (t1.scanChar$1(61))\n              t3._contents += H.Primitives_stringFromCharCode(61);\n            t3._contents += H.Primitives_stringFromCharCode(32);\n            _this.whitespace$0();\n            t5 = _this._stylesheet0$_expressionUntilComparison$0();\n            buffer._interpolation_buffer0$_flushText$0();\n            t4.push(t5);\n          }\n        }\n      }\n      t1.expectChar$1(41);\n      _this.whitespace$0();\n      t3._contents += H.Primitives_stringFromCharCode(41);\n      return buffer.interpolation$1(t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n    },\n    _stylesheet0$_expressionUntilComparison$0: function() {\n      return this.expression$1$until(new V.StylesheetParser__expressionUntilComparison_closure0(this));\n    },\n    _stylesheet0$_supportsCondition$0: function() {\n      var condition, operator, right, endPosition, t3, t4, lowerOperator, _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position;\n      if (_this.scanIdentifier$1(\"not\")) {\n        _this.whitespace$0();\n        return new M.SupportsNegation0(_this._stylesheet0$_supportsConditionInParens$0(), t1.spanFrom$1(new S._SpanScannerState(t1, t2)));\n      }\n      condition = _this._stylesheet0$_supportsConditionInParens$0();\n      _this.whitespace$0();\n      for (operator = null; _this.lookingAtIdentifier$0();) {\n        if (operator != null)\n          _this.expectIdentifier$1(operator);\n        else if (_this.scanIdentifier$1(\"or\"))\n          operator = \"or\";\n        else {\n          _this.expectIdentifier$1(\"and\");\n          operator = \"and\";\n        }\n        _this.whitespace$0();\n        right = _this._stylesheet0$_supportsConditionInParens$0();\n        endPosition = t1._string_scanner$_position;\n        t3 = t1._sourceFile;\n        t4 = new Y._FileSpan(t3, t2, endPosition);\n        t4._FileSpan$3(t3, t2, endPosition);\n        condition = new U.SupportsOperation0(condition, right, operator, t4);\n        lowerOperator = operator.toLowerCase();\n        if (lowerOperator !== \"and\" && lowerOperator !== \"or\")\n          H.throwExpression(P.ArgumentError$value(operator, \"operator\", 'may only be \"and\" or \"or\".'));\n        _this.whitespace$0();\n      }\n      return condition;\n    },\n    _stylesheet0$_supportsConditionInParens$0: function() {\n      var $name, nameStart, wasInParentheses, identifier, operation, contents, identifier0, t2, $arguments, condition, exception, value, _this = this,\n        t1 = _this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      if (_this._stylesheet0$_lookingAtInterpolatedIdentifier$0()) {\n        identifier0 = _this.interpolatedIdentifier$0();\n        t2 = identifier0.get$asPlain();\n        if ((t2 == null ? null : t2.toLowerCase()) === \"not\")\n          _this.error$2(0, '\"not\" is not a valid identifier here.', identifier0.span);\n        if (t1.scanChar$1(40)) {\n          $arguments = _this._stylesheet0$_interpolatedDeclarationValue$2$allowEmpty$allowSemicolon(true, true);\n          t1.expectChar$1(41);\n          return new F.SupportsFunction0(identifier0, $arguments, t1.spanFrom$1(start));\n        } else {\n          t2 = identifier0.contents;\n          if (t2.length !== 1 || !type$.legacy_Expression_2._is(C.JSArray_methods.get$first(t2)))\n            _this.error$2(0, \"Expected @supports condition.\", identifier0.span);\n          else\n            return new X.SupportsInterpolation0(type$.legacy_Expression_2._as(C.JSArray_methods.get$first(t2)), t1.spanFrom$1(start));\n        }\n      }\n      t1.expectChar$1(40);\n      _this.whitespace$0();\n      if (_this.scanIdentifier$1(\"not\")) {\n        _this.whitespace$0();\n        condition = _this._stylesheet0$_supportsConditionInParens$0();\n        t1.expectChar$1(41);\n        return new M.SupportsNegation0(condition, t1.spanFrom$1(start));\n      } else if (t1.peekChar$0() === 40) {\n        condition = _this._stylesheet0$_supportsCondition$0();\n        t1.expectChar$1(41);\n        return condition;\n      }\n      $name = null;\n      nameStart = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      wasInParentheses = _this._stylesheet0$_inParentheses;\n      try {\n        $name = _this.expression$0();\n        t1.expectChar$1(58);\n      } catch (exception) {\n        if (type$.legacy_FormatException._is(H.unwrapException(exception))) {\n          t1.set$state(nameStart);\n          _this._stylesheet0$_inParentheses = wasInParentheses;\n          identifier = _this.interpolatedIdentifier$0();\n          operation = _this._stylesheet0$_trySupportsOperation$2(identifier, nameStart);\n          if (operation != null) {\n            t1.expectChar$1(41);\n            return operation;\n          }\n          t2 = new Z.InterpolationBuffer0(new P.StringBuffer(\"\"), []);\n          t2.addInterpolation$1(identifier);\n          t2.addInterpolation$1(_this._stylesheet0$_interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(false, true, true));\n          contents = t2.interpolation$1(t1.spanFrom$1(nameStart));\n          if (t1.peekChar$0() === 58)\n            throw exception;\n          t1.expectChar$1(41);\n          return new Y.SupportsAnything0(contents, t1.spanFrom$1(start));\n        } else\n          throw exception;\n      }\n      _this.whitespace$0();\n      value = _this.expression$0();\n      t1.expectChar$1(41);\n      return new L.SupportsDeclaration0($name, value, t1.spanFrom$1(start));\n    },\n    _stylesheet0$_trySupportsOperation$2: function(interpolation, start) {\n      var expression, beforeWhitespace, t2, t3, operator, operation, right, t4, endPosition, t5, t6, lowerOperator, _this = this, _null = null,\n        t1 = interpolation.contents;\n      if (t1.length !== 1)\n        return _null;\n      expression = C.JSArray_methods.get$first(t1);\n      if (!type$.legacy_Expression_2._is(expression))\n        return _null;\n      t1 = _this.scanner;\n      beforeWhitespace = new S._SpanScannerState(t1, t1._string_scanner$_position);\n      _this.whitespace$0();\n      for (t2 = start.position, t3 = interpolation.span, operator = _null, operation = operator; _this.lookingAtIdentifier$0();) {\n        if (operator != null)\n          _this.expectIdentifier$1(operator);\n        else if (_this.scanIdentifier$1(\"and\"))\n          operator = \"and\";\n        else {\n          if (!_this.scanIdentifier$1(\"or\")) {\n            if (beforeWhitespace._scanner !== t1)\n              H.throwExpression(P.ArgumentError$(string$.The_gi));\n            t2 = beforeWhitespace.position;\n            if (t2 < 0 || t2 > t1.string.length)\n              H.throwExpression(P.ArgumentError$(\"Invalid position \" + t2));\n            t1._string_scanner$_position = t2;\n            return t1._lastMatch = null;\n          }\n          operator = \"or\";\n        }\n        _this.whitespace$0();\n        right = _this._stylesheet0$_supportsConditionInParens$0();\n        t4 = operation == null ? new X.SupportsInterpolation0(expression, t3) : operation;\n        endPosition = t1._string_scanner$_position;\n        t5 = t1._sourceFile;\n        t6 = new Y._FileSpan(t5, t2, endPosition);\n        t6._FileSpan$3(t5, t2, endPosition);\n        operation = new U.SupportsOperation0(t4, right, operator, t6);\n        lowerOperator = operator.toLowerCase();\n        if (lowerOperator !== \"and\" && lowerOperator !== \"or\")\n          H.throwExpression(P.ArgumentError$value(operator, \"operator\", 'may only be \"and\" or \"or\".'));\n        _this.whitespace$0();\n      }\n      return operation;\n    },\n    _stylesheet0$_lookingAtInterpolatedIdentifier$0: function() {\n      var second,\n        t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || first === 92)\n        return true;\n      if (first === 35)\n        return t1.peekChar$1(1) === 123;\n      if (first !== 45)\n        return false;\n      second = t1.peekChar$1(1);\n      if (second == null)\n        return false;\n      if (second === 35)\n        return t1.peekChar$1(2) === 123;\n      return second === 95 || T.isAlphabetic1(second) || second >= 128 || second === 92 || second === 45;\n    },\n    _stylesheet0$_lookingAtInterpolatedIdentifierBody$0: function() {\n      var t1 = this.scanner,\n        first = t1.peekChar$0();\n      if (first == null)\n        return false;\n      if (first === 95 || T.isAlphabetic1(first) || first >= 128 || T.isDigit0(first) || first === 45 || first === 92)\n        return true;\n      return first === 35 && t1.peekChar$1(1) === 123;\n    },\n    _stylesheet0$_lookingAtExpression$0: function() {\n      var next,\n        t1 = this.scanner,\n        character = t1.peekChar$0();\n      if (character == null)\n        return false;\n      if (character === 46)\n        return t1.peekChar$1(1) !== 46;\n      if (character === 33) {\n        next = t1.peekChar$1(1);\n        if (next != null)\n          if ((next | 32) !== 105)\n            t1 = next === 32 || next === 9 || T.isNewline0(next);\n          else\n            t1 = true;\n        else\n          t1 = true;\n        return t1;\n      }\n      if (character !== 40)\n        if (character !== 47)\n          if (character !== 91)\n            if (character !== 39)\n              if (character !== 34)\n                if (character !== 35)\n                  if (character !== 43)\n                    if (character !== 45)\n                      if (character !== 92)\n                        if (character !== 36)\n                          if (character !== 38)\n                            t1 = character === 95 || T.isAlphabetic1(character) || character >= 128 || T.isDigit0(character);\n                          else\n                            t1 = true;\n                        else\n                          t1 = true;\n                      else\n                        t1 = true;\n                    else\n                      t1 = true;\n                  else\n                    t1 = true;\n                else\n                  t1 = true;\n              else\n                t1 = true;\n            else\n              t1 = true;\n          else\n            t1 = true;\n        else\n          t1 = true;\n      else\n        t1 = true;\n      return t1;\n    },\n    _stylesheet0$_withChildren$1$3: function(child, start, create) {\n      var result = create.call$2(this.children$1(0, child), this.scanner.spanFrom$1(start));\n      this.whitespaceWithoutComments$0();\n      return result;\n    },\n    _stylesheet0$_withChildren$3: function(child, start, create) {\n      return this._stylesheet0$_withChildren$1$3(child, start, create, type$.dynamic);\n    },\n    _stylesheet0$_urlString$0: function() {\n      var innerError, t2, exception,\n        t1 = this.scanner,\n        start = new S._SpanScannerState(t1, t1._string_scanner$_position),\n        url = this.string$0();\n      try {\n        t2 = P.Uri_parse(url);\n        return t2;\n      } catch (exception) {\n        t2 = H.unwrapException(exception);\n        if (type$.legacy_FormatException._is(t2)) {\n          innerError = t2;\n          this.error$2(0, \"Invalid URL: \" + H.S(J.get$message$x(innerError)), t1.spanFrom$1(start));\n        } else\n          throw exception;\n      }\n    },\n    _stylesheet0$_publicIdentifier$0: function() {\n      var _this = this,\n        t1 = _this.scanner,\n        t2 = t1._string_scanner$_position,\n        result = _this.identifier$1$normalize(true);\n      _this._stylesheet0$_assertPublic$2(result, new V.StylesheetParser__publicIdentifier_closure0(_this, new S._SpanScannerState(t1, t2)));\n      return result;\n    },\n    _stylesheet0$_assertPublic$2: function(identifier, span) {\n      if (!T.isPrivate0(identifier))\n        return;\n      this.error$2(0, string$.Privat, span.call$0());\n    },\n    get$plainCss: function() {\n      return false;\n    }\n  };\n  V.StylesheetParser_parse_closure0.prototype = {\n    call$0: function() {\n      var statements, t4,\n        t1 = this.$this,\n        t2 = t1.scanner,\n        t3 = t2._string_scanner$_position;\n      t2.scanChar$1(65279);\n      statements = t1.statements$1(new V.StylesheetParser_parse__closure1(t1));\n      t2.expectDone$0();\n      t4 = t1._stylesheet0$_globalVariables;\n      t4 = t4.get$values(t4);\n      C.JSArray_methods.addAll$1(statements, H.MappedIterable_MappedIterable(t4, new V.StylesheetParser_parse__closure2(), H._instanceType(t4)._eval$1(\"Iterable.E\"), type$.legacy_Statement_2));\n      return V.Stylesheet$0(statements, t2.spanFrom$1(new S._SpanScannerState(t2, t3)), t1.get$plainCss());\n    },\n    $signature: 194\n  };\n  V.StylesheetParser_parse__closure1.prototype = {\n    call$0: function() {\n      return this.$this._stylesheet0$_statement$1$root(true);\n    },\n    $signature: 56\n  };\n  V.StylesheetParser_parse__closure2.prototype = {\n    call$1: function(declaration) {\n      return Z.VariableDeclaration$0(declaration.name, new O.NullExpression0(declaration.expression.get$span()), declaration.span, null, false, true, null);\n    },\n    $signature: 433\n  };\n  V.StylesheetParser_parseArgumentDeclaration_closure0.prototype = {\n    call$0: function() {\n      var $arguments,\n        t1 = this.$this,\n        t2 = t1.scanner;\n      t2.expectChar$2$name(64, \"@-rule\");\n      t1.identifier$0();\n      t1.whitespace$0();\n      t1.identifier$0();\n      $arguments = t1._stylesheet0$_argumentDeclaration$0();\n      t1.whitespace$0();\n      t2.expectChar$1(123);\n      return $arguments;\n    },\n    $signature: 434\n  };\n  V.StylesheetParser__parseSingleProduction_closure0.prototype = {\n    call$0: function() {\n      var result = this.production.call$0();\n      this.$this.scanner.expectDone$0();\n      return result;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*()\");\n    }\n  };\n  V.StylesheetParser_parseSignature_closure.prototype = {\n    call$0: function() {\n      var t2, $arguments, t3,\n        t1 = this.$this,\n        $name = t1.identifier$0();\n      t1.whitespace$0();\n      t2 = t1.scanner;\n      if (t2.peekChar$0() === 40)\n        $arguments = t1._stylesheet0$_argumentDeclaration$0();\n      else {\n        t1 = Y.FileLocation$_(t2._sourceFile, t2._string_scanner$_position);\n        t3 = t1.offset;\n        $arguments = new B.ArgumentDeclaration0(C.List_empty20, null, Y._FileSpan$(t1.file, t3, t3));\n      }\n      t2.expectDone$0();\n      return new S.Tuple2($name, $arguments, type$.Tuple2_of_legacy_String_and_legacy_ArgumentDeclaration);\n    },\n    $signature: 435\n  };\n  V.StylesheetParser__statement_closure0.prototype = {\n    call$0: function() {\n      return this.$this._stylesheet0$_statement$0();\n    },\n    $signature: 56\n  };\n  V.StylesheetParser_variableDeclarationWithoutNamespace_closure1.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this._box_0.start);\n    },\n    $signature: 32\n  };\n  V.StylesheetParser_variableDeclarationWithoutNamespace_closure2.prototype = {\n    call$0: function() {\n      return this.declaration;\n    },\n    $signature: 436\n  };\n  V.StylesheetParser__declarationOrBuffer_closure1.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$0(this.name, span, children, null);\n    },\n    $signature: 77\n  };\n  V.StylesheetParser__declarationOrBuffer_closure2.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$0(this.name, span, children, this._box_0.value);\n    },\n    $signature: 77\n  };\n  V.StylesheetParser__styleRule_closure0.prototype = {\n    call$2: function(children, span) {\n      var t2, _this = this,\n        t1 = _this.$this;\n      if (t1.get$indented() && children.length === 0)\n        t1.logger.warn$2$span(0, string$.This_s, _this._box_0.interpolation.span);\n      t1._stylesheet0$_inStyleRule = _this.wasInStyleRule;\n      t2 = _this._box_0;\n      return X.StyleRule$0(t2.interpolation, children, t1.scanner.spanFrom$1(t2.start));\n    },\n    $signature: 438\n  };\n  V.StylesheetParser__propertyOrVariableDeclaration_closure1.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$0(this._box_0.name, span, children, null);\n    },\n    $signature: 77\n  };\n  V.StylesheetParser__propertyOrVariableDeclaration_closure2.prototype = {\n    call$2: function(children, span) {\n      return L.Declaration$0(this._box_0.name, span, children, this.value);\n    },\n    $signature: 77\n  };\n  V.StylesheetParser__atRootRule_closure1.prototype = {\n    call$2: function(children, span) {\n      return V.AtRootRule$0(children, span, this.query);\n    },\n    $signature: 210\n  };\n  V.StylesheetParser__atRootRule_closure2.prototype = {\n    call$2: function(children, span) {\n      return V.AtRootRule$0(children, span, null);\n    },\n    $signature: 210\n  };\n  V.StylesheetParser__eachRule_closure0.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      _this.$this._stylesheet0$_inControlDirective = _this.wasInControlDirective;\n      return V.EachRule$0(_this.variables, _this.list, children, span);\n    },\n    $signature: 440\n  };\n  V.StylesheetParser__functionRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return M.FunctionRule$0(this.name, this.$arguments, children, span, this.precedingComment);\n    },\n    $signature: 441\n  };\n  V.StylesheetParser__forRule_closure1.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if (!t1.lookingAtIdentifier$0())\n        return false;\n      if (t1.scanIdentifier$1(\"to\"))\n        return this._box_0.exclusive = true;\n      else if (t1.scanIdentifier$1(\"through\")) {\n        this._box_0.exclusive = false;\n        return true;\n      } else\n        return false;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__forRule_closure2.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      _this.$this._stylesheet0$_inControlDirective = _this.wasInControlDirective;\n      return B.ForRule$0(_this.variable, _this.from, _this.to, children, span, _this._box_0.exclusive);\n    },\n    $signature: 442\n  };\n  V.StylesheetParser__memberList_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this;\n      if (t1.scanner.peekChar$0() === 36)\n        this.variables.add$1(0, t1.variableName$0());\n      else\n        this.identifiers.add$1(0, t1.identifier$1$normalize(true));\n    },\n    $signature: 0\n  };\n  V.StylesheetParser__includeRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return Y.ContentBlock$0(this._box_0.contentArguments, children, span);\n    },\n    $signature: 443\n  };\n  V.StylesheetParser_mediaRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return G.MediaRule$0(this.query, children, span);\n    },\n    $signature: 444\n  };\n  V.StylesheetParser__mixinRule_closure0.prototype = {\n    call$2: function(children, span) {\n      var _this = this,\n        t1 = _this.$this,\n        hadContent = t1._stylesheet0$_mixinHasContent;\n      t1._stylesheet0$_inMixin = false;\n      t1._stylesheet0$_mixinHasContent = null;\n      return T.MixinRule$0(_this.name, _this.$arguments, children, span, _this.precedingComment, hadContent);\n    },\n    $signature: 445\n  };\n  V.StylesheetParser_mozDocumentRule_closure0.prototype = {\n    call$2: function(children, span) {\n      var _this = this;\n      if (_this._box_0.needsDeprecationWarning)\n        _this.$this.logger.warn$3$deprecation$span(0, string$.x40_moz_, true, span);\n      return U.AtRule$0(_this.name, span, children, _this.value);\n    },\n    $signature: 211\n  };\n  V.StylesheetParser_supportsRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return B.SupportsRule$0(this.condition, children, span);\n    },\n    $signature: 447\n  };\n  V.StylesheetParser__whileRule_closure0.prototype = {\n    call$2: function(children, span) {\n      this.$this._stylesheet0$_inControlDirective = this.wasInControlDirective;\n      return G.WhileRule$0(this.condition, children, span);\n    },\n    $signature: 448\n  };\n  V.StylesheetParser_unknownAtRule_closure0.prototype = {\n    call$2: function(children, span) {\n      return U.AtRule$0(this.name, span, children, this._box_0.value);\n    },\n    $signature: 211\n  };\n  V.StylesheetParser_expression_resetState0.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      t1.operands = t1.operators = t1.spaceExpressions = t1.commaExpressions = null;\n      t2 = this.$this;\n      t2.scanner.set$state(this.start);\n      t1.allowSlash = t2.lookingAtNumber$0();\n      t1.singleExpression = t2._stylesheet0$_singleExpression$0();\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_resolveOneOperation0.prototype = {\n    call$0: function() {\n      var t2, t3,\n        t1 = this._box_0,\n        operator = t1.operators.pop();\n      if (operator !== C.BinaryOperator_RTB0)\n        t1.allowSlash = false;\n      t2 = t1.allowSlash && !this.$this._stylesheet0$_inParentheses;\n      t3 = t1.operands;\n      if (t2)\n        t1.singleExpression = new V.BinaryOperationExpression0(C.BinaryOperator_RTB0, t3.pop(), t1.singleExpression, true);\n      else\n        t1.singleExpression = new V.BinaryOperationExpression0(operator, t3.pop(), t1.singleExpression, false);\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_resolveOperations0.prototype = {\n    call$0: function() {\n      var t2,\n        t1 = this._box_0;\n      if (t1.operators == null)\n        return;\n      for (t2 = this.resolveOneOperation; t1.operators.length !== 0;)\n        t2.call$0();\n    },\n    $signature: 1\n  };\n  V.StylesheetParser_expression_addSingleExpression0.prototype = {\n    call$2$number: function(expression, number) {\n      var t2, _this = this,\n        t1 = _this._box_0;\n      if (t1.singleExpression != null) {\n        t2 = _this.$this;\n        if (t2._stylesheet0$_inParentheses) {\n          t2._stylesheet0$_inParentheses = false;\n          if (t1.allowSlash) {\n            _this.resetState.call$0();\n            return;\n          }\n        }\n        if (t1.spaceExpressions == null)\n          t1.spaceExpressions = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n        _this.resolveOperations.call$0();\n        t1.spaceExpressions.push(t1.singleExpression);\n        t1.allowSlash = number;\n      } else if (!number)\n        t1.allowSlash = false;\n      t1.singleExpression = expression;\n    },\n    call$1: function(expression) {\n      return this.call$2$number(expression, false);\n    },\n    $signature: 449\n  };\n  V.StylesheetParser_expression_addOperator0.prototype = {\n    call$1: function(operator) {\n      var t2, t3, t4, t5, singleExpression,\n        t1 = this.$this;\n      if (t1.get$plainCss() && operator !== C.BinaryOperator_RTB0 && operator !== C.BinaryOperator_kjl0) {\n        t2 = t1.scanner;\n        t3 = operator.operator.length;\n        t2.error$3$length$position(0, \"Operators aren't allowed in plain CSS.\", t3, t2._string_scanner$_position - t3);\n      }\n      t2 = this._box_0;\n      t2.allowSlash = t2.allowSlash && operator === C.BinaryOperator_RTB0;\n      if (t2.operators == null)\n        t2.operators = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BinaryOperator_2);\n      if (t2.operands == null)\n        t2.operands = H.setRuntimeTypeInfo([], type$.JSArray_legacy_Expression_2);\n      t3 = this.resolveOneOperation;\n      t4 = operator.precedence;\n      while (true) {\n        t5 = t2.operators;\n        if (!(t5.length !== 0 && C.JSArray_methods.get$last(t5).precedence >= t4))\n          break;\n        t3.call$0();\n      }\n      t2.operators.push(operator);\n      t2.operands.push(t2.singleExpression);\n      t1.whitespace$0();\n      t2.allowSlash = t2.allowSlash && t1.lookingAtNumber$0();\n      singleExpression = t1._stylesheet0$_singleExpression$0();\n      t2.singleExpression = singleExpression;\n      t2.allowSlash = t2.allowSlash && singleExpression instanceof T.NumberExpression0;\n    },\n    $signature: 450\n  };\n  V.StylesheetParser_expression_resolveSpaceExpressions0.prototype = {\n    call$0: function() {\n      var t1, t2;\n      this.resolveOperations.call$0();\n      t1 = this._box_0;\n      t2 = t1.spaceExpressions;\n      if (t2 != null) {\n        t2.push(t1.singleExpression);\n        t1.singleExpression = D.ListExpression$0(t1.spaceExpressions, C.ListSeparator_space0, false, null);\n        t1.spaceExpressions = null;\n      }\n    },\n    $signature: 1\n  };\n  V.StylesheetParser__expressionUntilComma_closure0.prototype = {\n    call$0: function() {\n      return this.$this.scanner.peekChar$0() === 44;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__unicodeRange_closure1.prototype = {\n    call$1: function(char) {\n      return char != null && T.isHex0(char);\n    },\n    $signature: 24\n  };\n  V.StylesheetParser__unicodeRange_closure2.prototype = {\n    call$1: function(char) {\n      return char != null && T.isHex0(char);\n    },\n    $signature: 24\n  };\n  V.StylesheetParser_identifierLike_closure0.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this.start);\n    },\n    $signature: 32\n  };\n  V.StylesheetParser__expressionUntilComparison_closure0.prototype = {\n    call$0: function() {\n      var t1 = this.$this.scanner,\n        next = t1.peekChar$0();\n      if (next === 61)\n        return t1.peekChar$1(1) !== 61;\n      return next === 60 || next === 62;\n    },\n    $signature: 34\n  };\n  V.StylesheetParser__publicIdentifier_closure0.prototype = {\n    call$0: function() {\n      return this.$this.scanner.spanFrom$1(this.start);\n    },\n    $signature: 32\n  };\n  V.Stylesheet0.prototype = {\n    Stylesheet$3$plainCss0: function(children, span, plainCss) {\n      var t1, t2, t3, t4, _i, child;\n      for (t1 = this.children, t2 = t1.length, t3 = this._stylesheet1$_forwards, t4 = this._stylesheet1$_uses, _i = 0; _i < t2; ++_i) {\n        child = t1[_i];\n        if (child instanceof T.UseRule0)\n          t4.push(child);\n        else if (child instanceof L.ForwardRule0)\n          t3.push(child);\n        else if (!(child instanceof B.SilentComment0) && !(child instanceof L.LoudComment0) && !(child instanceof Z.VariableDeclaration0))\n          break;\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitStylesheet$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return (t1 && C.JSArray_methods).join$1(t1, \" \");\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.ModifiableCssSupportsRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitCssSupportsRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    copyWithoutChildren$0: function() {\n      return B.ModifiableCssSupportsRule$0(this.condition, this.span);\n    },\n    $isCssSupportsRule0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  B.SupportsRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitSupportsRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@supports \" + this.condition.toString$0(0) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  M.Syntax0.prototype = {\n    toString$0: function(_) {\n      return this._syntax0$_name;\n    }\n  };\n  F.TypeSelector0.prototype = {\n    get$minSpecificity: function() {\n      return 1;\n    },\n    accept$1$1: function(visitor) {\n      visitor._buffer.write$1(0, this.name);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    addSuffix$1: function(suffix) {\n      var t1 = this.name;\n      return new F.TypeSelector0(new D.QualifiedName0(t1.name + suffix, t1.namespace));\n    },\n    unify$1: function(compound) {\n      var unified, t1, t2, cur, _i;\n      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0 || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector0) {\n        unified = Y.unifyUniversalAndElement0(this, C.JSArray_methods.get$first(compound));\n        if (unified == null)\n          return null;\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t1.push(unified);\n        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          t1.push(cur);\n        }\n        return t1;\n      } else {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t1.push(this);\n        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)\n          t1.push(compound[_i]);\n        return t1;\n      }\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof F.TypeSelector0 && other.name.$eq(0, this.name);\n    },\n    get$hashCode: function(_) {\n      var t1 = this.name;\n      return C.JSString_methods.get$hashCode(t1.name) ^ J.get$hashCode$(t1.namespace);\n    }\n  };\n  G.Types.prototype = {};\n  X.UnaryOperationExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitUnaryOperationExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.operator,\n        t2 = t1.operator;\n      t1 = t1 === C.UnaryOperator_not_not0 ? t2 + H.Primitives_stringFromCharCode(32) : t2;\n      t1 += H.S(this.operand);\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  X.UnaryOperator0.prototype = {\n    toString$0: function(_) {\n      return this.name;\n    }\n  };\n  N.UniversalSelector0.prototype = {\n    get$minSpecificity: function() {\n      return 0;\n    },\n    accept$1$1: function(visitor) {\n      var t2,\n        t1 = this.namespace;\n      if (t1 != null) {\n        t2 = visitor._buffer;\n        t2.write$1(0, t1);\n        t2.writeCharCode$1(124);\n      }\n      visitor._buffer.writeCharCode$1(42);\n      return null;\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    unify$1: function(compound) {\n      var unified, t1, t2, cur, _i, _this = this;\n      if (C.JSArray_methods.get$first(compound) instanceof N.UniversalSelector0 || C.JSArray_methods.get$first(compound) instanceof F.TypeSelector0) {\n        unified = Y.unifyUniversalAndElement0(_this, C.JSArray_methods.get$first(compound));\n        if (unified == null)\n          return null;\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t1.push(unified);\n        for (t2 = H.SubListIterable$(compound, 1, null, H._arrayInstanceType(compound)._precomputed1), t2 = new H.ListIterator(t2, t2.get$length(t2)); t2.moveNext$0();) {\n          cur = t2.__internal$_current;\n          t1.push(cur);\n        }\n        return t1;\n      }\n      t1 = _this.namespace;\n      if (t1 != null && t1 !== \"*\") {\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_SimpleSelector_2);\n        t1.push(_this);\n        for (t2 = compound.length, _i = 0; _i < compound.length; compound.length === t2 || (0, H.throwConcurrentModificationError)(compound), ++_i)\n          t1.push(compound[_i]);\n        return t1;\n      }\n      if (compound.length !== 0)\n        return compound;\n      return H.setRuntimeTypeInfo([_this], type$.JSArray_legacy_SimpleSelector_2);\n    },\n    $eq: function(_, other) {\n      if (other == null)\n        return false;\n      return other instanceof N.UniversalSelector0 && other.namespace == this.namespace;\n    },\n    get$hashCode: function(_) {\n      return J.get$hashCode$(this.namespace);\n    }\n  };\n  R.UnprefixedMapView0.prototype = {\n    get$keys: function(_) {\n      return new R._UnprefixedKeys0(this);\n    },\n    $index: function(_, key) {\n      return typeof key == \"string\" ? this._unprefixed_map_view0$_map.$index(0, J.$add$ansx(this._unprefixed_map_view0$_prefix, key)) : null;\n    },\n    containsKey$1: function(key) {\n      return typeof key == \"string\" && this._unprefixed_map_view0$_map.containsKey$1(J.$add$ansx(this._unprefixed_map_view0$_prefix, key));\n    },\n    remove$1: function(_, key) {\n      return typeof key == \"string\" ? this._unprefixed_map_view0$_map.remove$1(0, J.$add$ansx(this._unprefixed_map_view0$_prefix, key)) : null;\n    }\n  };\n  R._UnprefixedKeys0.prototype = {\n    get$iterator: function(_) {\n      var t1 = this._unprefixed_map_view0$_view._unprefixed_map_view0$_map;\n      t1 = J.where$1$ax(t1.get$keys(t1), new R._UnprefixedKeys_iterator_closure1(this)).map$1$1(0, new R._UnprefixedKeys_iterator_closure2(this), type$.legacy_String);\n      return t1.get$iterator(t1);\n    },\n    contains$1: function(_, key) {\n      return this._unprefixed_map_view0$_view.containsKey$1(key);\n    }\n  };\n  R._UnprefixedKeys_iterator_closure1.prototype = {\n    call$1: function(key) {\n      return J.startsWith$1$s(key, this.$this._unprefixed_map_view0$_view._unprefixed_map_view0$_prefix);\n    },\n    $signature: 5\n  };\n  R._UnprefixedKeys_iterator_closure2.prototype = {\n    call$1: function(key) {\n      return J.substring$1$s(key, this.$this._unprefixed_map_view0$_view._unprefixed_map_view0$_prefix.length);\n    },\n    $signature: 8\n  };\n  T.UseRule0.prototype = {\n    UseRule$4$configuration0: function(url, namespace, span, configuration) {\n      var t1, t2, _i, variable;\n      for (t1 = this.configuration, t2 = t1.length, _i = 0; _i < t2; ++_i) {\n        variable = t1[_i];\n        if (variable.isGuarded)\n          throw H.wrapException(P.ArgumentError$value(variable, \"configured variable\", \"can't be guarded in a @use rule.\"));\n      }\n    },\n    accept$1$1: function(visitor) {\n      return visitor.visitUseRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.url,\n        t2 = \"@use \" + H.S(new D.StringExpression0(X.Interpolation$0(H.setRuntimeTypeInfo([J.toString$0$(t1)], type$.JSArray_legacy_Object), null), true).asInterpolation$1$static(true).get$asPlain()),\n        basename = t1.get$pathSegments().length === 0 ? \"\" : C.JSArray_methods.get$last(t1.get$pathSegments()),\n        dot = J.getInterceptor$asx(basename).indexOf$1(basename, \".\");\n      t1 = this.namespace;\n      if (t1 !== C.JSString_methods.substring$2(basename, 0, dot === -1 ? basename.length : dot))\n        t1 = t2 + (\" as \" + (t1 == null ? \"*\" : t1));\n      else\n        t1 = t2;\n      t2 = this.configuration;\n      t1 = (t2.length !== 0 ? t1 + (\" with (\" + C.JSArray_methods.join$1(t2, \", \") + \")\") : t1) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  E.UserDefinedCallable0.prototype = {\n    get$name: function(_) {\n      return this.declaration.name;\n    },\n    $isAsyncCallable0: 1,\n    $isCallable0: 1\n  };\n  B.resolveImportPath_closure1.prototype = {\n    call$0: function() {\n      return B._exactlyOne0(B._tryPath0($.$get$context().withoutExtension$1(this.path) + \".import\" + this.extension));\n    },\n    $signature: 13\n  };\n  B.resolveImportPath_closure2.prototype = {\n    call$0: function() {\n      return B._exactlyOne0(B._tryPathWithExtensions0(H.S(this.path) + \".import\"));\n    },\n    $signature: 13\n  };\n  B._tryPathAsDirectory_closure0.prototype = {\n    call$0: function() {\n      return B._exactlyOne0(B._tryPathWithExtensions0(D.join(this.path, \"index.import\", null)));\n    },\n    $signature: 13\n  };\n  B._exactlyOne_closure0.prototype = {\n    call$1: function(path) {\n      var t1 = $.$get$context();\n      return C.JSString_methods.$add(\"  \", t1.prettyUri$1(t1.toUri$1(path)));\n    },\n    $signature: 8\n  };\n  B.forwardToString_closure.prototype = {\n    call$1: function(thisArg) {\n      return J.toString$0$(thisArg);\n    },\n    $signature: 44\n  };\n  B.createClass_closure.prototype = {\n    call$2: function($name, body) {\n      this.$prototype[$name] = P.allowInteropCaptureThis(body);\n    },\n    $signature: 451\n  };\n  B._PropertyDescriptor0.prototype = {};\n  B.indent_closure0.prototype = {\n    call$1: function(line) {\n      return C.JSString_methods.$add(C.JSString_methods.$mul(\" \", this.indentation), line);\n    },\n    $signature: 8\n  };\n  B.flattenVertically_closure1.prototype = {\n    call$1: function(inner) {\n      return Q.QueueList_QueueList$from(inner, this.T._eval$1(\"0*\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"QueueList<0*>*(Iterable<0*>*)\");\n    }\n  };\n  B.flattenVertically_closure2.prototype = {\n    call$1: function(queue) {\n      this.result.push(queue.removeFirst$0());\n      return queue.get$length(queue) === 0;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"bool*(QueueList<0*>*)\");\n    }\n  };\n  B.longestCommonSubsequence_closure2.prototype = {\n    call$2: function(element1, element2) {\n      return J.$eq$(element1, element2) ? element1 : null;\n    },\n    $signature: function() {\n      return this.T._eval$1(\"0*(0*,0*)\");\n    }\n  };\n  B.longestCommonSubsequence_closure3.prototype = {\n    call$1: function(_) {\n      return P.List_List$filled(J.get$length$asx(this.list2) + 1, 0, false, type$.legacy_int);\n    },\n    $signature: 147\n  };\n  B.longestCommonSubsequence_closure4.prototype = {\n    call$1: function(_) {\n      var t1 = new Array(J.get$length$asx(this.list2));\n      t1.fixed$length = Array;\n      return H.setRuntimeTypeInfo(t1, this.T._eval$1(\"JSArray<0*>\"));\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(int*)\");\n    }\n  };\n  B.longestCommonSubsequence_backtrack0.prototype = {\n    call$2: function(i, j) {\n      var selection, t1, _this = this;\n      if (i === -1 || j === -1)\n        return H.setRuntimeTypeInfo([], _this.T._eval$1(\"JSArray<0*>\"));\n      selection = J.$index$asx(_this.selections[i], j);\n      if (selection != null) {\n        t1 = _this.call$2(i - 1, j - 1);\n        J.add$1$ax(t1, selection);\n        return t1;\n      }\n      t1 = _this.lengths;\n      return J.$index$asx(t1[i + 1], j) > J.$index$asx(t1[i], j + 1) ? _this.call$2(i, j - 1) : _this.call$2(i - 1, j);\n    },\n    $signature: function() {\n      return this.T._eval$1(\"List<0*>*(int*,int*)\");\n    }\n  };\n  B.mapAddAll2_closure0.prototype = {\n    call$2: function(key, inner) {\n      var t1 = this.destination;\n      if (t1.containsKey$1(key))\n        t1.$index(0, key).addAll$1(0, inner);\n      else\n        t1.$indexSet(0, key, inner);\n    },\n    $signature: function() {\n      return this.K1._eval$1(\"@<0>\")._bind$1(this.K2)._bind$1(this.V)._eval$1(\"Null(1*,Map<2*,3*>*)\");\n    }\n  };\n  F.CssValue0.prototype = {\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isAstNode0: 1,\n    get$value: function(receiver) {\n      return this.value;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.ValueExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitValueExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.ModifiableCssValue0.prototype = {\n    toString$0: function(_) {\n      return J.toString$0$(this.value);\n    },\n    $isAstNode0: 1,\n    $isCssValue0: 1,\n    get$value: function(receiver) {\n      return this.value;\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  F.Value0.prototype = {\n    get$isTruthy: function() {\n      return true;\n    },\n    get$separator: function() {\n      return C.ListSeparator_undecided0;\n    },\n    get$hasBrackets: function() {\n      return false;\n    },\n    get$asList: function() {\n      return H.setRuntimeTypeInfo([this], type$.JSArray_legacy_Value_2);\n    },\n    get$lengthAsList: function() {\n      return 1;\n    },\n    get$isBlank: function() {\n      return false;\n    },\n    get$isSpecialNumber: function() {\n      return false;\n    },\n    get$isVar: function() {\n      return false;\n    },\n    get$realNull: function() {\n      return this;\n    },\n    sassIndexToListIndex$2: function(sassIndex, $name) {\n      var _this = this,\n        index = sassIndex.assertNumber$1($name).assertInt$1($name);\n      if (index === 0)\n        throw H.wrapException(_this._value0$_exception$2(\"List index may not be 0.\", $name));\n      if (Math.abs(index) > _this.get$lengthAsList())\n        throw H.wrapException(_this._value0$_exception$2(\"Invalid index \" + sassIndex.toString$0(0) + \" for a list with \" + _this.get$lengthAsList() + \" elements.\", $name));\n      return index < 0 ? _this.get$lengthAsList() + index : index - 1;\n    },\n    assertColor$1: function($name) {\n      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + \" is not a color.\", $name));\n    },\n    assertFunction$1: function($name) {\n      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + \" is not a function reference.\", $name));\n    },\n    assertMap$1: function($name) {\n      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + \" is not a map.\", $name));\n    },\n    tryMap$0: function() {\n      return null;\n    },\n    assertNumber$1: function($name) {\n      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + \" is not a number.\", $name));\n    },\n    assertNumber$0: function() {\n      return this.assertNumber$1(null);\n    },\n    assertString$1: function($name) {\n      return H.throwExpression(this._value0$_exception$2(this.toString$0(0) + \" is not a string.\", $name));\n    },\n    assertSelector$2$allowParent$name: function(allowParent, $name) {\n      var error, t1, exception,\n        string = this._value0$_selectorString$1($name);\n      try {\n        t1 = D.SelectorList_SelectorList$parse0(string, allowParent, true, null);\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException0) {\n          error = t1;\n          throw H.wrapException(this._value0$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), \"Error: \", \"\"), $name));\n        } else\n          throw exception;\n      }\n    },\n    assertSelector$1$name: function($name) {\n      return this.assertSelector$2$allowParent$name(false, $name);\n    },\n    assertSelector$0: function() {\n      return this.assertSelector$2$allowParent$name(false, null);\n    },\n    assertSelector$1$allowParent: function(allowParent) {\n      return this.assertSelector$2$allowParent$name(allowParent, null);\n    },\n    assertCompoundSelector$1$name: function($name) {\n      var error, t1, exception,\n        allowParent = false,\n        string = this._value0$_selectorString$1($name);\n      try {\n        t1 = T.SelectorParser$0(string, allowParent, true, null, null).parseCompoundSelector$0();\n        return t1;\n      } catch (exception) {\n        t1 = H.unwrapException(exception);\n        if (t1 instanceof E.SassFormatException0) {\n          error = t1;\n          throw H.wrapException(this._value0$_exception$2(C.JSString_methods.replaceFirst$2(J.toString$0$(error), \"Error: \", \"\"), $name));\n        } else\n          throw exception;\n      }\n    },\n    _value0$_selectorString$1: function($name) {\n      var string = this._value0$_selectorStringOrNull$0();\n      if (string != null)\n        return string;\n      throw H.wrapException(this._value0$_exception$2(this.toString$0(0) + string$.x20is_no, $name));\n    },\n    _value0$_selectorString$0: function() {\n      return this._value0$_selectorString$1(null);\n    },\n    _value0$_selectorStringOrNull$0: function() {\n      var t1, t2, result, t3, _i, complex, string, compound, _this = this, _null = null;\n      if (_this instanceof D.SassString0)\n        return _this.text;\n      if (!(_this instanceof D.SassList0))\n        return _null;\n      t1 = _this._list1$_contents;\n      t2 = t1.length;\n      if (t2 === 0)\n        return _null;\n      result = H.setRuntimeTypeInfo([], type$.JSArray_legacy_String);\n      t3 = _this.separator === C.ListSeparator_comma0;\n      if (t3)\n        for (_i = 0; _i < t2; ++_i) {\n          complex = t1[_i];\n          if (complex instanceof D.SassString0)\n            result.push(complex.text);\n          else if (complex instanceof D.SassList0 && complex.separator === C.ListSeparator_space0) {\n            string = complex._value0$_selectorString$0();\n            result.push(string);\n          } else\n            return _null;\n        }\n      else\n        for (_i = 0; _i < t2; ++_i) {\n          compound = t1[_i];\n          if (compound instanceof D.SassString0)\n            result.push(compound.text);\n          else\n            return _null;\n        }\n      return C.JSArray_methods.join$1(result, t3 ? \", \" : \" \");\n    },\n    changeListContents$2$separator: function(contents, separator) {\n      var t1 = separator == null ? this.get$separator() : separator,\n        t2 = this.get$hasBrackets();\n      return D.SassList$0(contents, t1, t2);\n    },\n    changeListContents$1: function(contents) {\n      return this.changeListContents$2$separator(contents, null);\n    },\n    greaterThan$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" > \" + H.S(other) + '\".'));\n    },\n    greaterThanOrEquals$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" >= \" + H.S(other) + '\".'));\n    },\n    lessThan$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" < \" + H.S(other) + '\".'));\n    },\n    lessThanOrEquals$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" <= \" + H.S(other) + '\".'));\n    },\n    times$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" * \" + H.S(other) + '\".'));\n    },\n    modulo$1: function(other) {\n      return H.throwExpression(E.SassScriptException$0('Undefined operation \"' + this.toString$0(0) + \" % \" + H.S(other) + '\".'));\n    },\n    plus$1: function(other) {\n      var t1;\n      if (other instanceof D.SassString0)\n        return new D.SassString0(C.JSString_methods.$add(N.serializeValue(this, false, true), other.text), other.hasQuotes);\n      else {\n        t1 = N.serializeValue(this, false, true);\n        other.toString;\n        return new D.SassString0(t1 + N.serializeValue(other, false, true), false);\n      }\n    },\n    minus$1: function(other) {\n      var t1 = N.serializeValue(this, false, true) + \"-\";\n      other.toString;\n      return new D.SassString0(t1 + N.serializeValue(other, false, true), false);\n    },\n    dividedBy$1: function(other) {\n      var t1 = N.serializeValue(this, false, true) + \"/\";\n      other.toString;\n      return new D.SassString0(t1 + N.serializeValue(other, false, true), false);\n    },\n    unaryPlus$0: function() {\n      return new D.SassString0(\"+\" + N.serializeValue(this, false, true), false);\n    },\n    unaryMinus$0: function() {\n      return new D.SassString0(\"-\" + N.serializeValue(this, false, true), false);\n    },\n    unaryNot$0: function() {\n      return C.SassBoolean_false;\n    },\n    withoutSlash$0: function() {\n      return this;\n    },\n    toString$0: function(_) {\n      return N.serializeValue(this, true, true);\n    },\n    _value0$_exception$2: function(message, $name) {\n      return new E.SassScriptException0($name == null ? message : \"$\" + $name + \": \" + message);\n    }\n  };\n  S.VariableExpression0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitVariableExpression$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? \"$\" + (t1 + \".\") : \"$\";\n      t1 += this.name;\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isExpression0: 1,\n    $isAstNode0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  Z.VariableDeclaration0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitVariableDeclaration$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.namespace;\n      t1 = t1 != null ? \"$\" + (t1 + \".\") : \"$\";\n      t1 += this.name + \": \" + H.S(this.expression) + \";\";\n      return t1.charCodeAt(0) == 0 ? t1 : t1;\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  N.withWarnCallback_closure0.prototype = {\n    call$0: function() {\n      return this.callback.call$0();\n    },\n    \"call*\": \"call$0\",\n    $requiredArgCount: 0,\n    $signature: function() {\n      return this.T._eval$1(\"0*()\");\n    }\n  };\n  Y.WarnRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitWarnRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      return \"@warn \" + H.S(this.expression) + \";\";\n    },\n    $isAstNode0: 1,\n    $isStatement0: 1,\n    get$span: function() {\n      return this.span;\n    }\n  };\n  G.WhileRule0.prototype = {\n    accept$1$1: function(visitor) {\n      return visitor.visitWhileRule$1(this);\n    },\n    accept$1: function(visitor) {\n      return this.accept$1$1(visitor, type$.dynamic);\n    },\n    toString$0: function(_) {\n      var t1 = this.children;\n      return \"@while \" + H.S(this.condition) + \" {\" + (t1 && C.JSArray_methods).join$1(t1, \" \") + \"}\";\n    },\n    get$span: function() {\n      return this.span;\n    }\n  };\n  (function aliases() {\n    var _ = J.Interceptor.prototype;\n    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;\n    _ = J.JavaScriptObject.prototype;\n    _.super$JavaScriptObject$toString = _.toString$0;\n    _ = H.JsLinkedHashMap.prototype;\n    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;\n    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;\n    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;\n    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;\n    _ = P._BroadcastStreamController.prototype;\n    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;\n    _ = P._BufferingStreamSubscription.prototype;\n    _.super$_BufferingStreamSubscription$_add = _._async$_add$1;\n    _.super$_BufferingStreamSubscription$_addError = _._addError$2;\n    _ = P.ListMixin.prototype;\n    _.super$ListMixin$setRange = _.setRange$4;\n    _ = P.Iterable.prototype;\n    _.super$Iterable$where = _.where$1;\n    _.super$Iterable$skipWhile = _.skipWhile$1;\n    _ = B.ModifiableCssParentNode.prototype;\n    _.super$ModifiableCssParentNode$addChild = _.addChild$1;\n    _ = M.SimpleSelector.prototype;\n    _.super$SimpleSelector$addSuffix = _.addSuffix$1;\n    _.super$SimpleSelector$unify = _.unify$1;\n    _ = G.Parser.prototype;\n    _.super$Parser$silentComment = _.silentComment$0;\n    _ = V.StylesheetParser.prototype;\n    _.super$StylesheetParser$importArgument = _.importArgument$0;\n    _ = F.Value.prototype;\n    _.super$Value$assertMap = _.assertMap$1;\n    _.super$Value$plus = _.plus$1;\n    _.super$Value$minus = _.minus$1;\n    _.super$Value$dividedBy = _.dividedBy$1;\n    _ = Y.SourceSpanMixin.prototype;\n    _.super$SourceSpanMixin$compareTo = _.compareTo$1;\n    _.super$SourceSpanMixin$$eq = _.$eq;\n    _ = X.StringScanner.prototype;\n    _.super$StringScanner$readChar = _.readChar$0;\n    _.super$StringScanner$scanChar = _.scanChar$1;\n    _.super$StringScanner$scan = _.scan$1;\n    _.super$StringScanner$matches = _.matches$1;\n    _ = B.ModifiableCssParentNode0.prototype;\n    _.super$ModifiableCssParentNode$addChild0 = _.addChild$1;\n    _ = G.Parser1.prototype;\n    _.super$Parser$silentComment0 = _.silentComment$0;\n    _ = M.SimpleSelector0.prototype;\n    _.super$SimpleSelector$addSuffix0 = _.addSuffix$1;\n    _.super$SimpleSelector$unify0 = _.unify$1;\n    _ = V.StylesheetParser0.prototype;\n    _.super$StylesheetParser$importArgument0 = _.importArgument$0;\n    _ = F.Value0.prototype;\n    _.super$Value$assertMap0 = _.assertMap$1;\n    _.super$Value$plus0 = _.plus$1;\n    _.super$Value$minus0 = _.minus$1;\n    _.super$Value$dividedBy0 = _.dividedBy$1;\n  })();\n  (function installTearOffs() {\n    var _static_2 = hunkHelpers._static_2,\n      _instance_1_i = hunkHelpers._instance_1i,\n      _instance_1_u = hunkHelpers._instance_1u,\n      _static_1 = hunkHelpers._static_1,\n      _static_0 = hunkHelpers._static_0,\n      _static = hunkHelpers.installStaticTearOff,\n      _instance_0_u = hunkHelpers._instance_0u,\n      _instance = hunkHelpers.installInstanceTearOff,\n      _instance_2_u = hunkHelpers._instance_2u,\n      _instance_0_i = hunkHelpers._instance_0i;\n    _static_2(J, \"_interceptors_JSArray__compareAny$closure\", \"JSArray__compareAny\", 212);\n    _instance_1_i(J.JSArray.prototype, \"get$contains\", \"contains$1\", 31);\n    _instance_1_i(H._CastIterableBase.prototype, \"get$contains\", \"contains$1\", 31);\n    _instance_1_u(H.ConstantStringMap.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance_1_u(H.ConstantProtoMap.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance_1_u(H.JsLinkedHashMap.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _static_1(P, \"async__AsyncRun__scheduleImmediateJsOverride$closure\", \"_AsyncRun__scheduleImmediateJsOverride\", 114);\n    _static_1(P, \"async__AsyncRun__scheduleImmediateWithSetImmediate$closure\", \"_AsyncRun__scheduleImmediateWithSetImmediate\", 114);\n    _static_1(P, \"async__AsyncRun__scheduleImmediateWithTimer$closure\", \"_AsyncRun__scheduleImmediateWithTimer\", 114);\n    _static_0(P, \"async___startMicrotaskLoop$closure\", \"_startMicrotaskLoop\", 1);\n    _static_1(P, \"async___nullDataHandler$closure\", \"_nullDataHandler\", 213);\n    _static_2(P, \"async___nullErrorHandler$closure\", \"_nullErrorHandler\", 59);\n    _static_0(P, \"async___nullDoneHandler$closure\", \"_nullDoneHandler\", 1);\n    _static(P, \"async___rootHandleUncaughtError$closure\", 5, null, [\"call$5\"], [\"_rootHandleUncaughtError\"], 454, 0);\n    _static(P, \"async___rootRun$closure\", 4, null, [\"call$1$4\", \"call$4\"], [\"_rootRun\", function($self, $parent, zone, f) {\n      return P._rootRun($self, $parent, zone, f, type$.dynamic);\n    }], 455, 1);\n    _static(P, \"async___rootRunUnary$closure\", 5, null, [\"call$2$5\", \"call$5\"], [\"_rootRunUnary\", function($self, $parent, zone, f, arg) {\n      return P._rootRunUnary($self, $parent, zone, f, arg, type$.dynamic, type$.dynamic);\n    }], 456, 1);\n    _static(P, \"async___rootRunBinary$closure\", 6, null, [\"call$3$6\", \"call$6\"], [\"_rootRunBinary\", function($self, $parent, zone, f, arg1, arg2) {\n      return P._rootRunBinary($self, $parent, zone, f, arg1, arg2, type$.dynamic, type$.dynamic, type$.dynamic);\n    }], 457, 1);\n    _static(P, \"async___rootRegisterCallback$closure\", 4, null, [\"call$1$4\", \"call$4\"], [\"_rootRegisterCallback\", function($self, $parent, zone, f) {\n      return P._rootRegisterCallback($self, $parent, zone, f, type$.dynamic);\n    }], 458, 0);\n    _static(P, \"async___rootRegisterUnaryCallback$closure\", 4, null, [\"call$2$4\", \"call$4\"], [\"_rootRegisterUnaryCallback\", function($self, $parent, zone, f) {\n      return P._rootRegisterUnaryCallback($self, $parent, zone, f, type$.dynamic, type$.dynamic);\n    }], 459, 0);\n    _static(P, \"async___rootRegisterBinaryCallback$closure\", 4, null, [\"call$3$4\", \"call$4\"], [\"_rootRegisterBinaryCallback\", function($self, $parent, zone, f) {\n      return P._rootRegisterBinaryCallback($self, $parent, zone, f, type$.dynamic, type$.dynamic, type$.dynamic);\n    }], 460, 0);\n    _static(P, \"async___rootErrorCallback$closure\", 5, null, [\"call$5\"], [\"_rootErrorCallback\"], 461, 0);\n    _static(P, \"async___rootScheduleMicrotask$closure\", 4, null, [\"call$4\"], [\"_rootScheduleMicrotask\"], 462, 0);\n    _static(P, \"async___rootCreateTimer$closure\", 5, null, [\"call$5\"], [\"_rootCreateTimer\"], 463, 0);\n    _static(P, \"async___rootCreatePeriodicTimer$closure\", 5, null, [\"call$5\"], [\"_rootCreatePeriodicTimer\"], 464, 0);\n    _static(P, \"async___rootPrint$closure\", 4, null, [\"call$4\"], [\"_rootPrint\"], 465, 0);\n    _static_1(P, \"async___printToZone$closure\", \"_printToZone\", 466);\n    _static(P, \"async___rootFork$closure\", 5, null, [\"call$5\"], [\"_rootFork\"], 467, 0);\n    var _;\n    _instance_0_u(_ = P._BroadcastSubscription.prototype, \"get$_async$_onPause\", \"_async$_onPause$0\", 1);\n    _instance_0_u(_, \"get$_async$_onResume\", \"_async$_onResume$0\", 1);\n    _instance(P._AsyncCompleter.prototype, \"get$complete\", 0, 0, function() {\n      return [null];\n    }, [\"call$1\", \"call$0\"], [\"complete$1\", \"complete$0\"], 428, 0);\n    _instance_2_u(P._Future.prototype, \"get$_completeError\", \"_completeError$2\", 59);\n    _instance_1_i(_ = P._StreamController.prototype, \"get$add\", \"add$1\", 79);\n    _instance(_, \"get$addError\", 0, 1, function() {\n      return [null];\n    }, [\"call$2\", \"call$1\"], [\"addError$2\", \"addError$1\"], 261, 0);\n    _instance_0_i(_, \"get$close\", \"close$0\", 270);\n    _instance_1_u(_, \"get$_async$_add\", \"_async$_add$1\", 79);\n    _instance_2_u(_, \"get$_addError\", \"_addError$2\", 59);\n    _instance_0_u(_, \"get$_close\", \"_close$0\", 1);\n    _instance_0_u(_ = P._ControllerSubscription.prototype, \"get$_async$_onPause\", \"_async$_onPause$0\", 1);\n    _instance_0_u(_, \"get$_async$_onResume\", \"_async$_onResume$0\", 1);\n    _instance(_ = P._BufferingStreamSubscription.prototype, \"get$pause\", 1, 0, null, [\"call$1\", \"call$0\"], [\"pause$1\", \"pause$0\"], 209, 0);\n    _instance_0_i(_, \"get$resume\", \"resume$0\", 1);\n    _instance_0_u(_, \"get$_async$_onPause\", \"_async$_onPause$0\", 1);\n    _instance_0_u(_, \"get$_async$_onResume\", \"_async$_onResume$0\", 1);\n    _instance(_ = P._DoneStreamSubscription.prototype, \"get$pause\", 1, 0, null, [\"call$1\", \"call$0\"], [\"pause$1\", \"pause$0\"], 209, 0);\n    _instance_0_i(_, \"get$resume\", \"resume$0\", 1);\n    _instance_0_u(_, \"get$_sendDone\", \"_sendDone$0\", 1);\n    _instance_1_u(_ = P._StreamIterator.prototype, \"get$_onData\", \"_onData$1\", 79);\n    _instance_2_u(_, \"get$_onError\", \"_onError$2\", 59);\n    _instance_0_u(_, \"get$_onDone\", \"_onDone$0\", 1);\n    _instance_0_u(_ = P._ForwardingStreamSubscription.prototype, \"get$_async$_onPause\", \"_async$_onPause$0\", 1);\n    _instance_0_u(_, \"get$_async$_onResume\", \"_async$_onResume$0\", 1);\n    _instance_1_u(_, \"get$_handleData\", \"_handleData$1\", 79);\n    _instance_2_u(_, \"get$_handleError\", \"_handleError$2\", 278);\n    _instance_0_u(_, \"get$_handleDone\", \"_handleDone$0\", 1);\n    _static_2(P, \"collection___defaultEquals$closure\", \"_defaultEquals\", 214);\n    _static_1(P, \"collection___defaultHashCode$closure\", \"_defaultHashCode\", 143);\n    _static_2(P, \"collection_ListMixin__compareAny$closure\", \"ListMixin__compareAny\", 212);\n    _instance_1_u(P._HashMap.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance_1_u(P._LinkedCustomHashMap.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance(_ = P._LinkedHashSet.prototype, \"get$_newSimilarSet\", 0, 0, null, [\"call$1$0\", \"call$0\"], [\"_newSimilarSet$1$0\", \"_newSimilarSet$0\"], 288, 0);\n    _instance_1_i(_, \"get$contains\", \"contains$1\", 31);\n    _instance(P._LinkedIdentityHashSet.prototype, \"get$_newSimilarSet\", 0, 0, null, [\"call$1$0\", \"call$0\"], [\"_newSimilarSet$1$0\", \"_newSimilarSet$0\"], 289, 0);\n    _instance_1_u(P.MapMixin.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance_1_u(P.MapView.prototype, \"get$containsKey\", \"containsKey$1\", 31);\n    _instance(_ = P._UnmodifiableSet.prototype, \"get$_newSimilarSet\", 0, 0, null, [\"call$1$0\", \"call$0\"], [\"_newSimilarSet$1$0\", \"_newSimilarSet$0\"], 294, 0);\n    _instance_1_i(_, \"get$contains\", \"contains$1\", 31);\n    _static_1(P, \"convert___defaultToEncodable$closure\", \"_defaultToEncodable\", 41);\n    _static_1(P, \"core__identityHashCode$closure\", \"identityHashCode\", 143);\n    _static_2(P, \"core__identical$closure\", \"identical\", 214);\n    _static_1(P, \"core_Uri_decodeComponent$closure\", \"Uri_decodeComponent\", 197);\n    _instance_1_i(P.Iterable.prototype, \"get$contains\", \"contains$1\", 31);\n    _static(P, \"math__max$closure\", 2, null, [\"call$1$2\", \"call$2\"], [\"max\", function(a, b) {\n      return P.max(a, b, type$.num);\n    }], 470, 1);\n    _instance_1_u(_ = Y.StreamCompleter.prototype, \"get$setSourceStream\", \"setSourceStream$1\", 46);\n    _instance(_, \"get$setError\", 0, 1, function() {\n      return [null];\n    }, [\"call$2\", \"call$1\"], [\"setError$2\", \"setError$1\"], 431, 0);\n    _instance_0_u(_ = L.StreamGroup.prototype, \"get$_onListen\", \"_onListen$0\", 1);\n    _instance_0_u(_, \"get$_onPause\", \"_onPause$0\", 1);\n    _instance_0_u(_, \"get$_onResume\", \"_onResume$0\", 1);\n    _instance_0_u(_, \"get$_onCancel\", \"_onCancel$0\", 191);\n    _instance_1_i(O.EmptyUnmodifiableSet.prototype, \"get$contains\", \"contains$1\", 23);\n    _instance_1_i(M._DelegatingIterableBase.prototype, \"get$contains\", \"contains$1\", 23);\n    _instance_1_i(M.MapKeySet.prototype, \"get$contains\", \"contains$1\", 23);\n    _instance_1_u(B.ModifiableCssNode.prototype, \"get$_node0$_isInvisible\", \"_node0$_isInvisible$1\", 6);\n    _instance_1_u(D.SelectorList.prototype, \"get$_complexContainsParentSelector\", \"_complexContainsParentSelector$1\", 15);\n    _static_1(Y, \"functions___isUnique$closure\", \"_isUnique\", 19);\n    _static_1(K, \"color___opacify$closure\", \"_opacify\", 26);\n    _static_1(K, \"color___transparentize$closure\", \"_transparentize\", 26);\n    _instance_0_u(_ = G.Parser.prototype, \"get$whitespace\", \"whitespace$0\", 1);\n    _instance_0_u(_, \"get$loudComment\", \"loudComment$0\", 1);\n    _instance_0_u(_, \"get$string\", \"string$0\", 13);\n    _instance_0_u(U.SassParser.prototype, \"get$loudComment\", \"loudComment$0\", 1);\n    _instance(_ = V.StylesheetParser.prototype, \"get$_statement\", 0, 0, null, [\"call$1$root\", \"call$0\"], [\"_statement$1$root\", \"_statement$0\"], 337, 0);\n    _instance_0_u(_, \"get$_declarationChild\", \"_declarationChild$0\", 54);\n    _instance_0_u(_, \"get$_declarationAtRule\", \"_declarationAtRule$0\", 54);\n    _instance_0_u(_, \"get$_functionChild\", \"_functionChild$0\", 54);\n    _instance(_, \"get$expression\", 0, 0, null, [\"call$3$bracketList$singleEquals$until\", \"call$0\", \"call$2$singleEquals$until\", \"call$1$bracketList\", \"call$1$singleEquals\", \"call$1$until\"], [\"expression$3$bracketList$singleEquals$until\", \"expression$0\", \"expression$2$singleEquals$until\", \"expression$1$bracketList\", \"expression$1$singleEquals\", \"expression$1$until\"], 339, 0);\n    _instance_0_u(_, \"get$_number\", \"_number$0\", 340);\n    _instance_1_u(K.LimitedMapView.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_u(Z.MergedMapView.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_i(N.NoSourceMapBuffer0.prototype, \"get$write\", \"write$1\", 46);\n    _instance_1_u(F.PrefixedMapView.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_u(U.PublicMemberMapView.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_i(D.SourceMapBuffer0.prototype, \"get$write\", \"write$1\", 46);\n    _instance_1_u(R.UnprefixedMapView.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _static_1(B, \"utils__isPublic$closure\", \"isPublic\", 5);\n    _instance_1_u(_ = N._SerializeVisitor0.prototype, \"get$_visitMediaQuery\", \"_visitMediaQuery$1\", 242);\n    _instance_1_u(_, \"get$_isInvisible\", \"_isInvisible$1\", 6);\n    _instance(Y.SourceFile.prototype, \"get$span\", 0, 1, null, [\"call$2\", \"call$1\"], [\"span$2\", \"span$1\"], 247, 0);\n    _instance(Y.SourceSpanMixin.prototype, \"get$message\", 1, 1, function() {\n      return {color: null};\n    }, [\"call$2$color\", \"call$1\"], [\"message$2$color\", \"message$1\"], 254, 0);\n    _static(L, \"from_handlers__StreamTransformer__defaultHandleError$closure\", 3, null, [\"call$1$3\", \"call$3\"], [\"_StreamTransformer__defaultHandleError\", function(error, stackTrace, sink) {\n      return L._StreamTransformer__defaultHandleError(error, stackTrace, sink, type$.dynamic);\n    }], 471, 0);\n    _static(R, \"rate_limit___collectToList$closure\", 2, null, [\"call$1$2\", \"call$2\"], [\"_collectToList\", function(element, soFar) {\n      return R._collectToList(element, soFar, type$.dynamic);\n    }], 472, 0);\n    _static_1(K, \"color1___opacify$closure\", \"_opacify0\", 28);\n    _static_1(K, \"color1___transparentize$closure\", \"_transparentize0\", 28);\n    _static_1(Y, \"functions0___isUnique$closure\", \"_isUnique0\", 20);\n    _instance_1_u(K.LimitedMapView0.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_u(D.SelectorList0.prototype, \"get$_list2$_complexContainsParentSelector\", \"_list2$_complexContainsParentSelector$1\", 14);\n    _instance_1_u(Z.MergedMapView0.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_i(N.NoSourceMapBuffer.prototype, \"get$write\", \"write$1\", 46);\n    _instance_1_u(B.ModifiableCssNode0.prototype, \"get$_node2$_isInvisible\", \"_node2$_isInvisible$1\", 7);\n    _static_2(B, \"node___render$closure\", \"_render\", 473);\n    _static_1(B, \"node___renderSync$closure\", \"_renderSync\", 474);\n    _instance_0_u(_ = G.Parser1.prototype, \"get$whitespace\", \"whitespace$0\", 1);\n    _instance_0_u(_, \"get$loudComment\", \"loudComment$0\", 1);\n    _instance_0_u(_, \"get$string\", \"string$0\", 13);\n    _instance_1_u(F.PrefixedMapView0.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _instance_1_u(U.PublicMemberMapView0.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _static_1(U, \"sass__main$closure\", \"main\", 475);\n    _instance_0_u(U.SassParser0.prototype, \"get$loudComment\", \"loudComment$0\", 1);\n    _instance_1_u(_ = N._SerializeVisitor.prototype, \"get$_serialize0$_visitMediaQuery\", \"_serialize0$_visitMediaQuery$1\", 425);\n    _instance_1_u(_, \"get$_serialize0$_isInvisible\", \"_serialize0$_isInvisible$1\", 7);\n    _instance_1_i(D.SourceMapBuffer.prototype, \"get$write\", \"write$1\", 46);\n    _instance(_ = V.StylesheetParser0.prototype, \"get$_stylesheet0$_statement\", 0, 0, null, [\"call$1$root\", \"call$0\"], [\"_stylesheet0$_statement$1$root\", \"_stylesheet0$_statement$0\"], 430, 0);\n    _instance_0_u(_, \"get$_stylesheet0$_declarationChild\", \"_stylesheet0$_declarationChild$0\", 56);\n    _instance_0_u(_, \"get$_stylesheet0$_declarationAtRule\", \"_stylesheet0$_declarationAtRule$0\", 56);\n    _instance_0_u(_, \"get$_stylesheet0$_functionChild\", \"_stylesheet0$_functionChild$0\", 56);\n    _instance_0_u(_, \"get$_stylesheet0$_number\", \"_stylesheet0$_number$0\", 432);\n    _instance_1_u(R.UnprefixedMapView0.prototype, \"get$containsKey\", \"containsKey$1\", 23);\n    _static_1(B, \"utils0__isPublic$closure\", \"isPublic0\", 5);\n    _static_1(D, \"path__dirname$closure\", \"dirname\", 8);\n    _static_1(T, \"character__isWhitespace$closure\", \"isWhitespace\", 24);\n    _static_1(T, \"character__isNewline$closure\", \"isNewline\", 24);\n    _static_1(T, \"character__isHex$closure\", \"isHex\", 24);\n    _static_2(T, \"number0__fuzzyEquals$closure\", \"fuzzyEquals\", 36);\n    _static_2(T, \"number0__fuzzyLessThan$closure\", \"fuzzyLessThan\", 36);\n    _static_2(T, \"number0__fuzzyLessThanOrEquals$closure\", \"fuzzyLessThanOrEquals\", 36);\n    _static_2(T, \"number0__fuzzyGreaterThan$closure\", \"fuzzyGreaterThan\", 36);\n    _static_2(T, \"number0__fuzzyGreaterThanOrEquals$closure\", \"fuzzyGreaterThanOrEquals\", 36);\n    _static_1(T, \"number0__fuzzyRound$closure\", \"fuzzyRound\", 39);\n    _static_1(T, \"character0__isWhitespace$closure\", \"isWhitespace0\", 24);\n    _static_1(T, \"character0__isNewline$closure\", \"isNewline0\", 24);\n    _static_1(T, \"character0__isHex$closure\", \"isHex0\", 24);\n    _static_2(T, \"number2__fuzzyEquals$closure\", \"fuzzyEquals0\", 36);\n    _static_2(T, \"number2__fuzzyLessThan$closure\", \"fuzzyLessThan0\", 36);\n    _static_2(T, \"number2__fuzzyLessThanOrEquals$closure\", \"fuzzyLessThanOrEquals0\", 36);\n    _static_2(T, \"number2__fuzzyGreaterThan$closure\", \"fuzzyGreaterThan0\", 36);\n    _static_2(T, \"number2__fuzzyGreaterThanOrEquals$closure\", \"fuzzyGreaterThanOrEquals0\", 36);\n    _static_1(T, \"number2__fuzzyRound$closure\", \"fuzzyRound0\", 39);\n    _static_1(F, \"value1__wrapValue$closure\", \"wrapValue\", 317);\n  })();\n  (function inheritance() {\n    var _mixin = hunkHelpers.mixin,\n      _inherit = hunkHelpers.inherit,\n      _inheritMany = hunkHelpers.inheritMany;\n    _inherit(P.Object, null);\n    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P.Iterable, H.CastIterator, H.Closure, P.Error, P._ListBase_Object_ListMixin, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.FollowedByIterator, H.WhereTypeIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.TypeErrorDecoder, H.NullThrownFromJavaScriptException, H.ExceptionAndStackTrace, H._StackTrace, H._Required, P.MapMixin, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H._AllMatchesIterator, H.StringMatch, H._StringAllMatchesIterator, H.Rti, H._FunctionParameters, H._Type, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P.Stream, P._BufferingStreamSubscription, P._BroadcastStreamController, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.StreamTransformerBase, P._StreamController, P._SyncStreamControllerDispatch, P._AsyncStreamControllerDispatch, P._AddStreamState, P._DelayedEvent, P._DelayedDone, P._PendingEvents, P._DoneStreamSubscription, P._StreamIterator, P.AsyncError, P._ZoneFunction, P._RunNullaryZoneFunction, P._RunUnaryZoneFunction, P._RunBinaryZoneFunction, P._RegisterNullaryZoneFunction, P._RegisterUnaryZoneFunction, P._RegisterBinaryZoneFunction, P._ZoneSpecification, P._ZoneDelegate, P._Zone, P._HashMapKeyIterator, P._SetBase, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.ListMixin, P._MapBaseValueIterator, P._UnmodifiableMapMixin, P._ListQueueIterator, P.Codec, P._Base64Encoder, P.ChunkedConversionSink, P._JsonStringifier, P.StringConversionSinkMixin, P._Utf8Encoder, P._Utf8Decoder, P.DateTime, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.MapEntry, P.Null, P._StringStackTrace, P.RuneIterator, P.StringBuffer, P._Uri, P.UriData, P._SimpleUri, P._JSRandom, N.ArgParser, V.ArgResults, G.Option, G.OptionType, G.Parser0, G.Usage, V.ErrorResult, F.ValueResult, Y.StreamCompleter, L.StreamGroup, L._StreamGroupState, G.StreamQueue, G._NextRequest, Q.Repl, B.ReplAdapter, U.DefaultEquality, U.IterableEquality, U.ListEquality, U._MapEntry, U.MapEquality, Q._QueueList_Object_ListMixin, M._DelegatingIterableBase, L.UnmodifiableSetMixin, M.Context, M._PathDirection, M._PathRelation, O.Style, X.ParsedPath, X.PathException, F.CssMediaQuery, F._SingletonCssMediaQueryMergeResult, F.MediaQuerySuccessfulMergeResult, B.AstNode, F.ModifiableCssValue, F.CssValue, B._FakeAstNode, Z.Argument, B.ArgumentDeclaration, X.ArgumentInvocation, V.AtRootQuery, Z.ConfiguredVariable, V.BinaryOperationExpression, V.BinaryOperator, Z.BooleanExpression, K.ColorExpression, F.FunctionExpression, L.IfExpression, D.ListExpression, A.MapExpression, O.NullExpression, T.NumberExpression, T.ParenthesizedExpression, T.SelectorExpression, D.StringExpression, X.UnaryOperationExpression, X.UnaryOperator, F.ValueExpression, S.VariableExpression, B.DynamicImport, Q.StaticImport, X.Interpolation, M.ParentStatement, Q.ContentRule, Q.DebugRule, D.ErrorRule, X.ExtendRule, L.ForwardRule, V.IfRule, V.IfClause, B.ImportRule, A.IncludeRule, L.LoudComment, B.ReturnRule, B.SilentComment, T.UseRule, Z.VariableDeclaration, Y.WarnRule, Y.SupportsAnything, L.SupportsDeclaration, F.SupportsFunction, X.SupportsInterpolation, M.SupportsNegation, U.SupportsOperation, T.Selector, N.AttributeOperator, S.Combinator, D.QualifiedName, X.CompileResult, Q.AsyncEnvironment, Q._EnvironmentModule0, O.AsyncImportCache, S.AsyncBuiltInCallable, Q.BuiltInCallable, L.PlainCssCallable, E.UserDefinedCallable, A.Configuration, Z.ConfiguredValue, O.Environment, O._EnvironmentModule, G.SourceSpanException, E.SassScriptException, B.ExecutableOptions, B.UsageException, A._Watcher, T.EmptyExtender, F.Extender, S.Extension, L.ExtendMode, R.ImportCache, B.AsyncImporter, E.ImporterResult, Z.InterpolationBuffer, B.FileSystemException, B.Stderr, F._QuietLogger, S.StderrLogger, T.TrackingLogger, Q.BuiltInModule, R.ForwardedModuleView, B.ShadowedModuleView, G.Parser, M.StylesheetGraph, M.StylesheetNode, M.Syntax, G.FixedLengthListBuilder, U.MultiDirWatcher, N.NoSourceMapBuffer0, D.SourceMapBuffer0, F.Value, D.ListSeparator, E._EvaluateVisitor0, E._ImportedCssVisitor0, E.EvaluateResult, E._ArgumentResults0, V._CloneCssVisitor, R.Evaluator, R._EvaluateVisitor, R._ImportedCssVisitor, R._ArgumentResults, D.RecursiveStatementVisitor, N._SerializeVisitor0, N.OutputStyle, N.LineFeed, N.SerializeResult, L.Entry, T.Mapping, T.TargetLineEntry, T.TargetEntry, Y.SourceFile, D.SourceLocationMixin, Y.SourceSpanMixin, U.Highlighter, U._Highlight, U._Line, V.SourceLocation, U.Chain, A.Frame, T.LazyTrace, Y.Trace, N.UnparsedFrame, X.StringScanner, S._SpanScannerState, A.AsciiGlyphSet, K.UnicodeGlyphSet, S.Tuple2, S.Tuple3, E.WatchEvent, E.ChangeType, Y.SupportsAnything0, Z.Argument0, B.ArgumentDeclaration0, X.ArgumentInvocation0, F.Value0, B.AsyncImporter0, S.AsyncBuiltInCallable0, X.CompileResult0, Q.AsyncEnvironment0, Q._EnvironmentModule2, E._EvaluateVisitor2, E._ImportedCssVisitor2, E.EvaluateResult0, E._ArgumentResults2, O.AsyncImportCache0, G.Parser1, V.AtRootQuery0, M.ParentStatement0, B.AstNode0, T.Selector0, N.AttributeOperator0, V.BinaryOperationExpression0, V.BinaryOperator0, Z.BooleanExpression0, Q.BuiltInCallable0, Q.BuiltInModule0, V._CloneCssVisitor0, K.ColorExpression0, S.Combinator0, A.Configuration0, Z.ConfiguredValue0, Z.ConfiguredVariable0, Q.ContentRule0, Q.DebugRule0, L.SupportsDeclaration0, B.DynamicImport0, T.EmptyExtender0, O.Environment0, O._EnvironmentModule1, D.ErrorRule0, R._EvaluateVisitor1, R._ImportedCssVisitor1, R._ArgumentResults1, E.SassScriptException0, X.ExtendRule0, F.Extender0, S.Extension0, G.FixedLengthListBuilder0, L.ForwardRule0, R.ForwardedModuleView0, F.FunctionExpression0, F.SupportsFunction0, L.IfExpression0, V.IfRule0, V.IfClause0, F.NodeImporter, R.ImportCache0, B.ImportRule0, A.IncludeRule0, X.Interpolation0, X.SupportsInterpolation0, Z.InterpolationBuffer0, D.ListExpression0, D.ListSeparator0, L.LoudComment0, A.MapExpression0, F.CssMediaQuery0, F._SingletonCssMediaQueryMergeResult0, F.MediaQuerySuccessfulMergeResult0, L.ExtendMode0, M.SupportsNegation0, N.NoSourceMapBuffer, B._FakeAstNode0, B.FileSystemException0, B.Stderr0, O.NullExpression0, T.NumberExpression0, U.SupportsOperation0, T.ParenthesizedExpression0, L.PlainCssCallable0, D.QualifiedName0, E.ImporterResult0, B.ReturnRule0, T.SelectorExpression0, N._SerializeVisitor, N.OutputStyle0, N.LineFeed0, N.SerializeResult0, B.ShadowedModuleView0, B.SilentComment0, D.SourceMapBuffer, Q.StaticImport0, S.StderrLogger0, D.StringExpression0, M.Syntax0, X.UnaryOperationExpression0, X.UnaryOperator0, T.UseRule0, E.UserDefinedCallable0, F.CssValue0, F.ValueExpression0, F.ModifiableCssValue0, S.VariableExpression0, Z.VariableDeclaration0, Y.WarnRule0]);\n    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeTypedData]);\n    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, B.Stdin, B.Stdout, B.ReadlineModule, B.ReadlineOptions, B.ReadlineInterface, V.BufferModule, V.BufferConstants, V.Buffer, F.ConsoleModule, F.Console, F.EventEmitter, D.FS, D.FSConstants, D.FSWatcher, D.ReadStream, D.ReadStreamOptions, D.WriteStream, D.WriteStreamOptions, D.Stats, E.Promise, E.Date, E.JsError, E.Atomics, Y.Modules, Y.Module1, Y.Net, Y.Socket, Y.NetAddress, Y.NetServer, X.NodeJsError, X.Process, X.CPUUsage, X.Release, D.StreamModule, D.Readable, D.Writable, D.Duplex, D.Transform, D.WritableOptions, D.ReadableOptions, L.Immediate, L.Timeout, N.TTY, M.Util, Y.Chokidar, Y.ChokidarOptions, Y.ChokidarWatcher, F.JSFunction, F.NodeImporterResult, B._PropertyDescriptor, Y.Chokidar0, Y.ChokidarOptions0, Y.ChokidarWatcher0, K._NodeSassColor, D.Exports, E.FiberClass, E.Fiber, F.JSFunction0, F.NodeImporterResult0, D._NodeSassList, A._NodeSassMap, T._NodeSassNumber, Z.RenderContext, L.RenderContextOptions, R.RenderOptions, U.RenderResult, U.RenderResultStats, R._Exports, D._NodeSassString, G.Types, B._PropertyDescriptor0]);\n    _inherit(J.JSUnmodifiableArray, J.JSArray);\n    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);\n    _inheritMany(P.Iterable, [H._CastIterableBase, H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.SkipIterable, H.SkipWhileIterable, H.FollowedByIterable, H.WhereTypeIterable, H._ConstantMapKeyIterable, P.IterableBase, H._StringAllMatchesIterable, P.Runes]);\n    _inheritMany(H._CastIterableBase, [H.CastIterable, H.__CastListBase__CastIterableBase_ListMixin, H.CastSet, H.CastQueue]);\n    _inherit(H._EfficientLengthCastIterable, H.CastIterable);\n    _inherit(H._CastListBase, H.__CastListBase__CastIterableBase_ListMixin);\n    _inheritMany(H.Closure, [H._CastListBase_sort_closure, H.ConstantStringMap_values_closure, H.Instantiation, H.Primitives_functionNoSuchMethod_closure, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.JsLinkedHashMap_addAll_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._asyncStarHelper_closure, P._asyncStarHelper_closure0, P._AsyncStarStreamController__resumeBody, P._AsyncStarStreamController__resumeBody_closure, P._AsyncStarStreamController_closure0, P._AsyncStarStreamController_closure1, P._AsyncStarStreamController_closure, P._AsyncStarStreamController__closure, P._SyncBroadcastStreamController__sendData_closure, P._SyncBroadcastStreamController__sendError_closure, P._SyncBroadcastStreamController__sendDone_closure, P.Future_wait__error_set, P.Future_wait__stackTrace_set, P.Future_wait__error_get, P.Future_wait__stackTrace_get, P.Future_wait_handleError, P.Future_wait_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncCompleteWithValue_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_Stream$fromFuture_closure, P.Stream_Stream$fromFuture_closure0, P.Stream_length_closure, P.Stream_length_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._AddStreamState_cancel_closure, P._BufferingStreamSubscription__sendError_sendError, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._CustomZone_bindCallback_closure, P._CustomZone_bindUnaryCallback_closure, P._CustomZone_bindCallbackGuarded_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._HashMap_values_closure, P._HashMap_addAll_closure, P._LinkedCustomHashMap_closure, P.HashMap_HashMap$from_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P.MapMixin_entries_closure, P.Utf8Decoder_closure, P.Utf8Decoder_closure0, P._JsonStringifier_writeMap_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, P.Uri__parseIPv4Address_error, P.Uri_parseIPv6Address_error, P.Uri_parseIPv6Address_parseHex, P._Uri__makePath_closure, P._createTables_closure, P._createTables_build, P._createTables_setChars, P._createTables_setRange, N.ArgParser_findByAbbreviation_closure, N.ArgParser_findByAbbreviation_closure0, G.Parser_parse_closure, G.Parser_setOption_closure, G.Usage_generate_closure, G.Usage_buildAllowedList_closure, L.StreamGroup_add_closure, L.StreamGroup_add_closure0, L.StreamGroup__onListen_closure, L.StreamGroup__onCancel_closure, L.StreamGroup__onCancel_closure0, L.StreamGroup__listenToStream_closure, G.StreamQueue__ensureListening_closure, G.StreamQueue__ensureListening_closure1, G.StreamQueue__ensureListening_closure0, Q.closure113, B.ReplAdapter_runAsync_closure, B.defaultCompare_closure, M.futureToPromise_closure, M.Context_join_closure, M.Context_joinAll_closure, M.Context_split_closure, M._validateArgList_closure, X.ParsedPath_normalize_closure, X.ParsedPath__splitExtension_closure, X.ParsedPath__splitExtension_closure0, K.PathMap__create_closure, K.PathMap__create_closure0, K.PathMap__create_closure1, L.WindowsStyle_absolutePathToUri_closure, B.ArgumentDeclaration_verify_closure, B.ArgumentDeclaration_verify_closure0, D.ListExpression_toString_closure, A.MapExpression_toString_closure, X.Interpolation_toString_closure, V.EachRule_toString_closure, V.IfRule_toString_closure, V.IfClause$__closure, V.IfClause$___closure, M.ParentStatement_closure, M.ParentStatement__closure, S.ComplexSelector_isInvisible_closure, X.CompoundSelector_isInvisible_closure, N.IDSelector_unify_closure, D.SelectorList_isInvisible_closure, D.SelectorList_asSassList_closure, D.SelectorList_asSassList__closure, D.SelectorList_unify_closure, D.SelectorList_unify__closure, D.SelectorList_unify___closure, D.SelectorList_resolveParentSelectors_closure, D.SelectorList_resolveParentSelectors__closure, D.SelectorList_resolveParentSelectors__closure0, D.SelectorList__complexContainsParentSelector_closure, D.SelectorList__complexContainsParentSelector__closure, D.SelectorList__resolveParentSelectorsCompound_closure, D.SelectorList__resolveParentSelectorsCompound_closure0, D.SelectorList__resolveParentSelectorsCompound_closure1, X._compileStylesheet_closure0, Q.AsyncEnvironment_importForwards_closure, Q.AsyncEnvironment_importForwards_closure0, Q.AsyncEnvironment_importForwards_closure1, Q.AsyncEnvironment_importForwards_closure2, Q.AsyncEnvironment__getVariableFromGlobalModule_closure, Q.AsyncEnvironment_setVariable_closure, Q.AsyncEnvironment_setVariable_closure0, Q.AsyncEnvironment_setVariable_closure1, Q.AsyncEnvironment__getFunctionFromGlobalModule_closure, Q.AsyncEnvironment__getMixinFromGlobalModule_closure, Q._EnvironmentModule__EnvironmentModule_closure5, Q._EnvironmentModule__EnvironmentModule_closure6, Q._EnvironmentModule__EnvironmentModule_closure7, Q._EnvironmentModule__EnvironmentModule_closure8, Q._EnvironmentModule__EnvironmentModule_closure9, Q._EnvironmentModule__EnvironmentModule_closure10, O.AsyncImportCache_canonicalize_closure, O.AsyncImportCache__canonicalize_closure, O.AsyncImportCache_importCanonical_closure, O.AsyncImportCache_humanize_closure, O.AsyncImportCache_humanize_closure0, O.AsyncImportCache_humanize_closure1, S.AsyncBuiltInCallable$mixin_closure, Q.BuiltInCallable$mixin_closure, U._compileStylesheet_closure, O.Environment_importForwards_closure, O.Environment_importForwards_closure0, O.Environment_importForwards_closure1, O.Environment_importForwards_closure2, O.Environment__getVariableFromGlobalModule_closure, O.Environment_setVariable_closure, O.Environment_setVariable_closure0, O.Environment_setVariable_closure1, O.Environment__getFunctionFromGlobalModule_closure, O.Environment__getMixinFromGlobalModule_closure, O._EnvironmentModule__EnvironmentModule_closure, O._EnvironmentModule__EnvironmentModule_closure0, O._EnvironmentModule__EnvironmentModule_closure1, O._EnvironmentModule__EnvironmentModule_closure2, O._EnvironmentModule__EnvironmentModule_closure3, O._EnvironmentModule__EnvironmentModule_closure4, D._writeSourceMap_closure, B.ExecutableOptions_closure, B.ExecutableOptions_emitErrorCss_closure, A.watch_closure, A._Watcher__debounceEvents_closure, A._Watcher__debounceEvents__closure, F.Extender_extensionsWhereTarget_closure, F.Extender__registerSelector_closure, F.Extender_addExtension_closure, F.Extender_addExtension_closure0, F.Extender_addExtension_closure1, F.Extender__extendExistingExtensions_closure, F.Extender__extendExistingExtensions_closure0, F.Extender_addExtensions_closure, F.Extender_addExtensions__closure, F.Extender_addExtensions___closure, F.Extender_addExtensions___closure0, F.Extender__extendList_closure, F.Extender__extendComplex_closure, F.Extender__extendComplex_closure0, F.Extender__extendComplex__closure, F.Extender__extendComplex__closure0, F.Extender__extendComplex___closure, F.Extender__extendCompound_closure, F.Extender__extendCompound_closure0, F.Extender__extendCompound__closure, F.Extender__extendCompound__closure0, F.Extender__extendCompound_closure1, F.Extender__extendCompound_closure2, F.Extender__extendCompound_closure3, F.Extender__extendCompound_closure4, F.Extender__extendSimple_withoutPseudo, F.Extender__extendSimple_closure, F.Extender__extendPseudo_closure, F.Extender__extendPseudo_closure0, F.Extender__extendPseudo_closure1, F.Extender__extendPseudo_closure2, F.Extender__extendPseudo_closure3, F.Extender__trim_closure, F.Extender__trim_closure0, F.Extender_clone_closure, Y.unifyComplex_closure, Y._weaveParents_closure, Y._weaveParents_closure0, Y._weaveParents_closure1, Y._weaveParents__closure1, Y._weaveParents_closure2, Y._weaveParents_closure3, Y._weaveParents__closure0, Y._weaveParents_closure4, Y._weaveParents_closure5, Y._weaveParents__closure, Y._mustUnify_closure, Y._mustUnify__closure, Y.paths_closure, Y.paths__closure, Y.paths___closure, Y._hasRoot_closure, Y.listIsSuperselector_closure, Y.listIsSuperselector__closure, Y._simpleIsSuperselectorOfCompound_closure, Y._simpleIsSuperselectorOfCompound__closure, Y._selectorPseudoIsSuperselector_closure, Y._selectorPseudoIsSuperselector_closure0, Y._selectorPseudoIsSuperselector_closure1, Y._selectorPseudoIsSuperselector_closure2, Y._selectorPseudoIsSuperselector_closure3, Y._selectorPseudoIsSuperselector__closure, Y._selectorPseudoIsSuperselector___closure, Y._selectorPseudoIsSuperselector___closure0, Y._selectorPseudoIsSuperselector_closure4, Y._selectorPseudoIsSuperselector_closure5, Y._selectorPseudosNamed_closure, Y.closure, K.closure44, K.closure45, K.closure46, K.closure47, K.closure48, K.closure49, K.closure50, K.closure51, K.closure52, K.closure53, K.closure54, K.closure55, K.closure56, K.closure57, K.closure58, K.closure59, K.closure60, K.closure61, K.closure62, K.closure63, K.closure64, K.closure65, K.closure66, K.closure67, K.closure68, K.closure69, K._closure8, K.closure70, K.closure99, K.closure100, K.closure101, K.closure102, K.closure103, K.closure104, K.closure105, K.closure106, K._closure13, K.closure107, K.closure82, K.closure81, K.closure80, K.closure79, K.closure78, K.closure77, K.closure76, K.closure75, K.closure73, K.closure72, K.closure71, K.closure74, K.closure_hexString, K._updateComponents_getParam, K._updateComponents_closure, K._updateComponents_updateValue, K._updateComponents_updateRgb, K._functionString_closure, K._removedColorFunction_closure, K._parseChannels_closure, D.closure43, D.closure42, D.closure41, D.closure40, D.closure39, D.closure38, D._closure5, D._closure6, D._closure7, D.closure37, D.closure35, D.closure36, A.closure34, A.closure97, A._closure12, A.closure98, A._closure11, A.closure32, A.closure33, A._closure4, A.closure96, A.closure95, A._closure10, A.closure30, A.closure31, A.closure29, A.closure28, A.closure27, A._modify__modifyNestedMap, A._deepMergeImpl__ensureMutable, A._deepMergeImpl_closure, K.closure25, K.closure90, K.closure24, K.closure23, K.closure22, K.closure26, K.closure88, K._closure9, K.closure87, K.closure86, K.closure84, K.closure94, K.closure93, K.closure92, K.closure91, K.closure89, K.closure85, K.closure83, K.closure18, K.closure17, K.closure19, K.closure21, K.closure20, K._numberFunction_closure, Q.closure108, Q.closure109, Q.closure110, Q.closure111, T.closure13, T._closure1, T._closure2, T.closure12, T._closure, T._closure0, T.__closure, T.closure11, T.closure10, T.closure9, T.closure16, T.closure15, T._closure3, T.closure14, D.closure8, D.closure7, D.closure3, D.closure2, D.closure1, D.closure0, D.closure6, D.closure5, D.closure4, R.ImportCache_canonicalize_closure, R.ImportCache__canonicalize_closure, R.ImportCache_importCanonical_closure, R.ImportCache_humanize_closure, R.ImportCache_humanize_closure0, R.ImportCache_humanize_closure1, B.resolveImportPath_closure, B.resolveImportPath_closure0, B._tryPathAsDirectory_closure, B._exactlyOne_closure, F.realCasePath_closure, B._readFile_closure, B.writeFile_closure, B.deleteFile_closure, B.readStdin_closure, B.readStdin_closure0, B.readStdin_closure1, B.readStdin_closure2, B.fileExists_closure, B.dirExists_closure, B.ensureDir_closure, B.listDir_closure, B.listDir__closure, B.listDir__closure0, B.listDir_closure_list, B.listDir__list_closure, B.modificationTime_closure, B.watchDir_closure, B.watchDir_closure0, B.watchDir_closure1, B.watchDir_closure2, B.watchDir_closure3, B.watchDir__closure, V.AtRootQueryParser_parse_closure, Q.closure112, E.KeyframeSelectorParser_parse_closure, F.MediaQueryParser_parse_closure, G.Parser__parseIdentifier_closure, G.Parser_scanIdentChar_matches, U.SassParser_children_closure, T.SelectorParser_parse_closure, T.SelectorParser_parseCompoundSelector_closure, V.StylesheetParser_parse_closure, V.StylesheetParser_parse__closure, V.StylesheetParser_parse__closure0, V.StylesheetParser_parseArgumentDeclaration_closure, V.StylesheetParser_parseVariableDeclaration_closure, V.StylesheetParser_parseUseRule_closure, V.StylesheetParser__parseSingleProduction_closure, V.StylesheetParser__statement_closure, V.StylesheetParser_variableDeclarationWithoutNamespace_closure, V.StylesheetParser_variableDeclarationWithoutNamespace_closure0, V.StylesheetParser__declarationOrBuffer_closure, V.StylesheetParser__declarationOrBuffer_closure0, V.StylesheetParser__styleRule_closure, V.StylesheetParser__propertyOrVariableDeclaration_closure, V.StylesheetParser__propertyOrVariableDeclaration_closure0, V.StylesheetParser__atRootRule_closure, V.StylesheetParser__atRootRule_closure0, V.StylesheetParser__eachRule_closure, V.StylesheetParser__functionRule_closure, V.StylesheetParser__forRule_closure, V.StylesheetParser__forRule_closure0, V.StylesheetParser__memberList_closure, V.StylesheetParser__includeRule_closure, V.StylesheetParser_mediaRule_closure, V.StylesheetParser__mixinRule_closure, V.StylesheetParser_mozDocumentRule_closure, V.StylesheetParser_supportsRule_closure, V.StylesheetParser__whileRule_closure, V.StylesheetParser_unknownAtRule_closure, V.StylesheetParser_expression_resetState, V.StylesheetParser_expression_resolveOneOperation, V.StylesheetParser_expression_resolveOperations, V.StylesheetParser_expression_addSingleExpression, V.StylesheetParser_expression_addOperator, V.StylesheetParser_expression_resolveSpaceExpressions, V.StylesheetParser__expressionUntilComma_closure, V.StylesheetParser__unicodeRange_closure, V.StylesheetParser__unicodeRange_closure0, V.StylesheetParser_identifierLike_closure, V.StylesheetParser__expressionUntilComparison_closure, V.StylesheetParser__publicIdentifier_closure, M.StylesheetGraph_modifiedSince_transitiveModificationTime, M.StylesheetGraph_modifiedSince_transitiveModificationTime_closure, M.StylesheetGraph__add_closure, M.StylesheetGraph_addCanonical_closure, M.StylesheetGraph_reload_closure, M.StylesheetGraph__recanonicalizeImportsForNode_closure, M.StylesheetGraph__nodeFor_closure, M.StylesheetGraph__nodeFor_closure0, F._PrefixedKeys_iterator_closure, D.SourceMapBuffer__addEntry_closure, D.SourceMapBuffer_buildSourceMap_closure, R._UnprefixedKeys_iterator_closure, R._UnprefixedKeys_iterator_closure0, B.indent_closure, B.flattenVertically_closure, B.flattenVertically_closure0, B.longestCommonSubsequence_closure, B.longestCommonSubsequence_closure0, B.longestCommonSubsequence_closure1, B.longestCommonSubsequence_backtrack, B.mapAddAll2_closure, K.SassColor_SassColor$hwb_toRgb, D.SassList_isBlank_closure, A.SassMap_asList_closure, T.SassNumber_valueInUnits_closure, T.SassNumber_valueInUnits_closure0, T.SassNumber_valueInUnits_closure1, T.SassNumber_valueInUnits_closure2, T.SassNumber_modulo_closure, T.SassNumber_plus_closure, T.SassNumber_minus_closure, T.SassNumber__multiplyUnits_closure, T.SassNumber__multiplyUnits_closure0, T.SassNumber__multiplyUnits_closure1, T.SassNumber__multiplyUnits_closure2, T.SassNumber__areAnyConvertible_closure, T.SassNumber__canonicalMultiplier_closure, E._EvaluateVisitor_closure9, E._EvaluateVisitor_closure10, E._EvaluateVisitor_closure11, E._EvaluateVisitor_closure12, E._EvaluateVisitor_closure13, E._EvaluateVisitor_closure14, E._EvaluateVisitor_closure15, E._EvaluateVisitor_closure16, E._EvaluateVisitor__closure4, E._EvaluateVisitor_closure17, E._EvaluateVisitor_closure18, E._EvaluateVisitor__closure2, E._EvaluateVisitor__closure3, E._EvaluateVisitor_run_closure0, E._EvaluateVisitor__withWarnCallback_closure0, E._EvaluateVisitor__loadModule_closure1, E._EvaluateVisitor__loadModule_closure2, E._EvaluateVisitor__execute_closure0, E._EvaluateVisitor__combineCss_closure2, E._EvaluateVisitor__combineCss_closure3, E._EvaluateVisitor__combineCss_closure4, E._EvaluateVisitor__extendModules_closure1, E._EvaluateVisitor__extendModules_closure2, E._EvaluateVisitor__topologicalModules_visitModule0, E._EvaluateVisitor_visitAtRootRule_closure2, E._EvaluateVisitor_visitAtRootRule_closure3, E._EvaluateVisitor_visitAtRootRule_closure4, E._EvaluateVisitor__scopeForAtRoot_closure5, E._EvaluateVisitor__scopeForAtRoot_closure6, E._EvaluateVisitor__scopeForAtRoot_closure7, E._EvaluateVisitor__scopeForAtRoot__closure0, E._EvaluateVisitor__scopeForAtRoot_closure8, E._EvaluateVisitor__scopeForAtRoot_closure9, E._EvaluateVisitor__scopeForAtRoot_closure10, E._EvaluateVisitor_visitContentRule_closure0, E._EvaluateVisitor_visitDeclaration_closure0, E._EvaluateVisitor_visitEachRule_closure2, E._EvaluateVisitor_visitEachRule_closure3, E._EvaluateVisitor_visitEachRule_closure4, E._EvaluateVisitor_visitEachRule__closure0, E._EvaluateVisitor_visitEachRule___closure0, E._EvaluateVisitor_visitExtendRule_closure0, E._EvaluateVisitor_visitAtRule_closure1, E._EvaluateVisitor_visitAtRule__closure0, E._EvaluateVisitor_visitAtRule_closure2, E._EvaluateVisitor_visitForRule_closure4, E._EvaluateVisitor_visitForRule_closure5, E._EvaluateVisitor_visitForRule_closure6, E._EvaluateVisitor_visitForRule_closure7, E._EvaluateVisitor_visitForRule_closure8, E._EvaluateVisitor_visitForRule__closure0, E._EvaluateVisitor_visitForwardRule_closure1, E._EvaluateVisitor_visitForwardRule_closure2, E._EvaluateVisitor__assertConfigurationIsEmpty_closure0, E._EvaluateVisitor_visitIfRule_closure0, E._EvaluateVisitor_visitIfRule__closure0, E._EvaluateVisitor__visitDynamicImport_closure0, E._EvaluateVisitor__visitDynamicImport__closure0, E._EvaluateVisitor_visitIncludeRule_closure2, E._EvaluateVisitor_visitIncludeRule_closure3, E._EvaluateVisitor_visitIncludeRule_closure4, E._EvaluateVisitor_visitIncludeRule__closure0, E._EvaluateVisitor_visitIncludeRule___closure0, E._EvaluateVisitor_visitIncludeRule____closure0, E._EvaluateVisitor_visitMediaRule_closure1, E._EvaluateVisitor_visitMediaRule__closure0, E._EvaluateVisitor_visitMediaRule___closure0, E._EvaluateVisitor_visitMediaRule_closure2, E._EvaluateVisitor__visitMediaQueries_closure0, E._EvaluateVisitor_visitStyleRule_closure6, E._EvaluateVisitor_visitStyleRule_closure7, E._EvaluateVisitor_visitStyleRule_closure8, E._EvaluateVisitor_visitStyleRule_closure9, E._EvaluateVisitor_visitStyleRule_closure10, E._EvaluateVisitor_visitStyleRule_closure11, E._EvaluateVisitor_visitStyleRule__closure0, E._EvaluateVisitor_visitStyleRule_closure12, E._EvaluateVisitor_visitSupportsRule_closure1, E._EvaluateVisitor_visitSupportsRule__closure0, E._EvaluateVisitor_visitSupportsRule_closure2, E._EvaluateVisitor_visitVariableDeclaration_closure2, E._EvaluateVisitor_visitVariableDeclaration_closure3, E._EvaluateVisitor_visitVariableDeclaration_closure4, E._EvaluateVisitor_visitUseRule_closure0, E._EvaluateVisitor_visitWarnRule_closure0, E._EvaluateVisitor_visitWhileRule_closure0, E._EvaluateVisitor_visitWhileRule__closure0, E._EvaluateVisitor_visitBinaryOperationExpression_closure0, E._EvaluateVisitor_visitVariableExpression_closure0, E._EvaluateVisitor_visitListExpression_closure0, E._EvaluateVisitor_visitFunctionExpression_closure1, E._EvaluateVisitor_visitFunctionExpression_closure2, E._EvaluateVisitor__runUserDefinedCallable_closure0, E._EvaluateVisitor__runUserDefinedCallable__closure0, E._EvaluateVisitor__runUserDefinedCallable___closure0, E._EvaluateVisitor__runUserDefinedCallable____closure0, E._EvaluateVisitor__runFunctionCallable_closure0, E._EvaluateVisitor__runBuiltInCallable_closure1, E._EvaluateVisitor__runBuiltInCallable_closure2, E._EvaluateVisitor__evaluateArguments_closure0, E._EvaluateVisitor__evaluateMacroArguments_closure3, E._EvaluateVisitor__evaluateMacroArguments_closure4, E._EvaluateVisitor__evaluateMacroArguments_closure5, E._EvaluateVisitor__evaluateMacroArguments_closure6, E._EvaluateVisitor__addRestMap_closure1, E._EvaluateVisitor__addRestMap_closure2, E._EvaluateVisitor__verifyArguments_closure0, E._EvaluateVisitor_visitStringExpression_closure0, E._EvaluateVisitor_visitCssAtRule_closure1, E._EvaluateVisitor_visitCssAtRule_closure2, E._EvaluateVisitor_visitCssKeyframeBlock_closure1, E._EvaluateVisitor_visitCssKeyframeBlock_closure2, E._EvaluateVisitor_visitCssMediaRule_closure1, E._EvaluateVisitor_visitCssMediaRule__closure0, E._EvaluateVisitor_visitCssMediaRule___closure0, E._EvaluateVisitor_visitCssMediaRule_closure2, E._EvaluateVisitor_visitCssStyleRule_closure1, E._EvaluateVisitor_visitCssStyleRule__closure0, E._EvaluateVisitor_visitCssStyleRule_closure2, E._EvaluateVisitor_visitCssSupportsRule_closure1, E._EvaluateVisitor_visitCssSupportsRule__closure0, E._EvaluateVisitor_visitCssSupportsRule_closure2, E._EvaluateVisitor__performInterpolation_closure0, E._EvaluateVisitor__serialize_closure0, E._EvaluateVisitor__stackTrace_closure0, E._ImportedCssVisitor_visitCssAtRule_closure0, E._ImportedCssVisitor_visitCssMediaRule_closure0, E._ImportedCssVisitor_visitCssStyleRule_closure0, E._ImportedCssVisitor_visitCssSupportsRule_closure0, R._EvaluateVisitor_closure, R._EvaluateVisitor_closure0, R._EvaluateVisitor_closure1, R._EvaluateVisitor_closure2, R._EvaluateVisitor_closure3, R._EvaluateVisitor_closure4, R._EvaluateVisitor_closure5, R._EvaluateVisitor_closure6, R._EvaluateVisitor__closure1, R._EvaluateVisitor_closure7, R._EvaluateVisitor_closure8, R._EvaluateVisitor__closure, R._EvaluateVisitor__closure0, R._EvaluateVisitor_run_closure, R._EvaluateVisitor_runExpression_closure, R._EvaluateVisitor_runExpression__closure, R._EvaluateVisitor_runStatement_closure, R._EvaluateVisitor_runStatement__closure, R._EvaluateVisitor__withWarnCallback_closure, R._EvaluateVisitor__loadModule_closure, R._EvaluateVisitor__loadModule_closure0, R._EvaluateVisitor__execute_closure, R._EvaluateVisitor__combineCss_closure, R._EvaluateVisitor__combineCss_closure0, R._EvaluateVisitor__combineCss_closure1, R._EvaluateVisitor__extendModules_closure, R._EvaluateVisitor__extendModules_closure0, R._EvaluateVisitor__topologicalModules_visitModule, R._EvaluateVisitor_visitAtRootRule_closure, R._EvaluateVisitor_visitAtRootRule_closure0, R._EvaluateVisitor_visitAtRootRule_closure1, R._EvaluateVisitor__scopeForAtRoot_closure, R._EvaluateVisitor__scopeForAtRoot_closure0, R._EvaluateVisitor__scopeForAtRoot_closure1, R._EvaluateVisitor__scopeForAtRoot__closure, R._EvaluateVisitor__scopeForAtRoot_closure2, R._EvaluateVisitor__scopeForAtRoot_closure3, R._EvaluateVisitor__scopeForAtRoot_closure4, R._EvaluateVisitor_visitContentRule_closure, R._EvaluateVisitor_visitDeclaration_closure, R._EvaluateVisitor_visitEachRule_closure, R._EvaluateVisitor_visitEachRule_closure0, R._EvaluateVisitor_visitEachRule_closure1, R._EvaluateVisitor_visitEachRule__closure, R._EvaluateVisitor_visitEachRule___closure, R._EvaluateVisitor_visitExtendRule_closure, R._EvaluateVisitor_visitAtRule_closure, R._EvaluateVisitor_visitAtRule__closure, R._EvaluateVisitor_visitAtRule_closure0, R._EvaluateVisitor_visitForRule_closure, R._EvaluateVisitor_visitForRule_closure0, R._EvaluateVisitor_visitForRule_closure1, R._EvaluateVisitor_visitForRule_closure2, R._EvaluateVisitor_visitForRule_closure3, R._EvaluateVisitor_visitForRule__closure, R._EvaluateVisitor_visitForwardRule_closure, R._EvaluateVisitor_visitForwardRule_closure0, R._EvaluateVisitor__assertConfigurationIsEmpty_closure, R._EvaluateVisitor_visitIfRule_closure, R._EvaluateVisitor_visitIfRule__closure, R._EvaluateVisitor__visitDynamicImport_closure, R._EvaluateVisitor__visitDynamicImport__closure, R._EvaluateVisitor_visitIncludeRule_closure, R._EvaluateVisitor_visitIncludeRule_closure0, R._EvaluateVisitor_visitIncludeRule_closure1, R._EvaluateVisitor_visitIncludeRule__closure, R._EvaluateVisitor_visitIncludeRule___closure, R._EvaluateVisitor_visitIncludeRule____closure, R._EvaluateVisitor_visitMediaRule_closure, R._EvaluateVisitor_visitMediaRule__closure, R._EvaluateVisitor_visitMediaRule___closure, R._EvaluateVisitor_visitMediaRule_closure0, R._EvaluateVisitor__visitMediaQueries_closure, R._EvaluateVisitor_visitStyleRule_closure, R._EvaluateVisitor_visitStyleRule_closure0, R._EvaluateVisitor_visitStyleRule_closure1, R._EvaluateVisitor_visitStyleRule_closure2, R._EvaluateVisitor_visitStyleRule_closure3, R._EvaluateVisitor_visitStyleRule_closure4, R._EvaluateVisitor_visitStyleRule__closure, R._EvaluateVisitor_visitStyleRule_closure5, R._EvaluateVisitor_visitSupportsRule_closure, R._EvaluateVisitor_visitSupportsRule__closure, R._EvaluateVisitor_visitSupportsRule_closure0, R._EvaluateVisitor_visitVariableDeclaration_closure, R._EvaluateVisitor_visitVariableDeclaration_closure0, R._EvaluateVisitor_visitVariableDeclaration_closure1, R._EvaluateVisitor_visitUseRule_closure, R._EvaluateVisitor_visitWarnRule_closure, R._EvaluateVisitor_visitWhileRule_closure, R._EvaluateVisitor_visitWhileRule__closure, R._EvaluateVisitor_visitBinaryOperationExpression_closure, R._EvaluateVisitor_visitVariableExpression_closure, R._EvaluateVisitor_visitListExpression_closure, R._EvaluateVisitor_visitFunctionExpression_closure, R._EvaluateVisitor_visitFunctionExpression_closure0, R._EvaluateVisitor__runUserDefinedCallable_closure, R._EvaluateVisitor__runUserDefinedCallable__closure, R._EvaluateVisitor__runUserDefinedCallable___closure, R._EvaluateVisitor__runUserDefinedCallable____closure, R._EvaluateVisitor__runFunctionCallable_closure, R._EvaluateVisitor__runBuiltInCallable_closure, R._EvaluateVisitor__runBuiltInCallable_closure0, R._EvaluateVisitor__evaluateArguments_closure, R._EvaluateVisitor__evaluateMacroArguments_closure, R._EvaluateVisitor__evaluateMacroArguments_closure0, R._EvaluateVisitor__evaluateMacroArguments_closure1, R._EvaluateVisitor__evaluateMacroArguments_closure2, R._EvaluateVisitor__addRestMap_closure, R._EvaluateVisitor__addRestMap_closure0, R._EvaluateVisitor__verifyArguments_closure, R._EvaluateVisitor_visitStringExpression_closure, R._EvaluateVisitor_visitCssAtRule_closure, R._EvaluateVisitor_visitCssAtRule_closure0, R._EvaluateVisitor_visitCssKeyframeBlock_closure, R._EvaluateVisitor_visitCssKeyframeBlock_closure0, R._EvaluateVisitor_visitCssMediaRule_closure, R._EvaluateVisitor_visitCssMediaRule__closure, R._EvaluateVisitor_visitCssMediaRule___closure, R._EvaluateVisitor_visitCssMediaRule_closure0, R._EvaluateVisitor_visitCssStyleRule_closure, R._EvaluateVisitor_visitCssStyleRule__closure, R._EvaluateVisitor_visitCssStyleRule_closure0, R._EvaluateVisitor_visitCssSupportsRule_closure, R._EvaluateVisitor_visitCssSupportsRule__closure, R._EvaluateVisitor_visitCssSupportsRule_closure0, R._EvaluateVisitor__performInterpolation_closure, R._EvaluateVisitor__serialize_closure, R._EvaluateVisitor__stackTrace_closure, R._ImportedCssVisitor_visitCssAtRule_closure, R._ImportedCssVisitor_visitCssMediaRule_closure, R._ImportedCssVisitor_visitCssStyleRule_closure, R._ImportedCssVisitor_visitCssSupportsRule_closure, N.serialize_closure, N._SerializeVisitor_visitCssComment_closure, N._SerializeVisitor_visitCssAtRule_closure, N._SerializeVisitor_visitCssMediaRule_closure, N._SerializeVisitor_visitCssImport_closure, N._SerializeVisitor_visitCssImport__closure, N._SerializeVisitor_visitCssKeyframeBlock_closure, N._SerializeVisitor_visitCssStyleRule_closure, N._SerializeVisitor_visitCssSupportsRule_closure, N._SerializeVisitor_visitCssDeclaration_closure, N._SerializeVisitor_visitCssDeclaration_closure0, N._SerializeVisitor_visitList_closure, N._SerializeVisitor_visitList_closure0, N._SerializeVisitor_visitList_closure1, N._SerializeVisitor_visitMap_closure, N._SerializeVisitor_visitSelectorList_closure, N._SerializeVisitor__write_closure, N._SerializeVisitor__visitChildren_closure, N.withWarnCallback_closure, T.SingleMapping_SingleMapping$fromEntries_closure, T.SingleMapping_SingleMapping$fromEntries_closure0, T.SingleMapping_SingleMapping$fromEntries_closure1, T.SingleMapping_toJson_closure, T.SingleMapping_toJson_closure0, U.Highlighter_closure, U.Highlighter$__closure, U.Highlighter$___closure, U.Highlighter$__closure0, U.Highlighter__collateLines_closure, U.Highlighter__collateLines_closure0, U.Highlighter__collateLines_closure1, U.Highlighter__collateLines__closure, U.Highlighter_highlight_closure, U.Highlighter_highlight_closure0, U.Highlighter__writeFileStart_closure, U.Highlighter__writeMultilineHighlights_closure, U.Highlighter__writeMultilineHighlights_closure0, U.Highlighter__writeMultilineHighlights_closure1, U.Highlighter__writeMultilineHighlights_closure2, U.Highlighter__writeMultilineHighlights__closure, U.Highlighter__writeMultilineHighlights__closure0, U.Highlighter__writeHighlightedText_closure, U.Highlighter__writeIndicator_closure, U.Highlighter__writeIndicator_closure0, U.Highlighter__writeIndicator_closure1, U.Highlighter__writeSidebar_closure, U._Highlight_closure, U.Chain_Chain$parse_closure, U.Chain_Chain$parse_closure0, U.Chain_Chain$parse_closure1, U.Chain_toTrace_closure, U.Chain_toString_closure0, U.Chain_toString__closure0, U.Chain_toString_closure, U.Chain_toString__closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$parseV8_closure_parseLocation, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, T.LazyTrace_terse_closure, Y.Trace_Trace$from_closure, Y.Trace__parseVM_closure, Y.Trace__parseVM_closure0, Y.Trace$parseV8_closure, Y.Trace$parseV8_closure0, Y.Trace$parseJSCore_closure, Y.Trace$parseJSCore_closure0, Y.Trace$parseFirefox_closure, Y.Trace$parseFirefox_closure0, Y.Trace$parseFriendly_closure, Y.Trace$parseFriendly_closure0, Y.Trace_terse_closure, Y.Trace_foldFrames_closure, Y.Trace_foldFrames_closure0, Y.Trace_toString_closure0, Y.Trace_toString_closure, L._StreamTransformer_bind_closure, L._StreamTransformer_bind__closure, L._StreamTransformer_bind__closure1, L._StreamTransformer_bind__closure0, L._StreamTransformer_bind__closure2, R._debounceAggregate_closure, R._debounceAggregate__closure, R._debounceAggregate_closure0, B.ArgumentDeclaration_verify_closure1, B.ArgumentDeclaration_verify_closure2, S.AsyncBuiltInCallable$mixin_closure0, X._compileStylesheet_closure2, Q.AsyncEnvironment_importForwards_closure3, Q.AsyncEnvironment_importForwards_closure4, Q.AsyncEnvironment_importForwards_closure5, Q.AsyncEnvironment_importForwards_closure6, Q.AsyncEnvironment__getVariableFromGlobalModule_closure0, Q.AsyncEnvironment_setVariable_closure2, Q.AsyncEnvironment_setVariable_closure3, Q.AsyncEnvironment_setVariable_closure4, Q.AsyncEnvironment__getFunctionFromGlobalModule_closure0, Q.AsyncEnvironment__getMixinFromGlobalModule_closure0, Q._EnvironmentModule__EnvironmentModule_closure17, Q._EnvironmentModule__EnvironmentModule_closure18, Q._EnvironmentModule__EnvironmentModule_closure19, Q._EnvironmentModule__EnvironmentModule_closure20, Q._EnvironmentModule__EnvironmentModule_closure21, Q._EnvironmentModule__EnvironmentModule_closure22, E._EvaluateVisitor_closure29, E._EvaluateVisitor_closure30, E._EvaluateVisitor_closure31, E._EvaluateVisitor_closure32, E._EvaluateVisitor_closure33, E._EvaluateVisitor_closure34, E._EvaluateVisitor_closure35, E._EvaluateVisitor_closure36, E._EvaluateVisitor__closure10, E._EvaluateVisitor_closure37, E._EvaluateVisitor_closure38, E._EvaluateVisitor__closure8, E._EvaluateVisitor__closure9, E._EvaluateVisitor_run_closure2, E._EvaluateVisitor__withWarnCallback_closure2, E._EvaluateVisitor__loadModule_closure5, E._EvaluateVisitor__loadModule_closure6, E._EvaluateVisitor__execute_closure2, E._EvaluateVisitor__combineCss_closure8, E._EvaluateVisitor__combineCss_closure9, E._EvaluateVisitor__combineCss_closure10, E._EvaluateVisitor__extendModules_closure5, E._EvaluateVisitor__extendModules_closure6, E._EvaluateVisitor__topologicalModules_visitModule2, E._EvaluateVisitor_visitAtRootRule_closure8, E._EvaluateVisitor_visitAtRootRule_closure9, E._EvaluateVisitor_visitAtRootRule_closure10, E._EvaluateVisitor__scopeForAtRoot_closure17, E._EvaluateVisitor__scopeForAtRoot_closure18, E._EvaluateVisitor__scopeForAtRoot_closure19, E._EvaluateVisitor__scopeForAtRoot__closure2, E._EvaluateVisitor__scopeForAtRoot_closure20, E._EvaluateVisitor__scopeForAtRoot_closure21, E._EvaluateVisitor__scopeForAtRoot_closure22, E._EvaluateVisitor_visitContentRule_closure2, E._EvaluateVisitor_visitDeclaration_closure2, E._EvaluateVisitor_visitEachRule_closure8, E._EvaluateVisitor_visitEachRule_closure9, E._EvaluateVisitor_visitEachRule_closure10, E._EvaluateVisitor_visitEachRule__closure2, E._EvaluateVisitor_visitEachRule___closure2, E._EvaluateVisitor_visitExtendRule_closure2, E._EvaluateVisitor_visitAtRule_closure5, E._EvaluateVisitor_visitAtRule__closure2, E._EvaluateVisitor_visitAtRule_closure6, E._EvaluateVisitor_visitForRule_closure14, E._EvaluateVisitor_visitForRule_closure15, E._EvaluateVisitor_visitForRule_closure16, E._EvaluateVisitor_visitForRule_closure17, E._EvaluateVisitor_visitForRule_closure18, E._EvaluateVisitor_visitForRule__closure2, E._EvaluateVisitor_visitForwardRule_closure5, E._EvaluateVisitor_visitForwardRule_closure6, E._EvaluateVisitor__assertConfigurationIsEmpty_closure2, E._EvaluateVisitor_visitIfRule_closure2, E._EvaluateVisitor_visitIfRule__closure2, E._EvaluateVisitor__visitDynamicImport_closure2, E._EvaluateVisitor__visitDynamicImport__closure2, E._EvaluateVisitor_visitIncludeRule_closure8, E._EvaluateVisitor_visitIncludeRule_closure9, E._EvaluateVisitor_visitIncludeRule_closure10, E._EvaluateVisitor_visitIncludeRule__closure2, E._EvaluateVisitor_visitIncludeRule___closure2, E._EvaluateVisitor_visitIncludeRule____closure2, E._EvaluateVisitor_visitMediaRule_closure5, E._EvaluateVisitor_visitMediaRule__closure2, E._EvaluateVisitor_visitMediaRule___closure2, E._EvaluateVisitor_visitMediaRule_closure6, E._EvaluateVisitor__visitMediaQueries_closure2, E._EvaluateVisitor_visitStyleRule_closure20, E._EvaluateVisitor_visitStyleRule_closure21, E._EvaluateVisitor_visitStyleRule_closure22, E._EvaluateVisitor_visitStyleRule_closure23, E._EvaluateVisitor_visitStyleRule_closure24, E._EvaluateVisitor_visitStyleRule_closure25, E._EvaluateVisitor_visitStyleRule__closure2, E._EvaluateVisitor_visitStyleRule_closure26, E._EvaluateVisitor_visitSupportsRule_closure5, E._EvaluateVisitor_visitSupportsRule__closure2, E._EvaluateVisitor_visitSupportsRule_closure6, E._EvaluateVisitor_visitVariableDeclaration_closure8, E._EvaluateVisitor_visitVariableDeclaration_closure9, E._EvaluateVisitor_visitVariableDeclaration_closure10, E._EvaluateVisitor_visitUseRule_closure2, E._EvaluateVisitor_visitWarnRule_closure2, E._EvaluateVisitor_visitWhileRule_closure2, E._EvaluateVisitor_visitWhileRule__closure2, E._EvaluateVisitor_visitBinaryOperationExpression_closure2, E._EvaluateVisitor_visitVariableExpression_closure2, E._EvaluateVisitor_visitListExpression_closure2, E._EvaluateVisitor_visitFunctionExpression_closure5, E._EvaluateVisitor_visitFunctionExpression_closure6, E._EvaluateVisitor__runUserDefinedCallable_closure2, E._EvaluateVisitor__runUserDefinedCallable__closure2, E._EvaluateVisitor__runUserDefinedCallable___closure2, E._EvaluateVisitor__runUserDefinedCallable____closure2, E._EvaluateVisitor__runFunctionCallable_closure2, E._EvaluateVisitor__runBuiltInCallable_closure5, E._EvaluateVisitor__runBuiltInCallable_closure6, E._EvaluateVisitor__evaluateArguments_closure2, E._EvaluateVisitor__evaluateMacroArguments_closure11, E._EvaluateVisitor__evaluateMacroArguments_closure12, E._EvaluateVisitor__evaluateMacroArguments_closure13, E._EvaluateVisitor__evaluateMacroArguments_closure14, E._EvaluateVisitor__addRestMap_closure5, E._EvaluateVisitor__addRestMap_closure6, E._EvaluateVisitor__verifyArguments_closure2, E._EvaluateVisitor_visitStringExpression_closure2, E._EvaluateVisitor_visitCssAtRule_closure5, E._EvaluateVisitor_visitCssAtRule_closure6, E._EvaluateVisitor_visitCssKeyframeBlock_closure5, E._EvaluateVisitor_visitCssKeyframeBlock_closure6, E._EvaluateVisitor_visitCssMediaRule_closure5, E._EvaluateVisitor_visitCssMediaRule__closure2, E._EvaluateVisitor_visitCssMediaRule___closure2, E._EvaluateVisitor_visitCssMediaRule_closure6, E._EvaluateVisitor_visitCssStyleRule_closure5, E._EvaluateVisitor_visitCssStyleRule__closure2, E._EvaluateVisitor_visitCssStyleRule_closure6, E._EvaluateVisitor_visitCssSupportsRule_closure5, E._EvaluateVisitor_visitCssSupportsRule__closure2, E._EvaluateVisitor_visitCssSupportsRule_closure6, E._EvaluateVisitor__performInterpolation_closure2, E._EvaluateVisitor__serialize_closure2, E._EvaluateVisitor__stackTrace_closure2, E._ImportedCssVisitor_visitCssAtRule_closure2, E._ImportedCssVisitor_visitCssMediaRule_closure2, E._ImportedCssVisitor_visitCssStyleRule_closure2, E._ImportedCssVisitor_visitCssSupportsRule_closure2, O.AsyncImportCache_canonicalize_closure0, O.AsyncImportCache__canonicalize_closure0, O.AsyncImportCache_importCanonical_closure0, O.AsyncImportCache_humanize_closure2, O.AsyncImportCache_humanize_closure3, O.AsyncImportCache_humanize_closure4, V.AtRootQueryParser_parse_closure0, Z.closure263, Z._closure34, Z._closure35, Q.BuiltInCallable$mixin_closure0, K.closure159, K.closure160, K.closure161, K.closure162, K.closure163, K.closure164, K.closure165, K.closure166, K.closure167, K.closure168, K.closure169, K.closure170, K.closure171, K.closure172, K.closure173, K.closure174, K.closure175, K.closure176, K.closure177, K.closure178, K.closure179, K.closure180, K.closure181, K.closure182, K.closure183, K.closure184, K._closure23, K.closure185, K.closure214, K.closure215, K.closure216, K.closure217, K.closure218, K.closure219, K.closure220, K.closure221, K._closure28, K.closure222, K.closure197, K.closure196, K.closure195, K.closure194, K.closure193, K.closure192, K.closure191, K.closure190, K.closure188, K.closure187, K.closure186, K.closure189, K.closure_hexString0, K._updateComponents_getParam0, K._updateComponents_closure0, K._updateComponents_updateValue0, K._updateComponents_updateRgb0, K._functionString_closure0, K._removedColorFunction_closure0, K._parseChannels_closure0, K.closure253, K.closure254, K.closure255, K.closure256, K.closure257, K.closure258, K.closure259, K.closure260, K.closure261, K.closure262, K.SassColor_SassColor$hwb_toRgb0, U._compileStylesheet_closure1, S.ComplexSelector_isInvisible_closure0, X.CompoundSelector_isInvisible_closure0, Q.closure227, V.EachRule_toString_closure0, O.Environment_importForwards_closure3, O.Environment_importForwards_closure4, O.Environment_importForwards_closure5, O.Environment_importForwards_closure6, O.Environment__getVariableFromGlobalModule_closure0, O.Environment_setVariable_closure2, O.Environment_setVariable_closure3, O.Environment_setVariable_closure4, O.Environment__getFunctionFromGlobalModule_closure0, O.Environment__getMixinFromGlobalModule_closure0, O._EnvironmentModule__EnvironmentModule_closure11, O._EnvironmentModule__EnvironmentModule_closure12, O._EnvironmentModule__EnvironmentModule_closure13, O._EnvironmentModule__EnvironmentModule_closure14, O._EnvironmentModule__EnvironmentModule_closure15, O._EnvironmentModule__EnvironmentModule_closure16, R._EvaluateVisitor_closure19, R._EvaluateVisitor_closure20, R._EvaluateVisitor_closure21, R._EvaluateVisitor_closure22, R._EvaluateVisitor_closure23, R._EvaluateVisitor_closure24, R._EvaluateVisitor_closure25, R._EvaluateVisitor_closure26, R._EvaluateVisitor__closure7, R._EvaluateVisitor_closure27, R._EvaluateVisitor_closure28, R._EvaluateVisitor__closure5, R._EvaluateVisitor__closure6, R._EvaluateVisitor_run_closure1, R._EvaluateVisitor__withWarnCallback_closure1, R._EvaluateVisitor__loadModule_closure3, R._EvaluateVisitor__loadModule_closure4, R._EvaluateVisitor__execute_closure1, R._EvaluateVisitor__combineCss_closure5, R._EvaluateVisitor__combineCss_closure6, R._EvaluateVisitor__combineCss_closure7, R._EvaluateVisitor__extendModules_closure3, R._EvaluateVisitor__extendModules_closure4, R._EvaluateVisitor__topologicalModules_visitModule1, R._EvaluateVisitor_visitAtRootRule_closure5, R._EvaluateVisitor_visitAtRootRule_closure6, R._EvaluateVisitor_visitAtRootRule_closure7, R._EvaluateVisitor__scopeForAtRoot_closure11, R._EvaluateVisitor__scopeForAtRoot_closure12, R._EvaluateVisitor__scopeForAtRoot_closure13, R._EvaluateVisitor__scopeForAtRoot__closure1, R._EvaluateVisitor__scopeForAtRoot_closure14, R._EvaluateVisitor__scopeForAtRoot_closure15, R._EvaluateVisitor__scopeForAtRoot_closure16, R._EvaluateVisitor_visitContentRule_closure1, R._EvaluateVisitor_visitDeclaration_closure1, R._EvaluateVisitor_visitEachRule_closure5, R._EvaluateVisitor_visitEachRule_closure6, R._EvaluateVisitor_visitEachRule_closure7, R._EvaluateVisitor_visitEachRule__closure1, R._EvaluateVisitor_visitEachRule___closure1, R._EvaluateVisitor_visitExtendRule_closure1, R._EvaluateVisitor_visitAtRule_closure3, R._EvaluateVisitor_visitAtRule__closure1, R._EvaluateVisitor_visitAtRule_closure4, R._EvaluateVisitor_visitForRule_closure9, R._EvaluateVisitor_visitForRule_closure10, R._EvaluateVisitor_visitForRule_closure11, R._EvaluateVisitor_visitForRule_closure12, R._EvaluateVisitor_visitForRule_closure13, R._EvaluateVisitor_visitForRule__closure1, R._EvaluateVisitor_visitForwardRule_closure3, R._EvaluateVisitor_visitForwardRule_closure4, R._EvaluateVisitor__assertConfigurationIsEmpty_closure1, R._EvaluateVisitor_visitIfRule_closure1, R._EvaluateVisitor_visitIfRule__closure1, R._EvaluateVisitor__visitDynamicImport_closure1, R._EvaluateVisitor__visitDynamicImport__closure1, R._EvaluateVisitor_visitIncludeRule_closure5, R._EvaluateVisitor_visitIncludeRule_closure6, R._EvaluateVisitor_visitIncludeRule_closure7, R._EvaluateVisitor_visitIncludeRule__closure1, R._EvaluateVisitor_visitIncludeRule___closure1, R._EvaluateVisitor_visitIncludeRule____closure1, R._EvaluateVisitor_visitMediaRule_closure3, R._EvaluateVisitor_visitMediaRule__closure1, R._EvaluateVisitor_visitMediaRule___closure1, R._EvaluateVisitor_visitMediaRule_closure4, R._EvaluateVisitor__visitMediaQueries_closure1, R._EvaluateVisitor_visitStyleRule_closure13, R._EvaluateVisitor_visitStyleRule_closure14, R._EvaluateVisitor_visitStyleRule_closure15, R._EvaluateVisitor_visitStyleRule_closure16, R._EvaluateVisitor_visitStyleRule_closure17, R._EvaluateVisitor_visitStyleRule_closure18, R._EvaluateVisitor_visitStyleRule__closure1, R._EvaluateVisitor_visitStyleRule_closure19, R._EvaluateVisitor_visitSupportsRule_closure3, R._EvaluateVisitor_visitSupportsRule__closure1, R._EvaluateVisitor_visitSupportsRule_closure4, R._EvaluateVisitor_visitVariableDeclaration_closure5, R._EvaluateVisitor_visitVariableDeclaration_closure6, R._EvaluateVisitor_visitVariableDeclaration_closure7, R._EvaluateVisitor_visitUseRule_closure1, R._EvaluateVisitor_visitWarnRule_closure1, R._EvaluateVisitor_visitWhileRule_closure1, R._EvaluateVisitor_visitWhileRule__closure1, R._EvaluateVisitor_visitBinaryOperationExpression_closure1, R._EvaluateVisitor_visitVariableExpression_closure1, R._EvaluateVisitor_visitListExpression_closure1, R._EvaluateVisitor_visitFunctionExpression_closure3, R._EvaluateVisitor_visitFunctionExpression_closure4, R._EvaluateVisitor__runUserDefinedCallable_closure1, R._EvaluateVisitor__runUserDefinedCallable__closure1, R._EvaluateVisitor__runUserDefinedCallable___closure1, R._EvaluateVisitor__runUserDefinedCallable____closure1, R._EvaluateVisitor__runFunctionCallable_closure1, R._EvaluateVisitor__runBuiltInCallable_closure3, R._EvaluateVisitor__runBuiltInCallable_closure4, R._EvaluateVisitor__evaluateArguments_closure1, R._EvaluateVisitor__evaluateMacroArguments_closure7, R._EvaluateVisitor__evaluateMacroArguments_closure8, R._EvaluateVisitor__evaluateMacroArguments_closure9, R._EvaluateVisitor__evaluateMacroArguments_closure10, R._EvaluateVisitor__addRestMap_closure3, R._EvaluateVisitor__addRestMap_closure4, R._EvaluateVisitor__verifyArguments_closure1, R._EvaluateVisitor_visitStringExpression_closure1, R._EvaluateVisitor_visitCssAtRule_closure3, R._EvaluateVisitor_visitCssAtRule_closure4, R._EvaluateVisitor_visitCssKeyframeBlock_closure3, R._EvaluateVisitor_visitCssKeyframeBlock_closure4, R._EvaluateVisitor_visitCssMediaRule_closure3, R._EvaluateVisitor_visitCssMediaRule__closure1, R._EvaluateVisitor_visitCssMediaRule___closure1, R._EvaluateVisitor_visitCssMediaRule_closure4, R._EvaluateVisitor_visitCssStyleRule_closure3, R._EvaluateVisitor_visitCssStyleRule__closure1, R._EvaluateVisitor_visitCssStyleRule_closure4, R._EvaluateVisitor_visitCssSupportsRule_closure3, R._EvaluateVisitor_visitCssSupportsRule__closure1, R._EvaluateVisitor_visitCssSupportsRule_closure4, R._EvaluateVisitor__performInterpolation_closure1, R._EvaluateVisitor__serialize_closure1, R._EvaluateVisitor__stackTrace_closure1, R._ImportedCssVisitor_visitCssAtRule_closure1, R._ImportedCssVisitor_visitCssMediaRule_closure1, R._ImportedCssVisitor_visitCssStyleRule_closure1, R._ImportedCssVisitor_visitCssSupportsRule_closure1, F.Extender_extensionsWhereTarget_closure0, F.Extender__registerSelector_closure0, F.Extender_addExtension_closure2, F.Extender_addExtension_closure3, F.Extender_addExtension_closure4, F.Extender__extendExistingExtensions_closure1, F.Extender__extendExistingExtensions_closure2, F.Extender_addExtensions_closure0, F.Extender_addExtensions__closure0, F.Extender_addExtensions___closure1, F.Extender_addExtensions___closure2, F.Extender__extendList_closure0, F.Extender__extendComplex_closure1, F.Extender__extendComplex_closure2, F.Extender__extendComplex__closure1, F.Extender__extendComplex__closure2, F.Extender__extendComplex___closure0, F.Extender__extendCompound_closure5, F.Extender__extendCompound_closure6, F.Extender__extendCompound__closure1, F.Extender__extendCompound__closure2, F.Extender__extendCompound_closure7, F.Extender__extendCompound_closure8, F.Extender__extendCompound_closure9, F.Extender__extendCompound_closure10, F.Extender__extendSimple_withoutPseudo0, F.Extender__extendSimple_closure0, F.Extender__extendPseudo_closure4, F.Extender__extendPseudo_closure5, F.Extender__extendPseudo_closure6, F.Extender__extendPseudo_closure7, F.Extender__extendPseudo_closure8, F.Extender__trim_closure1, F.Extender__trim_closure2, F.Extender_clone_closure0, Y.unifyComplex_closure0, Y._weaveParents_closure6, Y._weaveParents_closure7, Y._weaveParents_closure8, Y._weaveParents__closure4, Y._weaveParents_closure9, Y._weaveParents_closure10, Y._weaveParents__closure3, Y._weaveParents_closure11, Y._weaveParents_closure12, Y._weaveParents__closure2, Y._mustUnify_closure0, Y._mustUnify__closure0, Y.paths_closure0, Y.paths__closure0, Y.paths___closure0, Y._hasRoot_closure0, Y.listIsSuperselector_closure0, Y.listIsSuperselector__closure0, Y._simpleIsSuperselectorOfCompound_closure0, Y._simpleIsSuperselectorOfCompound__closure0, Y._selectorPseudoIsSuperselector_closure6, Y._selectorPseudoIsSuperselector_closure7, Y._selectorPseudoIsSuperselector_closure8, Y._selectorPseudoIsSuperselector_closure9, Y._selectorPseudoIsSuperselector_closure10, Y._selectorPseudoIsSuperselector__closure0, Y._selectorPseudoIsSuperselector___closure1, Y._selectorPseudoIsSuperselector___closure2, Y._selectorPseudoIsSuperselector_closure11, Y._selectorPseudoIsSuperselector_closure12, Y._selectorPseudosNamed_closure0, Y.closure114, N.IDSelector_unify_closure0, V.IfRule_toString_closure0, V.IfClause$__closure0, V.IfClause$___closure0, F.NodeImporter__tryPath_closure, R.ImportCache_canonicalize_closure0, R.ImportCache__canonicalize_closure0, R.ImportCache_importCanonical_closure0, R.ImportCache_humanize_closure2, R.ImportCache_humanize_closure3, R.ImportCache_humanize_closure4, X.Interpolation_toString_closure0, F.realCasePath_closure0, E.KeyframeSelectorParser_parse_closure0, D.ListExpression_toString_closure0, D.closure158, D.closure157, D.closure156, D.closure155, D.closure154, D.closure153, D._closure20, D._closure21, D._closure22, D.closure152, D.closure150, D.closure151, D.SelectorList_isInvisible_closure0, D.SelectorList_asSassList_closure0, D.SelectorList_asSassList__closure0, D.SelectorList_unify_closure0, D.SelectorList_unify__closure0, D.SelectorList_unify___closure0, D.SelectorList_resolveParentSelectors_closure0, D.SelectorList_resolveParentSelectors__closure1, D.SelectorList_resolveParentSelectors__closure2, D.SelectorList__complexContainsParentSelector_closure0, D.SelectorList__complexContainsParentSelector__closure0, D.SelectorList__resolveParentSelectorsCompound_closure2, D.SelectorList__resolveParentSelectorsCompound_closure3, D.SelectorList__resolveParentSelectorsCompound_closure4, D.closure246, D._closure33, D.closure247, D.closure248, D.closure249, D.closure250, D.closure251, D.closure252, D.SassList_isBlank_closure0, A.MapExpression_toString_closure0, A.closure149, A.closure212, A._closure27, A.closure213, A._closure26, A.closure147, A.closure148, A._closure19, A.closure211, A.closure210, A._closure25, A.closure145, A.closure146, A.closure144, A.closure143, A.closure142, A._modify__modifyNestedMap0, A._deepMergeImpl__ensureMutable0, A._deepMergeImpl_closure0, A.closure239, A._closure31, A._closure32, A.closure240, A.closure241, A.closure242, A.closure243, A.closure244, A.closure245, A.SassMap_asList_closure0, K.closure140, K.closure205, K.closure139, K.closure138, K.closure137, K.closure141, K.closure203, K._closure24, K.closure202, K.closure201, K.closure199, K.closure209, K.closure208, K.closure207, K.closure206, K.closure204, K.closure200, K.closure198, K.closure133, K.closure132, K.closure134, K.closure136, K.closure135, K._numberFunction_closure0, F.MediaQueryParser_parse_closure0, Q.closure223, Q.closure224, Q.closure225, Q.closure226, B._readFile_closure0, B.fileExists_closure0, B.dirExists_closure0, B.listDir_closure0, B.listDir__closure1, B.listDir__closure2, B.listDir_closure_list0, B.listDir__list_closure0, B._render_closure, B._render_closure0, B._render_closure1, B._parseFunctions_closure, B._parseFunctions__closure, B._parseFunctions___closure0, B._parseFunctions____closure, B._parseFunctions__closure0, B._parseFunctions__closure1, B._parseFunctions___closure, B._parseImporter_closure, B._parseImporter__closure, B._parseImporter___closure, B._parseImporter____closure, O.closure238, O._closure29, O._closure30, T.closure232, T.closure233, T.closure234, T.closure235, T.closure236, T.closure237, T._parseNumber_closure, T._parseNumber_closure0, T.SassNumber_valueInUnits_closure3, T.SassNumber_valueInUnits_closure4, T.SassNumber_valueInUnits_closure5, T.SassNumber_valueInUnits_closure6, T.SassNumber_modulo_closure0, T.SassNumber_plus_closure0, T.SassNumber_minus_closure0, T.SassNumber__multiplyUnits_closure3, T.SassNumber__multiplyUnits_closure4, T.SassNumber__multiplyUnits_closure5, T.SassNumber__multiplyUnits_closure6, T.SassNumber__areAnyConvertible_closure0, T.SassNumber__canonicalMultiplier_closure0, M.ParentStatement_closure0, M.ParentStatement__closure0, G.Parser__parseIdentifier_closure0, G.Parser_scanIdentChar_matches0, F._PrefixedKeys_iterator_closure0, U.main_printError, U.main_closure, U.SassParser_children_closure0, R._wrapMain_closure, R._wrapMain_closure0, T.closure128, T._closure16, T._closure17, T.closure127, T._closure14, T._closure15, T.__closure0, T.closure126, T.closure125, T.closure124, T.closure131, T.closure130, T._closure18, T.closure129, T.SelectorParser_parse_closure0, T.SelectorParser_parseCompoundSelector_closure0, N.serialize_closure0, N._SerializeVisitor_visitCssComment_closure0, N._SerializeVisitor_visitCssAtRule_closure0, N._SerializeVisitor_visitCssMediaRule_closure0, N._SerializeVisitor_visitCssImport_closure0, N._SerializeVisitor_visitCssImport__closure0, N._SerializeVisitor_visitCssKeyframeBlock_closure0, N._SerializeVisitor_visitCssStyleRule_closure0, N._SerializeVisitor_visitCssSupportsRule_closure0, N._SerializeVisitor_visitCssDeclaration_closure1, N._SerializeVisitor_visitCssDeclaration_closure2, N._SerializeVisitor_visitList_closure2, N._SerializeVisitor_visitList_closure3, N._SerializeVisitor_visitList_closure4, N._SerializeVisitor_visitMap_closure0, N._SerializeVisitor_visitSelectorList_closure0, N._SerializeVisitor__write_closure0, N._SerializeVisitor__visitChildren_closure0, D.SourceMapBuffer__addEntry_closure0, D.SourceMapBuffer_buildSourceMap_closure0, D.closure123, D.closure122, D.closure118, D.closure117, D.closure116, D.closure115, D.closure121, D.closure120, D.closure119, D.closure228, D.closure229, D.closure230, D.closure231, V.StylesheetParser_parse_closure0, V.StylesheetParser_parse__closure1, V.StylesheetParser_parse__closure2, V.StylesheetParser_parseArgumentDeclaration_closure0, V.StylesheetParser__parseSingleProduction_closure0, V.StylesheetParser_parseSignature_closure, V.StylesheetParser__statement_closure0, V.StylesheetParser_variableDeclarationWithoutNamespace_closure1, V.StylesheetParser_variableDeclarationWithoutNamespace_closure2, V.StylesheetParser__declarationOrBuffer_closure1, V.StylesheetParser__declarationOrBuffer_closure2, V.StylesheetParser__styleRule_closure0, V.StylesheetParser__propertyOrVariableDeclaration_closure1, V.StylesheetParser__propertyOrVariableDeclaration_closure2, V.StylesheetParser__atRootRule_closure1, V.StylesheetParser__atRootRule_closure2, V.StylesheetParser__eachRule_closure0, V.StylesheetParser__functionRule_closure0, V.StylesheetParser__forRule_closure1, V.StylesheetParser__forRule_closure2, V.StylesheetParser__memberList_closure0, V.StylesheetParser__includeRule_closure0, V.StylesheetParser_mediaRule_closure0, V.StylesheetParser__mixinRule_closure0, V.StylesheetParser_mozDocumentRule_closure0, V.StylesheetParser_supportsRule_closure0, V.StylesheetParser__whileRule_closure0, V.StylesheetParser_unknownAtRule_closure0, V.StylesheetParser_expression_resetState0, V.StylesheetParser_expression_resolveOneOperation0, V.StylesheetParser_expression_resolveOperations0, V.StylesheetParser_expression_addSingleExpression0, V.StylesheetParser_expression_addOperator0, V.StylesheetParser_expression_resolveSpaceExpressions0, V.StylesheetParser__expressionUntilComma_closure0, V.StylesheetParser__unicodeRange_closure1, V.StylesheetParser__unicodeRange_closure2, V.StylesheetParser_identifierLike_closure0, V.StylesheetParser__expressionUntilComparison_closure0, V.StylesheetParser__publicIdentifier_closure0, R._UnprefixedKeys_iterator_closure1, R._UnprefixedKeys_iterator_closure2, B.resolveImportPath_closure1, B.resolveImportPath_closure2, B._tryPathAsDirectory_closure0, B._exactlyOne_closure0, B.forwardToString_closure, B.createClass_closure, B.indent_closure0, B.flattenVertically_closure1, B.flattenVertically_closure2, B.longestCommonSubsequence_closure2, B.longestCommonSubsequence_closure3, B.longestCommonSubsequence_closure4, B.longestCommonSubsequence_backtrack0, B.mapAddAll2_closure0, N.withWarnCallback_closure0]);\n    _inherit(H.CastList, H._CastListBase);\n    _inheritMany(P.Error, [H.LateInitializationErrorImpl, P.TypeError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, H._Error, P.JsonUnsupportedObjectError, P.AssertionError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);\n    _inherit(P.ListBase, P._ListBase_Object_ListMixin);\n    _inherit(H.UnmodifiableListBase, P.ListBase);\n    _inheritMany(H.UnmodifiableListBase, [H.CodeUnits, P.UnmodifiableListView]);\n    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.EmptyIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P._MapBaseValueIterable]);\n    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H.ReversedListIterable, P.ListQueue, P._GeneratorIterable]);\n    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);\n    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator, H.SkipWhileIterator]);\n    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);\n    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);\n    _inherit(H.EfficientLengthFollowedByIterable, H.FollowedByIterable);\n    _inheritMany(P.MapView, [P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, K.PathMap]);\n    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);\n    _inherit(H.ConstantMapView, P.UnmodifiableMapView);\n    _inherit(H.ConstantStringMap, H.ConstantMap);\n    _inherit(H.ConstantProtoMap, H.ConstantStringMap);\n    _inherit(H.Instantiation1, H.Instantiation);\n    _inherit(H.NullError, P.TypeError);\n    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);\n    _inherit(P.MapBase, P.MapMixin);\n    _inheritMany(P.MapBase, [H.JsLinkedHashMap, P._HashMap, P.UnmodifiableMapBase, Z.MergedMapView, Z.MergedMapView0]);\n    _inheritMany(P.IterableBase, [H._AllMatchesIterable, P._SyncStarIterable, O.EmptyUnmodifiableSet, F._PrefixedKeys, R._UnprefixedKeys, F._PrefixedKeys0, R._UnprefixedKeys0]);\n    _inherit(H.NativeTypedArray, H.NativeTypedData);\n    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);\n    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);\n    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);\n    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);\n    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);\n    _inheritMany(H.NativeTypedArrayOfDouble, [H.NativeFloat32List, H.NativeFloat64List]);\n    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);\n    _inherit(H._TypeError, H._Error);\n    _inheritMany(P.Stream, [P._StreamImpl, P._ForwardingStream, Y._CompleterStream]);\n    _inherit(P._ControllerStream, P._StreamImpl);\n    _inherit(P._BroadcastStream, P._ControllerStream);\n    _inheritMany(P._BufferingStreamSubscription, [P._ControllerSubscription, P._ForwardingStreamSubscription]);\n    _inherit(P._BroadcastSubscription, P._ControllerSubscription);\n    _inherit(P._SyncBroadcastStreamController, P._BroadcastStreamController);\n    _inherit(P._AsyncCompleter, P._Completer);\n    _inheritMany(P._StreamController, [P._AsyncStreamController, P._SyncStreamController]);\n    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);\n    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);\n    _inherit(P._StreamImplEvents, P._PendingEvents);\n    _inherit(P._ExpandStream, P._ForwardingStream);\n    _inheritMany(P._Zone, [P._CustomZone, P._RootZone]);\n    _inheritMany(H.JsLinkedHashMap, [P._LinkedIdentityHashMap, P._LinkedCustomHashMap]);\n    _inheritMany(P._SetBase, [P._LinkedHashSet, P._UnmodifiableSet]);\n    _inherit(P._LinkedIdentityHashSet, P._LinkedHashSet);\n    _inheritMany(P.Codec, [P.Encoding, P.Base64Codec, P.JsonCodec]);\n    _inheritMany(P.Encoding, [P.AsciiCodec, P.Utf8Codec]);\n    _inheritMany(P.StreamTransformerBase, [P.Converter, L._StreamTransformer]);\n    _inheritMany(P.Converter, [P._UnicodeSubsetEncoder, P.Base64Encoder, P.JsonEncoder, P.Utf8Encoder, P.Utf8Decoder]);\n    _inherit(P.AsciiEncoder, P._UnicodeSubsetEncoder);\n    _inherit(P._BufferCachingBase64Encoder, P._Base64Encoder);\n    _inherit(P.ByteConversionSink, P.ChunkedConversionSink);\n    _inheritMany(P.ByteConversionSink, [P.ByteConversionSinkBase, P._Utf8StringSinkAdapter, P._Utf8ConversionSink]);\n    _inherit(P._Base64EncoderSink, P.ByteConversionSinkBase);\n    _inheritMany(P._Base64EncoderSink, [P._AsciiBase64EncoderSink, P._Utf8Base64EncoderSink]);\n    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);\n    _inherit(P._JsonStringStringifier, P._JsonStringifier);\n    _inherit(P.StringConversionSinkBase, P.StringConversionSinkMixin);\n    _inheritMany(P.StringConversionSinkBase, [P._StringSinkConversionSink, P._StringAdapterSink]);\n    _inherit(P._StringCallbackSink, P._StringSinkConversionSink);\n    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);\n    _inherit(P._DataUri, P._Uri);\n    _inherit(Z.ArgParserException, P.FormatException);\n    _inherit(Q.QueueList, Q._QueueList_Object_ListMixin);\n    _inherit(Q._CastQueueList, Q.QueueList);\n    _inheritMany(M._DelegatingIterableBase, [M.DelegatingIterable, M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin]);\n    _inherit(M.DelegatingSet, M.DelegatingIterable);\n    _inherit(L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, M.DelegatingSet);\n    _inherit(L.UnmodifiableSetView, L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin);\n    _inherit(M.MapKeySet, M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin);\n    _inheritMany(X.NodeJsError, [X.JsAssertionError, X.JsRangeError, X.JsReferenceError, X.JsSyntaxError, X.JsTypeError, X.JsSystemError]);\n    _inheritMany(Y.Socket, [N.TTYReadStream, N.TTYWriteStream]);\n    _inherit(B.InternalStyle, O.Style);\n    _inheritMany(B.InternalStyle, [E.PosixStyle, F.UrlStyle, L.WindowsStyle]);\n    _inherit(B.CssNode, B.AstNode);\n    _inheritMany(B.CssNode, [B.ModifiableCssNode, B.CssParentNode]);\n    _inheritMany(B.ModifiableCssNode, [B.ModifiableCssParentNode, R.ModifiableCssComment, L.ModifiableCssDeclaration, F.ModifiableCssImport]);\n    _inheritMany(B.ModifiableCssParentNode, [U.ModifiableCssAtRule, U.ModifiableCssKeyframeBlock, G.ModifiableCssMediaRule, X.ModifiableCssStyleRule, V.ModifiableCssStylesheet, B.ModifiableCssSupportsRule]);\n    _inherit(V.CssStylesheet, B.CssParentNode);\n    _inheritMany(M.ParentStatement, [V.AtRootRule, U.AtRule, M.CallableDeclaration, L.Declaration, V.EachRule, B.ForRule, G.MediaRule, X.StyleRule, V.Stylesheet, B.SupportsRule, G.WhileRule]);\n    _inheritMany(M.CallableDeclaration, [Y.ContentBlock, M.FunctionRule, T.MixinRule]);\n    _inheritMany(T.Selector, [M.SimpleSelector, S.ComplexSelector, X.CompoundSelector, D.SelectorList]);\n    _inheritMany(M.SimpleSelector, [N.AttributeSelector, X.ClassSelector, N.IDSelector, M.ParentSelector, N.PlaceholderSelector, D.PseudoSelector, F.TypeSelector, N.UniversalSelector]);\n    _inheritMany(G.SourceSpanException, [E.SassException, G.SourceSpanFormatException, E.SassException0]);\n    _inheritMany(E.SassException, [E.MultiSpanSassException, E.SassRuntimeException, E.SassFormatException]);\n    _inherit(E.MultiSpanSassRuntimeException, E.MultiSpanSassException);\n    _inherit(E.MultiSpanSassScriptException, E.SassScriptException);\n    _inherit(A.MergedExtension, S.Extension);\n    _inherit(M.Importer, B.AsyncImporter);\n    _inherit(F.FilesystemImporter, M.Importer);\n    _inheritMany(G.Parser, [V.AtRootQueryParser, V.StylesheetParser, E.KeyframeSelectorParser, F.MediaQueryParser, T.SelectorParser]);\n    _inheritMany(V.StylesheetParser, [L.ScssParser, U.SassParser]);\n    _inherit(Q.CssParser, L.ScssParser);\n    _inheritMany(P.UnmodifiableMapBase, [K.LimitedMapView, F.PrefixedMapView, U.PublicMemberMapView, R.UnprefixedMapView, K.LimitedMapView0, F.PrefixedMapView0, U.PublicMemberMapView0, R.UnprefixedMapView0]);\n    _inheritMany(F.Value, [D.SassList, Z.SassBoolean, K.SassColor, F.SassFunction, A.SassMap, O.SassNull, T.SassNumber, D.SassString]);\n    _inherit(D.SassArgumentList, D.SassList);\n    _inherit(F._FindDependenciesVisitor, D.RecursiveStatementVisitor);\n    _inherit(T.SingleMapping, T.Mapping);\n    _inherit(Y.FileLocation, D.SourceLocationMixin);\n    _inheritMany(Y.SourceSpanMixin, [Y._FileSpan, V.SourceSpanBase]);\n    _inherit(X.SourceSpanWithContext, V.SourceSpanBase);\n    _inherit(E.StringScannerException, G.SourceSpanFormatException);\n    _inheritMany(X.StringScanner, [Z.LineScanner, S.SpanScanner]);\n    _inheritMany(F.Value0, [D.SassList0, Z.SassBoolean0, K.SassColor0, F.SassFunction0, A.SassMap0, O.SassNull0, T.SassNumber0, D.SassString0]);\n    _inherit(D.SassArgumentList0, D.SassList0);\n    _inheritMany(G.Parser1, [V.AtRootQueryParser0, V.StylesheetParser0, E.KeyframeSelectorParser0, F.MediaQueryParser0, T.SelectorParser0]);\n    _inheritMany(M.ParentStatement0, [V.AtRootRule0, U.AtRule0, M.CallableDeclaration0, L.Declaration0, V.EachRule0, B.ForRule0, G.MediaRule0, X.StyleRule0, V.Stylesheet0, B.SupportsRule0, G.WhileRule0]);\n    _inherit(B.CssNode0, B.AstNode0);\n    _inheritMany(B.CssNode0, [B.ModifiableCssNode0, B.CssParentNode0]);\n    _inheritMany(B.ModifiableCssNode0, [B.ModifiableCssParentNode0, R.ModifiableCssComment0, L.ModifiableCssDeclaration0, F.ModifiableCssImport0]);\n    _inheritMany(B.ModifiableCssParentNode0, [U.ModifiableCssAtRule0, U.ModifiableCssKeyframeBlock0, G.ModifiableCssMediaRule0, X.ModifiableCssStyleRule0, V.ModifiableCssStylesheet0, B.ModifiableCssSupportsRule0]);\n    _inheritMany(T.Selector0, [M.SimpleSelector0, S.ComplexSelector0, X.CompoundSelector0, D.SelectorList0]);\n    _inheritMany(M.SimpleSelector0, [N.AttributeSelector0, X.ClassSelector0, N.IDSelector0, M.ParentSelector0, N.PlaceholderSelector0, D.PseudoSelector0, F.TypeSelector0, N.UniversalSelector0]);\n    _inheritMany(M.CallableDeclaration0, [Y.ContentBlock0, M.FunctionRule0, T.MixinRule0]);\n    _inheritMany(V.StylesheetParser0, [L.ScssParser0, U.SassParser0]);\n    _inherit(Q.CssParser0, L.ScssParser0);\n    _inheritMany(E.SassException0, [E.MultiSpanSassException0, E.SassRuntimeException0, E.SassFormatException0]);\n    _inherit(E.MultiSpanSassRuntimeException0, E.MultiSpanSassException0);\n    _inherit(E.MultiSpanSassScriptException0, E.SassScriptException0);\n    _inherit(M.Importer0, B.AsyncImporter0);\n    _inherit(F.FilesystemImporter0, M.Importer0);\n    _inherit(A.MergedExtension0, S.Extension0);\n    _inherit(V.CssStylesheet0, B.CssParentNode0);\n    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);\n    _mixin(H.__CastListBase__CastIterableBase_ListMixin, P.ListMixin);\n    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);\n    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);\n    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);\n    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);\n    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);\n    _mixin(P._SyncStreamController, P._SyncStreamControllerDispatch);\n    _mixin(P.UnmodifiableMapBase, P._UnmodifiableMapMixin);\n    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);\n    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);\n    _mixin(Q._QueueList_Object_ListMixin, P.ListMixin);\n    _mixin(L._UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin, L.UnmodifiableSetMixin);\n    _mixin(M._MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin, L.UnmodifiableSetMixin);\n  })();\n  var init = {\n    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},\n    mangledGlobalNames: {int: \"int\", double: \"double\", num: \"num\", String: \"String\", bool: \"bool\", Null: \"Null\", List: \"List\"},\n    mangledNames: {},\n    getTypeFromName: getGlobalFromName,\n    metadata: [],\n    types: [\"Null()\", \"~()\", \"Future<Null>*()\", \"Value0*(List<Value0*>*)\", \"Value*(List<Value*>*)\", \"bool*(String*)\", \"bool*(CssNode*)\", \"bool*(CssNode0*)\", \"String*(String*)\", \"SassNumber0*(List<Value0*>*)\", \"SassNumber*(List<Value*>*)\", \"int*()\", \"Value*()\", \"String*()\", \"bool*(ComplexSelector0*)\", \"bool*(ComplexSelector*)\", \"SassString*(List<Value*>*)\", \"SassString0*(List<Value0*>*)\", \"SassBoolean0*(List<Value0*>*)\", \"bool*(SimpleSelector*)\", \"bool*(SimpleSelector0*)\", \"SassBoolean*(List<Value*>*)\", \"Value0*()\", \"bool*(Object*)\", \"bool*(int*)\", \"SassList*(List<Value*>*)\", \"SassColor*(List<Value*>*)\", \"SassList0*(List<Value0*>*)\", \"SassColor0*(List<Value0*>*)\", \"Future<Value*>*()\", \"Future<Value0*>*()\", \"bool(Object?)\", \"FileSpan*()\", \"Null(~()*)\", \"bool*()\", \"Future<Null>*(Future<~>*()*)\", \"bool*(num*,num*)\", \"SassMap0*(List<Value0*>*)\", \"SassMap*(List<Value*>*)\", \"int*(num*)\", \"SelectorList*()\", \"@(@)\", \"List<String*>*()\", \"SelectorList0*()\", \"String*(Object*)\", \"num*(num*,num*)\", \"~(Object*)\", \"Null(Value*,Value*)\", \"ValueExpression0*(Value0*)\", \"ValueExpression*(Value*)\", \"Null(Value0*,Value0*)\", \"bool*(Value*)\", \"bool*(PseudoSelector*)\", \"bool*(Value0*)\", \"Statement*()\", \"bool*(PseudoSelector0*)\", \"Statement0*()\", \"Frame*(String*)\", \"Frame*()\", \"~(Object,StackTrace)\", \"Stylesheet*()\", \"Null(String*,Value0*)\", \"Null([Object*])\", \"Future<String*>*(@)\", \"Value*(Value*)\", \"Null(_NodeSassColor*,num*)\", \"Future<Value0*>*(Statement0*)\", \"Value0*(Statement0*)\", \"Declaration*(List<Statement*>*,FileSpan*)\", \"Value*(Statement*)\", \"~(Value0*)\", \"ComplexSelector*(List<ComplexSelectorComponent*>*)\", \"ComplexSelector0*(List<ComplexSelectorComponent0*>*)\", \"Value0*(Value0*)\", \"@()\", \"~(String*,bool*)\", \"~(Value*)\", \"Declaration0*(List<Statement0*>*,FileSpan*)\", \"Future<Value*>*(Statement*)\", \"~(Object?)\", \"Null(String*,Value*)\", \"Iterable<String*>*(Module<AsyncCallable*>*)\", \"List<CssMediaQuery0*>*()\", \"Null(Module0<AsyncCallable0*>*)\", \"bool*(ComplexSelectorComponent*)\", \"List<ComplexSelectorComponent0*>*(List<ComplexSelectorComponent0*>*)\", \"AtRootQuery*()\", \"List<CssMediaQuery*>*()\", \"ComplexSelector0*(ComplexSelector0*)\", \"Iterable<ComplexSelector*>*(ComplexSelector*)\", \"Null([@])\", \"ComplexSelector*(ComplexSelector*)\", \"Iterable<ComplexSelector0*>*(ComplexSelector0*)\", \"Null(@)\", \"String*(int*)\", \"Map<ComplexSelector0*,Extension0*>*()\", \"SourceFile*()\", \"AtRootQuery0*()\", \"Null(Module0<Callable0*>*)\", \"String*(@)\", \"bool*(Module<AsyncCallable*>*)\", \"Null(@,@)\", \"AsyncCallable*()\", \"bool*(Module0<Callable0*>*)\", \"Null(List<Value*>*)\", \"Iterable<String*>*(Module<Callable*>*)\", \"bool*(Module0<AsyncCallable0*>*)\", \"AsyncCallable0*()\", \"Iterable<String*>*(Module0<AsyncCallable0*>*)\", \"Null(List<Value0*>*)\", \"Iterable<String*>*(Module0<Callable0*>*)\", \"bool*(ComplexSelectorComponent0*)\", \"Tuple3<Importer*,Uri*,Uri*>*()\", \"Null(Module<AsyncCallable*>*)\", \"~(~())\", \"bool*(Module<Callable*>*)\", \"Map<ComplexSelector*,Extension*>*()\", \"int*(_NodeSassColor*)\", \"List<ComplexSelectorComponent*>*(List<ComplexSelectorComponent*>*)\", \"bool*(_Highlight*)\", \"Callable*()\", \"Null(Value*)\", \"Null(Value0*)\", \"Null(Module<Callable*>*)\", \"Callable0*()\", \"DateTime*()\", \"Frame*(Tuple2<String*,AstNode*>*)\", \"Trace*(String*)\", \"int*(Frame*)\", \"String*(Frame*)\", \"Null(String*,ConfiguredValue*)\", \"Trace*()\", \"Future<SassNumber*>*()\", \"bool*(Frame*)\", \"Future<Null>*(List<Value0*>*)\", \"bool*(ModifiableCssParentNode*)\", \"Module0<AsyncCallable0*>*(Module0<AsyncCallable0*>*)\", \"AsyncCallable0*(Module0<AsyncCallable0*>*)\", \"Map<String*,AsyncCallable0*>*(Module0<AsyncCallable0*>*)\", \"List<Extender*>*()\", \"~(Module<AsyncCallable*>*)\", \"SassFunction*(List<Value*>*)\", \"SassFunction0*(List<Value0*>*)\", \"int(Object?)\", \"Future<Value0*>*(List<Value0*>*)\", \"num*(num*,String*)\", \"~(Module0<AsyncCallable0*>*)\", \"List<int*>*(int*)\", \"List<Extender0*>*()\", \"Entry*(Entry*)\", \"bool*(ModifiableCssParentNode0*)\", \"AtRule*(List<Statement*>*,FileSpan*)\", \"AtRootRule*(List<Statement*>*,FileSpan*)\", \"VariableDeclaration*()\", \"~(String*[~])\", \"~(Module<Callable*>*)\", \"Future<SassNumber0*>*()\", \"Iterable<String*>*(@)\", \"Null(String*,ConfiguredValue0*)\", \"Iterable<String*>*(String*)\", \"Iterable<String*>*()\", \"Uri*()\", \"SelectorList*(SelectorList*,SelectorList*)\", \"Frame*(Tuple2<String*,AstNode0*>*)\", \"Null([@])*()\", \"SelectorList*(Value*)\", \"int*(int*,num*)\", \"num*(num*,num*,num*)\", \"num*(String*,num*{assertPercent:bool*})\", \"bool*(Queue<@>*)\", \"Iterable<ComplexSelectorComponent*>*(List<List<ComplexSelectorComponent*>*>*)\", \"List<Extension*>*()\", \"Map<String*,Callable*>*(Module<Callable*>*)\", \"Callable*(Module<Callable*>*)\", \"Module<Callable*>*(Module<Callable*>*)\", \"Module0<Callable0*>*(Module0<Callable0*>*)\", \"Callable0*(Module0<Callable0*>*)\", \"Map<String*,Callable0*>*(Module0<Callable0*>*)\", \"Future<Null>*(List<Value*>*)\", \"num*(num*)\", \"~(Module0<Callable0*>*)\", \"Uri*/*()\", \"Map<String*,AsyncCallable*>*(Module<AsyncCallable*>*)\", \"SassNumber0*()\", \"AsyncCallable*(Module<AsyncCallable*>*)\", \"SassNumber*()\", \"List<Extension0*>*()\", \"bool*(Import*)\", \"bool*(Statement*)\", \"Null(@,StackTrace*)\", \"Iterable<ComplexSelectorComponent0*>*(List<List<ComplexSelectorComponent0*>*>*)\", \"Future<@>*()\", \"bool*(Statement0*)\", \"bool*(Import0*)\", \"Stylesheet0*()\", \"bool*(@)\", \"~(Uint8List,String,int)\", \"String(String)\", \"SassNull0*(int*)\", \"Object*(_NodeSassMap*,int*)\", \"Null(_NodeSassMap*,int*,Object*)\", \"Object*()\", \"String*(_NodeSassNumber*)\", \"Object*(@)\", \"SelectorList0*(Value0*)\", \"SelectorList0*(SelectorList0*,SelectorList0*)\", \"String(int)\", \"String*(_NodeSassString*)\", \"Null(Object?,Object?)\", \"~([Future<~>?])\", \"AtRootRule0*(List<Statement0*>*,FileSpan*)\", \"AtRule0*(List<Statement0*>*,FileSpan*)\", \"int(@,@)\", \"~(@)\", \"bool(Object?,Object?)\", \"Module<AsyncCallable*>*(Module<AsyncCallable*>*)\", \"SassString*(SimpleSelector*)\", \"Iterable<WatchEvent*>*(List<WatchEvent*>*)\", \"WatchEvent*(String*)\", \"bool*(Extension*)\", \"Set<ModifiableCssValue<SelectorList*>*>*()\", \"_Future<@>(@)\", \"@(@,String)\", \"Future<Value*>*(Value*)\", \"Null(SimpleSelector*,Map<ComplexSelector*,Extension*>*)\", \"Null(ComplexSelector*,Extension*)\", \"Extension*()\", \"List<ComplexSelector*>*(ComplexSelectorComponent*)\", \"Iterable<ComplexSelector*>*(List<ComplexSelector*>*)\", \"Future<Value*>*(Expression*)\", \"List<ComplexSelectorComponent*>*(ComplexSelector*)\", \"ComplexSelector*(Extension*)\", \"List<ComplexSelector*>*(List<Extension*>*)\", \"List<SimpleSelector*>*(Extension*)\", \"bool*(List<ComplexSelector*>*)\", \"List<ComplexSelector*>*(List<ComplexSelector*>*)\", \"EvaluateResult*()\", \"List<Extension*>*(SimpleSelector*)\", \"Value*(Module<AsyncCallable*>*)\", \"List<Extension*>*(PseudoSelector*)\", \"List<ComplexSelector*>*(ComplexSelector*)\", \"Value*(Expression*)\", \"~(CssMediaQuery*)\", \"PseudoSelector*(ComplexSelector*)\", \"SourceFile*(int*)\", \"String*(SourceFile*)\", \"@(String*,@)\", \"FileSpan*(int*[int*])\", \"int*(_Line*)\", \"Null(SimpleSelector*,Set<ModifiableCssValue<SelectorList*>*>*)\", \"Uri*(_Line*)\", \"int*(_Highlight*,_Highlight*)\", \"List<_Line*>*(List<_Highlight*>*)\", \"SourceSpanWithContext*()\", \"String*(String*{color:@})\", \"@(String)\", \"List<Frame*>*(Trace*)\", \"int*(Trace*)\", \"List<ComplexSelectorComponent*>*(List<ComplexSelectorComponent*>*,List<ComplexSelectorComponent*>*)\", \"String*(Trace*)\", \"bool*(Queue<List<ComplexSelectorComponent*>*>*)\", \"~(Object[StackTrace?])\", \"Frame*(String*,String*)\", \"Null(Function*,Function*)\", \"bool*(List<Iterable<ComplexSelectorComponent*>*>*)\", \"List<ComplexSelectorComponent*>*(List<Iterable<ComplexSelectorComponent*>*>*)\", \"Frame*(Frame*)\", \"Future<~>*()\", \"String*(Argument0*)\", \"Iterable<ComplexSelectorComponent*>*(Iterable<ComplexSelectorComponent*>*)\", \"Future<@>()\", \"List<Module0<AsyncCallable0*>*>*(int*)\", \"Value0*(Module0<AsyncCallable0*>*)\", \"Null(String,@)\", \"bool*(String*,String*)\", \"Map<String*,Value0*>*(Module0<AsyncCallable0*>*)\", \"Map<String*,AstNode0*>*(Module0<AsyncCallable0*>*)\", \"int*(String*)\", \"~(@,StackTrace)\", \"String*(Argument*)\", \"String*(Expression*)\", \"String*(Tuple2<Expression*,Expression*>*)\", \"bool(@)\", \"String*(Value*)\", \"String*(IfClause*)\", \"List<Value*>*(Value*)\", \"Future<EvaluateResult0*>*()\", \"bool*(List<Value*>*)\", \"Set<0^>()<Object?>\", \"Set<0^>()<Object?>\", \"Null(@,StackTrace)\", \"SassMap*(Value*)\", \"SassMap*(SassMap*[Value*])\", \"Future<Value0*>*(Value0*)\", \"Set<0^>()<Object?>\", \"Null(int,@)\", \"SassList*(ComplexSelector*)\", \"SassNumber*(Value*)\", \"SassString*(ComplexSelectorComponent*)\", \"Null(Symbol0,@)\", \"_Future<@>?()\", \"~(String,int)\", \"Future<Value0*>*(Expression0*)\", \"SimpleSelector*(SimpleSelector*)\", \"~(String[@])\", \"bool*(Tuple3<Importer*,Uri*,Uri*>*)\", \"Future<Tuple3<AsyncImporter0*,Uri*,Uri*>*>*()\", \"Future<Stylesheet0*>*()\", \"bool*(Tuple3<AsyncImporter0*,Uri*,Uri*>*)\", \"Uri*(Tuple3<AsyncImporter0*,Uri*,Uri*>*)\", \"Uri*(Tuple3<Importer*,Uri*,Uri*>*)\", \"List<Module<AsyncCallable*>*>*(int*)\", \"Null(String*)\", \"int(int,int)\", \"@(Object)\", \"Uint8List(int)\", \"Uint8List(@,@)\", \"Object*(Value0*)\", \"Null(_NodeSassColor*,num*[num*,num*,num*,SassColor0*])\", \"Map<String*,Value*>*(Module<AsyncCallable*>*)\", \"num*(_NodeSassColor*)\", \"Map<String*,AstNode*>*(Module<AsyncCallable*>*)\", \"String*(_NodeSassColor*)\", \"@(StackTrace)\", \"String*(BuiltInCallable0*)\", \"~(String*)\", \"List<Module0<Callable0*>*>*(int*)\", \"Value0*(Module0<Callable0*>*)\", \"bool*(Option*)\", \"String*(BuiltInCallable*)\", \"Map<String*,Value0*>*(Module0<Callable0*>*)\", \"Map<String*,AstNode0*>*(Module0<Callable0*>*)\", \"Future<Tuple3<AsyncImporter*,Uri*,Uri*>*>*()\", \"Null(String*,Option*)\", \"Future<Stylesheet*>*()\", \"CompoundSelector*()\", \"EvaluateResult0*()\", \"Statement*({root:bool*})\", \"bool*(Tuple3<AsyncImporter*,Uri*,Uri*>*)\", \"Expression*({bracketList:bool*,singleEquals:bool*,until:bool*()*})\", \"NumberExpression*()\", \"Value0*(Expression0*)\", \"bool*(Extension0*)\", \"Set<ModifiableCssValue0<SelectorList0*>*>*()\", \"VariableDeclaration*(VariableDeclaration*)\", \"ArgumentDeclaration*()\", \"Null(SimpleSelector0*,Map<ComplexSelector0*,Extension0*>*)\", \"Null(ComplexSelector0*,Extension0*)\", \"Extension0*()\", \"Uri*(Tuple3<AsyncImporter*,Uri*,Uri*>*)\", \"List<ComplexSelector0*>*(ComplexSelectorComponent0*)\", \"Iterable<ComplexSelector0*>*(List<ComplexSelector0*>*)\", \"List<ComplexSelectorComponent0*>*(ComplexSelector0*)\", \"UseRule*()\", \"ComplexSelector0*(Extension0*)\", \"List<ComplexSelector0*>*(List<Extension0*>*)\", \"List<SimpleSelector0*>*(Extension0*)\", \"bool*(List<ComplexSelector0*>*)\", \"List<ComplexSelector0*>*(List<ComplexSelector0*>*)\", \"List<Extension0*>*(SimpleSelector0*)\", \"List<Extension0*>*(PseudoSelector0*)\", \"List<ComplexSelector0*>*(ComplexSelector0*)\", \"PseudoSelector0*(ComplexSelector0*)\", \"Null(SimpleSelector0*,Set<ModifiableCssValue0<SelectorList0*>*>*)\", \"Object()\", \"List<ComplexSelectorComponent0*>*(List<ComplexSelectorComponent0*>*,List<ComplexSelectorComponent0*>*)\", \"bool*(Queue<List<ComplexSelectorComponent0*>*>*)\", \"StackTrace()\", \"bool*(List<Iterable<ComplexSelectorComponent0*>*>*)\", \"List<ComplexSelectorComponent0*>*(List<Iterable<ComplexSelectorComponent0*>*>*)\", \"Iterable<ComplexSelectorComponent0*>*(Iterable<ComplexSelectorComponent0*>*)\", \"StyleRule*(List<Statement*>*,FileSpan*)\", \"String*(IfClause0*)\", \"Null(~())\", \"EachRule*(List<Statement*>*,FileSpan*)\", \"Tuple3<Importer0*,Uri*,Uri*>*()\", \"FunctionRule*(List<Statement*>*,FileSpan*)\", \"bool*(Tuple3<Importer0*,Uri*,Uri*>*)\", \"Uri*(Tuple3<Importer0*,Uri*,Uri*>*)\", \"String*(Expression0*)\", \"ForRule*(List<Statement*>*,FileSpan*)\", \"List<Value0*>*(Value0*)\", \"bool*(List<Value0*>*)\", \"SassList0*(ComplexSelector0*)\", \"SassString0*(ComplexSelectorComponent0*)\", \"ContentBlock*(List<Statement*>*,FileSpan*)\", \"MediaRule*(List<Statement*>*,FileSpan*)\", \"SimpleSelector0*(SimpleSelector0*)\", \"Null(_NodeSassList*,int*[bool*,SassList0*])\", \"MixinRule*(List<Statement*>*,FileSpan*)\", \"Object*(_NodeSassList*,int*)\", \"Null(_NodeSassList*,int*,Object*)\", \"bool*(_NodeSassList*)\", \"Null(_NodeSassList*,bool*)\", \"int*(_NodeSassList*)\", \"String*(_NodeSassList*)\", \"String*(Tuple2<Expression0*,Expression0*>*)\", \"SassMap0*(Value0*)\", \"SassMap0*(SassMap0*[Value0*])\", \"Null(_NodeSassMap*,int*[SassMap0*])\", \"SassNumber0*(int*)\", \"List<Module<Callable*>*>*(int*)\", \"int*(_NodeSassMap*)\", \"SupportsRule*(List<Statement*>*,FileSpan*)\", \"String*(_NodeSassMap*)\", \"SassNumber0*(Value0*)\", \"Null(RenderResult*)\", \"Null(Object*,StackTrace*)\", \"Null(Object*,Object*)\", \"WhileRule*(List<Statement*>*,FileSpan*)\", \"~([Object*])\", \"JSFunction0*(JSFunction0*)\", \"Object*(Object*,String*,String*[Object*])\", \"Null(Object*)\", \"Null(_NodeSassNumber*,num*[String*,SassNumber0*])\", \"num*(_NodeSassNumber*)\", \"Null(_NodeSassNumber*,num*)\", \"~(Expression*{number:bool*})\", \"Null(_NodeSassNumber*,String*)\", \"~(String*,StackTrace*)\", \"~(BinaryOperator*)\", \"DateTime*(StylesheetNode*)\", \"Null(Uri*,StylesheetNode*)\", \"SassString0*(SimpleSelector0*)\", \"CompoundSelector0*()\", \"~(CssMediaQuery0*)\", \"Value*(Module<Callable*>*)\", \"Null(_NodeSassString*,String*[SassString0*])\", \"~([Object?])\", \"Null(_NodeSassString*,String*)\", \"Statement0*({root:bool*})\", \"~(@[StackTrace*])\", \"NumberExpression0*()\", \"VariableDeclaration0*(VariableDeclaration0*)\", \"ArgumentDeclaration0*()\", \"Tuple2<String*,ArgumentDeclaration0*>*()\", \"VariableDeclaration0*()\", \"Map<String*,Value*>*(Module<Callable*>*)\", \"StyleRule0*(List<Statement0*>*,FileSpan*)\", \"Map<String*,AstNode*>*(Module<Callable*>*)\", \"EachRule0*(List<Statement0*>*,FileSpan*)\", \"FunctionRule0*(List<Statement0*>*,FileSpan*)\", \"ForRule0*(List<Statement0*>*,FileSpan*)\", \"ContentBlock0*(List<Statement0*>*,FileSpan*)\", \"MediaRule0*(List<Statement0*>*,FileSpan*)\", \"MixinRule0*(List<Statement0*>*,FileSpan*)\", \"Null(Object,StackTrace)\", \"SupportsRule0*(List<Statement0*>*,FileSpan*)\", \"WhileRule0*(List<Statement0*>*,FileSpan*)\", \"~(Expression0*{number:bool*})\", \"~(BinaryOperator0*)\", \"Null(String*,Function*)\", \"bool*(Future<~>*)\", \"Future<Value*>*(List<Value*>*)\", \"~(Zone?,ZoneDelegate?,Zone,Object,StackTrace)\", \"0^(Zone?,ZoneDelegate?,Zone,0^())<Object?>\", \"0^(Zone?,ZoneDelegate?,Zone,0^(1^),1^)<Object?Object?>\", \"0^(Zone?,ZoneDelegate?,Zone,0^(1^,2^),1^,2^)<Object?Object?Object?>\", \"0^()(Zone,ZoneDelegate,Zone,0^())<Object?>\", \"0^(1^)(Zone,ZoneDelegate,Zone,0^(1^))<Object?Object?>\", \"0^(1^,2^)(Zone,ZoneDelegate,Zone,0^(1^,2^))<Object?Object?Object?>\", \"AsyncError?(Zone,ZoneDelegate,Zone,Object,StackTrace?)\", \"~(Zone?,ZoneDelegate?,Zone,~())\", \"Timer(Zone,ZoneDelegate,Zone,Duration,~())\", \"Timer(Zone,ZoneDelegate,Zone,Duration,~(Timer))\", \"~(Zone,ZoneDelegate,Zone,String)\", \"~(String)\", \"Zone(Zone?,ZoneDelegate?,Zone,ZoneSpecification?,Map<Object?,Object?>?)\", \"ArgParser*()\", \"Future<EvaluateResult*>*()\", \"0^(0^,0^)<num>\", \"~(Object*,StackTrace*,EventSink<0^*>*)<Object*>\", \"List<0^*>*(0^*,List<0^*>*)<Object*>\", \"~(RenderOptions*,~(JsError*,RenderResult*)*)\", \"RenderResult*(RenderOptions*)\", \"Future<~>*(List<String*>*)\", \"Future<~>*(String*)\", \"String*(Value0*)\"],\n    interceptorsByTag: null,\n    leafTags: null,\n    arrayRti: typeof Symbol == \"function\" && typeof Symbol() == \"symbol\" ? Symbol(\"$ti\") : \"$ti\"\n  };\n  H._Universe_addRules(init.typeUniverse, JSON.parse('{\"_Exports\":\"JavaScriptObject\",\"Util\":\"JavaScriptObject\",\"NodeJsError\":\"JavaScriptObject\",\"JsAssertionError\":\"JavaScriptObject\",\"JsRangeError\":\"JavaScriptObject\",\"JsReferenceError\":\"JavaScriptObject\",\"JsSyntaxError\":\"JavaScriptObject\",\"JsTypeError\":\"JavaScriptObject\",\"JsSystemError\":\"JavaScriptObject\",\"JsError\":\"JavaScriptObject\",\"Promise\":\"JavaScriptObject\",\"Date\":\"JavaScriptObject\",\"Atomics\":\"JavaScriptObject\",\"Exports\":\"JavaScriptObject\",\"JSFunction0\":\"JavaScriptObject\",\"RenderContext\":\"JavaScriptObject\",\"RenderContextOptions\":\"JavaScriptObject\",\"RenderOptions\":\"JavaScriptObject\",\"RenderResult\":\"JavaScriptObject\",\"RenderResultStats\":\"JavaScriptObject\",\"Types\":\"JavaScriptObject\",\"_PropertyDescriptor0\":\"JavaScriptObject\",\"ConsoleModule\":\"JavaScriptObject\",\"Console\":\"JavaScriptObject\",\"Modules\":\"JavaScriptObject\",\"Module1\":\"JavaScriptObject\",\"Process\":\"JavaScriptObject\",\"EventEmitter\":\"JavaScriptObject\",\"Readable\":\"JavaScriptObject\",\"Writable\":\"JavaScriptObject\",\"NetServer\":\"JavaScriptObject\",\"FSWatcher\":\"JavaScriptObject\",\"Duplex\":\"JavaScriptObject\",\"ReadStream\":\"JavaScriptObject\",\"WriteStream\":\"JavaScriptObject\",\"Transform\":\"JavaScriptObject\",\"Socket\":\"JavaScriptObject\",\"TTYReadStream\":\"JavaScriptObject\",\"TTYWriteStream\":\"JavaScriptObject\",\"CPUUsage\":\"JavaScriptObject\",\"Release\":\"JavaScriptObject\",\"BufferModule\":\"JavaScriptObject\",\"BufferConstants\":\"JavaScriptObject\",\"Buffer\":\"JavaScriptObject\",\"Immediate\":\"JavaScriptObject\",\"Timeout\":\"JavaScriptObject\",\"FiberClass\":\"JavaScriptObject\",\"Fiber\":\"JavaScriptObject\",\"_NodeSassColor\":\"JavaScriptObject\",\"_NodeSassList\":\"JavaScriptObject\",\"_NodeSassMap\":\"JavaScriptObject\",\"_NodeSassNumber\":\"JavaScriptObject\",\"_NodeSassString\":\"JavaScriptObject\",\"StreamModule\":\"JavaScriptObject\",\"WritableOptions\":\"JavaScriptObject\",\"ReadableOptions\":\"JavaScriptObject\",\"Net\":\"JavaScriptObject\",\"NetAddress\":\"JavaScriptObject\",\"TTY\":\"JavaScriptObject\",\"FS\":\"JavaScriptObject\",\"FSConstants\":\"JavaScriptObject\",\"ReadStreamOptions\":\"JavaScriptObject\",\"WriteStreamOptions\":\"JavaScriptObject\",\"Stats\":\"JavaScriptObject\",\"Chokidar\":\"JavaScriptObject\",\"ChokidarOptions\":\"JavaScriptObject\",\"ChokidarWatcher\":\"JavaScriptObject\",\"Chokidar0\":\"JavaScriptObject\",\"ChokidarOptions0\":\"JavaScriptObject\",\"ChokidarWatcher0\":\"JavaScriptObject\",\"NodeImporterResult0\":\"JavaScriptObject\",\"Stdin\":\"JavaScriptObject\",\"Stdout\":\"JavaScriptObject\",\"ReadlineModule\":\"JavaScriptObject\",\"ReadlineOptions\":\"JavaScriptObject\",\"ReadlineInterface\":\"JavaScriptObject\",\"JSFunction\":\"JavaScriptObject\",\"NodeImporterResult\":\"JavaScriptObject\",\"_PropertyDescriptor\":\"JavaScriptObject\",\"PlainJavaScriptObject\":\"JavaScriptObject\",\"UnknownJavaScriptObject\":\"JavaScriptObject\",\"JavaScriptFunction\":\"JavaScriptObject\",\"JSBool\":{\"bool\":[]},\"JSNull\":{\"Null\":[]},\"JavaScriptObject\":{\"Function\":[],\"JsError\":[],\"JsSystemError\":[],\"_NodeSassColor\":[],\"JSFunction0\":[],\"NodeImporterResult0\":[],\"_NodeSassList\":[],\"_NodeSassMap\":[],\"_NodeSassNumber\":[],\"RenderOptions\":[],\"RenderResult\":[],\"_NodeSassString\":[]},\"JSArray\":{\"List\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"JSUnmodifiableArray\":{\"JSArray\":[\"1\"],\"List\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"JSNumber\":{\"double\":[],\"num\":[],\"Comparable\":[\"num\"]},\"JSInt\":{\"double\":[],\"int\":[],\"num\":[],\"Comparable\":[\"num\"]},\"JSDouble\":{\"double\":[],\"num\":[],\"Comparable\":[\"num\"]},\"JSString\":{\"String\":[],\"Comparable\":[\"String\"]},\"_CastIterableBase\":{\"Iterable\":[\"2\"]},\"CastIterable\":{\"_CastIterableBase\":[\"1\",\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"_EfficientLengthCastIterable\":{\"CastIterable\":[\"1\",\"2\"],\"_CastIterableBase\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"_CastListBase\":{\"ListMixin\":[\"2\"],\"List\":[\"2\"],\"_CastIterableBase\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"]},\"CastList\":{\"_CastListBase\":[\"1\",\"2\"],\"ListMixin\":[\"2\"],\"List\":[\"2\"],\"_CastIterableBase\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\",\"ListMixin.E\":\"2\"},\"CastSet\":{\"Set\":[\"2\"],\"_CastIterableBase\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"CastQueue\":{\"Queue\":[\"2\"],\"_CastIterableBase\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"LateInitializationErrorImpl\":{\"Error\":[]},\"CodeUnits\":{\"ListMixin\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"EfficientLengthIterable\":{\"Iterable\":[\"1\"]},\"ListIterable\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"SubListIterable\":{\"ListIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"ListIterable.E\":\"1\",\"Iterable.E\":\"1\"},\"MappedIterable\":{\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"EfficientLengthMappedIterable\":{\"MappedIterable\":[\"1\",\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"MappedListIterable\":{\"ListIterable\":[\"2\"],\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"ListIterable.E\":\"2\",\"Iterable.E\":\"2\"},\"WhereIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"ExpandIterable\":{\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"TakeIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"EfficientLengthTakeIterable\":{\"TakeIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"SkipIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"EfficientLengthSkipIterable\":{\"SkipIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"SkipWhileIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"EmptyIterable\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"FollowedByIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"EfficientLengthFollowedByIterable\":{\"FollowedByIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"WhereTypeIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"UnmodifiableListBase\":{\"ListMixin\":[\"1\"],\"List\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"ReversedListIterable\":{\"ListIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"ListIterable.E\":\"1\",\"Iterable.E\":\"1\"},\"Symbol\":{\"Symbol0\":[]},\"ConstantMapView\":{\"UnmodifiableMapView\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"]},\"ConstantMap\":{\"Map\":[\"1\",\"2\"]},\"ConstantStringMap\":{\"ConstantMap\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"]},\"ConstantProtoMap\":{\"ConstantStringMap\":[\"1\",\"2\"],\"ConstantMap\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"]},\"_ConstantMapKeyIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"Instantiation\":{\"Function\":[]},\"Instantiation1\":{\"Function\":[]},\"NullError\":{\"Error\":[]},\"JsNoSuchMethodError\":{\"Error\":[]},\"UnknownJsTypeError\":{\"Error\":[]},\"NullThrownFromJavaScriptException\":{\"Exception\":[]},\"_StackTrace\":{\"StackTrace\":[]},\"Closure\":{\"Function\":[]},\"TearOffClosure\":{\"Function\":[]},\"StaticClosure\":{\"Function\":[]},\"BoundClosure\":{\"Function\":[]},\"RuntimeError\":{\"Error\":[]},\"JsLinkedHashMap\":{\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"],\"MapMixin.K\":\"1\",\"MapMixin.V\":\"2\"},\"LinkedHashMapKeyIterable\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"_MatchImplementation\":{\"RegExpMatch\":[],\"Match\":[]},\"_AllMatchesIterable\":{\"Iterable\":[\"RegExpMatch\"],\"Iterable.E\":\"RegExpMatch\"},\"StringMatch\":{\"Match\":[]},\"_StringAllMatchesIterable\":{\"Iterable\":[\"Match\"],\"Iterable.E\":\"Match\"},\"NativeTypedArray\":{\"JavaScriptIndexingBehavior\":[\"1\"]},\"NativeTypedArrayOfDouble\":{\"ListMixin\":[\"double\"],\"JavaScriptIndexingBehavior\":[\"double\"],\"List\":[\"double\"],\"EfficientLengthIterable\":[\"double\"],\"Iterable\":[\"double\"]},\"NativeTypedArrayOfInt\":{\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"]},\"NativeFloat32List\":{\"NativeTypedArrayOfDouble\":[],\"ListMixin\":[\"double\"],\"JavaScriptIndexingBehavior\":[\"double\"],\"List\":[\"double\"],\"EfficientLengthIterable\":[\"double\"],\"Iterable\":[\"double\"],\"ListMixin.E\":\"double\"},\"NativeFloat64List\":{\"NativeTypedArrayOfDouble\":[],\"ListMixin\":[\"double\"],\"JavaScriptIndexingBehavior\":[\"double\"],\"List\":[\"double\"],\"EfficientLengthIterable\":[\"double\"],\"Iterable\":[\"double\"],\"ListMixin.E\":\"double\"},\"NativeInt16List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeInt32List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeInt8List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeUint16List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeUint32List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeUint8ClampedList\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"NativeUint8List\":{\"NativeTypedArrayOfInt\":[],\"ListMixin\":[\"int\"],\"Uint8List\":[],\"JavaScriptIndexingBehavior\":[\"int\"],\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"],\"ListMixin.E\":\"int\"},\"_Error\":{\"Error\":[]},\"_TypeError\":{\"Error\":[]},\"_SyncStarIterable\":{\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"_BroadcastStream\":{\"_ControllerStream\":[\"1\"],\"_StreamImpl\":[\"1\"],\"Stream\":[\"1\"],\"Stream.T\":\"1\"},\"_BroadcastSubscription\":{\"_ControllerSubscription\":[\"1\"],\"_BufferingStreamSubscription\":[\"1\"],\"StreamSubscription\":[\"1\"],\"_BufferingStreamSubscription.T\":\"1\"},\"_BroadcastStreamController\":{\"EventSink\":[\"1\"]},\"_SyncBroadcastStreamController\":{\"_BroadcastStreamController\":[\"1\"],\"EventSink\":[\"1\"]},\"_AsyncCompleter\":{\"_Completer\":[\"1\"]},\"_Future\":{\"Future\":[\"1\"]},\"_StreamController\":{\"EventSink\":[\"1\"]},\"_AsyncStreamController\":{\"_StreamController\":[\"1\"],\"EventSink\":[\"1\"]},\"_SyncStreamController\":{\"_StreamController\":[\"1\"],\"EventSink\":[\"1\"]},\"_ControllerStream\":{\"_StreamImpl\":[\"1\"],\"Stream\":[\"1\"],\"Stream.T\":\"1\"},\"_ControllerSubscription\":{\"_BufferingStreamSubscription\":[\"1\"],\"StreamSubscription\":[\"1\"],\"_BufferingStreamSubscription.T\":\"1\"},\"_BufferingStreamSubscription\":{\"StreamSubscription\":[\"1\"],\"_BufferingStreamSubscription.T\":\"1\"},\"_StreamImpl\":{\"Stream\":[\"1\"]},\"_DoneStreamSubscription\":{\"StreamSubscription\":[\"1\"]},\"_ForwardingStream\":{\"Stream\":[\"2\"]},\"_ForwardingStreamSubscription\":{\"_BufferingStreamSubscription\":[\"2\"],\"StreamSubscription\":[\"2\"],\"_BufferingStreamSubscription.T\":\"2\"},\"_ExpandStream\":{\"_ForwardingStream\":[\"1\",\"2\"],\"Stream\":[\"2\"],\"Stream.T\":\"2\"},\"AsyncError\":{\"Error\":[]},\"_ZoneSpecification\":{\"ZoneSpecification\":[]},\"_ZoneDelegate\":{\"ZoneDelegate\":[]},\"_Zone\":{\"Zone\":[]},\"_CustomZone\":{\"Zone\":[]},\"_RootZone\":{\"Zone\":[]},\"Queue\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"_HashMap\":{\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"],\"MapMixin.K\":\"1\",\"MapMixin.V\":\"2\"},\"_HashMapKeyIterable\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"Iterable.E\":\"1\"},\"_LinkedIdentityHashMap\":{\"JsLinkedHashMap\":[\"1\",\"2\"],\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"],\"MapMixin.K\":\"1\",\"MapMixin.V\":\"2\"},\"_LinkedCustomHashMap\":{\"JsLinkedHashMap\":[\"1\",\"2\"],\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"],\"MapMixin.K\":\"1\",\"MapMixin.V\":\"2\"},\"_LinkedHashSet\":{\"_SetBase\":[\"1\"],\"Set\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"_LinkedIdentityHashSet\":{\"_LinkedHashSet\":[\"1\"],\"_SetBase\":[\"1\"],\"Set\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"UnmodifiableListView\":{\"ListMixin\":[\"1\"],\"List\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"ListMixin.E\":\"1\"},\"IterableBase\":{\"Iterable\":[\"1\"]},\"ListBase\":{\"ListMixin\":[\"1\"],\"List\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"MapBase\":{\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"]},\"MapMixin\":{\"Map\":[\"1\",\"2\"]},\"UnmodifiableMapBase\":{\"MapMixin\":[\"1\",\"2\"],\"Map\":[\"1\",\"2\"]},\"_MapBaseValueIterable\":{\"EfficientLengthIterable\":[\"2\"],\"Iterable\":[\"2\"],\"Iterable.E\":\"2\"},\"MapView\":{\"Map\":[\"1\",\"2\"]},\"UnmodifiableMapView\":{\"Map\":[\"1\",\"2\"]},\"ListQueue\":{\"ListIterable\":[\"1\"],\"Queue\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"ListIterable.E\":\"1\",\"Iterable.E\":\"1\"},\"_SetBase\":{\"Set\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"_UnmodifiableSet\":{\"_SetBase\":[\"1\"],\"Set\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"AsciiCodec\":{\"Codec\":[\"String\",\"List<int>\"]},\"_UnicodeSubsetEncoder\":{\"Converter\":[\"String\",\"List<int>\"]},\"AsciiEncoder\":{\"Converter\":[\"String\",\"List<int>\"]},\"Base64Codec\":{\"Codec\":[\"List<int>\",\"String\"]},\"Base64Encoder\":{\"Converter\":[\"List<int>\",\"String\"]},\"Encoding\":{\"Codec\":[\"String\",\"List<int>\"]},\"JsonUnsupportedObjectError\":{\"Error\":[]},\"JsonCyclicError\":{\"Error\":[]},\"JsonCodec\":{\"Codec\":[\"Object?\",\"String\"]},\"JsonEncoder\":{\"Converter\":[\"Object?\",\"String\"]},\"StringConversionSinkBase\":{\"StringConversionSink\":[]},\"StringConversionSinkMixin\":{\"StringConversionSink\":[]},\"_StringSinkConversionSink\":{\"StringConversionSink\":[]},\"_StringCallbackSink\":{\"StringConversionSink\":[]},\"_StringAdapterSink\":{\"StringConversionSink\":[]},\"Utf8Codec\":{\"Codec\":[\"String\",\"List<int>\"]},\"Utf8Encoder\":{\"Converter\":[\"String\",\"List<int>\"]},\"Utf8Decoder\":{\"Converter\":[\"List<int>\",\"String\"]},\"double\":{\"num\":[],\"Comparable\":[\"num\"]},\"int\":{\"num\":[],\"Comparable\":[\"num\"]},\"List\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"num\":{\"Comparable\":[\"num\"]},\"RegExpMatch\":{\"Match\":[]},\"Set\":{\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"]},\"String\":{\"Comparable\":[\"String\"]},\"DateTime\":{\"Comparable\":[\"DateTime\"]},\"Duration\":{\"Comparable\":[\"Duration\"]},\"AssertionError\":{\"Error\":[]},\"TypeError\":{\"Error\":[]},\"NullThrownError\":{\"Error\":[]},\"ArgumentError\":{\"Error\":[]},\"RangeError\":{\"Error\":[]},\"IndexError\":{\"RangeError\":[],\"Error\":[]},\"NoSuchMethodError\":{\"Error\":[]},\"UnsupportedError\":{\"Error\":[]},\"UnimplementedError\":{\"Error\":[]},\"StateError\":{\"Error\":[]},\"ConcurrentModificationError\":{\"Error\":[]},\"OutOfMemoryError\":{\"Error\":[]},\"StackOverflowError\":{\"Error\":[]},\"CyclicInitializationError\":{\"Error\":[]},\"_Exception\":{\"Exception\":[]},\"FormatException\":{\"Exception\":[]},\"_GeneratorIterable\":{\"ListIterable\":[\"1\"],\"EfficientLengthIterable\":[\"1\"],\"Iterable\":[\"1\"],\"ListIterable.E\":\"1\",\"Iterable.E\":\"1\"},\"_StringStackTrace\":{\"StackTrace\":[]},\"Runes\":{\"Iterable\":[\"int\"],\"Iterable.E\":\"int\"},\"_Uri\":{\"Uri\":[]},\"_SimpleUri\":{\"Uri\":[]},\"_DataUri\":{\"Uri\":[]},\"ArgParserException\":{\"FormatException\":[],\"Exception\":[]},\"ErrorResult\":{\"Result\":[\"Null\"]},\"ValueResult\":{\"Result\":[\"1*\"]},\"_CompleterStream\":{\"Stream\":[\"1*\"],\"Stream.T\":\"1*\"},\"_NextRequest\":{\"_EventRequest\":[\"1*\"]},\"EmptyUnmodifiableSet\":{\"Set\":[\"1*\"],\"EfficientLengthIterable\":[\"1*\"],\"Iterable\":[\"1*\"],\"Iterable.E\":\"1*\"},\"QueueList\":{\"ListMixin\":[\"1*\"],\"List\":[\"1*\"],\"Queue\":[\"1*\"],\"EfficientLengthIterable\":[\"1*\"],\"Iterable\":[\"1*\"],\"ListMixin.E\":\"1*\",\"QueueList.E\":\"1\"},\"_CastQueueList\":{\"QueueList\":[\"2*\"],\"ListMixin\":[\"2*\"],\"List\":[\"2*\"],\"Queue\":[\"2*\"],\"EfficientLengthIterable\":[\"2*\"],\"Iterable\":[\"2*\"],\"ListMixin.E\":\"2*\",\"QueueList.E\":\"2*\"},\"UnmodifiableSetView\":{\"DelegatingSet\":[\"1*\"],\"Set\":[\"1*\"],\"EfficientLengthIterable\":[\"1*\"],\"Iterable\":[\"1*\"],\"DelegatingSet.E\":\"1*\"},\"_DelegatingIterableBase\":{\"Iterable\":[\"1*\"]},\"DelegatingIterable\":{\"Iterable\":[\"1*\"]},\"DelegatingSet\":{\"Set\":[\"1*\"],\"EfficientLengthIterable\":[\"1*\"],\"Iterable\":[\"1*\"],\"DelegatingSet.E\":\"1\"},\"MapKeySet\":{\"Set\":[\"1*\"],\"EfficientLengthIterable\":[\"1*\"],\"Iterable\":[\"1*\"]},\"PathException\":{\"Exception\":[]},\"PathMap\":{\"Map\":[\"String*\",\"1*\"]},\"ModifiableCssAtRule\":{\"ModifiableCssParentNode\":[],\"CssAtRule\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssComment\":{\"ModifiableCssNode\":[],\"CssComment\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssDeclaration\":{\"ModifiableCssNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssImport\":{\"ModifiableCssNode\":[],\"CssImport\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssKeyframeBlock\":{\"ModifiableCssParentNode\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssMediaRule\":{\"ModifiableCssParentNode\":[],\"CssMediaRule\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssNode\":{\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssParentNode\":{\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssStyleRule\":{\"ModifiableCssParentNode\":[],\"CssStyleRule\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssStylesheet\":{\"ModifiableCssParentNode\":[],\"CssStylesheet\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssSupportsRule\":{\"ModifiableCssParentNode\":[],\"CssSupportsRule\":[],\"ModifiableCssNode\":[],\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"ModifiableCssValue\":{\"CssValue\":[\"1*\"],\"AstNode\":[]},\"CssNode\":{\"AstNode\":[]},\"CssParentNode\":{\"CssNode\":[],\"AstNode\":[]},\"CssStylesheet\":{\"CssParentNode\":[],\"CssNode\":[],\"AstNode\":[]},\"CssValue\":{\"AstNode\":[]},\"_FakeAstNode\":{\"AstNode\":[]},\"Argument\":{\"AstNode\":[]},\"ArgumentDeclaration\":{\"AstNode\":[]},\"ArgumentInvocation\":{\"AstNode\":[]},\"ConfiguredVariable\":{\"AstNode\":[]},\"BinaryOperationExpression\":{\"Expression\":[],\"AstNode\":[]},\"BooleanExpression\":{\"Expression\":[],\"AstNode\":[]},\"ColorExpression\":{\"Expression\":[],\"AstNode\":[]},\"FunctionExpression\":{\"Expression\":[],\"AstNode\":[]},\"IfExpression\":{\"Expression\":[],\"AstNode\":[]},\"ListExpression\":{\"Expression\":[],\"AstNode\":[]},\"MapExpression\":{\"Expression\":[],\"AstNode\":[]},\"NullExpression\":{\"Expression\":[],\"AstNode\":[]},\"NumberExpression\":{\"Expression\":[],\"AstNode\":[]},\"ParenthesizedExpression\":{\"Expression\":[],\"AstNode\":[]},\"SelectorExpression\":{\"Expression\":[],\"AstNode\":[]},\"StringExpression\":{\"Expression\":[],\"AstNode\":[]},\"UnaryOperationExpression\":{\"Expression\":[],\"AstNode\":[]},\"ValueExpression\":{\"Expression\":[],\"AstNode\":[]},\"VariableExpression\":{\"Expression\":[],\"AstNode\":[]},\"DynamicImport\":{\"Import\":[],\"AstNode\":[]},\"StaticImport\":{\"Import\":[],\"AstNode\":[]},\"Interpolation\":{\"AstNode\":[]},\"AtRootRule\":{\"Statement\":[],\"AstNode\":[]},\"AtRule\":{\"Statement\":[],\"AstNode\":[]},\"CallableDeclaration\":{\"Statement\":[],\"AstNode\":[]},\"ContentBlock\":{\"Statement\":[],\"AstNode\":[]},\"ContentRule\":{\"Statement\":[],\"AstNode\":[]},\"DebugRule\":{\"Statement\":[],\"AstNode\":[]},\"Declaration\":{\"Statement\":[],\"AstNode\":[]},\"EachRule\":{\"Statement\":[],\"AstNode\":[]},\"ErrorRule\":{\"Statement\":[],\"AstNode\":[]},\"ExtendRule\":{\"Statement\":[],\"AstNode\":[]},\"ForRule\":{\"Statement\":[],\"AstNode\":[]},\"ForwardRule\":{\"Statement\":[],\"AstNode\":[]},\"FunctionRule\":{\"Statement\":[],\"AstNode\":[]},\"IfRule\":{\"Statement\":[],\"AstNode\":[]},\"ImportRule\":{\"Statement\":[],\"AstNode\":[]},\"IncludeRule\":{\"Statement\":[],\"AstNode\":[]},\"LoudComment\":{\"Statement\":[],\"AstNode\":[]},\"MediaRule\":{\"Statement\":[],\"AstNode\":[]},\"MixinRule\":{\"Statement\":[],\"AstNode\":[]},\"ParentStatement\":{\"Statement\":[],\"AstNode\":[]},\"ReturnRule\":{\"Statement\":[],\"AstNode\":[]},\"SilentComment\":{\"Statement\":[],\"AstNode\":[]},\"StyleRule\":{\"Statement\":[],\"AstNode\":[]},\"Stylesheet\":{\"Statement\":[],\"AstNode\":[]},\"SupportsRule\":{\"Statement\":[],\"AstNode\":[]},\"UseRule\":{\"Statement\":[],\"AstNode\":[]},\"VariableDeclaration\":{\"Statement\":[],\"AstNode\":[]},\"WarnRule\":{\"Statement\":[],\"AstNode\":[]},\"WhileRule\":{\"Statement\":[],\"AstNode\":[]},\"SupportsAnything\":{\"AstNode\":[]},\"SupportsDeclaration\":{\"AstNode\":[]},\"SupportsFunction\":{\"AstNode\":[]},\"SupportsInterpolation\":{\"AstNode\":[]},\"SupportsNegation\":{\"AstNode\":[]},\"SupportsOperation\":{\"AstNode\":[]},\"AttributeSelector\":{\"SimpleSelector\":[]},\"ClassSelector\":{\"SimpleSelector\":[]},\"Combinator\":{\"ComplexSelectorComponent\":[]},\"CompoundSelector\":{\"ComplexSelectorComponent\":[]},\"IDSelector\":{\"SimpleSelector\":[]},\"ParentSelector\":{\"SimpleSelector\":[]},\"PlaceholderSelector\":{\"SimpleSelector\":[]},\"PseudoSelector\":{\"SimpleSelector\":[]},\"TypeSelector\":{\"SimpleSelector\":[]},\"UniversalSelector\":{\"SimpleSelector\":[]},\"_EnvironmentModule0\":{\"Module\":[\"AsyncCallable*\"]},\"AsyncBuiltInCallable\":{\"AsyncCallable\":[]},\"BuiltInCallable\":{\"Callable\":[],\"AsyncBuiltInCallable\":[],\"AsyncCallable\":[]},\"PlainCssCallable\":{\"Callable\":[],\"AsyncCallable\":[]},\"UserDefinedCallable\":{\"Callable\":[],\"AsyncCallable\":[]},\"_EnvironmentModule\":{\"Module\":[\"Callable*\"]},\"SassException\":{\"Exception\":[]},\"MultiSpanSassException\":{\"Exception\":[]},\"SassRuntimeException\":{\"Exception\":[]},\"MultiSpanSassRuntimeException\":{\"SassRuntimeException\":[],\"Exception\":[]},\"SassFormatException\":{\"SourceSpanFormatException\":[],\"FormatException\":[],\"Exception\":[]},\"UsageException\":{\"Exception\":[]},\"EmptyExtender\":{\"Extender\":[]},\"MergedExtension\":{\"Extension\":[]},\"Importer\":{\"AsyncImporter\":[]},\"FilesystemImporter\":{\"Importer\":[],\"AsyncImporter\":[]},\"BuiltInModule\":{\"Module\":[\"1*\"]},\"ForwardedModuleView\":{\"Module\":[\"1*\"]},\"ShadowedModuleView\":{\"Module\":[\"1*\"]},\"LimitedMapView\":{\"MapMixin\":[\"1*\",\"2*\"],\"Map\":[\"1*\",\"2*\"],\"MapMixin.K\":\"1*\",\"MapMixin.V\":\"2*\"},\"MergedMapView\":{\"MapMixin\":[\"1*\",\"2*\"],\"Map\":[\"1*\",\"2*\"],\"MapMixin.K\":\"1*\",\"MapMixin.V\":\"2*\"},\"NoSourceMapBuffer0\":{\"StringBuffer\":[]},\"PrefixedMapView\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"_PrefixedKeys\":{\"Iterable\":[\"String*\"],\"Iterable.E\":\"String*\"},\"PublicMemberMapView\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"SourceMapBuffer0\":{\"StringBuffer\":[]},\"UnprefixedMapView\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"_UnprefixedKeys\":{\"Iterable\":[\"String*\"],\"Iterable.E\":\"String*\"},\"SassArgumentList\":{\"SassList\":[],\"Value\":[]},\"SassBoolean\":{\"Value\":[]},\"SassColor\":{\"Value\":[]},\"SassFunction\":{\"Value\":[]},\"SassList\":{\"Value\":[]},\"SassMap\":{\"Value\":[]},\"SassNull\":{\"Value\":[]},\"SassNumber\":{\"Value\":[]},\"SassString\":{\"Value\":[]},\"Entry\":{\"Comparable\":[\"Entry*\"]},\"FileSpan\":{\"SourceSpanWithContext\":[],\"SourceSpan\":[],\"Comparable\":[\"SourceSpan*\"]},\"FileLocation\":{\"SourceLocation\":[],\"Comparable\":[\"SourceLocation*\"]},\"_FileSpan\":{\"FileSpan\":[],\"SourceSpanWithContext\":[],\"SourceSpan\":[],\"Comparable\":[\"SourceSpan*\"]},\"SourceLocation\":{\"Comparable\":[\"SourceLocation*\"]},\"SourceLocationMixin\":{\"SourceLocation\":[],\"Comparable\":[\"SourceLocation*\"]},\"SourceSpan\":{\"Comparable\":[\"SourceSpan*\"]},\"SourceSpanBase\":{\"SourceSpan\":[],\"Comparable\":[\"SourceSpan*\"]},\"SourceSpanException\":{\"Exception\":[]},\"SourceSpanFormatException\":{\"FormatException\":[],\"Exception\":[]},\"SourceSpanMixin\":{\"SourceSpan\":[],\"Comparable\":[\"SourceSpan*\"]},\"SourceSpanWithContext\":{\"SourceSpan\":[],\"Comparable\":[\"SourceSpan*\"]},\"Chain\":{\"StackTrace\":[]},\"LazyTrace\":{\"Trace\":[],\"StackTrace\":[]},\"Trace\":{\"StackTrace\":[]},\"UnparsedFrame\":{\"Frame\":[]},\"StringScannerException\":{\"SourceSpanFormatException\":[],\"FormatException\":[],\"Exception\":[]},\"SupportsAnything0\":{\"AstNode0\":[]},\"Argument0\":{\"AstNode0\":[]},\"ArgumentDeclaration0\":{\"AstNode0\":[]},\"ArgumentInvocation0\":{\"AstNode0\":[]},\"SassArgumentList0\":{\"SassList0\":[],\"Value0\":[]},\"AsyncBuiltInCallable0\":{\"AsyncCallable0\":[]},\"_EnvironmentModule2\":{\"Module0\":[\"AsyncCallable0*\"]},\"AtRootRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"ModifiableCssAtRule0\":{\"ModifiableCssParentNode0\":[],\"CssAtRule0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"AtRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"AttributeSelector0\":{\"SimpleSelector0\":[]},\"BinaryOperationExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"BooleanExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassBoolean0\":{\"Value0\":[]},\"BuiltInCallable0\":{\"Callable0\":[],\"AsyncBuiltInCallable0\":[],\"AsyncCallable0\":[]},\"BuiltInModule0\":{\"Module0\":[\"1*\"]},\"CallableDeclaration0\":{\"Statement0\":[],\"AstNode0\":[]},\"ClassSelector0\":{\"SimpleSelector0\":[]},\"ColorExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassColor0\":{\"Value0\":[]},\"ModifiableCssComment0\":{\"ModifiableCssNode0\":[],\"CssComment0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"Combinator0\":{\"ComplexSelectorComponent0\":[]},\"CompoundSelector0\":{\"ComplexSelectorComponent0\":[]},\"ConfiguredVariable0\":{\"AstNode0\":[]},\"ContentBlock0\":{\"Statement0\":[],\"AstNode0\":[]},\"ContentRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"DebugRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"ModifiableCssDeclaration0\":{\"ModifiableCssNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"Declaration0\":{\"Statement0\":[],\"AstNode0\":[]},\"SupportsDeclaration0\":{\"AstNode0\":[]},\"DynamicImport0\":{\"Import0\":[],\"AstNode0\":[]},\"EachRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"EmptyExtender0\":{\"Extender0\":[]},\"_EnvironmentModule1\":{\"Module0\":[\"Callable0*\"]},\"ErrorRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"SassException0\":{\"Exception\":[]},\"MultiSpanSassException0\":{\"Exception\":[]},\"SassRuntimeException0\":{\"Exception\":[]},\"MultiSpanSassRuntimeException0\":{\"SassRuntimeException0\":[],\"Exception\":[]},\"SassFormatException0\":{\"SourceSpanFormatException\":[],\"FormatException\":[],\"Exception\":[]},\"ExtendRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"FilesystemImporter0\":{\"Importer0\":[],\"AsyncImporter0\":[]},\"ForRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"ForwardRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"ForwardedModuleView0\":{\"Module0\":[\"1*\"]},\"FunctionExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SupportsFunction0\":{\"AstNode0\":[]},\"SassFunction0\":{\"Value0\":[]},\"FunctionRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"IDSelector0\":{\"SimpleSelector0\":[]},\"IfExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"IfRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"ModifiableCssImport0\":{\"ModifiableCssNode0\":[],\"CssImport0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"ImportRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"Importer0\":{\"AsyncImporter0\":[]},\"IncludeRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"Interpolation0\":{\"AstNode0\":[]},\"SupportsInterpolation0\":{\"AstNode0\":[]},\"ModifiableCssKeyframeBlock0\":{\"ModifiableCssParentNode0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"LimitedMapView0\":{\"MapMixin\":[\"1*\",\"2*\"],\"Map\":[\"1*\",\"2*\"],\"MapMixin.K\":\"1*\",\"MapMixin.V\":\"2*\"},\"ListExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassList0\":{\"Value0\":[]},\"LoudComment0\":{\"Statement0\":[],\"AstNode0\":[]},\"MapExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassMap0\":{\"Value0\":[]},\"ModifiableCssMediaRule0\":{\"ModifiableCssParentNode0\":[],\"CssMediaRule0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"MediaRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"MergedExtension0\":{\"Extension0\":[]},\"MergedMapView0\":{\"MapMixin\":[\"1*\",\"2*\"],\"Map\":[\"1*\",\"2*\"],\"MapMixin.K\":\"1*\",\"MapMixin.V\":\"2*\"},\"MixinRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"SupportsNegation0\":{\"AstNode0\":[]},\"NoSourceMapBuffer\":{\"StringBuffer\":[]},\"_FakeAstNode0\":{\"AstNode0\":[]},\"CssNode0\":{\"AstNode0\":[]},\"CssParentNode0\":{\"CssNode0\":[],\"AstNode0\":[]},\"ModifiableCssNode0\":{\"CssNode0\":[],\"AstNode0\":[]},\"ModifiableCssParentNode0\":{\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"NullExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassNull0\":{\"Value0\":[]},\"NumberExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassNumber0\":{\"Value0\":[]},\"SupportsOperation0\":{\"AstNode0\":[]},\"ParentSelector0\":{\"SimpleSelector0\":[]},\"ParentStatement0\":{\"Statement0\":[],\"AstNode0\":[]},\"ParenthesizedExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"PlaceholderSelector0\":{\"SimpleSelector0\":[]},\"PlainCssCallable0\":{\"Callable0\":[],\"AsyncCallable0\":[]},\"PrefixedMapView0\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"_PrefixedKeys0\":{\"Iterable\":[\"String*\"],\"Iterable.E\":\"String*\"},\"PseudoSelector0\":{\"SimpleSelector0\":[]},\"PublicMemberMapView0\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"ReturnRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"SelectorExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"ShadowedModuleView0\":{\"Module0\":[\"1*\"]},\"SilentComment0\":{\"Statement0\":[],\"AstNode0\":[]},\"SourceMapBuffer\":{\"StringBuffer\":[]},\"StaticImport0\":{\"Import0\":[],\"AstNode0\":[]},\"StringExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"SassString0\":{\"Value0\":[]},\"ModifiableCssStyleRule0\":{\"ModifiableCssParentNode0\":[],\"CssStyleRule0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"StyleRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"CssStylesheet0\":{\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"ModifiableCssStylesheet0\":{\"ModifiableCssParentNode0\":[],\"CssStylesheet0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"Stylesheet0\":{\"Statement0\":[],\"AstNode0\":[]},\"ModifiableCssSupportsRule0\":{\"ModifiableCssParentNode0\":[],\"CssSupportsRule0\":[],\"ModifiableCssNode0\":[],\"CssParentNode0\":[],\"CssNode0\":[],\"AstNode0\":[]},\"SupportsRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"TypeSelector0\":{\"SimpleSelector0\":[]},\"UnaryOperationExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"UniversalSelector0\":{\"SimpleSelector0\":[]},\"UnprefixedMapView0\":{\"MapMixin\":[\"String*\",\"1*\"],\"Map\":[\"String*\",\"1*\"],\"MapMixin.K\":\"String*\",\"MapMixin.V\":\"1*\"},\"_UnprefixedKeys0\":{\"Iterable\":[\"String*\"],\"Iterable.E\":\"String*\"},\"UseRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"UserDefinedCallable0\":{\"Callable0\":[],\"AsyncCallable0\":[]},\"CssValue0\":{\"AstNode0\":[]},\"ValueExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"ModifiableCssValue0\":{\"CssValue0\":[\"1*\"],\"AstNode0\":[]},\"VariableExpression0\":{\"Expression0\":[],\"AstNode0\":[]},\"VariableDeclaration0\":{\"Statement0\":[],\"AstNode0\":[]},\"WarnRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"WhileRule0\":{\"Statement0\":[],\"AstNode0\":[]},\"Uint8List\":{\"List\":[\"int\"],\"EfficientLengthIterable\":[\"int\"],\"Iterable\":[\"int\"]},\"Expression\":{\"AstNode\":[]},\"Import\":{\"AstNode\":[]},\"SassNode\":{\"AstNode\":[]},\"Statement\":{\"AstNode\":[]},\"SupportsCondition\":{\"AstNode\":[]},\"Callable\":{\"AsyncCallable\":[]},\"Callable0\":{\"AsyncCallable0\":[]},\"Expression0\":{\"AstNode0\":[]},\"Import0\":{\"AstNode0\":[]},\"SassNode0\":{\"AstNode0\":[]},\"Statement0\":{\"AstNode0\":[]},\"SupportsCondition0\":{\"AstNode0\":[]}}'));\n  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{\"ArrayIterator\":1,\"ListIterator\":1,\"MappedIterator\":2,\"WhereIterator\":1,\"ExpandIterator\":2,\"TakeIterator\":1,\"SkipIterator\":1,\"SkipWhileIterator\":1,\"EmptyIterator\":1,\"FollowedByIterator\":1,\"FixedLengthListMixin\":1,\"UnmodifiableListMixin\":1,\"UnmodifiableListBase\":1,\"__CastListBase__CastIterableBase_ListMixin\":2,\"LinkedHashMapKeyIterator\":1,\"NativeTypedArray\":1,\"EventSink\":1,\"_SyncStarIterator\":1,\"StreamTransformerBase\":2,\"_SyncStreamControllerDispatch\":1,\"_AsyncStreamControllerDispatch\":1,\"_AddStreamState\":1,\"_StreamControllerAddStreamState\":1,\"_DelayedEvent\":1,\"_DelayedData\":1,\"_PendingEvents\":1,\"_StreamImplEvents\":1,\"_StreamIterator\":1,\"_ZoneFunction\":1,\"Queue\":1,\"_HashMapKeyIterator\":1,\"_LinkedHashSetIterator\":1,\"IterableBase\":1,\"ListBase\":1,\"MapBase\":2,\"UnmodifiableMapBase\":2,\"_MapBaseValueIterator\":2,\"_UnmodifiableMapMixin\":2,\"MapView\":2,\"_ListQueueIterator\":1,\"_ListBase_Object_ListMixin\":1,\"_UnmodifiableMapView_MapView__UnmodifiableMapMixin\":2,\"ChunkedConversionSink\":1,\"_StringSinkConversionSink\":1,\"Iterator\":1,\"_EventRequest\":1,\"DefaultEquality\":1,\"IterableEquality\":1,\"ListEquality\":1,\"MapEquality\":2,\"_QueueList_Object_ListMixin\":1,\"UnmodifiableSetMixin\":1,\"_UnmodifiableSetView_DelegatingSet_UnmodifiableSetMixin\":1,\"_DelegatingIterableBase\":1,\"DelegatingIterable\":1,\"_MapKeySet__DelegatingIterableBase_UnmodifiableSetMixin\":1,\"RecursiveStatementVisitor\":1}'));\n  var string$ = {\n    x0a_BUG_: \"\\n\\nBUG: This should include a source span!\",\n    x0aYou_m: \"\\nYou may not @extend the same selector from within different media queries.\",\n    x20in_in: \" in interpolation here.\\nIt may end up represented as \",\n    x20is_as: \" is asynchronous.\\nThis is probably caused by a bug in a Sass plugin.\",\n    x20is_av: \" is available from multiple global modules.\",\n    x20is_no: \" is not a valid selector: it must be a string,\\na list of strings, or a list of lists of strings.\",\n    x20must_: \" must not be greater than the number of characters in the file, \",\n    x20was_a: ' was already loaded, so it can\\'t be configured using \"with\".',\n    x20was_n: \" was not declared with !default in the @used module.\",\n    x20was_p: \" was passed both by position and by name.\",\n    x21globa: \"!global isn't allowed for variables in other modules.\",\n    x22x26__ma: '\"&\" may only used at the beginning of a compound selector.',\n    x22x29__If: \"\\\").\\nIf you really want to use the color value here, use '\",\n    x22packa: '\"package:\" URLs aren\\'t supported on this platform.',\n    x24css_a: \"$css and $module may not both be passed at once.\",\n    x24list1: \"$list1, $list2, $separator: auto, $bracketed: auto\",\n    x24selec: \"$selectors: At least one selector must be passed.\",\n    x24separ: '$separator: Must be \"space\", \"comma\", or \"auto\".',\n    x28__isn: \"() isn't in the sass:color module.\\n\\nRecommendation: color.adjust(\",\n    x29__Mor: \")\\n\\nMore info: https://sass-lang.com/documentation/functions/color#\",\n    x2c_whic: ', which will likely produce invalid CSS.\\nAlways quote color names when using them as strings or map keys (for example, \"',\n    x2ex0aRela: \".\\nRelative canonical URLs are deprecated and will eventually be disallowed.\\n\",\n    x2ex20Argu: \". Arguments must all have units or all be unitless.\",\n    x3d_____: \"===== asynchronous gap ===========================\\n\",\n    x40_moz_: \"@-moz-document is deprecated and support will be removed from Sass in a future\\nrelase. For details, see http://bit.ly/moz-document.\\n\",\n    x40conte: \"@content is only allowed within mixin declarations.\",\n    x40elsei: '@elseif is deprecated and will not be supported in future Sass versions.\\nUse \"@else if\" instead.',\n    x40exten: \"@extend may only be used within style rules.\",\n    x40forwa: \"@forward rules must be written before any other rules.\",\n    x40funct: \"@function if($condition, $if-true, $if-false) {\",\n    x40use_r: \"@use rules must be written before any other rules.\",\n    A_list: \"A list with more than one element must have an explicit separator.\",\n    ABCDEF: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    As_of_C: \"As of Dart Sass 2.0.0, !global assignments won't be able to\\ndeclare new variables. Consider adding `\",\n    As_of_S: \"As of Dart Sass 2.0.0, !global assignments won't be able to\\ndeclare new variables. Since this assignment is at the root of the stylesheet,\\nthe !global flag is unnecessary and can safely be removed.\",\n    At_rul: \"At-rules may not be used within nested declarations.\",\n    Broadc: \"Broadcast stream controllers do not support pause callbacks\",\n    Cannoteff: \"Cannot extract a file path from a URI with a fragment component\",\n    Cannotefq: \"Cannot extract a file path from a URI with a query component\",\n    Cannoten: \"Cannot extract a non-Windows file path from a file URI with an authority\",\n    Cannotf: \"Cannot fire new event. Controller is already firing an event\",\n    Could_: 'Could not find an option with short name \"-',\n    Custom: \"Custom functions may not return Dart's null.\",\n    Declarm: \"Declarations may only be used within style rules.\",\n    Declarw: 'Declarations whose names begin with \"--\" must have StringExpression values (was `',\n    Either: \"Either options.data or options.file must be set.\",\n    Entrie: \"Entries may not be removed from MergedMapView.\",\n    Evalua: \"Evaluation handles @include and its content block together.\",\n    Expect: \"Expected variable, mixin, or function name\",\n    Functi: \"Functions may not be declared in control directives.\",\n    HSL_pa: \"HSL parameters may not be passed along with HWB parameters.\",\n    If_par: \"If parsedAsCustomProperty is true, value must contain a SassString (was `\",\n    In_Sas: 'In Sass, \"&&\" means two copies of the parent selector. You probably want to use \"and\" instead.',\n    Indent: \"Indenting at the beginning of the document is illegal.\",\n    Interpn: \"Interpolation isn't allowed in namespaces.\",\n    Interpp: \"Interpolation isn't allowed in plain CSS.\",\n    It_s_n: \"It's not clear which file to import. Found:\\n\",\n    May_on: \"May only contains Strings or Expressions.\",\n    Media_: \"Media rules may not be used within nested declarations.\",\n    Mixinsb: \"Mixins may not be declared in control directives.\",\n    Mixinscf: \"Mixins may not contain function declarations.\",\n    Mixinscm: \"Mixins may not contain mixin declarations.\",\n    Module: \"Module loop: this module is already being loaded.\",\n    Nested: \"Nested declarations aren't allowed in plain CSS.\",\n    New_en: \"New entries may not be added to MergedMapView.\",\n    NoSour: \"NoSourceMapBuffer.buildSourceMap() is not supported.\",\n    Only_oa: \"Only one argument may be passed to the plain-CSS invert() function.\",\n    Only_op: \"Only one positional argument is allowed. All other arguments must be passed by name.\",\n    Other_: \"Other modules' members can't be defined with !global.\",\n    Passinng: \"Passing a number to color.grayscale() is deprecated.\\n\\nRecommendation: \",\n    Passinni: \"Passing a number to color.invert() is deprecated.\\n\\nRecommendation: \",\n    Passinno: \"Passing a number to color.opacity() is deprecated.\\n\\nRecommendation: \",\n    Passins: \"Passing a string to call() is deprecated and will be illegal\\nin Dart Sass 2.0.0. Use call(get-function(\",\n    Placeh: \"Placeholder selectors aren't allowed here.\",\n    Plain_: \"Plain CSS functions don't support keyword arguments.\",\n    Positi: \"Positional arguments must come before keyword arguments.\",\n    Privat: \"Private members can't be accessed from outside their modules.\",\n    RGB_pa: \"RGB parameters may not be passed along with \",\n    Sass_v: \"Sass variables aren't allowed in plain CSS.\",\n    Silent: \"Silent comments aren't allowed in plain CSS.\",\n    Style_: \"Style rules may not be used within nested declarations.\",\n    Suppor: \"Supports rules may not be used within nested declarations.\",\n    The_Ex: \"The Extender and CssStylesheet passed to cloneCssStylesheet() must come from the same compilation.\",\n    The_gi: \"The given LineScannerState was not returned by this LineScanner.\",\n    The_pa: \"The parent selector isn't allowed in plain CSS.\",\n    The_sa: \"The same variable may only be configured once.\",\n    The_ta: 'The target selector was not found.\\nUse \"@extend ',\n    There_: \"There's already a module with namespace \\\"\",\n    This_d: 'This declaration has no argument named \"$',\n    This_f: \"This function isn't allowed in plain CSS.\",\n    This_ma: 'This module and the new module both define a variable named \"$',\n    This_mw: 'This module was already loaded, so it can\\'t be configured using \"with\".',\n    This_s: \"This selector doesn't have any properties and won't be rendered.\",\n    This_v: \"This variable was not declared with !default in the @used module.\",\n    Top_le: 'Top-level selectors may not contain the parent selector \"&\".',\n    Using_: \"Using color.alpha() for a Microsoft filter is deprecated.\\n\\nRecommendation: \",\n    Variab_: \"Variable keyword argument map must have string keys.\\n\",\n    Variabs: \"Variable keyword arguments must be a map (was \",\n    You_ma: \"You may not @extend selectors across media queries.\",\n    You_pr: \"You probably don't mean to use the color value \",\n    x60_inst: \"` instead.\\nSee http://bit.ly/ExtendCompound for details.\\n\",\n    addExt: \"addExtensions() can't be called for a const Extender.\",\n    compou: \"compound selectors may no longer be extended.\\nConsider `@extend \",\n    conten: \"content-exists() may only be called within a mixin.\",\n    must_b: \"must be a UniversalSelector or a TypeSelector\",\n    parsed: 'parsedAsCustomProperty must be false if name doesn\\'t begin with \"--\".',\n    semico: \"semicolons aren't allowed in the indented syntax.\",\n    warn__: \"warn() may only be called within a custom function or importer callback.\"\n  };\n  var type$ = (function rtii() {\n    var findType = H.findType;\n    return {\n      $env_1_1_legacy_String: findType(\"@<String*>\"),\n      Comparable_dynamic: findType(\"Comparable<@>\"),\n      ConstantMapView_Symbol_dynamic: findType(\"ConstantMapView<Symbol0,@>\"),\n      CssValue_legacy_List_legacy_String: findType(\"CssValue<List<String*>*>\"),\n      CssValue_legacy_List_legacy_String_2: findType(\"CssValue0<List<String*>*>\"),\n      CssValue_legacy_String: findType(\"CssValue<String*>\"),\n      CssValue_legacy_String_2: findType(\"CssValue0<String*>\"),\n      CssValue_legacy_Value: findType(\"CssValue<Value*>\"),\n      CssValue_legacy_Value_2: findType(\"CssValue0<Value0*>\"),\n      EfficientLengthIterable_dynamic: findType(\"EfficientLengthIterable<@>\"),\n      Error: findType(\"Error\"),\n      FixedLengthListBuilder_legacy_ModifiableCssNode: findType(\"FixedLengthListBuilder<ModifiableCssNode*>\"),\n      FixedLengthListBuilder_legacy_ModifiableCssNode_2: findType(\"FixedLengthListBuilder0<ModifiableCssNode0*>\"),\n      Function: findType(\"Function\"),\n      Future_dynamic: findType(\"Future<@>\"),\n      Future_void: findType(\"Future<~>\"),\n      JSArray_String: findType(\"JSArray<String>\"),\n      JSArray_dynamic: findType(\"JSArray<@>\"),\n      JSArray_int: findType(\"JSArray<int>\"),\n      JSArray_legacy_Argument: findType(\"JSArray<Argument*>\"),\n      JSArray_legacy_Argument_2: findType(\"JSArray<Argument0*>\"),\n      JSArray_legacy_AstNode: findType(\"JSArray<AstNode*>\"),\n      JSArray_legacy_AstNode_2: findType(\"JSArray<AstNode0*>\"),\n      JSArray_legacy_AsyncBuiltInCallable: findType(\"JSArray<AsyncBuiltInCallable*>\"),\n      JSArray_legacy_AsyncBuiltInCallable_2: findType(\"JSArray<AsyncBuiltInCallable0*>\"),\n      JSArray_legacy_AsyncCallable: findType(\"JSArray<AsyncCallable0*>\"),\n      JSArray_legacy_AsyncCallable_2: findType(\"JSArray<AsyncCallable*>\"),\n      JSArray_legacy_AsyncImporter: findType(\"JSArray<AsyncImporter*>\"),\n      JSArray_legacy_BinaryOperator: findType(\"JSArray<BinaryOperator*>\"),\n      JSArray_legacy_BinaryOperator_2: findType(\"JSArray<BinaryOperator0*>\"),\n      JSArray_legacy_BuiltInCallable: findType(\"JSArray<BuiltInCallable*>\"),\n      JSArray_legacy_BuiltInCallable_2: findType(\"JSArray<BuiltInCallable0*>\"),\n      JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable: findType(\"JSArray<BuiltInModule<AsyncBuiltInCallable*>*>\"),\n      JSArray_legacy_BuiltInModule_legacy_AsyncBuiltInCallable_2: findType(\"JSArray<BuiltInModule0<AsyncBuiltInCallable0*>*>\"),\n      JSArray_legacy_BuiltInModule_legacy_BuiltInCallable: findType(\"JSArray<BuiltInModule<BuiltInCallable*>*>\"),\n      JSArray_legacy_BuiltInModule_legacy_BuiltInCallable_2: findType(\"JSArray<BuiltInModule0<BuiltInCallable0*>*>\"),\n      JSArray_legacy_Callable: findType(\"JSArray<Callable*>\"),\n      JSArray_legacy_Callable_2: findType(\"JSArray<Callable0*>\"),\n      JSArray_legacy_Combinator: findType(\"JSArray<Combinator*>\"),\n      JSArray_legacy_Combinator_2: findType(\"JSArray<Combinator0*>\"),\n      JSArray_legacy_ComplexSelector: findType(\"JSArray<ComplexSelector*>\"),\n      JSArray_legacy_ComplexSelectorComponent: findType(\"JSArray<ComplexSelectorComponent*>\"),\n      JSArray_legacy_ComplexSelectorComponent_2: findType(\"JSArray<ComplexSelectorComponent0*>\"),\n      JSArray_legacy_ComplexSelector_2: findType(\"JSArray<ComplexSelector0*>\"),\n      JSArray_legacy_CompoundSelector: findType(\"JSArray<CompoundSelector*>\"),\n      JSArray_legacy_CompoundSelector_2: findType(\"JSArray<CompoundSelector0*>\"),\n      JSArray_legacy_ConfiguredVariable: findType(\"JSArray<ConfiguredVariable*>\"),\n      JSArray_legacy_ConfiguredVariable_2: findType(\"JSArray<ConfiguredVariable0*>\"),\n      JSArray_legacy_CssMediaQuery: findType(\"JSArray<CssMediaQuery*>\"),\n      JSArray_legacy_CssMediaQuery_2: findType(\"JSArray<CssMediaQuery0*>\"),\n      JSArray_legacy_CssNode: findType(\"JSArray<CssNode*>\"),\n      JSArray_legacy_CssNode_2: findType(\"JSArray<CssNode0*>\"),\n      JSArray_legacy_Entry: findType(\"JSArray<Entry*>\"),\n      JSArray_legacy_Expression: findType(\"JSArray<Expression*>\"),\n      JSArray_legacy_Expression_2: findType(\"JSArray<Expression0*>\"),\n      JSArray_legacy_Extender: findType(\"JSArray<Extender*>\"),\n      JSArray_legacy_Extender_2: findType(\"JSArray<Extender0*>\"),\n      JSArray_legacy_Extension: findType(\"JSArray<Extension*>\"),\n      JSArray_legacy_Extension_2: findType(\"JSArray<Extension0*>\"),\n      JSArray_legacy_ForwardRule: findType(\"JSArray<ForwardRule*>\"),\n      JSArray_legacy_ForwardRule_2: findType(\"JSArray<ForwardRule0*>\"),\n      JSArray_legacy_Frame: findType(\"JSArray<Frame*>\"),\n      JSArray_legacy_IfClause: findType(\"JSArray<IfClause*>\"),\n      JSArray_legacy_IfClause_2: findType(\"JSArray<IfClause0*>\"),\n      JSArray_legacy_Import: findType(\"JSArray<Import*>\"),\n      JSArray_legacy_Import_2: findType(\"JSArray<Import0*>\"),\n      JSArray_legacy_Importer: findType(\"JSArray<Importer*>\"),\n      JSArray_legacy_Iterable_legacy_ComplexSelectorComponent: findType(\"JSArray<Iterable<ComplexSelectorComponent*>*>\"),\n      JSArray_legacy_Iterable_legacy_ComplexSelectorComponent_2: findType(\"JSArray<Iterable<ComplexSelectorComponent0*>*>\"),\n      JSArray_legacy_JSFunction: findType(\"JSArray<JSFunction0*>\"),\n      JSArray_legacy_List_legacy_ComplexSelectorComponent: findType(\"JSArray<List<ComplexSelectorComponent*>*>\"),\n      JSArray_legacy_List_legacy_ComplexSelectorComponent_2: findType(\"JSArray<List<ComplexSelectorComponent0*>*>\"),\n      JSArray_legacy_List_legacy_Extension: findType(\"JSArray<List<Extension*>*>\"),\n      JSArray_legacy_List_legacy_Extension_2: findType(\"JSArray<List<Extension0*>*>\"),\n      JSArray_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent: findType(\"JSArray<List<Iterable<ComplexSelectorComponent*>*>*>\"),\n      JSArray_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent_2: findType(\"JSArray<List<Iterable<ComplexSelectorComponent0*>*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode: findType(\"JSArray<Map<String*,AstNode*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_AstNode_2: findType(\"JSArray<Map<String*,AstNode0*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_AsyncCallable: findType(\"JSArray<Map<String*,AsyncCallable*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_AsyncCallable_2: findType(\"JSArray<Map<String*,AsyncCallable0*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_Callable: findType(\"JSArray<Map<String*,Callable*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_Callable_2: findType(\"JSArray<Map<String*,Callable0*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_Value: findType(\"JSArray<Map<String*,Value*>*>\"),\n      JSArray_legacy_Map_of_legacy_String_and_legacy_Value_2: findType(\"JSArray<Map<String*,Value0*>*>\"),\n      JSArray_legacy_ModifiableCssImport: findType(\"JSArray<ModifiableCssImport*>\"),\n      JSArray_legacy_ModifiableCssImport_2: findType(\"JSArray<ModifiableCssImport0*>\"),\n      JSArray_legacy_ModifiableCssNode: findType(\"JSArray<ModifiableCssNode*>\"),\n      JSArray_legacy_ModifiableCssNode_2: findType(\"JSArray<ModifiableCssNode0*>\"),\n      JSArray_legacy_ModifiableCssParentNode: findType(\"JSArray<ModifiableCssParentNode*>\"),\n      JSArray_legacy_ModifiableCssParentNode_2: findType(\"JSArray<ModifiableCssParentNode0*>\"),\n      JSArray_legacy_Module_legacy_AsyncCallable: findType(\"JSArray<Module<AsyncCallable*>*>\"),\n      JSArray_legacy_Module_legacy_AsyncCallable_2: findType(\"JSArray<Module0<AsyncCallable0*>*>\"),\n      JSArray_legacy_Module_legacy_Callable: findType(\"JSArray<Module<Callable*>*>\"),\n      JSArray_legacy_Module_legacy_Callable_2: findType(\"JSArray<Module0<Callable0*>*>\"),\n      JSArray_legacy_Object: findType(\"JSArray<Object*>\"),\n      JSArray_legacy_PseudoSelector: findType(\"JSArray<PseudoSelector*>\"),\n      JSArray_legacy_PseudoSelector_2: findType(\"JSArray<PseudoSelector0*>\"),\n      JSArray_legacy_SassList: findType(\"JSArray<SassList*>\"),\n      JSArray_legacy_SassList_2: findType(\"JSArray<SassList0*>\"),\n      JSArray_legacy_SimpleSelector: findType(\"JSArray<SimpleSelector*>\"),\n      JSArray_legacy_SimpleSelector_2: findType(\"JSArray<SimpleSelector0*>\"),\n      JSArray_legacy_Statement: findType(\"JSArray<Statement*>\"),\n      JSArray_legacy_Statement_2: findType(\"JSArray<Statement0*>\"),\n      JSArray_legacy_String: findType(\"JSArray<String*>\"),\n      JSArray_legacy_StylesheetNode: findType(\"JSArray<StylesheetNode*>\"),\n      JSArray_legacy_TargetEntry: findType(\"JSArray<TargetEntry*>\"),\n      JSArray_legacy_TargetLineEntry: findType(\"JSArray<TargetLineEntry*>\"),\n      JSArray_legacy_Trace: findType(\"JSArray<Trace*>\"),\n      JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value: findType(\"JSArray<Tuple2<ArgumentDeclaration*,Value*(List<Value*>*)*>*>\"),\n      JSArray_legacy_Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2: findType(\"JSArray<Tuple2<ArgumentDeclaration0*,Value0*(List<Value0*>*)*>*>\"),\n      JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression: findType(\"JSArray<Tuple2<Expression*,Expression*>*>\"),\n      JSArray_legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2: findType(\"JSArray<Tuple2<Expression0*,Expression0*>*>\"),\n      JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode: findType(\"JSArray<Tuple2<String*,AstNode*>*>\"),\n      JSArray_legacy_Tuple2_of_legacy_String_and_legacy_AstNode_2: findType(\"JSArray<Tuple2<String*,AstNode0*>*>\"),\n      JSArray_legacy_Uri: findType(\"JSArray<Uri*>\"),\n      JSArray_legacy_UseRule: findType(\"JSArray<UseRule*>\"),\n      JSArray_legacy_UseRule_2: findType(\"JSArray<UseRule0*>\"),\n      JSArray_legacy_Value: findType(\"JSArray<Value*>\"),\n      JSArray_legacy_Value_2: findType(\"JSArray<Value0*>\"),\n      JSArray_legacy__Highlight: findType(\"JSArray<_Highlight*>\"),\n      JSArray_legacy__Line: findType(\"JSArray<_Line*>\"),\n      JSArray_legacy_bool: findType(\"JSArray<bool*>\"),\n      JSArray_legacy_int: findType(\"JSArray<int*>\"),\n      JSNull: findType(\"JSNull\"),\n      JavaScriptFunction: findType(\"JavaScriptFunction\"),\n      JavaScriptIndexingBehavior_dynamic: findType(\"JavaScriptIndexingBehavior<@>\"),\n      JsLinkedHashMap_Symbol_dynamic: findType(\"JsLinkedHashMap<Symbol0,@>\"),\n      LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue: findType(\"LimitedMapView<String*,ConfiguredValue*>\"),\n      LimitedMapView_of_legacy_String_and_legacy_ConfiguredValue_2: findType(\"LimitedMapView0<String*,ConfiguredValue0*>\"),\n      List_dynamic: findType(\"List<@>\"),\n      MapKeySet_legacy_Object: findType(\"MapKeySet<Object*>\"),\n      MapKeySet_legacy_SimpleSelector: findType(\"MapKeySet<SimpleSelector*>\"),\n      MapKeySet_legacy_SimpleSelector_2: findType(\"MapKeySet<SimpleSelector0*>\"),\n      MapKeySet_legacy_String: findType(\"MapKeySet<String*>\"),\n      Map_dynamic_dynamic: findType(\"Map<@,@>\"),\n      MappedIterable_of_String_and_legacy_Frame: findType(\"MappedIterable<String,Frame*>\"),\n      MappedListIterable_String_dynamic: findType(\"MappedListIterable<String,@>\"),\n      MappedListIterable_of_String_and_legacy_String: findType(\"MappedListIterable<String,String*>\"),\n      MappedListIterable_of_String_and_legacy_Trace: findType(\"MappedListIterable<String,Trace*>\"),\n      MappedListIterable_of_legacy_Frame_and_legacy_Frame: findType(\"MappedListIterable<Frame*,Frame*>\"),\n      MappedListIterable_of_legacy_String_and_legacy_Future_void: findType(\"MappedListIterable<String*,Future<~>*>\"),\n      ModifiableCssValue_legacy_SelectorList: findType(\"ModifiableCssValue<SelectorList*>\"),\n      ModifiableCssValue_legacy_SelectorList_2: findType(\"ModifiableCssValue0<SelectorList0*>\"),\n      NativeTypedArrayOfDouble: findType(\"NativeTypedArrayOfDouble\"),\n      NativeTypedArrayOfInt: findType(\"NativeTypedArrayOfInt\"),\n      NativeUint8List: findType(\"NativeUint8List\"),\n      Null: findType(\"Null\"),\n      Object: findType(\"Object\"),\n      PathMap_legacy_ChangeType: findType(\"PathMap<ChangeType*>\"),\n      PathMap_legacy_String: findType(\"PathMap<String*>\"),\n      ReversedListIterable_legacy_Combinator: findType(\"ReversedListIterable<Combinator*>\"),\n      ReversedListIterable_legacy_Combinator_2: findType(\"ReversedListIterable<Combinator0*>\"),\n      ReversedListIterable_legacy_Frame: findType(\"ReversedListIterable<Frame*>\"),\n      StackTrace: findType(\"StackTrace\"),\n      StreamCompleter_legacy_WatchEvent: findType(\"StreamCompleter<WatchEvent*>\"),\n      StreamGroup_legacy_WatchEvent: findType(\"StreamGroup<WatchEvent*>\"),\n      StreamQueue_legacy_String: findType(\"StreamQueue<String*>\"),\n      String: findType(\"String\"),\n      StringBuffer: findType(\"StringBuffer\"),\n      StringConversionSink: findType(\"StringConversionSink\"),\n      Timer: findType(\"Timer\"),\n      Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value: findType(\"Tuple2<ArgumentDeclaration*,Value*/*(List<Value*>*)*>\"),\n      Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_FutureOr_legacy_Value_Function_legacy_List_legacy_Value_2: findType(\"Tuple2<ArgumentDeclaration0*,Value0*/*(List<Value0*>*)*>\"),\n      Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value: findType(\"Tuple2<ArgumentDeclaration*,Value*(List<Value*>*)*>\"),\n      Tuple2_of_legacy_ArgumentDeclaration_and_legacy_legacy_Value_Function_legacy_List_legacy_Value_2: findType(\"Tuple2<ArgumentDeclaration0*,Value0*(List<Value0*>*)*>\"),\n      Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet: findType(\"Tuple2<AsyncImporter*,Stylesheet*>\"),\n      Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2: findType(\"Tuple2<AsyncImporter0*,Stylesheet0*>\"),\n      Tuple2_of_legacy_Expression_and_legacy_Expression: findType(\"Tuple2<Expression*,Expression*>\"),\n      Tuple2_of_legacy_Expression_and_legacy_Expression_2: findType(\"Tuple2<Expression0*,Expression0*>\"),\n      Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList: findType(\"Tuple2<Extender*,Map<CssValue<SelectorList*>*,ModifiableCssValue<SelectorList*>*>*>\"),\n      Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList_2: findType(\"Tuple2<Extender0*,Map<CssValue0<SelectorList0*>*,ModifiableCssValue0<SelectorList0*>*>*>\"),\n      Tuple2_of_legacy_Importer_and_legacy_Stylesheet: findType(\"Tuple2<Importer*,Stylesheet*>\"),\n      Tuple2_of_legacy_Importer_and_legacy_Stylesheet_2: findType(\"Tuple2<Importer0*,Stylesheet0*>\"),\n      Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression: findType(\"Tuple2<List<Expression*>*,Map<String*,Expression*>*>\"),\n      Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2: findType(\"Tuple2<List<Expression0*>*,Map<String*,Expression0*>*>\"),\n      Tuple2_of_legacy_List_legacy_Uri_and_legacy_List_legacy_Uri: findType(\"Tuple2<List<Uri*>*,List<Uri*>*>\"),\n      Tuple2_of_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode_and_legacy_Map_of_legacy_Uri_and_legacy_StylesheetNode: findType(\"Tuple2<Map<Uri*,StylesheetNode*>*,Map<Uri*,StylesheetNode*>*>\"),\n      Tuple2_of_legacy_ModifiableCssStylesheet_and_legacy_Extender: findType(\"Tuple2<ModifiableCssStylesheet*,Extender*>\"),\n      Tuple2_of_legacy_ModifiableCssStylesheet_and_legacy_Extender_2: findType(\"Tuple2<ModifiableCssStylesheet0*,Extender0*>\"),\n      Tuple2_of_legacy_SassNumber_and_legacy_SassNumber: findType(\"Tuple2<SassNumber*,SassNumber*>\"),\n      Tuple2_of_legacy_SassNumber_and_legacy_SassNumber_2: findType(\"Tuple2<SassNumber0*,SassNumber0*>\"),\n      Tuple2_of_legacy_Set_legacy_String_and_legacy_Set_legacy_String: findType(\"Tuple2<Set<String*>*,Set<String*>*>\"),\n      Tuple2_of_legacy_String_and_legacy_ArgumentDeclaration: findType(\"Tuple2<String*,ArgumentDeclaration0*>\"),\n      Tuple2_of_legacy_String_and_legacy_AstNode: findType(\"Tuple2<String*,AstNode*>\"),\n      Tuple2_of_legacy_String_and_legacy_AstNode_2: findType(\"Tuple2<String*,AstNode0*>\"),\n      Tuple2_of_legacy_String_and_legacy_String: findType(\"Tuple2<String*,String*>\"),\n      Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation: findType(\"Tuple2<SupportsCondition*,Interpolation*>\"),\n      Tuple2_of_legacy_SupportsCondition_and_legacy_Interpolation_2: findType(\"Tuple2<SupportsCondition0*,Interpolation0*>\"),\n      Tuple2_of_legacy_Uri_and_legacy_bool: findType(\"Tuple2<Uri*,bool*>\"),\n      Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri: findType(\"Tuple3<AsyncImporter*,Uri*,Uri*>\"),\n      Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2: findType(\"Tuple3<AsyncImporter0*,Uri*,Uri*>\"),\n      Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri: findType(\"Tuple3<Importer*,Uri*,Uri*>\"),\n      Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2: findType(\"Tuple3<Importer0*,Uri*,Uri*>\"),\n      Uint8List: findType(\"Uint8List\"),\n      UnknownJavaScriptObject: findType(\"UnknownJavaScriptObject\"),\n      UnmodifiableListView_legacy_CssNode: findType(\"UnmodifiableListView<CssNode*>\"),\n      UnmodifiableListView_legacy_CssNode_2: findType(\"UnmodifiableListView<CssNode0*>\"),\n      UnmodifiableListView_legacy_ForwardRule: findType(\"UnmodifiableListView<ForwardRule*>\"),\n      UnmodifiableListView_legacy_ForwardRule_2: findType(\"UnmodifiableListView<ForwardRule0*>\"),\n      UnmodifiableListView_legacy_ModifiableCssNode: findType(\"UnmodifiableListView<ModifiableCssNode*>\"),\n      UnmodifiableListView_legacy_ModifiableCssNode_2: findType(\"UnmodifiableListView<ModifiableCssNode0*>\"),\n      UnmodifiableListView_legacy_String: findType(\"UnmodifiableListView<String*>\"),\n      UnmodifiableListView_legacy_UseRule: findType(\"UnmodifiableListView<UseRule*>\"),\n      UnmodifiableListView_legacy_UseRule_2: findType(\"UnmodifiableListView<UseRule0*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_ArgParser: findType(\"UnmodifiableMapView<String*,ArgParser*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue: findType(\"UnmodifiableMapView<String*,ConfiguredValue*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_ConfiguredValue_2: findType(\"UnmodifiableMapView<String*,ConfiguredValue0*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_Option: findType(\"UnmodifiableMapView<String*,Option*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_SourceFile: findType(\"UnmodifiableMapView<String*,SourceFile*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_String: findType(\"UnmodifiableMapView<String*,String*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_Value: findType(\"UnmodifiableMapView<String*,Value*>\"),\n      UnmodifiableMapView_of_legacy_String_and_legacy_Value_2: findType(\"UnmodifiableMapView<String*,Value0*>\"),\n      UnmodifiableMapView_of_legacy_Uri_and_legacy_StylesheetNode: findType(\"UnmodifiableMapView<Uri*,StylesheetNode*>\"),\n      UnmodifiableSetView_legacy_String: findType(\"UnmodifiableSetView<String*>\"),\n      UnmodifiableSetView_legacy_StylesheetNode: findType(\"UnmodifiableSetView<StylesheetNode*>\"),\n      UnprefixedMapView_legacy_ConfiguredValue: findType(\"UnprefixedMapView<ConfiguredValue*>\"),\n      UnprefixedMapView_legacy_ConfiguredValue_2: findType(\"UnprefixedMapView0<ConfiguredValue0*>\"),\n      Uri: findType(\"Uri\"),\n      UserDefinedCallable_legacy_AsyncEnvironment: findType(\"UserDefinedCallable<AsyncEnvironment*>\"),\n      UserDefinedCallable_legacy_AsyncEnvironment_2: findType(\"UserDefinedCallable0<AsyncEnvironment0*>\"),\n      UserDefinedCallable_legacy_Environment: findType(\"UserDefinedCallable<Environment*>\"),\n      UserDefinedCallable_legacy_Environment_2: findType(\"UserDefinedCallable0<Environment0*>\"),\n      WhereIterable_String: findType(\"WhereIterable<String>\"),\n      WhereIterable_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent: findType(\"WhereIterable<List<Iterable<ComplexSelectorComponent*>*>*>\"),\n      WhereIterable_legacy_List_legacy_Iterable_legacy_ComplexSelectorComponent_2: findType(\"WhereIterable<List<Iterable<ComplexSelectorComponent0*>*>*>\"),\n      WhereIterable_legacy_String: findType(\"WhereIterable<String*>\"),\n      WhereTypeIterable_legacy_PseudoSelector: findType(\"WhereTypeIterable<PseudoSelector*>\"),\n      WhereTypeIterable_legacy_PseudoSelector_2: findType(\"WhereTypeIterable<PseudoSelector0*>\"),\n      _AsyncCompleter_legacy_Object: findType(\"_AsyncCompleter<Object*>\"),\n      _AsyncCompleter_legacy_Stream_legacy_WatchEvent: findType(\"_AsyncCompleter<Stream<WatchEvent*>*>\"),\n      _AsyncCompleter_legacy_String: findType(\"_AsyncCompleter<String*>\"),\n      _CompleterStream_legacy_WatchEvent: findType(\"_CompleterStream<WatchEvent*>\"),\n      _Future_bool: findType(\"_Future<bool>\"),\n      _Future_dynamic: findType(\"_Future<@>\"),\n      _Future_int: findType(\"_Future<int>\"),\n      _Future_legacy_Object: findType(\"_Future<Object*>\"),\n      _Future_legacy_Stream_legacy_WatchEvent: findType(\"_Future<Stream<WatchEvent*>*>\"),\n      _Future_legacy_String: findType(\"_Future<String*>\"),\n      _Future_void: findType(\"_Future<~>\"),\n      _LinkedIdentityHashSet_legacy_ComplexSelector: findType(\"_LinkedIdentityHashSet<ComplexSelector*>\"),\n      _LinkedIdentityHashSet_legacy_ComplexSelector_2: findType(\"_LinkedIdentityHashSet<ComplexSelector0*>\"),\n      _LinkedIdentityHashSet_legacy_Extension: findType(\"_LinkedIdentityHashSet<Extension*>\"),\n      _LinkedIdentityHashSet_legacy_Extension_2: findType(\"_LinkedIdentityHashSet<Extension0*>\"),\n      bool: findType(\"bool\"),\n      double: findType(\"double\"),\n      dynamic: findType(\"@\"),\n      dynamic_Function_Object: findType(\"@(Object)\"),\n      dynamic_Function_Object_StackTrace: findType(\"@(Object,StackTrace)\"),\n      int: findType(\"int\"),\n      legacy_ArgParser: findType(\"ArgParser*\"),\n      legacy_Argument: findType(\"Argument*\"),\n      legacy_ArgumentDeclaration: findType(\"ArgumentDeclaration*\"),\n      legacy_ArgumentDeclaration_2: findType(\"ArgumentDeclaration0*\"),\n      legacy_Argument_2: findType(\"Argument0*\"),\n      legacy_AstNode: findType(\"AstNode*\"),\n      legacy_AstNode_2: findType(\"AstNode0*\"),\n      legacy_AsyncBuiltInCallable: findType(\"AsyncBuiltInCallable*\"),\n      legacy_AsyncBuiltInCallable_2: findType(\"AsyncBuiltInCallable0*\"),\n      legacy_AsyncCallable: findType(\"AsyncCallable*\"),\n      legacy_AsyncCallable_2: findType(\"AsyncCallable0*\"),\n      legacy_BuiltInCallable: findType(\"BuiltInCallable*\"),\n      legacy_BuiltInCallable_2: findType(\"BuiltInCallable0*\"),\n      legacy_Callable: findType(\"Callable*\"),\n      legacy_Callable_2: findType(\"Callable0*\"),\n      legacy_ChangeType: findType(\"ChangeType*\"),\n      legacy_Combinator: findType(\"Combinator*\"),\n      legacy_Combinator_2: findType(\"Combinator0*\"),\n      legacy_Comparable_dynamic: findType(\"Comparable<@>*\"),\n      legacy_CompileResult: findType(\"CompileResult*\"),\n      legacy_CompileResult_2: findType(\"CompileResult0*\"),\n      legacy_ComplexSelector: findType(\"ComplexSelector*\"),\n      legacy_ComplexSelectorComponent: findType(\"ComplexSelectorComponent*\"),\n      legacy_ComplexSelectorComponent_2: findType(\"ComplexSelectorComponent0*\"),\n      legacy_ComplexSelector_2: findType(\"ComplexSelector0*\"),\n      legacy_CompoundSelector: findType(\"CompoundSelector*\"),\n      legacy_CompoundSelector_2: findType(\"CompoundSelector0*\"),\n      legacy_Configuration: findType(\"Configuration*\"),\n      legacy_Configuration_2: findType(\"Configuration0*\"),\n      legacy_ConfiguredValue: findType(\"ConfiguredValue*\"),\n      legacy_ConfiguredValue_2: findType(\"ConfiguredValue0*\"),\n      legacy_ConfiguredVariable: findType(\"ConfiguredVariable*\"),\n      legacy_ConfiguredVariable_2: findType(\"ConfiguredVariable0*\"),\n      legacy_CssAtRule: findType(\"CssAtRule*\"),\n      legacy_CssAtRule_2: findType(\"CssAtRule0*\"),\n      legacy_CssComment: findType(\"CssComment*\"),\n      legacy_CssComment_2: findType(\"CssComment0*\"),\n      legacy_CssImport: findType(\"CssImport*\"),\n      legacy_CssImport_2: findType(\"CssImport0*\"),\n      legacy_CssMediaQuery: findType(\"CssMediaQuery*\"),\n      legacy_CssMediaQuery_2: findType(\"CssMediaQuery0*\"),\n      legacy_CssMediaRule: findType(\"CssMediaRule*\"),\n      legacy_CssMediaRule_2: findType(\"CssMediaRule0*\"),\n      legacy_CssParentNode: findType(\"CssParentNode*\"),\n      legacy_CssParentNode_2: findType(\"CssParentNode0*\"),\n      legacy_CssStyleRule: findType(\"CssStyleRule*\"),\n      legacy_CssStyleRule_2: findType(\"CssStyleRule0*\"),\n      legacy_CssStylesheet: findType(\"CssStylesheet*\"),\n      legacy_CssStylesheet_2: findType(\"CssStylesheet0*\"),\n      legacy_CssSupportsRule: findType(\"CssSupportsRule*\"),\n      legacy_CssSupportsRule_2: findType(\"CssSupportsRule0*\"),\n      legacy_CssValue_legacy_SelectorList: findType(\"CssValue<SelectorList*>*\"),\n      legacy_CssValue_legacy_SelectorList_2: findType(\"CssValue0<SelectorList0*>*\"),\n      legacy_CssValue_legacy_String: findType(\"CssValue<String*>*\"),\n      legacy_CssValue_legacy_String_2: findType(\"CssValue0<String*>*\"),\n      legacy_DateTime: findType(\"DateTime*\"),\n      legacy_EvaluateResult: findType(\"EvaluateResult*\"),\n      legacy_EvaluateResult_2: findType(\"EvaluateResult0*\"),\n      legacy_Exception: findType(\"Exception*\"),\n      legacy_Expression: findType(\"Expression*\"),\n      legacy_Expression_2: findType(\"Expression0*\"),\n      legacy_Extension: findType(\"Extension*\"),\n      legacy_Extension_2: findType(\"Extension0*\"),\n      legacy_FileLocation: findType(\"FileLocation*\"),\n      legacy_FileSpan: findType(\"FileSpan*\"),\n      legacy_FormatException: findType(\"FormatException*\"),\n      legacy_Frame: findType(\"Frame*\"),\n      legacy_Function: findType(\"Function*\"),\n      legacy_FutureOr_legacy_EvaluateResult: findType(\"EvaluateResult*/*\"),\n      legacy_FutureOr_legacy_EvaluateResult_2: findType(\"EvaluateResult0*/*\"),\n      legacy_Future_dynamic: findType(\"Future<@>*\"),\n      legacy_Future_void: findType(\"Future<~>*\"),\n      legacy_IfClause: findType(\"IfClause*\"),\n      legacy_IfClause_2: findType(\"IfClause0*\"),\n      legacy_Import: findType(\"Import*\"),\n      legacy_Import_2: findType(\"Import0*\"),\n      legacy_ImporterResult: findType(\"ImporterResult0*\"),\n      legacy_ImporterResult_2: findType(\"ImporterResult*\"),\n      legacy_Interpolation: findType(\"Interpolation*\"),\n      legacy_InterpolationBuffer: findType(\"InterpolationBuffer*\"),\n      legacy_InterpolationBuffer_2: findType(\"InterpolationBuffer0*\"),\n      legacy_Interpolation_2: findType(\"Interpolation0*\"),\n      legacy_Iterable_legacy_ComplexSelectorComponent: findType(\"Iterable<ComplexSelectorComponent*>*\"),\n      legacy_Iterable_legacy_ComplexSelectorComponent_2: findType(\"Iterable<ComplexSelectorComponent0*>*\"),\n      legacy_JSFunction: findType(\"JSFunction0*\"),\n      legacy_JsError: findType(\"JsError*\"),\n      legacy_JsSystemError: findType(\"JsSystemError*\"),\n      legacy_List_dynamic: findType(\"List<@>*\"),\n      legacy_List_legacy_ComplexSelector: findType(\"List<ComplexSelector*>*\"),\n      legacy_List_legacy_ComplexSelectorComponent: findType(\"List<ComplexSelectorComponent*>*\"),\n      legacy_List_legacy_ComplexSelectorComponent_2: findType(\"List<ComplexSelectorComponent0*>*\"),\n      legacy_List_legacy_ComplexSelector_2: findType(\"List<ComplexSelector0*>*\"),\n      legacy_List_legacy_CssMediaQuery: findType(\"List<CssMediaQuery*>*\"),\n      legacy_List_legacy_CssMediaQuery_2: findType(\"List<CssMediaQuery0*>*\"),\n      legacy_List_legacy_Extender: findType(\"List<Extender*>*\"),\n      legacy_List_legacy_Extender_2: findType(\"List<Extender0*>*\"),\n      legacy_List_legacy_Extension: findType(\"List<Extension*>*\"),\n      legacy_List_legacy_Extension_2: findType(\"List<Extension0*>*\"),\n      legacy_List_legacy_List_legacy_ComplexSelectorComponent: findType(\"List<List<ComplexSelectorComponent*>*>*\"),\n      legacy_List_legacy_List_legacy_ComplexSelectorComponent_2: findType(\"List<List<ComplexSelectorComponent0*>*>*\"),\n      legacy_List_legacy_Module_legacy_AsyncCallable: findType(\"List<Module<AsyncCallable*>*>*\"),\n      legacy_List_legacy_Module_legacy_AsyncCallable_2: findType(\"List<Module0<AsyncCallable0*>*>*\"),\n      legacy_List_legacy_Module_legacy_Callable: findType(\"List<Module<Callable*>*>*\"),\n      legacy_List_legacy_Module_legacy_Callable_2: findType(\"List<Module0<Callable0*>*>*\"),\n      legacy_List_legacy_Object: findType(\"List<Object*>*\"),\n      legacy_List_legacy_String: findType(\"List<String*>*\"),\n      legacy_List_legacy_Value: findType(\"List<Value*>*\"),\n      legacy_List_legacy_Value_2: findType(\"List<Value0*>*\"),\n      legacy_List_legacy_WatchEvent: findType(\"List<WatchEvent*>*\"),\n      legacy_List_legacy_int: findType(\"List<int*>*\"),\n      legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension: findType(\"Map<ComplexSelector*,Extension*>*\"),\n      legacy_Map_of_legacy_ComplexSelector_and_legacy_Extension_2: findType(\"Map<ComplexSelector0*,Extension0*>*\"),\n      legacy_MediaQuerySuccessfulMergeResult: findType(\"MediaQuerySuccessfulMergeResult*\"),\n      legacy_MediaQuerySuccessfulMergeResult_2: findType(\"MediaQuerySuccessfulMergeResult0*\"),\n      legacy_MixinRule: findType(\"MixinRule*\"),\n      legacy_MixinRule_2: findType(\"MixinRule0*\"),\n      legacy_ModifiableCssAtRule: findType(\"ModifiableCssAtRule*\"),\n      legacy_ModifiableCssAtRule_2: findType(\"ModifiableCssAtRule0*\"),\n      legacy_ModifiableCssKeyframeBlock: findType(\"ModifiableCssKeyframeBlock*\"),\n      legacy_ModifiableCssKeyframeBlock_2: findType(\"ModifiableCssKeyframeBlock0*\"),\n      legacy_ModifiableCssMediaRule: findType(\"ModifiableCssMediaRule*\"),\n      legacy_ModifiableCssMediaRule_2: findType(\"ModifiableCssMediaRule0*\"),\n      legacy_ModifiableCssParentNode: findType(\"ModifiableCssParentNode*\"),\n      legacy_ModifiableCssParentNode_2: findType(\"ModifiableCssParentNode0*\"),\n      legacy_ModifiableCssStyleRule: findType(\"ModifiableCssStyleRule*\"),\n      legacy_ModifiableCssStyleRule_2: findType(\"ModifiableCssStyleRule0*\"),\n      legacy_ModifiableCssSupportsRule: findType(\"ModifiableCssSupportsRule*\"),\n      legacy_ModifiableCssSupportsRule_2: findType(\"ModifiableCssSupportsRule0*\"),\n      legacy_ModifiableCssValue_legacy_SelectorList: findType(\"ModifiableCssValue<SelectorList*>*\"),\n      legacy_ModifiableCssValue_legacy_SelectorList_2: findType(\"ModifiableCssValue0<SelectorList0*>*\"),\n      legacy_Module_legacy_AsyncCallable: findType(\"Module<AsyncCallable*>*\"),\n      legacy_Module_legacy_AsyncCallable_2: findType(\"Module0<AsyncCallable0*>*\"),\n      legacy_Module_legacy_Callable: findType(\"Module<Callable*>*\"),\n      legacy_Module_legacy_Callable_2: findType(\"Module0<Callable0*>*\"),\n      legacy_Never: findType(\"0&*\"),\n      legacy_NodeImporterResult: findType(\"NodeImporterResult0*\"),\n      legacy_Object: findType(\"Object*\"),\n      legacy_Option: findType(\"Option*\"),\n      legacy_ParentSelector: findType(\"ParentSelector*\"),\n      legacy_ParentSelector_2: findType(\"ParentSelector0*\"),\n      legacy_PseudoSelector: findType(\"PseudoSelector*\"),\n      legacy_PseudoSelector_2: findType(\"PseudoSelector0*\"),\n      legacy_RangeError: findType(\"RangeError*\"),\n      legacy_RenderResult: findType(\"RenderResult*\"),\n      legacy_Result_legacy_String: findType(\"Result<String*>*\"),\n      legacy_SassArgumentList: findType(\"SassArgumentList*\"),\n      legacy_SassArgumentList_2: findType(\"SassArgumentList0*\"),\n      legacy_SassBoolean: findType(\"SassBoolean*\"),\n      legacy_SassBoolean_2: findType(\"SassBoolean0*\"),\n      legacy_SassColor: findType(\"SassColor*\"),\n      legacy_SassColor_2: findType(\"SassColor0*\"),\n      legacy_SassList: findType(\"SassList*\"),\n      legacy_SassList_2: findType(\"SassList0*\"),\n      legacy_SassMap: findType(\"SassMap*\"),\n      legacy_SassMap_2: findType(\"SassMap0*\"),\n      legacy_SassNull: findType(\"SassNull*\"),\n      legacy_SassNull_2: findType(\"SassNull0*\"),\n      legacy_SassNumber: findType(\"SassNumber*\"),\n      legacy_SassNumber_2: findType(\"SassNumber0*\"),\n      legacy_SassRuntimeException: findType(\"SassRuntimeException*\"),\n      legacy_SassRuntimeException_2: findType(\"SassRuntimeException0*\"),\n      legacy_SassString: findType(\"SassString*\"),\n      legacy_SassString_2: findType(\"SassString0*\"),\n      legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList: findType(\"Set<ModifiableCssValue<SelectorList*>*>*\"),\n      legacy_Set_legacy_ModifiableCssValue_legacy_SelectorList_2: findType(\"Set<ModifiableCssValue0<SelectorList0*>*>*\"),\n      legacy_SimpleSelector: findType(\"SimpleSelector*\"),\n      legacy_SimpleSelector_2: findType(\"SimpleSelector0*\"),\n      legacy_SourceFile: findType(\"SourceFile*\"),\n      legacy_SourceLocation: findType(\"SourceLocation*\"),\n      legacy_SourceSpan: findType(\"SourceSpan*\"),\n      legacy_SourceSpanFormatException: findType(\"SourceSpanFormatException*\"),\n      legacy_SourceSpanWithContext: findType(\"SourceSpanWithContext*\"),\n      legacy_Statement: findType(\"Statement*\"),\n      legacy_Statement_2: findType(\"Statement0*\"),\n      legacy_StaticImport: findType(\"StaticImport*\"),\n      legacy_StaticImport_2: findType(\"StaticImport0*\"),\n      legacy_StreamSubscription_legacy_WatchEvent: findType(\"StreamSubscription<WatchEvent*>*\"),\n      legacy_Stream_legacy_WatchEvent: findType(\"Stream<WatchEvent*>*\"),\n      legacy_String: findType(\"String*\"),\n      legacy_Stylesheet: findType(\"Stylesheet0*\"),\n      legacy_StylesheetNode: findType(\"StylesheetNode*\"),\n      legacy_Stylesheet_2: findType(\"Stylesheet*\"),\n      legacy_Trace: findType(\"Trace*\"),\n      legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet: findType(\"Tuple2<AsyncImporter*,Stylesheet*>*\"),\n      legacy_Tuple2_of_legacy_AsyncImporter_and_legacy_Stylesheet_2: findType(\"Tuple2<AsyncImporter0*,Stylesheet0*>*\"),\n      legacy_Tuple2_of_legacy_Expression_and_legacy_Expression: findType(\"Tuple2<Expression*,Expression*>*\"),\n      legacy_Tuple2_of_legacy_Expression_and_legacy_Expression_2: findType(\"Tuple2<Expression0*,Expression0*>*\"),\n      legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression: findType(\"Tuple2<List<Expression*>*,Map<String*,Expression*>*>*\"),\n      legacy_Tuple2_of_legacy_List_legacy_Expression_and_legacy_Map_of_legacy_String_and_legacy_Expression_2: findType(\"Tuple2<List<Expression0*>*,Map<String*,Expression0*>*>*\"),\n      legacy_Tuple2_of_legacy_String_and_legacy_String: findType(\"Tuple2<String*,String*>*\"),\n      legacy_Tuple2_of_legacy_Uri_and_legacy_bool: findType(\"Tuple2<Uri*,bool*>*\"),\n      legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri: findType(\"Tuple3<AsyncImporter0*,Uri*,Uri*>*\"),\n      legacy_Tuple3_of_legacy_AsyncImporter_and_legacy_Uri_and_legacy_Uri_2: findType(\"Tuple3<AsyncImporter*,Uri*,Uri*>*\"),\n      legacy_Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri: findType(\"Tuple3<Importer*,Uri*,Uri*>*\"),\n      legacy_Tuple3_of_legacy_Importer_and_legacy_Uri_and_legacy_Uri_2: findType(\"Tuple3<Importer0*,Uri*,Uri*>*\"),\n      legacy_Uri: findType(\"Uri*\"),\n      legacy_UseRule: findType(\"UseRule*\"),\n      legacy_UserDefinedCallable_legacy_AsyncEnvironment: findType(\"UserDefinedCallable<AsyncEnvironment*>*\"),\n      legacy_UserDefinedCallable_legacy_AsyncEnvironment_2: findType(\"UserDefinedCallable0<AsyncEnvironment0*>*\"),\n      legacy_UserDefinedCallable_legacy_Environment: findType(\"UserDefinedCallable<Environment*>*\"),\n      legacy_UserDefinedCallable_legacy_Environment_2: findType(\"UserDefinedCallable0<Environment0*>*\"),\n      legacy_Value: findType(\"Value*\"),\n      legacy_Value_2: findType(\"Value0*\"),\n      legacy_VariableDeclaration: findType(\"VariableDeclaration*\"),\n      legacy_VariableDeclaration_2: findType(\"VariableDeclaration0*\"),\n      legacy_WatchEvent: findType(\"WatchEvent*\"),\n      legacy__ArgumentResults: findType(\"_ArgumentResults0*\"),\n      legacy__ArgumentResults_2: findType(\"_ArgumentResults2*\"),\n      legacy__EventRequest_dynamic: findType(\"_EventRequest<@>*\"),\n      legacy__Highlight: findType(\"_Highlight*\"),\n      legacy__MapEntry: findType(\"_MapEntry*\"),\n      legacy_bool: findType(\"bool*\"),\n      legacy_int: findType(\"int*\"),\n      legacy_legacy_Object_Function: findType(\"Object*()*\"),\n      legacy_legacy_Value_Function_legacy_List_legacy_Value: findType(\"Value*(List<Value*>*)*\"),\n      legacy_legacy_Value_Function_legacy_List_legacy_Value_2: findType(\"Value0*(List<Value0*>*)*\"),\n      nullable_Future_Null: findType(\"Future<Null>?\"),\n      nullable_Object: findType(\"Object?\"),\n      num: findType(\"num\"),\n      void: findType(\"~\"),\n      void_Function_Object: findType(\"~(Object)\"),\n      void_Function_Object_StackTrace: findType(\"~(Object,StackTrace)\")\n    };\n  })();\n  (function constants() {\n    var makeConstList = hunkHelpers.makeConstList;\n    C.Interceptor_methods = J.Interceptor.prototype;\n    C.JSArray_methods = J.JSArray.prototype;\n    C.JSBool_methods = J.JSBool.prototype;\n    C.JSDouble_methods = J.JSDouble.prototype;\n    C.JSInt_methods = J.JSInt.prototype;\n    C.JSNull_methods = J.JSNull.prototype;\n    C.JSNumber_methods = J.JSNumber.prototype;\n    C.JSString_methods = J.JSString.prototype;\n    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;\n    C.NativeUint32List_methods = H.NativeUint32List.prototype;\n    C.NativeUint8List_methods = H.NativeUint8List.prototype;\n    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;\n    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;\n    C.AsciiEncoder_127 = new P.AsciiEncoder(127);\n    C.C_EmptyUnmodifiableSet1 = new O.EmptyUnmodifiableSet(H.findType(\"EmptyUnmodifiableSet<String*>\"));\n    C.AtRootQuery_UsS = new V.AtRootQuery(false, C.C_EmptyUnmodifiableSet1, false, true);\n    C.AtRootQuery_UsS0 = new V.AtRootQuery0(false, C.C_EmptyUnmodifiableSet1, false, true);\n    C.AttributeOperator_4L5 = new N.AttributeOperator(\"^=\");\n    C.AttributeOperator_4L50 = new N.AttributeOperator0(\"^=\");\n    C.AttributeOperator_AuK = new N.AttributeOperator(\"|=\");\n    C.AttributeOperator_AuK0 = new N.AttributeOperator0(\"|=\");\n    C.AttributeOperator_fz1 = new N.AttributeOperator(\"~=\");\n    C.AttributeOperator_fz10 = new N.AttributeOperator0(\"~=\");\n    C.AttributeOperator_gqZ = new N.AttributeOperator(\"*=\");\n    C.AttributeOperator_gqZ0 = new N.AttributeOperator0(\"*=\");\n    C.AttributeOperator_mOX = new N.AttributeOperator(\"$=\");\n    C.AttributeOperator_mOX0 = new N.AttributeOperator0(\"$=\");\n    C.AttributeOperator_sEs = new N.AttributeOperator(\"=\");\n    C.AttributeOperator_sEs0 = new N.AttributeOperator0(\"=\");\n    C.BinaryOperator_1da = new V.BinaryOperator(\"greater than or equals\", \">=\", 4);\n    C.BinaryOperator_1da0 = new V.BinaryOperator0(\"greater than or equals\", \">=\", 4);\n    C.BinaryOperator_2ad = new V.BinaryOperator(\"modulo\", \"%\", 6);\n    C.BinaryOperator_2ad0 = new V.BinaryOperator0(\"modulo\", \"%\", 6);\n    C.BinaryOperator_33h = new V.BinaryOperator(\"less than or equals\", \"<=\", 4);\n    C.BinaryOperator_33h0 = new V.BinaryOperator0(\"less than or equals\", \"<=\", 4);\n    C.BinaryOperator_8qt = new V.BinaryOperator(\"less than\", \"<\", 4);\n    C.BinaryOperator_8qt0 = new V.BinaryOperator0(\"less than\", \"<\", 4);\n    C.BinaryOperator_AcR = new V.BinaryOperator(\"greater than\", \">\", 4);\n    C.BinaryOperator_AcR0 = new V.BinaryOperator(\"plus\", \"+\", 5);\n    C.BinaryOperator_AcR1 = new V.BinaryOperator0(\"greater than\", \">\", 4);\n    C.BinaryOperator_AcR2 = new V.BinaryOperator0(\"plus\", \"+\", 5);\n    C.BinaryOperator_O1M = new V.BinaryOperator(\"times\", \"*\", 6);\n    C.BinaryOperator_O1M0 = new V.BinaryOperator0(\"times\", \"*\", 6);\n    C.BinaryOperator_RTB = new V.BinaryOperator(\"divided by\", \"/\", 6);\n    C.BinaryOperator_RTB0 = new V.BinaryOperator0(\"divided by\", \"/\", 6);\n    C.BinaryOperator_YlX = new V.BinaryOperator(\"equals\", \"==\", 3);\n    C.BinaryOperator_YlX0 = new V.BinaryOperator0(\"equals\", \"==\", 3);\n    C.BinaryOperator_and_and_2 = new V.BinaryOperator(\"and\", \"and\", 2);\n    C.BinaryOperator_and_and_20 = new V.BinaryOperator0(\"and\", \"and\", 2);\n    C.BinaryOperator_i5H = new V.BinaryOperator(\"not equals\", \"!=\", 3);\n    C.BinaryOperator_i5H0 = new V.BinaryOperator0(\"not equals\", \"!=\", 3);\n    C.BinaryOperator_iyO = new V.BinaryOperator(\"minus\", \"-\", 5);\n    C.BinaryOperator_iyO0 = new V.BinaryOperator0(\"minus\", \"-\", 5);\n    C.BinaryOperator_kjl = new V.BinaryOperator(\"single equals\", \"=\", 0);\n    C.BinaryOperator_kjl0 = new V.BinaryOperator0(\"single equals\", \"=\", 0);\n    C.BinaryOperator_or_or_1 = new V.BinaryOperator(\"or\", \"or\", 1);\n    C.BinaryOperator_or_or_10 = new V.BinaryOperator0(\"or\", \"or\", 1);\n    C.C_AsciiCodec = new P.AsciiCodec();\n    C.C_AsciiGlyphSet = new A.AsciiGlyphSet();\n    C.C_Base64Encoder = new P.Base64Encoder();\n    C.C_Base64Codec = new P.Base64Codec();\n    C.C_DefaultEquality = new U.DefaultEquality();\n    C.C_EmptyExtender = new T.EmptyExtender();\n    C.C_EmptyExtender0 = new T.EmptyExtender0();\n    C.C_EmptyIterator = new H.EmptyIterator();\n    C.C_EmptyUnmodifiableSet = new O.EmptyUnmodifiableSet(H.findType(\"EmptyUnmodifiableSet<SimpleSelector*>\"));\n    C.C_EmptyUnmodifiableSet0 = new O.EmptyUnmodifiableSet(H.findType(\"EmptyUnmodifiableSet<SimpleSelector0*>\"));\n    C.C_IterableEquality = new U.IterableEquality();\n    C.C_JS_CONST = function getTagFallback(o) {\n  var s = Object.prototype.toString.call(o);\n  return s.substring(8, s.length - 1);\n};\n    C.C_JS_CONST0 = function() {\n  var toStringFunction = Object.prototype.toString;\n  function getTag(o) {\n    var s = toStringFunction.call(o);\n    return s.substring(8, s.length - 1);\n  }\n  function getUnknownTag(object, tag) {\n    if (/^HTML[A-Z].*Element$/.test(tag)) {\n      var name = toStringFunction.call(object);\n      if (name == \"[object Object]\") return null;\n      return \"HTMLElement\";\n    }\n  }\n  function getUnknownTagGenericBrowser(object, tag) {\n    if (self.HTMLElement && object instanceof HTMLElement) return \"HTMLElement\";\n    return getUnknownTag(object, tag);\n  }\n  function prototypeForTag(tag) {\n    if (typeof window == \"undefined\") return null;\n    if (typeof window[tag] == \"undefined\") return null;\n    var constructor = window[tag];\n    if (typeof constructor != \"function\") return null;\n    return constructor.prototype;\n  }\n  function discriminator(tag) { return null; }\n  var isBrowser = typeof navigator == \"object\";\n  return {\n    getTag: getTag,\n    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,\n    prototypeForTag: prototypeForTag,\n    discriminator: discriminator };\n};\n    C.C_JS_CONST6 = function(getTagFallback) {\n  return function(hooks) {\n    if (typeof navigator != \"object\") return hooks;\n    var ua = navigator.userAgent;\n    if (ua.indexOf(\"DumpRenderTree\") >= 0) return hooks;\n    if (ua.indexOf(\"Chrome\") >= 0) {\n      function confirm(p) {\n        return typeof window == \"object\" && window[p] && window[p].name == p;\n      }\n      if (confirm(\"Window\") && confirm(\"HTMLElement\")) return hooks;\n    }\n    hooks.getTag = getTagFallback;\n  };\n};\n    C.C_JS_CONST1 = function(hooks) {\n  if (typeof dartExperimentalFixupGetTag != \"function\") return hooks;\n  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);\n};\n    C.C_JS_CONST2 = function(hooks) {\n  var getTag = hooks.getTag;\n  var prototypeForTag = hooks.prototypeForTag;\n  function getTagFixed(o) {\n    var tag = getTag(o);\n    if (tag == \"Document\") {\n      if (!!o.xmlVersion) return \"!Document\";\n      return \"!HTMLDocument\";\n    }\n    return tag;\n  }\n  function prototypeForTagFixed(tag) {\n    if (tag == \"Document\") return null;\n    return prototypeForTag(tag);\n  }\n  hooks.getTag = getTagFixed;\n  hooks.prototypeForTag = prototypeForTagFixed;\n};\n    C.C_JS_CONST5 = function(hooks) {\n  var userAgent = typeof navigator == \"object\" ? navigator.userAgent : \"\";\n  if (userAgent.indexOf(\"Firefox\") == -1) return hooks;\n  var getTag = hooks.getTag;\n  var quickMap = {\n    \"BeforeUnloadEvent\": \"Event\",\n    \"DataTransfer\": \"Clipboard\",\n    \"GeoGeolocation\": \"Geolocation\",\n    \"Location\": \"!Location\",\n    \"WorkerMessageEvent\": \"MessageEvent\",\n    \"XMLDocument\": \"!Document\"};\n  function getTagFirefox(o) {\n    var tag = getTag(o);\n    return quickMap[tag] || tag;\n  }\n  hooks.getTag = getTagFirefox;\n};\n    C.C_JS_CONST4 = function(hooks) {\n  var userAgent = typeof navigator == \"object\" ? navigator.userAgent : \"\";\n  if (userAgent.indexOf(\"Trident/\") == -1) return hooks;\n  var getTag = hooks.getTag;\n  var quickMap = {\n    \"BeforeUnloadEvent\": \"Event\",\n    \"DataTransfer\": \"Clipboard\",\n    \"HTMLDDElement\": \"HTMLElement\",\n    \"HTMLDTElement\": \"HTMLElement\",\n    \"HTMLPhraseElement\": \"HTMLElement\",\n    \"Position\": \"Geoposition\"\n  };\n  function getTagIE(o) {\n    var tag = getTag(o);\n    var newTag = quickMap[tag];\n    if (newTag) return newTag;\n    if (tag == \"Object\") {\n      if (window.DataView && (o instanceof window.DataView)) return \"DataView\";\n    }\n    return tag;\n  }\n  function prototypeForTagIE(tag) {\n    var constructor = window[tag];\n    if (constructor == null) return null;\n    return constructor.prototype;\n  }\n  hooks.getTag = getTagIE;\n  hooks.prototypeForTag = prototypeForTagIE;\n};\n    C.C_JS_CONST3 = function(hooks) { return hooks; }\n;\n    C.C_JsonCodec = new P.JsonCodec();\n    C.C_LineFeed = new N.LineFeed();\n    C.C_ListEquality = new U.ListEquality();\n    C.C_MapEquality = new U.MapEquality();\n    C.C_OutOfMemoryError = new P.OutOfMemoryError();\n    C.C_SassNull0 = new O.SassNull();\n    C.C_SassNull = new O.SassNull0();\n    C.C_StderrLogger = new S.StderrLogger0();\n    C.C_UnicodeGlyphSet = new K.UnicodeGlyphSet();\n    C.C_Utf8Codec = new P.Utf8Codec();\n    C.C_Utf8Encoder = new P.Utf8Encoder();\n    C.C__DelayedDone = new P._DelayedDone();\n    C.C__JSRandom = new P._JSRandom();\n    C.C__Required = new H._Required();\n    C.C__RootZone = new P._RootZone();\n    C.ChangeType_add = new E.ChangeType(\"add\");\n    C.ChangeType_modify = new E.ChangeType(\"modify\");\n    C.ChangeType_remove = new E.ChangeType(\"remove\");\n    C.Combinator_CzM = new S.Combinator(\"~\");\n    C.Combinator_CzM0 = new S.Combinator0(\"~\");\n    C.Combinator_sgq = new S.Combinator(\">\");\n    C.Combinator_sgq0 = new S.Combinator0(\">\");\n    C.Combinator_uzg = new S.Combinator(\"+\");\n    C.Combinator_uzg0 = new S.Combinator0(\"+\");\n    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_String);\n    C.Map_empty12 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,ConfiguredValue*>\"));\n    C.Configuration_Map_empty_null_true = new A.Configuration(C.Map_empty12, null, true);\n    C.Map_empty13 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,ConfiguredValue0*>\"));\n    C.Configuration_Map_empty_null_true0 = new A.Configuration0(C.Map_empty13, null, true);\n    C.Duration_0 = new P.Duration(0);\n    C.ExtendMode_allTargets = new L.ExtendMode(\"allTargets\");\n    C.ExtendMode_allTargets0 = new L.ExtendMode0(\"allTargets\");\n    C.ExtendMode_normal = new L.ExtendMode(\"normal\");\n    C.ExtendMode_normal0 = new L.ExtendMode0(\"normal\");\n    C.ExtendMode_replace = new L.ExtendMode(\"replace\");\n    C.ExtendMode_replace0 = new L.ExtendMode0(\"replace\");\n    C.JsonEncoder_null = new P.JsonEncoder(null);\n    C.LineFeed_D6m = new N.LineFeed0(\"lf\", \"\\n\");\n    C.LineFeed_Mss = new N.LineFeed0(\"crlf\", \"\\r\\n\");\n    C.LineFeed_a1Y = new N.LineFeed0(\"lfcr\", \"\\n\\r\");\n    C.LineFeed_kMT = new N.LineFeed0(\"cr\", \"\\r\");\n    C.ListSeparator_comma = new D.ListSeparator(\"comma\");\n    C.ListSeparator_comma0 = new D.ListSeparator0(\"comma\");\n    C.ListSeparator_space = new D.ListSeparator(\"space\");\n    C.ListSeparator_space0 = new D.ListSeparator0(\"space\");\n    C.ListSeparator_undecided = new D.ListSeparator(\"undecided\");\n    C.ListSeparator_undecided0 = new D.ListSeparator0(\"undecided\");\n    C.List_2Vk = H.setRuntimeTypeInfo(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_legacy_int);\n    C.List_CVk = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.List_JYB = H.setRuntimeTypeInfo(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_legacy_int);\n    C.List_empty9 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<Null>\"));\n    C.List_empty22 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_dynamic);\n    C.List_empty8 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Argument);\n    C.List_empty20 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Argument_2);\n    C.List_empty21 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_AsyncCallable);\n    C.List_empty23 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<AsyncImporter0*>\"));\n    C.List_empty4 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_ComplexSelector);\n    C.List_empty15 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_ComplexSelector_2);\n    C.List_empty6 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_ConfiguredVariable);\n    C.List_empty18 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_ConfiguredVariable_2);\n    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_CssNode);\n    C.List_empty12 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_CssNode_2);\n    C.List_empty7 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Expression);\n    C.List_empty19 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Expression_2);\n    C.List_empty2 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Extension);\n    C.List_empty13 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Extension_2);\n    C.List_empty10 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Importer);\n    C.List_empty17 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<Importer0*>\"));\n    C.List_empty3 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<Module<Null>*>\"));\n    C.List_empty14 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<Module0<Null>*>\"));\n    C.List_empty11 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Statement);\n    C.List_empty5 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Value);\n    C.List_empty16 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Value_2);\n    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_int);\n    C.List_gRj = H.setRuntimeTypeInfo(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.List_nxB = H.setRuntimeTypeInfo(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.List_qFt = H.setRuntimeTypeInfo(makeConstList([0, 0, 27858, 1023, 65534, 51199, 65535, 32767]), type$.JSArray_legacy_int);\n    C.List_qNA = H.setRuntimeTypeInfo(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.List_qg40 = H.setRuntimeTypeInfo(makeConstList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.List_qg4 = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_legacy_int);\n    C.Map_empty1 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,AstNode*>\"));\n    C.Map_empty7 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,AstNode0*>\"));\n    C.Map_empty3 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Expression*>\"));\n    C.Map_empty9 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Expression0*>\"));\n    C.Map_empty4 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Module<AsyncCallable*>*>\"));\n    C.Map_empty0 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Module<Callable*>*>\"));\n    C.Map_empty11 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Module0<AsyncCallable0*>*>\"));\n    C.Map_empty6 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Module0<Callable0*>*>\"));\n    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,SourceFile*>\"));\n    C.Map_empty5 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,String*>\"));\n    C.Map_empty2 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Value*>\"));\n    C.Map_empty8 = new H.ConstantStringMap(0, {}, C.List_empty, H.findType(\"ConstantStringMap<String*,Value0*>\"));\n    C.List_empty24 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<Symbol0*>\"));\n    C.Map_empty10 = new H.ConstantStringMap(0, {}, C.List_empty24, H.findType(\"ConstantStringMap<Symbol0*,@>\"));\n    C.OptionType_YwU = new G.OptionType(\"OptionType.single\");\n    C.OptionType_nMZ = new G.OptionType(\"OptionType.flag\");\n    C.OptionType_qyr = new G.OptionType(\"OptionType.multiple\");\n    C.OutputStyle_compressed = new N.OutputStyle(\"compressed\");\n    C.OutputStyle_compressed0 = new N.OutputStyle0(\"compressed\");\n    C.OutputStyle_expanded0 = new N.OutputStyle(\"expanded\");\n    C.OutputStyle_expanded = new N.OutputStyle0(\"expanded\");\n    C.SassBoolean_false0 = new Z.SassBoolean(false);\n    C.SassBoolean_false = new Z.SassBoolean0(false);\n    C.SassBoolean_true0 = new Z.SassBoolean(true);\n    C.SassBoolean_true = new Z.SassBoolean0(true);\n    C.SassList_lmy = new D.SassList(C.List_empty5, C.ListSeparator_comma, false);\n    C.SassList_lmy0 = new D.SassList0(C.List_empty16, C.ListSeparator_comma0, false);\n    C.Map_empty14 = new H.ConstantStringMap(0, {}, C.List_empty5, H.findType(\"ConstantStringMap<Value*,Value*>\"));\n    C.SassMap_Map_empty = new A.SassMap(C.Map_empty14);\n    C.Map_empty15 = new H.ConstantStringMap(0, {}, C.List_empty16, H.findType(\"ConstantStringMap<Value0*,Value0*>\"));\n    C.SassMap_Map_empty0 = new A.SassMap0(C.Map_empty15);\n    C.List_empty25 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Module_legacy_AsyncCallable);\n    C.Map_empty16 = new H.ConstantStringMap(0, {}, C.List_empty25, H.findType(\"ConstantStringMap<Module<AsyncCallable*>*,Null>\"));\n    C.Set_empty0 = new P._UnmodifiableSet(C.Map_empty16, H.findType(\"_UnmodifiableSet<Module<AsyncCallable*>*>\"));\n    C.List_empty26 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Module_legacy_Callable);\n    C.Map_empty17 = new H.ConstantStringMap(0, {}, C.List_empty26, H.findType(\"ConstantStringMap<Module<Callable*>*,Null>\"));\n    C.Set_empty = new P._UnmodifiableSet(C.Map_empty17, H.findType(\"_UnmodifiableSet<Module<Callable*>*>\"));\n    C.List_empty27 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Module_legacy_AsyncCallable_2);\n    C.Map_empty18 = new H.ConstantStringMap(0, {}, C.List_empty27, H.findType(\"ConstantStringMap<Module0<AsyncCallable0*>*,Null>\"));\n    C.Set_empty3 = new P._UnmodifiableSet(C.Map_empty18, H.findType(\"_UnmodifiableSet<Module0<AsyncCallable0*>*>\"));\n    C.List_empty28 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_Module_legacy_Callable_2);\n    C.Map_empty19 = new H.ConstantStringMap(0, {}, C.List_empty28, H.findType(\"ConstantStringMap<Module0<Callable0*>*,Null>\"));\n    C.Set_empty2 = new P._UnmodifiableSet(C.Map_empty19, H.findType(\"_UnmodifiableSet<Module0<Callable0*>*>\"));\n    C.List_empty29 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_legacy_StylesheetNode);\n    C.Map_empty20 = new H.ConstantStringMap(0, {}, C.List_empty29, H.findType(\"ConstantStringMap<StylesheetNode*,Null>\"));\n    C.Set_empty1 = new P._UnmodifiableSet(C.Map_empty20, H.findType(\"_UnmodifiableSet<StylesheetNode*>\"));\n    C.StderrLogger_false = new S.StderrLogger(false);\n    C.Symbol__warn = new H.Symbol(\"_warn\");\n    C.Symbol_call = new H.Symbol(\"call\");\n    C.Syntax_CSS = new M.Syntax(\"CSS\");\n    C.Syntax_CSS0 = new M.Syntax0(\"CSS\");\n    C.Syntax_SCSS = new M.Syntax(\"SCSS\");\n    C.Syntax_SCSS0 = new M.Syntax0(\"SCSS\");\n    C.Syntax_Sass = new M.Syntax(\"Sass\");\n    C.Syntax_Sass0 = new M.Syntax0(\"Sass\");\n    C.List_empty30 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<CssValue<SelectorList*>*>\"));\n    C.Map_empty21 = new H.ConstantStringMap(0, {}, C.List_empty30, H.findType(\"ConstantStringMap<CssValue<SelectorList*>*,ModifiableCssValue<SelectorList*>*>\"));\n    C.Tuple2_EmptyExtender_Map_empty = new S.Tuple2(C.C_EmptyExtender, C.Map_empty21, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList);\n    C.List_empty31 = H.setRuntimeTypeInfo(makeConstList([]), H.findType(\"JSArray<CssValue0<SelectorList0*>*>\"));\n    C.Map_empty22 = new H.ConstantStringMap(0, {}, C.List_empty31, H.findType(\"ConstantStringMap<CssValue0<SelectorList0*>*,ModifiableCssValue0<SelectorList0*>*>\"));\n    C.Tuple2_EmptyExtender_Map_empty0 = new S.Tuple2(C.C_EmptyExtender0, C.Map_empty22, type$.Tuple2_of_legacy_Extender_and_legacy_Map_of_legacy_CssValue_legacy_SelectorList_and_legacy_ModifiableCssValue_legacy_SelectorList_2);\n    C.Type_Null_Yyn = H.typeLiteral(\"Null\");\n    C.UnaryOperator_U4G = new X.UnaryOperator(\"minus\", \"-\");\n    C.UnaryOperator_U4G0 = new X.UnaryOperator0(\"minus\", \"-\");\n    C.UnaryOperator_j2w = new X.UnaryOperator(\"plus\", \"+\");\n    C.UnaryOperator_j2w0 = new X.UnaryOperator0(\"plus\", \"+\");\n    C.UnaryOperator_not_not = new X.UnaryOperator(\"not\", \"not\");\n    C.UnaryOperator_not_not0 = new X.UnaryOperator0(\"not\", \"not\");\n    C.UnaryOperator_zDx = new X.UnaryOperator(\"divide\", \"/\");\n    C.UnaryOperator_zDx0 = new X.UnaryOperator0(\"divide\", \"/\");\n    C.Utf8Decoder_false = new P.Utf8Decoder(false);\n    C._IterationMarker_null_2 = new P._IterationMarker(null, 2);\n    C._PathDirection_8Gl = new M._PathDirection(\"at root\");\n    C._PathDirection_988 = new M._PathDirection(\"below root\");\n    C._PathDirection_FIw = new M._PathDirection(\"reaches root\");\n    C._PathDirection_ZGD = new M._PathDirection(\"above root\");\n    C._PathRelation_different = new M._PathRelation(\"different\");\n    C._PathRelation_equal = new M._PathRelation(\"equal\");\n    C._PathRelation_inconclusive = new M._PathRelation(\"inconclusive\");\n    C._PathRelation_within = new M._PathRelation(\"within\");\n    C._RegisterBinaryZoneFunction_kGu = new P._RegisterBinaryZoneFunction(C.C__RootZone, P.async___rootRegisterBinaryCallback$closure());\n    C._RegisterNullaryZoneFunction__RootZone__rootRegisterCallback = new P._RegisterNullaryZoneFunction(C.C__RootZone, P.async___rootRegisterCallback$closure());\n    C._RegisterUnaryZoneFunction_Bqo = new P._RegisterUnaryZoneFunction(C.C__RootZone, P.async___rootRegisterUnaryCallback$closure());\n    C._RunBinaryZoneFunction__RootZone__rootRunBinary = new P._RunBinaryZoneFunction(C.C__RootZone, P.async___rootRunBinary$closure());\n    C._RunNullaryZoneFunction__RootZone__rootRun = new P._RunNullaryZoneFunction(C.C__RootZone, P.async___rootRun$closure());\n    C._RunUnaryZoneFunction__RootZone__rootRunUnary = new P._RunUnaryZoneFunction(C.C__RootZone, P.async___rootRunUnary$closure());\n    C._SingletonCssMediaQueryMergeResult_empty = new F._SingletonCssMediaQueryMergeResult(\"empty\");\n    C._SingletonCssMediaQueryMergeResult_empty0 = new F._SingletonCssMediaQueryMergeResult0(\"empty\");\n    C._SingletonCssMediaQueryMergeResult_unrepresentable = new F._SingletonCssMediaQueryMergeResult(\"unrepresentable\");\n    C._SingletonCssMediaQueryMergeResult_unrepresentable0 = new F._SingletonCssMediaQueryMergeResult0(\"unrepresentable\");\n    C._StreamGroupState_canceled = new L._StreamGroupState(\"canceled\");\n    C._StreamGroupState_dormant = new L._StreamGroupState(\"dormant\");\n    C._StreamGroupState_listening = new L._StreamGroupState(\"listening\");\n    C._StreamGroupState_paused = new L._StreamGroupState(\"paused\");\n    C._StringStackTrace_3uE = new P._StringStackTrace(\"\");\n    C._ZoneFunction_3bB = new P._ZoneFunction(C.C__RootZone, P.async___rootCreatePeriodicTimer$closure());\n    C._ZoneFunction_NMc = new P._ZoneFunction(C.C__RootZone, P.async___rootHandleUncaughtError$closure());\n    C._ZoneFunction__RootZone__rootCreateTimer = new P._ZoneFunction(C.C__RootZone, P.async___rootCreateTimer$closure());\n    C._ZoneFunction__RootZone__rootErrorCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootErrorCallback$closure());\n    C._ZoneFunction__RootZone__rootFork = new P._ZoneFunction(C.C__RootZone, P.async___rootFork$closure());\n    C._ZoneFunction__RootZone__rootPrint = new P._ZoneFunction(C.C__RootZone, P.async___rootPrint$closure());\n    C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P.async___rootScheduleMicrotask$closure());\n    C._ZoneSpecification_ALf = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);\n  })();\n  (function staticFields() {\n    $._JS_INTEROP_INTERCEPTOR_TAG = null;\n    $.printToZone = null;\n    $.Closure_functionCounter = 0;\n    $.BoundClosure_selfFieldNameCache = null;\n    $.BoundClosure_receiverFieldNameCache = null;\n    $.getTagFunction = null;\n    $.alternateTagFunction = null;\n    $.prototypeForTagFunction = null;\n    $.dispatchRecordsForInstanceTags = null;\n    $.interceptorsForUncacheableTags = null;\n    $.initNativeDispatchFlag = null;\n    $._nextCallback = null;\n    $._lastCallback = null;\n    $._lastPriorityCallback = null;\n    $._isInCallbackLoop = false;\n    $.Zone__current = C.C__RootZone;\n    $._RootZone__rootDelegate = null;\n    $._toStringVisiting = H.setRuntimeTypeInfo([], H.findType(\"JSArray<Object>\"));\n    $._fs = null;\n    $._currentUriBase = null;\n    $._current = null;\n    $._subselectorPseudos = P.LinkedHashSet_LinkedHashSet$_literal([\"matches\", \"any\", \"nth-child\", \"nth-last-child\"], type$.legacy_String);\n    $._features = P.LinkedHashSet_LinkedHashSet$_literal([\"global-variable-shadowing\", \"extend-selector-pseudoclass\", \"units-level-3\", \"at-error\", \"custom-property\"], type$.legacy_String);\n    $._inImportRule = false;\n    $._selectorPseudoClasses = P.LinkedHashSet_LinkedHashSet$_literal([\"not\", \"matches\", \"current\", \"any\", \"has\", \"host\", \"host-context\"], type$.legacy_String);\n    $._selectorPseudoElements = P.LinkedHashSet_LinkedHashSet$_literal([\"slotted\"], type$.legacy_String);\n    $._glyphs = C.C_UnicodeGlyphSet;\n    $._subselectorPseudos0 = P.LinkedHashSet_LinkedHashSet$_literal([\"matches\", \"any\", \"nth-child\", \"nth-last-child\"], type$.legacy_String);\n    $._features0 = P.LinkedHashSet_LinkedHashSet$_literal([\"global-variable-shadowing\", \"extend-selector-pseudoclass\", \"units-level-3\", \"at-error\", \"custom-property\"], type$.legacy_String);\n    $._selectorPseudoClasses0 = P.LinkedHashSet_LinkedHashSet$_literal([\"not\", \"matches\", \"current\", \"any\", \"has\", \"host\", \"host-context\"], type$.legacy_String);\n    $._selectorPseudoElements0 = P.LinkedHashSet_LinkedHashSet$_literal([\"slotted\"], type$.legacy_String);\n    $._inImportRule0 = false;\n  })();\n  (function lazyInitializers() {\n    var _lazy = hunkHelpers.lazy,\n      _lazyOld = hunkHelpers.lazyOld;\n    _lazy($, \"DART_CLOSURE_PROPERTY_NAME\", \"$get$DART_CLOSURE_PROPERTY_NAME\", function() {\n      return H.getIsolateAffinityTag(\"_$dart_dartClosure\");\n    });\n    _lazy($, \"TypeErrorDecoder_noSuchMethodPattern\", \"$get$TypeErrorDecoder_noSuchMethodPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({\n        toString: function() {\n          return \"$receiver$\";\n        }\n      }));\n    });\n    _lazy($, \"TypeErrorDecoder_notClosurePattern\", \"$get$TypeErrorDecoder_notClosurePattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,\n        toString: function() {\n          return \"$receiver$\";\n        }\n      }));\n    });\n    _lazy($, \"TypeErrorDecoder_nullCallPattern\", \"$get$TypeErrorDecoder_nullCallPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));\n    });\n    _lazy($, \"TypeErrorDecoder_nullLiteralCallPattern\", \"$get$TypeErrorDecoder_nullLiteralCallPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(function() {\n        var $argumentsExpr$ = '$arguments$';\n        try {\n          null.$method$($argumentsExpr$);\n        } catch (e) {\n          return e.message;\n        }\n      }());\n    });\n    _lazy($, \"TypeErrorDecoder_undefinedCallPattern\", \"$get$TypeErrorDecoder_undefinedCallPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));\n    });\n    _lazy($, \"TypeErrorDecoder_undefinedLiteralCallPattern\", \"$get$TypeErrorDecoder_undefinedLiteralCallPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(function() {\n        var $argumentsExpr$ = '$arguments$';\n        try {\n          (void 0).$method$($argumentsExpr$);\n        } catch (e) {\n          return e.message;\n        }\n      }());\n    });\n    _lazy($, \"TypeErrorDecoder_nullPropertyPattern\", \"$get$TypeErrorDecoder_nullPropertyPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));\n    });\n    _lazy($, \"TypeErrorDecoder_nullLiteralPropertyPattern\", \"$get$TypeErrorDecoder_nullLiteralPropertyPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(function() {\n        try {\n          null.$method$;\n        } catch (e) {\n          return e.message;\n        }\n      }());\n    });\n    _lazy($, \"TypeErrorDecoder_undefinedPropertyPattern\", \"$get$TypeErrorDecoder_undefinedPropertyPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));\n    });\n    _lazy($, \"TypeErrorDecoder_undefinedLiteralPropertyPattern\", \"$get$TypeErrorDecoder_undefinedLiteralPropertyPattern\", function() {\n      return H.TypeErrorDecoder_extractPattern(function() {\n        try {\n          (void 0).$method$;\n        } catch (e) {\n          return e.message;\n        }\n      }());\n    });\n    _lazy($, \"_AsyncRun__scheduleImmediateClosure\", \"$get$_AsyncRun__scheduleImmediateClosure\", function() {\n      return P._AsyncRun__initializeScheduleImmediate();\n    });\n    _lazy($, \"Future__nullFuture\", \"$get$Future__nullFuture\", function() {\n      return P._Future$zoneValue(null, C.C__RootZone, type$.Null);\n    });\n    _lazy($, \"Future__falseFuture\", \"$get$Future__falseFuture\", function() {\n      return P._Future$zoneValue(false, C.C__RootZone, type$.bool);\n    });\n    _lazy($, \"_RootZone__rootMap\", \"$get$_RootZone__rootMap\", function() {\n      var t1 = type$.dynamic;\n      return P.HashMap_HashMap(t1, t1);\n    });\n    _lazy($, \"Utf8Decoder__decoder\", \"$get$Utf8Decoder__decoder\", function() {\n      return new P.Utf8Decoder_closure().call$0();\n    });\n    _lazy($, \"Utf8Decoder__decoderNonfatal\", \"$get$Utf8Decoder__decoderNonfatal\", function() {\n      return new P.Utf8Decoder_closure0().call$0();\n    });\n    _lazy($, \"_Base64Decoder__inverseAlphabet\", \"$get$_Base64Decoder__inverseAlphabet\", function() {\n      return H.NativeInt8List__create1(H._ensureNativeList(H.setRuntimeTypeInfo([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int)));\n    });\n    _lazy($, \"_Uri__isWindowsCached\", \"$get$_Uri__isWindowsCached\", function() {\n      return typeof process != \"undefined\" && Object.prototype.toString.call(process) == \"[object process]\" && process.platform == \"win32\";\n    });\n    _lazy($, \"_Uri__needsNoEncoding\", \"$get$_Uri__needsNoEncoding\", function() {\n      return P.RegExp_RegExp(\"^[\\\\-\\\\.0-9A-Z_a-z~]*$\", false);\n    });\n    _lazy($, \"_hasErrorStackProperty\", \"$get$_hasErrorStackProperty\", function() {\n      return new Error().stack != void 0;\n    });\n    _lazy($, \"_scannerTables\", \"$get$_scannerTables\", function() {\n      return P._createTables();\n    });\n    _lazyOld($, \"Option__invalidChars\", \"$get$Option__invalidChars\", function() {\n      return P.RegExp_RegExp(\"[ \\\\t\\\\r\\\\n\\\"'\\\\\\\\/]\", false);\n    });\n    _lazyOld($, \"alwaysValid\", \"$get$alwaysValid\", function() {\n      return new Q.closure113();\n    });\n    _lazyOld($, \"readline\", \"$get$readline\", function() {\n      return self.readline;\n    });\n    _lazyOld($, \"windows\", \"$get$windows\", function() {\n      return M.Context_Context($.$get$Style_windows());\n    });\n    _lazyOld($, \"url\", \"$get$url\", function() {\n      return M.Context_Context($.$get$Style_url());\n    });\n    _lazyOld($, \"context\", \"$get$context\", function() {\n      return new M.Context($.$get$Style_platform(), null);\n    });\n    _lazyOld($, \"Style_posix\", \"$get$Style_posix\", function() {\n      return new E.PosixStyle(P.RegExp_RegExp(\"/\", false), P.RegExp_RegExp(\"[^/]$\", false), P.RegExp_RegExp(\"^/\", false));\n    });\n    _lazyOld($, \"Style_windows\", \"$get$Style_windows\", function() {\n      return new L.WindowsStyle(P.RegExp_RegExp(\"[/\\\\\\\\]\", false), P.RegExp_RegExp(\"[^/\\\\\\\\]$\", false), P.RegExp_RegExp(\"^(\\\\\\\\\\\\\\\\[^\\\\\\\\]+\\\\\\\\[^\\\\\\\\/]+|[a-zA-Z]:[/\\\\\\\\])\", false), P.RegExp_RegExp(\"^[/\\\\\\\\](?![/\\\\\\\\])\", false));\n    });\n    _lazyOld($, \"Style_url\", \"$get$Style_url\", function() {\n      return new F.UrlStyle(P.RegExp_RegExp(\"/\", false), P.RegExp_RegExp(\"(^[a-zA-Z][-+.a-zA-Z\\\\d]*://|[^/])$\", false), P.RegExp_RegExp(\"[a-zA-Z][-+.a-zA-Z\\\\d]*://[^/]*\", false), P.RegExp_RegExp(\"^/\", false));\n    });\n    _lazyOld($, \"Style_platform\", \"$get$Style_platform\", function() {\n      return O.Style__getPlatformStyle();\n    });\n    _lazyOld($, \"IfExpression_declaration\", \"$get$IfExpression_declaration\", function() {\n      return B.ArgumentDeclaration_ArgumentDeclaration$parse(string$.x40funct, null);\n    });\n    _lazyOld($, \"colorsByName\", \"$get$colorsByName\", function() {\n      var _null = null;\n      return P.LinkedHashMap_LinkedHashMap$_literal([\"yellowgreen\", K.SassColor$rgb(154, 205, 50, _null, _null), \"yellow\", K.SassColor$rgb(255, 255, 0, _null, _null), \"whitesmoke\", K.SassColor$rgb(245, 245, 245, _null, _null), \"white\", K.SassColor$rgb(255, 255, 255, _null, _null), \"wheat\", K.SassColor$rgb(245, 222, 179, _null, _null), \"violet\", K.SassColor$rgb(238, 130, 238, _null, _null), \"turquoise\", K.SassColor$rgb(64, 224, 208, _null, _null), \"transparent\", K.SassColor$rgb(0, 0, 0, 0, _null), \"tomato\", K.SassColor$rgb(255, 99, 71, _null, _null), \"thistle\", K.SassColor$rgb(216, 191, 216, _null, _null), \"teal\", K.SassColor$rgb(0, 128, 128, _null, _null), \"tan\", K.SassColor$rgb(210, 180, 140, _null, _null), \"steelblue\", K.SassColor$rgb(70, 130, 180, _null, _null), \"springgreen\", K.SassColor$rgb(0, 255, 127, _null, _null), \"snow\", K.SassColor$rgb(255, 250, 250, _null, _null), \"slategrey\", K.SassColor$rgb(112, 128, 144, _null, _null), \"slategray\", K.SassColor$rgb(112, 128, 144, _null, _null), \"slateblue\", K.SassColor$rgb(106, 90, 205, _null, _null), \"skyblue\", K.SassColor$rgb(135, 206, 235, _null, _null), \"silver\", K.SassColor$rgb(192, 192, 192, _null, _null), \"sienna\", K.SassColor$rgb(160, 82, 45, _null, _null), \"seashell\", K.SassColor$rgb(255, 245, 238, _null, _null), \"seagreen\", K.SassColor$rgb(46, 139, 87, _null, _null), \"sandybrown\", K.SassColor$rgb(244, 164, 96, _null, _null), \"salmon\", K.SassColor$rgb(250, 128, 114, _null, _null), \"saddlebrown\", K.SassColor$rgb(139, 69, 19, _null, _null), \"royalblue\", K.SassColor$rgb(65, 105, 225, _null, _null), \"rosybrown\", K.SassColor$rgb(188, 143, 143, _null, _null), \"red\", K.SassColor$rgb(255, 0, 0, _null, _null), \"rebeccapurple\", K.SassColor$rgb(102, 51, 153, _null, _null), \"purple\", K.SassColor$rgb(128, 0, 128, _null, _null), \"powderblue\", K.SassColor$rgb(176, 224, 230, _null, _null), \"plum\", K.SassColor$rgb(221, 160, 221, _null, _null), \"pink\", K.SassColor$rgb(255, 192, 203, _null, _null), \"peru\", K.SassColor$rgb(205, 133, 63, _null, _null), \"peachpuff\", K.SassColor$rgb(255, 218, 185, _null, _null), \"papayawhip\", K.SassColor$rgb(255, 239, 213, _null, _null), \"palevioletred\", K.SassColor$rgb(219, 112, 147, _null, _null), \"paleturquoise\", K.SassColor$rgb(175, 238, 238, _null, _null), \"palegreen\", K.SassColor$rgb(152, 251, 152, _null, _null), \"palegoldenrod\", K.SassColor$rgb(238, 232, 170, _null, _null), \"orchid\", K.SassColor$rgb(218, 112, 214, _null, _null), \"orangered\", K.SassColor$rgb(255, 69, 0, _null, _null), \"orange\", K.SassColor$rgb(255, 165, 0, _null, _null), \"olivedrab\", K.SassColor$rgb(107, 142, 35, _null, _null), \"olive\", K.SassColor$rgb(128, 128, 0, _null, _null), \"oldlace\", K.SassColor$rgb(253, 245, 230, _null, _null), \"navy\", K.SassColor$rgb(0, 0, 128, _null, _null), \"navajowhite\", K.SassColor$rgb(255, 222, 173, _null, _null), \"moccasin\", K.SassColor$rgb(255, 228, 181, _null, _null), \"mistyrose\", K.SassColor$rgb(255, 228, 225, _null, _null), \"mintcream\", K.SassColor$rgb(245, 255, 250, _null, _null), \"midnightblue\", K.SassColor$rgb(25, 25, 112, _null, _null), \"mediumvioletred\", K.SassColor$rgb(199, 21, 133, _null, _null), \"mediumturquoise\", K.SassColor$rgb(72, 209, 204, _null, _null), \"mediumspringgreen\", K.SassColor$rgb(0, 250, 154, _null, _null), \"mediumslateblue\", K.SassColor$rgb(123, 104, 238, _null, _null), \"mediumseagreen\", K.SassColor$rgb(60, 179, 113, _null, _null), \"mediumpurple\", K.SassColor$rgb(147, 112, 219, _null, _null), \"mediumorchid\", K.SassColor$rgb(186, 85, 211, _null, _null), \"mediumblue\", K.SassColor$rgb(0, 0, 205, _null, _null), \"mediumaquamarine\", K.SassColor$rgb(102, 205, 170, _null, _null), \"maroon\", K.SassColor$rgb(128, 0, 0, _null, _null), \"magenta\", K.SassColor$rgb(255, 0, 255, _null, _null), \"linen\", K.SassColor$rgb(250, 240, 230, _null, _null), \"limegreen\", K.SassColor$rgb(50, 205, 50, _null, _null), \"lime\", K.SassColor$rgb(0, 255, 0, _null, _null), \"lightyellow\", K.SassColor$rgb(255, 255, 224, _null, _null), \"lightsteelblue\", K.SassColor$rgb(176, 196, 222, _null, _null), \"lightslategrey\", K.SassColor$rgb(119, 136, 153, _null, _null), \"lightslategray\", K.SassColor$rgb(119, 136, 153, _null, _null), \"lightskyblue\", K.SassColor$rgb(135, 206, 250, _null, _null), \"lightseagreen\", K.SassColor$rgb(32, 178, 170, _null, _null), \"lightsalmon\", K.SassColor$rgb(255, 160, 122, _null, _null), \"lightpink\", K.SassColor$rgb(255, 182, 193, _null, _null), \"lightgrey\", K.SassColor$rgb(211, 211, 211, _null, _null), \"lightgreen\", K.SassColor$rgb(144, 238, 144, _null, _null), \"lightgray\", K.SassColor$rgb(211, 211, 211, _null, _null), \"lightgoldenrodyellow\", K.SassColor$rgb(250, 250, 210, _null, _null), \"lightcyan\", K.SassColor$rgb(224, 255, 255, _null, _null), \"lightcoral\", K.SassColor$rgb(240, 128, 128, _null, _null), \"lightblue\", K.SassColor$rgb(173, 216, 230, _null, _null), \"lemonchiffon\", K.SassColor$rgb(255, 250, 205, _null, _null), \"lawngreen\", K.SassColor$rgb(124, 252, 0, _null, _null), \"lavenderblush\", K.SassColor$rgb(255, 240, 245, _null, _null), \"lavender\", K.SassColor$rgb(230, 230, 250, _null, _null), \"khaki\", K.SassColor$rgb(240, 230, 140, _null, _null), \"ivory\", K.SassColor$rgb(255, 255, 240, _null, _null), \"indigo\", K.SassColor$rgb(75, 0, 130, _null, _null), \"indianred\", K.SassColor$rgb(205, 92, 92, _null, _null), \"hotpink\", K.SassColor$rgb(255, 105, 180, _null, _null), \"honeydew\", K.SassColor$rgb(240, 255, 240, _null, _null), \"grey\", K.SassColor$rgb(128, 128, 128, _null, _null), \"greenyellow\", K.SassColor$rgb(173, 255, 47, _null, _null), \"green\", K.SassColor$rgb(0, 128, 0, _null, _null), \"gray\", K.SassColor$rgb(128, 128, 128, _null, _null), \"goldenrod\", K.SassColor$rgb(218, 165, 32, _null, _null), \"gold\", K.SassColor$rgb(255, 215, 0, _null, _null), \"ghostwhite\", K.SassColor$rgb(248, 248, 255, _null, _null), \"gainsboro\", K.SassColor$rgb(220, 220, 220, _null, _null), \"fuchsia\", K.SassColor$rgb(255, 0, 255, _null, _null), \"forestgreen\", K.SassColor$rgb(34, 139, 34, _null, _null), \"floralwhite\", K.SassColor$rgb(255, 250, 240, _null, _null), \"firebrick\", K.SassColor$rgb(178, 34, 34, _null, _null), \"dodgerblue\", K.SassColor$rgb(30, 144, 255, _null, _null), \"dimgrey\", K.SassColor$rgb(105, 105, 105, _null, _null), \"dimgray\", K.SassColor$rgb(105, 105, 105, _null, _null), \"deepskyblue\", K.SassColor$rgb(0, 191, 255, _null, _null), \"deeppink\", K.SassColor$rgb(255, 20, 147, _null, _null), \"darkviolet\", K.SassColor$rgb(148, 0, 211, _null, _null), \"darkturquoise\", K.SassColor$rgb(0, 206, 209, _null, _null), \"darkslategrey\", K.SassColor$rgb(47, 79, 79, _null, _null), \"darkslategray\", K.SassColor$rgb(47, 79, 79, _null, _null), \"darkslateblue\", K.SassColor$rgb(72, 61, 139, _null, _null), \"darkseagreen\", K.SassColor$rgb(143, 188, 143, _null, _null), \"darksalmon\", K.SassColor$rgb(233, 150, 122, _null, _null), \"darkred\", K.SassColor$rgb(139, 0, 0, _null, _null), \"darkorchid\", K.SassColor$rgb(153, 50, 204, _null, _null), \"darkorange\", K.SassColor$rgb(255, 140, 0, _null, _null), \"darkolivegreen\", K.SassColor$rgb(85, 107, 47, _null, _null), \"darkmagenta\", K.SassColor$rgb(139, 0, 139, _null, _null), \"darkkhaki\", K.SassColor$rgb(189, 183, 107, _null, _null), \"darkgrey\", K.SassColor$rgb(169, 169, 169, _null, _null), \"darkgreen\", K.SassColor$rgb(0, 100, 0, _null, _null), \"darkgray\", K.SassColor$rgb(169, 169, 169, _null, _null), \"darkgoldenrod\", K.SassColor$rgb(184, 134, 11, _null, _null), \"darkcyan\", K.SassColor$rgb(0, 139, 139, _null, _null), \"darkblue\", K.SassColor$rgb(0, 0, 139, _null, _null), \"cyan\", K.SassColor$rgb(0, 255, 255, _null, _null), \"crimson\", K.SassColor$rgb(220, 20, 60, _null, _null), \"cornsilk\", K.SassColor$rgb(255, 248, 220, _null, _null), \"cornflowerblue\", K.SassColor$rgb(100, 149, 237, _null, _null), \"coral\", K.SassColor$rgb(255, 127, 80, _null, _null), \"chocolate\", K.SassColor$rgb(210, 105, 30, _null, _null), \"chartreuse\", K.SassColor$rgb(127, 255, 0, _null, _null), \"cadetblue\", K.SassColor$rgb(95, 158, 160, _null, _null), \"burlywood\", K.SassColor$rgb(222, 184, 135, _null, _null), \"brown\", K.SassColor$rgb(165, 42, 42, _null, _null), \"blueviolet\", K.SassColor$rgb(138, 43, 226, _null, _null), \"blue\", K.SassColor$rgb(0, 0, 255, _null, _null), \"blanchedalmond\", K.SassColor$rgb(255, 235, 205, _null, _null), \"black\", K.SassColor$rgb(0, 0, 0, _null, _null), \"bisque\", K.SassColor$rgb(255, 228, 196, _null, _null), \"beige\", K.SassColor$rgb(245, 245, 220, _null, _null), \"azure\", K.SassColor$rgb(240, 255, 255, _null, _null), \"aquamarine\", K.SassColor$rgb(127, 255, 212, _null, _null), \"aqua\", K.SassColor$rgb(0, 255, 255, _null, _null), \"antiquewhite\", K.SassColor$rgb(250, 235, 215, _null, _null), \"aliceblue\", K.SassColor$rgb(240, 248, 255, _null, _null)], type$.legacy_String, type$.legacy_SassColor);\n    });\n    _lazyOld($, \"namesByColor\", \"$get$namesByColor\", function() {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SassColor, type$.legacy_String);\n      for (t2 = $.$get$colorsByName(), t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, t3.value, t3.key);\n      }\n      return t1;\n    });\n    _lazyOld($, \"ExecutableOptions__separatorBar\", \"$get$ExecutableOptions__separatorBar\", function() {\n      return B.isWindows() ? \"=\" : \"\\u2501\";\n    });\n    _lazyOld($, \"ExecutableOptions__parser\", \"$get$ExecutableOptions__parser\", function() {\n      return new B.ExecutableOptions_closure().call$0();\n    });\n    _lazyOld($, \"globalFunctions\", \"$get$globalFunctions\", function() {\n      var t2,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInCallable);\n      for (t2 = $.$get$global0(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global1(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global2(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global3(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global4(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global5(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(Q.BuiltInCallable$function(\"if\", \"$condition, $if-true, $if-false\", new Y.closure(), null));\n      return P.UnmodifiableListView$(t1, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"coreModules\", \"$get$coreModules\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$module(), $.$get$module0(), $.$get$module1(), $.$get$module2(), $.$get$module3(), $.$get$module4()], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable), H.findType(\"BuiltInModule<BuiltInCallable*>*\"));\n    });\n    _lazyOld($, \"_microsoftFilterStart\", \"$get$_microsoftFilterStart\", function() {\n      return P.RegExp_RegExp(\"^[a-zA-Z]+\\\\s*=\", false);\n    });\n    _lazyOld($, \"global\", \"$get$global0\", function() {\n      var _s27_ = \"$red, $green, $blue, $alpha\",\n        _s19_ = \"$red, $green, $blue\",\n        _s37_ = \"$hue, $saturation, $lightness, $alpha\",\n        _s29_ = \"$hue, $saturation, $lightness\",\n        _s17_ = \"$hue, $saturation\",\n        _s15_ = \"$color, $amount\",\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_legacy_Value_Function_legacy_List_legacy_Value;\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_red(), $.$get$_green(), $.$get$_blue(), $.$get$_mix(), Q.BuiltInCallable$overloadedFunction(\"rgb\", P.LinkedHashMap_LinkedHashMap$_literal([_s27_, new K.closure44(), _s19_, new K.closure45(), \"$color, $alpha\", new K.closure46(), \"$channels\", new K.closure47()], t1, t2)), Q.BuiltInCallable$overloadedFunction(\"rgba\", P.LinkedHashMap_LinkedHashMap$_literal([_s27_, new K.closure48(), _s19_, new K.closure49(), \"$color, $alpha\", new K.closure50(), \"$channels\", new K.closure51()], t1, t2)), K._function4(\"invert\", \"$color, $weight: 100%\", new K.closure52()), $.$get$_hue(), $.$get$_saturation(), $.$get$_lightness(), $.$get$_complement(), Q.BuiltInCallable$overloadedFunction(\"hsl\", P.LinkedHashMap_LinkedHashMap$_literal([_s37_, new K.closure53(), _s29_, new K.closure54(), _s17_, new K.closure55(), \"$channels\", new K.closure56()], t1, t2)), Q.BuiltInCallable$overloadedFunction(\"hsla\", P.LinkedHashMap_LinkedHashMap$_literal([_s37_, new K.closure57(), _s29_, new K.closure58(), _s17_, new K.closure59(), \"$channels\", new K.closure60()], t1, t2)), K._function4(\"grayscale\", \"$color\", new K.closure61()), K._function4(\"adjust-hue\", \"$color, $degrees\", new K.closure62()), K._function4(\"lighten\", _s15_, new K.closure63()), K._function4(\"darken\", _s15_, new K.closure64()), Q.BuiltInCallable$overloadedFunction(\"saturate\", P.LinkedHashMap_LinkedHashMap$_literal([\"$amount\", new K.closure65(), \"$color, $amount\", new K.closure66()], t1, t2)), K._function4(\"desaturate\", _s15_, new K.closure67()), K._function4(\"opacify\", _s15_, K.color___opacify$closure()), K._function4(\"fade-in\", _s15_, K.color___opacify$closure()), K._function4(\"transparentize\", _s15_, K.color___transparentize$closure()), K._function4(\"fade-out\", _s15_, K.color___transparentize$closure()), Q.BuiltInCallable$overloadedFunction(\"alpha\", P.LinkedHashMap_LinkedHashMap$_literal([\"$color\", new K.closure68(), \"$args...\", new K.closure69()], t1, t2)), K._function4(\"opacity\", \"$color\", new K.closure70()), $.$get$_ieHexStr(), $.$get$_adjust().withName$1(\"adjust-color\"), $.$get$_scale().withName$1(\"scale-color\"), $.$get$_change().withName$1(\"change-color\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module\", \"$get$module\", function() {\n      var _s9_ = \"lightness\",\n        _s10_ = \"saturation\",\n        _s6_ = \"$color\", _s5_ = \"alpha\",\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_legacy_Value_Function_legacy_List_legacy_Value;\n      return Q.BuiltInModule$(\"color\", H.setRuntimeTypeInfo([$.$get$_red(), $.$get$_green(), $.$get$_blue(), $.$get$_mix(), K._function4(\"invert\", \"$color, $weight: 100%\", new K.closure99()), $.$get$_hue(), $.$get$_saturation(), $.$get$_lightness(), $.$get$_complement(), K._removedColorFunction(\"adjust-hue\", \"hue\", false), K._removedColorFunction(\"lighten\", _s9_, false), K._removedColorFunction(\"darken\", _s9_, true), K._removedColorFunction(\"saturate\", _s10_, false), K._removedColorFunction(\"desaturate\", _s10_, true), K._function4(\"grayscale\", _s6_, new K.closure100()), Q.BuiltInCallable$overloadedFunction(\"hwb\", P.LinkedHashMap_LinkedHashMap$_literal([\"$hue, $whiteness, $blackness, $alpha: 1\", new K.closure101(), \"$channels\", new K.closure102()], t1, t2)), K._function4(\"whiteness\", _s6_, new K.closure103()), K._function4(\"blackness\", _s6_, new K.closure104()), K._removedColorFunction(\"opacify\", _s5_, false), K._removedColorFunction(\"fade-in\", _s5_, false), K._removedColorFunction(\"transparentize\", _s5_, true), K._removedColorFunction(\"fade-out\", _s5_, true), Q.BuiltInCallable$overloadedFunction(_s5_, P.LinkedHashMap_LinkedHashMap$_literal([\"$color\", new K.closure105(), \"$args...\", new K.closure106()], t1, t2)), K._function4(\"opacity\", _s6_, new K.closure107()), $.$get$_adjust(), $.$get$_scale(), $.$get$_change(), $.$get$_ieHexStr()], type$.JSArray_legacy_BuiltInCallable), null, null, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_red\", \"$get$_red\", function() {\n      return K._function4(\"red\", \"$color\", new K.closure82());\n    });\n    _lazyOld($, \"_green\", \"$get$_green\", function() {\n      return K._function4(\"green\", \"$color\", new K.closure81());\n    });\n    _lazyOld($, \"_blue\", \"$get$_blue\", function() {\n      return K._function4(\"blue\", \"$color\", new K.closure80());\n    });\n    _lazyOld($, \"_mix\", \"$get$_mix\", function() {\n      return K._function4(\"mix\", \"$color1, $color2, $weight: 50%\", new K.closure79());\n    });\n    _lazyOld($, \"_hue\", \"$get$_hue\", function() {\n      return K._function4(\"hue\", \"$color\", new K.closure78());\n    });\n    _lazyOld($, \"_saturation\", \"$get$_saturation\", function() {\n      return K._function4(\"saturation\", \"$color\", new K.closure77());\n    });\n    _lazyOld($, \"_lightness\", \"$get$_lightness\", function() {\n      return K._function4(\"lightness\", \"$color\", new K.closure76());\n    });\n    _lazyOld($, \"_complement\", \"$get$_complement\", function() {\n      return K._function4(\"complement\", \"$color\", new K.closure75());\n    });\n    _lazyOld($, \"_adjust\", \"$get$_adjust\", function() {\n      return K._function4(\"adjust\", \"$color, $kwargs...\", new K.closure73());\n    });\n    _lazyOld($, \"_scale\", \"$get$_scale\", function() {\n      return K._function4(\"scale\", \"$color, $kwargs...\", new K.closure72());\n    });\n    _lazyOld($, \"_change\", \"$get$_change\", function() {\n      return K._function4(\"change\", \"$color, $kwargs...\", new K.closure71());\n    });\n    _lazyOld($, \"_ieHexStr\", \"$get$_ieHexStr\", function() {\n      return K._function4(\"ie-hex-str\", \"$color\", new K.closure74());\n    });\n    _lazyOld($, \"global0\", \"$get$global1\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_length0(), $.$get$_nth(), $.$get$_setNth(), $.$get$_join(), $.$get$_append0(), $.$get$_zip(), $.$get$_index0(), $.$get$_isBracketed(), $.$get$_separator().withName$1(\"list-separator\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module0\", \"$get$module0\", function() {\n      return Q.BuiltInModule$(\"list\", H.setRuntimeTypeInfo([$.$get$_length0(), $.$get$_nth(), $.$get$_setNth(), $.$get$_join(), $.$get$_append0(), $.$get$_zip(), $.$get$_index0(), $.$get$_isBracketed(), $.$get$_separator()], type$.JSArray_legacy_BuiltInCallable), null, null, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_length\", \"$get$_length0\", function() {\n      return D._function3(\"length\", \"$list\", new D.closure43());\n    });\n    _lazyOld($, \"_nth\", \"$get$_nth\", function() {\n      return D._function3(\"nth\", \"$list, $n\", new D.closure42());\n    });\n    _lazyOld($, \"_setNth\", \"$get$_setNth\", function() {\n      return D._function3(\"set-nth\", \"$list, $n, $value\", new D.closure41());\n    });\n    _lazyOld($, \"_join\", \"$get$_join\", function() {\n      return D._function3(\"join\", string$.x24list1, new D.closure40());\n    });\n    _lazyOld($, \"_append\", \"$get$_append0\", function() {\n      return D._function3(\"append\", \"$list, $val, $separator: auto\", new D.closure39());\n    });\n    _lazyOld($, \"_zip\", \"$get$_zip\", function() {\n      return D._function3(\"zip\", \"$lists...\", new D.closure38());\n    });\n    _lazyOld($, \"_index\", \"$get$_index0\", function() {\n      return D._function3(\"index\", \"$list, $value\", new D.closure37());\n    });\n    _lazyOld($, \"_separator\", \"$get$_separator\", function() {\n      return D._function3(\"separator\", \"$list\", new D.closure35());\n    });\n    _lazyOld($, \"_isBracketed\", \"$get$_isBracketed\", function() {\n      return D._function3(\"is-bracketed\", \"$list\", new D.closure36());\n    });\n    _lazyOld($, \"global1\", \"$get$global2\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_get().withName$1(\"map-get\"), $.$get$_merge().withName$1(\"map-merge\"), $.$get$_remove().withName$1(\"map-remove\"), $.$get$_keys().withName$1(\"map-keys\"), $.$get$_values().withName$1(\"map-values\"), $.$get$_hasKey().withName$1(\"map-has-key\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module1\", \"$get$module1\", function() {\n      return Q.BuiltInModule$(\"map\", H.setRuntimeTypeInfo([$.$get$_get(), $.$get$_set(), $.$get$_merge(), $.$get$_remove(), $.$get$_keys(), $.$get$_values(), $.$get$_hasKey(), $.$get$_deepMerge(), $.$get$_deepRemove()], type$.JSArray_legacy_BuiltInCallable), null, null, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_get\", \"$get$_get\", function() {\n      return A._function2(\"get\", \"$map, $key, $keys...\", new A.closure34());\n    });\n    _lazyOld($, \"_set\", \"$get$_set\", function() {\n      return Q.BuiltInCallable$overloadedFunction(\"set\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map, $key, $value\", new A.closure97(), \"$map, $args...\", new A.closure98()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value));\n    });\n    _lazyOld($, \"_merge\", \"$get$_merge\", function() {\n      return Q.BuiltInCallable$overloadedFunction(\"merge\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map1, $map2\", new A.closure32(), \"$map1, $args...\", new A.closure33()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value));\n    });\n    _lazyOld($, \"_deepMerge\", \"$get$_deepMerge\", function() {\n      return A._function2(\"deep-merge\", \"$map1, $map2\", new A.closure96());\n    });\n    _lazyOld($, \"_deepRemove\", \"$get$_deepRemove\", function() {\n      return A._function2(\"deep-remove\", \"$map, $key, $keys...\", new A.closure95());\n    });\n    _lazyOld($, \"_remove\", \"$get$_remove\", function() {\n      return Q.BuiltInCallable$overloadedFunction(\"remove\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map\", new A.closure30(), \"$map, $key, $keys...\", new A.closure31()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value));\n    });\n    _lazyOld($, \"_keys\", \"$get$_keys\", function() {\n      return A._function2(\"keys\", \"$map\", new A.closure29());\n    });\n    _lazyOld($, \"_values\", \"$get$_values\", function() {\n      return A._function2(\"values\", \"$map\", new A.closure28());\n    });\n    _lazyOld($, \"_hasKey\", \"$get$_hasKey\", function() {\n      return A._function2(\"has-key\", \"$map, $key, $keys...\", new A.closure27());\n    });\n    _lazyOld($, \"global2\", \"$get$global3\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_abs(), $.$get$_ceil(), $.$get$_floor(), $.$get$_max(), $.$get$_min(), $.$get$_percentage(), $.$get$_randomFunction(), $.$get$_round(), $.$get$_unit(), $.$get$_compatible().withName$1(\"comparable\"), $.$get$_isUnitless().withName$1(\"unitless\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module2\", \"$get$module2\", function() {\n      return Q.BuiltInModule$(\"math\", H.setRuntimeTypeInfo([$.$get$_abs(), $.$get$_acos(), $.$get$_asin(), $.$get$_atan(), $.$get$_atan2(), $.$get$_ceil(), $.$get$_clamp(), $.$get$_cos(), $.$get$_compatible(), $.$get$_floor(), $.$get$_hypot(), $.$get$_isUnitless(), $.$get$_log(), $.$get$_max(), $.$get$_min(), $.$get$_percentage(), $.$get$_pow(), $.$get$_randomFunction(), $.$get$_round(), $.$get$_sin(), $.$get$_sqrt(), $.$get$_tan(), $.$get$_unit()], type$.JSArray_legacy_BuiltInCallable), null, P.LinkedHashMap_LinkedHashMap$_literal([\"e\", T.SassNumber$(2.718281828459045, null), \"pi\", T.SassNumber$(3.141592653589793, null)], type$.legacy_String, type$.legacy_Value), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_ceil\", \"$get$_ceil\", function() {\n      return K._numberFunction(\"ceil\", new K.closure25());\n    });\n    _lazyOld($, \"_clamp\", \"$get$_clamp\", function() {\n      return K._function1(\"clamp\", \"$min, $number, $max\", new K.closure90());\n    });\n    _lazyOld($, \"_floor\", \"$get$_floor\", function() {\n      return K._numberFunction(\"floor\", new K.closure24());\n    });\n    _lazyOld($, \"_max\", \"$get$_max\", function() {\n      return K._function1(\"max\", \"$numbers...\", new K.closure23());\n    });\n    _lazyOld($, \"_min\", \"$get$_min\", function() {\n      return K._function1(\"min\", \"$numbers...\", new K.closure22());\n    });\n    _lazyOld($, \"_round\", \"$get$_round\", function() {\n      return K._numberFunction(\"round\", T.number0__fuzzyRound$closure());\n    });\n    _lazyOld($, \"_abs\", \"$get$_abs\", function() {\n      return K._numberFunction(\"abs\", new K.closure26());\n    });\n    _lazyOld($, \"_hypot\", \"$get$_hypot\", function() {\n      return K._function1(\"hypot\", \"$numbers...\", new K.closure88());\n    });\n    _lazyOld($, \"_log\", \"$get$_log\", function() {\n      return K._function1(\"log\", \"$number, $base: null\", new K.closure87());\n    });\n    _lazyOld($, \"_pow\", \"$get$_pow\", function() {\n      return K._function1(\"pow\", \"$base, $exponent\", new K.closure86());\n    });\n    _lazyOld($, \"_sqrt\", \"$get$_sqrt\", function() {\n      return K._function1(\"sqrt\", \"$number\", new K.closure84());\n    });\n    _lazyOld($, \"_acos\", \"$get$_acos\", function() {\n      return K._function1(\"acos\", \"$number\", new K.closure94());\n    });\n    _lazyOld($, \"_asin\", \"$get$_asin\", function() {\n      return K._function1(\"asin\", \"$number\", new K.closure93());\n    });\n    _lazyOld($, \"_atan\", \"$get$_atan\", function() {\n      return K._function1(\"atan\", \"$number\", new K.closure92());\n    });\n    _lazyOld($, \"_atan2\", \"$get$_atan2\", function() {\n      return K._function1(\"atan2\", \"$y, $x\", new K.closure91());\n    });\n    _lazyOld($, \"_cos\", \"$get$_cos\", function() {\n      return K._function1(\"cos\", \"$number\", new K.closure89());\n    });\n    _lazyOld($, \"_sin\", \"$get$_sin\", function() {\n      return K._function1(\"sin\", \"$number\", new K.closure85());\n    });\n    _lazyOld($, \"_tan\", \"$get$_tan\", function() {\n      return K._function1(\"tan\", \"$number\", new K.closure83());\n    });\n    _lazyOld($, \"_compatible\", \"$get$_compatible\", function() {\n      return K._function1(\"compatible\", \"$number1, $number2\", new K.closure18());\n    });\n    _lazyOld($, \"_isUnitless\", \"$get$_isUnitless\", function() {\n      return K._function1(\"is-unitless\", \"$number\", new K.closure17());\n    });\n    _lazyOld($, \"_unit\", \"$get$_unit\", function() {\n      return K._function1(\"unit\", \"$number\", new K.closure19());\n    });\n    _lazyOld($, \"_percentage\", \"$get$_percentage\", function() {\n      return K._function1(\"percentage\", \"$number\", new K.closure21());\n    });\n    _lazyOld($, \"_random\", \"$get$_random0\", function() {\n      return P.Random_Random();\n    });\n    _lazyOld($, \"_randomFunction\", \"$get$_randomFunction\", function() {\n      return K._function1(\"random\", \"$limit: null\", new K.closure20());\n    });\n    _lazyOld($, \"global3\", \"$get$global\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([Q._function5(\"feature-exists\", \"$feature\", new Q.closure108()), Q._function5(\"inspect\", \"$value\", new Q.closure109()), Q._function5(\"type-of\", \"$value\", new Q.closure110()), Q._function5(\"keywords\", \"$args\", new Q.closure111())], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"global4\", \"$get$global4\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_isSuperselector(), $.$get$_simpleSelectors(), $.$get$_parse().withName$1(\"selector-parse\"), $.$get$_nest().withName$1(\"selector-nest\"), $.$get$_append().withName$1(\"selector-append\"), $.$get$_extend().withName$1(\"selector-extend\"), $.$get$_replace().withName$1(\"selector-replace\"), $.$get$_unify().withName$1(\"selector-unify\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module3\", \"$get$module3\", function() {\n      return Q.BuiltInModule$(\"selector\", H.setRuntimeTypeInfo([$.$get$_isSuperselector(), $.$get$_simpleSelectors(), $.$get$_parse(), $.$get$_nest(), $.$get$_append(), $.$get$_extend(), $.$get$_replace(), $.$get$_unify()], type$.JSArray_legacy_BuiltInCallable), null, null, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_nest\", \"$get$_nest\", function() {\n      return T._function0(\"nest\", \"$selectors...\", new T.closure13());\n    });\n    _lazyOld($, \"_append0\", \"$get$_append\", function() {\n      return T._function0(\"append\", \"$selectors...\", new T.closure12());\n    });\n    _lazyOld($, \"_extend\", \"$get$_extend\", function() {\n      return T._function0(\"extend\", \"$selector, $extendee, $extender\", new T.closure11());\n    });\n    _lazyOld($, \"_replace\", \"$get$_replace\", function() {\n      return T._function0(\"replace\", \"$selector, $original, $replacement\", new T.closure10());\n    });\n    _lazyOld($, \"_unify\", \"$get$_unify\", function() {\n      return T._function0(\"unify\", \"$selector1, $selector2\", new T.closure9());\n    });\n    _lazyOld($, \"_isSuperselector\", \"$get$_isSuperselector\", function() {\n      return T._function0(\"is-superselector\", \"$super, $sub\", new T.closure16());\n    });\n    _lazyOld($, \"_simpleSelectors\", \"$get$_simpleSelectors\", function() {\n      return T._function0(\"simple-selectors\", \"$selector\", new T.closure15());\n    });\n    _lazyOld($, \"_parse\", \"$get$_parse\", function() {\n      return T._function0(\"parse\", \"$selector\", new T.closure14());\n    });\n    _lazyOld($, \"_random0\", \"$get$_random\", function() {\n      return P.Random_Random();\n    });\n    _lazyOld($, \"_previousUniqueId\", \"$get$_previousUniqueId\", function() {\n      return $.$get$_random().nextInt$1(H._asIntS(P.pow(36, 6)));\n    });\n    _lazyOld($, \"global5\", \"$get$global5\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_unquote(), $.$get$_quote(), $.$get$_toUpperCase(), $.$get$_toLowerCase(), $.$get$_uniqueId(), $.$get$_length().withName$1(\"str-length\"), $.$get$_insert().withName$1(\"str-insert\"), $.$get$_index().withName$1(\"str-index\"), $.$get$_slice().withName$1(\"str-slice\")], type$.JSArray_legacy_BuiltInCallable), type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"module4\", \"$get$module4\", function() {\n      return Q.BuiltInModule$(\"string\", H.setRuntimeTypeInfo([$.$get$_unquote(), $.$get$_quote(), $.$get$_toUpperCase(), $.$get$_toLowerCase(), $.$get$_length(), $.$get$_insert(), $.$get$_index(), $.$get$_slice(), $.$get$_uniqueId()], type$.JSArray_legacy_BuiltInCallable), null, null, type$.legacy_BuiltInCallable);\n    });\n    _lazyOld($, \"_unquote\", \"$get$_unquote\", function() {\n      return D._function(\"unquote\", \"$string\", new D.closure8());\n    });\n    _lazyOld($, \"_quote\", \"$get$_quote\", function() {\n      return D._function(\"quote\", \"$string\", new D.closure7());\n    });\n    _lazyOld($, \"_length0\", \"$get$_length\", function() {\n      return D._function(\"length\", \"$string\", new D.closure3());\n    });\n    _lazyOld($, \"_insert\", \"$get$_insert\", function() {\n      return D._function(\"insert\", \"$string, $insert, $index\", new D.closure2());\n    });\n    _lazyOld($, \"_index0\", \"$get$_index\", function() {\n      return D._function(\"index\", \"$string, $substring\", new D.closure1());\n    });\n    _lazyOld($, \"_slice\", \"$get$_slice\", function() {\n      return D._function(\"slice\", \"$string, $start-at, $end-at: -1\", new D.closure0());\n    });\n    _lazyOld($, \"_toUpperCase\", \"$get$_toUpperCase\", function() {\n      return D._function(\"to-upper-case\", \"$string\", new D.closure6());\n    });\n    _lazyOld($, \"_toLowerCase\", \"$get$_toLowerCase\", function() {\n      return D._function(\"to-lower-case\", \"$string\", new D.closure5());\n    });\n    _lazyOld($, \"_uniqueId\", \"$get$_uniqueId\", function() {\n      return D._function(\"unique-id\", \"\", new D.closure4());\n    });\n    _lazyOld($, \"stderr\", \"$get$stderr\", function() {\n      return new B.Stderr(J.get$stderr$x(self.process));\n    });\n    _lazyOld($, \"Logger_quiet\", \"$get$Logger_quiet\", function() {\n      return new F._QuietLogger();\n    });\n    _lazyOld($, \"_disallowedFunctionNames\", \"$get$_disallowedFunctionNames\", function() {\n      var t1 = $.$get$globalFunctions();\n      t1 = t1.map$1$1(t1, new Q.closure112(), type$.legacy_String).toSet$0(0);\n      t1.add$1(0, \"if\");\n      t1.remove$1(0, \"rgb\");\n      t1.remove$1(0, \"rgba\");\n      t1.remove$1(0, \"hsl\");\n      t1.remove$1(0, \"hsla\");\n      t1.remove$1(0, \"grayscale\");\n      t1.remove$1(0, \"invert\");\n      t1.remove$1(0, \"alpha\");\n      t1.remove$1(0, \"opacity\");\n      t1.remove$1(0, \"saturate\");\n      return t1;\n    });\n    _lazyOld($, \"epsilon\", \"$get$epsilon\", function() {\n      return P.pow(10, -11);\n    });\n    _lazyOld($, \"_inverseEpsilon\", \"$get$_inverseEpsilon\", function() {\n      return 1 / $.$get$epsilon();\n    });\n    _lazyOld($, \"_noSourceUrl\", \"$get$_noSourceUrl\", function() {\n      return P.Uri_parse(\"-\");\n    });\n    _lazyOld($, \"_conversions\", \"$get$_conversions\", function() {\n      var t1 = type$.legacy_String,\n        t2 = H.findType(\"num*\");\n      return P.LinkedHashMap_LinkedHashMap$_literal([\"in\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 1, \"cm\", 0.39370078740157477, \"pc\", 0.16666666666666666, \"mm\", 0.03937007874015748, \"q\", 0.00984251968503937, \"pt\", 0.013888888888888888, \"px\", 0.010416666666666666], t1, t2), \"cm\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 2.54, \"cm\", 1, \"pc\", 0.42333333333333334, \"mm\", 0.1, \"q\", 0.025, \"pt\", 0.035277777777777776, \"px\", 0.026458333333333334], t1, t2), \"pc\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 6, \"cm\", 2.3622047244094486, \"pc\", 1, \"mm\", 0.2362204724409449, \"q\", 0.05905511811023623, \"pt\", 0.08333333333333333, \"px\", 0.0625], t1, t2), \"mm\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 25.4, \"cm\", 10, \"pc\", 4.233333333333333, \"mm\", 1, \"q\", 0.25, \"pt\", 0.35277777777777775, \"px\", 0.26458333333333334], t1, t2), \"q\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 101.6, \"cm\", 40, \"pc\", 16.933333333333334, \"mm\", 4, \"q\", 1, \"pt\", 1.411111111111111, \"px\", 1.0583333333333333], t1, t2), \"pt\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 72, \"cm\", 28.346456692913385, \"pc\", 12, \"mm\", 2.834645669291339, \"q\", 0.7086614173228347, \"pt\", 1, \"px\", 0.75], t1, t2), \"px\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 96, \"cm\", 37.79527559055118, \"pc\", 16, \"mm\", 3.7795275590551185, \"q\", 0.9448818897637796, \"pt\", 1.3333333333333333, \"px\", 1], t1, t2), \"deg\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 1, \"grad\", 0.9, \"rad\", 57.29577951308232, \"turn\", 360], t1, t2), \"grad\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 1.1111111111111112, \"grad\", 1, \"rad\", 63.66197723675813, \"turn\", 400], t1, t2), \"rad\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 0.017453292519943295, \"grad\", 0.015707963267948967, \"rad\", 1, \"turn\", 6.283185307179586], t1, t2), \"turn\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 0.002777777777777778, \"grad\", 0.0025, \"rad\", 0.15915494309189535, \"turn\", 1], t1, t2), \"s\", P.LinkedHashMap_LinkedHashMap$_literal([\"s\", 1, \"ms\", 0.001], t1, t2), \"ms\", P.LinkedHashMap_LinkedHashMap$_literal([\"s\", 1000, \"ms\", 1], t1, t2), \"Hz\", P.LinkedHashMap_LinkedHashMap$_literal([\"Hz\", 1, \"kHz\", 1000], t1, t2), \"kHz\", P.LinkedHashMap_LinkedHashMap$_literal([\"Hz\", 0.001, \"kHz\", 1], t1, t2), \"dpi\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 1, \"dpcm\", 2.54, \"dppx\", 96], t1, t2), \"dpcm\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 0.39370078740157477, \"dpcm\", 1, \"dppx\", 37.79527559055118], t1, t2), \"dppx\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 0.010416666666666666, \"dpcm\", 0.026458333333333334, \"dppx\", 1], t1, t2)], t1, H.findType(\"Map<String*,num*>*\"));\n    });\n    _lazyOld($, \"_emptyQuoted\", \"$get$_emptyQuoted\", function() {\n      return D.SassString$(\"\", true);\n    });\n    _lazyOld($, \"_emptyUnquoted\", \"$get$_emptyUnquoted\", function() {\n      return D.SassString$(\"\", false);\n    });\n    _lazyOld($, \"MAX_INT32\", \"$get$MAX_INT32\", function() {\n      return P.pow(2, 31) - 1;\n    });\n    _lazyOld($, \"MIN_INT32\", \"$get$MIN_INT32\", function() {\n      return -P.pow(2, 31);\n    });\n    _lazyOld($, \"_vmFrame\", \"$get$_vmFrame\", function() {\n      return P.RegExp_RegExp(\"^#\\\\d+\\\\s+(\\\\S.*) \\\\((.+?)((?::\\\\d+){0,2})\\\\)$\", false);\n    });\n    _lazyOld($, \"_v8Frame\", \"$get$_v8Frame\", function() {\n      return P.RegExp_RegExp(\"^\\\\s*at (?:(\\\\S.*?)(?: \\\\[as [^\\\\]]+\\\\])? \\\\((.*)\\\\)|(.*))$\", false);\n    });\n    _lazyOld($, \"_v8UrlLocation\", \"$get$_v8UrlLocation\", function() {\n      return P.RegExp_RegExp(\"^(.*?):(\\\\d+)(?::(\\\\d+))?$|native$\", false);\n    });\n    _lazyOld($, \"_v8EvalLocation\", \"$get$_v8EvalLocation\", function() {\n      return P.RegExp_RegExp(\"^eval at (?:\\\\S.*?) \\\\((.*)\\\\)(?:, .*?:\\\\d+:\\\\d+)?$\", false);\n    });\n    _lazyOld($, \"_firefoxEvalLocation\", \"$get$_firefoxEvalLocation\", function() {\n      return P.RegExp_RegExp(\"(\\\\S+)@(\\\\S+) line (\\\\d+) >.* (Function|eval):\\\\d+:\\\\d+\", false);\n    });\n    _lazyOld($, \"_firefoxSafariFrame\", \"$get$_firefoxSafariFrame\", function() {\n      return P.RegExp_RegExp(\"^(?:([^@(/]*)(?:\\\\(.*\\\\))?((?:/[^/]*)*)(?:\\\\(.*\\\\))?@)?(.*?):(\\\\d*)(?::(\\\\d*))?$\", false);\n    });\n    _lazyOld($, \"_friendlyFrame\", \"$get$_friendlyFrame\", function() {\n      return P.RegExp_RegExp(\"^(\\\\S+)(?: (\\\\d+)(?::(\\\\d+))?)?\\\\s+([^\\\\d].*)$\", false);\n    });\n    _lazyOld($, \"_asyncBody\", \"$get$_asyncBody\", function() {\n      return P.RegExp_RegExp(\"<(<anonymous closure>|[^>]+)_async_body>\", false);\n    });\n    _lazyOld($, \"_initialDot\", \"$get$_initialDot\", function() {\n      return P.RegExp_RegExp(\"^\\\\.\", false);\n    });\n    _lazyOld($, \"Frame__uriRegExp\", \"$get$Frame__uriRegExp\", function() {\n      return P.RegExp_RegExp(\"^[a-zA-Z][-+.a-zA-Z\\\\d]*://\", false);\n    });\n    _lazyOld($, \"Frame__windowsRegExp\", \"$get$Frame__windowsRegExp\", function() {\n      return P.RegExp_RegExp(\"^([a-zA-Z]:[\\\\\\\\/]|\\\\\\\\\\\\\\\\)\", false);\n    });\n    _lazyOld($, \"_terseRegExp\", \"$get$_terseRegExp\", function() {\n      return P.RegExp_RegExp(\"(-patch)?([/\\\\\\\\].*)?$\", false);\n    });\n    _lazyOld($, \"_v8Trace\", \"$get$_v8Trace\", function() {\n      return P.RegExp_RegExp(\"\\\\n    ?at \", false);\n    });\n    _lazyOld($, \"_v8TraceLine\", \"$get$_v8TraceLine\", function() {\n      return P.RegExp_RegExp(\"    ?at \", false);\n    });\n    _lazyOld($, \"_firefoxEvalTrace\", \"$get$_firefoxEvalTrace\", function() {\n      return P.RegExp_RegExp(\"@\\\\S+ line \\\\d+ >.* (Function|eval):\\\\d+:\\\\d+\", false);\n    });\n    _lazyOld($, \"_firefoxSafariTrace\", \"$get$_firefoxSafariTrace\", function() {\n      return P.RegExp_RegExp(\"^(([.0-9A-Za-z_$/<]|\\\\(.*\\\\))*@)?[^\\\\s]*:\\\\d*$\", true);\n    });\n    _lazyOld($, \"_friendlyTrace\", \"$get$_friendlyTrace\", function() {\n      return P.RegExp_RegExp(\"^[^\\\\s<][^\\\\s]*( \\\\d+(:\\\\d+)?)?[ \\\\t]+[^\\\\s]+$\", true);\n    });\n    _lazyOld($, \"vmChainGap\", \"$get$vmChainGap\", function() {\n      return P.RegExp_RegExp(\"^<asynchronous suspension>\\\\n?$\", true);\n    });\n    _lazyOld($, \"_newlineRegExp\", \"$get$_newlineRegExp\", function() {\n      return P.RegExp_RegExp(\"\\\\r\\\\n?|\\\\n\", false);\n    });\n    _lazyOld($, \"booleanConstructor\", \"$get$booleanConstructor\", function() {\n      return new Z.closure263().call$0();\n    });\n    _lazyOld($, \"_microsoftFilterStart0\", \"$get$_microsoftFilterStart0\", function() {\n      return P.RegExp_RegExp(\"^[a-zA-Z]+\\\\s*=\", false);\n    });\n    _lazyOld($, \"global6\", \"$get$global7\", function() {\n      var _s27_ = \"$red, $green, $blue, $alpha\",\n        _s19_ = \"$red, $green, $blue\",\n        _s37_ = \"$hue, $saturation, $lightness, $alpha\",\n        _s29_ = \"$hue, $saturation, $lightness\",\n        _s17_ = \"$hue, $saturation\",\n        _s15_ = \"$color, $amount\",\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_legacy_Value_Function_legacy_List_legacy_Value_2;\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_red0(), $.$get$_green0(), $.$get$_blue0(), $.$get$_mix0(), Q.BuiltInCallable$overloadedFunction0(\"rgb\", P.LinkedHashMap_LinkedHashMap$_literal([_s27_, new K.closure159(), _s19_, new K.closure160(), \"$color, $alpha\", new K.closure161(), \"$channels\", new K.closure162()], t1, t2)), Q.BuiltInCallable$overloadedFunction0(\"rgba\", P.LinkedHashMap_LinkedHashMap$_literal([_s27_, new K.closure163(), _s19_, new K.closure164(), \"$color, $alpha\", new K.closure165(), \"$channels\", new K.closure166()], t1, t2)), K._function11(\"invert\", \"$color, $weight: 100%\", new K.closure167()), $.$get$_hue0(), $.$get$_saturation0(), $.$get$_lightness0(), $.$get$_complement0(), Q.BuiltInCallable$overloadedFunction0(\"hsl\", P.LinkedHashMap_LinkedHashMap$_literal([_s37_, new K.closure168(), _s29_, new K.closure169(), _s17_, new K.closure170(), \"$channels\", new K.closure171()], t1, t2)), Q.BuiltInCallable$overloadedFunction0(\"hsla\", P.LinkedHashMap_LinkedHashMap$_literal([_s37_, new K.closure172(), _s29_, new K.closure173(), _s17_, new K.closure174(), \"$channels\", new K.closure175()], t1, t2)), K._function11(\"grayscale\", \"$color\", new K.closure176()), K._function11(\"adjust-hue\", \"$color, $degrees\", new K.closure177()), K._function11(\"lighten\", _s15_, new K.closure178()), K._function11(\"darken\", _s15_, new K.closure179()), Q.BuiltInCallable$overloadedFunction0(\"saturate\", P.LinkedHashMap_LinkedHashMap$_literal([\"$amount\", new K.closure180(), \"$color, $amount\", new K.closure181()], t1, t2)), K._function11(\"desaturate\", _s15_, new K.closure182()), K._function11(\"opacify\", _s15_, K.color1___opacify$closure()), K._function11(\"fade-in\", _s15_, K.color1___opacify$closure()), K._function11(\"transparentize\", _s15_, K.color1___transparentize$closure()), K._function11(\"fade-out\", _s15_, K.color1___transparentize$closure()), Q.BuiltInCallable$overloadedFunction0(\"alpha\", P.LinkedHashMap_LinkedHashMap$_literal([\"$color\", new K.closure183(), \"$args...\", new K.closure184()], t1, t2)), K._function11(\"opacity\", \"$color\", new K.closure185()), $.$get$_ieHexStr0(), $.$get$_adjust0().withName$1(\"adjust-color\"), $.$get$_scale0().withName$1(\"scale-color\"), $.$get$_change0().withName$1(\"change-color\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module5\", \"$get$module5\", function() {\n      var _s9_ = \"lightness\",\n        _s10_ = \"saturation\",\n        _s6_ = \"$color\", _s5_ = \"alpha\",\n        t1 = type$.legacy_String,\n        t2 = type$.legacy_legacy_Value_Function_legacy_List_legacy_Value_2;\n      return Q.BuiltInModule$0(\"color\", H.setRuntimeTypeInfo([$.$get$_red0(), $.$get$_green0(), $.$get$_blue0(), $.$get$_mix0(), K._function11(\"invert\", \"$color, $weight: 100%\", new K.closure214()), $.$get$_hue0(), $.$get$_saturation0(), $.$get$_lightness0(), $.$get$_complement0(), K._removedColorFunction0(\"adjust-hue\", \"hue\", false), K._removedColorFunction0(\"lighten\", _s9_, false), K._removedColorFunction0(\"darken\", _s9_, true), K._removedColorFunction0(\"saturate\", _s10_, false), K._removedColorFunction0(\"desaturate\", _s10_, true), K._function11(\"grayscale\", _s6_, new K.closure215()), Q.BuiltInCallable$overloadedFunction0(\"hwb\", P.LinkedHashMap_LinkedHashMap$_literal([\"$hue, $whiteness, $blackness, $alpha: 1\", new K.closure216(), \"$channels\", new K.closure217()], t1, t2)), K._function11(\"whiteness\", _s6_, new K.closure218()), K._function11(\"blackness\", _s6_, new K.closure219()), K._removedColorFunction0(\"opacify\", _s5_, false), K._removedColorFunction0(\"fade-in\", _s5_, false), K._removedColorFunction0(\"transparentize\", _s5_, true), K._removedColorFunction0(\"fade-out\", _s5_, true), Q.BuiltInCallable$overloadedFunction0(_s5_, P.LinkedHashMap_LinkedHashMap$_literal([\"$color\", new K.closure220(), \"$args...\", new K.closure221()], t1, t2)), K._function11(\"opacity\", _s6_, new K.closure222()), $.$get$_adjust0(), $.$get$_scale0(), $.$get$_change0(), $.$get$_ieHexStr0()], type$.JSArray_legacy_BuiltInCallable_2), null, null, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_red0\", \"$get$_red0\", function() {\n      return K._function11(\"red\", \"$color\", new K.closure197());\n    });\n    _lazyOld($, \"_green0\", \"$get$_green0\", function() {\n      return K._function11(\"green\", \"$color\", new K.closure196());\n    });\n    _lazyOld($, \"_blue0\", \"$get$_blue0\", function() {\n      return K._function11(\"blue\", \"$color\", new K.closure195());\n    });\n    _lazyOld($, \"_mix0\", \"$get$_mix0\", function() {\n      return K._function11(\"mix\", \"$color1, $color2, $weight: 50%\", new K.closure194());\n    });\n    _lazyOld($, \"_hue0\", \"$get$_hue0\", function() {\n      return K._function11(\"hue\", \"$color\", new K.closure193());\n    });\n    _lazyOld($, \"_saturation0\", \"$get$_saturation0\", function() {\n      return K._function11(\"saturation\", \"$color\", new K.closure192());\n    });\n    _lazyOld($, \"_lightness0\", \"$get$_lightness0\", function() {\n      return K._function11(\"lightness\", \"$color\", new K.closure191());\n    });\n    _lazyOld($, \"_complement0\", \"$get$_complement0\", function() {\n      return K._function11(\"complement\", \"$color\", new K.closure190());\n    });\n    _lazyOld($, \"_adjust0\", \"$get$_adjust0\", function() {\n      return K._function11(\"adjust\", \"$color, $kwargs...\", new K.closure188());\n    });\n    _lazyOld($, \"_scale0\", \"$get$_scale0\", function() {\n      return K._function11(\"scale\", \"$color, $kwargs...\", new K.closure187());\n    });\n    _lazyOld($, \"_change0\", \"$get$_change0\", function() {\n      return K._function11(\"change\", \"$color, $kwargs...\", new K.closure186());\n    });\n    _lazyOld($, \"_ieHexStr0\", \"$get$_ieHexStr0\", function() {\n      return K._function11(\"ie-hex-str\", \"$color\", new K.closure189());\n    });\n    _lazyOld($, \"colorConstructor\", \"$get$colorConstructor\", function() {\n      return B.createClass(\"SassColor\", new K.closure253(), P.LinkedHashMap_LinkedHashMap$_literal([\"getR\", new K.closure254(), \"getG\", new K.closure255(), \"getB\", new K.closure256(), \"getA\", new K.closure257(), \"setR\", new K.closure258(), \"setG\", new K.closure259(), \"setB\", new K.closure260(), \"setA\", new K.closure261(), \"toString\", new K.closure262()], type$.legacy_String, type$.legacy_Function));\n    });\n    _lazyOld($, \"colorsByName0\", \"$get$colorsByName0\", function() {\n      var _null = null;\n      return P.LinkedHashMap_LinkedHashMap$_literal([\"yellowgreen\", K.SassColor$rgb0(154, 205, 50, _null, _null), \"yellow\", K.SassColor$rgb0(255, 255, 0, _null, _null), \"whitesmoke\", K.SassColor$rgb0(245, 245, 245, _null, _null), \"white\", K.SassColor$rgb0(255, 255, 255, _null, _null), \"wheat\", K.SassColor$rgb0(245, 222, 179, _null, _null), \"violet\", K.SassColor$rgb0(238, 130, 238, _null, _null), \"turquoise\", K.SassColor$rgb0(64, 224, 208, _null, _null), \"transparent\", K.SassColor$rgb0(0, 0, 0, 0, _null), \"tomato\", K.SassColor$rgb0(255, 99, 71, _null, _null), \"thistle\", K.SassColor$rgb0(216, 191, 216, _null, _null), \"teal\", K.SassColor$rgb0(0, 128, 128, _null, _null), \"tan\", K.SassColor$rgb0(210, 180, 140, _null, _null), \"steelblue\", K.SassColor$rgb0(70, 130, 180, _null, _null), \"springgreen\", K.SassColor$rgb0(0, 255, 127, _null, _null), \"snow\", K.SassColor$rgb0(255, 250, 250, _null, _null), \"slategrey\", K.SassColor$rgb0(112, 128, 144, _null, _null), \"slategray\", K.SassColor$rgb0(112, 128, 144, _null, _null), \"slateblue\", K.SassColor$rgb0(106, 90, 205, _null, _null), \"skyblue\", K.SassColor$rgb0(135, 206, 235, _null, _null), \"silver\", K.SassColor$rgb0(192, 192, 192, _null, _null), \"sienna\", K.SassColor$rgb0(160, 82, 45, _null, _null), \"seashell\", K.SassColor$rgb0(255, 245, 238, _null, _null), \"seagreen\", K.SassColor$rgb0(46, 139, 87, _null, _null), \"sandybrown\", K.SassColor$rgb0(244, 164, 96, _null, _null), \"salmon\", K.SassColor$rgb0(250, 128, 114, _null, _null), \"saddlebrown\", K.SassColor$rgb0(139, 69, 19, _null, _null), \"royalblue\", K.SassColor$rgb0(65, 105, 225, _null, _null), \"rosybrown\", K.SassColor$rgb0(188, 143, 143, _null, _null), \"red\", K.SassColor$rgb0(255, 0, 0, _null, _null), \"rebeccapurple\", K.SassColor$rgb0(102, 51, 153, _null, _null), \"purple\", K.SassColor$rgb0(128, 0, 128, _null, _null), \"powderblue\", K.SassColor$rgb0(176, 224, 230, _null, _null), \"plum\", K.SassColor$rgb0(221, 160, 221, _null, _null), \"pink\", K.SassColor$rgb0(255, 192, 203, _null, _null), \"peru\", K.SassColor$rgb0(205, 133, 63, _null, _null), \"peachpuff\", K.SassColor$rgb0(255, 218, 185, _null, _null), \"papayawhip\", K.SassColor$rgb0(255, 239, 213, _null, _null), \"palevioletred\", K.SassColor$rgb0(219, 112, 147, _null, _null), \"paleturquoise\", K.SassColor$rgb0(175, 238, 238, _null, _null), \"palegreen\", K.SassColor$rgb0(152, 251, 152, _null, _null), \"palegoldenrod\", K.SassColor$rgb0(238, 232, 170, _null, _null), \"orchid\", K.SassColor$rgb0(218, 112, 214, _null, _null), \"orangered\", K.SassColor$rgb0(255, 69, 0, _null, _null), \"orange\", K.SassColor$rgb0(255, 165, 0, _null, _null), \"olivedrab\", K.SassColor$rgb0(107, 142, 35, _null, _null), \"olive\", K.SassColor$rgb0(128, 128, 0, _null, _null), \"oldlace\", K.SassColor$rgb0(253, 245, 230, _null, _null), \"navy\", K.SassColor$rgb0(0, 0, 128, _null, _null), \"navajowhite\", K.SassColor$rgb0(255, 222, 173, _null, _null), \"moccasin\", K.SassColor$rgb0(255, 228, 181, _null, _null), \"mistyrose\", K.SassColor$rgb0(255, 228, 225, _null, _null), \"mintcream\", K.SassColor$rgb0(245, 255, 250, _null, _null), \"midnightblue\", K.SassColor$rgb0(25, 25, 112, _null, _null), \"mediumvioletred\", K.SassColor$rgb0(199, 21, 133, _null, _null), \"mediumturquoise\", K.SassColor$rgb0(72, 209, 204, _null, _null), \"mediumspringgreen\", K.SassColor$rgb0(0, 250, 154, _null, _null), \"mediumslateblue\", K.SassColor$rgb0(123, 104, 238, _null, _null), \"mediumseagreen\", K.SassColor$rgb0(60, 179, 113, _null, _null), \"mediumpurple\", K.SassColor$rgb0(147, 112, 219, _null, _null), \"mediumorchid\", K.SassColor$rgb0(186, 85, 211, _null, _null), \"mediumblue\", K.SassColor$rgb0(0, 0, 205, _null, _null), \"mediumaquamarine\", K.SassColor$rgb0(102, 205, 170, _null, _null), \"maroon\", K.SassColor$rgb0(128, 0, 0, _null, _null), \"magenta\", K.SassColor$rgb0(255, 0, 255, _null, _null), \"linen\", K.SassColor$rgb0(250, 240, 230, _null, _null), \"limegreen\", K.SassColor$rgb0(50, 205, 50, _null, _null), \"lime\", K.SassColor$rgb0(0, 255, 0, _null, _null), \"lightyellow\", K.SassColor$rgb0(255, 255, 224, _null, _null), \"lightsteelblue\", K.SassColor$rgb0(176, 196, 222, _null, _null), \"lightslategrey\", K.SassColor$rgb0(119, 136, 153, _null, _null), \"lightslategray\", K.SassColor$rgb0(119, 136, 153, _null, _null), \"lightskyblue\", K.SassColor$rgb0(135, 206, 250, _null, _null), \"lightseagreen\", K.SassColor$rgb0(32, 178, 170, _null, _null), \"lightsalmon\", K.SassColor$rgb0(255, 160, 122, _null, _null), \"lightpink\", K.SassColor$rgb0(255, 182, 193, _null, _null), \"lightgrey\", K.SassColor$rgb0(211, 211, 211, _null, _null), \"lightgreen\", K.SassColor$rgb0(144, 238, 144, _null, _null), \"lightgray\", K.SassColor$rgb0(211, 211, 211, _null, _null), \"lightgoldenrodyellow\", K.SassColor$rgb0(250, 250, 210, _null, _null), \"lightcyan\", K.SassColor$rgb0(224, 255, 255, _null, _null), \"lightcoral\", K.SassColor$rgb0(240, 128, 128, _null, _null), \"lightblue\", K.SassColor$rgb0(173, 216, 230, _null, _null), \"lemonchiffon\", K.SassColor$rgb0(255, 250, 205, _null, _null), \"lawngreen\", K.SassColor$rgb0(124, 252, 0, _null, _null), \"lavenderblush\", K.SassColor$rgb0(255, 240, 245, _null, _null), \"lavender\", K.SassColor$rgb0(230, 230, 250, _null, _null), \"khaki\", K.SassColor$rgb0(240, 230, 140, _null, _null), \"ivory\", K.SassColor$rgb0(255, 255, 240, _null, _null), \"indigo\", K.SassColor$rgb0(75, 0, 130, _null, _null), \"indianred\", K.SassColor$rgb0(205, 92, 92, _null, _null), \"hotpink\", K.SassColor$rgb0(255, 105, 180, _null, _null), \"honeydew\", K.SassColor$rgb0(240, 255, 240, _null, _null), \"grey\", K.SassColor$rgb0(128, 128, 128, _null, _null), \"greenyellow\", K.SassColor$rgb0(173, 255, 47, _null, _null), \"green\", K.SassColor$rgb0(0, 128, 0, _null, _null), \"gray\", K.SassColor$rgb0(128, 128, 128, _null, _null), \"goldenrod\", K.SassColor$rgb0(218, 165, 32, _null, _null), \"gold\", K.SassColor$rgb0(255, 215, 0, _null, _null), \"ghostwhite\", K.SassColor$rgb0(248, 248, 255, _null, _null), \"gainsboro\", K.SassColor$rgb0(220, 220, 220, _null, _null), \"fuchsia\", K.SassColor$rgb0(255, 0, 255, _null, _null), \"forestgreen\", K.SassColor$rgb0(34, 139, 34, _null, _null), \"floralwhite\", K.SassColor$rgb0(255, 250, 240, _null, _null), \"firebrick\", K.SassColor$rgb0(178, 34, 34, _null, _null), \"dodgerblue\", K.SassColor$rgb0(30, 144, 255, _null, _null), \"dimgrey\", K.SassColor$rgb0(105, 105, 105, _null, _null), \"dimgray\", K.SassColor$rgb0(105, 105, 105, _null, _null), \"deepskyblue\", K.SassColor$rgb0(0, 191, 255, _null, _null), \"deeppink\", K.SassColor$rgb0(255, 20, 147, _null, _null), \"darkviolet\", K.SassColor$rgb0(148, 0, 211, _null, _null), \"darkturquoise\", K.SassColor$rgb0(0, 206, 209, _null, _null), \"darkslategrey\", K.SassColor$rgb0(47, 79, 79, _null, _null), \"darkslategray\", K.SassColor$rgb0(47, 79, 79, _null, _null), \"darkslateblue\", K.SassColor$rgb0(72, 61, 139, _null, _null), \"darkseagreen\", K.SassColor$rgb0(143, 188, 143, _null, _null), \"darksalmon\", K.SassColor$rgb0(233, 150, 122, _null, _null), \"darkred\", K.SassColor$rgb0(139, 0, 0, _null, _null), \"darkorchid\", K.SassColor$rgb0(153, 50, 204, _null, _null), \"darkorange\", K.SassColor$rgb0(255, 140, 0, _null, _null), \"darkolivegreen\", K.SassColor$rgb0(85, 107, 47, _null, _null), \"darkmagenta\", K.SassColor$rgb0(139, 0, 139, _null, _null), \"darkkhaki\", K.SassColor$rgb0(189, 183, 107, _null, _null), \"darkgrey\", K.SassColor$rgb0(169, 169, 169, _null, _null), \"darkgreen\", K.SassColor$rgb0(0, 100, 0, _null, _null), \"darkgray\", K.SassColor$rgb0(169, 169, 169, _null, _null), \"darkgoldenrod\", K.SassColor$rgb0(184, 134, 11, _null, _null), \"darkcyan\", K.SassColor$rgb0(0, 139, 139, _null, _null), \"darkblue\", K.SassColor$rgb0(0, 0, 139, _null, _null), \"cyan\", K.SassColor$rgb0(0, 255, 255, _null, _null), \"crimson\", K.SassColor$rgb0(220, 20, 60, _null, _null), \"cornsilk\", K.SassColor$rgb0(255, 248, 220, _null, _null), \"cornflowerblue\", K.SassColor$rgb0(100, 149, 237, _null, _null), \"coral\", K.SassColor$rgb0(255, 127, 80, _null, _null), \"chocolate\", K.SassColor$rgb0(210, 105, 30, _null, _null), \"chartreuse\", K.SassColor$rgb0(127, 255, 0, _null, _null), \"cadetblue\", K.SassColor$rgb0(95, 158, 160, _null, _null), \"burlywood\", K.SassColor$rgb0(222, 184, 135, _null, _null), \"brown\", K.SassColor$rgb0(165, 42, 42, _null, _null), \"blueviolet\", K.SassColor$rgb0(138, 43, 226, _null, _null), \"blue\", K.SassColor$rgb0(0, 0, 255, _null, _null), \"blanchedalmond\", K.SassColor$rgb0(255, 235, 205, _null, _null), \"black\", K.SassColor$rgb0(0, 0, 0, _null, _null), \"bisque\", K.SassColor$rgb0(255, 228, 196, _null, _null), \"beige\", K.SassColor$rgb0(245, 245, 220, _null, _null), \"azure\", K.SassColor$rgb0(240, 255, 255, _null, _null), \"aquamarine\", K.SassColor$rgb0(127, 255, 212, _null, _null), \"aqua\", K.SassColor$rgb0(0, 255, 255, _null, _null), \"antiquewhite\", K.SassColor$rgb0(250, 235, 215, _null, _null), \"aliceblue\", K.SassColor$rgb0(240, 248, 255, _null, _null)], type$.legacy_String, type$.legacy_SassColor_2);\n    });\n    _lazyOld($, \"namesByColor0\", \"$get$namesByColor0\", function() {\n      var t2, t3,\n        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.legacy_SassColor_2, type$.legacy_String);\n      for (t2 = $.$get$colorsByName0(), t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {\n        t3 = t2.get$current(t2);\n        t1.$indexSet(0, t3.value, t3.key);\n      }\n      return t1;\n    });\n    _lazyOld($, \"_disallowedFunctionNames0\", \"$get$_disallowedFunctionNames0\", function() {\n      var t1 = $.$get$globalFunctions0();\n      t1 = t1.map$1$1(t1, new Q.closure227(), type$.legacy_String).toSet$0(0);\n      t1.add$1(0, \"if\");\n      t1.remove$1(0, \"rgb\");\n      t1.remove$1(0, \"rgba\");\n      t1.remove$1(0, \"hsl\");\n      t1.remove$1(0, \"hsla\");\n      t1.remove$1(0, \"grayscale\");\n      t1.remove$1(0, \"invert\");\n      t1.remove$1(0, \"alpha\");\n      t1.remove$1(0, \"opacity\");\n      t1.remove$1(0, \"saturate\");\n      return t1;\n    });\n    _lazyOld($, \"globalFunctions0\", \"$get$globalFunctions0\", function() {\n      var t2,\n        t1 = H.setRuntimeTypeInfo([], type$.JSArray_legacy_BuiltInCallable_2);\n      for (t2 = $.$get$global7(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global8(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global9(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global10(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global11(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global12(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      for (t2 = $.$get$global6(), t2 = t2.get$iterator(t2); t2.moveNext$0();)\n        t1.push(t2.get$current(t2));\n      t1.push(Q.BuiltInCallable$function0(\"if\", \"$condition, $if-true, $if-false\", new Y.closure114(), null));\n      return P.UnmodifiableListView$(t1, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"coreModules0\", \"$get$coreModules0\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$module5(), $.$get$module6(), $.$get$module7(), $.$get$module8(), $.$get$module9(), $.$get$module10()], type$.JSArray_legacy_BuiltInModule_legacy_BuiltInCallable_2), H.findType(\"BuiltInModule0<BuiltInCallable0*>*\"));\n    });\n    _lazyOld($, \"IfExpression_declaration0\", \"$get$IfExpression_declaration0\", function() {\n      return B.ArgumentDeclaration_ArgumentDeclaration$parse0(string$.x40funct, null);\n    });\n    _lazyOld($, \"global7\", \"$get$global8\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_length2(), $.$get$_nth0(), $.$get$_setNth0(), $.$get$_join0(), $.$get$_append2(), $.$get$_zip0(), $.$get$_index2(), $.$get$_isBracketed0(), $.$get$_separator0().withName$1(\"list-separator\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module6\", \"$get$module6\", function() {\n      return Q.BuiltInModule$0(\"list\", H.setRuntimeTypeInfo([$.$get$_length2(), $.$get$_nth0(), $.$get$_setNth0(), $.$get$_join0(), $.$get$_append2(), $.$get$_zip0(), $.$get$_index2(), $.$get$_isBracketed0(), $.$get$_separator0()], type$.JSArray_legacy_BuiltInCallable_2), null, null, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_length1\", \"$get$_length2\", function() {\n      return D._function10(\"length\", \"$list\", new D.closure158());\n    });\n    _lazyOld($, \"_nth0\", \"$get$_nth0\", function() {\n      return D._function10(\"nth\", \"$list, $n\", new D.closure157());\n    });\n    _lazyOld($, \"_setNth0\", \"$get$_setNth0\", function() {\n      return D._function10(\"set-nth\", \"$list, $n, $value\", new D.closure156());\n    });\n    _lazyOld($, \"_join0\", \"$get$_join0\", function() {\n      return D._function10(\"join\", string$.x24list1, new D.closure155());\n    });\n    _lazyOld($, \"_append1\", \"$get$_append2\", function() {\n      return D._function10(\"append\", \"$list, $val, $separator: auto\", new D.closure154());\n    });\n    _lazyOld($, \"_zip0\", \"$get$_zip0\", function() {\n      return D._function10(\"zip\", \"$lists...\", new D.closure153());\n    });\n    _lazyOld($, \"_index1\", \"$get$_index2\", function() {\n      return D._function10(\"index\", \"$list, $value\", new D.closure152());\n    });\n    _lazyOld($, \"_separator0\", \"$get$_separator0\", function() {\n      return D._function10(\"separator\", \"$list\", new D.closure150());\n    });\n    _lazyOld($, \"_isBracketed0\", \"$get$_isBracketed0\", function() {\n      return D._function10(\"is-bracketed\", \"$list\", new D.closure151());\n    });\n    _lazyOld($, \"listConstructor\", \"$get$listConstructor\", function() {\n      return B.createClass(\"SassList\", new D.closure246(), P.LinkedHashMap_LinkedHashMap$_literal([\"getValue\", new D.closure247(), \"setValue\", new D.closure248(), \"getSeparator\", new D.closure249(), \"setSeparator\", new D.closure250(), \"getLength\", new D.closure251(), \"toString\", new D.closure252()], type$.legacy_String, type$.legacy_Function));\n    });\n    _lazyOld($, \"global8\", \"$get$global9\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_get0().withName$1(\"map-get\"), $.$get$_merge0().withName$1(\"map-merge\"), $.$get$_remove0().withName$1(\"map-remove\"), $.$get$_keys0().withName$1(\"map-keys\"), $.$get$_values0().withName$1(\"map-values\"), $.$get$_hasKey0().withName$1(\"map-has-key\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module7\", \"$get$module7\", function() {\n      return Q.BuiltInModule$0(\"map\", H.setRuntimeTypeInfo([$.$get$_get0(), $.$get$_set0(), $.$get$_merge0(), $.$get$_remove0(), $.$get$_keys0(), $.$get$_values0(), $.$get$_hasKey0(), $.$get$_deepMerge0(), $.$get$_deepRemove0()], type$.JSArray_legacy_BuiltInCallable_2), null, null, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_get0\", \"$get$_get0\", function() {\n      return A._function9(\"get\", \"$map, $key, $keys...\", new A.closure149());\n    });\n    _lazyOld($, \"_set0\", \"$get$_set0\", function() {\n      return Q.BuiltInCallable$overloadedFunction0(\"set\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map, $key, $value\", new A.closure212(), \"$map, $args...\", new A.closure213()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    });\n    _lazyOld($, \"_merge0\", \"$get$_merge0\", function() {\n      return Q.BuiltInCallable$overloadedFunction0(\"merge\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map1, $map2\", new A.closure147(), \"$map1, $args...\", new A.closure148()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    });\n    _lazyOld($, \"_deepMerge0\", \"$get$_deepMerge0\", function() {\n      return A._function9(\"deep-merge\", \"$map1, $map2\", new A.closure211());\n    });\n    _lazyOld($, \"_deepRemove0\", \"$get$_deepRemove0\", function() {\n      return A._function9(\"deep-remove\", \"$map, $key, $keys...\", new A.closure210());\n    });\n    _lazyOld($, \"_remove0\", \"$get$_remove0\", function() {\n      return Q.BuiltInCallable$overloadedFunction0(\"remove\", P.LinkedHashMap_LinkedHashMap$_literal([\"$map\", new A.closure145(), \"$map, $key, $keys...\", new A.closure146()], type$.legacy_String, type$.legacy_legacy_Value_Function_legacy_List_legacy_Value_2));\n    });\n    _lazyOld($, \"_keys0\", \"$get$_keys0\", function() {\n      return A._function9(\"keys\", \"$map\", new A.closure144());\n    });\n    _lazyOld($, \"_values0\", \"$get$_values0\", function() {\n      return A._function9(\"values\", \"$map\", new A.closure143());\n    });\n    _lazyOld($, \"_hasKey0\", \"$get$_hasKey0\", function() {\n      return A._function9(\"has-key\", \"$map, $key, $keys...\", new A.closure142());\n    });\n    _lazyOld($, \"mapConstructor\", \"$get$mapConstructor\", function() {\n      return B.createClass(\"SassMap\", new A.closure239(), P.LinkedHashMap_LinkedHashMap$_literal([\"getKey\", new A.closure240(), \"getValue\", new A.closure241(), \"getLength\", new A.closure242(), \"setKey\", new A.closure243(), \"setValue\", new A.closure244(), \"toString\", new A.closure245()], type$.legacy_String, type$.legacy_Function));\n    });\n    _lazyOld($, \"global9\", \"$get$global10\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_abs0(), $.$get$_ceil0(), $.$get$_floor0(), $.$get$_max0(), $.$get$_min0(), $.$get$_percentage0(), $.$get$_randomFunction0(), $.$get$_round0(), $.$get$_unit0(), $.$get$_compatible0().withName$1(\"comparable\"), $.$get$_isUnitless0().withName$1(\"unitless\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module8\", \"$get$module8\", function() {\n      return Q.BuiltInModule$0(\"math\", H.setRuntimeTypeInfo([$.$get$_abs0(), $.$get$_acos0(), $.$get$_asin0(), $.$get$_atan0(), $.$get$_atan20(), $.$get$_ceil0(), $.$get$_clamp0(), $.$get$_cos0(), $.$get$_compatible0(), $.$get$_floor0(), $.$get$_hypot0(), $.$get$_isUnitless0(), $.$get$_log0(), $.$get$_max0(), $.$get$_min0(), $.$get$_percentage0(), $.$get$_pow0(), $.$get$_randomFunction0(), $.$get$_round0(), $.$get$_sin0(), $.$get$_sqrt0(), $.$get$_tan0(), $.$get$_unit0()], type$.JSArray_legacy_BuiltInCallable_2), null, P.LinkedHashMap_LinkedHashMap$_literal([\"e\", T.SassNumber$0(2.718281828459045, null), \"pi\", T.SassNumber$0(3.141592653589793, null)], type$.legacy_String, type$.legacy_Value_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_ceil0\", \"$get$_ceil0\", function() {\n      return K._numberFunction0(\"ceil\", new K.closure140());\n    });\n    _lazyOld($, \"_clamp0\", \"$get$_clamp0\", function() {\n      return K._function8(\"clamp\", \"$min, $number, $max\", new K.closure205());\n    });\n    _lazyOld($, \"_floor0\", \"$get$_floor0\", function() {\n      return K._numberFunction0(\"floor\", new K.closure139());\n    });\n    _lazyOld($, \"_max0\", \"$get$_max0\", function() {\n      return K._function8(\"max\", \"$numbers...\", new K.closure138());\n    });\n    _lazyOld($, \"_min0\", \"$get$_min0\", function() {\n      return K._function8(\"min\", \"$numbers...\", new K.closure137());\n    });\n    _lazyOld($, \"_round0\", \"$get$_round0\", function() {\n      return K._numberFunction0(\"round\", T.number2__fuzzyRound$closure());\n    });\n    _lazyOld($, \"_abs0\", \"$get$_abs0\", function() {\n      return K._numberFunction0(\"abs\", new K.closure141());\n    });\n    _lazyOld($, \"_hypot0\", \"$get$_hypot0\", function() {\n      return K._function8(\"hypot\", \"$numbers...\", new K.closure203());\n    });\n    _lazyOld($, \"_log0\", \"$get$_log0\", function() {\n      return K._function8(\"log\", \"$number, $base: null\", new K.closure202());\n    });\n    _lazyOld($, \"_pow0\", \"$get$_pow0\", function() {\n      return K._function8(\"pow\", \"$base, $exponent\", new K.closure201());\n    });\n    _lazyOld($, \"_sqrt0\", \"$get$_sqrt0\", function() {\n      return K._function8(\"sqrt\", \"$number\", new K.closure199());\n    });\n    _lazyOld($, \"_acos0\", \"$get$_acos0\", function() {\n      return K._function8(\"acos\", \"$number\", new K.closure209());\n    });\n    _lazyOld($, \"_asin0\", \"$get$_asin0\", function() {\n      return K._function8(\"asin\", \"$number\", new K.closure208());\n    });\n    _lazyOld($, \"_atan0\", \"$get$_atan0\", function() {\n      return K._function8(\"atan\", \"$number\", new K.closure207());\n    });\n    _lazyOld($, \"_atan20\", \"$get$_atan20\", function() {\n      return K._function8(\"atan2\", \"$y, $x\", new K.closure206());\n    });\n    _lazyOld($, \"_cos0\", \"$get$_cos0\", function() {\n      return K._function8(\"cos\", \"$number\", new K.closure204());\n    });\n    _lazyOld($, \"_sin0\", \"$get$_sin0\", function() {\n      return K._function8(\"sin\", \"$number\", new K.closure200());\n    });\n    _lazyOld($, \"_tan0\", \"$get$_tan0\", function() {\n      return K._function8(\"tan\", \"$number\", new K.closure198());\n    });\n    _lazyOld($, \"_compatible0\", \"$get$_compatible0\", function() {\n      return K._function8(\"compatible\", \"$number1, $number2\", new K.closure133());\n    });\n    _lazyOld($, \"_isUnitless0\", \"$get$_isUnitless0\", function() {\n      return K._function8(\"is-unitless\", \"$number\", new K.closure132());\n    });\n    _lazyOld($, \"_unit0\", \"$get$_unit0\", function() {\n      return K._function8(\"unit\", \"$number\", new K.closure134());\n    });\n    _lazyOld($, \"_percentage0\", \"$get$_percentage0\", function() {\n      return K._function8(\"percentage\", \"$number\", new K.closure136());\n    });\n    _lazyOld($, \"_random1\", \"$get$_random2\", function() {\n      return P.Random_Random();\n    });\n    _lazyOld($, \"_randomFunction0\", \"$get$_randomFunction0\", function() {\n      return K._function8(\"random\", \"$limit: null\", new K.closure135());\n    });\n    _lazyOld($, \"global10\", \"$get$global6\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([Q._function12(\"feature-exists\", \"$feature\", new Q.closure223()), Q._function12(\"inspect\", \"$value\", new Q.closure224()), Q._function12(\"type-of\", \"$value\", new Q.closure225()), Q._function12(\"keywords\", \"$args\", new Q.closure226())], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"stderr0\", \"$get$stderr0\", function() {\n      return new B.Stderr0(J.get$stderr$x(self.process));\n    });\n    _lazyOld($, \"nullConstructor\", \"$get$nullConstructor\", function() {\n      return new O.closure238().call$0();\n    });\n    _lazyOld($, \"epsilon0\", \"$get$epsilon0\", function() {\n      return P.pow(10, -11);\n    });\n    _lazyOld($, \"_inverseEpsilon0\", \"$get$_inverseEpsilon0\", function() {\n      return 1 / $.$get$epsilon0();\n    });\n    _lazyOld($, \"numberConstructor\", \"$get$numberConstructor\", function() {\n      return B.createClass(\"SassNumber\", new T.closure232(), P.LinkedHashMap_LinkedHashMap$_literal([\"getValue\", new T.closure233(), \"setValue\", new T.closure234(), \"getUnit\", new T.closure235(), \"setUnit\", new T.closure236(), \"toString\", new T.closure237()], type$.legacy_String, type$.legacy_Function));\n    });\n    _lazyOld($, \"_conversions0\", \"$get$_conversions0\", function() {\n      var t1 = type$.legacy_String,\n        t2 = H.findType(\"num*\");\n      return P.LinkedHashMap_LinkedHashMap$_literal([\"in\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 1, \"cm\", 0.39370078740157477, \"pc\", 0.16666666666666666, \"mm\", 0.03937007874015748, \"q\", 0.00984251968503937, \"pt\", 0.013888888888888888, \"px\", 0.010416666666666666], t1, t2), \"cm\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 2.54, \"cm\", 1, \"pc\", 0.42333333333333334, \"mm\", 0.1, \"q\", 0.025, \"pt\", 0.035277777777777776, \"px\", 0.026458333333333334], t1, t2), \"pc\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 6, \"cm\", 2.3622047244094486, \"pc\", 1, \"mm\", 0.2362204724409449, \"q\", 0.05905511811023623, \"pt\", 0.08333333333333333, \"px\", 0.0625], t1, t2), \"mm\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 25.4, \"cm\", 10, \"pc\", 4.233333333333333, \"mm\", 1, \"q\", 0.25, \"pt\", 0.35277777777777775, \"px\", 0.26458333333333334], t1, t2), \"q\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 101.6, \"cm\", 40, \"pc\", 16.933333333333334, \"mm\", 4, \"q\", 1, \"pt\", 1.411111111111111, \"px\", 1.0583333333333333], t1, t2), \"pt\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 72, \"cm\", 28.346456692913385, \"pc\", 12, \"mm\", 2.834645669291339, \"q\", 0.7086614173228347, \"pt\", 1, \"px\", 0.75], t1, t2), \"px\", P.LinkedHashMap_LinkedHashMap$_literal([\"in\", 96, \"cm\", 37.79527559055118, \"pc\", 16, \"mm\", 3.7795275590551185, \"q\", 0.9448818897637796, \"pt\", 1.3333333333333333, \"px\", 1], t1, t2), \"deg\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 1, \"grad\", 0.9, \"rad\", 57.29577951308232, \"turn\", 360], t1, t2), \"grad\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 1.1111111111111112, \"grad\", 1, \"rad\", 63.66197723675813, \"turn\", 400], t1, t2), \"rad\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 0.017453292519943295, \"grad\", 0.015707963267948967, \"rad\", 1, \"turn\", 6.283185307179586], t1, t2), \"turn\", P.LinkedHashMap_LinkedHashMap$_literal([\"deg\", 0.002777777777777778, \"grad\", 0.0025, \"rad\", 0.15915494309189535, \"turn\", 1], t1, t2), \"s\", P.LinkedHashMap_LinkedHashMap$_literal([\"s\", 1, \"ms\", 0.001], t1, t2), \"ms\", P.LinkedHashMap_LinkedHashMap$_literal([\"s\", 1000, \"ms\", 1], t1, t2), \"Hz\", P.LinkedHashMap_LinkedHashMap$_literal([\"Hz\", 1, \"kHz\", 1000], t1, t2), \"kHz\", P.LinkedHashMap_LinkedHashMap$_literal([\"Hz\", 0.001, \"kHz\", 1], t1, t2), \"dpi\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 1, \"dpcm\", 2.54, \"dppx\", 96], t1, t2), \"dpcm\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 0.39370078740157477, \"dpcm\", 1, \"dppx\", 37.79527559055118], t1, t2), \"dppx\", P.LinkedHashMap_LinkedHashMap$_literal([\"dpi\", 0.010416666666666666, \"dpcm\", 0.026458333333333334, \"dppx\", 1], t1, t2)], t1, H.findType(\"Map<String*,num*>*\"));\n    });\n    _lazyOld($, \"global11\", \"$get$global11\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_isSuperselector0(), $.$get$_simpleSelectors0(), $.$get$_parse0().withName$1(\"selector-parse\"), $.$get$_nest0().withName$1(\"selector-nest\"), $.$get$_append1().withName$1(\"selector-append\"), $.$get$_extend0().withName$1(\"selector-extend\"), $.$get$_replace0().withName$1(\"selector-replace\"), $.$get$_unify0().withName$1(\"selector-unify\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module9\", \"$get$module9\", function() {\n      return Q.BuiltInModule$0(\"selector\", H.setRuntimeTypeInfo([$.$get$_isSuperselector0(), $.$get$_simpleSelectors0(), $.$get$_parse0(), $.$get$_nest0(), $.$get$_append1(), $.$get$_extend0(), $.$get$_replace0(), $.$get$_unify0()], type$.JSArray_legacy_BuiltInCallable_2), null, null, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_nest0\", \"$get$_nest0\", function() {\n      return T._function7(\"nest\", \"$selectors...\", new T.closure128());\n    });\n    _lazyOld($, \"_append2\", \"$get$_append1\", function() {\n      return T._function7(\"append\", \"$selectors...\", new T.closure127());\n    });\n    _lazyOld($, \"_extend0\", \"$get$_extend0\", function() {\n      return T._function7(\"extend\", \"$selector, $extendee, $extender\", new T.closure126());\n    });\n    _lazyOld($, \"_replace0\", \"$get$_replace0\", function() {\n      return T._function7(\"replace\", \"$selector, $original, $replacement\", new T.closure125());\n    });\n    _lazyOld($, \"_unify0\", \"$get$_unify0\", function() {\n      return T._function7(\"unify\", \"$selector1, $selector2\", new T.closure124());\n    });\n    _lazyOld($, \"_isSuperselector0\", \"$get$_isSuperselector0\", function() {\n      return T._function7(\"is-superselector\", \"$super, $sub\", new T.closure131());\n    });\n    _lazyOld($, \"_simpleSelectors0\", \"$get$_simpleSelectors0\", function() {\n      return T._function7(\"simple-selectors\", \"$selector\", new T.closure130());\n    });\n    _lazyOld($, \"_parse0\", \"$get$_parse0\", function() {\n      return T._function7(\"parse\", \"$selector\", new T.closure129());\n    });\n    _lazyOld($, \"_random2\", \"$get$_random1\", function() {\n      return P.Random_Random();\n    });\n    _lazyOld($, \"_previousUniqueId0\", \"$get$_previousUniqueId0\", function() {\n      return $.$get$_random1().nextInt$1(H._asIntS(P.pow(36, 6)));\n    });\n    _lazyOld($, \"global12\", \"$get$global12\", function() {\n      return P.UnmodifiableListView$(H.setRuntimeTypeInfo([$.$get$_unquote0(), $.$get$_quote0(), $.$get$_toUpperCase0(), $.$get$_toLowerCase0(), $.$get$_uniqueId0(), $.$get$_length1().withName$1(\"str-length\"), $.$get$_insert0().withName$1(\"str-insert\"), $.$get$_index1().withName$1(\"str-index\"), $.$get$_slice0().withName$1(\"str-slice\")], type$.JSArray_legacy_BuiltInCallable_2), type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"module10\", \"$get$module10\", function() {\n      return Q.BuiltInModule$0(\"string\", H.setRuntimeTypeInfo([$.$get$_unquote0(), $.$get$_quote0(), $.$get$_toUpperCase0(), $.$get$_toLowerCase0(), $.$get$_length1(), $.$get$_insert0(), $.$get$_index1(), $.$get$_slice0(), $.$get$_uniqueId0()], type$.JSArray_legacy_BuiltInCallable_2), null, null, type$.legacy_BuiltInCallable_2);\n    });\n    _lazyOld($, \"_unquote0\", \"$get$_unquote0\", function() {\n      return D._function6(\"unquote\", \"$string\", new D.closure123());\n    });\n    _lazyOld($, \"_quote0\", \"$get$_quote0\", function() {\n      return D._function6(\"quote\", \"$string\", new D.closure122());\n    });\n    _lazyOld($, \"_length2\", \"$get$_length1\", function() {\n      return D._function6(\"length\", \"$string\", new D.closure118());\n    });\n    _lazyOld($, \"_insert0\", \"$get$_insert0\", function() {\n      return D._function6(\"insert\", \"$string, $insert, $index\", new D.closure117());\n    });\n    _lazyOld($, \"_index2\", \"$get$_index1\", function() {\n      return D._function6(\"index\", \"$string, $substring\", new D.closure116());\n    });\n    _lazyOld($, \"_slice0\", \"$get$_slice0\", function() {\n      return D._function6(\"slice\", \"$string, $start-at, $end-at: -1\", new D.closure115());\n    });\n    _lazyOld($, \"_toUpperCase0\", \"$get$_toUpperCase0\", function() {\n      return D._function6(\"to-upper-case\", \"$string\", new D.closure121());\n    });\n    _lazyOld($, \"_toLowerCase0\", \"$get$_toLowerCase0\", function() {\n      return D._function6(\"to-lower-case\", \"$string\", new D.closure120());\n    });\n    _lazyOld($, \"_uniqueId0\", \"$get$_uniqueId0\", function() {\n      return D._function6(\"unique-id\", \"\", new D.closure119());\n    });\n    _lazyOld($, \"stringConstructor\", \"$get$stringConstructor\", function() {\n      return B.createClass(\"SassString\", new D.closure228(), P.LinkedHashMap_LinkedHashMap$_literal([\"getValue\", new D.closure229(), \"setValue\", new D.closure230(), \"toString\", new D.closure231()], type$.legacy_String, type$.legacy_Function));\n    });\n    _lazyOld($, \"_emptyQuoted0\", \"$get$_emptyQuoted0\", function() {\n      return D.SassString$0(\"\", true);\n    });\n    _lazyOld($, \"_emptyUnquoted0\", \"$get$_emptyUnquoted0\", function() {\n      return D.SassString$0(\"\", false);\n    });\n    _lazyOld($, \"_jsThrow\", \"$get$_jsThrow\", function() {\n      return new self.Function(\"error\", \"throw error;\");\n    });\n    _lazyOld($, \"_isUndefined\", \"$get$_isUndefined\", function() {\n      return new self.Function(\"value\", \"return value === undefined;\");\n    });\n    _lazyOld($, \"_jsInstanceOf\", \"$get$_jsInstanceOf\", function() {\n      return new self.Function(\"value\", \"type\", \"return value instanceof type;\");\n    });\n    _lazyOld($, \"_noSourceUrl0\", \"$get$_noSourceUrl0\", function() {\n      return P.Uri_parse(\"-\");\n    });\n  })();\n  (function nativeSupport() {\n    !function() {\n      var intern = function(s) {\n        var o = {};\n        o[s] = 1;\n        return Object.keys(hunkHelpers.convertToFastObject(o))[0];\n      };\n      init.getIsolateTag = function(name) {\n        return intern(\"___dart_\" + name + init.isolateTag);\n      };\n      var tableProperty = \"___dart_isolate_tags_\";\n      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));\n      var rootProperty = \"_ZxYxX\";\n      for (var i = 0;; i++) {\n        var property = intern(rootProperty + \"_\" + i + \"_\");\n        if (!(property in usedProperties)) {\n          usedProperties[property] = 1;\n          init.isolateTag = property;\n          break;\n        }\n      }\n      init.dispatchPropertyName = init.getIsolateTag(\"dispatch_record\");\n    }();\n    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: J.Interceptor, DataView: H.NativeTypedData, ArrayBufferView: H.NativeTypedData, Float32Array: H.NativeFloat32List, Float64Array: H.NativeFloat64List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List});\n    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, DataView: true, ArrayBufferView: false, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false});\n    H.NativeTypedArray.$nativeSuperclassTag = \"ArrayBufferView\";\n    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = \"ArrayBufferView\";\n    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = \"ArrayBufferView\";\n    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = \"ArrayBufferView\";\n    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = \"ArrayBufferView\";\n    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = \"ArrayBufferView\";\n    H.NativeTypedArrayOfInt.$nativeSuperclassTag = \"ArrayBufferView\";\n  })();\n  Function.prototype.call$2 = function(a, b) {\n    return this(a, b);\n  };\n  Function.prototype.call$1 = function(a) {\n    return this(a);\n  };\n  Function.prototype.call$0 = function() {\n    return this();\n  };\n  Function.prototype.call$3$1 = function(a) {\n    return this(a);\n  };\n  Function.prototype.call$2$1 = function(a) {\n    return this(a);\n  };\n  Function.prototype.call$1$1 = function(a) {\n    return this(a);\n  };\n  Function.prototype.call$3 = function(a, b, c) {\n    return this(a, b, c);\n  };\n  Function.prototype.call$4 = function(a, b, c, d) {\n    return this(a, b, c, d);\n  };\n  Function.prototype.call$3$3 = function(a, b, c) {\n    return this(a, b, c);\n  };\n  Function.prototype.call$2$2 = function(a, b) {\n    return this(a, b);\n  };\n  Function.prototype.call$6 = function(a, b, c, d, e, f) {\n    return this(a, b, c, d, e, f);\n  };\n  Function.prototype.call$5 = function(a, b, c, d, e) {\n    return this(a, b, c, d, e);\n  };\n  Function.prototype.call$1$3 = function(a, b, c) {\n    return this(a, b, c);\n  };\n  Function.prototype.call$2$3 = function(a, b, c) {\n    return this(a, b, c);\n  };\n  Function.prototype.call$1$2 = function(a, b) {\n    return this(a, b);\n  };\n  Function.prototype.call$1$0 = function() {\n    return this();\n  };\n  convertAllToFastObject(holders);\n  convertToFastObject($);\n  (function(callback) {\n    if (typeof document === \"undefined\") {\n      callback(null);\n      return;\n    }\n    if (typeof document.currentScript != 'undefined') {\n      callback(document.currentScript);\n      return;\n    }\n    var scripts = document.scripts;\n    function onLoad(event) {\n      for (var i = 0; i < scripts.length; ++i)\n        scripts[i].removeEventListener(\"load\", onLoad, false);\n      callback(event.target);\n    }\n    for (var i = 0; i < scripts.length; ++i)\n      scripts[i].addEventListener(\"load\", onLoad, false);\n  })(function(currentScript) {\n    init.currentScript = currentScript;\n    if (typeof dartMainRunner === \"function\")\n      dartMainRunner(R.main0, []);\n    else\n      R.main0([]);\n  });\n})();\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\"), \"/\", \"/index.js\"))\n\n//# sourceURL=webpack:///./node_modules/sass/sass.dart.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ })

/******/ });